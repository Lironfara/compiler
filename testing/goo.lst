     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "display-sexpr"
   157 000000ED 0D00000000000000        	dq 13
   158 000000F5 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   159 000000FD 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   160                                  	; L_constants + 258:
   161 00000102 03                      	db T_string	; "write-char"
   162 00000103 0A00000000000000        	dq 10
   163 0000010B 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   164 00000113 6172                    	db 0x61, 0x72
   165                                  	; L_constants + 277:
   166 00000115 03                      	db T_string	; "car"
   167 00000116 0300000000000000        	dq 3
   168 0000011E 636172                  	db 0x63, 0x61, 0x72
   169                                  	; L_constants + 289:
   170 00000121 03                      	db T_string	; "cdr"
   171 00000122 0300000000000000        	dq 3
   172 0000012A 636472                  	db 0x63, 0x64, 0x72
   173                                  	; L_constants + 301:
   174 0000012D 03                      	db T_string	; "string-length"
   175 0000012E 0D00000000000000        	dq 13
   176 00000136 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   177 0000013E 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   178                                  	; L_constants + 323:
   179 00000143 03                      	db T_string	; "vector-length"
   180 00000144 0D00000000000000        	dq 13
   181 0000014C 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   182 00000154 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   183                                  	; L_constants + 345:
   184 00000159 03                      	db T_string	; "real->integer"
   185 0000015A 0D00000000000000        	dq 13
   186 00000162 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   187 0000016A 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   188                                  	; L_constants + 367:
   189 0000016F 03                      	db T_string	; "exit"
   190 00000170 0400000000000000        	dq 4
   191 00000178 65786974                	db 0x65, 0x78, 0x69, 0x74
   192                                  	; L_constants + 380:
   193 0000017C 03                      	db T_string	; "integer->real"
   194 0000017D 0D00000000000000        	dq 13
   195 00000185 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   196 0000018D 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   197                                  	; L_constants + 402:
   198 00000192 03                      	db T_string	; "fraction->real"
   199 00000193 0E00000000000000        	dq 14
   200 0000019B 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   201 000001A3 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   202                                  	; L_constants + 425:
   203 000001A9 03                      	db T_string	; "char->integer"
   204 000001AA 0D00000000000000        	dq 13
   205 000001B2 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   206 000001BA 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   207                                  	; L_constants + 447:
   208 000001BF 03                      	db T_string	; "integer->char"
   209 000001C0 0D00000000000000        	dq 13
   210 000001C8 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   211 000001D0 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   212                                  	; L_constants + 469:
   213 000001D5 03                      	db T_string	; "trng"
   214 000001D6 0400000000000000        	dq 4
   215 000001DE 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   216                                  	; L_constants + 482:
   217 000001E2 03                      	db T_string	; "zero?"
   218 000001E3 0500000000000000        	dq 5
   219 000001EB 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "integer?"
   222 000001F1 0800000000000000        	dq 8
   223 000001F9 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   224                                  	; L_constants + 513:
   225 00000201 03                      	db T_string	; "__bin-apply"
   226 00000202 0B00000000000000        	dq 11
   227 0000020A 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   228 00000212 706C79                  	db 0x70, 0x6C, 0x79
   229                                  	; L_constants + 533:
   230 00000215 03                      	db T_string	; "__bin-add-rr"
   231 00000216 0C00000000000000        	dq 12
   232 0000021E 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   233 00000226 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   234                                  	; L_constants + 554:
   235 0000022A 03                      	db T_string	; "__bin-sub-rr"
   236 0000022B 0C00000000000000        	dq 12
   237 00000233 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   238 0000023B 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   239                                  	; L_constants + 575:
   240 0000023F 03                      	db T_string	; "__bin-mul-rr"
   241 00000240 0C00000000000000        	dq 12
   242 00000248 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   243 00000250 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   244                                  	; L_constants + 596:
   245 00000254 03                      	db T_string	; "__bin-div-rr"
   246 00000255 0C00000000000000        	dq 12
   247 0000025D 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   248 00000265 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   249                                  	; L_constants + 617:
   250 00000269 03                      	db T_string	; "__bin-add-qq"
   251 0000026A 0C00000000000000        	dq 12
   252 00000272 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   253 0000027A 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   254                                  	; L_constants + 638:
   255 0000027E 03                      	db T_string	; "__bin-sub-qq"
   256 0000027F 0C00000000000000        	dq 12
   257 00000287 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   258 0000028F 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   259                                  	; L_constants + 659:
   260 00000293 03                      	db T_string	; "__bin-mul-qq"
   261 00000294 0C00000000000000        	dq 12
   262 0000029C 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   263 000002A4 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   264                                  	; L_constants + 680:
   265 000002A8 03                      	db T_string	; "__bin-div-qq"
   266 000002A9 0C00000000000000        	dq 12
   267 000002B1 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   268 000002B9 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   269                                  	; L_constants + 701:
   270 000002BD 03                      	db T_string	; "__bin-add-zz"
   271 000002BE 0C00000000000000        	dq 12
   272 000002C6 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   273 000002CE 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   274                                  	; L_constants + 722:
   275 000002D2 03                      	db T_string	; "__bin-sub-zz"
   276 000002D3 0C00000000000000        	dq 12
   277 000002DB 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   278 000002E3 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   279                                  	; L_constants + 743:
   280 000002E7 03                      	db T_string	; "__bin-mul-zz"
   281 000002E8 0C00000000000000        	dq 12
   282 000002F0 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   283 000002F8 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   284                                  	; L_constants + 764:
   285 000002FC 03                      	db T_string	; "__bin-div-zz"
   286 000002FD 0C00000000000000        	dq 12
   287 00000305 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   288 0000030D 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   289                                  	; L_constants + 785:
   290 00000311 03                      	db T_string	; "error"
   291 00000312 0500000000000000        	dq 5
   292 0000031A 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "__bin-less-than-rr"
   295 00000320 1200000000000000        	dq 18
   296 00000328 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   297 00000330 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   298 00000338 7272                    	db 0x72, 0x72
   299                                  	; L_constants + 826:
   300 0000033A 03                      	db T_string	; "__bin-less-than-qq"
   301 0000033B 1200000000000000        	dq 18
   302 00000343 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   303 0000034B 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   304 00000353 7171                    	db 0x71, 0x71
   305                                  	; L_constants + 853:
   306 00000355 03                      	db T_string	; "__bin-less-than-zz"
   307 00000356 1200000000000000        	dq 18
   308 0000035E 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   309 00000366 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   310 0000036E 7A7A                    	db 0x7A, 0x7A
   311                                  	; L_constants + 880:
   312 00000370 03                      	db T_string	; "__bin-equal-rr"
   313 00000371 0E00000000000000        	dq 14
   314 00000379 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   315 00000381 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   316                                  	; L_constants + 903:
   317 00000387 03                      	db T_string	; "__bin-equal-qq"
   318 00000388 0E00000000000000        	dq 14
   319 00000390 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   320 00000398 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   321                                  	; L_constants + 926:
   322 0000039E 03                      	db T_string	; "__bin-equal-zz"
   323 0000039F 0E00000000000000        	dq 14
   324 000003A7 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   325 000003AF 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   326                                  	; L_constants + 949:
   327 000003B5 03                      	db T_string	; "quotient"
   328 000003B6 0800000000000000        	dq 8
   329 000003BE 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   330                                  	; L_constants + 966:
   331 000003C6 03                      	db T_string	; "remainder"
   332 000003C7 0900000000000000        	dq 9
   333 000003CF 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   334 000003D7 72                      	db 0x72
   335                                  	; L_constants + 984:
   336 000003D8 03                      	db T_string	; "set-car!"
   337 000003D9 0800000000000000        	dq 8
   338 000003E1 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   339                                  	; L_constants + 1001:
   340 000003E9 03                      	db T_string	; "set-cdr!"
   341 000003EA 0800000000000000        	dq 8
   342 000003F2 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   343                                  	; L_constants + 1018:
   344 000003FA 03                      	db T_string	; "string-ref"
   345 000003FB 0A00000000000000        	dq 10
   346 00000403 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   347 0000040B 6566                    	db 0x65, 0x66
   348                                  	; L_constants + 1037:
   349 0000040D 03                      	db T_string	; "vector-ref"
   350 0000040E 0A00000000000000        	dq 10
   351 00000416 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   352 0000041E 6566                    	db 0x65, 0x66
   353                                  	; L_constants + 1056:
   354 00000420 03                      	db T_string	; "vector-set!"
   355 00000421 0B00000000000000        	dq 11
   356 00000429 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   357 00000431 657421                  	db 0x65, 0x74, 0x21
   358                                  	; L_constants + 1076:
   359 00000434 03                      	db T_string	; "string-set!"
   360 00000435 0B00000000000000        	dq 11
   361 0000043D 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   362 00000445 657421                  	db 0x65, 0x74, 0x21
   363                                  	; L_constants + 1096:
   364 00000448 03                      	db T_string	; "make-vector"
   365 00000449 0B00000000000000        	dq 11
   366 00000451 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   367 00000459 746F72                  	db 0x74, 0x6F, 0x72
   368                                  	; L_constants + 1116:
   369 0000045C 03                      	db T_string	; "make-string"
   370 0000045D 0B00000000000000        	dq 11
   371 00000465 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   372 0000046D 696E67                  	db 0x69, 0x6E, 0x67
   373                                  	; L_constants + 1136:
   374 00000470 03                      	db T_string	; "numerator"
   375 00000471 0900000000000000        	dq 9
   376 00000479 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   377 00000481 72                      	db 0x72
   378                                  	; L_constants + 1154:
   379 00000482 03                      	db T_string	; "denominator"
   380 00000483 0B00000000000000        	dq 11
   381 0000048B 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   382 00000493 746F72                  	db 0x74, 0x6F, 0x72
   383                                  	; L_constants + 1174:
   384 00000496 03                      	db T_string	; "eq?"
   385 00000497 0300000000000000        	dq 3
   386 0000049F 65713F                  	db 0x65, 0x71, 0x3F
   387                                  	; L_constants + 1186:
   388 000004A2 03                      	db T_string	; "__integer-to-fracti...
   389 000004A3 1500000000000000        	dq 21
   390 000004AB 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   391 000004B3 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   392 000004BB 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   393                                  	; L_constants + 1216:
   394 000004C0 03                      	db T_string	; "logand"
   395 000004C1 0600000000000000        	dq 6
   396 000004C9 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   397                                  	; L_constants + 1231:
   398 000004CF 03                      	db T_string	; "logor"
   399 000004D0 0500000000000000        	dq 5
   400 000004D8 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logxor"
   403 000004DE 0600000000000000        	dq 6
   404 000004E6 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   405                                  	; L_constants + 1260:
   406 000004EC 03                      	db T_string	; "lognot"
   407 000004ED 0600000000000000        	dq 6
   408 000004F5 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   409                                  	; L_constants + 1275:
   410 000004FB 03                      	db T_string	; "ash"
   411 000004FC 0300000000000000        	dq 3
   412 00000504 617368                  	db 0x61, 0x73, 0x68
   413                                  	; L_constants + 1287:
   414 00000507 03                      	db T_string	; "symbol?"
   415 00000508 0700000000000000        	dq 7
   416 00000510 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   417                                  	; L_constants + 1303:
   418 00000517 03                      	db T_string	; "uninterned-symbol?"
   419 00000518 1200000000000000        	dq 18
   420 00000520 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   421 00000528 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   422 00000530 6C3F                    	db 0x6C, 0x3F
   423                                  	; L_constants + 1330:
   424 00000532 03                      	db T_string	; "gensym?"
   425 00000533 0700000000000000        	dq 7
   426 0000053B 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   427                                  	; L_constants + 1346:
   428 00000542 03                      	db T_string	; "gensym"
   429 00000543 0600000000000000        	dq 6
   430 0000054B 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   431                                  	; L_constants + 1361:
   432 00000551 03                      	db T_string	; "frame"
   433 00000552 0500000000000000        	dq 5
   434 0000055A 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "break"
   437 00000560 0500000000000000        	dq 5
   438 00000568 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "boolean-false?"
   441 0000056E 0E00000000000000        	dq 14
   442 00000576 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   443 0000057E 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   444                                  	; L_constants + 1412:
   445 00000584 03                      	db T_string	; "boolean-true?"
   446 00000585 0D00000000000000        	dq 13
   447 0000058D 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   448 00000595 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   449                                  	; L_constants + 1434:
   450 0000059A 03                      	db T_string	; "primitive?"
   451 0000059B 0A00000000000000        	dq 10
   452 000005A3 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   453 000005AB 653F                    	db 0x65, 0x3F
   454                                  	; L_constants + 1453:
   455 000005AD 03                      	db T_string	; "length"
   456 000005AE 0600000000000000        	dq 6
   457 000005B6 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   458                                  	; L_constants + 1468:
   459 000005BC 03                      	db T_string	; "make-list"
   460 000005BD 0900000000000000        	dq 9
   461 000005C5 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   462 000005CD 74                      	db 0x74
   463                                  	; L_constants + 1486:
   464 000005CE 03                      	db T_string	; "return"
   465 000005CF 0600000000000000        	dq 6
   466 000005D7 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   467                                  	; L_constants + 1501:
   468 000005DD 03                      	db T_string	; "caar"
   469 000005DE 0400000000000000        	dq 4
   470 000005E6 63616172                	db 0x63, 0x61, 0x61, 0x72
   471                                  	; L_constants + 1514:
   472 000005EA 03                      	db T_string	; "cadr"
   473 000005EB 0400000000000000        	dq 4
   474 000005F3 63616472                	db 0x63, 0x61, 0x64, 0x72
   475                                  	; L_constants + 1527:
   476 000005F7 03                      	db T_string	; "cdar"
   477 000005F8 0400000000000000        	dq 4
   478 00000600 63646172                	db 0x63, 0x64, 0x61, 0x72
   479                                  	; L_constants + 1540:
   480 00000604 03                      	db T_string	; "cddr"
   481 00000605 0400000000000000        	dq 4
   482 0000060D 63646472                	db 0x63, 0x64, 0x64, 0x72
   483                                  	; L_constants + 1553:
   484 00000611 03                      	db T_string	; "caaar"
   485 00000612 0500000000000000        	dq 5
   486 0000061A 6361616172              	db 0x63, 0x61, 0x61, 0x61, 0x72
   487                                  	; L_constants + 1567:
   488 0000061F 03                      	db T_string	; "caadr"
   489 00000620 0500000000000000        	dq 5
   490 00000628 6361616472              	db 0x63, 0x61, 0x61, 0x64, 0x72
   491                                  	; L_constants + 1581:
   492 0000062D 03                      	db T_string	; "cadar"
   493 0000062E 0500000000000000        	dq 5
   494 00000636 6361646172              	db 0x63, 0x61, 0x64, 0x61, 0x72
   495                                  	; L_constants + 1595:
   496 0000063B 03                      	db T_string	; "caddr"
   497 0000063C 0500000000000000        	dq 5
   498 00000644 6361646472              	db 0x63, 0x61, 0x64, 0x64, 0x72
   499                                  	; L_constants + 1609:
   500 00000649 03                      	db T_string	; "cdaar"
   501 0000064A 0500000000000000        	dq 5
   502 00000652 6364616172              	db 0x63, 0x64, 0x61, 0x61, 0x72
   503                                  	; L_constants + 1623:
   504 00000657 03                      	db T_string	; "cdadr"
   505 00000658 0500000000000000        	dq 5
   506 00000660 6364616472              	db 0x63, 0x64, 0x61, 0x64, 0x72
   507                                  	; L_constants + 1637:
   508 00000665 03                      	db T_string	; "cddar"
   509 00000666 0500000000000000        	dq 5
   510 0000066E 6364646172              	db 0x63, 0x64, 0x64, 0x61, 0x72
   511                                  	; L_constants + 1651:
   512 00000673 03                      	db T_string	; "cdddr"
   513 00000674 0500000000000000        	dq 5
   514 0000067C 6364646472              	db 0x63, 0x64, 0x64, 0x64, 0x72
   515                                  	; L_constants + 1665:
   516 00000681 03                      	db T_string	; "caaaar"
   517 00000682 0600000000000000        	dq 6
   518 0000068A 636161616172            	db 0x63, 0x61, 0x61, 0x61, 0x61, 0x72
   519                                  	; L_constants + 1680:
   520 00000690 03                      	db T_string	; "caaadr"
   521 00000691 0600000000000000        	dq 6
   522 00000699 636161616472            	db 0x63, 0x61, 0x61, 0x61, 0x64, 0x72
   523                                  	; L_constants + 1695:
   524 0000069F 03                      	db T_string	; "caadar"
   525 000006A0 0600000000000000        	dq 6
   526 000006A8 636161646172            	db 0x63, 0x61, 0x61, 0x64, 0x61, 0x72
   527                                  	; L_constants + 1710:
   528 000006AE 03                      	db T_string	; "caaddr"
   529 000006AF 0600000000000000        	dq 6
   530 000006B7 636161646472            	db 0x63, 0x61, 0x61, 0x64, 0x64, 0x72
   531                                  	; L_constants + 1725:
   532 000006BD 03                      	db T_string	; "cadaar"
   533 000006BE 0600000000000000        	dq 6
   534 000006C6 636164616172            	db 0x63, 0x61, 0x64, 0x61, 0x61, 0x72
   535                                  	; L_constants + 1740:
   536 000006CC 03                      	db T_string	; "cadadr"
   537 000006CD 0600000000000000        	dq 6
   538 000006D5 636164616472            	db 0x63, 0x61, 0x64, 0x61, 0x64, 0x72
   539                                  	; L_constants + 1755:
   540 000006DB 03                      	db T_string	; "caddar"
   541 000006DC 0600000000000000        	dq 6
   542 000006E4 636164646172            	db 0x63, 0x61, 0x64, 0x64, 0x61, 0x72
   543                                  	; L_constants + 1770:
   544 000006EA 03                      	db T_string	; "cadddr"
   545 000006EB 0600000000000000        	dq 6
   546 000006F3 636164646472            	db 0x63, 0x61, 0x64, 0x64, 0x64, 0x72
   547                                  	; L_constants + 1785:
   548 000006F9 03                      	db T_string	; "cdaaar"
   549 000006FA 0600000000000000        	dq 6
   550 00000702 636461616172            	db 0x63, 0x64, 0x61, 0x61, 0x61, 0x72
   551                                  	; L_constants + 1800:
   552 00000708 03                      	db T_string	; "cdaadr"
   553 00000709 0600000000000000        	dq 6
   554 00000711 636461616472            	db 0x63, 0x64, 0x61, 0x61, 0x64, 0x72
   555                                  	; L_constants + 1815:
   556 00000717 03                      	db T_string	; "cdadar"
   557 00000718 0600000000000000        	dq 6
   558 00000720 636461646172            	db 0x63, 0x64, 0x61, 0x64, 0x61, 0x72
   559                                  	; L_constants + 1830:
   560 00000726 03                      	db T_string	; "cdaddr"
   561 00000727 0600000000000000        	dq 6
   562 0000072F 636461646472            	db 0x63, 0x64, 0x61, 0x64, 0x64, 0x72
   563                                  	; L_constants + 1845:
   564 00000735 03                      	db T_string	; "cddaar"
   565 00000736 0600000000000000        	dq 6
   566 0000073E 636464616172            	db 0x63, 0x64, 0x64, 0x61, 0x61, 0x72
   567                                  	; L_constants + 1860:
   568 00000744 03                      	db T_string	; "cddadr"
   569 00000745 0600000000000000        	dq 6
   570 0000074D 636464616472            	db 0x63, 0x64, 0x64, 0x61, 0x64, 0x72
   571                                  	; L_constants + 1875:
   572 00000753 03                      	db T_string	; "cdddar"
   573 00000754 0600000000000000        	dq 6
   574 0000075C 636464646172            	db 0x63, 0x64, 0x64, 0x64, 0x61, 0x72
   575                                  	; L_constants + 1890:
   576 00000762 03                      	db T_string	; "cddddr"
   577 00000763 0600000000000000        	dq 6
   578 0000076B 636464646472            	db 0x63, 0x64, 0x64, 0x64, 0x64, 0x72
   579                                  	; L_constants + 1905:
   580 00000771 03                      	db T_string	; "list?"
   581 00000772 0500000000000000        	dq 5
   582 0000077A 6C6973743F              	db 0x6C, 0x69, 0x73, 0x74, 0x3F
   583                                  	; L_constants + 1919:
   584 0000077F 03                      	db T_string	; "list"
   585 00000780 0400000000000000        	dq 4
   586 00000788 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   587                                  	; L_constants + 1932:
   588 0000078C 03                      	db T_string	; "not"
   589 0000078D 0300000000000000        	dq 3
   590 00000795 6E6F74                  	db 0x6E, 0x6F, 0x74
   591                                  	; L_constants + 1944:
   592 00000798 03                      	db T_string	; "rational?"
   593 00000799 0900000000000000        	dq 9
   594 000007A1 726174696F6E616C        	db 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x61, 0x6C
   595 000007A9 3F                      	db 0x3F
   596                                  	; L_constants + 1962:
   597 000007AA 03                      	db T_string	; "list*"
   598 000007AB 0500000000000000        	dq 5
   599 000007B3 6C6973742A              	db 0x6C, 0x69, 0x73, 0x74, 0x2A
   600                                  	; L_constants + 1976:
   601 000007B8 03                      	db T_string	; "whatever"
   602 000007B9 0800000000000000        	dq 8
   603 000007C1 7768617465766572        	db 0x77, 0x68, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72
   604                                  	; L_constants + 1993:
   605 000007C9 41                      	db T_interned_symbol	; whatever
   606 000007CA [B807000000000000]      	dq L_constants + 1976
   607                                  	; L_constants + 2002:
   608 000007D2 03                      	db T_string	; "apply"
   609 000007D3 0500000000000000        	dq 5
   610 000007DB 6170706C79              	db 0x61, 0x70, 0x70, 0x6C, 0x79
   611                                  	; L_constants + 2016:
   612 000007E0 03                      	db T_string	; "ormap"
   613 000007E1 0500000000000000        	dq 5
   614 000007E9 6F726D6170              	db 0x6F, 0x72, 0x6D, 0x61, 0x70
   615                                  	; L_constants + 2030:
   616 000007EE 03                      	db T_string	; "map"
   617 000007EF 0300000000000000        	dq 3
   618 000007F7 6D6170                  	db 0x6D, 0x61, 0x70
   619                                  	; L_constants + 2042:
   620 000007FA 03                      	db T_string	; "andmap"
   621 000007FB 0600000000000000        	dq 6
   622 00000803 616E646D6170            	db 0x61, 0x6E, 0x64, 0x6D, 0x61, 0x70
   623                                  	; L_constants + 2057:
   624 00000809 03                      	db T_string	; "reverse"
   625 0000080A 0700000000000000        	dq 7
   626 00000812 72657665727365          	db 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   627                                  	; L_constants + 2073:
   628 00000819 03                      	db T_string	; "fold-left"
   629 0000081A 0900000000000000        	dq 9
   630 00000822 666F6C642D6C6566        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x6C, 0x65, 0x66
   631 0000082A 74                      	db 0x74
   632                                  	; L_constants + 2091:
   633 0000082B 03                      	db T_string	; "append"
   634 0000082C 0600000000000000        	dq 6
   635 00000834 617070656E64            	db 0x61, 0x70, 0x70, 0x65, 0x6E, 0x64
   636                                  	; L_constants + 2106:
   637 0000083A 03                      	db T_string	; "fold-right"
   638 0000083B 0A00000000000000        	dq 10
   639 00000843 666F6C642D726967        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x72, 0x69, 0x67
   640 0000084B 6874                    	db 0x68, 0x74
   641                                  	; L_constants + 2125:
   642 0000084D 03                      	db T_string	; "+"
   643 0000084E 0100000000000000        	dq 1
   644 00000856 2B                      	db 0x2B
   645                                  	; L_constants + 2135:
   646 00000857 11                      	db T_integer	; 0
   647 00000858 0000000000000000        	dq 0
   648                                  	; L_constants + 2144:
   649 00000860 03                      	db T_string	; "__bin_integer_to_fr...
   650 00000861 1900000000000000        	dq 25
   651 00000869 5F5F62696E5F696E        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x5F, 0x69, 0x6E
   652 00000871 74656765725F746F        	db 0x74, 0x65, 0x67, 0x65, 0x72, 0x5F, 0x74, 0x6F
   653 00000879 5F6672616374696F        	db 0x5F, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F
   654 00000881 6E                      	db 0x6E
   655                                  	; L_constants + 2178:
   656 00000882 41                      	db T_interned_symbol	; +
   657 00000883 [4D08000000000000]      	dq L_constants + 2125
   658                                  	; L_constants + 2187:
   659 0000088B 03                      	db T_string	; "all arguments need ...
   660 0000088C 2000000000000000        	dq 32
   661 00000894 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
   662 0000089C 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
   663 000008A4 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   664 000008AC 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   665                                  	; L_constants + 2228:
   666 000008B4 03                      	db T_string	; "-"
   667 000008B5 0100000000000000        	dq 1
   668 000008BD 2D                      	db 0x2D
   669                                  	; L_constants + 2238:
   670 000008BE 03                      	db T_string	; "real"
   671 000008BF 0400000000000000        	dq 4
   672 000008C7 7265616C                	db 0x72, 0x65, 0x61, 0x6C
   673                                  	; L_constants + 2251:
   674 000008CB 41                      	db T_interned_symbol	; -
   675 000008CC [B408000000000000]      	dq L_constants + 2228
   676                                  	; L_constants + 2260:
   677 000008D4 03                      	db T_string	; "*"
   678 000008D5 0100000000000000        	dq 1
   679 000008DD 2A                      	db 0x2A
   680                                  	; L_constants + 2270:
   681 000008DE 11                      	db T_integer	; 1
   682 000008DF 0100000000000000        	dq 1
   683                                  	; L_constants + 2279:
   684 000008E7 41                      	db T_interned_symbol	; *
   685 000008E8 [D408000000000000]      	dq L_constants + 2260
   686                                  	; L_constants + 2288:
   687 000008F0 03                      	db T_string	; "/"
   688 000008F1 0100000000000000        	dq 1
   689 000008F9 2F                      	db 0x2F
   690                                  	; L_constants + 2298:
   691 000008FA 41                      	db T_interned_symbol	; /
   692 000008FB [F008000000000000]      	dq L_constants + 2288
   693                                  	; L_constants + 2307:
   694 00000903 03                      	db T_string	; "fact"
   695 00000904 0400000000000000        	dq 4
   696 0000090C 66616374                	db 0x66, 0x61, 0x63, 0x74
   697                                  	; L_constants + 2320:
   698 00000910 03                      	db T_string	; "<"
   699 00000911 0100000000000000        	dq 1
   700 00000919 3C                      	db 0x3C
   701                                  	; L_constants + 2330:
   702 0000091A 03                      	db T_string	; "<="
   703 0000091B 0200000000000000        	dq 2
   704 00000923 3C3D                    	db 0x3C, 0x3D
   705                                  	; L_constants + 2341:
   706 00000925 03                      	db T_string	; ">"
   707 00000926 0100000000000000        	dq 1
   708 0000092E 3E                      	db 0x3E
   709                                  	; L_constants + 2351:
   710 0000092F 03                      	db T_string	; ">="
   711 00000930 0200000000000000        	dq 2
   712 00000938 3E3D                    	db 0x3E, 0x3D
   713                                  	; L_constants + 2362:
   714 0000093A 03                      	db T_string	; "="
   715 0000093B 0100000000000000        	dq 1
   716 00000943 3D                      	db 0x3D
   717                                  	; L_constants + 2372:
   718 00000944 03                      	db T_string	; "generic-comparator"
   719 00000945 1200000000000000        	dq 18
   720 0000094D 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   721 00000955 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   722 0000095D 6F72                    	db 0x6F, 0x72
   723                                  	; L_constants + 2399:
   724 0000095F 41                      	db T_interned_symbol	; generic-comparator
   725 00000960 [4409000000000000]      	dq L_constants + 2372
   726                                  	; L_constants + 2408:
   727 00000968 03                      	db T_string	; "all the arguments m...
   728 00000969 2100000000000000        	dq 33
   729 00000971 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   730 00000979 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   731 00000981 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   732 00000989 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   733 00000991 73                      	db 0x73
   734                                  	; L_constants + 2450:
   735 00000992 03                      	db T_string	; "char<?"
   736 00000993 0600000000000000        	dq 6
   737 0000099B 636861723C3F            	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3F
   738                                  	; L_constants + 2465:
   739 000009A1 03                      	db T_string	; "char<=?"
   740 000009A2 0700000000000000        	dq 7
   741 000009AA 636861723C3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3D, 0x3F
   742                                  	; L_constants + 2481:
   743 000009B1 03                      	db T_string	; "char=?"
   744 000009B2 0600000000000000        	dq 6
   745 000009BA 636861723D3F            	db 0x63, 0x68, 0x61, 0x72, 0x3D, 0x3F
   746                                  	; L_constants + 2496:
   747 000009C0 03                      	db T_string	; "char>?"
   748 000009C1 0600000000000000        	dq 6
   749 000009C9 636861723E3F            	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3F
   750                                  	; L_constants + 2511:
   751 000009CF 03                      	db T_string	; "char>=?"
   752 000009D0 0700000000000000        	dq 7
   753 000009D8 636861723E3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3D, 0x3F
   754                                  	; L_constants + 2527:
   755 000009DF 03                      	db T_string	; "char-downcase"
   756 000009E0 0D00000000000000        	dq 13
   757 000009E8 636861722D646F77        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x64, 0x6F, 0x77
   758 000009F0 6E63617365              	db 0x6E, 0x63, 0x61, 0x73, 0x65
   759                                  	; L_constants + 2549:
   760 000009F5 03                      	db T_string	; "char-upcase"
   761 000009F6 0B00000000000000        	dq 11
   762 000009FE 636861722D757063        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x75, 0x70, 0x63
   763 00000A06 617365                  	db 0x61, 0x73, 0x65
   764                                  	; L_constants + 2569:
   765 00000A09 0241                    	db T_char, 0x41	; #\A
   766                                  	; L_constants + 2571:
   767 00000A0B 025A                    	db T_char, 0x5A	; #\Z
   768                                  	; L_constants + 2573:
   769 00000A0D 0261                    	db T_char, 0x61	; #\a
   770                                  	; L_constants + 2575:
   771 00000A0F 027A                    	db T_char, 0x7A	; #\z
   772                                  	; L_constants + 2577:
   773 00000A11 03                      	db T_string	; "char-ci<?"
   774 00000A12 0900000000000000        	dq 9
   775 00000A1A 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   776 00000A22 3F                      	db 0x3F
   777                                  	; L_constants + 2595:
   778 00000A23 03                      	db T_string	; "char-ci<=?"
   779 00000A24 0A00000000000000        	dq 10
   780 00000A2C 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   781 00000A34 3D3F                    	db 0x3D, 0x3F
   782                                  	; L_constants + 2614:
   783 00000A36 03                      	db T_string	; "char-ci=?"
   784 00000A37 0900000000000000        	dq 9
   785 00000A3F 636861722D63693D        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3D
   786 00000A47 3F                      	db 0x3F
   787                                  	; L_constants + 2632:
   788 00000A48 03                      	db T_string	; "char-ci>?"
   789 00000A49 0900000000000000        	dq 9
   790 00000A51 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   791 00000A59 3F                      	db 0x3F
   792                                  	; L_constants + 2650:
   793 00000A5A 03                      	db T_string	; "char-ci>=?"
   794 00000A5B 0A00000000000000        	dq 10
   795 00000A63 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   796 00000A6B 3D3F                    	db 0x3D, 0x3F
   797                                  	; L_constants + 2669:
   798 00000A6D 03                      	db T_string	; "string-downcase"
   799 00000A6E 0F00000000000000        	dq 15
   800 00000A76 737472696E672D64        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x64
   801 00000A7E 6F776E63617365          	db 0x6F, 0x77, 0x6E, 0x63, 0x61, 0x73, 0x65
   802                                  	; L_constants + 2693:
   803 00000A85 03                      	db T_string	; "string-upcase"
   804 00000A86 0D00000000000000        	dq 13
   805 00000A8E 737472696E672D75        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x75
   806 00000A96 7063617365              	db 0x70, 0x63, 0x61, 0x73, 0x65
   807                                  	; L_constants + 2715:
   808 00000A9B 03                      	db T_string	; "list->string"
   809 00000A9C 0C00000000000000        	dq 12
   810 00000AA4 6C6973742D3E7374        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x73, 0x74
   811 00000AAC 72696E67                	db 0x72, 0x69, 0x6E, 0x67
   812                                  	; L_constants + 2736:
   813 00000AB0 03                      	db T_string	; "string->list"
   814 00000AB1 0C00000000000000        	dq 12
   815 00000AB9 737472696E672D3E        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x3E
   816 00000AC1 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   817                                  	; L_constants + 2757:
   818 00000AC5 03                      	db T_string	; "string<?"
   819 00000AC6 0800000000000000        	dq 8
   820 00000ACE 737472696E673C3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3F
   821                                  	; L_constants + 2774:
   822 00000AD6 03                      	db T_string	; "string<=?"
   823 00000AD7 0900000000000000        	dq 9
   824 00000ADF 737472696E673C3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3D
   825 00000AE7 3F                      	db 0x3F
   826                                  	; L_constants + 2792:
   827 00000AE8 03                      	db T_string	; "string=?"
   828 00000AE9 0800000000000000        	dq 8
   829 00000AF1 737472696E673D3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3D, 0x3F
   830                                  	; L_constants + 2809:
   831 00000AF9 03                      	db T_string	; "string>=?"
   832 00000AFA 0900000000000000        	dq 9
   833 00000B02 737472696E673E3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3D
   834 00000B0A 3F                      	db 0x3F
   835                                  	; L_constants + 2827:
   836 00000B0B 03                      	db T_string	; "string>?"
   837 00000B0C 0800000000000000        	dq 8
   838 00000B14 737472696E673E3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3F
   839                                  	; L_constants + 2844:
   840 00000B1C 03                      	db T_string	; "string-ci<?"
   841 00000B1D 0B00000000000000        	dq 11
   842 00000B25 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   843 00000B2D 693C3F                  	db 0x69, 0x3C, 0x3F
   844                                  	; L_constants + 2864:
   845 00000B30 03                      	db T_string	; "string-ci<=?"
   846 00000B31 0C00000000000000        	dq 12
   847 00000B39 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   848 00000B41 693C3D3F                	db 0x69, 0x3C, 0x3D, 0x3F
   849                                  	; L_constants + 2885:
   850 00000B45 03                      	db T_string	; "string-ci=?"
   851 00000B46 0B00000000000000        	dq 11
   852 00000B4E 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   853 00000B56 693D3F                  	db 0x69, 0x3D, 0x3F
   854                                  	; L_constants + 2905:
   855 00000B59 03                      	db T_string	; "string-ci>=?"
   856 00000B5A 0C00000000000000        	dq 12
   857 00000B62 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   858 00000B6A 693E3D3F                	db 0x69, 0x3E, 0x3D, 0x3F
   859                                  	; L_constants + 2926:
   860 00000B6E 03                      	db T_string	; "string-ci>?"
   861 00000B6F 0B00000000000000        	dq 11
   862 00000B77 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   863 00000B7F 693E3F                  	db 0x69, 0x3E, 0x3F
   864                                  	; L_constants + 2946:
   865 00000B82 41                      	db T_interned_symbol	; make-vector
   866 00000B83 [4804000000000000]      	dq L_constants + 1096
   867                                  	; L_constants + 2955:
   868 00000B8B 03                      	db T_string	; "Usage: (make-vector...
   869 00000B8C 2B00000000000000        	dq 43
   870 00000B94 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   871 00000B9C 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   872 00000BA4 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
   873 00000BAC 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   874 00000BB4 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   875 00000BBC 6C7429                  	db 0x6C, 0x74, 0x29
   876                                  	; L_constants + 3007:
   877 00000BBF 41                      	db T_interned_symbol	; make-string
   878 00000BC0 [5C04000000000000]      	dq L_constants + 1116
   879                                  	; L_constants + 3016:
   880 00000BC8 03                      	db T_string	; "Usage: (make-string...
   881 00000BC9 2B00000000000000        	dq 43
   882 00000BD1 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   883 00000BD9 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   884 00000BE1 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
   885 00000BE9 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   886 00000BF1 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   887 00000BF9 6C7429                  	db 0x6C, 0x74, 0x29
   888                                  	; L_constants + 3068:
   889 00000BFC 03                      	db T_string	; "list->vector"
   890 00000BFD 0C00000000000000        	dq 12
   891 00000C05 6C6973742D3E7665        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x76, 0x65
   892 00000C0D 63746F72                	db 0x63, 0x74, 0x6F, 0x72
   893                                  	; L_constants + 3089:
   894 00000C11 03                      	db T_string	; "vector"
   895 00000C12 0600000000000000        	dq 6
   896 00000C1A 766563746F72            	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72
   897                                  	; L_constants + 3104:
   898 00000C20 03                      	db T_string	; "vector->list"
   899 00000C21 0C00000000000000        	dq 12
   900 00000C29 766563746F722D3E        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x3E
   901 00000C31 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   902                                  	; L_constants + 3125:
   903 00000C35 03                      	db T_string	; "random"
   904 00000C36 0600000000000000        	dq 6
   905 00000C3E 72616E646F6D            	db 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6D
   906                                  	; L_constants + 3140:
   907 00000C44 03                      	db T_string	; "positive?"
   908 00000C45 0900000000000000        	dq 9
   909 00000C4D 706F736974697665        	db 0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65
   910 00000C55 3F                      	db 0x3F
   911                                  	; L_constants + 3158:
   912 00000C56 03                      	db T_string	; "negative?"
   913 00000C57 0900000000000000        	dq 9
   914 00000C5F 6E65676174697665        	db 0x6E, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65
   915 00000C67 3F                      	db 0x3F
   916                                  	; L_constants + 3176:
   917 00000C68 03                      	db T_string	; "even?"
   918 00000C69 0500000000000000        	dq 5
   919 00000C71 6576656E3F              	db 0x65, 0x76, 0x65, 0x6E, 0x3F
   920                                  	; L_constants + 3190:
   921 00000C76 11                      	db T_integer	; 2
   922 00000C77 0200000000000000        	dq 2
   923                                  	; L_constants + 3199:
   924 00000C7F 03                      	db T_string	; "odd?"
   925 00000C80 0400000000000000        	dq 4
   926 00000C88 6F64643F                	db 0x6F, 0x64, 0x64, 0x3F
   927                                  	; L_constants + 3212:
   928 00000C8C 03                      	db T_string	; "abs"
   929 00000C8D 0300000000000000        	dq 3
   930 00000C95 616273                  	db 0x61, 0x62, 0x73
   931                                  	; L_constants + 3224:
   932 00000C98 03                      	db T_string	; "equal?"
   933 00000C99 0600000000000000        	dq 6
   934 00000CA1 657175616C3F            	db 0x65, 0x71, 0x75, 0x61, 0x6C, 0x3F
   935                                  	; L_constants + 3239:
   936 00000CA7 03                      	db T_string	; "assoc"
   937 00000CA8 0500000000000000        	dq 5
   938 00000CB0 6173736F63              	db 0x61, 0x73, 0x73, 0x6F, 0x63
   939                                  	; L_constants + 3253:
   940 00000CB5 03                      	db T_string	; "string-append"
   941 00000CB6 0D00000000000000        	dq 13
   942 00000CBE 737472696E672D61        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x61
   943 00000CC6 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   944                                  	; L_constants + 3275:
   945 00000CCB 03                      	db T_string	; "vector-append"
   946 00000CCC 0D00000000000000        	dq 13
   947 00000CD4 766563746F722D61        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x61
   948 00000CDC 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   949                                  	; L_constants + 3297:
   950 00000CE1 03                      	db T_string	; "string-reverse"
   951 00000CE2 0E00000000000000        	dq 14
   952 00000CEA 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   953 00000CF2 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   954                                  	; L_constants + 3320:
   955 00000CF8 03                      	db T_string	; "vector-reverse"
   956 00000CF9 0E00000000000000        	dq 14
   957 00000D01 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   958 00000D09 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   959                                  	; L_constants + 3343:
   960 00000D0F 03                      	db T_string	; "string-reverse!"
   961 00000D10 0F00000000000000        	dq 15
   962 00000D18 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   963 00000D20 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   964                                  	; L_constants + 3367:
   965 00000D27 03                      	db T_string	; "vector-reverse!"
   966 00000D28 0F00000000000000        	dq 15
   967 00000D30 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   968 00000D38 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   969                                  	; L_constants + 3391:
   970 00000D3F 03                      	db T_string	; "make-list-thunk"
   971 00000D40 0F00000000000000        	dq 15
   972 00000D48 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   973 00000D50 742D7468756E6B          	db 0x74, 0x2D, 0x74, 0x68, 0x75, 0x6E, 0x6B
   974                                  	; L_constants + 3415:
   975 00000D57 03                      	db T_string	; "make-string-thunk"
   976 00000D58 1100000000000000        	dq 17
   977 00000D60 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   978 00000D68 696E672D7468756E        	db 0x69, 0x6E, 0x67, 0x2D, 0x74, 0x68, 0x75, 0x6E
   979 00000D70 6B                      	db 0x6B
   980                                  	; L_constants + 3441:
   981 00000D71 03                      	db T_string	; "make-vector-thunk"
   982 00000D72 1100000000000000        	dq 17
   983 00000D7A 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   984 00000D82 746F722D7468756E        	db 0x74, 0x6F, 0x72, 0x2D, 0x74, 0x68, 0x75, 0x6E
   985 00000D8A 6B                      	db 0x6B
   986                                  	; L_constants + 3467:
   987 00000D8B 03                      	db T_string	; "logarithm"
   988 00000D8C 0900000000000000        	dq 9
   989 00000D94 6C6F676172697468        	db 0x6C, 0x6F, 0x67, 0x61, 0x72, 0x69, 0x74, 0x68
   990 00000D9C 6D                      	db 0x6D
   991                                  	; L_constants + 3485:
   992 00000D9D 13                      	db T_real	; 1.000000
   993 00000D9E 000000000000F03F        	dq 1.000000
   994                                  	; L_constants + 3494:
   995 00000DA6 03                      	db T_string	; "newline"
   996 00000DA7 0700000000000000        	dq 7
   997 00000DAF 6E65776C696E65          	db 0x6E, 0x65, 0x77, 0x6C, 0x69, 0x6E, 0x65
   998                                  	; L_constants + 3510:
   999 00000DB6 020A                    	db T_char, 0x0A	; #\newline
  1000                                  	; L_constants + 3512:
  1001 00000DB8 03                      	db T_string	; "void"
  1002 00000DB9 0400000000000000        	dq 4
  1003 00000DC1 766F6964                	db 0x76, 0x6F, 0x69, 0x64
  1004                                  free_var_0:	; location of *
  1005 00000DC5 [CD0D000000000000]      	dq .undefined_object
  1006                                  .undefined_object:
  1007 00000DCD 05                      	db T_undefined
  1008 00000DCE [D408000000000000]      	dq L_constants + 2260
  1009                                  
  1010                                  free_var_1:	; location of +
  1011 00000DD6 [DE0D000000000000]      	dq .undefined_object
  1012                                  .undefined_object:
  1013 00000DDE 05                      	db T_undefined
  1014 00000DDF [4D08000000000000]      	dq L_constants + 2125
  1015                                  
  1016                                  free_var_2:	; location of -
  1017 00000DE7 [EF0D000000000000]      	dq .undefined_object
  1018                                  .undefined_object:
  1019 00000DEF 05                      	db T_undefined
  1020 00000DF0 [B408000000000000]      	dq L_constants + 2228
  1021                                  
  1022                                  free_var_3:	; location of /
  1023 00000DF8 [000E000000000000]      	dq .undefined_object
  1024                                  .undefined_object:
  1025 00000E00 05                      	db T_undefined
  1026 00000E01 [F008000000000000]      	dq L_constants + 2288
  1027                                  
  1028                                  free_var_4:	; location of <
  1029 00000E09 [110E000000000000]      	dq .undefined_object
  1030                                  .undefined_object:
  1031 00000E11 05                      	db T_undefined
  1032 00000E12 [1009000000000000]      	dq L_constants + 2320
  1033                                  
  1034                                  free_var_5:	; location of <=
  1035 00000E1A [220E000000000000]      	dq .undefined_object
  1036                                  .undefined_object:
  1037 00000E22 05                      	db T_undefined
  1038 00000E23 [1A09000000000000]      	dq L_constants + 2330
  1039                                  
  1040                                  free_var_6:	; location of =
  1041 00000E2B [330E000000000000]      	dq .undefined_object
  1042                                  .undefined_object:
  1043 00000E33 05                      	db T_undefined
  1044 00000E34 [3A09000000000000]      	dq L_constants + 2362
  1045                                  
  1046                                  free_var_7:	; location of >
  1047 00000E3C [440E000000000000]      	dq .undefined_object
  1048                                  .undefined_object:
  1049 00000E44 05                      	db T_undefined
  1050 00000E45 [2509000000000000]      	dq L_constants + 2341
  1051                                  
  1052                                  free_var_8:	; location of >=
  1053 00000E4D [550E000000000000]      	dq .undefined_object
  1054                                  .undefined_object:
  1055 00000E55 05                      	db T_undefined
  1056 00000E56 [2F09000000000000]      	dq L_constants + 2351
  1057                                  
  1058                                  free_var_9:	; location of __bin-add-qq
  1059 00000E5E [660E000000000000]      	dq .undefined_object
  1060                                  .undefined_object:
  1061 00000E66 05                      	db T_undefined
  1062 00000E67 [6902000000000000]      	dq L_constants + 617
  1063                                  
  1064                                  free_var_10:	; location of __bin-add-rr
  1065 00000E6F [770E000000000000]      	dq .undefined_object
  1066                                  .undefined_object:
  1067 00000E77 05                      	db T_undefined
  1068 00000E78 [1502000000000000]      	dq L_constants + 533
  1069                                  
  1070                                  free_var_11:	; location of __bin-add-zz
  1071 00000E80 [880E000000000000]      	dq .undefined_object
  1072                                  .undefined_object:
  1073 00000E88 05                      	db T_undefined
  1074 00000E89 [BD02000000000000]      	dq L_constants + 701
  1075                                  
  1076                                  free_var_12:	; location of __bin-apply
  1077 00000E91 [990E000000000000]      	dq .undefined_object
  1078                                  .undefined_object:
  1079 00000E99 05                      	db T_undefined
  1080 00000E9A [0102000000000000]      	dq L_constants + 513
  1081                                  
  1082                                  free_var_13:	; location of __bin-div-qq
  1083 00000EA2 [AA0E000000000000]      	dq .undefined_object
  1084                                  .undefined_object:
  1085 00000EAA 05                      	db T_undefined
  1086 00000EAB [A802000000000000]      	dq L_constants + 680
  1087                                  
  1088                                  free_var_14:	; location of __bin-div-rr
  1089 00000EB3 [BB0E000000000000]      	dq .undefined_object
  1090                                  .undefined_object:
  1091 00000EBB 05                      	db T_undefined
  1092 00000EBC [5402000000000000]      	dq L_constants + 596
  1093                                  
  1094                                  free_var_15:	; location of __bin-div-zz
  1095 00000EC4 [CC0E000000000000]      	dq .undefined_object
  1096                                  .undefined_object:
  1097 00000ECC 05                      	db T_undefined
  1098 00000ECD [FC02000000000000]      	dq L_constants + 764
  1099                                  
  1100                                  free_var_16:	; location of __bin-equal-qq
  1101 00000ED5 [DD0E000000000000]      	dq .undefined_object
  1102                                  .undefined_object:
  1103 00000EDD 05                      	db T_undefined
  1104 00000EDE [8703000000000000]      	dq L_constants + 903
  1105                                  
  1106                                  free_var_17:	; location of __bin-equal-rr
  1107 00000EE6 [EE0E000000000000]      	dq .undefined_object
  1108                                  .undefined_object:
  1109 00000EEE 05                      	db T_undefined
  1110 00000EEF [7003000000000000]      	dq L_constants + 880
  1111                                  
  1112                                  free_var_18:	; location of __bin-equal-zz
  1113 00000EF7 [FF0E000000000000]      	dq .undefined_object
  1114                                  .undefined_object:
  1115 00000EFF 05                      	db T_undefined
  1116 00000F00 [9E03000000000000]      	dq L_constants + 926
  1117                                  
  1118                                  free_var_19:	; location of __bin-less-than-qq
  1119 00000F08 [100F000000000000]      	dq .undefined_object
  1120                                  .undefined_object:
  1121 00000F10 05                      	db T_undefined
  1122 00000F11 [3A03000000000000]      	dq L_constants + 826
  1123                                  
  1124                                  free_var_20:	; location of __bin-less-than-rr
  1125 00000F19 [210F000000000000]      	dq .undefined_object
  1126                                  .undefined_object:
  1127 00000F21 05                      	db T_undefined
  1128 00000F22 [1F03000000000000]      	dq L_constants + 799
  1129                                  
  1130                                  free_var_21:	; location of __bin-less-than-zz
  1131 00000F2A [320F000000000000]      	dq .undefined_object
  1132                                  .undefined_object:
  1133 00000F32 05                      	db T_undefined
  1134 00000F33 [5503000000000000]      	dq L_constants + 853
  1135                                  
  1136                                  free_var_22:	; location of __bin-mul-qq
  1137 00000F3B [430F000000000000]      	dq .undefined_object
  1138                                  .undefined_object:
  1139 00000F43 05                      	db T_undefined
  1140 00000F44 [9302000000000000]      	dq L_constants + 659
  1141                                  
  1142                                  free_var_23:	; location of __bin-mul-rr
  1143 00000F4C [540F000000000000]      	dq .undefined_object
  1144                                  .undefined_object:
  1145 00000F54 05                      	db T_undefined
  1146 00000F55 [3F02000000000000]      	dq L_constants + 575
  1147                                  
  1148                                  free_var_24:	; location of __bin-mul-zz
  1149 00000F5D [650F000000000000]      	dq .undefined_object
  1150                                  .undefined_object:
  1151 00000F65 05                      	db T_undefined
  1152 00000F66 [E702000000000000]      	dq L_constants + 743
  1153                                  
  1154                                  free_var_25:	; location of __bin-sub-qq
  1155 00000F6E [760F000000000000]      	dq .undefined_object
  1156                                  .undefined_object:
  1157 00000F76 05                      	db T_undefined
  1158 00000F77 [7E02000000000000]      	dq L_constants + 638
  1159                                  
  1160                                  free_var_26:	; location of __bin-sub-rr
  1161 00000F7F [870F000000000000]      	dq .undefined_object
  1162                                  .undefined_object:
  1163 00000F87 05                      	db T_undefined
  1164 00000F88 [2A02000000000000]      	dq L_constants + 554
  1165                                  
  1166                                  free_var_27:	; location of __bin-sub-zz
  1167 00000F90 [980F000000000000]      	dq .undefined_object
  1168                                  .undefined_object:
  1169 00000F98 05                      	db T_undefined
  1170 00000F99 [D202000000000000]      	dq L_constants + 722
  1171                                  
  1172                                  free_var_28:	; location of __bin_integer_to_fraction
  1173 00000FA1 [A90F000000000000]      	dq .undefined_object
  1174                                  .undefined_object:
  1175 00000FA9 05                      	db T_undefined
  1176 00000FAA [6008000000000000]      	dq L_constants + 2144
  1177                                  
  1178                                  free_var_29:	; location of __integer-to-fraction
  1179 00000FB2 [BA0F000000000000]      	dq .undefined_object
  1180                                  .undefined_object:
  1181 00000FBA 05                      	db T_undefined
  1182 00000FBB [A204000000000000]      	dq L_constants + 1186
  1183                                  
  1184                                  free_var_30:	; location of abs
  1185 00000FC3 [CB0F000000000000]      	dq .undefined_object
  1186                                  .undefined_object:
  1187 00000FCB 05                      	db T_undefined
  1188 00000FCC [8C0C000000000000]      	dq L_constants + 3212
  1189                                  
  1190                                  free_var_31:	; location of andmap
  1191 00000FD4 [DC0F000000000000]      	dq .undefined_object
  1192                                  .undefined_object:
  1193 00000FDC 05                      	db T_undefined
  1194 00000FDD [FA07000000000000]      	dq L_constants + 2042
  1195                                  
  1196                                  free_var_32:	; location of append
  1197 00000FE5 [ED0F000000000000]      	dq .undefined_object
  1198                                  .undefined_object:
  1199 00000FED 05                      	db T_undefined
  1200 00000FEE [2B08000000000000]      	dq L_constants + 2091
  1201                                  
  1202                                  free_var_33:	; location of apply
  1203 00000FF6 [FE0F000000000000]      	dq .undefined_object
  1204                                  .undefined_object:
  1205 00000FFE 05                      	db T_undefined
  1206 00000FFF [D207000000000000]      	dq L_constants + 2002
  1207                                  
  1208                                  free_var_34:	; location of assoc
  1209 00001007 [0F10000000000000]      	dq .undefined_object
  1210                                  .undefined_object:
  1211 0000100F 05                      	db T_undefined
  1212 00001010 [A70C000000000000]      	dq L_constants + 3239
  1213                                  
  1214                                  free_var_35:	; location of caaaar
  1215 00001018 [2010000000000000]      	dq .undefined_object
  1216                                  .undefined_object:
  1217 00001020 05                      	db T_undefined
  1218 00001021 [8106000000000000]      	dq L_constants + 1665
  1219                                  
  1220                                  free_var_36:	; location of caaadr
  1221 00001029 [3110000000000000]      	dq .undefined_object
  1222                                  .undefined_object:
  1223 00001031 05                      	db T_undefined
  1224 00001032 [9006000000000000]      	dq L_constants + 1680
  1225                                  
  1226                                  free_var_37:	; location of caaar
  1227 0000103A [4210000000000000]      	dq .undefined_object
  1228                                  .undefined_object:
  1229 00001042 05                      	db T_undefined
  1230 00001043 [1106000000000000]      	dq L_constants + 1553
  1231                                  
  1232                                  free_var_38:	; location of caadar
  1233 0000104B [5310000000000000]      	dq .undefined_object
  1234                                  .undefined_object:
  1235 00001053 05                      	db T_undefined
  1236 00001054 [9F06000000000000]      	dq L_constants + 1695
  1237                                  
  1238                                  free_var_39:	; location of caaddr
  1239 0000105C [6410000000000000]      	dq .undefined_object
  1240                                  .undefined_object:
  1241 00001064 05                      	db T_undefined
  1242 00001065 [AE06000000000000]      	dq L_constants + 1710
  1243                                  
  1244                                  free_var_40:	; location of caadr
  1245 0000106D [7510000000000000]      	dq .undefined_object
  1246                                  .undefined_object:
  1247 00001075 05                      	db T_undefined
  1248 00001076 [1F06000000000000]      	dq L_constants + 1567
  1249                                  
  1250                                  free_var_41:	; location of caar
  1251 0000107E [8610000000000000]      	dq .undefined_object
  1252                                  .undefined_object:
  1253 00001086 05                      	db T_undefined
  1254 00001087 [DD05000000000000]      	dq L_constants + 1501
  1255                                  
  1256                                  free_var_42:	; location of cadaar
  1257 0000108F [9710000000000000]      	dq .undefined_object
  1258                                  .undefined_object:
  1259 00001097 05                      	db T_undefined
  1260 00001098 [BD06000000000000]      	dq L_constants + 1725
  1261                                  
  1262                                  free_var_43:	; location of cadadr
  1263 000010A0 [A810000000000000]      	dq .undefined_object
  1264                                  .undefined_object:
  1265 000010A8 05                      	db T_undefined
  1266 000010A9 [CC06000000000000]      	dq L_constants + 1740
  1267                                  
  1268                                  free_var_44:	; location of cadar
  1269 000010B1 [B910000000000000]      	dq .undefined_object
  1270                                  .undefined_object:
  1271 000010B9 05                      	db T_undefined
  1272 000010BA [2D06000000000000]      	dq L_constants + 1581
  1273                                  
  1274                                  free_var_45:	; location of caddar
  1275 000010C2 [CA10000000000000]      	dq .undefined_object
  1276                                  .undefined_object:
  1277 000010CA 05                      	db T_undefined
  1278 000010CB [DB06000000000000]      	dq L_constants + 1755
  1279                                  
  1280                                  free_var_46:	; location of cadddr
  1281 000010D3 [DB10000000000000]      	dq .undefined_object
  1282                                  .undefined_object:
  1283 000010DB 05                      	db T_undefined
  1284 000010DC [EA06000000000000]      	dq L_constants + 1770
  1285                                  
  1286                                  free_var_47:	; location of caddr
  1287 000010E4 [EC10000000000000]      	dq .undefined_object
  1288                                  .undefined_object:
  1289 000010EC 05                      	db T_undefined
  1290 000010ED [3B06000000000000]      	dq L_constants + 1595
  1291                                  
  1292                                  free_var_48:	; location of cadr
  1293 000010F5 [FD10000000000000]      	dq .undefined_object
  1294                                  .undefined_object:
  1295 000010FD 05                      	db T_undefined
  1296 000010FE [EA05000000000000]      	dq L_constants + 1514
  1297                                  
  1298                                  free_var_49:	; location of car
  1299 00001106 [0E11000000000000]      	dq .undefined_object
  1300                                  .undefined_object:
  1301 0000110E 05                      	db T_undefined
  1302 0000110F [1501000000000000]      	dq L_constants + 277
  1303                                  
  1304                                  free_var_50:	; location of cdaaar
  1305 00001117 [1F11000000000000]      	dq .undefined_object
  1306                                  .undefined_object:
  1307 0000111F 05                      	db T_undefined
  1308 00001120 [F906000000000000]      	dq L_constants + 1785
  1309                                  
  1310                                  free_var_51:	; location of cdaadr
  1311 00001128 [3011000000000000]      	dq .undefined_object
  1312                                  .undefined_object:
  1313 00001130 05                      	db T_undefined
  1314 00001131 [0807000000000000]      	dq L_constants + 1800
  1315                                  
  1316                                  free_var_52:	; location of cdaar
  1317 00001139 [4111000000000000]      	dq .undefined_object
  1318                                  .undefined_object:
  1319 00001141 05                      	db T_undefined
  1320 00001142 [4906000000000000]      	dq L_constants + 1609
  1321                                  
  1322                                  free_var_53:	; location of cdadar
  1323 0000114A [5211000000000000]      	dq .undefined_object
  1324                                  .undefined_object:
  1325 00001152 05                      	db T_undefined
  1326 00001153 [1707000000000000]      	dq L_constants + 1815
  1327                                  
  1328                                  free_var_54:	; location of cdaddr
  1329 0000115B [6311000000000000]      	dq .undefined_object
  1330                                  .undefined_object:
  1331 00001163 05                      	db T_undefined
  1332 00001164 [2607000000000000]      	dq L_constants + 1830
  1333                                  
  1334                                  free_var_55:	; location of cdadr
  1335 0000116C [7411000000000000]      	dq .undefined_object
  1336                                  .undefined_object:
  1337 00001174 05                      	db T_undefined
  1338 00001175 [5706000000000000]      	dq L_constants + 1623
  1339                                  
  1340                                  free_var_56:	; location of cdar
  1341 0000117D [8511000000000000]      	dq .undefined_object
  1342                                  .undefined_object:
  1343 00001185 05                      	db T_undefined
  1344 00001186 [F705000000000000]      	dq L_constants + 1527
  1345                                  
  1346                                  free_var_57:	; location of cddaar
  1347 0000118E [9611000000000000]      	dq .undefined_object
  1348                                  .undefined_object:
  1349 00001196 05                      	db T_undefined
  1350 00001197 [3507000000000000]      	dq L_constants + 1845
  1351                                  
  1352                                  free_var_58:	; location of cddadr
  1353 0000119F [A711000000000000]      	dq .undefined_object
  1354                                  .undefined_object:
  1355 000011A7 05                      	db T_undefined
  1356 000011A8 [4407000000000000]      	dq L_constants + 1860
  1357                                  
  1358                                  free_var_59:	; location of cddar
  1359 000011B0 [B811000000000000]      	dq .undefined_object
  1360                                  .undefined_object:
  1361 000011B8 05                      	db T_undefined
  1362 000011B9 [6506000000000000]      	dq L_constants + 1637
  1363                                  
  1364                                  free_var_60:	; location of cdddar
  1365 000011C1 [C911000000000000]      	dq .undefined_object
  1366                                  .undefined_object:
  1367 000011C9 05                      	db T_undefined
  1368 000011CA [5307000000000000]      	dq L_constants + 1875
  1369                                  
  1370                                  free_var_61:	; location of cddddr
  1371 000011D2 [DA11000000000000]      	dq .undefined_object
  1372                                  .undefined_object:
  1373 000011DA 05                      	db T_undefined
  1374 000011DB [6207000000000000]      	dq L_constants + 1890
  1375                                  
  1376                                  free_var_62:	; location of cdddr
  1377 000011E3 [EB11000000000000]      	dq .undefined_object
  1378                                  .undefined_object:
  1379 000011EB 05                      	db T_undefined
  1380 000011EC [7306000000000000]      	dq L_constants + 1651
  1381                                  
  1382                                  free_var_63:	; location of cddr
  1383 000011F4 [FC11000000000000]      	dq .undefined_object
  1384                                  .undefined_object:
  1385 000011FC 05                      	db T_undefined
  1386 000011FD [0406000000000000]      	dq L_constants + 1540
  1387                                  
  1388                                  free_var_64:	; location of cdr
  1389 00001205 [0D12000000000000]      	dq .undefined_object
  1390                                  .undefined_object:
  1391 0000120D 05                      	db T_undefined
  1392 0000120E [2101000000000000]      	dq L_constants + 289
  1393                                  
  1394                                  free_var_65:	; location of char->integer
  1395 00001216 [1E12000000000000]      	dq .undefined_object
  1396                                  .undefined_object:
  1397 0000121E 05                      	db T_undefined
  1398 0000121F [A901000000000000]      	dq L_constants + 425
  1399                                  
  1400                                  free_var_66:	; location of char-ci<=?
  1401 00001227 [2F12000000000000]      	dq .undefined_object
  1402                                  .undefined_object:
  1403 0000122F 05                      	db T_undefined
  1404 00001230 [230A000000000000]      	dq L_constants + 2595
  1405                                  
  1406                                  free_var_67:	; location of char-ci<?
  1407 00001238 [4012000000000000]      	dq .undefined_object
  1408                                  .undefined_object:
  1409 00001240 05                      	db T_undefined
  1410 00001241 [110A000000000000]      	dq L_constants + 2577
  1411                                  
  1412                                  free_var_68:	; location of char-ci=?
  1413 00001249 [5112000000000000]      	dq .undefined_object
  1414                                  .undefined_object:
  1415 00001251 05                      	db T_undefined
  1416 00001252 [360A000000000000]      	dq L_constants + 2614
  1417                                  
  1418                                  free_var_69:	; location of char-ci>=?
  1419 0000125A [6212000000000000]      	dq .undefined_object
  1420                                  .undefined_object:
  1421 00001262 05                      	db T_undefined
  1422 00001263 [5A0A000000000000]      	dq L_constants + 2650
  1423                                  
  1424                                  free_var_70:	; location of char-ci>?
  1425 0000126B [7312000000000000]      	dq .undefined_object
  1426                                  .undefined_object:
  1427 00001273 05                      	db T_undefined
  1428 00001274 [480A000000000000]      	dq L_constants + 2632
  1429                                  
  1430                                  free_var_71:	; location of char-downcase
  1431 0000127C [8412000000000000]      	dq .undefined_object
  1432                                  .undefined_object:
  1433 00001284 05                      	db T_undefined
  1434 00001285 [DF09000000000000]      	dq L_constants + 2527
  1435                                  
  1436                                  free_var_72:	; location of char-upcase
  1437 0000128D [9512000000000000]      	dq .undefined_object
  1438                                  .undefined_object:
  1439 00001295 05                      	db T_undefined
  1440 00001296 [F509000000000000]      	dq L_constants + 2549
  1441                                  
  1442                                  free_var_73:	; location of char<=?
  1443 0000129E [A612000000000000]      	dq .undefined_object
  1444                                  .undefined_object:
  1445 000012A6 05                      	db T_undefined
  1446 000012A7 [A109000000000000]      	dq L_constants + 2465
  1447                                  
  1448                                  free_var_74:	; location of char<?
  1449 000012AF [B712000000000000]      	dq .undefined_object
  1450                                  .undefined_object:
  1451 000012B7 05                      	db T_undefined
  1452 000012B8 [9209000000000000]      	dq L_constants + 2450
  1453                                  
  1454                                  free_var_75:	; location of char=?
  1455 000012C0 [C812000000000000]      	dq .undefined_object
  1456                                  .undefined_object:
  1457 000012C8 05                      	db T_undefined
  1458 000012C9 [B109000000000000]      	dq L_constants + 2481
  1459                                  
  1460                                  free_var_76:	; location of char>=?
  1461 000012D1 [D912000000000000]      	dq .undefined_object
  1462                                  .undefined_object:
  1463 000012D9 05                      	db T_undefined
  1464 000012DA [CF09000000000000]      	dq L_constants + 2511
  1465                                  
  1466                                  free_var_77:	; location of char>?
  1467 000012E2 [EA12000000000000]      	dq .undefined_object
  1468                                  .undefined_object:
  1469 000012EA 05                      	db T_undefined
  1470 000012EB [C009000000000000]      	dq L_constants + 2496
  1471                                  
  1472                                  free_var_78:	; location of char?
  1473 000012F3 [FB12000000000000]      	dq .undefined_object
  1474                                  .undefined_object:
  1475 000012FB 05                      	db T_undefined
  1476 000012FC [3000000000000000]      	dq L_constants + 48
  1477                                  
  1478                                  free_var_79:	; location of cons
  1479 00001304 [0C13000000000000]      	dq .undefined_object
  1480                                  .undefined_object:
  1481 0000130C 05                      	db T_undefined
  1482 0000130D [DF00000000000000]      	dq L_constants + 223
  1483                                  
  1484                                  free_var_80:	; location of eq?
  1485 00001315 [1D13000000000000]      	dq .undefined_object
  1486                                  .undefined_object:
  1487 0000131D 05                      	db T_undefined
  1488 0000131E [9604000000000000]      	dq L_constants + 1174
  1489                                  
  1490                                  free_var_81:	; location of equal?
  1491 00001326 [2E13000000000000]      	dq .undefined_object
  1492                                  .undefined_object:
  1493 0000132E 05                      	db T_undefined
  1494 0000132F [980C000000000000]      	dq L_constants + 3224
  1495                                  
  1496                                  free_var_82:	; location of error
  1497 00001337 [3F13000000000000]      	dq .undefined_object
  1498                                  .undefined_object:
  1499 0000133F 05                      	db T_undefined
  1500 00001340 [1103000000000000]      	dq L_constants + 785
  1501                                  
  1502                                  free_var_83:	; location of even?
  1503 00001348 [5013000000000000]      	dq .undefined_object
  1504                                  .undefined_object:
  1505 00001350 05                      	db T_undefined
  1506 00001351 [680C000000000000]      	dq L_constants + 3176
  1507                                  
  1508                                  free_var_84:	; location of fact
  1509 00001359 [6113000000000000]      	dq .undefined_object
  1510                                  .undefined_object:
  1511 00001361 05                      	db T_undefined
  1512 00001362 [0309000000000000]      	dq L_constants + 2307
  1513                                  
  1514                                  free_var_85:	; location of fold-left
  1515 0000136A [7213000000000000]      	dq .undefined_object
  1516                                  .undefined_object:
  1517 00001372 05                      	db T_undefined
  1518 00001373 [1908000000000000]      	dq L_constants + 2073
  1519                                  
  1520                                  free_var_86:	; location of fold-right
  1521 0000137B [8313000000000000]      	dq .undefined_object
  1522                                  .undefined_object:
  1523 00001383 05                      	db T_undefined
  1524 00001384 [3A08000000000000]      	dq L_constants + 2106
  1525                                  
  1526                                  free_var_87:	; location of fraction->real
  1527 0000138C [9413000000000000]      	dq .undefined_object
  1528                                  .undefined_object:
  1529 00001394 05                      	db T_undefined
  1530 00001395 [9201000000000000]      	dq L_constants + 402
  1531                                  
  1532                                  free_var_88:	; location of fraction?
  1533 0000139D [A513000000000000]      	dq .undefined_object
  1534                                  .undefined_object:
  1535 000013A5 05                      	db T_undefined
  1536 000013A6 [9800000000000000]      	dq L_constants + 152
  1537                                  
  1538                                  free_var_89:	; location of integer->char
  1539 000013AE [B613000000000000]      	dq .undefined_object
  1540                                  .undefined_object:
  1541 000013B6 05                      	db T_undefined
  1542 000013B7 [BF01000000000000]      	dq L_constants + 447
  1543                                  
  1544                                  free_var_90:	; location of integer->real
  1545 000013BF [C713000000000000]      	dq .undefined_object
  1546                                  .undefined_object:
  1547 000013C7 05                      	db T_undefined
  1548 000013C8 [7C01000000000000]      	dq L_constants + 380
  1549                                  
  1550                                  free_var_91:	; location of integer?
  1551 000013D0 [D813000000000000]      	dq .undefined_object
  1552                                  .undefined_object:
  1553 000013D8 05                      	db T_undefined
  1554 000013D9 [F001000000000000]      	dq L_constants + 496
  1555                                  
  1556                                  free_var_92:	; location of list
  1557 000013E1 [E913000000000000]      	dq .undefined_object
  1558                                  .undefined_object:
  1559 000013E9 05                      	db T_undefined
  1560 000013EA [7F07000000000000]      	dq L_constants + 1919
  1561                                  
  1562                                  free_var_93:	; location of list*
  1563 000013F2 [FA13000000000000]      	dq .undefined_object
  1564                                  .undefined_object:
  1565 000013FA 05                      	db T_undefined
  1566 000013FB [AA07000000000000]      	dq L_constants + 1962
  1567                                  
  1568                                  free_var_94:	; location of list->string
  1569 00001403 [0B14000000000000]      	dq .undefined_object
  1570                                  .undefined_object:
  1571 0000140B 05                      	db T_undefined
  1572 0000140C [9B0A000000000000]      	dq L_constants + 2715
  1573                                  
  1574                                  free_var_95:	; location of list->vector
  1575 00001414 [1C14000000000000]      	dq .undefined_object
  1576                                  .undefined_object:
  1577 0000141C 05                      	db T_undefined
  1578 0000141D [FC0B000000000000]      	dq L_constants + 3068
  1579                                  
  1580                                  free_var_96:	; location of list?
  1581 00001425 [2D14000000000000]      	dq .undefined_object
  1582                                  .undefined_object:
  1583 0000142D 05                      	db T_undefined
  1584 0000142E [7107000000000000]      	dq L_constants + 1905
  1585                                  
  1586                                  free_var_97:	; location of logarithm
  1587 00001436 [3E14000000000000]      	dq .undefined_object
  1588                                  .undefined_object:
  1589 0000143E 05                      	db T_undefined
  1590 0000143F [8B0D000000000000]      	dq L_constants + 3467
  1591                                  
  1592                                  free_var_98:	; location of make-list-thunk
  1593 00001447 [4F14000000000000]      	dq .undefined_object
  1594                                  .undefined_object:
  1595 0000144F 05                      	db T_undefined
  1596 00001450 [3F0D000000000000]      	dq L_constants + 3391
  1597                                  
  1598                                  free_var_99:	; location of make-string
  1599 00001458 [6014000000000000]      	dq .undefined_object
  1600                                  .undefined_object:
  1601 00001460 05                      	db T_undefined
  1602 00001461 [5C04000000000000]      	dq L_constants + 1116
  1603                                  
  1604                                  free_var_100:	; location of make-string-thunk
  1605 00001469 [7114000000000000]      	dq .undefined_object
  1606                                  .undefined_object:
  1607 00001471 05                      	db T_undefined
  1608 00001472 [570D000000000000]      	dq L_constants + 3415
  1609                                  
  1610                                  free_var_101:	; location of make-vector
  1611 0000147A [8214000000000000]      	dq .undefined_object
  1612                                  .undefined_object:
  1613 00001482 05                      	db T_undefined
  1614 00001483 [4804000000000000]      	dq L_constants + 1096
  1615                                  
  1616                                  free_var_102:	; location of make-vector-thunk
  1617 0000148B [9314000000000000]      	dq .undefined_object
  1618                                  .undefined_object:
  1619 00001493 05                      	db T_undefined
  1620 00001494 [710D000000000000]      	dq L_constants + 3441
  1621                                  
  1622                                  free_var_103:	; location of map
  1623 0000149C [A414000000000000]      	dq .undefined_object
  1624                                  .undefined_object:
  1625 000014A4 05                      	db T_undefined
  1626 000014A5 [EE07000000000000]      	dq L_constants + 2030
  1627                                  
  1628                                  free_var_104:	; location of negative?
  1629 000014AD [B514000000000000]      	dq .undefined_object
  1630                                  .undefined_object:
  1631 000014B5 05                      	db T_undefined
  1632 000014B6 [560C000000000000]      	dq L_constants + 3158
  1633                                  
  1634                                  free_var_105:	; location of newline
  1635 000014BE [C614000000000000]      	dq .undefined_object
  1636                                  .undefined_object:
  1637 000014C6 05                      	db T_undefined
  1638 000014C7 [A60D000000000000]      	dq L_constants + 3494
  1639                                  
  1640                                  free_var_106:	; location of not
  1641 000014CF [D714000000000000]      	dq .undefined_object
  1642                                  .undefined_object:
  1643 000014D7 05                      	db T_undefined
  1644 000014D8 [8C07000000000000]      	dq L_constants + 1932
  1645                                  
  1646                                  free_var_107:	; location of null?
  1647 000014E0 [E814000000000000]      	dq .undefined_object
  1648                                  .undefined_object:
  1649 000014E8 05                      	db T_undefined
  1650 000014E9 [0600000000000000]      	dq L_constants + 6
  1651                                  
  1652                                  free_var_108:	; location of number?
  1653 000014F1 [F914000000000000]      	dq .undefined_object
  1654                                  .undefined_object:
  1655 000014F9 05                      	db T_undefined
  1656 000014FA [BB00000000000000]      	dq L_constants + 187
  1657                                  
  1658                                  free_var_109:	; location of odd?
  1659 00001502 [0A15000000000000]      	dq .undefined_object
  1660                                  .undefined_object:
  1661 0000150A 05                      	db T_undefined
  1662 0000150B [7F0C000000000000]      	dq L_constants + 3199
  1663                                  
  1664                                  free_var_110:	; location of ormap
  1665 00001513 [1B15000000000000]      	dq .undefined_object
  1666                                  .undefined_object:
  1667 0000151B 05                      	db T_undefined
  1668 0000151C [E007000000000000]      	dq L_constants + 2016
  1669                                  
  1670                                  free_var_111:	; location of pair?
  1671 00001524 [2C15000000000000]      	dq .undefined_object
  1672                                  .undefined_object:
  1673 0000152C 05                      	db T_undefined
  1674 0000152D [1400000000000000]      	dq L_constants + 20
  1675                                  
  1676                                  free_var_112:	; location of positive?
  1677 00001535 [3D15000000000000]      	dq .undefined_object
  1678                                  .undefined_object:
  1679 0000153D 05                      	db T_undefined
  1680 0000153E [440C000000000000]      	dq L_constants + 3140
  1681                                  
  1682                                  free_var_113:	; location of random
  1683 00001546 [4E15000000000000]      	dq .undefined_object
  1684                                  .undefined_object:
  1685 0000154E 05                      	db T_undefined
  1686 0000154F [350C000000000000]      	dq L_constants + 3125
  1687                                  
  1688                                  free_var_114:	; location of rational?
  1689 00001557 [5F15000000000000]      	dq .undefined_object
  1690                                  .undefined_object:
  1691 0000155F 05                      	db T_undefined
  1692 00001560 [9807000000000000]      	dq L_constants + 1944
  1693                                  
  1694                                  free_var_115:	; location of real
  1695 00001568 [7015000000000000]      	dq .undefined_object
  1696                                  .undefined_object:
  1697 00001570 05                      	db T_undefined
  1698 00001571 [BE08000000000000]      	dq L_constants + 2238
  1699                                  
  1700                                  free_var_116:	; location of real?
  1701 00001579 [8115000000000000]      	dq .undefined_object
  1702                                  .undefined_object:
  1703 00001581 05                      	db T_undefined
  1704 00001582 [8A00000000000000]      	dq L_constants + 138
  1705                                  
  1706                                  free_var_117:	; location of remainder
  1707 0000158A [9215000000000000]      	dq .undefined_object
  1708                                  .undefined_object:
  1709 00001592 05                      	db T_undefined
  1710 00001593 [C603000000000000]      	dq L_constants + 966
  1711                                  
  1712                                  free_var_118:	; location of reverse
  1713 0000159B [A315000000000000]      	dq .undefined_object
  1714                                  .undefined_object:
  1715 000015A3 05                      	db T_undefined
  1716 000015A4 [0908000000000000]      	dq L_constants + 2057
  1717                                  
  1718                                  free_var_119:	; location of string->list
  1719 000015AC [B415000000000000]      	dq .undefined_object
  1720                                  .undefined_object:
  1721 000015B4 05                      	db T_undefined
  1722 000015B5 [B00A000000000000]      	dq L_constants + 2736
  1723                                  
  1724                                  free_var_120:	; location of string-append
  1725 000015BD [C515000000000000]      	dq .undefined_object
  1726                                  .undefined_object:
  1727 000015C5 05                      	db T_undefined
  1728 000015C6 [B50C000000000000]      	dq L_constants + 3253
  1729                                  
  1730                                  free_var_121:	; location of string-ci<=?
  1731 000015CE [D615000000000000]      	dq .undefined_object
  1732                                  .undefined_object:
  1733 000015D6 05                      	db T_undefined
  1734 000015D7 [300B000000000000]      	dq L_constants + 2864
  1735                                  
  1736                                  free_var_122:	; location of string-ci<?
  1737 000015DF [E715000000000000]      	dq .undefined_object
  1738                                  .undefined_object:
  1739 000015E7 05                      	db T_undefined
  1740 000015E8 [1C0B000000000000]      	dq L_constants + 2844
  1741                                  
  1742                                  free_var_123:	; location of string-ci=?
  1743 000015F0 [F815000000000000]      	dq .undefined_object
  1744                                  .undefined_object:
  1745 000015F8 05                      	db T_undefined
  1746 000015F9 [450B000000000000]      	dq L_constants + 2885
  1747                                  
  1748                                  free_var_124:	; location of string-ci>=?
  1749 00001601 [0916000000000000]      	dq .undefined_object
  1750                                  .undefined_object:
  1751 00001609 05                      	db T_undefined
  1752 0000160A [590B000000000000]      	dq L_constants + 2905
  1753                                  
  1754                                  free_var_125:	; location of string-ci>?
  1755 00001612 [1A16000000000000]      	dq .undefined_object
  1756                                  .undefined_object:
  1757 0000161A 05                      	db T_undefined
  1758 0000161B [6E0B000000000000]      	dq L_constants + 2926
  1759                                  
  1760                                  free_var_126:	; location of string-downcase
  1761 00001623 [2B16000000000000]      	dq .undefined_object
  1762                                  .undefined_object:
  1763 0000162B 05                      	db T_undefined
  1764 0000162C [6D0A000000000000]      	dq L_constants + 2669
  1765                                  
  1766                                  free_var_127:	; location of string-length
  1767 00001634 [3C16000000000000]      	dq .undefined_object
  1768                                  .undefined_object:
  1769 0000163C 05                      	db T_undefined
  1770 0000163D [2D01000000000000]      	dq L_constants + 301
  1771                                  
  1772                                  free_var_128:	; location of string-ref
  1773 00001645 [4D16000000000000]      	dq .undefined_object
  1774                                  .undefined_object:
  1775 0000164D 05                      	db T_undefined
  1776 0000164E [FA03000000000000]      	dq L_constants + 1018
  1777                                  
  1778                                  free_var_129:	; location of string-reverse
  1779 00001656 [5E16000000000000]      	dq .undefined_object
  1780                                  .undefined_object:
  1781 0000165E 05                      	db T_undefined
  1782 0000165F [E10C000000000000]      	dq L_constants + 3297
  1783                                  
  1784                                  free_var_130:	; location of string-reverse!
  1785 00001667 [6F16000000000000]      	dq .undefined_object
  1786                                  .undefined_object:
  1787 0000166F 05                      	db T_undefined
  1788 00001670 [0F0D000000000000]      	dq L_constants + 3343
  1789                                  
  1790                                  free_var_131:	; location of string-set!
  1791 00001678 [8016000000000000]      	dq .undefined_object
  1792                                  .undefined_object:
  1793 00001680 05                      	db T_undefined
  1794 00001681 [3404000000000000]      	dq L_constants + 1076
  1795                                  
  1796                                  free_var_132:	; location of string-upcase
  1797 00001689 [9116000000000000]      	dq .undefined_object
  1798                                  .undefined_object:
  1799 00001691 05                      	db T_undefined
  1800 00001692 [850A000000000000]      	dq L_constants + 2693
  1801                                  
  1802                                  free_var_133:	; location of string<=?
  1803 0000169A [A216000000000000]      	dq .undefined_object
  1804                                  .undefined_object:
  1805 000016A2 05                      	db T_undefined
  1806 000016A3 [D60A000000000000]      	dq L_constants + 2774
  1807                                  
  1808                                  free_var_134:	; location of string<?
  1809 000016AB [B316000000000000]      	dq .undefined_object
  1810                                  .undefined_object:
  1811 000016B3 05                      	db T_undefined
  1812 000016B4 [C50A000000000000]      	dq L_constants + 2757
  1813                                  
  1814                                  free_var_135:	; location of string=?
  1815 000016BC [C416000000000000]      	dq .undefined_object
  1816                                  .undefined_object:
  1817 000016C4 05                      	db T_undefined
  1818 000016C5 [E80A000000000000]      	dq L_constants + 2792
  1819                                  
  1820                                  free_var_136:	; location of string>=?
  1821 000016CD [D516000000000000]      	dq .undefined_object
  1822                                  .undefined_object:
  1823 000016D5 05                      	db T_undefined
  1824 000016D6 [F90A000000000000]      	dq L_constants + 2809
  1825                                  
  1826                                  free_var_137:	; location of string>?
  1827 000016DE [E616000000000000]      	dq .undefined_object
  1828                                  .undefined_object:
  1829 000016E6 05                      	db T_undefined
  1830 000016E7 [0B0B000000000000]      	dq L_constants + 2827
  1831                                  
  1832                                  free_var_138:	; location of string?
  1833 000016EF [F716000000000000]      	dq .undefined_object
  1834                                  .undefined_object:
  1835 000016F7 05                      	db T_undefined
  1836 000016F8 [3E00000000000000]      	dq L_constants + 62
  1837                                  
  1838                                  free_var_139:	; location of trng
  1839 00001700 [0817000000000000]      	dq .undefined_object
  1840                                  .undefined_object:
  1841 00001708 05                      	db T_undefined
  1842 00001709 [D501000000000000]      	dq L_constants + 469
  1843                                  
  1844                                  free_var_140:	; location of vector
  1845 00001711 [1917000000000000]      	dq .undefined_object
  1846                                  .undefined_object:
  1847 00001719 05                      	db T_undefined
  1848 0000171A [110C000000000000]      	dq L_constants + 3089
  1849                                  
  1850                                  free_var_141:	; location of vector->list
  1851 00001722 [2A17000000000000]      	dq .undefined_object
  1852                                  .undefined_object:
  1853 0000172A 05                      	db T_undefined
  1854 0000172B [200C000000000000]      	dq L_constants + 3104
  1855                                  
  1856                                  free_var_142:	; location of vector-append
  1857 00001733 [3B17000000000000]      	dq .undefined_object
  1858                                  .undefined_object:
  1859 0000173B 05                      	db T_undefined
  1860 0000173C [CB0C000000000000]      	dq L_constants + 3275
  1861                                  
  1862                                  free_var_143:	; location of vector-length
  1863 00001744 [4C17000000000000]      	dq .undefined_object
  1864                                  .undefined_object:
  1865 0000174C 05                      	db T_undefined
  1866 0000174D [4301000000000000]      	dq L_constants + 323
  1867                                  
  1868                                  free_var_144:	; location of vector-ref
  1869 00001755 [5D17000000000000]      	dq .undefined_object
  1870                                  .undefined_object:
  1871 0000175D 05                      	db T_undefined
  1872 0000175E [0D04000000000000]      	dq L_constants + 1037
  1873                                  
  1874                                  free_var_145:	; location of vector-reverse
  1875 00001766 [6E17000000000000]      	dq .undefined_object
  1876                                  .undefined_object:
  1877 0000176E 05                      	db T_undefined
  1878 0000176F [F80C000000000000]      	dq L_constants + 3320
  1879                                  
  1880                                  free_var_146:	; location of vector-reverse!
  1881 00001777 [7F17000000000000]      	dq .undefined_object
  1882                                  .undefined_object:
  1883 0000177F 05                      	db T_undefined
  1884 00001780 [270D000000000000]      	dq L_constants + 3367
  1885                                  
  1886                                  free_var_147:	; location of vector-set!
  1887 00001788 [9017000000000000]      	dq .undefined_object
  1888                                  .undefined_object:
  1889 00001790 05                      	db T_undefined
  1890 00001791 [2004000000000000]      	dq L_constants + 1056
  1891                                  
  1892                                  free_var_148:	; location of vector?
  1893 00001799 [A117000000000000]      	dq .undefined_object
  1894                                  .undefined_object:
  1895 000017A1 05                      	db T_undefined
  1896 000017A2 [6700000000000000]      	dq L_constants + 103
  1897                                  
  1898                                  free_var_149:	; location of void
  1899 000017AA [B217000000000000]      	dq .undefined_object
  1900                                  .undefined_object:
  1901 000017B2 05                      	db T_undefined
  1902 000017B3 [B80D000000000000]      	dq L_constants + 3512
  1903                                  
  1904                                  free_var_150:	; location of write-char
  1905 000017BB [C317000000000000]      	dq .undefined_object
  1906                                  .undefined_object:
  1907 000017C3 05                      	db T_undefined
  1908 000017C4 [0201000000000000]      	dq L_constants + 258
  1909                                  
  1910                                  free_var_151:	; location of zero?
  1911 000017CC [D417000000000000]      	dq .undefined_object
  1912                                  .undefined_object:
  1913 000017D4 05                      	db T_undefined
  1914 000017D5 [E201000000000000]      	dq L_constants + 482
  1915                                  
  1916                                  
  1917                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
  1918                                  global main
  1919                                  section .text
  1920                                  main:
  1921 00000000 C8000000                        enter 0, 0
  1922 00000004 6A00                            push 0
  1923 00000006 6A00                            push 0
  1924 00000008 68[5A2C0100]                    push Lend
  1925 0000000D C8000000                        enter 0, 0
  1926                                  	; building closure for null?
  1927 00000011 48BF-                   	mov rdi, free_var_107
  1927 00000013 [E014000000000000] 
  1928 0000001B 48BE-                   	mov rsi, L_code_ptr_is_null
  1928 0000001D [CF37010000000000] 
  1929 00000025 E8CB350100              	call bind_primitive
  1930                                  
  1931                                  	; building closure for pair?
  1932 0000002A 48BF-                   	mov rdi, free_var_111
  1932 0000002C [2415000000000000] 
  1933 00000034 48BE-                   	mov rsi, L_code_ptr_is_pair
  1933 00000036 [0138010000000000] 
  1934 0000003E E8B2350100              	call bind_primitive
  1935                                  
  1936                                  	; building closure for char?
  1937 00000043 48BF-                   	mov rdi, free_var_78
  1937 00000045 [F312000000000000] 
  1938 0000004D 48BE-                   	mov rsi, L_code_ptr_is_char
  1938 0000004F [6538010000000000] 
  1939 00000057 E899350100              	call bind_primitive
  1940                                  
  1941                                  	; building closure for string?
  1942 0000005C 48BF-                   	mov rdi, free_var_138
  1942 0000005E [EF16000000000000] 
  1943 00000066 48BE-                   	mov rsi, L_code_ptr_is_string
  1943 00000068 [9738010000000000] 
  1944 00000070 E880350100              	call bind_primitive
  1945                                  
  1946                                  	; building closure for vector?
  1947 00000075 48BF-                   	mov rdi, free_var_148
  1947 00000077 [9917000000000000] 
  1948 0000007F 48BE-                   	mov rsi, L_code_ptr_is_vector
  1948 00000081 [9539010000000000] 
  1949 00000089 E867350100              	call bind_primitive
  1950                                  
  1951                                  	; building closure for real?
  1952 0000008E 48BF-                   	mov rdi, free_var_116
  1952 00000090 [7915000000000000] 
  1953 00000098 48BE-                   	mov rsi, L_code_ptr_is_real
  1953 0000009A [F939010000000000] 
  1954 000000A2 E84E350100              	call bind_primitive
  1955                                  
  1956                                  	; building closure for fraction?
  1957 000000A7 48BF-                   	mov rdi, free_var_88
  1957 000000A9 [9D13000000000000] 
  1958 000000B1 48BE-                   	mov rsi, L_code_ptr_is_fraction
  1958 000000B3 [2B3A010000000000] 
  1959 000000BB E835350100              	call bind_primitive
  1960                                  
  1961                                  	; building closure for number?
  1962 000000C0 48BF-                   	mov rdi, free_var_108
  1962 000000C2 [F114000000000000] 
  1963 000000CA 48BE-                   	mov rsi, L_code_ptr_is_number
  1963 000000CC [F93A010000000000] 
  1964 000000D4 E81C350100              	call bind_primitive
  1965                                  
  1966                                  	; building closure for cons
  1967 000000D9 48BF-                   	mov rdi, free_var_79
  1967 000000DB [0413000000000000] 
  1968 000000E3 48BE-                   	mov rsi, L_code_ptr_cons
  1968 000000E5 [613B010000000000] 
  1969 000000ED E803350100              	call bind_primitive
  1970                                  
  1971                                  	; building closure for write-char
  1972 000000F2 48BF-                   	mov rdi, free_var_150
  1972 000000F4 [BB17000000000000] 
  1973 000000FC 48BE-                   	mov rsi, L_code_ptr_write_char
  1973 000000FE [B73B010000000000] 
  1974 00000106 E8EA340100              	call bind_primitive
  1975                                  
  1976                                  	; building closure for car
  1977 0000010B 48BF-                   	mov rdi, free_var_49
  1977 0000010D [0611000000000000] 
  1978 00000115 48BE-                   	mov rsi, L_code_ptr_car
  1978 00000117 [0A3C010000000000] 
  1979 0000011F E8D1340100              	call bind_primitive
  1980                                  
  1981                                  	; building closure for cdr
  1982 00000124 48BF-                   	mov rdi, free_var_64
  1982 00000126 [0512000000000000] 
  1983 0000012E 48BE-                   	mov rsi, L_code_ptr_cdr
  1983 00000130 [2E3C010000000000] 
  1984 00000138 E8B8340100              	call bind_primitive
  1985                                  
  1986                                  	; building closure for string-length
  1987 0000013D 48BF-                   	mov rdi, free_var_127
  1987 0000013F [3416000000000000] 
  1988 00000147 48BE-                   	mov rsi, L_code_ptr_string_length
  1988 00000149 [523C010000000000] 
  1989 00000151 E89F340100              	call bind_primitive
  1990                                  
  1991                                  	; building closure for vector-length
  1992 00000156 48BF-                   	mov rdi, free_var_143
  1992 00000158 [4417000000000000] 
  1993 00000160 48BE-                   	mov rsi, L_code_ptr_vector_length
  1993 00000162 [7B3C010000000000] 
  1994 0000016A E886340100              	call bind_primitive
  1995                                  
  1996                                  	; building closure for integer->real
  1997 0000016F 48BF-                   	mov rdi, free_var_90
  1997 00000171 [BF13000000000000] 
  1998 00000179 48BE-                   	mov rsi, L_code_ptr_integer_to_real
  1998 0000017B [EC3C010000000000] 
  1999 00000183 E86D340100              	call bind_primitive
  2000                                  
  2001                                  	; building closure for fraction->real
  2002 00000188 48BF-                   	mov rdi, free_var_87
  2002 0000018A [8C13000000000000] 
  2003 00000192 48BE-                   	mov rsi, L_code_ptr_fraction_to_real
  2003 00000194 [1A3D010000000000] 
  2004 0000019C E854340100              	call bind_primitive
  2005                                  
  2006                                  	; building closure for char->integer
  2007 000001A1 48BF-                   	mov rdi, free_var_65
  2007 000001A3 [1612000000000000] 
  2008 000001AB 48BE-                   	mov rsi, L_code_ptr_char_to_integer
  2008 000001AD [553D010000000000] 
  2009 000001B5 E83B340100              	call bind_primitive
  2010                                  
  2011                                  	; building closure for integer->char
  2012 000001BA 48BF-                   	mov rdi, free_var_89
  2012 000001BC [AE13000000000000] 
  2013 000001C4 48BE-                   	mov rsi, L_code_ptr_integer_to_char
  2013 000001C6 [C43D010000000000] 
  2014 000001CE E822340100              	call bind_primitive
  2015                                  
  2016                                  	; building closure for trng
  2017 000001D3 48BF-                   	mov rdi, free_var_139
  2017 000001D5 [0017000000000000] 
  2018 000001DD 48BE-                   	mov rsi, L_code_ptr_trng
  2018 000001DF [0F3E010000000000] 
  2019 000001E7 E809340100              	call bind_primitive
  2020                                  
  2021                                  	; building closure for zero?
  2022 000001EC 48BF-                   	mov rdi, free_var_151
  2022 000001EE [CC17000000000000] 
  2023 000001F6 48BE-                   	mov rsi, L_code_ptr_is_zero
  2023 000001F8 [2E3E010000000000] 
  2024 00000200 E8F0330100              	call bind_primitive
  2025                                  
  2026                                  	; building closure for integer?
  2027 00000205 48BF-                   	mov rdi, free_var_91
  2027 00000207 [D013000000000000] 
  2028 0000020F 48BE-                   	mov rsi, L_code_ptr_is_integer
  2028 00000211 [933E010000000000] 
  2029 00000219 E8D7330100              	call bind_primitive
  2030                                  
  2031                                  	; building closure for __bin-apply
  2032 0000021E 48BF-                   	mov rdi, free_var_12
  2032 00000220 [910E000000000000] 
  2033 00000228 48BE-                   	mov rsi, L_code_ptr_bin_apply
  2033 0000022A [6537010000000000] 
  2034 00000232 E8BE330100              	call bind_primitive
  2035                                  
  2036                                  	; building closure for __bin-add-rr
  2037 00000237 48BF-                   	mov rdi, free_var_10
  2037 00000239 [6F0E000000000000] 
  2038 00000241 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
  2038 00000243 [C53E010000000000] 
  2039 0000024B E8A5330100              	call bind_primitive
  2040                                  
  2041                                  	; building closure for __bin-sub-rr
  2042 00000250 48BF-                   	mov rdi, free_var_26
  2042 00000252 [7F0F000000000000] 
  2043 0000025A 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
  2043 0000025C [053F010000000000] 
  2044 00000264 E88C330100              	call bind_primitive
  2045                                  
  2046                                  	; building closure for __bin-mul-rr
  2047 00000269 48BF-                   	mov rdi, free_var_23
  2047 0000026B [4C0F000000000000] 
  2048 00000273 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
  2048 00000275 [453F010000000000] 
  2049 0000027D E873330100              	call bind_primitive
  2050                                  
  2051                                  	; building closure for __bin-div-rr
  2052 00000282 48BF-                   	mov rdi, free_var_14
  2052 00000284 [B30E000000000000] 
  2053 0000028C 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
  2053 0000028E [853F010000000000] 
  2054 00000296 E85A330100              	call bind_primitive
  2055                                  
  2056                                  	; building closure for __bin-add-qq
  2057 0000029B 48BF-                   	mov rdi, free_var_9
  2057 0000029D [5E0E000000000000] 
  2058 000002A5 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
  2058 000002A7 [0F40010000000000] 
  2059 000002AF E841330100              	call bind_primitive
  2060                                  
  2061                                  	; building closure for __bin-sub-qq
  2062 000002B4 48BF-                   	mov rdi, free_var_25
  2062 000002B6 [6E0F000000000000] 
  2063 000002BE 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
  2063 000002C0 [AF40010000000000] 
  2064 000002C8 E828330100              	call bind_primitive
  2065                                  
  2066                                  	; building closure for __bin-mul-qq
  2067 000002CD 48BF-                   	mov rdi, free_var_22
  2067 000002CF [3B0F000000000000] 
  2068 000002D7 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
  2068 000002D9 [5441010000000000] 
  2069 000002E1 E80F330100              	call bind_primitive
  2070                                  
  2071                                  	; building closure for __bin-div-qq
  2072 000002E6 48BF-                   	mov rdi, free_var_13
  2072 000002E8 [A20E000000000000] 
  2073 000002F0 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
  2073 000002F2 [EE41010000000000] 
  2074 000002FA E8F6320100              	call bind_primitive
  2075                                  
  2076                                  	; building closure for __bin-add-zz
  2077 000002FF 48BF-                   	mov rdi, free_var_11
  2077 00000301 [800E000000000000] 
  2078 00000309 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_zz
  2078 0000030B [D33F010000000000] 
  2079 00000313 E8DD320100              	call bind_primitive
  2080                                  
  2081                                  	; building closure for __bin-sub-zz
  2082 00000318 48BF-                   	mov rdi, free_var_27
  2082 0000031A [900F000000000000] 
  2083 00000322 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_zz
  2083 00000324 [7340010000000000] 
  2084 0000032C E8C4320100              	call bind_primitive
  2085                                  
  2086                                  	; building closure for __bin-mul-zz
  2087 00000331 48BF-                   	mov rdi, free_var_24
  2087 00000333 [5D0F000000000000] 
  2088 0000033B 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_zz
  2088 0000033D [1341010000000000] 
  2089 00000345 E8AB320100              	call bind_primitive
  2090                                  
  2091                                  	; building closure for __bin-div-zz
  2092 0000034A 48BF-                   	mov rdi, free_var_15
  2092 0000034C [C40E000000000000] 
  2093 00000354 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_zz
  2093 00000356 [A841010000000000] 
  2094 0000035E E892320100              	call bind_primitive
  2095                                  
  2096                                  	; building closure for error
  2097 00000363 48BF-                   	mov rdi, free_var_82
  2097 00000365 [3713000000000000] 
  2098 0000036D 48BE-                   	mov rsi, L_code_ptr_error
  2098 0000036F [D842010000000000] 
  2099 00000377 E879320100              	call bind_primitive
  2100                                  
  2101                                  	; building closure for __bin-less-than-rr
  2102 0000037C 48BF-                   	mov rdi, free_var_20
  2102 0000037E [190F000000000000] 
  2103 00000386 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
  2103 00000388 [9443010000000000] 
  2104 00000390 E860320100              	call bind_primitive
  2105                                  
  2106                                  	; building closure for __bin-less-than-qq
  2107 00000395 48BF-                   	mov rdi, free_var_19
  2107 00000397 [080F000000000000] 
  2108 0000039F 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
  2108 000003A1 [3644010000000000] 
  2109 000003A9 E847320100              	call bind_primitive
  2110                                  
  2111                                  	; building closure for __bin-less-than-zz
  2112 000003AE 48BF-                   	mov rdi, free_var_21
  2112 000003B0 [2A0F000000000000] 
  2113 000003B8 48BE-                   	mov rsi, L_code_ptr_raw_less_than_zz
  2113 000003BA [E743010000000000] 
  2114 000003C2 E82E320100              	call bind_primitive
  2115                                  
  2116                                  	; building closure for __bin-equal-rr
  2117 000003C7 48BF-                   	mov rdi, free_var_17
  2117 000003C9 [E60E000000000000] 
  2118 000003D1 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
  2118 000003D3 [9544010000000000] 
  2119 000003DB E815320100              	call bind_primitive
  2120                                  
  2121                                  	; building closure for __bin-equal-qq
  2122 000003E0 48BF-                   	mov rdi, free_var_16
  2122 000003E2 [D50E000000000000] 
  2123 000003EA 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
  2123 000003EC [3745010000000000] 
  2124 000003F4 E8FC310100              	call bind_primitive
  2125                                  
  2126                                  	; building closure for __bin-equal-zz
  2127 000003F9 48BF-                   	mov rdi, free_var_18
  2127 000003FB [F70E000000000000] 
  2128 00000403 48BE-                   	mov rsi, L_code_ptr_raw_equal_zz
  2128 00000405 [E844010000000000] 
  2129 0000040D E8E3310100              	call bind_primitive
  2130                                  
  2131                                  	; building closure for remainder
  2132 00000412 48BF-                   	mov rdi, free_var_117
  2132 00000414 [8A15000000000000] 
  2133 0000041C 48BE-                   	mov rsi, L_code_ptr_remainder
  2133 0000041E [E245010000000000] 
  2134 00000426 E8CA310100              	call bind_primitive
  2135                                  
  2136                                  	; building closure for string-ref
  2137 0000042B 48BF-                   	mov rdi, free_var_128
  2137 0000042D [4516000000000000] 
  2138 00000435 48BE-                   	mov rsi, L_code_ptr_string_ref
  2138 00000437 [9246010000000000] 
  2139 0000043F E8B1310100              	call bind_primitive
  2140                                  
  2141                                  	; building closure for vector-ref
  2142 00000444 48BF-                   	mov rdi, free_var_144
  2142 00000446 [5517000000000000] 
  2143 0000044E 48BE-                   	mov rsi, L_code_ptr_vector_ref
  2143 00000450 [EE46010000000000] 
  2144 00000458 E898310100              	call bind_primitive
  2145                                  
  2146                                  	; building closure for vector-set!
  2147 0000045D 48BF-                   	mov rdi, free_var_147
  2147 0000045F [8817000000000000] 
  2148 00000467 48BE-                   	mov rsi, L_code_ptr_vector_set
  2148 00000469 [3B47010000000000] 
  2149 00000471 E87F310100              	call bind_primitive
  2150                                  
  2151                                  	; building closure for string-set!
  2152 00000476 48BF-                   	mov rdi, free_var_131
  2152 00000478 [7816000000000000] 
  2153 00000480 48BE-                   	mov rsi, L_code_ptr_string_set
  2153 00000482 [9647010000000000] 
  2154 0000048A E866310100              	call bind_primitive
  2155                                  
  2156                                  	; building closure for make-vector
  2157 0000048F 48BF-                   	mov rdi, free_var_101
  2157 00000491 [7A14000000000000] 
  2158 00000499 48BE-                   	mov rsi, L_code_ptr_make_vector
  2158 0000049B [FC47010000000000] 
  2159 000004A3 E84D310100              	call bind_primitive
  2160                                  
  2161                                  	; building closure for make-string
  2162 000004A8 48BF-                   	mov rdi, free_var_99
  2162 000004AA [5814000000000000] 
  2163 000004B2 48BE-                   	mov rsi, L_code_ptr_make_string
  2163 000004B4 [5748010000000000] 
  2164 000004BC E834310100              	call bind_primitive
  2165                                  
  2166                                  	; building closure for eq?
  2167 000004C1 48BF-                   	mov rdi, free_var_80
  2167 000004C3 [1513000000000000] 
  2168 000004CB 48BE-                   	mov rsi, L_code_ptr_is_eq
  2168 000004CD [0C49010000000000] 
  2169 000004D5 E81B310100              	call bind_primitive
  2170                                  
  2171                                  	; building closure for __integer-to-fraction
  2172 000004DA 48BF-                   	mov rdi, free_var_29
  2172 000004DC [B20F000000000000] 
  2173 000004E4 48BE-                   	mov rsi, L_code_ptr_integer_to_fraction
  2173 000004E6 [863D010000000000] 
  2174 000004EE E802310100              	call bind_primitive
  2175                                  
  2176 000004F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2177 000004F8 E8C8280100              	call malloc
  2178 000004FD 50                      	push rax
  2179 000004FE BF00000000              	mov rdi, 8 * 0	; new rib
  2180 00000503 E8BD280100              	call malloc
  2181 00000508 50                      	push rax
  2182 00000509 BF08000000              	mov rdi, 8 * 1	; extended env
  2183 0000050E E8B2280100              	call malloc
  2184 00000513 488B7D10                	mov rdi, ENV
  2185 00000517 BE00000000              	mov rsi, 0
  2186 0000051C BA01000000              	mov rdx, 1
  2187                                  .L_lambda_simple_env_loop_00c4:	; ext_env[i + 1] <-- env[i]
  2188 00000521 4883FE00                	cmp rsi, 0
  2189 00000525 7410                    	je .L_lambda_simple_env_end_00c4
  2190 00000527 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2191 0000052B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2192 0000052F 48FFC6                  	inc rsi
  2193 00000532 48FFC2                  	inc rdx
  2194 00000535 EBEA                    	jmp .L_lambda_simple_env_loop_00c4
  2195                                  .L_lambda_simple_env_end_00c4:
  2196 00000537 5B                      	pop rbx
  2197 00000538 BE00000000              	mov rsi, 0
  2198                                  .L_lambda_simple_params_loop_00c4:	; copy params
  2199 0000053D 4883FE00                	cmp rsi, 0
  2200 00000541 740E                    	je .L_lambda_simple_params_end_00c4
  2201 00000543 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2202 00000548 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2203 0000054C 48FFC6                  	inc rsi
  2204 0000054F EBEC                    	jmp .L_lambda_simple_params_loop_00c4
  2205                                  .L_lambda_simple_params_end_00c4:
  2206 00000551 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2207 00000554 4889C3                  	mov rbx, rax
  2208 00000557 58                      	pop rax
  2209 00000558 C60004                  	mov byte [rax], T_closure
  2210 0000055B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2211 0000055F 48C74009[69050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c4
  2212 00000567 EB65                    	jmp .L_lambda_simple_end_00c4
  2213                                  .L_lambda_simple_code_00c4:	; lambda-simple body
  2214 00000569 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2215 0000056F 740B                    	je .L_lambda_simple_arity_check_ok_00c4
  2216 00000571 FF742410                	push qword [rsp + 8 * 2]
  2217 00000575 6A01                    	push 1
  2218 00000577 E902280100              	jmp L_error_incorrect_arity_simple
  2219                                  .L_lambda_simple_arity_check_ok_00c4:
  2220 0000057C C8000000                	enter 0, 0
  2221                                  	; preparing a non-tail-call
  2222                                  	; preparing a non-tail-call
  2223 00000580 488B4520                	mov rax, PARAM(0)	; param x
  2224 00000584 50                      	push rax
  2225 00000585 6A01                    	push 1	; arg count
  2226 00000587 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2227 0000058F 803805                  	cmp byte [rax], T_undefined
  2228 00000592 0F8400270100            	je L_error_fvar_undefined
  2229 00000598 803804                  	cmp byte [rax], T_closure
  2230 0000059B 0F857B270100            	jne L_error_non_closure
  2231 000005A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2232 000005A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2233 000005A7 50                      	push rax
  2234 000005A8 6A01                    	push 1	; arg count
  2235 000005AA 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2236 000005B2 803805                  	cmp byte [rax], T_undefined
  2237 000005B5 0F84DD260100            	je L_error_fvar_undefined
  2238 000005BB 803804                  	cmp byte [rax], T_closure
  2239 000005BE 0F8558270100            	jne L_error_non_closure
  2240 000005C4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2241 000005C7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2242 000005CA C9                      	leave
  2243 000005CB C21800                  	ret AND_KILL_FRAME(1)
  2244                                  .L_lambda_simple_end_00c4:	; new closure is in rax
  2245 000005CE 48890425[7E100000]      	mov qword [free_var_41], rax
  2246 000005D6 48B8-                   	mov rax, sob_void
  2246 000005D8 [0000000000000000] 
  2247                                  
  2248 000005E0 4889C7                  	mov rdi, rax
  2249 000005E3 E8322A0100              	call print_sexpr_if_not_void
  2250 000005E8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2251 000005ED E8D3270100              	call malloc
  2252 000005F2 50                      	push rax
  2253 000005F3 BF00000000              	mov rdi, 8 * 0	; new rib
  2254 000005F8 E8C8270100              	call malloc
  2255 000005FD 50                      	push rax
  2256 000005FE BF08000000              	mov rdi, 8 * 1	; extended env
  2257 00000603 E8BD270100              	call malloc
  2258 00000608 488B7D10                	mov rdi, ENV
  2259 0000060C BE00000000              	mov rsi, 0
  2260 00000611 BA01000000              	mov rdx, 1
  2261                                  .L_lambda_simple_env_loop_00c5:	; ext_env[i + 1] <-- env[i]
  2262 00000616 4883FE00                	cmp rsi, 0
  2263 0000061A 7410                    	je .L_lambda_simple_env_end_00c5
  2264 0000061C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2265 00000620 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2266 00000624 48FFC6                  	inc rsi
  2267 00000627 48FFC2                  	inc rdx
  2268 0000062A EBEA                    	jmp .L_lambda_simple_env_loop_00c5
  2269                                  .L_lambda_simple_env_end_00c5:
  2270 0000062C 5B                      	pop rbx
  2271 0000062D BE00000000              	mov rsi, 0
  2272                                  .L_lambda_simple_params_loop_00c5:	; copy params
  2273 00000632 4883FE00                	cmp rsi, 0
  2274 00000636 740E                    	je .L_lambda_simple_params_end_00c5
  2275 00000638 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2276 0000063D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2277 00000641 48FFC6                  	inc rsi
  2278 00000644 EBEC                    	jmp .L_lambda_simple_params_loop_00c5
  2279                                  .L_lambda_simple_params_end_00c5:
  2280 00000646 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2281 00000649 4889C3                  	mov rbx, rax
  2282 0000064C 58                      	pop rax
  2283 0000064D C60004                  	mov byte [rax], T_closure
  2284 00000650 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2285 00000654 48C74009[5E060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c5
  2286 0000065C EB65                    	jmp .L_lambda_simple_end_00c5
  2287                                  .L_lambda_simple_code_00c5:	; lambda-simple body
  2288 0000065E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2289 00000664 740B                    	je .L_lambda_simple_arity_check_ok_00c5
  2290 00000666 FF742410                	push qword [rsp + 8 * 2]
  2291 0000066A 6A01                    	push 1
  2292 0000066C E90D270100              	jmp L_error_incorrect_arity_simple
  2293                                  .L_lambda_simple_arity_check_ok_00c5:
  2294 00000671 C8000000                	enter 0, 0
  2295                                  	; preparing a non-tail-call
  2296                                  	; preparing a non-tail-call
  2297 00000675 488B4520                	mov rax, PARAM(0)	; param x
  2298 00000679 50                      	push rax
  2299 0000067A 6A01                    	push 1	; arg count
  2300 0000067C 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2301 00000684 803805                  	cmp byte [rax], T_undefined
  2302 00000687 0F840B260100            	je L_error_fvar_undefined
  2303 0000068D 803804                  	cmp byte [rax], T_closure
  2304 00000690 0F8586260100            	jne L_error_non_closure
  2305 00000696 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2306 00000699 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2307 0000069C 50                      	push rax
  2308 0000069D 6A01                    	push 1	; arg count
  2309 0000069F 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2310 000006A7 803805                  	cmp byte [rax], T_undefined
  2311 000006AA 0F84E8250100            	je L_error_fvar_undefined
  2312 000006B0 803804                  	cmp byte [rax], T_closure
  2313 000006B3 0F8563260100            	jne L_error_non_closure
  2314 000006B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2315 000006BC FF5009                  	call SOB_CLOSURE_CODE(rax)
  2316 000006BF C9                      	leave
  2317 000006C0 C21800                  	ret AND_KILL_FRAME(1)
  2318                                  .L_lambda_simple_end_00c5:	; new closure is in rax
  2319 000006C3 48890425[F5100000]      	mov qword [free_var_48], rax
  2320 000006CB 48B8-                   	mov rax, sob_void
  2320 000006CD [0000000000000000] 
  2321                                  
  2322 000006D5 4889C7                  	mov rdi, rax
  2323 000006D8 E83D290100              	call print_sexpr_if_not_void
  2324 000006DD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2325 000006E2 E8DE260100              	call malloc
  2326 000006E7 50                      	push rax
  2327 000006E8 BF00000000              	mov rdi, 8 * 0	; new rib
  2328 000006ED E8D3260100              	call malloc
  2329 000006F2 50                      	push rax
  2330 000006F3 BF08000000              	mov rdi, 8 * 1	; extended env
  2331 000006F8 E8C8260100              	call malloc
  2332 000006FD 488B7D10                	mov rdi, ENV
  2333 00000701 BE00000000              	mov rsi, 0
  2334 00000706 BA01000000              	mov rdx, 1
  2335                                  .L_lambda_simple_env_loop_00c6:	; ext_env[i + 1] <-- env[i]
  2336 0000070B 4883FE00                	cmp rsi, 0
  2337 0000070F 7410                    	je .L_lambda_simple_env_end_00c6
  2338 00000711 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2339 00000715 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2340 00000719 48FFC6                  	inc rsi
  2341 0000071C 48FFC2                  	inc rdx
  2342 0000071F EBEA                    	jmp .L_lambda_simple_env_loop_00c6
  2343                                  .L_lambda_simple_env_end_00c6:
  2344 00000721 5B                      	pop rbx
  2345 00000722 BE00000000              	mov rsi, 0
  2346                                  .L_lambda_simple_params_loop_00c6:	; copy params
  2347 00000727 4883FE00                	cmp rsi, 0
  2348 0000072B 740E                    	je .L_lambda_simple_params_end_00c6
  2349 0000072D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2350 00000732 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2351 00000736 48FFC6                  	inc rsi
  2352 00000739 EBEC                    	jmp .L_lambda_simple_params_loop_00c6
  2353                                  .L_lambda_simple_params_end_00c6:
  2354 0000073B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2355 0000073E 4889C3                  	mov rbx, rax
  2356 00000741 58                      	pop rax
  2357 00000742 C60004                  	mov byte [rax], T_closure
  2358 00000745 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2359 00000749 48C74009[53070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c6
  2360 00000751 EB65                    	jmp .L_lambda_simple_end_00c6
  2361                                  .L_lambda_simple_code_00c6:	; lambda-simple body
  2362 00000753 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2363 00000759 740B                    	je .L_lambda_simple_arity_check_ok_00c6
  2364 0000075B FF742410                	push qword [rsp + 8 * 2]
  2365 0000075F 6A01                    	push 1
  2366 00000761 E918260100              	jmp L_error_incorrect_arity_simple
  2367                                  .L_lambda_simple_arity_check_ok_00c6:
  2368 00000766 C8000000                	enter 0, 0
  2369                                  	; preparing a non-tail-call
  2370                                  	; preparing a non-tail-call
  2371 0000076A 488B4520                	mov rax, PARAM(0)	; param x
  2372 0000076E 50                      	push rax
  2373 0000076F 6A01                    	push 1	; arg count
  2374 00000771 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2375 00000779 803805                  	cmp byte [rax], T_undefined
  2376 0000077C 0F8416250100            	je L_error_fvar_undefined
  2377 00000782 803804                  	cmp byte [rax], T_closure
  2378 00000785 0F8591250100            	jne L_error_non_closure
  2379 0000078B FF7001                  	push SOB_CLOSURE_ENV(rax)
  2380 0000078E FF5009                  	call SOB_CLOSURE_CODE(rax)
  2381 00000791 50                      	push rax
  2382 00000792 6A01                    	push 1	; arg count
  2383 00000794 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2384 0000079C 803805                  	cmp byte [rax], T_undefined
  2385 0000079F 0F84F3240100            	je L_error_fvar_undefined
  2386 000007A5 803804                  	cmp byte [rax], T_closure
  2387 000007A8 0F856E250100            	jne L_error_non_closure
  2388 000007AE FF7001                  	push SOB_CLOSURE_ENV(rax)
  2389 000007B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2390 000007B4 C9                      	leave
  2391 000007B5 C21800                  	ret AND_KILL_FRAME(1)
  2392                                  .L_lambda_simple_end_00c6:	; new closure is in rax
  2393 000007B8 48890425[7D110000]      	mov qword [free_var_56], rax
  2394 000007C0 48B8-                   	mov rax, sob_void
  2394 000007C2 [0000000000000000] 
  2395                                  
  2396 000007CA 4889C7                  	mov rdi, rax
  2397 000007CD E848280100              	call print_sexpr_if_not_void
  2398 000007D2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2399 000007D7 E8E9250100              	call malloc
  2400 000007DC 50                      	push rax
  2401 000007DD BF00000000              	mov rdi, 8 * 0	; new rib
  2402 000007E2 E8DE250100              	call malloc
  2403 000007E7 50                      	push rax
  2404 000007E8 BF08000000              	mov rdi, 8 * 1	; extended env
  2405 000007ED E8D3250100              	call malloc
  2406 000007F2 488B7D10                	mov rdi, ENV
  2407 000007F6 BE00000000              	mov rsi, 0
  2408 000007FB BA01000000              	mov rdx, 1
  2409                                  .L_lambda_simple_env_loop_00c7:	; ext_env[i + 1] <-- env[i]
  2410 00000800 4883FE00                	cmp rsi, 0
  2411 00000804 7410                    	je .L_lambda_simple_env_end_00c7
  2412 00000806 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2413 0000080A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2414 0000080E 48FFC6                  	inc rsi
  2415 00000811 48FFC2                  	inc rdx
  2416 00000814 EBEA                    	jmp .L_lambda_simple_env_loop_00c7
  2417                                  .L_lambda_simple_env_end_00c7:
  2418 00000816 5B                      	pop rbx
  2419 00000817 BE00000000              	mov rsi, 0
  2420                                  .L_lambda_simple_params_loop_00c7:	; copy params
  2421 0000081C 4883FE00                	cmp rsi, 0
  2422 00000820 740E                    	je .L_lambda_simple_params_end_00c7
  2423 00000822 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2424 00000827 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2425 0000082B 48FFC6                  	inc rsi
  2426 0000082E EBEC                    	jmp .L_lambda_simple_params_loop_00c7
  2427                                  .L_lambda_simple_params_end_00c7:
  2428 00000830 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2429 00000833 4889C3                  	mov rbx, rax
  2430 00000836 58                      	pop rax
  2431 00000837 C60004                  	mov byte [rax], T_closure
  2432 0000083A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2433 0000083E 48C74009[48080000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c7
  2434 00000846 EB65                    	jmp .L_lambda_simple_end_00c7
  2435                                  .L_lambda_simple_code_00c7:	; lambda-simple body
  2436 00000848 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2437 0000084E 740B                    	je .L_lambda_simple_arity_check_ok_00c7
  2438 00000850 FF742410                	push qword [rsp + 8 * 2]
  2439 00000854 6A01                    	push 1
  2440 00000856 E923250100              	jmp L_error_incorrect_arity_simple
  2441                                  .L_lambda_simple_arity_check_ok_00c7:
  2442 0000085B C8000000                	enter 0, 0
  2443                                  	; preparing a non-tail-call
  2444                                  	; preparing a non-tail-call
  2445 0000085F 488B4520                	mov rax, PARAM(0)	; param x
  2446 00000863 50                      	push rax
  2447 00000864 6A01                    	push 1	; arg count
  2448 00000866 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2449 0000086E 803805                  	cmp byte [rax], T_undefined
  2450 00000871 0F8421240100            	je L_error_fvar_undefined
  2451 00000877 803804                  	cmp byte [rax], T_closure
  2452 0000087A 0F859C240100            	jne L_error_non_closure
  2453 00000880 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2454 00000883 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2455 00000886 50                      	push rax
  2456 00000887 6A01                    	push 1	; arg count
  2457 00000889 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2458 00000891 803805                  	cmp byte [rax], T_undefined
  2459 00000894 0F84FE230100            	je L_error_fvar_undefined
  2460 0000089A 803804                  	cmp byte [rax], T_closure
  2461 0000089D 0F8579240100            	jne L_error_non_closure
  2462 000008A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2463 000008A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2464 000008A9 C9                      	leave
  2465 000008AA C21800                  	ret AND_KILL_FRAME(1)
  2466                                  .L_lambda_simple_end_00c7:	; new closure is in rax
  2467 000008AD 48890425[F4110000]      	mov qword [free_var_63], rax
  2468 000008B5 48B8-                   	mov rax, sob_void
  2468 000008B7 [0000000000000000] 
  2469                                  
  2470 000008BF 4889C7                  	mov rdi, rax
  2471 000008C2 E853270100              	call print_sexpr_if_not_void
  2472 000008C7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2473 000008CC E8F4240100              	call malloc
  2474 000008D1 50                      	push rax
  2475 000008D2 BF00000000              	mov rdi, 8 * 0	; new rib
  2476 000008D7 E8E9240100              	call malloc
  2477 000008DC 50                      	push rax
  2478 000008DD BF08000000              	mov rdi, 8 * 1	; extended env
  2479 000008E2 E8DE240100              	call malloc
  2480 000008E7 488B7D10                	mov rdi, ENV
  2481 000008EB BE00000000              	mov rsi, 0
  2482 000008F0 BA01000000              	mov rdx, 1
  2483                                  .L_lambda_simple_env_loop_00c8:	; ext_env[i + 1] <-- env[i]
  2484 000008F5 4883FE00                	cmp rsi, 0
  2485 000008F9 7410                    	je .L_lambda_simple_env_end_00c8
  2486 000008FB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2487 000008FF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2488 00000903 48FFC6                  	inc rsi
  2489 00000906 48FFC2                  	inc rdx
  2490 00000909 EBEA                    	jmp .L_lambda_simple_env_loop_00c8
  2491                                  .L_lambda_simple_env_end_00c8:
  2492 0000090B 5B                      	pop rbx
  2493 0000090C BE00000000              	mov rsi, 0
  2494                                  .L_lambda_simple_params_loop_00c8:	; copy params
  2495 00000911 4883FE00                	cmp rsi, 0
  2496 00000915 740E                    	je .L_lambda_simple_params_end_00c8
  2497 00000917 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2498 0000091C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2499 00000920 48FFC6                  	inc rsi
  2500 00000923 EBEC                    	jmp .L_lambda_simple_params_loop_00c8
  2501                                  .L_lambda_simple_params_end_00c8:
  2502 00000925 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2503 00000928 4889C3                  	mov rbx, rax
  2504 0000092B 58                      	pop rax
  2505 0000092C C60004                  	mov byte [rax], T_closure
  2506 0000092F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2507 00000933 48C74009[3D090000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c8
  2508 0000093B EB65                    	jmp .L_lambda_simple_end_00c8
  2509                                  .L_lambda_simple_code_00c8:	; lambda-simple body
  2510 0000093D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2511 00000943 740B                    	je .L_lambda_simple_arity_check_ok_00c8
  2512 00000945 FF742410                	push qword [rsp + 8 * 2]
  2513 00000949 6A01                    	push 1
  2514 0000094B E92E240100              	jmp L_error_incorrect_arity_simple
  2515                                  .L_lambda_simple_arity_check_ok_00c8:
  2516 00000950 C8000000                	enter 0, 0
  2517                                  	; preparing a non-tail-call
  2518                                  	; preparing a non-tail-call
  2519 00000954 488B4520                	mov rax, PARAM(0)	; param x
  2520 00000958 50                      	push rax
  2521 00000959 6A01                    	push 1	; arg count
  2522 0000095B 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  2523 00000963 803805                  	cmp byte [rax], T_undefined
  2524 00000966 0F842C230100            	je L_error_fvar_undefined
  2525 0000096C 803804                  	cmp byte [rax], T_closure
  2526 0000096F 0F85A7230100            	jne L_error_non_closure
  2527 00000975 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2528 00000978 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2529 0000097B 50                      	push rax
  2530 0000097C 6A01                    	push 1	; arg count
  2531 0000097E 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2532 00000986 803805                  	cmp byte [rax], T_undefined
  2533 00000989 0F8409230100            	je L_error_fvar_undefined
  2534 0000098F 803804                  	cmp byte [rax], T_closure
  2535 00000992 0F8584230100            	jne L_error_non_closure
  2536 00000998 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2537 0000099B FF5009                  	call SOB_CLOSURE_CODE(rax)
  2538 0000099E C9                      	leave
  2539 0000099F C21800                  	ret AND_KILL_FRAME(1)
  2540                                  .L_lambda_simple_end_00c8:	; new closure is in rax
  2541 000009A2 48890425[3A100000]      	mov qword [free_var_37], rax
  2542 000009AA 48B8-                   	mov rax, sob_void
  2542 000009AC [0000000000000000] 
  2543                                  
  2544 000009B4 4889C7                  	mov rdi, rax
  2545 000009B7 E85E260100              	call print_sexpr_if_not_void
  2546 000009BC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2547 000009C1 E8FF230100              	call malloc
  2548 000009C6 50                      	push rax
  2549 000009C7 BF00000000              	mov rdi, 8 * 0	; new rib
  2550 000009CC E8F4230100              	call malloc
  2551 000009D1 50                      	push rax
  2552 000009D2 BF08000000              	mov rdi, 8 * 1	; extended env
  2553 000009D7 E8E9230100              	call malloc
  2554 000009DC 488B7D10                	mov rdi, ENV
  2555 000009E0 BE00000000              	mov rsi, 0
  2556 000009E5 BA01000000              	mov rdx, 1
  2557                                  .L_lambda_simple_env_loop_00c9:	; ext_env[i + 1] <-- env[i]
  2558 000009EA 4883FE00                	cmp rsi, 0
  2559 000009EE 7410                    	je .L_lambda_simple_env_end_00c9
  2560 000009F0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2561 000009F4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2562 000009F8 48FFC6                  	inc rsi
  2563 000009FB 48FFC2                  	inc rdx
  2564 000009FE EBEA                    	jmp .L_lambda_simple_env_loop_00c9
  2565                                  .L_lambda_simple_env_end_00c9:
  2566 00000A00 5B                      	pop rbx
  2567 00000A01 BE00000000              	mov rsi, 0
  2568                                  .L_lambda_simple_params_loop_00c9:	; copy params
  2569 00000A06 4883FE00                	cmp rsi, 0
  2570 00000A0A 740E                    	je .L_lambda_simple_params_end_00c9
  2571 00000A0C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2572 00000A11 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2573 00000A15 48FFC6                  	inc rsi
  2574 00000A18 EBEC                    	jmp .L_lambda_simple_params_loop_00c9
  2575                                  .L_lambda_simple_params_end_00c9:
  2576 00000A1A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2577 00000A1D 4889C3                  	mov rbx, rax
  2578 00000A20 58                      	pop rax
  2579 00000A21 C60004                  	mov byte [rax], T_closure
  2580 00000A24 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2581 00000A28 48C74009[320A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c9
  2582 00000A30 EB65                    	jmp .L_lambda_simple_end_00c9
  2583                                  .L_lambda_simple_code_00c9:	; lambda-simple body
  2584 00000A32 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2585 00000A38 740B                    	je .L_lambda_simple_arity_check_ok_00c9
  2586 00000A3A FF742410                	push qword [rsp + 8 * 2]
  2587 00000A3E 6A01                    	push 1
  2588 00000A40 E939230100              	jmp L_error_incorrect_arity_simple
  2589                                  .L_lambda_simple_arity_check_ok_00c9:
  2590 00000A45 C8000000                	enter 0, 0
  2591                                  	; preparing a non-tail-call
  2592                                  	; preparing a non-tail-call
  2593 00000A49 488B4520                	mov rax, PARAM(0)	; param x
  2594 00000A4D 50                      	push rax
  2595 00000A4E 6A01                    	push 1	; arg count
  2596 00000A50 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  2597 00000A58 803805                  	cmp byte [rax], T_undefined
  2598 00000A5B 0F8437220100            	je L_error_fvar_undefined
  2599 00000A61 803804                  	cmp byte [rax], T_closure
  2600 00000A64 0F85B2220100            	jne L_error_non_closure
  2601 00000A6A FF7001                  	push SOB_CLOSURE_ENV(rax)
  2602 00000A6D FF5009                  	call SOB_CLOSURE_CODE(rax)
  2603 00000A70 50                      	push rax
  2604 00000A71 6A01                    	push 1	; arg count
  2605 00000A73 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2606 00000A7B 803805                  	cmp byte [rax], T_undefined
  2607 00000A7E 0F8414220100            	je L_error_fvar_undefined
  2608 00000A84 803804                  	cmp byte [rax], T_closure
  2609 00000A87 0F858F220100            	jne L_error_non_closure
  2610 00000A8D FF7001                  	push SOB_CLOSURE_ENV(rax)
  2611 00000A90 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2612 00000A93 C9                      	leave
  2613 00000A94 C21800                  	ret AND_KILL_FRAME(1)
  2614                                  .L_lambda_simple_end_00c9:	; new closure is in rax
  2615 00000A97 48890425[6D100000]      	mov qword [free_var_40], rax
  2616 00000A9F 48B8-                   	mov rax, sob_void
  2616 00000AA1 [0000000000000000] 
  2617                                  
  2618 00000AA9 4889C7                  	mov rdi, rax
  2619 00000AAC E869250100              	call print_sexpr_if_not_void
  2620 00000AB1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2621 00000AB6 E80A230100              	call malloc
  2622 00000ABB 50                      	push rax
  2623 00000ABC BF00000000              	mov rdi, 8 * 0	; new rib
  2624 00000AC1 E8FF220100              	call malloc
  2625 00000AC6 50                      	push rax
  2626 00000AC7 BF08000000              	mov rdi, 8 * 1	; extended env
  2627 00000ACC E8F4220100              	call malloc
  2628 00000AD1 488B7D10                	mov rdi, ENV
  2629 00000AD5 BE00000000              	mov rsi, 0
  2630 00000ADA BA01000000              	mov rdx, 1
  2631                                  .L_lambda_simple_env_loop_00ca:	; ext_env[i + 1] <-- env[i]
  2632 00000ADF 4883FE00                	cmp rsi, 0
  2633 00000AE3 7410                    	je .L_lambda_simple_env_end_00ca
  2634 00000AE5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2635 00000AE9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2636 00000AED 48FFC6                  	inc rsi
  2637 00000AF0 48FFC2                  	inc rdx
  2638 00000AF3 EBEA                    	jmp .L_lambda_simple_env_loop_00ca
  2639                                  .L_lambda_simple_env_end_00ca:
  2640 00000AF5 5B                      	pop rbx
  2641 00000AF6 BE00000000              	mov rsi, 0
  2642                                  .L_lambda_simple_params_loop_00ca:	; copy params
  2643 00000AFB 4883FE00                	cmp rsi, 0
  2644 00000AFF 740E                    	je .L_lambda_simple_params_end_00ca
  2645 00000B01 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2646 00000B06 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2647 00000B0A 48FFC6                  	inc rsi
  2648 00000B0D EBEC                    	jmp .L_lambda_simple_params_loop_00ca
  2649                                  .L_lambda_simple_params_end_00ca:
  2650 00000B0F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2651 00000B12 4889C3                  	mov rbx, rax
  2652 00000B15 58                      	pop rax
  2653 00000B16 C60004                  	mov byte [rax], T_closure
  2654 00000B19 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2655 00000B1D 48C74009[270B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ca
  2656 00000B25 EB65                    	jmp .L_lambda_simple_end_00ca
  2657                                  .L_lambda_simple_code_00ca:	; lambda-simple body
  2658 00000B27 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2659 00000B2D 740B                    	je .L_lambda_simple_arity_check_ok_00ca
  2660 00000B2F FF742410                	push qword [rsp + 8 * 2]
  2661 00000B33 6A01                    	push 1
  2662 00000B35 E944220100              	jmp L_error_incorrect_arity_simple
  2663                                  .L_lambda_simple_arity_check_ok_00ca:
  2664 00000B3A C8000000                	enter 0, 0
  2665                                  	; preparing a non-tail-call
  2666                                  	; preparing a non-tail-call
  2667 00000B3E 488B4520                	mov rax, PARAM(0)	; param x
  2668 00000B42 50                      	push rax
  2669 00000B43 6A01                    	push 1	; arg count
  2670 00000B45 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  2671 00000B4D 803805                  	cmp byte [rax], T_undefined
  2672 00000B50 0F8442210100            	je L_error_fvar_undefined
  2673 00000B56 803804                  	cmp byte [rax], T_closure
  2674 00000B59 0F85BD210100            	jne L_error_non_closure
  2675 00000B5F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2676 00000B62 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2677 00000B65 50                      	push rax
  2678 00000B66 6A01                    	push 1	; arg count
  2679 00000B68 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2680 00000B70 803805                  	cmp byte [rax], T_undefined
  2681 00000B73 0F841F210100            	je L_error_fvar_undefined
  2682 00000B79 803804                  	cmp byte [rax], T_closure
  2683 00000B7C 0F859A210100            	jne L_error_non_closure
  2684 00000B82 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2685 00000B85 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2686 00000B88 C9                      	leave
  2687 00000B89 C21800                  	ret AND_KILL_FRAME(1)
  2688                                  .L_lambda_simple_end_00ca:	; new closure is in rax
  2689 00000B8C 48890425[B1100000]      	mov qword [free_var_44], rax
  2690 00000B94 48B8-                   	mov rax, sob_void
  2690 00000B96 [0000000000000000] 
  2691                                  
  2692 00000B9E 4889C7                  	mov rdi, rax
  2693 00000BA1 E874240100              	call print_sexpr_if_not_void
  2694 00000BA6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2695 00000BAB E815220100              	call malloc
  2696 00000BB0 50                      	push rax
  2697 00000BB1 BF00000000              	mov rdi, 8 * 0	; new rib
  2698 00000BB6 E80A220100              	call malloc
  2699 00000BBB 50                      	push rax
  2700 00000BBC BF08000000              	mov rdi, 8 * 1	; extended env
  2701 00000BC1 E8FF210100              	call malloc
  2702 00000BC6 488B7D10                	mov rdi, ENV
  2703 00000BCA BE00000000              	mov rsi, 0
  2704 00000BCF BA01000000              	mov rdx, 1
  2705                                  .L_lambda_simple_env_loop_00cb:	; ext_env[i + 1] <-- env[i]
  2706 00000BD4 4883FE00                	cmp rsi, 0
  2707 00000BD8 7410                    	je .L_lambda_simple_env_end_00cb
  2708 00000BDA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2709 00000BDE 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2710 00000BE2 48FFC6                  	inc rsi
  2711 00000BE5 48FFC2                  	inc rdx
  2712 00000BE8 EBEA                    	jmp .L_lambda_simple_env_loop_00cb
  2713                                  .L_lambda_simple_env_end_00cb:
  2714 00000BEA 5B                      	pop rbx
  2715 00000BEB BE00000000              	mov rsi, 0
  2716                                  .L_lambda_simple_params_loop_00cb:	; copy params
  2717 00000BF0 4883FE00                	cmp rsi, 0
  2718 00000BF4 740E                    	je .L_lambda_simple_params_end_00cb
  2719 00000BF6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2720 00000BFB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2721 00000BFF 48FFC6                  	inc rsi
  2722 00000C02 EBEC                    	jmp .L_lambda_simple_params_loop_00cb
  2723                                  .L_lambda_simple_params_end_00cb:
  2724 00000C04 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2725 00000C07 4889C3                  	mov rbx, rax
  2726 00000C0A 58                      	pop rax
  2727 00000C0B C60004                  	mov byte [rax], T_closure
  2728 00000C0E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2729 00000C12 48C74009[1C0C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cb
  2730 00000C1A EB65                    	jmp .L_lambda_simple_end_00cb
  2731                                  .L_lambda_simple_code_00cb:	; lambda-simple body
  2732 00000C1C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2733 00000C22 740B                    	je .L_lambda_simple_arity_check_ok_00cb
  2734 00000C24 FF742410                	push qword [rsp + 8 * 2]
  2735 00000C28 6A01                    	push 1
  2736 00000C2A E94F210100              	jmp L_error_incorrect_arity_simple
  2737                                  .L_lambda_simple_arity_check_ok_00cb:
  2738 00000C2F C8000000                	enter 0, 0
  2739                                  	; preparing a non-tail-call
  2740                                  	; preparing a non-tail-call
  2741 00000C33 488B4520                	mov rax, PARAM(0)	; param x
  2742 00000C37 50                      	push rax
  2743 00000C38 6A01                    	push 1	; arg count
  2744 00000C3A 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  2745 00000C42 803805                  	cmp byte [rax], T_undefined
  2746 00000C45 0F844D200100            	je L_error_fvar_undefined
  2747 00000C4B 803804                  	cmp byte [rax], T_closure
  2748 00000C4E 0F85C8200100            	jne L_error_non_closure
  2749 00000C54 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2750 00000C57 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2751 00000C5A 50                      	push rax
  2752 00000C5B 6A01                    	push 1	; arg count
  2753 00000C5D 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2754 00000C65 803805                  	cmp byte [rax], T_undefined
  2755 00000C68 0F842A200100            	je L_error_fvar_undefined
  2756 00000C6E 803804                  	cmp byte [rax], T_closure
  2757 00000C71 0F85A5200100            	jne L_error_non_closure
  2758 00000C77 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2759 00000C7A FF5009                  	call SOB_CLOSURE_CODE(rax)
  2760 00000C7D C9                      	leave
  2761 00000C7E C21800                  	ret AND_KILL_FRAME(1)
  2762                                  .L_lambda_simple_end_00cb:	; new closure is in rax
  2763 00000C81 48890425[E4100000]      	mov qword [free_var_47], rax
  2764 00000C89 48B8-                   	mov rax, sob_void
  2764 00000C8B [0000000000000000] 
  2765                                  
  2766 00000C93 4889C7                  	mov rdi, rax
  2767 00000C96 E87F230100              	call print_sexpr_if_not_void
  2768 00000C9B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2769 00000CA0 E820210100              	call malloc
  2770 00000CA5 50                      	push rax
  2771 00000CA6 BF00000000              	mov rdi, 8 * 0	; new rib
  2772 00000CAB E815210100              	call malloc
  2773 00000CB0 50                      	push rax
  2774 00000CB1 BF08000000              	mov rdi, 8 * 1	; extended env
  2775 00000CB6 E80A210100              	call malloc
  2776 00000CBB 488B7D10                	mov rdi, ENV
  2777 00000CBF BE00000000              	mov rsi, 0
  2778 00000CC4 BA01000000              	mov rdx, 1
  2779                                  .L_lambda_simple_env_loop_00cc:	; ext_env[i + 1] <-- env[i]
  2780 00000CC9 4883FE00                	cmp rsi, 0
  2781 00000CCD 7410                    	je .L_lambda_simple_env_end_00cc
  2782 00000CCF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2783 00000CD3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2784 00000CD7 48FFC6                  	inc rsi
  2785 00000CDA 48FFC2                  	inc rdx
  2786 00000CDD EBEA                    	jmp .L_lambda_simple_env_loop_00cc
  2787                                  .L_lambda_simple_env_end_00cc:
  2788 00000CDF 5B                      	pop rbx
  2789 00000CE0 BE00000000              	mov rsi, 0
  2790                                  .L_lambda_simple_params_loop_00cc:	; copy params
  2791 00000CE5 4883FE00                	cmp rsi, 0
  2792 00000CE9 740E                    	je .L_lambda_simple_params_end_00cc
  2793 00000CEB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2794 00000CF0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2795 00000CF4 48FFC6                  	inc rsi
  2796 00000CF7 EBEC                    	jmp .L_lambda_simple_params_loop_00cc
  2797                                  .L_lambda_simple_params_end_00cc:
  2798 00000CF9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2799 00000CFC 4889C3                  	mov rbx, rax
  2800 00000CFF 58                      	pop rax
  2801 00000D00 C60004                  	mov byte [rax], T_closure
  2802 00000D03 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2803 00000D07 48C74009[110D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cc
  2804 00000D0F EB65                    	jmp .L_lambda_simple_end_00cc
  2805                                  .L_lambda_simple_code_00cc:	; lambda-simple body
  2806 00000D11 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2807 00000D17 740B                    	je .L_lambda_simple_arity_check_ok_00cc
  2808 00000D19 FF742410                	push qword [rsp + 8 * 2]
  2809 00000D1D 6A01                    	push 1
  2810 00000D1F E95A200100              	jmp L_error_incorrect_arity_simple
  2811                                  .L_lambda_simple_arity_check_ok_00cc:
  2812 00000D24 C8000000                	enter 0, 0
  2813                                  	; preparing a non-tail-call
  2814                                  	; preparing a non-tail-call
  2815 00000D28 488B4520                	mov rax, PARAM(0)	; param x
  2816 00000D2C 50                      	push rax
  2817 00000D2D 6A01                    	push 1	; arg count
  2818 00000D2F 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  2819 00000D37 803805                  	cmp byte [rax], T_undefined
  2820 00000D3A 0F84581F0100            	je L_error_fvar_undefined
  2821 00000D40 803804                  	cmp byte [rax], T_closure
  2822 00000D43 0F85D31F0100            	jne L_error_non_closure
  2823 00000D49 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2824 00000D4C FF5009                  	call SOB_CLOSURE_CODE(rax)
  2825 00000D4F 50                      	push rax
  2826 00000D50 6A01                    	push 1	; arg count
  2827 00000D52 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2828 00000D5A 803805                  	cmp byte [rax], T_undefined
  2829 00000D5D 0F84351F0100            	je L_error_fvar_undefined
  2830 00000D63 803804                  	cmp byte [rax], T_closure
  2831 00000D66 0F85B01F0100            	jne L_error_non_closure
  2832 00000D6C FF7001                  	push SOB_CLOSURE_ENV(rax)
  2833 00000D6F FF5009                  	call SOB_CLOSURE_CODE(rax)
  2834 00000D72 C9                      	leave
  2835 00000D73 C21800                  	ret AND_KILL_FRAME(1)
  2836                                  .L_lambda_simple_end_00cc:	; new closure is in rax
  2837 00000D76 48890425[39110000]      	mov qword [free_var_52], rax
  2838 00000D7E 48B8-                   	mov rax, sob_void
  2838 00000D80 [0000000000000000] 
  2839                                  
  2840 00000D88 4889C7                  	mov rdi, rax
  2841 00000D8B E88A220100              	call print_sexpr_if_not_void
  2842 00000D90 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2843 00000D95 E82B200100              	call malloc
  2844 00000D9A 50                      	push rax
  2845 00000D9B BF00000000              	mov rdi, 8 * 0	; new rib
  2846 00000DA0 E820200100              	call malloc
  2847 00000DA5 50                      	push rax
  2848 00000DA6 BF08000000              	mov rdi, 8 * 1	; extended env
  2849 00000DAB E815200100              	call malloc
  2850 00000DB0 488B7D10                	mov rdi, ENV
  2851 00000DB4 BE00000000              	mov rsi, 0
  2852 00000DB9 BA01000000              	mov rdx, 1
  2853                                  .L_lambda_simple_env_loop_00cd:	; ext_env[i + 1] <-- env[i]
  2854 00000DBE 4883FE00                	cmp rsi, 0
  2855 00000DC2 7410                    	je .L_lambda_simple_env_end_00cd
  2856 00000DC4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2857 00000DC8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2858 00000DCC 48FFC6                  	inc rsi
  2859 00000DCF 48FFC2                  	inc rdx
  2860 00000DD2 EBEA                    	jmp .L_lambda_simple_env_loop_00cd
  2861                                  .L_lambda_simple_env_end_00cd:
  2862 00000DD4 5B                      	pop rbx
  2863 00000DD5 BE00000000              	mov rsi, 0
  2864                                  .L_lambda_simple_params_loop_00cd:	; copy params
  2865 00000DDA 4883FE00                	cmp rsi, 0
  2866 00000DDE 740E                    	je .L_lambda_simple_params_end_00cd
  2867 00000DE0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2868 00000DE5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2869 00000DE9 48FFC6                  	inc rsi
  2870 00000DEC EBEC                    	jmp .L_lambda_simple_params_loop_00cd
  2871                                  .L_lambda_simple_params_end_00cd:
  2872 00000DEE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2873 00000DF1 4889C3                  	mov rbx, rax
  2874 00000DF4 58                      	pop rax
  2875 00000DF5 C60004                  	mov byte [rax], T_closure
  2876 00000DF8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2877 00000DFC 48C74009[060E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cd
  2878 00000E04 EB65                    	jmp .L_lambda_simple_end_00cd
  2879                                  .L_lambda_simple_code_00cd:	; lambda-simple body
  2880 00000E06 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2881 00000E0C 740B                    	je .L_lambda_simple_arity_check_ok_00cd
  2882 00000E0E FF742410                	push qword [rsp + 8 * 2]
  2883 00000E12 6A01                    	push 1
  2884 00000E14 E9651F0100              	jmp L_error_incorrect_arity_simple
  2885                                  .L_lambda_simple_arity_check_ok_00cd:
  2886 00000E19 C8000000                	enter 0, 0
  2887                                  	; preparing a non-tail-call
  2888                                  	; preparing a non-tail-call
  2889 00000E1D 488B4520                	mov rax, PARAM(0)	; param x
  2890 00000E21 50                      	push rax
  2891 00000E22 6A01                    	push 1	; arg count
  2892 00000E24 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  2893 00000E2C 803805                  	cmp byte [rax], T_undefined
  2894 00000E2F 0F84631E0100            	je L_error_fvar_undefined
  2895 00000E35 803804                  	cmp byte [rax], T_closure
  2896 00000E38 0F85DE1E0100            	jne L_error_non_closure
  2897 00000E3E FF7001                  	push SOB_CLOSURE_ENV(rax)
  2898 00000E41 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2899 00000E44 50                      	push rax
  2900 00000E45 6A01                    	push 1	; arg count
  2901 00000E47 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2902 00000E4F 803805                  	cmp byte [rax], T_undefined
  2903 00000E52 0F84401E0100            	je L_error_fvar_undefined
  2904 00000E58 803804                  	cmp byte [rax], T_closure
  2905 00000E5B 0F85BB1E0100            	jne L_error_non_closure
  2906 00000E61 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2907 00000E64 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2908 00000E67 C9                      	leave
  2909 00000E68 C21800                  	ret AND_KILL_FRAME(1)
  2910                                  .L_lambda_simple_end_00cd:	; new closure is in rax
  2911 00000E6B 48890425[6C110000]      	mov qword [free_var_55], rax
  2912 00000E73 48B8-                   	mov rax, sob_void
  2912 00000E75 [0000000000000000] 
  2913                                  
  2914 00000E7D 4889C7                  	mov rdi, rax
  2915 00000E80 E895210100              	call print_sexpr_if_not_void
  2916 00000E85 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2917 00000E8A E8361F0100              	call malloc
  2918 00000E8F 50                      	push rax
  2919 00000E90 BF00000000              	mov rdi, 8 * 0	; new rib
  2920 00000E95 E82B1F0100              	call malloc
  2921 00000E9A 50                      	push rax
  2922 00000E9B BF08000000              	mov rdi, 8 * 1	; extended env
  2923 00000EA0 E8201F0100              	call malloc
  2924 00000EA5 488B7D10                	mov rdi, ENV
  2925 00000EA9 BE00000000              	mov rsi, 0
  2926 00000EAE BA01000000              	mov rdx, 1
  2927                                  .L_lambda_simple_env_loop_00ce:	; ext_env[i + 1] <-- env[i]
  2928 00000EB3 4883FE00                	cmp rsi, 0
  2929 00000EB7 7410                    	je .L_lambda_simple_env_end_00ce
  2930 00000EB9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2931 00000EBD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2932 00000EC1 48FFC6                  	inc rsi
  2933 00000EC4 48FFC2                  	inc rdx
  2934 00000EC7 EBEA                    	jmp .L_lambda_simple_env_loop_00ce
  2935                                  .L_lambda_simple_env_end_00ce:
  2936 00000EC9 5B                      	pop rbx
  2937 00000ECA BE00000000              	mov rsi, 0
  2938                                  .L_lambda_simple_params_loop_00ce:	; copy params
  2939 00000ECF 4883FE00                	cmp rsi, 0
  2940 00000ED3 740E                    	je .L_lambda_simple_params_end_00ce
  2941 00000ED5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2942 00000EDA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2943 00000EDE 48FFC6                  	inc rsi
  2944 00000EE1 EBEC                    	jmp .L_lambda_simple_params_loop_00ce
  2945                                  .L_lambda_simple_params_end_00ce:
  2946 00000EE3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2947 00000EE6 4889C3                  	mov rbx, rax
  2948 00000EE9 58                      	pop rax
  2949 00000EEA C60004                  	mov byte [rax], T_closure
  2950 00000EED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2951 00000EF1 48C74009[FB0E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ce
  2952 00000EF9 EB65                    	jmp .L_lambda_simple_end_00ce
  2953                                  .L_lambda_simple_code_00ce:	; lambda-simple body
  2954 00000EFB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2955 00000F01 740B                    	je .L_lambda_simple_arity_check_ok_00ce
  2956 00000F03 FF742410                	push qword [rsp + 8 * 2]
  2957 00000F07 6A01                    	push 1
  2958 00000F09 E9701E0100              	jmp L_error_incorrect_arity_simple
  2959                                  .L_lambda_simple_arity_check_ok_00ce:
  2960 00000F0E C8000000                	enter 0, 0
  2961                                  	; preparing a non-tail-call
  2962                                  	; preparing a non-tail-call
  2963 00000F12 488B4520                	mov rax, PARAM(0)	; param x
  2964 00000F16 50                      	push rax
  2965 00000F17 6A01                    	push 1	; arg count
  2966 00000F19 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  2967 00000F21 803805                  	cmp byte [rax], T_undefined
  2968 00000F24 0F846E1D0100            	je L_error_fvar_undefined
  2969 00000F2A 803804                  	cmp byte [rax], T_closure
  2970 00000F2D 0F85E91D0100            	jne L_error_non_closure
  2971 00000F33 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2972 00000F36 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2973 00000F39 50                      	push rax
  2974 00000F3A 6A01                    	push 1	; arg count
  2975 00000F3C 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2976 00000F44 803805                  	cmp byte [rax], T_undefined
  2977 00000F47 0F844B1D0100            	je L_error_fvar_undefined
  2978 00000F4D 803804                  	cmp byte [rax], T_closure
  2979 00000F50 0F85C61D0100            	jne L_error_non_closure
  2980 00000F56 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2981 00000F59 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2982 00000F5C C9                      	leave
  2983 00000F5D C21800                  	ret AND_KILL_FRAME(1)
  2984                                  .L_lambda_simple_end_00ce:	; new closure is in rax
  2985 00000F60 48890425[B0110000]      	mov qword [free_var_59], rax
  2986 00000F68 48B8-                   	mov rax, sob_void
  2986 00000F6A [0000000000000000] 
  2987                                  
  2988 00000F72 4889C7                  	mov rdi, rax
  2989 00000F75 E8A0200100              	call print_sexpr_if_not_void
  2990 00000F7A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2991 00000F7F E8411E0100              	call malloc
  2992 00000F84 50                      	push rax
  2993 00000F85 BF00000000              	mov rdi, 8 * 0	; new rib
  2994 00000F8A E8361E0100              	call malloc
  2995 00000F8F 50                      	push rax
  2996 00000F90 BF08000000              	mov rdi, 8 * 1	; extended env
  2997 00000F95 E82B1E0100              	call malloc
  2998 00000F9A 488B7D10                	mov rdi, ENV
  2999 00000F9E BE00000000              	mov rsi, 0
  3000 00000FA3 BA01000000              	mov rdx, 1
  3001                                  .L_lambda_simple_env_loop_00cf:	; ext_env[i + 1] <-- env[i]
  3002 00000FA8 4883FE00                	cmp rsi, 0
  3003 00000FAC 7410                    	je .L_lambda_simple_env_end_00cf
  3004 00000FAE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3005 00000FB2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3006 00000FB6 48FFC6                  	inc rsi
  3007 00000FB9 48FFC2                  	inc rdx
  3008 00000FBC EBEA                    	jmp .L_lambda_simple_env_loop_00cf
  3009                                  .L_lambda_simple_env_end_00cf:
  3010 00000FBE 5B                      	pop rbx
  3011 00000FBF BE00000000              	mov rsi, 0
  3012                                  .L_lambda_simple_params_loop_00cf:	; copy params
  3013 00000FC4 4883FE00                	cmp rsi, 0
  3014 00000FC8 740E                    	je .L_lambda_simple_params_end_00cf
  3015 00000FCA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3016 00000FCF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3017 00000FD3 48FFC6                  	inc rsi
  3018 00000FD6 EBEC                    	jmp .L_lambda_simple_params_loop_00cf
  3019                                  .L_lambda_simple_params_end_00cf:
  3020 00000FD8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3021 00000FDB 4889C3                  	mov rbx, rax
  3022 00000FDE 58                      	pop rax
  3023 00000FDF C60004                  	mov byte [rax], T_closure
  3024 00000FE2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3025 00000FE6 48C74009[F00F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00cf
  3026 00000FEE EB65                    	jmp .L_lambda_simple_end_00cf
  3027                                  .L_lambda_simple_code_00cf:	; lambda-simple body
  3028 00000FF0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3029 00000FF6 740B                    	je .L_lambda_simple_arity_check_ok_00cf
  3030 00000FF8 FF742410                	push qword [rsp + 8 * 2]
  3031 00000FFC 6A01                    	push 1
  3032 00000FFE E97B1D0100              	jmp L_error_incorrect_arity_simple
  3033                                  .L_lambda_simple_arity_check_ok_00cf:
  3034 00001003 C8000000                	enter 0, 0
  3035                                  	; preparing a non-tail-call
  3036                                  	; preparing a non-tail-call
  3037 00001007 488B4520                	mov rax, PARAM(0)	; param x
  3038 0000100B 50                      	push rax
  3039 0000100C 6A01                    	push 1	; arg count
  3040 0000100E 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3041 00001016 803805                  	cmp byte [rax], T_undefined
  3042 00001019 0F84791C0100            	je L_error_fvar_undefined
  3043 0000101F 803804                  	cmp byte [rax], T_closure
  3044 00001022 0F85F41C0100            	jne L_error_non_closure
  3045 00001028 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3046 0000102B FF5009                  	call SOB_CLOSURE_CODE(rax)
  3047 0000102E 50                      	push rax
  3048 0000102F 6A01                    	push 1	; arg count
  3049 00001031 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3050 00001039 803805                  	cmp byte [rax], T_undefined
  3051 0000103C 0F84561C0100            	je L_error_fvar_undefined
  3052 00001042 803804                  	cmp byte [rax], T_closure
  3053 00001045 0F85D11C0100            	jne L_error_non_closure
  3054 0000104B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3055 0000104E FF5009                  	call SOB_CLOSURE_CODE(rax)
  3056 00001051 C9                      	leave
  3057 00001052 C21800                  	ret AND_KILL_FRAME(1)
  3058                                  .L_lambda_simple_end_00cf:	; new closure is in rax
  3059 00001055 48890425[E3110000]      	mov qword [free_var_62], rax
  3060 0000105D 48B8-                   	mov rax, sob_void
  3060 0000105F [0000000000000000] 
  3061                                  
  3062 00001067 4889C7                  	mov rdi, rax
  3063 0000106A E8AB1F0100              	call print_sexpr_if_not_void
  3064 0000106F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3065 00001074 E84C1D0100              	call malloc
  3066 00001079 50                      	push rax
  3067 0000107A BF00000000              	mov rdi, 8 * 0	; new rib
  3068 0000107F E8411D0100              	call malloc
  3069 00001084 50                      	push rax
  3070 00001085 BF08000000              	mov rdi, 8 * 1	; extended env
  3071 0000108A E8361D0100              	call malloc
  3072 0000108F 488B7D10                	mov rdi, ENV
  3073 00001093 BE00000000              	mov rsi, 0
  3074 00001098 BA01000000              	mov rdx, 1
  3075                                  .L_lambda_simple_env_loop_00d0:	; ext_env[i + 1] <-- env[i]
  3076 0000109D 4883FE00                	cmp rsi, 0
  3077 000010A1 7410                    	je .L_lambda_simple_env_end_00d0
  3078 000010A3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3079 000010A7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3080 000010AB 48FFC6                  	inc rsi
  3081 000010AE 48FFC2                  	inc rdx
  3082 000010B1 EBEA                    	jmp .L_lambda_simple_env_loop_00d0
  3083                                  .L_lambda_simple_env_end_00d0:
  3084 000010B3 5B                      	pop rbx
  3085 000010B4 BE00000000              	mov rsi, 0
  3086                                  .L_lambda_simple_params_loop_00d0:	; copy params
  3087 000010B9 4883FE00                	cmp rsi, 0
  3088 000010BD 740E                    	je .L_lambda_simple_params_end_00d0
  3089 000010BF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3090 000010C4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3091 000010C8 48FFC6                  	inc rsi
  3092 000010CB EBEC                    	jmp .L_lambda_simple_params_loop_00d0
  3093                                  .L_lambda_simple_params_end_00d0:
  3094 000010CD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3095 000010D0 4889C3                  	mov rbx, rax
  3096 000010D3 58                      	pop rax
  3097 000010D4 C60004                  	mov byte [rax], T_closure
  3098 000010D7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3099 000010DB 48C74009[E5100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d0
  3100 000010E3 EB65                    	jmp .L_lambda_simple_end_00d0
  3101                                  .L_lambda_simple_code_00d0:	; lambda-simple body
  3102 000010E5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3103 000010EB 740B                    	je .L_lambda_simple_arity_check_ok_00d0
  3104 000010ED FF742410                	push qword [rsp + 8 * 2]
  3105 000010F1 6A01                    	push 1
  3106 000010F3 E9861C0100              	jmp L_error_incorrect_arity_simple
  3107                                  .L_lambda_simple_arity_check_ok_00d0:
  3108 000010F8 C8000000                	enter 0, 0
  3109                                  	; preparing a non-tail-call
  3110                                  	; preparing a non-tail-call
  3111 000010FC 488B4520                	mov rax, PARAM(0)	; param x
  3112 00001100 50                      	push rax
  3113 00001101 6A01                    	push 1	; arg count
  3114 00001103 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3115 0000110B 803805                  	cmp byte [rax], T_undefined
  3116 0000110E 0F84841B0100            	je L_error_fvar_undefined
  3117 00001114 803804                  	cmp byte [rax], T_closure
  3118 00001117 0F85FF1B0100            	jne L_error_non_closure
  3119 0000111D FF7001                  	push SOB_CLOSURE_ENV(rax)
  3120 00001120 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3121 00001123 50                      	push rax
  3122 00001124 6A01                    	push 1	; arg count
  3123 00001126 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3124 0000112E 803805                  	cmp byte [rax], T_undefined
  3125 00001131 0F84611B0100            	je L_error_fvar_undefined
  3126 00001137 803804                  	cmp byte [rax], T_closure
  3127 0000113A 0F85DC1B0100            	jne L_error_non_closure
  3128 00001140 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3129 00001143 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3130 00001146 C9                      	leave
  3131 00001147 C21800                  	ret AND_KILL_FRAME(1)
  3132                                  .L_lambda_simple_end_00d0:	; new closure is in rax
  3133 0000114A 48890425[18100000]      	mov qword [free_var_35], rax
  3134 00001152 48B8-                   	mov rax, sob_void
  3134 00001154 [0000000000000000] 
  3135                                  
  3136 0000115C 4889C7                  	mov rdi, rax
  3137 0000115F E8B61E0100              	call print_sexpr_if_not_void
  3138 00001164 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3139 00001169 E8571C0100              	call malloc
  3140 0000116E 50                      	push rax
  3141 0000116F BF00000000              	mov rdi, 8 * 0	; new rib
  3142 00001174 E84C1C0100              	call malloc
  3143 00001179 50                      	push rax
  3144 0000117A BF08000000              	mov rdi, 8 * 1	; extended env
  3145 0000117F E8411C0100              	call malloc
  3146 00001184 488B7D10                	mov rdi, ENV
  3147 00001188 BE00000000              	mov rsi, 0
  3148 0000118D BA01000000              	mov rdx, 1
  3149                                  .L_lambda_simple_env_loop_00d1:	; ext_env[i + 1] <-- env[i]
  3150 00001192 4883FE00                	cmp rsi, 0
  3151 00001196 7410                    	je .L_lambda_simple_env_end_00d1
  3152 00001198 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3153 0000119C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3154 000011A0 48FFC6                  	inc rsi
  3155 000011A3 48FFC2                  	inc rdx
  3156 000011A6 EBEA                    	jmp .L_lambda_simple_env_loop_00d1
  3157                                  .L_lambda_simple_env_end_00d1:
  3158 000011A8 5B                      	pop rbx
  3159 000011A9 BE00000000              	mov rsi, 0
  3160                                  .L_lambda_simple_params_loop_00d1:	; copy params
  3161 000011AE 4883FE00                	cmp rsi, 0
  3162 000011B2 740E                    	je .L_lambda_simple_params_end_00d1
  3163 000011B4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3164 000011B9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3165 000011BD 48FFC6                  	inc rsi
  3166 000011C0 EBEC                    	jmp .L_lambda_simple_params_loop_00d1
  3167                                  .L_lambda_simple_params_end_00d1:
  3168 000011C2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3169 000011C5 4889C3                  	mov rbx, rax
  3170 000011C8 58                      	pop rax
  3171 000011C9 C60004                  	mov byte [rax], T_closure
  3172 000011CC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3173 000011D0 48C74009[DA110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d1
  3174 000011D8 EB65                    	jmp .L_lambda_simple_end_00d1
  3175                                  .L_lambda_simple_code_00d1:	; lambda-simple body
  3176 000011DA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3177 000011E0 740B                    	je .L_lambda_simple_arity_check_ok_00d1
  3178 000011E2 FF742410                	push qword [rsp + 8 * 2]
  3179 000011E6 6A01                    	push 1
  3180 000011E8 E9911B0100              	jmp L_error_incorrect_arity_simple
  3181                                  .L_lambda_simple_arity_check_ok_00d1:
  3182 000011ED C8000000                	enter 0, 0
  3183                                  	; preparing a non-tail-call
  3184                                  	; preparing a non-tail-call
  3185 000011F1 488B4520                	mov rax, PARAM(0)	; param x
  3186 000011F5 50                      	push rax
  3187 000011F6 6A01                    	push 1	; arg count
  3188 000011F8 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3189 00001200 803805                  	cmp byte [rax], T_undefined
  3190 00001203 0F848F1A0100            	je L_error_fvar_undefined
  3191 00001209 803804                  	cmp byte [rax], T_closure
  3192 0000120C 0F850A1B0100            	jne L_error_non_closure
  3193 00001212 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3194 00001215 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3195 00001218 50                      	push rax
  3196 00001219 6A01                    	push 1	; arg count
  3197 0000121B 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3198 00001223 803805                  	cmp byte [rax], T_undefined
  3199 00001226 0F846C1A0100            	je L_error_fvar_undefined
  3200 0000122C 803804                  	cmp byte [rax], T_closure
  3201 0000122F 0F85E71A0100            	jne L_error_non_closure
  3202 00001235 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3203 00001238 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3204 0000123B C9                      	leave
  3205 0000123C C21800                  	ret AND_KILL_FRAME(1)
  3206                                  .L_lambda_simple_end_00d1:	; new closure is in rax
  3207 0000123F 48890425[29100000]      	mov qword [free_var_36], rax
  3208 00001247 48B8-                   	mov rax, sob_void
  3208 00001249 [0000000000000000] 
  3209                                  
  3210 00001251 4889C7                  	mov rdi, rax
  3211 00001254 E8C11D0100              	call print_sexpr_if_not_void
  3212 00001259 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3213 0000125E E8621B0100              	call malloc
  3214 00001263 50                      	push rax
  3215 00001264 BF00000000              	mov rdi, 8 * 0	; new rib
  3216 00001269 E8571B0100              	call malloc
  3217 0000126E 50                      	push rax
  3218 0000126F BF08000000              	mov rdi, 8 * 1	; extended env
  3219 00001274 E84C1B0100              	call malloc
  3220 00001279 488B7D10                	mov rdi, ENV
  3221 0000127D BE00000000              	mov rsi, 0
  3222 00001282 BA01000000              	mov rdx, 1
  3223                                  .L_lambda_simple_env_loop_00d2:	; ext_env[i + 1] <-- env[i]
  3224 00001287 4883FE00                	cmp rsi, 0
  3225 0000128B 7410                    	je .L_lambda_simple_env_end_00d2
  3226 0000128D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3227 00001291 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3228 00001295 48FFC6                  	inc rsi
  3229 00001298 48FFC2                  	inc rdx
  3230 0000129B EBEA                    	jmp .L_lambda_simple_env_loop_00d2
  3231                                  .L_lambda_simple_env_end_00d2:
  3232 0000129D 5B                      	pop rbx
  3233 0000129E BE00000000              	mov rsi, 0
  3234                                  .L_lambda_simple_params_loop_00d2:	; copy params
  3235 000012A3 4883FE00                	cmp rsi, 0
  3236 000012A7 740E                    	je .L_lambda_simple_params_end_00d2
  3237 000012A9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3238 000012AE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3239 000012B2 48FFC6                  	inc rsi
  3240 000012B5 EBEC                    	jmp .L_lambda_simple_params_loop_00d2
  3241                                  .L_lambda_simple_params_end_00d2:
  3242 000012B7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3243 000012BA 4889C3                  	mov rbx, rax
  3244 000012BD 58                      	pop rax
  3245 000012BE C60004                  	mov byte [rax], T_closure
  3246 000012C1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3247 000012C5 48C74009[CF120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d2
  3248 000012CD EB65                    	jmp .L_lambda_simple_end_00d2
  3249                                  .L_lambda_simple_code_00d2:	; lambda-simple body
  3250 000012CF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3251 000012D5 740B                    	je .L_lambda_simple_arity_check_ok_00d2
  3252 000012D7 FF742410                	push qword [rsp + 8 * 2]
  3253 000012DB 6A01                    	push 1
  3254 000012DD E99C1A0100              	jmp L_error_incorrect_arity_simple
  3255                                  .L_lambda_simple_arity_check_ok_00d2:
  3256 000012E2 C8000000                	enter 0, 0
  3257                                  	; preparing a non-tail-call
  3258                                  	; preparing a non-tail-call
  3259 000012E6 488B4520                	mov rax, PARAM(0)	; param x
  3260 000012EA 50                      	push rax
  3261 000012EB 6A01                    	push 1	; arg count
  3262 000012ED 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3263 000012F5 803805                  	cmp byte [rax], T_undefined
  3264 000012F8 0F849A190100            	je L_error_fvar_undefined
  3265 000012FE 803804                  	cmp byte [rax], T_closure
  3266 00001301 0F85151A0100            	jne L_error_non_closure
  3267 00001307 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3268 0000130A FF5009                  	call SOB_CLOSURE_CODE(rax)
  3269 0000130D 50                      	push rax
  3270 0000130E 6A01                    	push 1	; arg count
  3271 00001310 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3272 00001318 803805                  	cmp byte [rax], T_undefined
  3273 0000131B 0F8477190100            	je L_error_fvar_undefined
  3274 00001321 803804                  	cmp byte [rax], T_closure
  3275 00001324 0F85F2190100            	jne L_error_non_closure
  3276 0000132A FF7001                  	push SOB_CLOSURE_ENV(rax)
  3277 0000132D FF5009                  	call SOB_CLOSURE_CODE(rax)
  3278 00001330 C9                      	leave
  3279 00001331 C21800                  	ret AND_KILL_FRAME(1)
  3280                                  .L_lambda_simple_end_00d2:	; new closure is in rax
  3281 00001334 48890425[4B100000]      	mov qword [free_var_38], rax
  3282 0000133C 48B8-                   	mov rax, sob_void
  3282 0000133E [0000000000000000] 
  3283                                  
  3284 00001346 4889C7                  	mov rdi, rax
  3285 00001349 E8CC1C0100              	call print_sexpr_if_not_void
  3286 0000134E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3287 00001353 E86D1A0100              	call malloc
  3288 00001358 50                      	push rax
  3289 00001359 BF00000000              	mov rdi, 8 * 0	; new rib
  3290 0000135E E8621A0100              	call malloc
  3291 00001363 50                      	push rax
  3292 00001364 BF08000000              	mov rdi, 8 * 1	; extended env
  3293 00001369 E8571A0100              	call malloc
  3294 0000136E 488B7D10                	mov rdi, ENV
  3295 00001372 BE00000000              	mov rsi, 0
  3296 00001377 BA01000000              	mov rdx, 1
  3297                                  .L_lambda_simple_env_loop_00d3:	; ext_env[i + 1] <-- env[i]
  3298 0000137C 4883FE00                	cmp rsi, 0
  3299 00001380 7410                    	je .L_lambda_simple_env_end_00d3
  3300 00001382 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3301 00001386 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3302 0000138A 48FFC6                  	inc rsi
  3303 0000138D 48FFC2                  	inc rdx
  3304 00001390 EBEA                    	jmp .L_lambda_simple_env_loop_00d3
  3305                                  .L_lambda_simple_env_end_00d3:
  3306 00001392 5B                      	pop rbx
  3307 00001393 BE00000000              	mov rsi, 0
  3308                                  .L_lambda_simple_params_loop_00d3:	; copy params
  3309 00001398 4883FE00                	cmp rsi, 0
  3310 0000139C 740E                    	je .L_lambda_simple_params_end_00d3
  3311 0000139E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3312 000013A3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3313 000013A7 48FFC6                  	inc rsi
  3314 000013AA EBEC                    	jmp .L_lambda_simple_params_loop_00d3
  3315                                  .L_lambda_simple_params_end_00d3:
  3316 000013AC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3317 000013AF 4889C3                  	mov rbx, rax
  3318 000013B2 58                      	pop rax
  3319 000013B3 C60004                  	mov byte [rax], T_closure
  3320 000013B6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3321 000013BA 48C74009[C4130000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d3
  3322 000013C2 EB65                    	jmp .L_lambda_simple_end_00d3
  3323                                  .L_lambda_simple_code_00d3:	; lambda-simple body
  3324 000013C4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3325 000013CA 740B                    	je .L_lambda_simple_arity_check_ok_00d3
  3326 000013CC FF742410                	push qword [rsp + 8 * 2]
  3327 000013D0 6A01                    	push 1
  3328 000013D2 E9A7190100              	jmp L_error_incorrect_arity_simple
  3329                                  .L_lambda_simple_arity_check_ok_00d3:
  3330 000013D7 C8000000                	enter 0, 0
  3331                                  	; preparing a non-tail-call
  3332                                  	; preparing a non-tail-call
  3333 000013DB 488B4520                	mov rax, PARAM(0)	; param x
  3334 000013DF 50                      	push rax
  3335 000013E0 6A01                    	push 1	; arg count
  3336 000013E2 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3337 000013EA 803805                  	cmp byte [rax], T_undefined
  3338 000013ED 0F84A5180100            	je L_error_fvar_undefined
  3339 000013F3 803804                  	cmp byte [rax], T_closure
  3340 000013F6 0F8520190100            	jne L_error_non_closure
  3341 000013FC FF7001                  	push SOB_CLOSURE_ENV(rax)
  3342 000013FF FF5009                  	call SOB_CLOSURE_CODE(rax)
  3343 00001402 50                      	push rax
  3344 00001403 6A01                    	push 1	; arg count
  3345 00001405 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3346 0000140D 803805                  	cmp byte [rax], T_undefined
  3347 00001410 0F8482180100            	je L_error_fvar_undefined
  3348 00001416 803804                  	cmp byte [rax], T_closure
  3349 00001419 0F85FD180100            	jne L_error_non_closure
  3350 0000141F FF7001                  	push SOB_CLOSURE_ENV(rax)
  3351 00001422 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3352 00001425 C9                      	leave
  3353 00001426 C21800                  	ret AND_KILL_FRAME(1)
  3354                                  .L_lambda_simple_end_00d3:	; new closure is in rax
  3355 00001429 48890425[5C100000]      	mov qword [free_var_39], rax
  3356 00001431 48B8-                   	mov rax, sob_void
  3356 00001433 [0000000000000000] 
  3357                                  
  3358 0000143B 4889C7                  	mov rdi, rax
  3359 0000143E E8D71B0100              	call print_sexpr_if_not_void
  3360 00001443 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3361 00001448 E878190100              	call malloc
  3362 0000144D 50                      	push rax
  3363 0000144E BF00000000              	mov rdi, 8 * 0	; new rib
  3364 00001453 E86D190100              	call malloc
  3365 00001458 50                      	push rax
  3366 00001459 BF08000000              	mov rdi, 8 * 1	; extended env
  3367 0000145E E862190100              	call malloc
  3368 00001463 488B7D10                	mov rdi, ENV
  3369 00001467 BE00000000              	mov rsi, 0
  3370 0000146C BA01000000              	mov rdx, 1
  3371                                  .L_lambda_simple_env_loop_00d4:	; ext_env[i + 1] <-- env[i]
  3372 00001471 4883FE00                	cmp rsi, 0
  3373 00001475 7410                    	je .L_lambda_simple_env_end_00d4
  3374 00001477 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3375 0000147B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3376 0000147F 48FFC6                  	inc rsi
  3377 00001482 48FFC2                  	inc rdx
  3378 00001485 EBEA                    	jmp .L_lambda_simple_env_loop_00d4
  3379                                  .L_lambda_simple_env_end_00d4:
  3380 00001487 5B                      	pop rbx
  3381 00001488 BE00000000              	mov rsi, 0
  3382                                  .L_lambda_simple_params_loop_00d4:	; copy params
  3383 0000148D 4883FE00                	cmp rsi, 0
  3384 00001491 740E                    	je .L_lambda_simple_params_end_00d4
  3385 00001493 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3386 00001498 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3387 0000149C 48FFC6                  	inc rsi
  3388 0000149F EBEC                    	jmp .L_lambda_simple_params_loop_00d4
  3389                                  .L_lambda_simple_params_end_00d4:
  3390 000014A1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3391 000014A4 4889C3                  	mov rbx, rax
  3392 000014A7 58                      	pop rax
  3393 000014A8 C60004                  	mov byte [rax], T_closure
  3394 000014AB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3395 000014AF 48C74009[B9140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d4
  3396 000014B7 EB65                    	jmp .L_lambda_simple_end_00d4
  3397                                  .L_lambda_simple_code_00d4:	; lambda-simple body
  3398 000014B9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3399 000014BF 740B                    	je .L_lambda_simple_arity_check_ok_00d4
  3400 000014C1 FF742410                	push qword [rsp + 8 * 2]
  3401 000014C5 6A01                    	push 1
  3402 000014C7 E9B2180100              	jmp L_error_incorrect_arity_simple
  3403                                  .L_lambda_simple_arity_check_ok_00d4:
  3404 000014CC C8000000                	enter 0, 0
  3405                                  	; preparing a non-tail-call
  3406                                  	; preparing a non-tail-call
  3407 000014D0 488B4520                	mov rax, PARAM(0)	; param x
  3408 000014D4 50                      	push rax
  3409 000014D5 6A01                    	push 1	; arg count
  3410 000014D7 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3411 000014DF 803805                  	cmp byte [rax], T_undefined
  3412 000014E2 0F84B0170100            	je L_error_fvar_undefined
  3413 000014E8 803804                  	cmp byte [rax], T_closure
  3414 000014EB 0F852B180100            	jne L_error_non_closure
  3415 000014F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3416 000014F4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3417 000014F7 50                      	push rax
  3418 000014F8 6A01                    	push 1	; arg count
  3419 000014FA 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3420 00001502 803805                  	cmp byte [rax], T_undefined
  3421 00001505 0F848D170100            	je L_error_fvar_undefined
  3422 0000150B 803804                  	cmp byte [rax], T_closure
  3423 0000150E 0F8508180100            	jne L_error_non_closure
  3424 00001514 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3425 00001517 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3426 0000151A C9                      	leave
  3427 0000151B C21800                  	ret AND_KILL_FRAME(1)
  3428                                  .L_lambda_simple_end_00d4:	; new closure is in rax
  3429 0000151E 48890425[8F100000]      	mov qword [free_var_42], rax
  3430 00001526 48B8-                   	mov rax, sob_void
  3430 00001528 [0000000000000000] 
  3431                                  
  3432 00001530 4889C7                  	mov rdi, rax
  3433 00001533 E8E21A0100              	call print_sexpr_if_not_void
  3434 00001538 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3435 0000153D E883180100              	call malloc
  3436 00001542 50                      	push rax
  3437 00001543 BF00000000              	mov rdi, 8 * 0	; new rib
  3438 00001548 E878180100              	call malloc
  3439 0000154D 50                      	push rax
  3440 0000154E BF08000000              	mov rdi, 8 * 1	; extended env
  3441 00001553 E86D180100              	call malloc
  3442 00001558 488B7D10                	mov rdi, ENV
  3443 0000155C BE00000000              	mov rsi, 0
  3444 00001561 BA01000000              	mov rdx, 1
  3445                                  .L_lambda_simple_env_loop_00d5:	; ext_env[i + 1] <-- env[i]
  3446 00001566 4883FE00                	cmp rsi, 0
  3447 0000156A 7410                    	je .L_lambda_simple_env_end_00d5
  3448 0000156C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3449 00001570 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3450 00001574 48FFC6                  	inc rsi
  3451 00001577 48FFC2                  	inc rdx
  3452 0000157A EBEA                    	jmp .L_lambda_simple_env_loop_00d5
  3453                                  .L_lambda_simple_env_end_00d5:
  3454 0000157C 5B                      	pop rbx
  3455 0000157D BE00000000              	mov rsi, 0
  3456                                  .L_lambda_simple_params_loop_00d5:	; copy params
  3457 00001582 4883FE00                	cmp rsi, 0
  3458 00001586 740E                    	je .L_lambda_simple_params_end_00d5
  3459 00001588 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3460 0000158D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3461 00001591 48FFC6                  	inc rsi
  3462 00001594 EBEC                    	jmp .L_lambda_simple_params_loop_00d5
  3463                                  .L_lambda_simple_params_end_00d5:
  3464 00001596 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3465 00001599 4889C3                  	mov rbx, rax
  3466 0000159C 58                      	pop rax
  3467 0000159D C60004                  	mov byte [rax], T_closure
  3468 000015A0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3469 000015A4 48C74009[AE150000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d5
  3470 000015AC EB65                    	jmp .L_lambda_simple_end_00d5
  3471                                  .L_lambda_simple_code_00d5:	; lambda-simple body
  3472 000015AE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3473 000015B4 740B                    	je .L_lambda_simple_arity_check_ok_00d5
  3474 000015B6 FF742410                	push qword [rsp + 8 * 2]
  3475 000015BA 6A01                    	push 1
  3476 000015BC E9BD170100              	jmp L_error_incorrect_arity_simple
  3477                                  .L_lambda_simple_arity_check_ok_00d5:
  3478 000015C1 C8000000                	enter 0, 0
  3479                                  	; preparing a non-tail-call
  3480                                  	; preparing a non-tail-call
  3481 000015C5 488B4520                	mov rax, PARAM(0)	; param x
  3482 000015C9 50                      	push rax
  3483 000015CA 6A01                    	push 1	; arg count
  3484 000015CC 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3485 000015D4 803805                  	cmp byte [rax], T_undefined
  3486 000015D7 0F84BB160100            	je L_error_fvar_undefined
  3487 000015DD 803804                  	cmp byte [rax], T_closure
  3488 000015E0 0F8536170100            	jne L_error_non_closure
  3489 000015E6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3490 000015E9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3491 000015EC 50                      	push rax
  3492 000015ED 6A01                    	push 1	; arg count
  3493 000015EF 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3494 000015F7 803805                  	cmp byte [rax], T_undefined
  3495 000015FA 0F8498160100            	je L_error_fvar_undefined
  3496 00001600 803804                  	cmp byte [rax], T_closure
  3497 00001603 0F8513170100            	jne L_error_non_closure
  3498 00001609 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3499 0000160C FF5009                  	call SOB_CLOSURE_CODE(rax)
  3500 0000160F C9                      	leave
  3501 00001610 C21800                  	ret AND_KILL_FRAME(1)
  3502                                  .L_lambda_simple_end_00d5:	; new closure is in rax
  3503 00001613 48890425[A0100000]      	mov qword [free_var_43], rax
  3504 0000161B 48B8-                   	mov rax, sob_void
  3504 0000161D [0000000000000000] 
  3505                                  
  3506 00001625 4889C7                  	mov rdi, rax
  3507 00001628 E8ED190100              	call print_sexpr_if_not_void
  3508 0000162D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3509 00001632 E88E170100              	call malloc
  3510 00001637 50                      	push rax
  3511 00001638 BF00000000              	mov rdi, 8 * 0	; new rib
  3512 0000163D E883170100              	call malloc
  3513 00001642 50                      	push rax
  3514 00001643 BF08000000              	mov rdi, 8 * 1	; extended env
  3515 00001648 E878170100              	call malloc
  3516 0000164D 488B7D10                	mov rdi, ENV
  3517 00001651 BE00000000              	mov rsi, 0
  3518 00001656 BA01000000              	mov rdx, 1
  3519                                  .L_lambda_simple_env_loop_00d6:	; ext_env[i + 1] <-- env[i]
  3520 0000165B 4883FE00                	cmp rsi, 0
  3521 0000165F 7410                    	je .L_lambda_simple_env_end_00d6
  3522 00001661 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3523 00001665 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3524 00001669 48FFC6                  	inc rsi
  3525 0000166C 48FFC2                  	inc rdx
  3526 0000166F EBEA                    	jmp .L_lambda_simple_env_loop_00d6
  3527                                  .L_lambda_simple_env_end_00d6:
  3528 00001671 5B                      	pop rbx
  3529 00001672 BE00000000              	mov rsi, 0
  3530                                  .L_lambda_simple_params_loop_00d6:	; copy params
  3531 00001677 4883FE00                	cmp rsi, 0
  3532 0000167B 740E                    	je .L_lambda_simple_params_end_00d6
  3533 0000167D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3534 00001682 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3535 00001686 48FFC6                  	inc rsi
  3536 00001689 EBEC                    	jmp .L_lambda_simple_params_loop_00d6
  3537                                  .L_lambda_simple_params_end_00d6:
  3538 0000168B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3539 0000168E 4889C3                  	mov rbx, rax
  3540 00001691 58                      	pop rax
  3541 00001692 C60004                  	mov byte [rax], T_closure
  3542 00001695 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3543 00001699 48C74009[A3160000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d6
  3544 000016A1 EB65                    	jmp .L_lambda_simple_end_00d6
  3545                                  .L_lambda_simple_code_00d6:	; lambda-simple body
  3546 000016A3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3547 000016A9 740B                    	je .L_lambda_simple_arity_check_ok_00d6
  3548 000016AB FF742410                	push qword [rsp + 8 * 2]
  3549 000016AF 6A01                    	push 1
  3550 000016B1 E9C8160100              	jmp L_error_incorrect_arity_simple
  3551                                  .L_lambda_simple_arity_check_ok_00d6:
  3552 000016B6 C8000000                	enter 0, 0
  3553                                  	; preparing a non-tail-call
  3554                                  	; preparing a non-tail-call
  3555 000016BA 488B4520                	mov rax, PARAM(0)	; param x
  3556 000016BE 50                      	push rax
  3557 000016BF 6A01                    	push 1	; arg count
  3558 000016C1 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3559 000016C9 803805                  	cmp byte [rax], T_undefined
  3560 000016CC 0F84C6150100            	je L_error_fvar_undefined
  3561 000016D2 803804                  	cmp byte [rax], T_closure
  3562 000016D5 0F8541160100            	jne L_error_non_closure
  3563 000016DB FF7001                  	push SOB_CLOSURE_ENV(rax)
  3564 000016DE FF5009                  	call SOB_CLOSURE_CODE(rax)
  3565 000016E1 50                      	push rax
  3566 000016E2 6A01                    	push 1	; arg count
  3567 000016E4 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3568 000016EC 803805                  	cmp byte [rax], T_undefined
  3569 000016EF 0F84A3150100            	je L_error_fvar_undefined
  3570 000016F5 803804                  	cmp byte [rax], T_closure
  3571 000016F8 0F851E160100            	jne L_error_non_closure
  3572 000016FE FF7001                  	push SOB_CLOSURE_ENV(rax)
  3573 00001701 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3574 00001704 C9                      	leave
  3575 00001705 C21800                  	ret AND_KILL_FRAME(1)
  3576                                  .L_lambda_simple_end_00d6:	; new closure is in rax
  3577 00001708 48890425[C2100000]      	mov qword [free_var_45], rax
  3578 00001710 48B8-                   	mov rax, sob_void
  3578 00001712 [0000000000000000] 
  3579                                  
  3580 0000171A 4889C7                  	mov rdi, rax
  3581 0000171D E8F8180100              	call print_sexpr_if_not_void
  3582 00001722 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3583 00001727 E899160100              	call malloc
  3584 0000172C 50                      	push rax
  3585 0000172D BF00000000              	mov rdi, 8 * 0	; new rib
  3586 00001732 E88E160100              	call malloc
  3587 00001737 50                      	push rax
  3588 00001738 BF08000000              	mov rdi, 8 * 1	; extended env
  3589 0000173D E883160100              	call malloc
  3590 00001742 488B7D10                	mov rdi, ENV
  3591 00001746 BE00000000              	mov rsi, 0
  3592 0000174B BA01000000              	mov rdx, 1
  3593                                  .L_lambda_simple_env_loop_00d7:	; ext_env[i + 1] <-- env[i]
  3594 00001750 4883FE00                	cmp rsi, 0
  3595 00001754 7410                    	je .L_lambda_simple_env_end_00d7
  3596 00001756 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3597 0000175A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3598 0000175E 48FFC6                  	inc rsi
  3599 00001761 48FFC2                  	inc rdx
  3600 00001764 EBEA                    	jmp .L_lambda_simple_env_loop_00d7
  3601                                  .L_lambda_simple_env_end_00d7:
  3602 00001766 5B                      	pop rbx
  3603 00001767 BE00000000              	mov rsi, 0
  3604                                  .L_lambda_simple_params_loop_00d7:	; copy params
  3605 0000176C 4883FE00                	cmp rsi, 0
  3606 00001770 740E                    	je .L_lambda_simple_params_end_00d7
  3607 00001772 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3608 00001777 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3609 0000177B 48FFC6                  	inc rsi
  3610 0000177E EBEC                    	jmp .L_lambda_simple_params_loop_00d7
  3611                                  .L_lambda_simple_params_end_00d7:
  3612 00001780 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3613 00001783 4889C3                  	mov rbx, rax
  3614 00001786 58                      	pop rax
  3615 00001787 C60004                  	mov byte [rax], T_closure
  3616 0000178A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3617 0000178E 48C74009[98170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d7
  3618 00001796 EB65                    	jmp .L_lambda_simple_end_00d7
  3619                                  .L_lambda_simple_code_00d7:	; lambda-simple body
  3620 00001798 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3621 0000179E 740B                    	je .L_lambda_simple_arity_check_ok_00d7
  3622 000017A0 FF742410                	push qword [rsp + 8 * 2]
  3623 000017A4 6A01                    	push 1
  3624 000017A6 E9D3150100              	jmp L_error_incorrect_arity_simple
  3625                                  .L_lambda_simple_arity_check_ok_00d7:
  3626 000017AB C8000000                	enter 0, 0
  3627                                  	; preparing a non-tail-call
  3628                                  	; preparing a non-tail-call
  3629 000017AF 488B4520                	mov rax, PARAM(0)	; param x
  3630 000017B3 50                      	push rax
  3631 000017B4 6A01                    	push 1	; arg count
  3632 000017B6 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3633 000017BE 803805                  	cmp byte [rax], T_undefined
  3634 000017C1 0F84D1140100            	je L_error_fvar_undefined
  3635 000017C7 803804                  	cmp byte [rax], T_closure
  3636 000017CA 0F854C150100            	jne L_error_non_closure
  3637 000017D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3638 000017D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3639 000017D6 50                      	push rax
  3640 000017D7 6A01                    	push 1	; arg count
  3641 000017D9 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3642 000017E1 803805                  	cmp byte [rax], T_undefined
  3643 000017E4 0F84AE140100            	je L_error_fvar_undefined
  3644 000017EA 803804                  	cmp byte [rax], T_closure
  3645 000017ED 0F8529150100            	jne L_error_non_closure
  3646 000017F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3647 000017F6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3648 000017F9 C9                      	leave
  3649 000017FA C21800                  	ret AND_KILL_FRAME(1)
  3650                                  .L_lambda_simple_end_00d7:	; new closure is in rax
  3651 000017FD 48890425[D3100000]      	mov qword [free_var_46], rax
  3652 00001805 48B8-                   	mov rax, sob_void
  3652 00001807 [0000000000000000] 
  3653                                  
  3654 0000180F 4889C7                  	mov rdi, rax
  3655 00001812 E803180100              	call print_sexpr_if_not_void
  3656 00001817 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3657 0000181C E8A4150100              	call malloc
  3658 00001821 50                      	push rax
  3659 00001822 BF00000000              	mov rdi, 8 * 0	; new rib
  3660 00001827 E899150100              	call malloc
  3661 0000182C 50                      	push rax
  3662 0000182D BF08000000              	mov rdi, 8 * 1	; extended env
  3663 00001832 E88E150100              	call malloc
  3664 00001837 488B7D10                	mov rdi, ENV
  3665 0000183B BE00000000              	mov rsi, 0
  3666 00001840 BA01000000              	mov rdx, 1
  3667                                  .L_lambda_simple_env_loop_00d8:	; ext_env[i + 1] <-- env[i]
  3668 00001845 4883FE00                	cmp rsi, 0
  3669 00001849 7410                    	je .L_lambda_simple_env_end_00d8
  3670 0000184B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3671 0000184F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3672 00001853 48FFC6                  	inc rsi
  3673 00001856 48FFC2                  	inc rdx
  3674 00001859 EBEA                    	jmp .L_lambda_simple_env_loop_00d8
  3675                                  .L_lambda_simple_env_end_00d8:
  3676 0000185B 5B                      	pop rbx
  3677 0000185C BE00000000              	mov rsi, 0
  3678                                  .L_lambda_simple_params_loop_00d8:	; copy params
  3679 00001861 4883FE00                	cmp rsi, 0
  3680 00001865 740E                    	je .L_lambda_simple_params_end_00d8
  3681 00001867 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3682 0000186C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3683 00001870 48FFC6                  	inc rsi
  3684 00001873 EBEC                    	jmp .L_lambda_simple_params_loop_00d8
  3685                                  .L_lambda_simple_params_end_00d8:
  3686 00001875 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3687 00001878 4889C3                  	mov rbx, rax
  3688 0000187B 58                      	pop rax
  3689 0000187C C60004                  	mov byte [rax], T_closure
  3690 0000187F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3691 00001883 48C74009[8D180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d8
  3692 0000188B EB65                    	jmp .L_lambda_simple_end_00d8
  3693                                  .L_lambda_simple_code_00d8:	; lambda-simple body
  3694 0000188D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3695 00001893 740B                    	je .L_lambda_simple_arity_check_ok_00d8
  3696 00001895 FF742410                	push qword [rsp + 8 * 2]
  3697 00001899 6A01                    	push 1
  3698 0000189B E9DE140100              	jmp L_error_incorrect_arity_simple
  3699                                  .L_lambda_simple_arity_check_ok_00d8:
  3700 000018A0 C8000000                	enter 0, 0
  3701                                  	; preparing a non-tail-call
  3702                                  	; preparing a non-tail-call
  3703 000018A4 488B4520                	mov rax, PARAM(0)	; param x
  3704 000018A8 50                      	push rax
  3705 000018A9 6A01                    	push 1	; arg count
  3706 000018AB 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3707 000018B3 803805                  	cmp byte [rax], T_undefined
  3708 000018B6 0F84DC130100            	je L_error_fvar_undefined
  3709 000018BC 803804                  	cmp byte [rax], T_closure
  3710 000018BF 0F8557140100            	jne L_error_non_closure
  3711 000018C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3712 000018C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3713 000018CB 50                      	push rax
  3714 000018CC 6A01                    	push 1	; arg count
  3715 000018CE 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3716 000018D6 803805                  	cmp byte [rax], T_undefined
  3717 000018D9 0F84B9130100            	je L_error_fvar_undefined
  3718 000018DF 803804                  	cmp byte [rax], T_closure
  3719 000018E2 0F8534140100            	jne L_error_non_closure
  3720 000018E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3721 000018EB FF5009                  	call SOB_CLOSURE_CODE(rax)
  3722 000018EE C9                      	leave
  3723 000018EF C21800                  	ret AND_KILL_FRAME(1)
  3724                                  .L_lambda_simple_end_00d8:	; new closure is in rax
  3725 000018F2 48890425[17110000]      	mov qword [free_var_50], rax
  3726 000018FA 48B8-                   	mov rax, sob_void
  3726 000018FC [0000000000000000] 
  3727                                  
  3728 00001904 4889C7                  	mov rdi, rax
  3729 00001907 E80E170100              	call print_sexpr_if_not_void
  3730 0000190C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3731 00001911 E8AF140100              	call malloc
  3732 00001916 50                      	push rax
  3733 00001917 BF00000000              	mov rdi, 8 * 0	; new rib
  3734 0000191C E8A4140100              	call malloc
  3735 00001921 50                      	push rax
  3736 00001922 BF08000000              	mov rdi, 8 * 1	; extended env
  3737 00001927 E899140100              	call malloc
  3738 0000192C 488B7D10                	mov rdi, ENV
  3739 00001930 BE00000000              	mov rsi, 0
  3740 00001935 BA01000000              	mov rdx, 1
  3741                                  .L_lambda_simple_env_loop_00d9:	; ext_env[i + 1] <-- env[i]
  3742 0000193A 4883FE00                	cmp rsi, 0
  3743 0000193E 7410                    	je .L_lambda_simple_env_end_00d9
  3744 00001940 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3745 00001944 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3746 00001948 48FFC6                  	inc rsi
  3747 0000194B 48FFC2                  	inc rdx
  3748 0000194E EBEA                    	jmp .L_lambda_simple_env_loop_00d9
  3749                                  .L_lambda_simple_env_end_00d9:
  3750 00001950 5B                      	pop rbx
  3751 00001951 BE00000000              	mov rsi, 0
  3752                                  .L_lambda_simple_params_loop_00d9:	; copy params
  3753 00001956 4883FE00                	cmp rsi, 0
  3754 0000195A 740E                    	je .L_lambda_simple_params_end_00d9
  3755 0000195C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3756 00001961 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3757 00001965 48FFC6                  	inc rsi
  3758 00001968 EBEC                    	jmp .L_lambda_simple_params_loop_00d9
  3759                                  .L_lambda_simple_params_end_00d9:
  3760 0000196A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3761 0000196D 4889C3                  	mov rbx, rax
  3762 00001970 58                      	pop rax
  3763 00001971 C60004                  	mov byte [rax], T_closure
  3764 00001974 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3765 00001978 48C74009[82190000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00d9
  3766 00001980 EB65                    	jmp .L_lambda_simple_end_00d9
  3767                                  .L_lambda_simple_code_00d9:	; lambda-simple body
  3768 00001982 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3769 00001988 740B                    	je .L_lambda_simple_arity_check_ok_00d9
  3770 0000198A FF742410                	push qword [rsp + 8 * 2]
  3771 0000198E 6A01                    	push 1
  3772 00001990 E9E9130100              	jmp L_error_incorrect_arity_simple
  3773                                  .L_lambda_simple_arity_check_ok_00d9:
  3774 00001995 C8000000                	enter 0, 0
  3775                                  	; preparing a non-tail-call
  3776                                  	; preparing a non-tail-call
  3777 00001999 488B4520                	mov rax, PARAM(0)	; param x
  3778 0000199D 50                      	push rax
  3779 0000199E 6A01                    	push 1	; arg count
  3780 000019A0 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3781 000019A8 803805                  	cmp byte [rax], T_undefined
  3782 000019AB 0F84E7120100            	je L_error_fvar_undefined
  3783 000019B1 803804                  	cmp byte [rax], T_closure
  3784 000019B4 0F8562130100            	jne L_error_non_closure
  3785 000019BA FF7001                  	push SOB_CLOSURE_ENV(rax)
  3786 000019BD FF5009                  	call SOB_CLOSURE_CODE(rax)
  3787 000019C0 50                      	push rax
  3788 000019C1 6A01                    	push 1	; arg count
  3789 000019C3 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3790 000019CB 803805                  	cmp byte [rax], T_undefined
  3791 000019CE 0F84C4120100            	je L_error_fvar_undefined
  3792 000019D4 803804                  	cmp byte [rax], T_closure
  3793 000019D7 0F853F130100            	jne L_error_non_closure
  3794 000019DD FF7001                  	push SOB_CLOSURE_ENV(rax)
  3795 000019E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3796 000019E3 C9                      	leave
  3797 000019E4 C21800                  	ret AND_KILL_FRAME(1)
  3798                                  .L_lambda_simple_end_00d9:	; new closure is in rax
  3799 000019E7 48890425[28110000]      	mov qword [free_var_51], rax
  3800 000019EF 48B8-                   	mov rax, sob_void
  3800 000019F1 [0000000000000000] 
  3801                                  
  3802 000019F9 4889C7                  	mov rdi, rax
  3803 000019FC E819160100              	call print_sexpr_if_not_void
  3804 00001A01 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3805 00001A06 E8BA130100              	call malloc
  3806 00001A0B 50                      	push rax
  3807 00001A0C BF00000000              	mov rdi, 8 * 0	; new rib
  3808 00001A11 E8AF130100              	call malloc
  3809 00001A16 50                      	push rax
  3810 00001A17 BF08000000              	mov rdi, 8 * 1	; extended env
  3811 00001A1C E8A4130100              	call malloc
  3812 00001A21 488B7D10                	mov rdi, ENV
  3813 00001A25 BE00000000              	mov rsi, 0
  3814 00001A2A BA01000000              	mov rdx, 1
  3815                                  .L_lambda_simple_env_loop_00da:	; ext_env[i + 1] <-- env[i]
  3816 00001A2F 4883FE00                	cmp rsi, 0
  3817 00001A33 7410                    	je .L_lambda_simple_env_end_00da
  3818 00001A35 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3819 00001A39 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3820 00001A3D 48FFC6                  	inc rsi
  3821 00001A40 48FFC2                  	inc rdx
  3822 00001A43 EBEA                    	jmp .L_lambda_simple_env_loop_00da
  3823                                  .L_lambda_simple_env_end_00da:
  3824 00001A45 5B                      	pop rbx
  3825 00001A46 BE00000000              	mov rsi, 0
  3826                                  .L_lambda_simple_params_loop_00da:	; copy params
  3827 00001A4B 4883FE00                	cmp rsi, 0
  3828 00001A4F 740E                    	je .L_lambda_simple_params_end_00da
  3829 00001A51 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3830 00001A56 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3831 00001A5A 48FFC6                  	inc rsi
  3832 00001A5D EBEC                    	jmp .L_lambda_simple_params_loop_00da
  3833                                  .L_lambda_simple_params_end_00da:
  3834 00001A5F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3835 00001A62 4889C3                  	mov rbx, rax
  3836 00001A65 58                      	pop rax
  3837 00001A66 C60004                  	mov byte [rax], T_closure
  3838 00001A69 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3839 00001A6D 48C74009[771A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00da
  3840 00001A75 EB65                    	jmp .L_lambda_simple_end_00da
  3841                                  .L_lambda_simple_code_00da:	; lambda-simple body
  3842 00001A77 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3843 00001A7D 740B                    	je .L_lambda_simple_arity_check_ok_00da
  3844 00001A7F FF742410                	push qword [rsp + 8 * 2]
  3845 00001A83 6A01                    	push 1
  3846 00001A85 E9F4120100              	jmp L_error_incorrect_arity_simple
  3847                                  .L_lambda_simple_arity_check_ok_00da:
  3848 00001A8A C8000000                	enter 0, 0
  3849                                  	; preparing a non-tail-call
  3850                                  	; preparing a non-tail-call
  3851 00001A8E 488B4520                	mov rax, PARAM(0)	; param x
  3852 00001A92 50                      	push rax
  3853 00001A93 6A01                    	push 1	; arg count
  3854 00001A95 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3855 00001A9D 803805                  	cmp byte [rax], T_undefined
  3856 00001AA0 0F84F2110100            	je L_error_fvar_undefined
  3857 00001AA6 803804                  	cmp byte [rax], T_closure
  3858 00001AA9 0F856D120100            	jne L_error_non_closure
  3859 00001AAF FF7001                  	push SOB_CLOSURE_ENV(rax)
  3860 00001AB2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3861 00001AB5 50                      	push rax
  3862 00001AB6 6A01                    	push 1	; arg count
  3863 00001AB8 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3864 00001AC0 803805                  	cmp byte [rax], T_undefined
  3865 00001AC3 0F84CF110100            	je L_error_fvar_undefined
  3866 00001AC9 803804                  	cmp byte [rax], T_closure
  3867 00001ACC 0F854A120100            	jne L_error_non_closure
  3868 00001AD2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3869 00001AD5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3870 00001AD8 C9                      	leave
  3871 00001AD9 C21800                  	ret AND_KILL_FRAME(1)
  3872                                  .L_lambda_simple_end_00da:	; new closure is in rax
  3873 00001ADC 48890425[4A110000]      	mov qword [free_var_53], rax
  3874 00001AE4 48B8-                   	mov rax, sob_void
  3874 00001AE6 [0000000000000000] 
  3875                                  
  3876 00001AEE 4889C7                  	mov rdi, rax
  3877 00001AF1 E824150100              	call print_sexpr_if_not_void
  3878 00001AF6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3879 00001AFB E8C5120100              	call malloc
  3880 00001B00 50                      	push rax
  3881 00001B01 BF00000000              	mov rdi, 8 * 0	; new rib
  3882 00001B06 E8BA120100              	call malloc
  3883 00001B0B 50                      	push rax
  3884 00001B0C BF08000000              	mov rdi, 8 * 1	; extended env
  3885 00001B11 E8AF120100              	call malloc
  3886 00001B16 488B7D10                	mov rdi, ENV
  3887 00001B1A BE00000000              	mov rsi, 0
  3888 00001B1F BA01000000              	mov rdx, 1
  3889                                  .L_lambda_simple_env_loop_00db:	; ext_env[i + 1] <-- env[i]
  3890 00001B24 4883FE00                	cmp rsi, 0
  3891 00001B28 7410                    	je .L_lambda_simple_env_end_00db
  3892 00001B2A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3893 00001B2E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3894 00001B32 48FFC6                  	inc rsi
  3895 00001B35 48FFC2                  	inc rdx
  3896 00001B38 EBEA                    	jmp .L_lambda_simple_env_loop_00db
  3897                                  .L_lambda_simple_env_end_00db:
  3898 00001B3A 5B                      	pop rbx
  3899 00001B3B BE00000000              	mov rsi, 0
  3900                                  .L_lambda_simple_params_loop_00db:	; copy params
  3901 00001B40 4883FE00                	cmp rsi, 0
  3902 00001B44 740E                    	je .L_lambda_simple_params_end_00db
  3903 00001B46 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3904 00001B4B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3905 00001B4F 48FFC6                  	inc rsi
  3906 00001B52 EBEC                    	jmp .L_lambda_simple_params_loop_00db
  3907                                  .L_lambda_simple_params_end_00db:
  3908 00001B54 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3909 00001B57 4889C3                  	mov rbx, rax
  3910 00001B5A 58                      	pop rax
  3911 00001B5B C60004                  	mov byte [rax], T_closure
  3912 00001B5E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3913 00001B62 48C74009[6C1B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00db
  3914 00001B6A EB65                    	jmp .L_lambda_simple_end_00db
  3915                                  .L_lambda_simple_code_00db:	; lambda-simple body
  3916 00001B6C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3917 00001B72 740B                    	je .L_lambda_simple_arity_check_ok_00db
  3918 00001B74 FF742410                	push qword [rsp + 8 * 2]
  3919 00001B78 6A01                    	push 1
  3920 00001B7A E9FF110100              	jmp L_error_incorrect_arity_simple
  3921                                  .L_lambda_simple_arity_check_ok_00db:
  3922 00001B7F C8000000                	enter 0, 0
  3923                                  	; preparing a non-tail-call
  3924                                  	; preparing a non-tail-call
  3925 00001B83 488B4520                	mov rax, PARAM(0)	; param x
  3926 00001B87 50                      	push rax
  3927 00001B88 6A01                    	push 1	; arg count
  3928 00001B8A 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3929 00001B92 803805                  	cmp byte [rax], T_undefined
  3930 00001B95 0F84FD100100            	je L_error_fvar_undefined
  3931 00001B9B 803804                  	cmp byte [rax], T_closure
  3932 00001B9E 0F8578110100            	jne L_error_non_closure
  3933 00001BA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3934 00001BA7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3935 00001BAA 50                      	push rax
  3936 00001BAB 6A01                    	push 1	; arg count
  3937 00001BAD 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3938 00001BB5 803805                  	cmp byte [rax], T_undefined
  3939 00001BB8 0F84DA100100            	je L_error_fvar_undefined
  3940 00001BBE 803804                  	cmp byte [rax], T_closure
  3941 00001BC1 0F8555110100            	jne L_error_non_closure
  3942 00001BC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3943 00001BCA FF5009                  	call SOB_CLOSURE_CODE(rax)
  3944 00001BCD C9                      	leave
  3945 00001BCE C21800                  	ret AND_KILL_FRAME(1)
  3946                                  .L_lambda_simple_end_00db:	; new closure is in rax
  3947 00001BD1 48890425[5B110000]      	mov qword [free_var_54], rax
  3948 00001BD9 48B8-                   	mov rax, sob_void
  3948 00001BDB [0000000000000000] 
  3949                                  
  3950 00001BE3 4889C7                  	mov rdi, rax
  3951 00001BE6 E82F140100              	call print_sexpr_if_not_void
  3952 00001BEB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3953 00001BF0 E8D0110100              	call malloc
  3954 00001BF5 50                      	push rax
  3955 00001BF6 BF00000000              	mov rdi, 8 * 0	; new rib
  3956 00001BFB E8C5110100              	call malloc
  3957 00001C00 50                      	push rax
  3958 00001C01 BF08000000              	mov rdi, 8 * 1	; extended env
  3959 00001C06 E8BA110100              	call malloc
  3960 00001C0B 488B7D10                	mov rdi, ENV
  3961 00001C0F BE00000000              	mov rsi, 0
  3962 00001C14 BA01000000              	mov rdx, 1
  3963                                  .L_lambda_simple_env_loop_00dc:	; ext_env[i + 1] <-- env[i]
  3964 00001C19 4883FE00                	cmp rsi, 0
  3965 00001C1D 7410                    	je .L_lambda_simple_env_end_00dc
  3966 00001C1F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3967 00001C23 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3968 00001C27 48FFC6                  	inc rsi
  3969 00001C2A 48FFC2                  	inc rdx
  3970 00001C2D EBEA                    	jmp .L_lambda_simple_env_loop_00dc
  3971                                  .L_lambda_simple_env_end_00dc:
  3972 00001C2F 5B                      	pop rbx
  3973 00001C30 BE00000000              	mov rsi, 0
  3974                                  .L_lambda_simple_params_loop_00dc:	; copy params
  3975 00001C35 4883FE00                	cmp rsi, 0
  3976 00001C39 740E                    	je .L_lambda_simple_params_end_00dc
  3977 00001C3B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3978 00001C40 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3979 00001C44 48FFC6                  	inc rsi
  3980 00001C47 EBEC                    	jmp .L_lambda_simple_params_loop_00dc
  3981                                  .L_lambda_simple_params_end_00dc:
  3982 00001C49 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3983 00001C4C 4889C3                  	mov rbx, rax
  3984 00001C4F 58                      	pop rax
  3985 00001C50 C60004                  	mov byte [rax], T_closure
  3986 00001C53 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3987 00001C57 48C74009[611C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00dc
  3988 00001C5F EB65                    	jmp .L_lambda_simple_end_00dc
  3989                                  .L_lambda_simple_code_00dc:	; lambda-simple body
  3990 00001C61 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3991 00001C67 740B                    	je .L_lambda_simple_arity_check_ok_00dc
  3992 00001C69 FF742410                	push qword [rsp + 8 * 2]
  3993 00001C6D 6A01                    	push 1
  3994 00001C6F E90A110100              	jmp L_error_incorrect_arity_simple
  3995                                  .L_lambda_simple_arity_check_ok_00dc:
  3996 00001C74 C8000000                	enter 0, 0
  3997                                  	; preparing a non-tail-call
  3998                                  	; preparing a non-tail-call
  3999 00001C78 488B4520                	mov rax, PARAM(0)	; param x
  4000 00001C7C 50                      	push rax
  4001 00001C7D 6A01                    	push 1	; arg count
  4002 00001C7F 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  4003 00001C87 803805                  	cmp byte [rax], T_undefined
  4004 00001C8A 0F8408100100            	je L_error_fvar_undefined
  4005 00001C90 803804                  	cmp byte [rax], T_closure
  4006 00001C93 0F8583100100            	jne L_error_non_closure
  4007 00001C99 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4008 00001C9C FF5009                  	call SOB_CLOSURE_CODE(rax)
  4009 00001C9F 50                      	push rax
  4010 00001CA0 6A01                    	push 1	; arg count
  4011 00001CA2 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4012 00001CAA 803805                  	cmp byte [rax], T_undefined
  4013 00001CAD 0F84E50F0100            	je L_error_fvar_undefined
  4014 00001CB3 803804                  	cmp byte [rax], T_closure
  4015 00001CB6 0F8560100100            	jne L_error_non_closure
  4016 00001CBC FF7001                  	push SOB_CLOSURE_ENV(rax)
  4017 00001CBF FF5009                  	call SOB_CLOSURE_CODE(rax)
  4018 00001CC2 C9                      	leave
  4019 00001CC3 C21800                  	ret AND_KILL_FRAME(1)
  4020                                  .L_lambda_simple_end_00dc:	; new closure is in rax
  4021 00001CC6 48890425[8E110000]      	mov qword [free_var_57], rax
  4022 00001CCE 48B8-                   	mov rax, sob_void
  4022 00001CD0 [0000000000000000] 
  4023                                  
  4024 00001CD8 4889C7                  	mov rdi, rax
  4025 00001CDB E83A130100              	call print_sexpr_if_not_void
  4026 00001CE0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4027 00001CE5 E8DB100100              	call malloc
  4028 00001CEA 50                      	push rax
  4029 00001CEB BF00000000              	mov rdi, 8 * 0	; new rib
  4030 00001CF0 E8D0100100              	call malloc
  4031 00001CF5 50                      	push rax
  4032 00001CF6 BF08000000              	mov rdi, 8 * 1	; extended env
  4033 00001CFB E8C5100100              	call malloc
  4034 00001D00 488B7D10                	mov rdi, ENV
  4035 00001D04 BE00000000              	mov rsi, 0
  4036 00001D09 BA01000000              	mov rdx, 1
  4037                                  .L_lambda_simple_env_loop_00dd:	; ext_env[i + 1] <-- env[i]
  4038 00001D0E 4883FE00                	cmp rsi, 0
  4039 00001D12 7410                    	je .L_lambda_simple_env_end_00dd
  4040 00001D14 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4041 00001D18 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4042 00001D1C 48FFC6                  	inc rsi
  4043 00001D1F 48FFC2                  	inc rdx
  4044 00001D22 EBEA                    	jmp .L_lambda_simple_env_loop_00dd
  4045                                  .L_lambda_simple_env_end_00dd:
  4046 00001D24 5B                      	pop rbx
  4047 00001D25 BE00000000              	mov rsi, 0
  4048                                  .L_lambda_simple_params_loop_00dd:	; copy params
  4049 00001D2A 4883FE00                	cmp rsi, 0
  4050 00001D2E 740E                    	je .L_lambda_simple_params_end_00dd
  4051 00001D30 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4052 00001D35 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4053 00001D39 48FFC6                  	inc rsi
  4054 00001D3C EBEC                    	jmp .L_lambda_simple_params_loop_00dd
  4055                                  .L_lambda_simple_params_end_00dd:
  4056 00001D3E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4057 00001D41 4889C3                  	mov rbx, rax
  4058 00001D44 58                      	pop rax
  4059 00001D45 C60004                  	mov byte [rax], T_closure
  4060 00001D48 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4061 00001D4C 48C74009[561D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00dd
  4062 00001D54 EB65                    	jmp .L_lambda_simple_end_00dd
  4063                                  .L_lambda_simple_code_00dd:	; lambda-simple body
  4064 00001D56 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4065 00001D5C 740B                    	je .L_lambda_simple_arity_check_ok_00dd
  4066 00001D5E FF742410                	push qword [rsp + 8 * 2]
  4067 00001D62 6A01                    	push 1
  4068 00001D64 E915100100              	jmp L_error_incorrect_arity_simple
  4069                                  .L_lambda_simple_arity_check_ok_00dd:
  4070 00001D69 C8000000                	enter 0, 0
  4071                                  	; preparing a non-tail-call
  4072                                  	; preparing a non-tail-call
  4073 00001D6D 488B4520                	mov rax, PARAM(0)	; param x
  4074 00001D71 50                      	push rax
  4075 00001D72 6A01                    	push 1	; arg count
  4076 00001D74 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4077 00001D7C 803805                  	cmp byte [rax], T_undefined
  4078 00001D7F 0F84130F0100            	je L_error_fvar_undefined
  4079 00001D85 803804                  	cmp byte [rax], T_closure
  4080 00001D88 0F858E0F0100            	jne L_error_non_closure
  4081 00001D8E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4082 00001D91 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4083 00001D94 50                      	push rax
  4084 00001D95 6A01                    	push 1	; arg count
  4085 00001D97 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4086 00001D9F 803805                  	cmp byte [rax], T_undefined
  4087 00001DA2 0F84F00E0100            	je L_error_fvar_undefined
  4088 00001DA8 803804                  	cmp byte [rax], T_closure
  4089 00001DAB 0F856B0F0100            	jne L_error_non_closure
  4090 00001DB1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4091 00001DB4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4092 00001DB7 C9                      	leave
  4093 00001DB8 C21800                  	ret AND_KILL_FRAME(1)
  4094                                  .L_lambda_simple_end_00dd:	; new closure is in rax
  4095 00001DBB 48890425[9F110000]      	mov qword [free_var_58], rax
  4096 00001DC3 48B8-                   	mov rax, sob_void
  4096 00001DC5 [0000000000000000] 
  4097                                  
  4098 00001DCD 4889C7                  	mov rdi, rax
  4099 00001DD0 E845120100              	call print_sexpr_if_not_void
  4100 00001DD5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4101 00001DDA E8E60F0100              	call malloc
  4102 00001DDF 50                      	push rax
  4103 00001DE0 BF00000000              	mov rdi, 8 * 0	; new rib
  4104 00001DE5 E8DB0F0100              	call malloc
  4105 00001DEA 50                      	push rax
  4106 00001DEB BF08000000              	mov rdi, 8 * 1	; extended env
  4107 00001DF0 E8D00F0100              	call malloc
  4108 00001DF5 488B7D10                	mov rdi, ENV
  4109 00001DF9 BE00000000              	mov rsi, 0
  4110 00001DFE BA01000000              	mov rdx, 1
  4111                                  .L_lambda_simple_env_loop_00de:	; ext_env[i + 1] <-- env[i]
  4112 00001E03 4883FE00                	cmp rsi, 0
  4113 00001E07 7410                    	je .L_lambda_simple_env_end_00de
  4114 00001E09 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4115 00001E0D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4116 00001E11 48FFC6                  	inc rsi
  4117 00001E14 48FFC2                  	inc rdx
  4118 00001E17 EBEA                    	jmp .L_lambda_simple_env_loop_00de
  4119                                  .L_lambda_simple_env_end_00de:
  4120 00001E19 5B                      	pop rbx
  4121 00001E1A BE00000000              	mov rsi, 0
  4122                                  .L_lambda_simple_params_loop_00de:	; copy params
  4123 00001E1F 4883FE00                	cmp rsi, 0
  4124 00001E23 740E                    	je .L_lambda_simple_params_end_00de
  4125 00001E25 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4126 00001E2A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4127 00001E2E 48FFC6                  	inc rsi
  4128 00001E31 EBEC                    	jmp .L_lambda_simple_params_loop_00de
  4129                                  .L_lambda_simple_params_end_00de:
  4130 00001E33 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4131 00001E36 4889C3                  	mov rbx, rax
  4132 00001E39 58                      	pop rax
  4133 00001E3A C60004                  	mov byte [rax], T_closure
  4134 00001E3D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4135 00001E41 48C74009[4B1E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00de
  4136 00001E49 EB65                    	jmp .L_lambda_simple_end_00de
  4137                                  .L_lambda_simple_code_00de:	; lambda-simple body
  4138 00001E4B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4139 00001E51 740B                    	je .L_lambda_simple_arity_check_ok_00de
  4140 00001E53 FF742410                	push qword [rsp + 8 * 2]
  4141 00001E57 6A01                    	push 1
  4142 00001E59 E9200F0100              	jmp L_error_incorrect_arity_simple
  4143                                  .L_lambda_simple_arity_check_ok_00de:
  4144 00001E5E C8000000                	enter 0, 0
  4145                                  	; preparing a non-tail-call
  4146                                  	; preparing a non-tail-call
  4147 00001E62 488B4520                	mov rax, PARAM(0)	; param x
  4148 00001E66 50                      	push rax
  4149 00001E67 6A01                    	push 1	; arg count
  4150 00001E69 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4151 00001E71 803805                  	cmp byte [rax], T_undefined
  4152 00001E74 0F841E0E0100            	je L_error_fvar_undefined
  4153 00001E7A 803804                  	cmp byte [rax], T_closure
  4154 00001E7D 0F85990E0100            	jne L_error_non_closure
  4155 00001E83 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4156 00001E86 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4157 00001E89 50                      	push rax
  4158 00001E8A 6A01                    	push 1	; arg count
  4159 00001E8C 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4160 00001E94 803805                  	cmp byte [rax], T_undefined
  4161 00001E97 0F84FB0D0100            	je L_error_fvar_undefined
  4162 00001E9D 803804                  	cmp byte [rax], T_closure
  4163 00001EA0 0F85760E0100            	jne L_error_non_closure
  4164 00001EA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4165 00001EA9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4166 00001EAC C9                      	leave
  4167 00001EAD C21800                  	ret AND_KILL_FRAME(1)
  4168                                  .L_lambda_simple_end_00de:	; new closure is in rax
  4169 00001EB0 48890425[C1110000]      	mov qword [free_var_60], rax
  4170 00001EB8 48B8-                   	mov rax, sob_void
  4170 00001EBA [0000000000000000] 
  4171                                  
  4172 00001EC2 4889C7                  	mov rdi, rax
  4173 00001EC5 E850110100              	call print_sexpr_if_not_void
  4174 00001ECA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4175 00001ECF E8F10E0100              	call malloc
  4176 00001ED4 50                      	push rax
  4177 00001ED5 BF00000000              	mov rdi, 8 * 0	; new rib
  4178 00001EDA E8E60E0100              	call malloc
  4179 00001EDF 50                      	push rax
  4180 00001EE0 BF08000000              	mov rdi, 8 * 1	; extended env
  4181 00001EE5 E8DB0E0100              	call malloc
  4182 00001EEA 488B7D10                	mov rdi, ENV
  4183 00001EEE BE00000000              	mov rsi, 0
  4184 00001EF3 BA01000000              	mov rdx, 1
  4185                                  .L_lambda_simple_env_loop_00df:	; ext_env[i + 1] <-- env[i]
  4186 00001EF8 4883FE00                	cmp rsi, 0
  4187 00001EFC 7410                    	je .L_lambda_simple_env_end_00df
  4188 00001EFE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4189 00001F02 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4190 00001F06 48FFC6                  	inc rsi
  4191 00001F09 48FFC2                  	inc rdx
  4192 00001F0C EBEA                    	jmp .L_lambda_simple_env_loop_00df
  4193                                  .L_lambda_simple_env_end_00df:
  4194 00001F0E 5B                      	pop rbx
  4195 00001F0F BE00000000              	mov rsi, 0
  4196                                  .L_lambda_simple_params_loop_00df:	; copy params
  4197 00001F14 4883FE00                	cmp rsi, 0
  4198 00001F18 740E                    	je .L_lambda_simple_params_end_00df
  4199 00001F1A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4200 00001F1F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4201 00001F23 48FFC6                  	inc rsi
  4202 00001F26 EBEC                    	jmp .L_lambda_simple_params_loop_00df
  4203                                  .L_lambda_simple_params_end_00df:
  4204 00001F28 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4205 00001F2B 4889C3                  	mov rbx, rax
  4206 00001F2E 58                      	pop rax
  4207 00001F2F C60004                  	mov byte [rax], T_closure
  4208 00001F32 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4209 00001F36 48C74009[401F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00df
  4210 00001F3E EB65                    	jmp .L_lambda_simple_end_00df
  4211                                  .L_lambda_simple_code_00df:	; lambda-simple body
  4212 00001F40 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4213 00001F46 740B                    	je .L_lambda_simple_arity_check_ok_00df
  4214 00001F48 FF742410                	push qword [rsp + 8 * 2]
  4215 00001F4C 6A01                    	push 1
  4216 00001F4E E92B0E0100              	jmp L_error_incorrect_arity_simple
  4217                                  .L_lambda_simple_arity_check_ok_00df:
  4218 00001F53 C8000000                	enter 0, 0
  4219                                  	; preparing a non-tail-call
  4220                                  	; preparing a non-tail-call
  4221 00001F57 488B4520                	mov rax, PARAM(0)	; param x
  4222 00001F5B 50                      	push rax
  4223 00001F5C 6A01                    	push 1	; arg count
  4224 00001F5E 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4225 00001F66 803805                  	cmp byte [rax], T_undefined
  4226 00001F69 0F84290D0100            	je L_error_fvar_undefined
  4227 00001F6F 803804                  	cmp byte [rax], T_closure
  4228 00001F72 0F85A40D0100            	jne L_error_non_closure
  4229 00001F78 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4230 00001F7B FF5009                  	call SOB_CLOSURE_CODE(rax)
  4231 00001F7E 50                      	push rax
  4232 00001F7F 6A01                    	push 1	; arg count
  4233 00001F81 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4234 00001F89 803805                  	cmp byte [rax], T_undefined
  4235 00001F8C 0F84060D0100            	je L_error_fvar_undefined
  4236 00001F92 803804                  	cmp byte [rax], T_closure
  4237 00001F95 0F85810D0100            	jne L_error_non_closure
  4238 00001F9B FF7001                  	push SOB_CLOSURE_ENV(rax)
  4239 00001F9E FF5009                  	call SOB_CLOSURE_CODE(rax)
  4240 00001FA1 C9                      	leave
  4241 00001FA2 C21800                  	ret AND_KILL_FRAME(1)
  4242                                  .L_lambda_simple_end_00df:	; new closure is in rax
  4243 00001FA5 48890425[D2110000]      	mov qword [free_var_61], rax
  4244 00001FAD 48B8-                   	mov rax, sob_void
  4244 00001FAF [0000000000000000] 
  4245                                  
  4246 00001FB7 4889C7                  	mov rdi, rax
  4247 00001FBA E85B100100              	call print_sexpr_if_not_void
  4248 00001FBF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4249 00001FC4 E8FC0D0100              	call malloc
  4250 00001FC9 50                      	push rax
  4251 00001FCA BF00000000              	mov rdi, 8 * 0	; new rib
  4252 00001FCF E8F10D0100              	call malloc
  4253 00001FD4 50                      	push rax
  4254 00001FD5 BF08000000              	mov rdi, 8 * 1	; extended env
  4255 00001FDA E8E60D0100              	call malloc
  4256 00001FDF 488B7D10                	mov rdi, ENV
  4257 00001FE3 BE00000000              	mov rsi, 0
  4258 00001FE8 BA01000000              	mov rdx, 1
  4259                                  .L_lambda_simple_env_loop_00e0:	; ext_env[i + 1] <-- env[i]
  4260 00001FED 4883FE00                	cmp rsi, 0
  4261 00001FF1 7410                    	je .L_lambda_simple_env_end_00e0
  4262 00001FF3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4263 00001FF7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4264 00001FFB 48FFC6                  	inc rsi
  4265 00001FFE 48FFC2                  	inc rdx
  4266 00002001 EBEA                    	jmp .L_lambda_simple_env_loop_00e0
  4267                                  .L_lambda_simple_env_end_00e0:
  4268 00002003 5B                      	pop rbx
  4269 00002004 BE00000000              	mov rsi, 0
  4270                                  .L_lambda_simple_params_loop_00e0:	; copy params
  4271 00002009 4883FE00                	cmp rsi, 0
  4272 0000200D 740E                    	je .L_lambda_simple_params_end_00e0
  4273 0000200F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4274 00002014 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4275 00002018 48FFC6                  	inc rsi
  4276 0000201B EBEC                    	jmp .L_lambda_simple_params_loop_00e0
  4277                                  .L_lambda_simple_params_end_00e0:
  4278 0000201D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4279 00002020 4889C3                  	mov rbx, rax
  4280 00002023 58                      	pop rax
  4281 00002024 C60004                  	mov byte [rax], T_closure
  4282 00002027 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4283 0000202B 48C74009[38200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00e0
  4284 00002033 E9D3000000              	jmp .L_lambda_simple_end_00e0
  4285                                  .L_lambda_simple_code_00e0:	; lambda-simple body
  4286 00002038 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4287 0000203E 740B                    	je .L_lambda_simple_arity_check_ok_00e0
  4288 00002040 FF742410                	push qword [rsp + 8 * 2]
  4289 00002044 6A01                    	push 1
  4290 00002046 E9330D0100              	jmp L_error_incorrect_arity_simple
  4291                                  .L_lambda_simple_arity_check_ok_00e0:
  4292 0000204B C8000000                	enter 0, 0
  4293                                  	; preparing a non-tail-call
  4294 0000204F 488B4520                	mov rax, PARAM(0)	; param e
  4295 00002053 50                      	push rax
  4296 00002054 6A01                    	push 1	; arg count
  4297 00002056 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  4298 0000205E 803805                  	cmp byte [rax], T_undefined
  4299 00002061 0F84310C0100            	je L_error_fvar_undefined
  4300 00002067 803804                  	cmp byte [rax], T_closure
  4301 0000206A 0F85AC0C0100            	jne L_error_non_closure
  4302 00002070 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4303 00002073 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4304 00002076 483D[02000000]          	cmp rax, sob_boolean_false
  4305 0000207C 0F8585000000            	jne .L_or_end_0012
  4306                                  	; preparing a non-tail-call
  4307 00002082 488B4520                	mov rax, PARAM(0)	; param e
  4308 00002086 50                      	push rax
  4309 00002087 6A01                    	push 1	; arg count
  4310 00002089 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  4311 00002091 803805                  	cmp byte [rax], T_undefined
  4312 00002094 0F84FE0B0100            	je L_error_fvar_undefined
  4313 0000209A 803804                  	cmp byte [rax], T_closure
  4314 0000209D 0F85790C0100            	jne L_error_non_closure
  4315 000020A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4316 000020A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4317 000020A9 483D[02000000]          	cmp rax, sob_boolean_false
  4318 000020AF 744C                    	je .L_if_else_0097
  4319                                  	; preparing a non-tail-call
  4320                                  	; preparing a non-tail-call
  4321 000020B1 488B4520                	mov rax, PARAM(0)	; param e
  4322 000020B5 50                      	push rax
  4323 000020B6 6A01                    	push 1	; arg count
  4324 000020B8 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  4325 000020C0 803805                  	cmp byte [rax], T_undefined
  4326 000020C3 0F84CF0B0100            	je L_error_fvar_undefined
  4327 000020C9 803804                  	cmp byte [rax], T_closure
  4328 000020CC 0F854A0C0100            	jne L_error_non_closure
  4329 000020D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4330 000020D5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4331 000020D8 50                      	push rax
  4332 000020D9 6A01                    	push 1	; arg count
  4333 000020DB 488B0425[25140000]      	mov rax, qword [free_var_96]	; free var list?
  4334 000020E3 803805                  	cmp byte [rax], T_undefined
  4335 000020E6 0F84AC0B0100            	je L_error_fvar_undefined
  4336 000020EC 803804                  	cmp byte [rax], T_closure
  4337 000020EF 0F85270C0100            	jne L_error_non_closure
  4338 000020F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4339 000020F8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4340 000020FB EB0A                    	jmp .L_if_end_0097
  4341                                  .L_if_else_0097:
  4342 000020FD 48B8-                   	mov rax, L_constants + 2
  4342 000020FF [0200000000000000] 
  4343                                  .L_if_end_0097:
  4344                                  .L_or_end_0012:
  4345 00002107 C9                      	leave
  4346 00002108 C21800                  	ret AND_KILL_FRAME(1)
  4347                                  .L_lambda_simple_end_00e0:	; new closure is in rax
  4348 0000210B 48890425[25140000]      	mov qword [free_var_96], rax
  4349 00002113 48B8-                   	mov rax, sob_void
  4349 00002115 [0000000000000000] 
  4350                                  
  4351 0000211D 4889C7                  	mov rdi, rax
  4352 00002120 E8F50E0100              	call print_sexpr_if_not_void
  4353 00002125 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4354 0000212A E8960C0100              	call malloc
  4355 0000212F 50                      	push rax
  4356 00002130 BF00000000              	mov rdi, 8 * 0	; new rib
  4357 00002135 E88B0C0100              	call malloc
  4358 0000213A 50                      	push rax
  4359 0000213B BF08000000              	mov rdi, 8 * 1	; extended env
  4360 00002140 E8800C0100              	call malloc
  4361 00002145 488B7D10                	mov rdi, ENV
  4362 00002149 BE00000000              	mov rsi, 0
  4363 0000214E BA01000000              	mov rdx, 1
  4364                                  .L_lambda_opt_env_loop_0019:	; ext_env[i + 1] <-- env[i]
  4365 00002153 4883FE00                	cmp rsi, 0
  4366 00002157 7410                    	je .L_lambda_opt_env_end_0019
  4367 00002159 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4368 0000215D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4369 00002161 48FFC6                  	inc rsi
  4370 00002164 48FFC2                  	inc rdx
  4371 00002167 EBEA                    	jmp .L_lambda_opt_env_loop_0019
  4372                                  .L_lambda_opt_env_end_0019:
  4373 00002169 5B                      	pop rbx
  4374 0000216A BE00000000              	mov rsi, 0
  4375                                  .L_lambda_opt_params_loop_0019:	; copy params
  4376 0000216F 4883FE00                	cmp rsi, 0
  4377 00002173 740E                    	je .L_lambda_opt_params_end_0019
  4378 00002175 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4379 0000217A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4380 0000217E 48FFC6                  	inc rsi
  4381 00002181 EBEC                    	jmp .L_lambda_opt_params_loop_0019
  4382                                  .L_lambda_opt_params_end_0019:
  4383 00002183 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4384 00002186 4889C3                  	mov rbx, rax
  4385 00002189 58                      	pop rax
  4386 0000218A C60004                  	mov byte [rax], T_closure
  4387 0000218D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4388 00002191 48C74009[9E210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0019
  4389 00002199 E9FA000000              	jmp .L_lambda_opt_end_0019
  4390                                  .L_lambda_opt_code_0019:	; lambda-opt body
  4391 0000219E 48837C241000            	cmp qword [rsp + 8 * 2], 0
  4392 000021A4 740D                    	je .L_lambda_opt_arity_check_exact_0019
  4393 000021A6 7F4C                    	jg .L_lambda_opt_arity_check_more_0019
  4394 000021A8 FF742410                	push qword [rsp + 8 * 2]
  4395 000021AC 6A00                    	push 0
  4396 000021AE E9DF0B0100              	jmp L_error_incorrect_arity_opt
  4397                                  .L_lambda_opt_arity_check_exact_0019:
  4398 000021B3 4883EC08                	sub rsp, 8
  4399 000021B7 488B442408              	mov rax, qword[rsp + 8 *1]
  4400 000021BC 48890424                	mov qword[rsp], rax  
  4401 000021C0 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  4402 000021C5 4889442408              	mov qword[rsp + 8 * 1], rax
  4403 000021CA B801000000              	mov rax, 1
  4404 000021CF 4889442410              	mov qword[rsp + 8 *2], rax
  4405 000021D4 48B8-                   	mov rax, sob_nil
  4405 000021D6 [0100000000000000] 
  4406 000021DE 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  4407 000021E3 C8000000                	enter 0, 0
  4408 000021E7 488B4520                	mov rax, PARAM(0)	; param args
  4409 000021EB C9                      	leave
  4410 000021EC C21800                  	ret AND_KILL_FRAME(1)
  4411 000021EF E9A4000000              	jmp .L_lambda_opt_end_0019	; new closure is in rax
  4412                                  .L_lambda_opt_arity_check_more_0019:
  4413 000021F4 488B442410              	mov rax, qword[rsp + 2 * 8]
  4414 000021F9 4889C7                  	mov rdi, rax
  4415 000021FC 49B9-                   	mov r9, sob_nil
  4415 000021FE [0100000000000000] 
  4416 00002206 4C8B442410              	mov r8, qword[rsp+2*8]
  4417                                  .L_lambda_opt_stack_shrink_loop_0019:
  4418 0000220B 4983F800                	cmp r8, 0
  4419 0000220F 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0019
  4420 00002211 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  4421 00002216 BF11000000              	mov rdi, 1+8+8	;for pair
  4422 0000221B E8A50B0100              	call malloc	 ;to create the pair in the stack
  4423 00002220 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  4424 00002223 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  4425 00002227 4C894809                 	mov qword[rax+1+8],r9
  4426 0000222B 4989C1                  	mov r9 , rax	 ; for the recursion 
  4427 0000222E 49FFC8                  	dec r8
  4428 00002231 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0019
  4429                                  .L_lambda_opt_stack_shrink_loop_exit_0019:
  4430 00002233 488B442410              	mov rax, qword[rsp + 2 * 8]
  4431 00002238 BF01000000              	mov rdi, 1
  4432 0000223D 4829F8                  	sub rax, rdi
  4433 00002240 4889C7                  	mov rdi, rax
  4434 00002243 486BC008                	imul rax,8
  4435 00002247 4801C4                  	add rsp, rax
  4436 0000224A 4889E0                  	mov rax, rsp
  4437 0000224D 4989F8                  	mov r8, rdi
  4438 00002250 4D6BC008                	imul r8, 8
  4439 00002254 4C29C0                  	sub rax, r8
  4440 00002257 4989C2                  	mov r10, rax	; holds the original ret in the stack
  4441 0000225A 4983C218                	add r10, 8*3
  4442 0000225E 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  4443 00002262 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  4444 00002265 4D6BC008                	imul r8,8
  4445 00002269 4C01C0                  	add rax, r8
  4446 0000226C 4C8908                  	mov qword[rax] ,r9
  4447 0000226F 4983EA18                 	sub r10, 8*3
  4448 00002273 48C744241001000000      	mov qword [rsp+2*8], 1
  4449 0000227C 498B4208                	mov rax, qword[r10 + 1 * 8]
  4450 00002280 4889442408              	mov qword[rsp + 1*8] ,rax
  4451 00002285 498B02                  	mov rax, qword[r10]
  4452 00002288 48890424                	mov qword[rsp], rax
  4453 0000228C C8000000                	enter 0, 0
  4454 00002290 488B4520                	mov rax, PARAM(0)	; param args
  4455 00002294 C9                      	leave
  4456 00002295 C21800                  	ret AND_KILL_FRAME(1)
  4457                                  .L_lambda_opt_end_0019:	; new closure is in rax
  4458 00002298 48890425[E1130000]      	mov qword [free_var_92], rax
  4459 000022A0 48B8-                   	mov rax, sob_void
  4459 000022A2 [0000000000000000] 
  4460                                  
  4461 000022AA 4889C7                  	mov rdi, rax
  4462 000022AD E8680D0100              	call print_sexpr_if_not_void
  4463 000022B2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4464 000022B7 E8090B0100              	call malloc
  4465 000022BC 50                      	push rax
  4466 000022BD BF00000000              	mov rdi, 8 * 0	; new rib
  4467 000022C2 E8FE0A0100              	call malloc
  4468 000022C7 50                      	push rax
  4469 000022C8 BF08000000              	mov rdi, 8 * 1	; extended env
  4470 000022CD E8F30A0100              	call malloc
  4471 000022D2 488B7D10                	mov rdi, ENV
  4472 000022D6 BE00000000              	mov rsi, 0
  4473 000022DB BA01000000              	mov rdx, 1
  4474                                  .L_lambda_simple_env_loop_00e1:	; ext_env[i + 1] <-- env[i]
  4475 000022E0 4883FE00                	cmp rsi, 0
  4476 000022E4 7410                    	je .L_lambda_simple_env_end_00e1
  4477 000022E6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4478 000022EA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4479 000022EE 48FFC6                  	inc rsi
  4480 000022F1 48FFC2                  	inc rdx
  4481 000022F4 EBEA                    	jmp .L_lambda_simple_env_loop_00e1
  4482                                  .L_lambda_simple_env_end_00e1:
  4483 000022F6 5B                      	pop rbx
  4484 000022F7 BE00000000              	mov rsi, 0
  4485                                  .L_lambda_simple_params_loop_00e1:	; copy params
  4486 000022FC 4883FE00                	cmp rsi, 0
  4487 00002300 740E                    	je .L_lambda_simple_params_end_00e1
  4488 00002302 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4489 00002307 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4490 0000230B 48FFC6                  	inc rsi
  4491 0000230E EBEC                    	jmp .L_lambda_simple_params_loop_00e1
  4492                                  .L_lambda_simple_params_end_00e1:
  4493 00002310 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4494 00002313 4889C3                  	mov rbx, rax
  4495 00002316 58                      	pop rax
  4496 00002317 C60004                  	mov byte [rax], T_closure
  4497 0000231A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4498 0000231E 48C74009[28230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00e1
  4499 00002326 EB3D                    	jmp .L_lambda_simple_end_00e1
  4500                                  .L_lambda_simple_code_00e1:	; lambda-simple body
  4501 00002328 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4502 0000232E 740B                    	je .L_lambda_simple_arity_check_ok_00e1
  4503 00002330 FF742410                	push qword [rsp + 8 * 2]
  4504 00002334 6A01                    	push 1
  4505 00002336 E9430A0100              	jmp L_error_incorrect_arity_simple
  4506                                  .L_lambda_simple_arity_check_ok_00e1:
  4507 0000233B C8000000                	enter 0, 0
  4508 0000233F 488B4520                	mov rax, PARAM(0)	; param x
  4509 00002343 483D[02000000]          	cmp rax, sob_boolean_false
  4510 00002349 740C                    	je .L_if_else_0098
  4511 0000234B 48B8-                   	mov rax, L_constants + 2
  4511 0000234D [0200000000000000] 
  4512 00002355 EB0A                    	jmp .L_if_end_0098
  4513                                  .L_if_else_0098:
  4514 00002357 48B8-                   	mov rax, L_constants + 3
  4514 00002359 [0300000000000000] 
  4515                                  .L_if_end_0098:
  4516 00002361 C9                      	leave
  4517 00002362 C21800                  	ret AND_KILL_FRAME(1)
  4518                                  .L_lambda_simple_end_00e1:	; new closure is in rax
  4519 00002365 48890425[CF140000]      	mov qword [free_var_106], rax
  4520 0000236D 48B8-                   	mov rax, sob_void
  4520 0000236F [0000000000000000] 
  4521                                  
  4522 00002377 4889C7                  	mov rdi, rax
  4523 0000237A E89B0C0100              	call print_sexpr_if_not_void
  4524 0000237F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4525 00002384 E83C0A0100              	call malloc
  4526 00002389 50                      	push rax
  4527 0000238A BF00000000              	mov rdi, 8 * 0	; new rib
  4528 0000238F E8310A0100              	call malloc
  4529 00002394 50                      	push rax
  4530 00002395 BF08000000              	mov rdi, 8 * 1	; extended env
  4531 0000239A E8260A0100              	call malloc
  4532 0000239F 488B7D10                	mov rdi, ENV
  4533 000023A3 BE00000000              	mov rsi, 0
  4534 000023A8 BA01000000              	mov rdx, 1
  4535                                  .L_lambda_simple_env_loop_00e2:	; ext_env[i + 1] <-- env[i]
  4536 000023AD 4883FE00                	cmp rsi, 0
  4537 000023B1 7410                    	je .L_lambda_simple_env_end_00e2
  4538 000023B3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4539 000023B7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4540 000023BB 48FFC6                  	inc rsi
  4541 000023BE 48FFC2                  	inc rdx
  4542 000023C1 EBEA                    	jmp .L_lambda_simple_env_loop_00e2
  4543                                  .L_lambda_simple_env_end_00e2:
  4544 000023C3 5B                      	pop rbx
  4545 000023C4 BE00000000              	mov rsi, 0
  4546                                  .L_lambda_simple_params_loop_00e2:	; copy params
  4547 000023C9 4883FE00                	cmp rsi, 0
  4548 000023CD 740E                    	je .L_lambda_simple_params_end_00e2
  4549 000023CF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4550 000023D4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4551 000023D8 48FFC6                  	inc rsi
  4552 000023DB EBEC                    	jmp .L_lambda_simple_params_loop_00e2
  4553                                  .L_lambda_simple_params_end_00e2:
  4554 000023DD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4555 000023E0 4889C3                  	mov rbx, rax
  4556 000023E3 58                      	pop rax
  4557 000023E4 C60004                  	mov byte [rax], T_closure
  4558 000023E7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4559 000023EB 48C74009[F5230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00e2
  4560 000023F3 EB71                    	jmp .L_lambda_simple_end_00e2
  4561                                  .L_lambda_simple_code_00e2:	; lambda-simple body
  4562 000023F5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4563 000023FB 740B                    	je .L_lambda_simple_arity_check_ok_00e2
  4564 000023FD FF742410                	push qword [rsp + 8 * 2]
  4565 00002401 6A01                    	push 1
  4566 00002403 E976090100              	jmp L_error_incorrect_arity_simple
  4567                                  .L_lambda_simple_arity_check_ok_00e2:
  4568 00002408 C8000000                	enter 0, 0
  4569                                  	; preparing a non-tail-call
  4570 0000240C 488B4520                	mov rax, PARAM(0)	; param q
  4571 00002410 50                      	push rax
  4572 00002411 6A01                    	push 1	; arg count
  4573 00002413 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  4574 0000241B 803805                  	cmp byte [rax], T_undefined
  4575 0000241E 0F8474080100            	je L_error_fvar_undefined
  4576 00002424 803804                  	cmp byte [rax], T_closure
  4577 00002427 0F85EF080100            	jne L_error_non_closure
  4578 0000242D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4579 00002430 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4580 00002433 483D[02000000]          	cmp rax, sob_boolean_false
  4581 00002439 7527                    	jne .L_or_end_0013
  4582                                  	; preparing a non-tail-call
  4583 0000243B 488B4520                	mov rax, PARAM(0)	; param q
  4584 0000243F 50                      	push rax
  4585 00002440 6A01                    	push 1	; arg count
  4586 00002442 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  4587 0000244A 803805                  	cmp byte [rax], T_undefined
  4588 0000244D 0F8445080100            	je L_error_fvar_undefined
  4589 00002453 803804                  	cmp byte [rax], T_closure
  4590 00002456 0F85C0080100            	jne L_error_non_closure
  4591 0000245C FF7001                  	push SOB_CLOSURE_ENV(rax)
  4592 0000245F FF5009                  	call SOB_CLOSURE_CODE(rax)
  4593                                  .L_or_end_0013:
  4594 00002462 C9                      	leave
  4595 00002463 C21800                  	ret AND_KILL_FRAME(1)
  4596                                  .L_lambda_simple_end_00e2:	; new closure is in rax
  4597 00002466 48890425[57150000]      	mov qword [free_var_114], rax
  4598 0000246E 48B8-                   	mov rax, sob_void
  4598 00002470 [0000000000000000] 
  4599                                  
  4600 00002478 4889C7                  	mov rdi, rax
  4601 0000247B E89A0B0100              	call print_sexpr_if_not_void
  4602                                  	; preparing a non-tail-call
  4603 00002480 48B8-                   	mov rax, L_constants + 1993
  4603 00002482 [C907000000000000] 
  4604 0000248A 50                      	push rax
  4605 0000248B 6A01                    	push 1	; arg count
  4606 0000248D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4607 00002492 E82E090100              	call malloc
  4608 00002497 50                      	push rax
  4609 00002498 BF00000000              	mov rdi, 8 * 0	; new rib
  4610 0000249D E823090100              	call malloc
  4611 000024A2 50                      	push rax
  4612 000024A3 BF08000000              	mov rdi, 8 * 1	; extended env
  4613 000024A8 E818090100              	call malloc
  4614 000024AD 488B7D10                	mov rdi, ENV
  4615 000024B1 BE00000000              	mov rsi, 0
  4616 000024B6 BA01000000              	mov rdx, 1
  4617                                  .L_lambda_simple_env_loop_00e3:	; ext_env[i + 1] <-- env[i]
  4618 000024BB 4883FE00                	cmp rsi, 0
  4619 000024BF 7410                    	je .L_lambda_simple_env_end_00e3
  4620 000024C1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4621 000024C5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4622 000024C9 48FFC6                  	inc rsi
  4623 000024CC 48FFC2                  	inc rdx
  4624 000024CF EBEA                    	jmp .L_lambda_simple_env_loop_00e3
  4625                                  .L_lambda_simple_env_end_00e3:
  4626 000024D1 5B                      	pop rbx
  4627 000024D2 BE00000000              	mov rsi, 0
  4628                                  .L_lambda_simple_params_loop_00e3:	; copy params
  4629 000024D7 4883FE00                	cmp rsi, 0
  4630 000024DB 740E                    	je .L_lambda_simple_params_end_00e3
  4631 000024DD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4632 000024E2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4633 000024E6 48FFC6                  	inc rsi
  4634 000024E9 EBEC                    	jmp .L_lambda_simple_params_loop_00e3
  4635                                  .L_lambda_simple_params_end_00e3:
  4636 000024EB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4637 000024EE 4889C3                  	mov rbx, rax
  4638 000024F1 58                      	pop rax
  4639 000024F2 C60004                  	mov byte [rax], T_closure
  4640 000024F5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4641 000024F9 48C74009[06250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00e3
  4642 00002501 E968030000              	jmp .L_lambda_simple_end_00e3
  4643                                  .L_lambda_simple_code_00e3:	; lambda-simple body
  4644 00002506 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4645 0000250C 740B                    	je .L_lambda_simple_arity_check_ok_00e3
  4646 0000250E FF742410                	push qword [rsp + 8 * 2]
  4647 00002512 6A01                    	push 1
  4648 00002514 E965080100              	jmp L_error_incorrect_arity_simple
  4649                                  .L_lambda_simple_arity_check_ok_00e3:
  4650 00002519 C8000000                	enter 0, 0
  4651 0000251D 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  4652 00002521 488903                  	mov qword [rbx], rax
  4653                                  
  4654 00002524 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4655 00002529 E897080100              	call malloc
  4656 0000252E 50                      	push rax
  4657 0000252F BF08000000              	mov rdi, 8 * 1	; new rib
  4658 00002534 E88C080100              	call malloc
  4659 00002539 50                      	push rax
  4660 0000253A BF10000000              	mov rdi, 8 * 2	; extended env
  4661 0000253F E881080100              	call malloc
  4662 00002544 488B7D10                	mov rdi, ENV
  4663 00002548 BE00000000              	mov rsi, 0
  4664 0000254D BA01000000              	mov rdx, 1
  4665                                  .L_lambda_simple_env_loop_00e4:	; ext_env[i + 1] <-- env[i]
  4666 00002552 4883FE01                	cmp rsi, 1
  4667 00002556 7410                    	je .L_lambda_simple_env_end_00e4
  4668 00002558 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4669 0000255C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4670 00002560 48FFC6                  	inc rsi
  4671 00002563 48FFC2                  	inc rdx
  4672 00002566 EBEA                    	jmp .L_lambda_simple_env_loop_00e4
  4673                                  .L_lambda_simple_env_end_00e4:
  4674 00002568 5B                      	pop rbx
  4675 00002569 BE00000000              	mov rsi, 0
  4676                                  .L_lambda_simple_params_loop_00e4:	; copy params
  4677 0000256E 4883FE01                	cmp rsi, 1
  4678 00002572 740E                    	je .L_lambda_simple_params_end_00e4
  4679 00002574 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4680 00002579 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4681 0000257D 48FFC6                  	inc rsi
  4682 00002580 EBEC                    	jmp .L_lambda_simple_params_loop_00e4
  4683                                  .L_lambda_simple_params_end_00e4:
  4684 00002582 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4685 00002585 4889C3                  	mov rbx, rax
  4686 00002588 58                      	pop rax
  4687 00002589 C60004                  	mov byte [rax], T_closure
  4688 0000258C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4689 00002590 48C74009[9D250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00e4
  4690 00002598 E9E9000000              	jmp .L_lambda_simple_end_00e4
  4691                                  .L_lambda_simple_code_00e4:	; lambda-simple body
  4692 0000259D 48837C241002            	cmp qword [rsp + 8 * 2], 2
  4693 000025A3 740B                    	je .L_lambda_simple_arity_check_ok_00e4
  4694 000025A5 FF742410                	push qword [rsp + 8 * 2]
  4695 000025A9 6A02                    	push 2
  4696 000025AB E9CE070100              	jmp L_error_incorrect_arity_simple
  4697                                  .L_lambda_simple_arity_check_ok_00e4:
  4698 000025B0 C8000000                	enter 0, 0
  4699                                  	; preparing a non-tail-call
  4700 000025B4 488B4528                	mov rax, PARAM(1)	; param s
  4701 000025B8 50                      	push rax
  4702 000025B9 6A01                    	push 1	; arg count
  4703 000025BB 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  4704 000025C3 803805                  	cmp byte [rax], T_undefined
  4705 000025C6 0F84CC060100            	je L_error_fvar_undefined
  4706 000025CC 803804                  	cmp byte [rax], T_closure
  4707 000025CF 0F8547070100            	jne L_error_non_closure
  4708 000025D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4709 000025D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4710 000025DB 483D[02000000]          	cmp rax, sob_boolean_false
  4711 000025E1 7409                    	je .L_if_else_0099
  4712 000025E3 488B4520                	mov rax, PARAM(0)	; param a
  4713 000025E7 E996000000              	jmp .L_if_end_0099
  4714                                  .L_if_else_0099:
  4715                                  	; preparing a non-tail-call
  4716                                  	; preparing a non-tail-call
  4717                                  	; preparing a non-tail-call
  4718 000025EC 488B4528                	mov rax, PARAM(1)	; param s
  4719 000025F0 50                      	push rax
  4720 000025F1 6A01                    	push 1	; arg count
  4721 000025F3 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  4722 000025FB 803805                  	cmp byte [rax], T_undefined
  4723 000025FE 0F8494060100            	je L_error_fvar_undefined
  4724 00002604 803804                  	cmp byte [rax], T_closure
  4725 00002607 0F850F070100            	jne L_error_non_closure
  4726 0000260D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4727 00002610 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4728 00002613 50                      	push rax
  4729                                  	; preparing a non-tail-call
  4730 00002614 488B4528                	mov rax, PARAM(1)	; param s
  4731 00002618 50                      	push rax
  4732 00002619 6A01                    	push 1	; arg count
  4733 0000261B 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  4734 00002623 803805                  	cmp byte [rax], T_undefined
  4735 00002626 0F846C060100            	je L_error_fvar_undefined
  4736 0000262C 803804                  	cmp byte [rax], T_closure
  4737 0000262F 0F85E7060100            	jne L_error_non_closure
  4738 00002635 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4739 00002638 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4740 0000263B 50                      	push rax
  4741 0000263C 6A02                    	push 2	; arg count
  4742 0000263E 488B4510                	mov rax, ENV
  4743 00002642 488B00                  	mov rax, qword [rax + 8 * 0]
  4744 00002645 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  4745 00002648 488B00                  	mov rax, qword [rax]
  4746 0000264B 803804                  	cmp byte [rax], T_closure
  4747 0000264E 0F85C8060100            	jne L_error_non_closure
  4748 00002654 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4749 00002657 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4750 0000265A 50                      	push rax
  4751 0000265B 488B4520                	mov rax, PARAM(0)	; param a
  4752 0000265F 50                      	push rax
  4753 00002660 6A02                    	push 2	; arg count
  4754 00002662 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  4755 0000266A 803805                  	cmp byte [rax], T_undefined
  4756 0000266D 0F8425060100            	je L_error_fvar_undefined
  4757 00002673 803804                  	cmp byte [rax], T_closure
  4758 00002676 0F85A0060100            	jne L_error_non_closure
  4759 0000267C FF7001                  	push SOB_CLOSURE_ENV(rax)
  4760 0000267F FF5009                  	call SOB_CLOSURE_CODE(rax)
  4761                                  .L_if_end_0099:
  4762 00002682 C9                      	leave
  4763 00002683 C22000                  	ret AND_KILL_FRAME(2)
  4764                                  .L_lambda_simple_end_00e4:	; new closure is in rax
  4765 00002686 50                      	push rax
  4766 00002687 488B4520                	mov rax, PARAM(0)	; param run
  4767 0000268B 8F00                    	pop qword [rax]
  4768 0000268D 48B8-                   	mov rax, sob_void
  4768 0000268F [0000000000000000] 
  4769                                  
  4770 00002697 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4771 0000269C E824070100              	call malloc
  4772 000026A1 50                      	push rax
  4773 000026A2 BF08000000              	mov rdi, 8 * 1	; new rib
  4774 000026A7 E819070100              	call malloc
  4775 000026AC 50                      	push rax
  4776 000026AD BF10000000              	mov rdi, 8 * 2	; extended env
  4777 000026B2 E80E070100              	call malloc
  4778 000026B7 488B7D10                	mov rdi, ENV
  4779 000026BB BE00000000              	mov rsi, 0
  4780 000026C0 BA01000000              	mov rdx, 1
  4781                                  .L_lambda_opt_env_loop_001a:	; ext_env[i + 1] <-- env[i]
  4782 000026C5 4883FE01                	cmp rsi, 1
  4783 000026C9 7410                    	je .L_lambda_opt_env_end_001a
  4784 000026CB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4785 000026CF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4786 000026D3 48FFC6                  	inc rsi
  4787 000026D6 48FFC2                  	inc rdx
  4788 000026D9 EBEA                    	jmp .L_lambda_opt_env_loop_001a
  4789                                  .L_lambda_opt_env_end_001a:
  4790 000026DB 5B                      	pop rbx
  4791 000026DC BE00000000              	mov rsi, 0
  4792                                  .L_lambda_opt_params_loop_001a:	; copy params
  4793 000026E1 4883FE01                	cmp rsi, 1
  4794 000026E5 740E                    	je .L_lambda_opt_params_end_001a
  4795 000026E7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4796 000026EC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4797 000026F0 48FFC6                  	inc rsi
  4798 000026F3 EBEC                    	jmp .L_lambda_opt_params_loop_001a
  4799                                  .L_lambda_opt_params_end_001a:
  4800 000026F5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4801 000026F8 4889C3                  	mov rbx, rax
  4802 000026FB 58                      	pop rax
  4803 000026FC C60004                  	mov byte [rax], T_closure
  4804 000026FF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4805 00002703 48C74009[10270000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_001a
  4806 0000270B E95A010000              	jmp .L_lambda_opt_end_001a
  4807                                  .L_lambda_opt_code_001a:	; lambda-opt body
  4808 00002710 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4809 00002716 740D                    	je .L_lambda_opt_arity_check_exact_001a
  4810 00002718 7F7A                    	jg .L_lambda_opt_arity_check_more_001a
  4811 0000271A FF742410                	push qword [rsp + 8 * 2]
  4812 0000271E 6A01                    	push 1
  4813 00002720 E96D060100              	jmp L_error_incorrect_arity_opt
  4814                                  .L_lambda_opt_arity_check_exact_001a:
  4815 00002725 4883EC08                	sub rsp, 8
  4816 00002729 488B442408              	mov rax, qword[rsp + 8 *1]
  4817 0000272E 48890424                	mov qword[rsp], rax  
  4818 00002732 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  4819 00002737 4889442408              	mov qword[rsp + 8 * 1], rax
  4820 0000273C B802000000              	mov rax, 2
  4821 00002741 4889442410              	mov qword[rsp + 8 *2], rax
  4822 00002746 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  4823 0000274B 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  4824 00002750 48B8-                   	mov rax, sob_nil
  4824 00002752 [0100000000000000] 
  4825 0000275A 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  4826 0000275F C8000000                	enter 0, 0
  4827                                  	; preparing a non-tail-call
  4828 00002763 488B4528                	mov rax, PARAM(1)	; param s
  4829 00002767 50                      	push rax
  4830 00002768 488B4520                	mov rax, PARAM(0)	; param a
  4831 0000276C 50                      	push rax
  4832 0000276D 6A02                    	push 2	; arg count
  4833 0000276F 488B4510                	mov rax, ENV
  4834 00002773 488B00                  	mov rax, qword [rax + 8 * 0]
  4835 00002776 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  4836 00002779 488B00                  	mov rax, qword [rax]
  4837 0000277C 803804                  	cmp byte [rax], T_closure
  4838 0000277F 0F8597050100            	jne L_error_non_closure
  4839 00002785 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4840 00002788 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4841 0000278B C9                      	leave
  4842 0000278C C22000                  	ret AND_KILL_FRAME(2)
  4843 0000278F E9D6000000              	jmp .L_lambda_opt_end_001a	; new closure is in rax
  4844                                  .L_lambda_opt_arity_check_more_001a:
  4845 00002794 488B442410              	mov rax, qword[rsp + 2 * 8]
  4846 00002799 4889C7                  	mov rdi, rax
  4847 0000279C 49B9-                   	mov r9, sob_nil
  4847 0000279E [0100000000000000] 
  4848 000027A6 4C8B442410              	mov r8, qword[rsp+2*8]
  4849                                  .L_lambda_opt_stack_shrink_loop_001a:
  4850 000027AB 4983F801                	cmp r8, 1
  4851 000027AF 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_001a
  4852 000027B1 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  4853 000027B6 BF11000000              	mov rdi, 1+8+8	;for pair
  4854 000027BB E805060100              	call malloc	 ;to create the pair in the stack
  4855 000027C0 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  4856 000027C3 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  4857 000027C7 4C894809                 	mov qword[rax+1+8],r9
  4858 000027CB 4989C1                  	mov r9 , rax	 ; for the recursion 
  4859 000027CE 49FFC8                  	dec r8
  4860 000027D1 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_001a
  4861                                  .L_lambda_opt_stack_shrink_loop_exit_001a:
  4862 000027D3 488B442410              	mov rax, qword[rsp + 2 * 8]
  4863 000027D8 BF02000000              	mov rdi, 2
  4864 000027DD 4829F8                  	sub rax, rdi
  4865 000027E0 4889C7                  	mov rdi, rax
  4866 000027E3 486BC008                	imul rax,8
  4867 000027E7 4801C4                  	add rsp, rax
  4868 000027EA 4889E0                  	mov rax, rsp
  4869 000027ED 4989F8                  	mov r8, rdi
  4870 000027F0 4D6BC008                	imul r8, 8
  4871 000027F4 4C29C0                  	sub rax, r8
  4872 000027F7 4989C2                  	mov r10, rax	; holds the original ret in the stack
  4873 000027FA 4983C218                	add r10, 8*3
  4874 000027FE 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  4875 00002802 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  4876 00002805 4D6BC008                	imul r8,8
  4877 00002809 4C01C0                  	add rax, r8
  4878 0000280C 4C8908                  	mov qword[rax] ,r9
  4879 0000280F 4D89D0                   	mov r8, r10
  4880 00002812 4983C000                	add r8, 8 * 0
  4881 00002816 4D8B08                  	mov r9,qword[r8]
  4882 00002819 4D890CF8                	mov qword [r8 + rdi * 8], r9
  4883 0000281D 4983EA18                	sub r10, 8*3
  4884 00002821 48C744241002000000      	mov qword [rsp+2*8], 2
  4885 0000282A 498B4208                	mov rax, qword[r10 + 1 * 8]
  4886 0000282E 4889442408              	mov qword[rsp + 1*8] ,rax
  4887 00002833 498B02                  	mov rax, qword[r10]
  4888 00002836 48890424                	mov qword[rsp], rax
  4889 0000283A C8000000                	enter 0, 0
  4890                                  	; preparing a non-tail-call
  4891 0000283E 488B4528                	mov rax, PARAM(1)	; param s
  4892 00002842 50                      	push rax
  4893 00002843 488B4520                	mov rax, PARAM(0)	; param a
  4894 00002847 50                      	push rax
  4895 00002848 6A02                    	push 2	; arg count
  4896 0000284A 488B4510                	mov rax, ENV
  4897 0000284E 488B00                  	mov rax, qword [rax + 8 * 0]
  4898 00002851 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  4899 00002854 488B00                  	mov rax, qword [rax]
  4900 00002857 803804                  	cmp byte [rax], T_closure
  4901 0000285A 0F85BC040100            	jne L_error_non_closure
  4902 00002860 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4903 00002863 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4904 00002866 C9                      	leave
  4905 00002867 C22000                  	ret AND_KILL_FRAME(2)
  4906                                  .L_lambda_opt_end_001a:	; new closure is in rax
  4907 0000286A C9                      	leave
  4908 0000286B C21800                  	ret AND_KILL_FRAME(1)
  4909                                  .L_lambda_simple_end_00e3:	; new closure is in rax
  4910 0000286E 803804                  	cmp byte [rax], T_closure
  4911 00002871 0F85A5040100            	jne L_error_non_closure
  4912 00002877 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4913 0000287A FF5009                  	call SOB_CLOSURE_CODE(rax)
  4914 0000287D 48890425[F2130000]      	mov qword [free_var_93], rax
  4915 00002885 48B8-                   	mov rax, sob_void
  4915 00002887 [0000000000000000] 
  4916                                  
  4917 0000288F 4889C7                  	mov rdi, rax
  4918 00002892 E883070100              	call print_sexpr_if_not_void
  4919                                  	; preparing a non-tail-call
  4920 00002897 48B8-                   	mov rax, L_constants + 1993
  4920 00002899 [C907000000000000] 
  4921 000028A1 50                      	push rax
  4922 000028A2 6A01                    	push 1	; arg count
  4923 000028A4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4924 000028A9 E817050100              	call malloc
  4925 000028AE 50                      	push rax
  4926 000028AF BF00000000              	mov rdi, 8 * 0	; new rib
  4927 000028B4 E80C050100              	call malloc
  4928 000028B9 50                      	push rax
  4929 000028BA BF08000000              	mov rdi, 8 * 1	; extended env
  4930 000028BF E801050100              	call malloc
  4931 000028C4 488B7D10                	mov rdi, ENV
  4932 000028C8 BE00000000              	mov rsi, 0
  4933 000028CD BA01000000              	mov rdx, 1
  4934                                  .L_lambda_simple_env_loop_00e5:	; ext_env[i + 1] <-- env[i]
  4935 000028D2 4883FE00                	cmp rsi, 0
  4936 000028D6 7410                    	je .L_lambda_simple_env_end_00e5
  4937 000028D8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4938 000028DC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4939 000028E0 48FFC6                  	inc rsi
  4940 000028E3 48FFC2                  	inc rdx
  4941 000028E6 EBEA                    	jmp .L_lambda_simple_env_loop_00e5
  4942                                  .L_lambda_simple_env_end_00e5:
  4943 000028E8 5B                      	pop rbx
  4944 000028E9 BE00000000              	mov rsi, 0
  4945                                  .L_lambda_simple_params_loop_00e5:	; copy params
  4946 000028EE 4883FE00                	cmp rsi, 0
  4947 000028F2 740E                    	je .L_lambda_simple_params_end_00e5
  4948 000028F4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4949 000028F9 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4950 000028FD 48FFC6                  	inc rsi
  4951 00002900 EBEC                    	jmp .L_lambda_simple_params_loop_00e5
  4952                                  .L_lambda_simple_params_end_00e5:
  4953 00002902 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4954 00002905 4889C3                  	mov rbx, rax
  4955 00002908 58                      	pop rax
  4956 00002909 C60004                  	mov byte [rax], T_closure
  4957 0000290C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4958 00002910 48C74009[1D290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00e5
  4959 00002918 E949040000              	jmp .L_lambda_simple_end_00e5
  4960                                  .L_lambda_simple_code_00e5:	; lambda-simple body
  4961 0000291D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4962 00002923 740B                    	je .L_lambda_simple_arity_check_ok_00e5
  4963 00002925 FF742410                	push qword [rsp + 8 * 2]
  4964 00002929 6A01                    	push 1
  4965 0000292B E94E040100              	jmp L_error_incorrect_arity_simple
  4966                                  .L_lambda_simple_arity_check_ok_00e5:
  4967 00002930 C8000000                	enter 0, 0
  4968 00002934 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  4969 00002938 488903                  	mov qword [rbx], rax
  4970                                  
  4971 0000293B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4972 00002940 E880040100              	call malloc
  4973 00002945 50                      	push rax
  4974 00002946 BF08000000              	mov rdi, 8 * 1	; new rib
  4975 0000294B E875040100              	call malloc
  4976 00002950 50                      	push rax
  4977 00002951 BF10000000              	mov rdi, 8 * 2	; extended env
  4978 00002956 E86A040100              	call malloc
  4979 0000295B 488B7D10                	mov rdi, ENV
  4980 0000295F BE00000000              	mov rsi, 0
  4981 00002964 BA01000000              	mov rdx, 1
  4982                                  .L_lambda_simple_env_loop_00e6:	; ext_env[i + 1] <-- env[i]
  4983 00002969 4883FE01                	cmp rsi, 1
  4984 0000296D 7410                    	je .L_lambda_simple_env_end_00e6
  4985 0000296F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4986 00002973 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4987 00002977 48FFC6                  	inc rsi
  4988 0000297A 48FFC2                  	inc rdx
  4989 0000297D EBEA                    	jmp .L_lambda_simple_env_loop_00e6
  4990                                  .L_lambda_simple_env_end_00e6:
  4991 0000297F 5B                      	pop rbx
  4992 00002980 BE00000000              	mov rsi, 0
  4993                                  .L_lambda_simple_params_loop_00e6:	; copy params
  4994 00002985 4883FE01                	cmp rsi, 1
  4995 00002989 740E                    	je .L_lambda_simple_params_end_00e6
  4996 0000298B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4997 00002990 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4998 00002994 48FFC6                  	inc rsi
  4999 00002997 EBEC                    	jmp .L_lambda_simple_params_loop_00e6
  5000                                  .L_lambda_simple_params_end_00e6:
  5001 00002999 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5002 0000299C 4889C3                  	mov rbx, rax
  5003 0000299F 58                      	pop rax
  5004 000029A0 C60004                  	mov byte [rax], T_closure
  5005 000029A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5006 000029A7 48C74009[B4290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00e6
  5007 000029AF E9EA000000              	jmp .L_lambda_simple_end_00e6
  5008                                  .L_lambda_simple_code_00e6:	; lambda-simple body
  5009 000029B4 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5010 000029BA 740B                    	je .L_lambda_simple_arity_check_ok_00e6
  5011 000029BC FF742410                	push qword [rsp + 8 * 2]
  5012 000029C0 6A02                    	push 2
  5013 000029C2 E9B7030100              	jmp L_error_incorrect_arity_simple
  5014                                  .L_lambda_simple_arity_check_ok_00e6:
  5015 000029C7 C8000000                	enter 0, 0
  5016                                  	; preparing a non-tail-call
  5017 000029CB 488B4528                	mov rax, PARAM(1)	; param s
  5018 000029CF 50                      	push rax
  5019 000029D0 6A01                    	push 1	; arg count
  5020 000029D2 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  5021 000029DA 803805                  	cmp byte [rax], T_undefined
  5022 000029DD 0F84B5020100            	je L_error_fvar_undefined
  5023 000029E3 803804                  	cmp byte [rax], T_closure
  5024 000029E6 0F8530030100            	jne L_error_non_closure
  5025 000029EC FF7001                  	push SOB_CLOSURE_ENV(rax)
  5026 000029EF FF5009                  	call SOB_CLOSURE_CODE(rax)
  5027 000029F2 483D[02000000]          	cmp rax, sob_boolean_false
  5028 000029F8 0F8498000000            	je .L_if_else_009a
  5029                                  	; preparing a non-tail-call
  5030                                  	; preparing a non-tail-call
  5031                                  	; preparing a non-tail-call
  5032 000029FE 488B4528                	mov rax, PARAM(1)	; param s
  5033 00002A02 50                      	push rax
  5034 00002A03 6A01                    	push 1	; arg count
  5035 00002A05 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5036 00002A0D 803805                  	cmp byte [rax], T_undefined
  5037 00002A10 0F8482020100            	je L_error_fvar_undefined
  5038 00002A16 803804                  	cmp byte [rax], T_closure
  5039 00002A19 0F85FD020100            	jne L_error_non_closure
  5040 00002A1F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5041 00002A22 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5042 00002A25 50                      	push rax
  5043                                  	; preparing a non-tail-call
  5044 00002A26 488B4528                	mov rax, PARAM(1)	; param s
  5045 00002A2A 50                      	push rax
  5046 00002A2B 6A01                    	push 1	; arg count
  5047 00002A2D 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5048 00002A35 803805                  	cmp byte [rax], T_undefined
  5049 00002A38 0F845A020100            	je L_error_fvar_undefined
  5050 00002A3E 803804                  	cmp byte [rax], T_closure
  5051 00002A41 0F85D5020100            	jne L_error_non_closure
  5052 00002A47 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5053 00002A4A FF5009                  	call SOB_CLOSURE_CODE(rax)
  5054 00002A4D 50                      	push rax
  5055 00002A4E 6A02                    	push 2	; arg count
  5056 00002A50 488B4510                	mov rax, ENV
  5057 00002A54 488B00                  	mov rax, qword [rax + 8 * 0]
  5058 00002A57 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5059 00002A5A 488B00                  	mov rax, qword [rax]
  5060 00002A5D 803804                  	cmp byte [rax], T_closure
  5061 00002A60 0F85B6020100            	jne L_error_non_closure
  5062 00002A66 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5063 00002A69 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5064 00002A6C 50                      	push rax
  5065 00002A6D 488B4520                	mov rax, PARAM(0)	; param a
  5066 00002A71 50                      	push rax
  5067 00002A72 6A02                    	push 2	; arg count
  5068 00002A74 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  5069 00002A7C 803805                  	cmp byte [rax], T_undefined
  5070 00002A7F 0F8413020100            	je L_error_fvar_undefined
  5071 00002A85 803804                  	cmp byte [rax], T_closure
  5072 00002A88 0F858E020100            	jne L_error_non_closure
  5073 00002A8E FF7001                  	push SOB_CLOSURE_ENV(rax)
  5074 00002A91 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5075 00002A94 EB04                    	jmp .L_if_end_009a
  5076                                  .L_if_else_009a:
  5077 00002A96 488B4520                	mov rax, PARAM(0)	; param a
  5078                                  .L_if_end_009a:
  5079 00002A9A C9                      	leave
  5080 00002A9B C22000                  	ret AND_KILL_FRAME(2)
  5081                                  .L_lambda_simple_end_00e6:	; new closure is in rax
  5082 00002A9E 50                      	push rax
  5083 00002A9F 488B4520                	mov rax, PARAM(0)	; param run
  5084 00002AA3 8F00                    	pop qword [rax]
  5085 00002AA5 48B8-                   	mov rax, sob_void
  5085 00002AA7 [0000000000000000] 
  5086                                  
  5087 00002AAF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5088 00002AB4 E80C030100              	call malloc
  5089 00002AB9 50                      	push rax
  5090 00002ABA BF08000000              	mov rdi, 8 * 1	; new rib
  5091 00002ABF E801030100              	call malloc
  5092 00002AC4 50                      	push rax
  5093 00002AC5 BF10000000              	mov rdi, 8 * 2	; extended env
  5094 00002ACA E8F6020100              	call malloc
  5095 00002ACF 488B7D10                	mov rdi, ENV
  5096 00002AD3 BE00000000              	mov rsi, 0
  5097 00002AD8 BA01000000              	mov rdx, 1
  5098                                  .L_lambda_opt_env_loop_001b:	; ext_env[i + 1] <-- env[i]
  5099 00002ADD 4883FE01                	cmp rsi, 1
  5100 00002AE1 7410                    	je .L_lambda_opt_env_end_001b
  5101 00002AE3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5102 00002AE7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5103 00002AEB 48FFC6                  	inc rsi
  5104 00002AEE 48FFC2                  	inc rdx
  5105 00002AF1 EBEA                    	jmp .L_lambda_opt_env_loop_001b
  5106                                  .L_lambda_opt_env_end_001b:
  5107 00002AF3 5B                      	pop rbx
  5108 00002AF4 BE00000000              	mov rsi, 0
  5109                                  .L_lambda_opt_params_loop_001b:	; copy params
  5110 00002AF9 4883FE01                	cmp rsi, 1
  5111 00002AFD 740E                    	je .L_lambda_opt_params_end_001b
  5112 00002AFF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5113 00002B04 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5114 00002B08 48FFC6                  	inc rsi
  5115 00002B0B EBEC                    	jmp .L_lambda_opt_params_loop_001b
  5116                                  .L_lambda_opt_params_end_001b:
  5117 00002B0D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5118 00002B10 4889C3                  	mov rbx, rax
  5119 00002B13 58                      	pop rax
  5120 00002B14 C60004                  	mov byte [rax], T_closure
  5121 00002B17 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5122 00002B1B 48C74009[282B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_001b
  5123 00002B23 E93A020000              	jmp .L_lambda_opt_end_001b
  5124                                  .L_lambda_opt_code_001b:	; lambda-opt body
  5125 00002B28 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5126 00002B2E 7411                    	je .L_lambda_opt_arity_check_exact_001b
  5127 00002B30 0F8FE8000000            	jg .L_lambda_opt_arity_check_more_001b
  5128 00002B36 FF742410                	push qword [rsp + 8 * 2]
  5129 00002B3A 6A01                    	push 1
  5130 00002B3C E951020100              	jmp L_error_incorrect_arity_opt
  5131                                  .L_lambda_opt_arity_check_exact_001b:
  5132 00002B41 4883EC08                	sub rsp, 8
  5133 00002B45 488B442408              	mov rax, qword[rsp + 8 *1]
  5134 00002B4A 48890424                	mov qword[rsp], rax  
  5135 00002B4E 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  5136 00002B53 4889442408              	mov qword[rsp + 8 * 1], rax
  5137 00002B58 B802000000              	mov rax, 2
  5138 00002B5D 4889442410              	mov qword[rsp + 8 *2], rax
  5139 00002B62 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  5140 00002B67 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  5141 00002B6C 48B8-                   	mov rax, sob_nil
  5141 00002B6E [0100000000000000] 
  5142 00002B76 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  5143 00002B7B C8000000                	enter 0, 0
  5144                                  	; preparing a non-tail-call
  5145                                  	; preparing a non-tail-call
  5146                                  	; preparing a non-tail-call
  5147 00002B7F 488B4528                	mov rax, PARAM(1)	; param s
  5148 00002B83 50                      	push rax
  5149 00002B84 6A01                    	push 1	; arg count
  5150 00002B86 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5151 00002B8E 803805                  	cmp byte [rax], T_undefined
  5152 00002B91 0F8401010100            	je L_error_fvar_undefined
  5153 00002B97 803804                  	cmp byte [rax], T_closure
  5154 00002B9A 0F857C010100            	jne L_error_non_closure
  5155 00002BA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5156 00002BA3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5157 00002BA6 50                      	push rax
  5158                                  	; preparing a non-tail-call
  5159 00002BA7 488B4528                	mov rax, PARAM(1)	; param s
  5160 00002BAB 50                      	push rax
  5161 00002BAC 6A01                    	push 1	; arg count
  5162 00002BAE 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5163 00002BB6 803805                  	cmp byte [rax], T_undefined
  5164 00002BB9 0F84D9000100            	je L_error_fvar_undefined
  5165 00002BBF 803804                  	cmp byte [rax], T_closure
  5166 00002BC2 0F8554010100            	jne L_error_non_closure
  5167 00002BC8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5168 00002BCB FF5009                  	call SOB_CLOSURE_CODE(rax)
  5169 00002BCE 50                      	push rax
  5170 00002BCF 6A02                    	push 2	; arg count
  5171 00002BD1 488B4510                	mov rax, ENV
  5172 00002BD5 488B00                  	mov rax, qword [rax + 8 * 0]
  5173 00002BD8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5174 00002BDB 488B00                  	mov rax, qword [rax]
  5175 00002BDE 803804                  	cmp byte [rax], T_closure
  5176 00002BE1 0F8535010100            	jne L_error_non_closure
  5177 00002BE7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5178 00002BEA FF5009                  	call SOB_CLOSURE_CODE(rax)
  5179 00002BED 50                      	push rax
  5180 00002BEE 488B4520                	mov rax, PARAM(0)	; param f
  5181 00002BF2 50                      	push rax
  5182 00002BF3 6A02                    	push 2	; arg count
  5183 00002BF5 488B0425[910E0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  5184 00002BFD 803805                  	cmp byte [rax], T_undefined
  5185 00002C00 0F8492000100            	je L_error_fvar_undefined
  5186 00002C06 803804                  	cmp byte [rax], T_closure
  5187 00002C09 0F850D010100            	jne L_error_non_closure
  5188 00002C0F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5189 00002C12 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5190 00002C15 C9                      	leave
  5191 00002C16 C22000                  	ret AND_KILL_FRAME(2)
  5192 00002C19 E944010000              	jmp .L_lambda_opt_end_001b	; new closure is in rax
  5193                                  .L_lambda_opt_arity_check_more_001b:
  5194 00002C1E 488B442410              	mov rax, qword[rsp + 2 * 8]
  5195 00002C23 4889C7                  	mov rdi, rax
  5196 00002C26 49B9-                   	mov r9, sob_nil
  5196 00002C28 [0100000000000000] 
  5197 00002C30 4C8B442410              	mov r8, qword[rsp+2*8]
  5198                                  .L_lambda_opt_stack_shrink_loop_001b:
  5199 00002C35 4983F801                	cmp r8, 1
  5200 00002C39 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_001b
  5201 00002C3B 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  5202 00002C40 BF11000000              	mov rdi, 1+8+8	;for pair
  5203 00002C45 E87B010100              	call malloc	 ;to create the pair in the stack
  5204 00002C4A C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  5205 00002C4D 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  5206 00002C51 4C894809                 	mov qword[rax+1+8],r9
  5207 00002C55 4989C1                  	mov r9 , rax	 ; for the recursion 
  5208 00002C58 49FFC8                  	dec r8
  5209 00002C5B EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_001b
  5210                                  .L_lambda_opt_stack_shrink_loop_exit_001b:
  5211 00002C5D 488B442410              	mov rax, qword[rsp + 2 * 8]
  5212 00002C62 BF02000000              	mov rdi, 2
  5213 00002C67 4829F8                  	sub rax, rdi
  5214 00002C6A 4889C7                  	mov rdi, rax
  5215 00002C6D 486BC008                	imul rax,8
  5216 00002C71 4801C4                  	add rsp, rax
  5217 00002C74 4889E0                  	mov rax, rsp
  5218 00002C77 4989F8                  	mov r8, rdi
  5219 00002C7A 4D6BC008                	imul r8, 8
  5220 00002C7E 4C29C0                  	sub rax, r8
  5221 00002C81 4989C2                  	mov r10, rax	; holds the original ret in the stack
  5222 00002C84 4983C218                	add r10, 8*3
  5223 00002C88 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  5224 00002C8C 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  5225 00002C8F 4D6BC008                	imul r8,8
  5226 00002C93 4C01C0                  	add rax, r8
  5227 00002C96 4C8908                  	mov qword[rax] ,r9
  5228 00002C99 4D89D0                   	mov r8, r10
  5229 00002C9C 4983C000                	add r8, 8 * 0
  5230 00002CA0 4D8B08                  	mov r9,qword[r8]
  5231 00002CA3 4D890CF8                	mov qword [r8 + rdi * 8], r9
  5232 00002CA7 4983EA18                	sub r10, 8*3
  5233 00002CAB 48C744241002000000      	mov qword [rsp+2*8], 2
  5234 00002CB4 498B4208                	mov rax, qword[r10 + 1 * 8]
  5235 00002CB8 4889442408              	mov qword[rsp + 1*8] ,rax
  5236 00002CBD 498B02                  	mov rax, qword[r10]
  5237 00002CC0 48890424                	mov qword[rsp], rax
  5238 00002CC4 C8000000                	enter 0, 0
  5239                                  	; preparing a non-tail-call
  5240                                  	; preparing a non-tail-call
  5241                                  	; preparing a non-tail-call
  5242 00002CC8 488B4528                	mov rax, PARAM(1)	; param s
  5243 00002CCC 50                      	push rax
  5244 00002CCD 6A01                    	push 1	; arg count
  5245 00002CCF 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5246 00002CD7 803805                  	cmp byte [rax], T_undefined
  5247 00002CDA 0F84B8FF0000            	je L_error_fvar_undefined
  5248 00002CE0 803804                  	cmp byte [rax], T_closure
  5249 00002CE3 0F8533000100            	jne L_error_non_closure
  5250 00002CE9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5251 00002CEC FF5009                  	call SOB_CLOSURE_CODE(rax)
  5252 00002CEF 50                      	push rax
  5253                                  	; preparing a non-tail-call
  5254 00002CF0 488B4528                	mov rax, PARAM(1)	; param s
  5255 00002CF4 50                      	push rax
  5256 00002CF5 6A01                    	push 1	; arg count
  5257 00002CF7 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5258 00002CFF 803805                  	cmp byte [rax], T_undefined
  5259 00002D02 0F8490FF0000            	je L_error_fvar_undefined
  5260 00002D08 803804                  	cmp byte [rax], T_closure
  5261 00002D0B 0F850B000100            	jne L_error_non_closure
  5262 00002D11 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5263 00002D14 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5264 00002D17 50                      	push rax
  5265 00002D18 6A02                    	push 2	; arg count
  5266 00002D1A 488B4510                	mov rax, ENV
  5267 00002D1E 488B00                  	mov rax, qword [rax + 8 * 0]
  5268 00002D21 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5269 00002D24 488B00                  	mov rax, qword [rax]
  5270 00002D27 803804                  	cmp byte [rax], T_closure
  5271 00002D2A 0F85ECFF0000            	jne L_error_non_closure
  5272 00002D30 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5273 00002D33 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5274 00002D36 50                      	push rax
  5275 00002D37 488B4520                	mov rax, PARAM(0)	; param f
  5276 00002D3B 50                      	push rax
  5277 00002D3C 6A02                    	push 2	; arg count
  5278 00002D3E 488B0425[910E0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  5279 00002D46 803805                  	cmp byte [rax], T_undefined
  5280 00002D49 0F8449FF0000            	je L_error_fvar_undefined
  5281 00002D4F 803804                  	cmp byte [rax], T_closure
  5282 00002D52 0F85C4FF0000            	jne L_error_non_closure
  5283 00002D58 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5284 00002D5B FF5009                  	call SOB_CLOSURE_CODE(rax)
  5285 00002D5E C9                      	leave
  5286 00002D5F C22000                  	ret AND_KILL_FRAME(2)
  5287                                  .L_lambda_opt_end_001b:	; new closure is in rax
  5288 00002D62 C9                      	leave
  5289 00002D63 C21800                  	ret AND_KILL_FRAME(1)
  5290                                  .L_lambda_simple_end_00e5:	; new closure is in rax
  5291 00002D66 803804                  	cmp byte [rax], T_closure
  5292 00002D69 0F85ADFF0000            	jne L_error_non_closure
  5293 00002D6F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5294 00002D72 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5295 00002D75 48890425[F60F0000]      	mov qword [free_var_33], rax
  5296 00002D7D 48B8-                   	mov rax, sob_void
  5296 00002D7F [0000000000000000] 
  5297                                  
  5298 00002D87 4889C7                  	mov rdi, rax
  5299 00002D8A E88B020100              	call print_sexpr_if_not_void
  5300 00002D8F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5301 00002D94 E82C000100              	call malloc
  5302 00002D99 50                      	push rax
  5303 00002D9A BF00000000              	mov rdi, 8 * 0	; new rib
  5304 00002D9F E821000100              	call malloc
  5305 00002DA4 50                      	push rax
  5306 00002DA5 BF08000000              	mov rdi, 8 * 1	; extended env
  5307 00002DAA E816000100              	call malloc
  5308 00002DAF 488B7D10                	mov rdi, ENV
  5309 00002DB3 BE00000000              	mov rsi, 0
  5310 00002DB8 BA01000000              	mov rdx, 1
  5311                                  .L_lambda_opt_env_loop_001c:	; ext_env[i + 1] <-- env[i]
  5312 00002DBD 4883FE00                	cmp rsi, 0
  5313 00002DC1 7410                    	je .L_lambda_opt_env_end_001c
  5314 00002DC3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5315 00002DC7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5316 00002DCB 48FFC6                  	inc rsi
  5317 00002DCE 48FFC2                  	inc rdx
  5318 00002DD1 EBEA                    	jmp .L_lambda_opt_env_loop_001c
  5319                                  .L_lambda_opt_env_end_001c:
  5320 00002DD3 5B                      	pop rbx
  5321 00002DD4 BE00000000              	mov rsi, 0
  5322                                  .L_lambda_opt_params_loop_001c:	; copy params
  5323 00002DD9 4883FE00                	cmp rsi, 0
  5324 00002DDD 740E                    	je .L_lambda_opt_params_end_001c
  5325 00002DDF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5326 00002DE4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5327 00002DE8 48FFC6                  	inc rsi
  5328 00002DEB EBEC                    	jmp .L_lambda_opt_params_loop_001c
  5329                                  .L_lambda_opt_params_end_001c:
  5330 00002DED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5331 00002DF0 4889C3                  	mov rbx, rax
  5332 00002DF3 58                      	pop rax
  5333 00002DF4 C60004                  	mov byte [rax], T_closure
  5334 00002DF7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5335 00002DFB 48C74009[082E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_001c
  5336 00002E03 E9E6060000              	jmp .L_lambda_opt_end_001c
  5337                                  .L_lambda_opt_code_001c:	; lambda-opt body
  5338 00002E08 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5339 00002E0E 7411                    	je .L_lambda_opt_arity_check_exact_001c
  5340 00002E10 0F8F3E030000            	jg .L_lambda_opt_arity_check_more_001c
  5341 00002E16 FF742410                	push qword [rsp + 8 * 2]
  5342 00002E1A 6A01                    	push 1
  5343 00002E1C E971FF0000              	jmp L_error_incorrect_arity_opt
  5344                                  .L_lambda_opt_arity_check_exact_001c:
  5345 00002E21 4883EC08                	sub rsp, 8
  5346 00002E25 488B442408              	mov rax, qword[rsp + 8 *1]
  5347 00002E2A 48890424                	mov qword[rsp], rax  
  5348 00002E2E 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  5349 00002E33 4889442408              	mov qword[rsp + 8 * 1], rax
  5350 00002E38 B802000000              	mov rax, 2
  5351 00002E3D 4889442410              	mov qword[rsp + 8 *2], rax
  5352 00002E42 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  5353 00002E47 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  5354 00002E4C 48B8-                   	mov rax, sob_nil
  5354 00002E4E [0100000000000000] 
  5355 00002E56 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  5356 00002E5B C8000000                	enter 0, 0
  5357                                  	; preparing a non-tail-call
  5358 00002E5F 48B8-                   	mov rax, L_constants + 1993
  5358 00002E61 [C907000000000000] 
  5359 00002E69 50                      	push rax
  5360 00002E6A 6A01                    	push 1	; arg count
  5361 00002E6C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5362 00002E71 E84FFF0000              	call malloc
  5363 00002E76 50                      	push rax
  5364 00002E77 BF10000000              	mov rdi, 8 * 2	; new rib
  5365 00002E7C E844FF0000              	call malloc
  5366 00002E81 50                      	push rax
  5367 00002E82 BF10000000              	mov rdi, 8 * 2	; extended env
  5368 00002E87 E839FF0000              	call malloc
  5369 00002E8C 488B7D10                	mov rdi, ENV
  5370 00002E90 BE00000000              	mov rsi, 0
  5371 00002E95 BA01000000              	mov rdx, 1
  5372                                  .L_lambda_simple_env_loop_00e9:	; ext_env[i + 1] <-- env[i]
  5373 00002E9A 4883FE01                	cmp rsi, 1
  5374 00002E9E 7410                    	je .L_lambda_simple_env_end_00e9
  5375 00002EA0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5376 00002EA4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5377 00002EA8 48FFC6                  	inc rsi
  5378 00002EAB 48FFC2                  	inc rdx
  5379 00002EAE EBEA                    	jmp .L_lambda_simple_env_loop_00e9
  5380                                  .L_lambda_simple_env_end_00e9:
  5381 00002EB0 5B                      	pop rbx
  5382 00002EB1 BE00000000              	mov rsi, 0
  5383                                  .L_lambda_simple_params_loop_00e9:	; copy params
  5384 00002EB6 4883FE02                	cmp rsi, 2
  5385 00002EBA 740E                    	je .L_lambda_simple_params_end_00e9
  5386 00002EBC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5387 00002EC1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5388 00002EC5 48FFC6                  	inc rsi
  5389 00002EC8 EBEC                    	jmp .L_lambda_simple_params_loop_00e9
  5390                                  .L_lambda_simple_params_end_00e9:
  5391 00002ECA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5392 00002ECD 4889C3                  	mov rbx, rax
  5393 00002ED0 58                      	pop rax
  5394 00002ED1 C60004                  	mov byte [rax], T_closure
  5395 00002ED4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5396 00002ED8 48C74009[E52E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00e9
  5397 00002EE0 E957020000              	jmp .L_lambda_simple_end_00e9
  5398                                  .L_lambda_simple_code_00e9:	; lambda-simple body
  5399 00002EE5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5400 00002EEB 740B                    	je .L_lambda_simple_arity_check_ok_00e9
  5401 00002EED FF742410                	push qword [rsp + 8 * 2]
  5402 00002EF1 6A01                    	push 1
  5403 00002EF3 E986FE0000              	jmp L_error_incorrect_arity_simple
  5404                                  .L_lambda_simple_arity_check_ok_00e9:
  5405 00002EF8 C8000000                	enter 0, 0
  5406 00002EFC 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  5407 00002F00 488903                  	mov qword [rbx], rax
  5408                                  
  5409 00002F03 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5410 00002F08 E8B8FE0000              	call malloc
  5411 00002F0D 50                      	push rax
  5412 00002F0E BF08000000              	mov rdi, 8 * 1	; new rib
  5413 00002F13 E8ADFE0000              	call malloc
  5414 00002F18 50                      	push rax
  5415 00002F19 BF18000000              	mov rdi, 8 * 3	; extended env
  5416 00002F1E E8A2FE0000              	call malloc
  5417 00002F23 488B7D10                	mov rdi, ENV
  5418 00002F27 BE00000000              	mov rsi, 0
  5419 00002F2C BA01000000              	mov rdx, 1
  5420                                  .L_lambda_simple_env_loop_00ea:	; ext_env[i + 1] <-- env[i]
  5421 00002F31 4883FE02                	cmp rsi, 2
  5422 00002F35 7410                    	je .L_lambda_simple_env_end_00ea
  5423 00002F37 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5424 00002F3B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5425 00002F3F 48FFC6                  	inc rsi
  5426 00002F42 48FFC2                  	inc rdx
  5427 00002F45 EBEA                    	jmp .L_lambda_simple_env_loop_00ea
  5428                                  .L_lambda_simple_env_end_00ea:
  5429 00002F47 5B                      	pop rbx
  5430 00002F48 BE00000000              	mov rsi, 0
  5431                                  .L_lambda_simple_params_loop_00ea:	; copy params
  5432 00002F4D 4883FE01                	cmp rsi, 1
  5433 00002F51 740E                    	je .L_lambda_simple_params_end_00ea
  5434 00002F53 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5435 00002F58 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5436 00002F5C 48FFC6                  	inc rsi
  5437 00002F5F EBEC                    	jmp .L_lambda_simple_params_loop_00ea
  5438                                  .L_lambda_simple_params_end_00ea:
  5439 00002F61 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5440 00002F64 4889C3                  	mov rbx, rax
  5441 00002F67 58                      	pop rax
  5442 00002F68 C60004                  	mov byte [rax], T_closure
  5443 00002F6B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5444 00002F6F 48C74009[7C2F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ea
  5445 00002F77 E945010000              	jmp .L_lambda_simple_end_00ea
  5446                                  .L_lambda_simple_code_00ea:	; lambda-simple body
  5447 00002F7C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5448 00002F82 740B                    	je .L_lambda_simple_arity_check_ok_00ea
  5449 00002F84 FF742410                	push qword [rsp + 8 * 2]
  5450 00002F88 6A01                    	push 1
  5451 00002F8A E9EFFD0000              	jmp L_error_incorrect_arity_simple
  5452                                  .L_lambda_simple_arity_check_ok_00ea:
  5453 00002F8F C8000000                	enter 0, 0
  5454                                  	; preparing a non-tail-call
  5455                                  	; preparing a non-tail-call
  5456 00002F93 488B4520                	mov rax, PARAM(0)	; param s
  5457 00002F97 50                      	push rax
  5458 00002F98 6A01                    	push 1	; arg count
  5459 00002F9A 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5460 00002FA2 803805                  	cmp byte [rax], T_undefined
  5461 00002FA5 0F84EDFC0000            	je L_error_fvar_undefined
  5462 00002FAB 803804                  	cmp byte [rax], T_closure
  5463 00002FAE 0F8568FD0000            	jne L_error_non_closure
  5464 00002FB4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5465 00002FB7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5466 00002FBA 50                      	push rax
  5467 00002FBB 6A01                    	push 1	; arg count
  5468 00002FBD 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  5469 00002FC5 803805                  	cmp byte [rax], T_undefined
  5470 00002FC8 0F84CAFC0000            	je L_error_fvar_undefined
  5471 00002FCE 803804                  	cmp byte [rax], T_closure
  5472 00002FD1 0F8545FD0000            	jne L_error_non_closure
  5473 00002FD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5474 00002FDA FF5009                  	call SOB_CLOSURE_CODE(rax)
  5475 00002FDD 483D[02000000]          	cmp rax, sob_boolean_false
  5476 00002FE3 0F84CA000000            	je .L_if_else_009d
  5477                                  	; preparing a non-tail-call
  5478                                  	; preparing a non-tail-call
  5479 00002FE9 488B4520                	mov rax, PARAM(0)	; param s
  5480 00002FED 50                      	push rax
  5481 00002FEE 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5482 00002FF6 803805                  	cmp byte [rax], T_undefined
  5483 00002FF9 0F8499FC0000            	je L_error_fvar_undefined
  5484 00002FFF 50                      	push rax
  5485 00003000 6A02                    	push 2	; arg count
  5486 00003002 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  5487 0000300A 803805                  	cmp byte [rax], T_undefined
  5488 0000300D 0F8485FC0000            	je L_error_fvar_undefined
  5489 00003013 803804                  	cmp byte [rax], T_closure
  5490 00003016 0F8500FD0000            	jne L_error_non_closure
  5491 0000301C FF7001                  	push SOB_CLOSURE_ENV(rax)
  5492 0000301F FF5009                  	call SOB_CLOSURE_CODE(rax)
  5493 00003022 50                      	push rax
  5494 00003023 488B4510                	mov rax, ENV
  5495 00003027 488B4008                	mov rax, qword [rax + 8 * 1]
  5496 0000302B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  5497 0000302E 50                      	push rax
  5498 0000302F 6A02                    	push 2	; arg count
  5499 00003031 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  5500 00003039 803805                  	cmp byte [rax], T_undefined
  5501 0000303C 0F8456FC0000            	je L_error_fvar_undefined
  5502 00003042 803804                  	cmp byte [rax], T_closure
  5503 00003045 0F85D1FC0000            	jne L_error_non_closure
  5504 0000304B FF7001                  	push SOB_CLOSURE_ENV(rax)
  5505 0000304E FF5009                  	call SOB_CLOSURE_CODE(rax)
  5506 00003051 483D[02000000]          	cmp rax, sob_boolean_false
  5507 00003057 7558                    	jne .L_or_end_0015
  5508                                  	; preparing a non-tail-call
  5509                                  	; preparing a non-tail-call
  5510 00003059 488B4520                	mov rax, PARAM(0)	; param s
  5511 0000305D 50                      	push rax
  5512 0000305E 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5513 00003066 803805                  	cmp byte [rax], T_undefined
  5514 00003069 0F8429FC0000            	je L_error_fvar_undefined
  5515 0000306F 50                      	push rax
  5516 00003070 6A02                    	push 2	; arg count
  5517 00003072 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  5518 0000307A 803805                  	cmp byte [rax], T_undefined
  5519 0000307D 0F8415FC0000            	je L_error_fvar_undefined
  5520 00003083 803804                  	cmp byte [rax], T_closure
  5521 00003086 0F8590FC0000            	jne L_error_non_closure
  5522 0000308C FF7001                  	push SOB_CLOSURE_ENV(rax)
  5523 0000308F FF5009                  	call SOB_CLOSURE_CODE(rax)
  5524 00003092 50                      	push rax
  5525 00003093 6A01                    	push 1	; arg count
  5526 00003095 488B4510                	mov rax, ENV
  5527 00003099 488B00                  	mov rax, qword [rax + 8 * 0]
  5528 0000309C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  5529 0000309F 488B00                  	mov rax, qword [rax]
  5530 000030A2 803804                  	cmp byte [rax], T_closure
  5531 000030A5 0F8571FC0000            	jne L_error_non_closure
  5532 000030AB FF7001                  	push SOB_CLOSURE_ENV(rax)
  5533 000030AE FF5009                  	call SOB_CLOSURE_CODE(rax)
  5534                                  .L_or_end_0015:
  5535 000030B1 EB0A                    	jmp .L_if_end_009d
  5536                                  .L_if_else_009d:
  5537 000030B3 48B8-                   	mov rax, L_constants + 2
  5537 000030B5 [0200000000000000] 
  5538                                  .L_if_end_009d:
  5539 000030BD C9                      	leave
  5540 000030BE C21800                  	ret AND_KILL_FRAME(1)
  5541                                  .L_lambda_simple_end_00ea:	; new closure is in rax
  5542 000030C1 50                      	push rax
  5543 000030C2 488B4520                	mov rax, PARAM(0)	; param loop
  5544 000030C6 8F00                    	pop qword [rax]
  5545 000030C8 48B8-                   	mov rax, sob_void
  5545 000030CA [0000000000000000] 
  5546                                  
  5547                                  	; preparing a non-tail-call
  5548 000030D2 488B4510                	mov rax, ENV
  5549 000030D6 488B00                  	mov rax, qword [rax + 8 * 0]
  5550 000030D9 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  5551 000030DD 50                      	push rax
  5552 000030DE 6A01                    	push 1	; arg count
  5553 000030E0 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  5554 000030E8 803805                  	cmp byte [rax], T_undefined
  5555 000030EB 0F84A7FB0000            	je L_error_fvar_undefined
  5556 000030F1 803804                  	cmp byte [rax], T_closure
  5557 000030F4 0F8522FC0000            	jne L_error_non_closure
  5558 000030FA FF7001                  	push SOB_CLOSURE_ENV(rax)
  5559 000030FD FF5009                  	call SOB_CLOSURE_CODE(rax)
  5560 00003100 483D[02000000]          	cmp rax, sob_boolean_false
  5561 00003106 7426                    	je .L_if_else_009e
  5562                                  	; preparing a non-tail-call
  5563 00003108 488B4510                	mov rax, ENV
  5564 0000310C 488B00                  	mov rax, qword [rax + 8 * 0]
  5565 0000310F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  5566 00003113 50                      	push rax
  5567 00003114 6A01                    	push 1	; arg count
  5568 00003116 488B4520                	mov rax, PARAM(0)	; param loop
  5569 0000311A 488B00                  	mov rax, qword [rax]
  5570 0000311D 803804                  	cmp byte [rax], T_closure
  5571 00003120 0F85F6FB0000            	jne L_error_non_closure
  5572 00003126 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5573 00003129 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5574 0000312C EB0A                    	jmp .L_if_end_009e
  5575                                  .L_if_else_009e:
  5576 0000312E 48B8-                   	mov rax, L_constants + 2
  5576 00003130 [0200000000000000] 
  5577                                  .L_if_end_009e:
  5578 00003138 C9                      	leave
  5579 00003139 C21800                  	ret AND_KILL_FRAME(1)
  5580                                  .L_lambda_simple_end_00e9:	; new closure is in rax
  5581 0000313C 803804                  	cmp byte [rax], T_closure
  5582 0000313F 0F85D7FB0000            	jne L_error_non_closure
  5583 00003145 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5584 00003148 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5585 0000314B C9                      	leave
  5586 0000314C C22000                  	ret AND_KILL_FRAME(2)
  5587 0000314F E99A030000              	jmp .L_lambda_opt_end_001c	; new closure is in rax
  5588                                  .L_lambda_opt_arity_check_more_001c:
  5589 00003154 488B442410              	mov rax, qword[rsp + 2 * 8]
  5590 00003159 4889C7                  	mov rdi, rax
  5591 0000315C 49B9-                   	mov r9, sob_nil
  5591 0000315E [0100000000000000] 
  5592 00003166 4C8B442410              	mov r8, qword[rsp+2*8]
  5593                                  .L_lambda_opt_stack_shrink_loop_001c:
  5594 0000316B 4983F801                	cmp r8, 1
  5595 0000316F 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_001c
  5596 00003171 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  5597 00003176 BF11000000              	mov rdi, 1+8+8	;for pair
  5598 0000317B E845FC0000              	call malloc	 ;to create the pair in the stack
  5599 00003180 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  5600 00003183 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  5601 00003187 4C894809                 	mov qword[rax+1+8],r9
  5602 0000318B 4989C1                  	mov r9 , rax	 ; for the recursion 
  5603 0000318E 49FFC8                  	dec r8
  5604 00003191 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_001c
  5605                                  .L_lambda_opt_stack_shrink_loop_exit_001c:
  5606 00003193 488B442410              	mov rax, qword[rsp + 2 * 8]
  5607 00003198 BF02000000              	mov rdi, 2
  5608 0000319D 4829F8                  	sub rax, rdi
  5609 000031A0 4889C7                  	mov rdi, rax
  5610 000031A3 486BC008                	imul rax,8
  5611 000031A7 4801C4                  	add rsp, rax
  5612 000031AA 4889E0                  	mov rax, rsp
  5613 000031AD 4989F8                  	mov r8, rdi
  5614 000031B0 4D6BC008                	imul r8, 8
  5615 000031B4 4C29C0                  	sub rax, r8
  5616 000031B7 4989C2                  	mov r10, rax	; holds the original ret in the stack
  5617 000031BA 4983C218                	add r10, 8*3
  5618 000031BE 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  5619 000031C2 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  5620 000031C5 4D6BC008                	imul r8,8
  5621 000031C9 4C01C0                  	add rax, r8
  5622 000031CC 4C8908                  	mov qword[rax] ,r9
  5623 000031CF 4D89D0                   	mov r8, r10
  5624 000031D2 4983C000                	add r8, 8 * 0
  5625 000031D6 4D8B08                  	mov r9,qword[r8]
  5626 000031D9 4D890CF8                	mov qword [r8 + rdi * 8], r9
  5627 000031DD 4983EA18                	sub r10, 8*3
  5628 000031E1 48C744241002000000      	mov qword [rsp+2*8], 2
  5629 000031EA 498B4208                	mov rax, qword[r10 + 1 * 8]
  5630 000031EE 4889442408              	mov qword[rsp + 1*8] ,rax
  5631 000031F3 498B02                  	mov rax, qword[r10]
  5632 000031F6 48890424                	mov qword[rsp], rax
  5633 000031FA C8000000                	enter 0, 0
  5634                                  	; preparing a non-tail-call
  5635 000031FE 48B8-                   	mov rax, L_constants + 1993
  5635 00003200 [C907000000000000] 
  5636 00003208 50                      	push rax
  5637 00003209 6A01                    	push 1	; arg count
  5638 0000320B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5639 00003210 E8B0FB0000              	call malloc
  5640 00003215 50                      	push rax
  5641 00003216 BF10000000              	mov rdi, 8 * 2	; new rib
  5642 0000321B E8A5FB0000              	call malloc
  5643 00003220 50                      	push rax
  5644 00003221 BF10000000              	mov rdi, 8 * 2	; extended env
  5645 00003226 E89AFB0000              	call malloc
  5646 0000322B 488B7D10                	mov rdi, ENV
  5647 0000322F BE00000000              	mov rsi, 0
  5648 00003234 BA01000000              	mov rdx, 1
  5649                                  .L_lambda_simple_env_loop_00e7:	; ext_env[i + 1] <-- env[i]
  5650 00003239 4883FE01                	cmp rsi, 1
  5651 0000323D 7410                    	je .L_lambda_simple_env_end_00e7
  5652 0000323F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5653 00003243 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5654 00003247 48FFC6                  	inc rsi
  5655 0000324A 48FFC2                  	inc rdx
  5656 0000324D EBEA                    	jmp .L_lambda_simple_env_loop_00e7
  5657                                  .L_lambda_simple_env_end_00e7:
  5658 0000324F 5B                      	pop rbx
  5659 00003250 BE00000000              	mov rsi, 0
  5660                                  .L_lambda_simple_params_loop_00e7:	; copy params
  5661 00003255 4883FE02                	cmp rsi, 2
  5662 00003259 740E                    	je .L_lambda_simple_params_end_00e7
  5663 0000325B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5664 00003260 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5665 00003264 48FFC6                  	inc rsi
  5666 00003267 EBEC                    	jmp .L_lambda_simple_params_loop_00e7
  5667                                  .L_lambda_simple_params_end_00e7:
  5668 00003269 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5669 0000326C 4889C3                  	mov rbx, rax
  5670 0000326F 58                      	pop rax
  5671 00003270 C60004                  	mov byte [rax], T_closure
  5672 00003273 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5673 00003277 48C74009[84320000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00e7
  5674 0000327F E957020000              	jmp .L_lambda_simple_end_00e7
  5675                                  .L_lambda_simple_code_00e7:	; lambda-simple body
  5676 00003284 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5677 0000328A 740B                    	je .L_lambda_simple_arity_check_ok_00e7
  5678 0000328C FF742410                	push qword [rsp + 8 * 2]
  5679 00003290 6A01                    	push 1
  5680 00003292 E9E7FA0000              	jmp L_error_incorrect_arity_simple
  5681                                  .L_lambda_simple_arity_check_ok_00e7:
  5682 00003297 C8000000                	enter 0, 0
  5683 0000329B 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  5684 0000329F 488903                  	mov qword [rbx], rax
  5685                                  
  5686 000032A2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5687 000032A7 E819FB0000              	call malloc
  5688 000032AC 50                      	push rax
  5689 000032AD BF08000000              	mov rdi, 8 * 1	; new rib
  5690 000032B2 E80EFB0000              	call malloc
  5691 000032B7 50                      	push rax
  5692 000032B8 BF18000000              	mov rdi, 8 * 3	; extended env
  5693 000032BD E803FB0000              	call malloc
  5694 000032C2 488B7D10                	mov rdi, ENV
  5695 000032C6 BE00000000              	mov rsi, 0
  5696 000032CB BA01000000              	mov rdx, 1
  5697                                  .L_lambda_simple_env_loop_00e8:	; ext_env[i + 1] <-- env[i]
  5698 000032D0 4883FE02                	cmp rsi, 2
  5699 000032D4 7410                    	je .L_lambda_simple_env_end_00e8
  5700 000032D6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5701 000032DA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5702 000032DE 48FFC6                  	inc rsi
  5703 000032E1 48FFC2                  	inc rdx
  5704 000032E4 EBEA                    	jmp .L_lambda_simple_env_loop_00e8
  5705                                  .L_lambda_simple_env_end_00e8:
  5706 000032E6 5B                      	pop rbx
  5707 000032E7 BE00000000              	mov rsi, 0
  5708                                  .L_lambda_simple_params_loop_00e8:	; copy params
  5709 000032EC 4883FE01                	cmp rsi, 1
  5710 000032F0 740E                    	je .L_lambda_simple_params_end_00e8
  5711 000032F2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5712 000032F7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5713 000032FB 48FFC6                  	inc rsi
  5714 000032FE EBEC                    	jmp .L_lambda_simple_params_loop_00e8
  5715                                  .L_lambda_simple_params_end_00e8:
  5716 00003300 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5717 00003303 4889C3                  	mov rbx, rax
  5718 00003306 58                      	pop rax
  5719 00003307 C60004                  	mov byte [rax], T_closure
  5720 0000330A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5721 0000330E 48C74009[1B330000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00e8
  5722 00003316 E945010000              	jmp .L_lambda_simple_end_00e8
  5723                                  .L_lambda_simple_code_00e8:	; lambda-simple body
  5724 0000331B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5725 00003321 740B                    	je .L_lambda_simple_arity_check_ok_00e8
  5726 00003323 FF742410                	push qword [rsp + 8 * 2]
  5727 00003327 6A01                    	push 1
  5728 00003329 E950FA0000              	jmp L_error_incorrect_arity_simple
  5729                                  .L_lambda_simple_arity_check_ok_00e8:
  5730 0000332E C8000000                	enter 0, 0
  5731                                  	; preparing a non-tail-call
  5732                                  	; preparing a non-tail-call
  5733 00003332 488B4520                	mov rax, PARAM(0)	; param s
  5734 00003336 50                      	push rax
  5735 00003337 6A01                    	push 1	; arg count
  5736 00003339 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5737 00003341 803805                  	cmp byte [rax], T_undefined
  5738 00003344 0F844EF90000            	je L_error_fvar_undefined
  5739 0000334A 803804                  	cmp byte [rax], T_closure
  5740 0000334D 0F85C9F90000            	jne L_error_non_closure
  5741 00003353 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5742 00003356 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5743 00003359 50                      	push rax
  5744 0000335A 6A01                    	push 1	; arg count
  5745 0000335C 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  5746 00003364 803805                  	cmp byte [rax], T_undefined
  5747 00003367 0F842BF90000            	je L_error_fvar_undefined
  5748 0000336D 803804                  	cmp byte [rax], T_closure
  5749 00003370 0F85A6F90000            	jne L_error_non_closure
  5750 00003376 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5751 00003379 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5752 0000337C 483D[02000000]          	cmp rax, sob_boolean_false
  5753 00003382 0F84CA000000            	je .L_if_else_009b
  5754                                  	; preparing a non-tail-call
  5755                                  	; preparing a non-tail-call
  5756 00003388 488B4520                	mov rax, PARAM(0)	; param s
  5757 0000338C 50                      	push rax
  5758 0000338D 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5759 00003395 803805                  	cmp byte [rax], T_undefined
  5760 00003398 0F84FAF80000            	je L_error_fvar_undefined
  5761 0000339E 50                      	push rax
  5762 0000339F 6A02                    	push 2	; arg count
  5763 000033A1 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  5764 000033A9 803805                  	cmp byte [rax], T_undefined
  5765 000033AC 0F84E6F80000            	je L_error_fvar_undefined
  5766 000033B2 803804                  	cmp byte [rax], T_closure
  5767 000033B5 0F8561F90000            	jne L_error_non_closure
  5768 000033BB FF7001                  	push SOB_CLOSURE_ENV(rax)
  5769 000033BE FF5009                  	call SOB_CLOSURE_CODE(rax)
  5770 000033C1 50                      	push rax
  5771 000033C2 488B4510                	mov rax, ENV
  5772 000033C6 488B4008                	mov rax, qword [rax + 8 * 1]
  5773 000033CA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  5774 000033CD 50                      	push rax
  5775 000033CE 6A02                    	push 2	; arg count
  5776 000033D0 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  5777 000033D8 803805                  	cmp byte [rax], T_undefined
  5778 000033DB 0F84B7F80000            	je L_error_fvar_undefined
  5779 000033E1 803804                  	cmp byte [rax], T_closure
  5780 000033E4 0F8532F90000            	jne L_error_non_closure
  5781 000033EA FF7001                  	push SOB_CLOSURE_ENV(rax)
  5782 000033ED FF5009                  	call SOB_CLOSURE_CODE(rax)
  5783 000033F0 483D[02000000]          	cmp rax, sob_boolean_false
  5784 000033F6 7558                    	jne .L_or_end_0014
  5785                                  	; preparing a non-tail-call
  5786                                  	; preparing a non-tail-call
  5787 000033F8 488B4520                	mov rax, PARAM(0)	; param s
  5788 000033FC 50                      	push rax
  5789 000033FD 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5790 00003405 803805                  	cmp byte [rax], T_undefined
  5791 00003408 0F848AF80000            	je L_error_fvar_undefined
  5792 0000340E 50                      	push rax
  5793 0000340F 6A02                    	push 2	; arg count
  5794 00003411 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  5795 00003419 803805                  	cmp byte [rax], T_undefined
  5796 0000341C 0F8476F80000            	je L_error_fvar_undefined
  5797 00003422 803804                  	cmp byte [rax], T_closure
  5798 00003425 0F85F1F80000            	jne L_error_non_closure
  5799 0000342B FF7001                  	push SOB_CLOSURE_ENV(rax)
  5800 0000342E FF5009                  	call SOB_CLOSURE_CODE(rax)
  5801 00003431 50                      	push rax
  5802 00003432 6A01                    	push 1	; arg count
  5803 00003434 488B4510                	mov rax, ENV
  5804 00003438 488B00                  	mov rax, qword [rax + 8 * 0]
  5805 0000343B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  5806 0000343E 488B00                  	mov rax, qword [rax]
  5807 00003441 803804                  	cmp byte [rax], T_closure
  5808 00003444 0F85D2F80000            	jne L_error_non_closure
  5809 0000344A FF7001                  	push SOB_CLOSURE_ENV(rax)
  5810 0000344D FF5009                  	call SOB_CLOSURE_CODE(rax)
  5811                                  .L_or_end_0014:
  5812 00003450 EB0A                    	jmp .L_if_end_009b
  5813                                  .L_if_else_009b:
  5814 00003452 48B8-                   	mov rax, L_constants + 2
  5814 00003454 [0200000000000000] 
  5815                                  .L_if_end_009b:
  5816 0000345C C9                      	leave
  5817 0000345D C21800                  	ret AND_KILL_FRAME(1)
  5818                                  .L_lambda_simple_end_00e8:	; new closure is in rax
  5819 00003460 50                      	push rax
  5820 00003461 488B4520                	mov rax, PARAM(0)	; param loop
  5821 00003465 8F00                    	pop qword [rax]
  5822 00003467 48B8-                   	mov rax, sob_void
  5822 00003469 [0000000000000000] 
  5823                                  
  5824                                  	; preparing a non-tail-call
  5825 00003471 488B4510                	mov rax, ENV
  5826 00003475 488B00                  	mov rax, qword [rax + 8 * 0]
  5827 00003478 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  5828 0000347C 50                      	push rax
  5829 0000347D 6A01                    	push 1	; arg count
  5830 0000347F 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  5831 00003487 803805                  	cmp byte [rax], T_undefined
  5832 0000348A 0F8408F80000            	je L_error_fvar_undefined
  5833 00003490 803804                  	cmp byte [rax], T_closure
  5834 00003493 0F8583F80000            	jne L_error_non_closure
  5835 00003499 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5836 0000349C FF5009                  	call SOB_CLOSURE_CODE(rax)
  5837 0000349F 483D[02000000]          	cmp rax, sob_boolean_false
  5838 000034A5 7426                    	je .L_if_else_009c
  5839                                  	; preparing a non-tail-call
  5840 000034A7 488B4510                	mov rax, ENV
  5841 000034AB 488B00                  	mov rax, qword [rax + 8 * 0]
  5842 000034AE 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  5843 000034B2 50                      	push rax
  5844 000034B3 6A01                    	push 1	; arg count
  5845 000034B5 488B4520                	mov rax, PARAM(0)	; param loop
  5846 000034B9 488B00                  	mov rax, qword [rax]
  5847 000034BC 803804                  	cmp byte [rax], T_closure
  5848 000034BF 0F8557F80000            	jne L_error_non_closure
  5849 000034C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5850 000034C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5851 000034CB EB0A                    	jmp .L_if_end_009c
  5852                                  .L_if_else_009c:
  5853 000034CD 48B8-                   	mov rax, L_constants + 2
  5853 000034CF [0200000000000000] 
  5854                                  .L_if_end_009c:
  5855 000034D7 C9                      	leave
  5856 000034D8 C21800                  	ret AND_KILL_FRAME(1)
  5857                                  .L_lambda_simple_end_00e7:	; new closure is in rax
  5858 000034DB 803804                  	cmp byte [rax], T_closure
  5859 000034DE 0F8538F80000            	jne L_error_non_closure
  5860 000034E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5861 000034E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5862 000034EA C9                      	leave
  5863 000034EB C22000                  	ret AND_KILL_FRAME(2)
  5864                                  .L_lambda_opt_end_001c:	; new closure is in rax
  5865 000034EE 48890425[13150000]      	mov qword [free_var_110], rax
  5866 000034F6 48B8-                   	mov rax, sob_void
  5866 000034F8 [0000000000000000] 
  5867                                  
  5868 00003500 4889C7                  	mov rdi, rax
  5869 00003503 E812FB0000              	call print_sexpr_if_not_void
  5870 00003508 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5871 0000350D E8B3F80000              	call malloc
  5872 00003512 50                      	push rax
  5873 00003513 BF00000000              	mov rdi, 8 * 0	; new rib
  5874 00003518 E8A8F80000              	call malloc
  5875 0000351D 50                      	push rax
  5876 0000351E BF08000000              	mov rdi, 8 * 1	; extended env
  5877 00003523 E89DF80000              	call malloc
  5878 00003528 488B7D10                	mov rdi, ENV
  5879 0000352C BE00000000              	mov rsi, 0
  5880 00003531 BA01000000              	mov rdx, 1
  5881                                  .L_lambda_opt_env_loop_001d:	; ext_env[i + 1] <-- env[i]
  5882 00003536 4883FE00                	cmp rsi, 0
  5883 0000353A 7410                    	je .L_lambda_opt_env_end_001d
  5884 0000353C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5885 00003540 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5886 00003544 48FFC6                  	inc rsi
  5887 00003547 48FFC2                  	inc rdx
  5888 0000354A EBEA                    	jmp .L_lambda_opt_env_loop_001d
  5889                                  .L_lambda_opt_env_end_001d:
  5890 0000354C 5B                      	pop rbx
  5891 0000354D BE00000000              	mov rsi, 0
  5892                                  .L_lambda_opt_params_loop_001d:	; copy params
  5893 00003552 4883FE00                	cmp rsi, 0
  5894 00003556 740E                    	je .L_lambda_opt_params_end_001d
  5895 00003558 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5896 0000355D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5897 00003561 48FFC6                  	inc rsi
  5898 00003564 EBEC                    	jmp .L_lambda_opt_params_loop_001d
  5899                                  .L_lambda_opt_params_end_001d:
  5900 00003566 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5901 00003569 4889C3                  	mov rbx, rax
  5902 0000356C 58                      	pop rax
  5903 0000356D C60004                  	mov byte [rax], T_closure
  5904 00003570 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5905 00003574 48C74009[81350000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_001d
  5906 0000357C E952070000              	jmp .L_lambda_opt_end_001d
  5907                                  .L_lambda_opt_code_001d:	; lambda-opt body
  5908 00003581 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5909 00003587 7411                    	je .L_lambda_opt_arity_check_exact_001d
  5910 00003589 0F8F74030000            	jg .L_lambda_opt_arity_check_more_001d
  5911 0000358F FF742410                	push qword [rsp + 8 * 2]
  5912 00003593 6A01                    	push 1
  5913 00003595 E9F8F70000              	jmp L_error_incorrect_arity_opt
  5914                                  .L_lambda_opt_arity_check_exact_001d:
  5915 0000359A 4883EC08                	sub rsp, 8
  5916 0000359E 488B442408              	mov rax, qword[rsp + 8 *1]
  5917 000035A3 48890424                	mov qword[rsp], rax  
  5918 000035A7 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  5919 000035AC 4889442408              	mov qword[rsp + 8 * 1], rax
  5920 000035B1 B802000000              	mov rax, 2
  5921 000035B6 4889442410              	mov qword[rsp + 8 *2], rax
  5922 000035BB 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  5923 000035C0 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  5924 000035C5 48B8-                   	mov rax, sob_nil
  5924 000035C7 [0100000000000000] 
  5925 000035CF 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  5926 000035D4 C8000000                	enter 0, 0
  5927                                  	; preparing a non-tail-call
  5928 000035D8 48B8-                   	mov rax, L_constants + 1993
  5928 000035DA [C907000000000000] 
  5929 000035E2 50                      	push rax
  5930 000035E3 6A01                    	push 1	; arg count
  5931 000035E5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5932 000035EA E8D6F70000              	call malloc
  5933 000035EF 50                      	push rax
  5934 000035F0 BF10000000              	mov rdi, 8 * 2	; new rib
  5935 000035F5 E8CBF70000              	call malloc
  5936 000035FA 50                      	push rax
  5937 000035FB BF10000000              	mov rdi, 8 * 2	; extended env
  5938 00003600 E8C0F70000              	call malloc
  5939 00003605 488B7D10                	mov rdi, ENV
  5940 00003609 BE00000000              	mov rsi, 0
  5941 0000360E BA01000000              	mov rdx, 1
  5942                                  .L_lambda_simple_env_loop_00ed:	; ext_env[i + 1] <-- env[i]
  5943 00003613 4883FE01                	cmp rsi, 1
  5944 00003617 7410                    	je .L_lambda_simple_env_end_00ed
  5945 00003619 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5946 0000361D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5947 00003621 48FFC6                  	inc rsi
  5948 00003624 48FFC2                  	inc rdx
  5949 00003627 EBEA                    	jmp .L_lambda_simple_env_loop_00ed
  5950                                  .L_lambda_simple_env_end_00ed:
  5951 00003629 5B                      	pop rbx
  5952 0000362A BE00000000              	mov rsi, 0
  5953                                  .L_lambda_simple_params_loop_00ed:	; copy params
  5954 0000362F 4883FE02                	cmp rsi, 2
  5955 00003633 740E                    	je .L_lambda_simple_params_end_00ed
  5956 00003635 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5957 0000363A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5958 0000363E 48FFC6                  	inc rsi
  5959 00003641 EBEC                    	jmp .L_lambda_simple_params_loop_00ed
  5960                                  .L_lambda_simple_params_end_00ed:
  5961 00003643 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5962 00003646 4889C3                  	mov rbx, rax
  5963 00003649 58                      	pop rax
  5964 0000364A C60004                  	mov byte [rax], T_closure
  5965 0000364D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5966 00003651 48C74009[5E360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ed
  5967 00003659 E98D020000              	jmp .L_lambda_simple_end_00ed
  5968                                  .L_lambda_simple_code_00ed:	; lambda-simple body
  5969 0000365E 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5970 00003664 740B                    	je .L_lambda_simple_arity_check_ok_00ed
  5971 00003666 FF742410                	push qword [rsp + 8 * 2]
  5972 0000366A 6A01                    	push 1
  5973 0000366C E90DF70000              	jmp L_error_incorrect_arity_simple
  5974                                  .L_lambda_simple_arity_check_ok_00ed:
  5975 00003671 C8000000                	enter 0, 0
  5976 00003675 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  5977 00003679 488903                  	mov qword [rbx], rax
  5978                                  
  5979 0000367C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5980 00003681 E83FF70000              	call malloc
  5981 00003686 50                      	push rax
  5982 00003687 BF08000000              	mov rdi, 8 * 1	; new rib
  5983 0000368C E834F70000              	call malloc
  5984 00003691 50                      	push rax
  5985 00003692 BF18000000              	mov rdi, 8 * 3	; extended env
  5986 00003697 E829F70000              	call malloc
  5987 0000369C 488B7D10                	mov rdi, ENV
  5988 000036A0 BE00000000              	mov rsi, 0
  5989 000036A5 BA01000000              	mov rdx, 1
  5990                                  .L_lambda_simple_env_loop_00ee:	; ext_env[i + 1] <-- env[i]
  5991 000036AA 4883FE02                	cmp rsi, 2
  5992 000036AE 7410                    	je .L_lambda_simple_env_end_00ee
  5993 000036B0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5994 000036B4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5995 000036B8 48FFC6                  	inc rsi
  5996 000036BB 48FFC2                  	inc rdx
  5997 000036BE EBEA                    	jmp .L_lambda_simple_env_loop_00ee
  5998                                  .L_lambda_simple_env_end_00ee:
  5999 000036C0 5B                      	pop rbx
  6000 000036C1 BE00000000              	mov rsi, 0
  6001                                  .L_lambda_simple_params_loop_00ee:	; copy params
  6002 000036C6 4883FE01                	cmp rsi, 1
  6003 000036CA 740E                    	je .L_lambda_simple_params_end_00ee
  6004 000036CC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6005 000036D1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6006 000036D5 48FFC6                  	inc rsi
  6007 000036D8 EBEC                    	jmp .L_lambda_simple_params_loop_00ee
  6008                                  .L_lambda_simple_params_end_00ee:
  6009 000036DA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6010 000036DD 4889C3                  	mov rbx, rax
  6011 000036E0 58                      	pop rax
  6012 000036E1 C60004                  	mov byte [rax], T_closure
  6013 000036E4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6014 000036E8 48C74009[F5360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ee
  6015 000036F0 E945010000              	jmp .L_lambda_simple_end_00ee
  6016                                  .L_lambda_simple_code_00ee:	; lambda-simple body
  6017 000036F5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6018 000036FB 740B                    	je .L_lambda_simple_arity_check_ok_00ee
  6019 000036FD FF742410                	push qword [rsp + 8 * 2]
  6020 00003701 6A01                    	push 1
  6021 00003703 E976F60000              	jmp L_error_incorrect_arity_simple
  6022                                  .L_lambda_simple_arity_check_ok_00ee:
  6023 00003708 C8000000                	enter 0, 0
  6024                                  	; preparing a non-tail-call
  6025                                  	; preparing a non-tail-call
  6026 0000370C 488B4520                	mov rax, PARAM(0)	; param s
  6027 00003710 50                      	push rax
  6028 00003711 6A01                    	push 1	; arg count
  6029 00003713 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6030 0000371B 803805                  	cmp byte [rax], T_undefined
  6031 0000371E 0F8474F50000            	je L_error_fvar_undefined
  6032 00003724 803804                  	cmp byte [rax], T_closure
  6033 00003727 0F85EFF50000            	jne L_error_non_closure
  6034 0000372D FF7001                  	push SOB_CLOSURE_ENV(rax)
  6035 00003730 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6036 00003733 50                      	push rax
  6037 00003734 6A01                    	push 1	; arg count
  6038 00003736 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6039 0000373E 803805                  	cmp byte [rax], T_undefined
  6040 00003741 0F8451F50000            	je L_error_fvar_undefined
  6041 00003747 803804                  	cmp byte [rax], T_closure
  6042 0000374A 0F85CCF50000            	jne L_error_non_closure
  6043 00003750 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6044 00003753 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6045 00003756 483D[02000000]          	cmp rax, sob_boolean_false
  6046 0000375C 0F85D4000000            	jne .L_or_end_0018
  6047                                  	; preparing a non-tail-call
  6048                                  	; preparing a non-tail-call
  6049 00003762 488B4520                	mov rax, PARAM(0)	; param s
  6050 00003766 50                      	push rax
  6051 00003767 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6052 0000376F 803805                  	cmp byte [rax], T_undefined
  6053 00003772 0F8420F50000            	je L_error_fvar_undefined
  6054 00003778 50                      	push rax
  6055 00003779 6A02                    	push 2	; arg count
  6056 0000377B 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6057 00003783 803805                  	cmp byte [rax], T_undefined
  6058 00003786 0F840CF50000            	je L_error_fvar_undefined
  6059 0000378C 803804                  	cmp byte [rax], T_closure
  6060 0000378F 0F8587F50000            	jne L_error_non_closure
  6061 00003795 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6062 00003798 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6063 0000379B 50                      	push rax
  6064 0000379C 488B4510                	mov rax, ENV
  6065 000037A0 488B4008                	mov rax, qword [rax + 8 * 1]
  6066 000037A4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6067 000037A7 50                      	push rax
  6068 000037A8 6A02                    	push 2	; arg count
  6069 000037AA 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6070 000037B2 803805                  	cmp byte [rax], T_undefined
  6071 000037B5 0F84DDF40000            	je L_error_fvar_undefined
  6072 000037BB 803804                  	cmp byte [rax], T_closure
  6073 000037BE 0F8558F50000            	jne L_error_non_closure
  6074 000037C4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6075 000037C7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6076 000037CA 483D[02000000]          	cmp rax, sob_boolean_false
  6077 000037D0 745A                    	je .L_if_else_00a1
  6078                                  	; preparing a non-tail-call
  6079                                  	; preparing a non-tail-call
  6080 000037D2 488B4520                	mov rax, PARAM(0)	; param s
  6081 000037D6 50                      	push rax
  6082 000037D7 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6083 000037DF 803805                  	cmp byte [rax], T_undefined
  6084 000037E2 0F84B0F40000            	je L_error_fvar_undefined
  6085 000037E8 50                      	push rax
  6086 000037E9 6A02                    	push 2	; arg count
  6087 000037EB 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6088 000037F3 803805                  	cmp byte [rax], T_undefined
  6089 000037F6 0F849CF40000            	je L_error_fvar_undefined
  6090 000037FC 803804                  	cmp byte [rax], T_closure
  6091 000037FF 0F8517F50000            	jne L_error_non_closure
  6092 00003805 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6093 00003808 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6094 0000380B 50                      	push rax
  6095 0000380C 6A01                    	push 1	; arg count
  6096 0000380E 488B4510                	mov rax, ENV
  6097 00003812 488B00                  	mov rax, qword [rax + 8 * 0]
  6098 00003815 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6099 00003818 488B00                  	mov rax, qword [rax]
  6100 0000381B 803804                  	cmp byte [rax], T_closure
  6101 0000381E 0F85F8F40000            	jne L_error_non_closure
  6102 00003824 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6103 00003827 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6104 0000382A EB0A                    	jmp .L_if_end_00a1
  6105                                  .L_if_else_00a1:
  6106 0000382C 48B8-                   	mov rax, L_constants + 2
  6106 0000382E [0200000000000000] 
  6107                                  .L_if_end_00a1:
  6108                                  .L_or_end_0018:
  6109 00003836 C9                      	leave
  6110 00003837 C21800                  	ret AND_KILL_FRAME(1)
  6111                                  .L_lambda_simple_end_00ee:	; new closure is in rax
  6112 0000383A 50                      	push rax
  6113 0000383B 488B4520                	mov rax, PARAM(0)	; param loop
  6114 0000383F 8F00                    	pop qword [rax]
  6115 00003841 48B8-                   	mov rax, sob_void
  6115 00003843 [0000000000000000] 
  6116                                  
  6117                                  	; preparing a non-tail-call
  6118 0000384B 488B4510                	mov rax, ENV
  6119 0000384F 488B00                  	mov rax, qword [rax + 8 * 0]
  6120 00003852 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6121 00003856 50                      	push rax
  6122 00003857 6A01                    	push 1	; arg count
  6123 00003859 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6124 00003861 803805                  	cmp byte [rax], T_undefined
  6125 00003864 0F842EF40000            	je L_error_fvar_undefined
  6126 0000386A 803804                  	cmp byte [rax], T_closure
  6127 0000386D 0F85A9F40000            	jne L_error_non_closure
  6128 00003873 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6129 00003876 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6130 00003879 483D[02000000]          	cmp rax, sob_boolean_false
  6131 0000387F 7566                    	jne .L_or_end_0019
  6132                                  	; preparing a non-tail-call
  6133 00003881 488B4510                	mov rax, ENV
  6134 00003885 488B00                  	mov rax, qword [rax + 8 * 0]
  6135 00003888 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6136 0000388C 50                      	push rax
  6137 0000388D 6A01                    	push 1	; arg count
  6138 0000388F 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6139 00003897 803805                  	cmp byte [rax], T_undefined
  6140 0000389A 0F84F8F30000            	je L_error_fvar_undefined
  6141 000038A0 803804                  	cmp byte [rax], T_closure
  6142 000038A3 0F8573F40000            	jne L_error_non_closure
  6143 000038A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6144 000038AC FF5009                  	call SOB_CLOSURE_CODE(rax)
  6145 000038AF 483D[02000000]          	cmp rax, sob_boolean_false
  6146 000038B5 7426                    	je .L_if_else_00a2
  6147                                  	; preparing a non-tail-call
  6148 000038B7 488B4510                	mov rax, ENV
  6149 000038BB 488B00                  	mov rax, qword [rax + 8 * 0]
  6150 000038BE 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6151 000038C2 50                      	push rax
  6152 000038C3 6A01                    	push 1	; arg count
  6153 000038C5 488B4520                	mov rax, PARAM(0)	; param loop
  6154 000038C9 488B00                  	mov rax, qword [rax]
  6155 000038CC 803804                  	cmp byte [rax], T_closure
  6156 000038CF 0F8547F40000            	jne L_error_non_closure
  6157 000038D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6158 000038D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6159 000038DB EB0A                    	jmp .L_if_end_00a2
  6160                                  .L_if_else_00a2:
  6161 000038DD 48B8-                   	mov rax, L_constants + 2
  6161 000038DF [0200000000000000] 
  6162                                  .L_if_end_00a2:
  6163                                  .L_or_end_0019:
  6164 000038E7 C9                      	leave
  6165 000038E8 C21800                  	ret AND_KILL_FRAME(1)
  6166                                  .L_lambda_simple_end_00ed:	; new closure is in rax
  6167 000038EB 803804                  	cmp byte [rax], T_closure
  6168 000038EE 0F8528F40000            	jne L_error_non_closure
  6169 000038F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6170 000038F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6171 000038FA C9                      	leave
  6172 000038FB C22000                  	ret AND_KILL_FRAME(2)
  6173 000038FE E9D0030000              	jmp .L_lambda_opt_end_001d	; new closure is in rax
  6174                                  .L_lambda_opt_arity_check_more_001d:
  6175 00003903 488B442410              	mov rax, qword[rsp + 2 * 8]
  6176 00003908 4889C7                  	mov rdi, rax
  6177 0000390B 49B9-                   	mov r9, sob_nil
  6177 0000390D [0100000000000000] 
  6178 00003915 4C8B442410              	mov r8, qword[rsp+2*8]
  6179                                  .L_lambda_opt_stack_shrink_loop_001d:
  6180 0000391A 4983F801                	cmp r8, 1
  6181 0000391E 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_001d
  6182 00003920 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  6183 00003925 BF11000000              	mov rdi, 1+8+8	;for pair
  6184 0000392A E896F40000              	call malloc	 ;to create the pair in the stack
  6185 0000392F C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  6186 00003932 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  6187 00003936 4C894809                 	mov qword[rax+1+8],r9
  6188 0000393A 4989C1                  	mov r9 , rax	 ; for the recursion 
  6189 0000393D 49FFC8                  	dec r8
  6190 00003940 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_001d
  6191                                  .L_lambda_opt_stack_shrink_loop_exit_001d:
  6192 00003942 488B442410              	mov rax, qword[rsp + 2 * 8]
  6193 00003947 BF02000000              	mov rdi, 2
  6194 0000394C 4829F8                  	sub rax, rdi
  6195 0000394F 4889C7                  	mov rdi, rax
  6196 00003952 486BC008                	imul rax,8
  6197 00003956 4801C4                  	add rsp, rax
  6198 00003959 4889E0                  	mov rax, rsp
  6199 0000395C 4989F8                  	mov r8, rdi
  6200 0000395F 4D6BC008                	imul r8, 8
  6201 00003963 4C29C0                  	sub rax, r8
  6202 00003966 4989C2                  	mov r10, rax	; holds the original ret in the stack
  6203 00003969 4983C218                	add r10, 8*3
  6204 0000396D 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  6205 00003971 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  6206 00003974 4D6BC008                	imul r8,8
  6207 00003978 4C01C0                  	add rax, r8
  6208 0000397B 4C8908                  	mov qword[rax] ,r9
  6209 0000397E 4D89D0                   	mov r8, r10
  6210 00003981 4983C000                	add r8, 8 * 0
  6211 00003985 4D8B08                  	mov r9,qword[r8]
  6212 00003988 4D890CF8                	mov qword [r8 + rdi * 8], r9
  6213 0000398C 4983EA18                	sub r10, 8*3
  6214 00003990 48C744241002000000      	mov qword [rsp+2*8], 2
  6215 00003999 498B4208                	mov rax, qword[r10 + 1 * 8]
  6216 0000399D 4889442408              	mov qword[rsp + 1*8] ,rax
  6217 000039A2 498B02                  	mov rax, qword[r10]
  6218 000039A5 48890424                	mov qword[rsp], rax
  6219 000039A9 C8000000                	enter 0, 0
  6220                                  	; preparing a non-tail-call
  6221 000039AD 48B8-                   	mov rax, L_constants + 1993
  6221 000039AF [C907000000000000] 
  6222 000039B7 50                      	push rax
  6223 000039B8 6A01                    	push 1	; arg count
  6224 000039BA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6225 000039BF E801F40000              	call malloc
  6226 000039C4 50                      	push rax
  6227 000039C5 BF10000000              	mov rdi, 8 * 2	; new rib
  6228 000039CA E8F6F30000              	call malloc
  6229 000039CF 50                      	push rax
  6230 000039D0 BF10000000              	mov rdi, 8 * 2	; extended env
  6231 000039D5 E8EBF30000              	call malloc
  6232 000039DA 488B7D10                	mov rdi, ENV
  6233 000039DE BE00000000              	mov rsi, 0
  6234 000039E3 BA01000000              	mov rdx, 1
  6235                                  .L_lambda_simple_env_loop_00eb:	; ext_env[i + 1] <-- env[i]
  6236 000039E8 4883FE01                	cmp rsi, 1
  6237 000039EC 7410                    	je .L_lambda_simple_env_end_00eb
  6238 000039EE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6239 000039F2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6240 000039F6 48FFC6                  	inc rsi
  6241 000039F9 48FFC2                  	inc rdx
  6242 000039FC EBEA                    	jmp .L_lambda_simple_env_loop_00eb
  6243                                  .L_lambda_simple_env_end_00eb:
  6244 000039FE 5B                      	pop rbx
  6245 000039FF BE00000000              	mov rsi, 0
  6246                                  .L_lambda_simple_params_loop_00eb:	; copy params
  6247 00003A04 4883FE02                	cmp rsi, 2
  6248 00003A08 740E                    	je .L_lambda_simple_params_end_00eb
  6249 00003A0A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6250 00003A0F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6251 00003A13 48FFC6                  	inc rsi
  6252 00003A16 EBEC                    	jmp .L_lambda_simple_params_loop_00eb
  6253                                  .L_lambda_simple_params_end_00eb:
  6254 00003A18 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6255 00003A1B 4889C3                  	mov rbx, rax
  6256 00003A1E 58                      	pop rax
  6257 00003A1F C60004                  	mov byte [rax], T_closure
  6258 00003A22 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6259 00003A26 48C74009[333A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00eb
  6260 00003A2E E98D020000              	jmp .L_lambda_simple_end_00eb
  6261                                  .L_lambda_simple_code_00eb:	; lambda-simple body
  6262 00003A33 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6263 00003A39 740B                    	je .L_lambda_simple_arity_check_ok_00eb
  6264 00003A3B FF742410                	push qword [rsp + 8 * 2]
  6265 00003A3F 6A01                    	push 1
  6266 00003A41 E938F30000              	jmp L_error_incorrect_arity_simple
  6267                                  .L_lambda_simple_arity_check_ok_00eb:
  6268 00003A46 C8000000                	enter 0, 0
  6269 00003A4A 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  6270 00003A4E 488903                  	mov qword [rbx], rax
  6271                                  
  6272 00003A51 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6273 00003A56 E86AF30000              	call malloc
  6274 00003A5B 50                      	push rax
  6275 00003A5C BF08000000              	mov rdi, 8 * 1	; new rib
  6276 00003A61 E85FF30000              	call malloc
  6277 00003A66 50                      	push rax
  6278 00003A67 BF18000000              	mov rdi, 8 * 3	; extended env
  6279 00003A6C E854F30000              	call malloc
  6280 00003A71 488B7D10                	mov rdi, ENV
  6281 00003A75 BE00000000              	mov rsi, 0
  6282 00003A7A BA01000000              	mov rdx, 1
  6283                                  .L_lambda_simple_env_loop_00ec:	; ext_env[i + 1] <-- env[i]
  6284 00003A7F 4883FE02                	cmp rsi, 2
  6285 00003A83 7410                    	je .L_lambda_simple_env_end_00ec
  6286 00003A85 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6287 00003A89 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6288 00003A8D 48FFC6                  	inc rsi
  6289 00003A90 48FFC2                  	inc rdx
  6290 00003A93 EBEA                    	jmp .L_lambda_simple_env_loop_00ec
  6291                                  .L_lambda_simple_env_end_00ec:
  6292 00003A95 5B                      	pop rbx
  6293 00003A96 BE00000000              	mov rsi, 0
  6294                                  .L_lambda_simple_params_loop_00ec:	; copy params
  6295 00003A9B 4883FE01                	cmp rsi, 1
  6296 00003A9F 740E                    	je .L_lambda_simple_params_end_00ec
  6297 00003AA1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6298 00003AA6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6299 00003AAA 48FFC6                  	inc rsi
  6300 00003AAD EBEC                    	jmp .L_lambda_simple_params_loop_00ec
  6301                                  .L_lambda_simple_params_end_00ec:
  6302 00003AAF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6303 00003AB2 4889C3                  	mov rbx, rax
  6304 00003AB5 58                      	pop rax
  6305 00003AB6 C60004                  	mov byte [rax], T_closure
  6306 00003AB9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6307 00003ABD 48C74009[CA3A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ec
  6308 00003AC5 E945010000              	jmp .L_lambda_simple_end_00ec
  6309                                  .L_lambda_simple_code_00ec:	; lambda-simple body
  6310 00003ACA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6311 00003AD0 740B                    	je .L_lambda_simple_arity_check_ok_00ec
  6312 00003AD2 FF742410                	push qword [rsp + 8 * 2]
  6313 00003AD6 6A01                    	push 1
  6314 00003AD8 E9A1F20000              	jmp L_error_incorrect_arity_simple
  6315                                  .L_lambda_simple_arity_check_ok_00ec:
  6316 00003ADD C8000000                	enter 0, 0
  6317                                  	; preparing a non-tail-call
  6318                                  	; preparing a non-tail-call
  6319 00003AE1 488B4520                	mov rax, PARAM(0)	; param s
  6320 00003AE5 50                      	push rax
  6321 00003AE6 6A01                    	push 1	; arg count
  6322 00003AE8 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6323 00003AF0 803805                  	cmp byte [rax], T_undefined
  6324 00003AF3 0F849FF10000            	je L_error_fvar_undefined
  6325 00003AF9 803804                  	cmp byte [rax], T_closure
  6326 00003AFC 0F851AF20000            	jne L_error_non_closure
  6327 00003B02 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6328 00003B05 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6329 00003B08 50                      	push rax
  6330 00003B09 6A01                    	push 1	; arg count
  6331 00003B0B 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6332 00003B13 803805                  	cmp byte [rax], T_undefined
  6333 00003B16 0F847CF10000            	je L_error_fvar_undefined
  6334 00003B1C 803804                  	cmp byte [rax], T_closure
  6335 00003B1F 0F85F7F10000            	jne L_error_non_closure
  6336 00003B25 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6337 00003B28 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6338 00003B2B 483D[02000000]          	cmp rax, sob_boolean_false
  6339 00003B31 0F85D4000000            	jne .L_or_end_0016
  6340                                  	; preparing a non-tail-call
  6341                                  	; preparing a non-tail-call
  6342 00003B37 488B4520                	mov rax, PARAM(0)	; param s
  6343 00003B3B 50                      	push rax
  6344 00003B3C 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6345 00003B44 803805                  	cmp byte [rax], T_undefined
  6346 00003B47 0F844BF10000            	je L_error_fvar_undefined
  6347 00003B4D 50                      	push rax
  6348 00003B4E 6A02                    	push 2	; arg count
  6349 00003B50 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6350 00003B58 803805                  	cmp byte [rax], T_undefined
  6351 00003B5B 0F8437F10000            	je L_error_fvar_undefined
  6352 00003B61 803804                  	cmp byte [rax], T_closure
  6353 00003B64 0F85B2F10000            	jne L_error_non_closure
  6354 00003B6A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6355 00003B6D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6356 00003B70 50                      	push rax
  6357 00003B71 488B4510                	mov rax, ENV
  6358 00003B75 488B4008                	mov rax, qword [rax + 8 * 1]
  6359 00003B79 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6360 00003B7C 50                      	push rax
  6361 00003B7D 6A02                    	push 2	; arg count
  6362 00003B7F 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6363 00003B87 803805                  	cmp byte [rax], T_undefined
  6364 00003B8A 0F8408F10000            	je L_error_fvar_undefined
  6365 00003B90 803804                  	cmp byte [rax], T_closure
  6366 00003B93 0F8583F10000            	jne L_error_non_closure
  6367 00003B99 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6368 00003B9C FF5009                  	call SOB_CLOSURE_CODE(rax)
  6369 00003B9F 483D[02000000]          	cmp rax, sob_boolean_false
  6370 00003BA5 745A                    	je .L_if_else_009f
  6371                                  	; preparing a non-tail-call
  6372                                  	; preparing a non-tail-call
  6373 00003BA7 488B4520                	mov rax, PARAM(0)	; param s
  6374 00003BAB 50                      	push rax
  6375 00003BAC 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6376 00003BB4 803805                  	cmp byte [rax], T_undefined
  6377 00003BB7 0F84DBF00000            	je L_error_fvar_undefined
  6378 00003BBD 50                      	push rax
  6379 00003BBE 6A02                    	push 2	; arg count
  6380 00003BC0 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6381 00003BC8 803805                  	cmp byte [rax], T_undefined
  6382 00003BCB 0F84C7F00000            	je L_error_fvar_undefined
  6383 00003BD1 803804                  	cmp byte [rax], T_closure
  6384 00003BD4 0F8542F10000            	jne L_error_non_closure
  6385 00003BDA FF7001                  	push SOB_CLOSURE_ENV(rax)
  6386 00003BDD FF5009                  	call SOB_CLOSURE_CODE(rax)
  6387 00003BE0 50                      	push rax
  6388 00003BE1 6A01                    	push 1	; arg count
  6389 00003BE3 488B4510                	mov rax, ENV
  6390 00003BE7 488B00                  	mov rax, qword [rax + 8 * 0]
  6391 00003BEA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6392 00003BED 488B00                  	mov rax, qword [rax]
  6393 00003BF0 803804                  	cmp byte [rax], T_closure
  6394 00003BF3 0F8523F10000            	jne L_error_non_closure
  6395 00003BF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6396 00003BFC FF5009                  	call SOB_CLOSURE_CODE(rax)
  6397 00003BFF EB0A                    	jmp .L_if_end_009f
  6398                                  .L_if_else_009f:
  6399 00003C01 48B8-                   	mov rax, L_constants + 2
  6399 00003C03 [0200000000000000] 
  6400                                  .L_if_end_009f:
  6401                                  .L_or_end_0016:
  6402 00003C0B C9                      	leave
  6403 00003C0C C21800                  	ret AND_KILL_FRAME(1)
  6404                                  .L_lambda_simple_end_00ec:	; new closure is in rax
  6405 00003C0F 50                      	push rax
  6406 00003C10 488B4520                	mov rax, PARAM(0)	; param loop
  6407 00003C14 8F00                    	pop qword [rax]
  6408 00003C16 48B8-                   	mov rax, sob_void
  6408 00003C18 [0000000000000000] 
  6409                                  
  6410                                  	; preparing a non-tail-call
  6411 00003C20 488B4510                	mov rax, ENV
  6412 00003C24 488B00                  	mov rax, qword [rax + 8 * 0]
  6413 00003C27 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6414 00003C2B 50                      	push rax
  6415 00003C2C 6A01                    	push 1	; arg count
  6416 00003C2E 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6417 00003C36 803805                  	cmp byte [rax], T_undefined
  6418 00003C39 0F8459F00000            	je L_error_fvar_undefined
  6419 00003C3F 803804                  	cmp byte [rax], T_closure
  6420 00003C42 0F85D4F00000            	jne L_error_non_closure
  6421 00003C48 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6422 00003C4B FF5009                  	call SOB_CLOSURE_CODE(rax)
  6423 00003C4E 483D[02000000]          	cmp rax, sob_boolean_false
  6424 00003C54 7566                    	jne .L_or_end_0017
  6425                                  	; preparing a non-tail-call
  6426 00003C56 488B4510                	mov rax, ENV
  6427 00003C5A 488B00                  	mov rax, qword [rax + 8 * 0]
  6428 00003C5D 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6429 00003C61 50                      	push rax
  6430 00003C62 6A01                    	push 1	; arg count
  6431 00003C64 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6432 00003C6C 803805                  	cmp byte [rax], T_undefined
  6433 00003C6F 0F8423F00000            	je L_error_fvar_undefined
  6434 00003C75 803804                  	cmp byte [rax], T_closure
  6435 00003C78 0F859EF00000            	jne L_error_non_closure
  6436 00003C7E FF7001                  	push SOB_CLOSURE_ENV(rax)
  6437 00003C81 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6438 00003C84 483D[02000000]          	cmp rax, sob_boolean_false
  6439 00003C8A 7426                    	je .L_if_else_00a0
  6440                                  	; preparing a non-tail-call
  6441 00003C8C 488B4510                	mov rax, ENV
  6442 00003C90 488B00                  	mov rax, qword [rax + 8 * 0]
  6443 00003C93 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6444 00003C97 50                      	push rax
  6445 00003C98 6A01                    	push 1	; arg count
  6446 00003C9A 488B4520                	mov rax, PARAM(0)	; param loop
  6447 00003C9E 488B00                  	mov rax, qword [rax]
  6448 00003CA1 803804                  	cmp byte [rax], T_closure
  6449 00003CA4 0F8572F00000            	jne L_error_non_closure
  6450 00003CAA FF7001                  	push SOB_CLOSURE_ENV(rax)
  6451 00003CAD FF5009                  	call SOB_CLOSURE_CODE(rax)
  6452 00003CB0 EB0A                    	jmp .L_if_end_00a0
  6453                                  .L_if_else_00a0:
  6454 00003CB2 48B8-                   	mov rax, L_constants + 2
  6454 00003CB4 [0200000000000000] 
  6455                                  .L_if_end_00a0:
  6456                                  .L_or_end_0017:
  6457 00003CBC C9                      	leave
  6458 00003CBD C21800                  	ret AND_KILL_FRAME(1)
  6459                                  .L_lambda_simple_end_00eb:	; new closure is in rax
  6460 00003CC0 803804                  	cmp byte [rax], T_closure
  6461 00003CC3 0F8553F00000            	jne L_error_non_closure
  6462 00003CC9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6463 00003CCC FF5009                  	call SOB_CLOSURE_CODE(rax)
  6464 00003CCF C9                      	leave
  6465 00003CD0 C22000                  	ret AND_KILL_FRAME(2)
  6466                                  .L_lambda_opt_end_001d:	; new closure is in rax
  6467 00003CD3 48890425[D40F0000]      	mov qword [free_var_31], rax
  6468 00003CDB 48B8-                   	mov rax, sob_void
  6468 00003CDD [0000000000000000] 
  6469                                  
  6470 00003CE5 4889C7                  	mov rdi, rax
  6471 00003CE8 E82DF30000              	call print_sexpr_if_not_void
  6472                                  	; preparing a non-tail-call
  6473 00003CED 48B8-                   	mov rax, L_constants + 1993
  6473 00003CEF [C907000000000000] 
  6474 00003CF7 50                      	push rax
  6475 00003CF8 48B8-                   	mov rax, L_constants + 1993
  6475 00003CFA [C907000000000000] 
  6476 00003D02 50                      	push rax
  6477 00003D03 6A02                    	push 2	; arg count
  6478 00003D05 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6479 00003D0A E8B6F00000              	call malloc
  6480 00003D0F 50                      	push rax
  6481 00003D10 BF00000000              	mov rdi, 8 * 0	; new rib
  6482 00003D15 E8ABF00000              	call malloc
  6483 00003D1A 50                      	push rax
  6484 00003D1B BF08000000              	mov rdi, 8 * 1	; extended env
  6485 00003D20 E8A0F00000              	call malloc
  6486 00003D25 488B7D10                	mov rdi, ENV
  6487 00003D29 BE00000000              	mov rsi, 0
  6488 00003D2E BA01000000              	mov rdx, 1
  6489                                  .L_lambda_simple_env_loop_00ef:	; ext_env[i + 1] <-- env[i]
  6490 00003D33 4883FE00                	cmp rsi, 0
  6491 00003D37 7410                    	je .L_lambda_simple_env_end_00ef
  6492 00003D39 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6493 00003D3D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6494 00003D41 48FFC6                  	inc rsi
  6495 00003D44 48FFC2                  	inc rdx
  6496 00003D47 EBEA                    	jmp .L_lambda_simple_env_loop_00ef
  6497                                  .L_lambda_simple_env_end_00ef:
  6498 00003D49 5B                      	pop rbx
  6499 00003D4A BE00000000              	mov rsi, 0
  6500                                  .L_lambda_simple_params_loop_00ef:	; copy params
  6501 00003D4F 4883FE00                	cmp rsi, 0
  6502 00003D53 740E                    	je .L_lambda_simple_params_end_00ef
  6503 00003D55 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6504 00003D5A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6505 00003D5E 48FFC6                  	inc rsi
  6506 00003D61 EBEC                    	jmp .L_lambda_simple_params_loop_00ef
  6507                                  .L_lambda_simple_params_end_00ef:
  6508 00003D63 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6509 00003D66 4889C3                  	mov rbx, rax
  6510 00003D69 58                      	pop rax
  6511 00003D6A C60004                  	mov byte [rax], T_closure
  6512 00003D6D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6513 00003D71 48C74009[7E3D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ef
  6514 00003D79 E9E8050000              	jmp .L_lambda_simple_end_00ef
  6515                                  .L_lambda_simple_code_00ef:	; lambda-simple body
  6516 00003D7E 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6517 00003D84 740B                    	je .L_lambda_simple_arity_check_ok_00ef
  6518 00003D86 FF742410                	push qword [rsp + 8 * 2]
  6519 00003D8A 6A02                    	push 2
  6520 00003D8C E9EDEF0000              	jmp L_error_incorrect_arity_simple
  6521                                  .L_lambda_simple_arity_check_ok_00ef:
  6522 00003D91 C8000000                	enter 0, 0
  6523 00003D95 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  6524 00003D99 488903                  	mov qword [rbx], rax
  6525                                  
  6526 00003D9C 488B5D28                	mov rbx, qword [rbp + 8 * (4 + 1)]
  6527 00003DA0 488903                  	mov qword [rbx], rax
  6528                                  
  6529 00003DA3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6530 00003DA8 E818F00000              	call malloc
  6531 00003DAD 50                      	push rax
  6532 00003DAE BF10000000              	mov rdi, 8 * 2	; new rib
  6533 00003DB3 E80DF00000              	call malloc
  6534 00003DB8 50                      	push rax
  6535 00003DB9 BF10000000              	mov rdi, 8 * 2	; extended env
  6536 00003DBE E802F00000              	call malloc
  6537 00003DC3 488B7D10                	mov rdi, ENV
  6538 00003DC7 BE00000000              	mov rsi, 0
  6539 00003DCC BA01000000              	mov rdx, 1
  6540                                  .L_lambda_simple_env_loop_00f0:	; ext_env[i + 1] <-- env[i]
  6541 00003DD1 4883FE01                	cmp rsi, 1
  6542 00003DD5 7410                    	je .L_lambda_simple_env_end_00f0
  6543 00003DD7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6544 00003DDB 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6545 00003DDF 48FFC6                  	inc rsi
  6546 00003DE2 48FFC2                  	inc rdx
  6547 00003DE5 EBEA                    	jmp .L_lambda_simple_env_loop_00f0
  6548                                  .L_lambda_simple_env_end_00f0:
  6549 00003DE7 5B                      	pop rbx
  6550 00003DE8 BE00000000              	mov rsi, 0
  6551                                  .L_lambda_simple_params_loop_00f0:	; copy params
  6552 00003DED 4883FE02                	cmp rsi, 2
  6553 00003DF1 740E                    	je .L_lambda_simple_params_end_00f0
  6554 00003DF3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6555 00003DF8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6556 00003DFC 48FFC6                  	inc rsi
  6557 00003DFF EBEC                    	jmp .L_lambda_simple_params_loop_00f0
  6558                                  .L_lambda_simple_params_end_00f0:
  6559 00003E01 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6560 00003E04 4889C3                  	mov rbx, rax
  6561 00003E07 58                      	pop rax
  6562 00003E08 C60004                  	mov byte [rax], T_closure
  6563 00003E0B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6564 00003E0F 48C74009[1C3E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00f0
  6565 00003E17 E905010000              	jmp .L_lambda_simple_end_00f0
  6566                                  .L_lambda_simple_code_00f0:	; lambda-simple body
  6567 00003E1C 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6568 00003E22 740B                    	je .L_lambda_simple_arity_check_ok_00f0
  6569 00003E24 FF742410                	push qword [rsp + 8 * 2]
  6570 00003E28 6A02                    	push 2
  6571 00003E2A E94FEF0000              	jmp L_error_incorrect_arity_simple
  6572                                  .L_lambda_simple_arity_check_ok_00f0:
  6573 00003E2F C8000000                	enter 0, 0
  6574                                  	; preparing a non-tail-call
  6575 00003E33 488B4528                	mov rax, PARAM(1)	; param s
  6576 00003E37 50                      	push rax
  6577 00003E38 6A01                    	push 1	; arg count
  6578 00003E3A 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6579 00003E42 803805                  	cmp byte [rax], T_undefined
  6580 00003E45 0F844DEE0000            	je L_error_fvar_undefined
  6581 00003E4B 803804                  	cmp byte [rax], T_closure
  6582 00003E4E 0F85C8EE0000            	jne L_error_non_closure
  6583 00003E54 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6584 00003E57 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6585 00003E5A 483D[02000000]          	cmp rax, sob_boolean_false
  6586 00003E60 740F                    	je .L_if_else_00a3
  6587 00003E62 48B8-                   	mov rax, L_constants + 1
  6587 00003E64 [0100000000000000] 
  6588 00003E6C E9AC000000              	jmp .L_if_end_00a3
  6589                                  .L_if_else_00a3:
  6590                                  	; preparing a non-tail-call
  6591                                  	; preparing a non-tail-call
  6592                                  	; preparing a non-tail-call
  6593 00003E71 488B4528                	mov rax, PARAM(1)	; param s
  6594 00003E75 50                      	push rax
  6595 00003E76 6A01                    	push 1	; arg count
  6596 00003E78 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6597 00003E80 803805                  	cmp byte [rax], T_undefined
  6598 00003E83 0F840FEE0000            	je L_error_fvar_undefined
  6599 00003E89 803804                  	cmp byte [rax], T_closure
  6600 00003E8C 0F858AEE0000            	jne L_error_non_closure
  6601 00003E92 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6602 00003E95 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6603 00003E98 50                      	push rax
  6604 00003E99 488B4520                	mov rax, PARAM(0)	; param f
  6605 00003E9D 50                      	push rax
  6606 00003E9E 6A02                    	push 2	; arg count
  6607 00003EA0 488B4510                	mov rax, ENV
  6608 00003EA4 488B00                  	mov rax, qword [rax + 8 * 0]
  6609 00003EA7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  6610 00003EAA 488B00                  	mov rax, qword [rax]
  6611 00003EAD 803804                  	cmp byte [rax], T_closure
  6612 00003EB0 0F8566EE0000            	jne L_error_non_closure
  6613 00003EB6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6614 00003EB9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6615 00003EBC 50                      	push rax
  6616                                  	; preparing a non-tail-call
  6617                                  	; preparing a non-tail-call
  6618 00003EBD 488B4528                	mov rax, PARAM(1)	; param s
  6619 00003EC1 50                      	push rax
  6620 00003EC2 6A01                    	push 1	; arg count
  6621 00003EC4 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6622 00003ECC 803805                  	cmp byte [rax], T_undefined
  6623 00003ECF 0F84C3ED0000            	je L_error_fvar_undefined
  6624 00003ED5 803804                  	cmp byte [rax], T_closure
  6625 00003ED8 0F853EEE0000            	jne L_error_non_closure
  6626 00003EDE FF7001                  	push SOB_CLOSURE_ENV(rax)
  6627 00003EE1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6628 00003EE4 50                      	push rax
  6629 00003EE5 6A01                    	push 1	; arg count
  6630 00003EE7 488B4520                	mov rax, PARAM(0)	; param f
  6631 00003EEB 803804                  	cmp byte [rax], T_closure
  6632 00003EEE 0F8528EE0000            	jne L_error_non_closure
  6633 00003EF4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6634 00003EF7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6635 00003EFA 50                      	push rax
  6636 00003EFB 6A02                    	push 2	; arg count
  6637 00003EFD 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  6638 00003F05 803805                  	cmp byte [rax], T_undefined
  6639 00003F08 0F848AED0000            	je L_error_fvar_undefined
  6640 00003F0E 803804                  	cmp byte [rax], T_closure
  6641 00003F11 0F8505EE0000            	jne L_error_non_closure
  6642 00003F17 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6643 00003F1A FF5009                  	call SOB_CLOSURE_CODE(rax)
  6644                                  .L_if_end_00a3:
  6645 00003F1D C9                      	leave
  6646 00003F1E C22000                  	ret AND_KILL_FRAME(2)
  6647                                  .L_lambda_simple_end_00f0:	; new closure is in rax
  6648 00003F21 50                      	push rax
  6649 00003F22 488B4520                	mov rax, PARAM(0)	; param map1
  6650 00003F26 8F00                    	pop qword [rax]
  6651 00003F28 48B8-                   	mov rax, sob_void
  6651 00003F2A [0000000000000000] 
  6652                                  
  6653 00003F32 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6654 00003F37 E889EE0000              	call malloc
  6655 00003F3C 50                      	push rax
  6656 00003F3D BF10000000              	mov rdi, 8 * 2	; new rib
  6657 00003F42 E87EEE0000              	call malloc
  6658 00003F47 50                      	push rax
  6659 00003F48 BF10000000              	mov rdi, 8 * 2	; extended env
  6660 00003F4D E873EE0000              	call malloc
  6661 00003F52 488B7D10                	mov rdi, ENV
  6662 00003F56 BE00000000              	mov rsi, 0
  6663 00003F5B BA01000000              	mov rdx, 1
  6664                                  .L_lambda_simple_env_loop_00f1:	; ext_env[i + 1] <-- env[i]
  6665 00003F60 4883FE01                	cmp rsi, 1
  6666 00003F64 7410                    	je .L_lambda_simple_env_end_00f1
  6667 00003F66 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6668 00003F6A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6669 00003F6E 48FFC6                  	inc rsi
  6670 00003F71 48FFC2                  	inc rdx
  6671 00003F74 EBEA                    	jmp .L_lambda_simple_env_loop_00f1
  6672                                  .L_lambda_simple_env_end_00f1:
  6673 00003F76 5B                      	pop rbx
  6674 00003F77 BE00000000              	mov rsi, 0
  6675                                  .L_lambda_simple_params_loop_00f1:	; copy params
  6676 00003F7C 4883FE02                	cmp rsi, 2
  6677 00003F80 740E                    	je .L_lambda_simple_params_end_00f1
  6678 00003F82 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6679 00003F87 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6680 00003F8B 48FFC6                  	inc rsi
  6681 00003F8E EBEC                    	jmp .L_lambda_simple_params_loop_00f1
  6682                                  .L_lambda_simple_params_end_00f1:
  6683 00003F90 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6684 00003F93 4889C3                  	mov rbx, rax
  6685 00003F96 58                      	pop rax
  6686 00003F97 C60004                  	mov byte [rax], T_closure
  6687 00003F9A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6688 00003F9E 48C74009[AB3F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00f1
  6689 00003FA6 E957010000              	jmp .L_lambda_simple_end_00f1
  6690                                  .L_lambda_simple_code_00f1:	; lambda-simple body
  6691 00003FAB 48837C241002            	cmp qword [rsp + 8 * 2], 2
  6692 00003FB1 740B                    	je .L_lambda_simple_arity_check_ok_00f1
  6693 00003FB3 FF742410                	push qword [rsp + 8 * 2]
  6694 00003FB7 6A02                    	push 2
  6695 00003FB9 E9C0ED0000              	jmp L_error_incorrect_arity_simple
  6696                                  .L_lambda_simple_arity_check_ok_00f1:
  6697 00003FBE C8000000                	enter 0, 0
  6698                                  	; preparing a non-tail-call
  6699                                  	; preparing a non-tail-call
  6700 00003FC2 488B4528                	mov rax, PARAM(1)	; param s
  6701 00003FC6 50                      	push rax
  6702 00003FC7 6A01                    	push 1	; arg count
  6703 00003FC9 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6704 00003FD1 803805                  	cmp byte [rax], T_undefined
  6705 00003FD4 0F84BEEC0000            	je L_error_fvar_undefined
  6706 00003FDA 803804                  	cmp byte [rax], T_closure
  6707 00003FDD 0F8539ED0000            	jne L_error_non_closure
  6708 00003FE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6709 00003FE6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6710 00003FE9 50                      	push rax
  6711 00003FEA 6A01                    	push 1	; arg count
  6712 00003FEC 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6713 00003FF4 803805                  	cmp byte [rax], T_undefined
  6714 00003FF7 0F849BEC0000            	je L_error_fvar_undefined
  6715 00003FFD 803804                  	cmp byte [rax], T_closure
  6716 00004000 0F8516ED0000            	jne L_error_non_closure
  6717 00004006 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6718 00004009 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6719 0000400C 483D[02000000]          	cmp rax, sob_boolean_false
  6720 00004012 740F                    	je .L_if_else_00a4
  6721 00004014 48B8-                   	mov rax, L_constants + 1
  6721 00004016 [0100000000000000] 
  6722 0000401E E9DB000000              	jmp .L_if_end_00a4
  6723                                  .L_if_else_00a4:
  6724                                  	; preparing a non-tail-call
  6725                                  	; preparing a non-tail-call
  6726                                  	; preparing a non-tail-call
  6727 00004023 488B4528                	mov rax, PARAM(1)	; param s
  6728 00004027 50                      	push rax
  6729 00004028 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6730 00004030 803805                  	cmp byte [rax], T_undefined
  6731 00004033 0F845FEC0000            	je L_error_fvar_undefined
  6732 00004039 50                      	push rax
  6733 0000403A 6A02                    	push 2	; arg count
  6734 0000403C 488B4510                	mov rax, ENV
  6735 00004040 488B00                  	mov rax, qword [rax + 8 * 0]
  6736 00004043 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  6737 00004046 488B00                  	mov rax, qword [rax]
  6738 00004049 803804                  	cmp byte [rax], T_closure
  6739 0000404C 0F85CAEC0000            	jne L_error_non_closure
  6740 00004052 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6741 00004055 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6742 00004058 50                      	push rax
  6743 00004059 488B4520                	mov rax, PARAM(0)	; param f
  6744 0000405D 50                      	push rax
  6745 0000405E 6A02                    	push 2	; arg count
  6746 00004060 488B4510                	mov rax, ENV
  6747 00004064 488B00                  	mov rax, qword [rax + 8 * 0]
  6748 00004067 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  6749 0000406B 488B00                  	mov rax, qword [rax]
  6750 0000406E 803804                  	cmp byte [rax], T_closure
  6751 00004071 0F85A5EC0000            	jne L_error_non_closure
  6752 00004077 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6753 0000407A FF5009                  	call SOB_CLOSURE_CODE(rax)
  6754 0000407D 50                      	push rax
  6755                                  	; preparing a non-tail-call
  6756                                  	; preparing a non-tail-call
  6757 0000407E 488B4528                	mov rax, PARAM(1)	; param s
  6758 00004082 50                      	push rax
  6759 00004083 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6760 0000408B 803805                  	cmp byte [rax], T_undefined
  6761 0000408E 0F8404EC0000            	je L_error_fvar_undefined
  6762 00004094 50                      	push rax
  6763 00004095 6A02                    	push 2	; arg count
  6764 00004097 488B4510                	mov rax, ENV
  6765 0000409B 488B00                  	mov rax, qword [rax + 8 * 0]
  6766 0000409E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  6767 000040A1 488B00                  	mov rax, qword [rax]
  6768 000040A4 803804                  	cmp byte [rax], T_closure
  6769 000040A7 0F856FEC0000            	jne L_error_non_closure
  6770 000040AD FF7001                  	push SOB_CLOSURE_ENV(rax)
  6771 000040B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6772 000040B3 50                      	push rax
  6773 000040B4 488B4520                	mov rax, PARAM(0)	; param f
  6774 000040B8 50                      	push rax
  6775 000040B9 6A02                    	push 2	; arg count
  6776 000040BB 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6777 000040C3 803805                  	cmp byte [rax], T_undefined
  6778 000040C6 0F84CCEB0000            	je L_error_fvar_undefined
  6779 000040CC 803804                  	cmp byte [rax], T_closure
  6780 000040CF 0F8547EC0000            	jne L_error_non_closure
  6781 000040D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6782 000040D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6783 000040DB 50                      	push rax
  6784 000040DC 6A02                    	push 2	; arg count
  6785 000040DE 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  6786 000040E6 803805                  	cmp byte [rax], T_undefined
  6787 000040E9 0F84A9EB0000            	je L_error_fvar_undefined
  6788 000040EF 803804                  	cmp byte [rax], T_closure
  6789 000040F2 0F8524EC0000            	jne L_error_non_closure
  6790 000040F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6791 000040FB FF5009                  	call SOB_CLOSURE_CODE(rax)
  6792                                  .L_if_end_00a4:
  6793 000040FE C9                      	leave
  6794 000040FF C22000                  	ret AND_KILL_FRAME(2)
  6795                                  .L_lambda_simple_end_00f1:	; new closure is in rax
  6796 00004102 50                      	push rax
  6797 00004103 488B4528                	mov rax, PARAM(1)	; param map-list
  6798 00004107 8F00                    	pop qword [rax]
  6799 00004109 48B8-                   	mov rax, sob_void
  6799 0000410B [0000000000000000] 
  6800                                  
  6801 00004113 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6802 00004118 E8A8EC0000              	call malloc
  6803 0000411D 50                      	push rax
  6804 0000411E BF10000000              	mov rdi, 8 * 2	; new rib
  6805 00004123 E89DEC0000              	call malloc
  6806 00004128 50                      	push rax
  6807 00004129 BF10000000              	mov rdi, 8 * 2	; extended env
  6808 0000412E E892EC0000              	call malloc
  6809 00004133 488B7D10                	mov rdi, ENV
  6810 00004137 BE00000000              	mov rsi, 0
  6811 0000413C BA01000000              	mov rdx, 1
  6812                                  .L_lambda_opt_env_loop_001e:	; ext_env[i + 1] <-- env[i]
  6813 00004141 4883FE01                	cmp rsi, 1
  6814 00004145 7410                    	je .L_lambda_opt_env_end_001e
  6815 00004147 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6816 0000414B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6817 0000414F 48FFC6                  	inc rsi
  6818 00004152 48FFC2                  	inc rdx
  6819 00004155 EBEA                    	jmp .L_lambda_opt_env_loop_001e
  6820                                  .L_lambda_opt_env_end_001e:
  6821 00004157 5B                      	pop rbx
  6822 00004158 BE00000000              	mov rsi, 0
  6823                                  .L_lambda_opt_params_loop_001e:	; copy params
  6824 0000415D 4883FE02                	cmp rsi, 2
  6825 00004161 740E                    	je .L_lambda_opt_params_end_001e
  6826 00004163 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6827 00004168 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6828 0000416C 48FFC6                  	inc rsi
  6829 0000416F EBEC                    	jmp .L_lambda_opt_params_loop_001e
  6830                                  .L_lambda_opt_params_end_001e:
  6831 00004171 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6832 00004174 4889C3                  	mov rbx, rax
  6833 00004177 58                      	pop rax
  6834 00004178 C60004                  	mov byte [rax], T_closure
  6835 0000417B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6836 0000417F 48C74009[8C410000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_001e
  6837 00004187 E9D6010000              	jmp .L_lambda_opt_end_001e
  6838                                  .L_lambda_opt_code_001e:	; lambda-opt body
  6839 0000418C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6840 00004192 7411                    	je .L_lambda_opt_arity_check_exact_001e
  6841 00004194 0F8FB6000000            	jg .L_lambda_opt_arity_check_more_001e
  6842 0000419A FF742410                	push qword [rsp + 8 * 2]
  6843 0000419E 6A01                    	push 1
  6844 000041A0 E9EDEB0000              	jmp L_error_incorrect_arity_opt
  6845                                  .L_lambda_opt_arity_check_exact_001e:
  6846 000041A5 4883EC08                	sub rsp, 8
  6847 000041A9 488B442408              	mov rax, qword[rsp + 8 *1]
  6848 000041AE 48890424                	mov qword[rsp], rax  
  6849 000041B2 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  6850 000041B7 4889442408              	mov qword[rsp + 8 * 1], rax
  6851 000041BC B802000000              	mov rax, 2
  6852 000041C1 4889442410              	mov qword[rsp + 8 *2], rax
  6853 000041C6 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  6854 000041CB 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  6855 000041D0 48B8-                   	mov rax, sob_nil
  6855 000041D2 [0100000000000000] 
  6856 000041DA 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  6857 000041DF C8000000                	enter 0, 0
  6858                                  	; preparing a non-tail-call
  6859 000041E3 488B4528                	mov rax, PARAM(1)	; param s
  6860 000041E7 50                      	push rax
  6861 000041E8 6A01                    	push 1	; arg count
  6862 000041EA 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6863 000041F2 803805                  	cmp byte [rax], T_undefined
  6864 000041F5 0F849DEA0000            	je L_error_fvar_undefined
  6865 000041FB 803804                  	cmp byte [rax], T_closure
  6866 000041FE 0F8518EB0000            	jne L_error_non_closure
  6867 00004204 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6868 00004207 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6869 0000420A 483D[02000000]          	cmp rax, sob_boolean_false
  6870 00004210 740C                    	je .L_if_else_00a6
  6871 00004212 48B8-                   	mov rax, L_constants + 1
  6871 00004214 [0100000000000000] 
  6872 0000421C EB29                    	jmp .L_if_end_00a6
  6873                                  .L_if_else_00a6:
  6874                                  	; preparing a non-tail-call
  6875 0000421E 488B4528                	mov rax, PARAM(1)	; param s
  6876 00004222 50                      	push rax
  6877 00004223 488B4520                	mov rax, PARAM(0)	; param f
  6878 00004227 50                      	push rax
  6879 00004228 6A02                    	push 2	; arg count
  6880 0000422A 488B4510                	mov rax, ENV
  6881 0000422E 488B00                  	mov rax, qword [rax + 8 * 0]
  6882 00004231 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  6883 00004235 488B00                  	mov rax, qword [rax]
  6884 00004238 803804                  	cmp byte [rax], T_closure
  6885 0000423B 0F85DBEA0000            	jne L_error_non_closure
  6886 00004241 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6887 00004244 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6888                                  .L_if_end_00a6:
  6889 00004247 C9                      	leave
  6890 00004248 C22000                  	ret AND_KILL_FRAME(2)
  6891 0000424B E912010000              	jmp .L_lambda_opt_end_001e	; new closure is in rax
  6892                                  .L_lambda_opt_arity_check_more_001e:
  6893 00004250 488B442410              	mov rax, qword[rsp + 2 * 8]
  6894 00004255 4889C7                  	mov rdi, rax
  6895 00004258 49B9-                   	mov r9, sob_nil
  6895 0000425A [0100000000000000] 
  6896 00004262 4C8B442410              	mov r8, qword[rsp+2*8]
  6897                                  .L_lambda_opt_stack_shrink_loop_001e:
  6898 00004267 4983F801                	cmp r8, 1
  6899 0000426B 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_001e
  6900 0000426D 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  6901 00004272 BF11000000              	mov rdi, 1+8+8	;for pair
  6902 00004277 E849EB0000              	call malloc	 ;to create the pair in the stack
  6903 0000427C C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  6904 0000427F 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  6905 00004283 4C894809                 	mov qword[rax+1+8],r9
  6906 00004287 4989C1                  	mov r9 , rax	 ; for the recursion 
  6907 0000428A 49FFC8                  	dec r8
  6908 0000428D EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_001e
  6909                                  .L_lambda_opt_stack_shrink_loop_exit_001e:
  6910 0000428F 488B442410              	mov rax, qword[rsp + 2 * 8]
  6911 00004294 BF02000000              	mov rdi, 2
  6912 00004299 4829F8                  	sub rax, rdi
  6913 0000429C 4889C7                  	mov rdi, rax
  6914 0000429F 486BC008                	imul rax,8
  6915 000042A3 4801C4                  	add rsp, rax
  6916 000042A6 4889E0                  	mov rax, rsp
  6917 000042A9 4989F8                  	mov r8, rdi
  6918 000042AC 4D6BC008                	imul r8, 8
  6919 000042B0 4C29C0                  	sub rax, r8
  6920 000042B3 4989C2                  	mov r10, rax	; holds the original ret in the stack
  6921 000042B6 4983C218                	add r10, 8*3
  6922 000042BA 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  6923 000042BE 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  6924 000042C1 4D6BC008                	imul r8,8
  6925 000042C5 4C01C0                  	add rax, r8
  6926 000042C8 4C8908                  	mov qword[rax] ,r9
  6927 000042CB 4D89D0                   	mov r8, r10
  6928 000042CE 4983C000                	add r8, 8 * 0
  6929 000042D2 4D8B08                  	mov r9,qword[r8]
  6930 000042D5 4D890CF8                	mov qword [r8 + rdi * 8], r9
  6931 000042D9 4983EA18                	sub r10, 8*3
  6932 000042DD 48C744241002000000      	mov qword [rsp+2*8], 2
  6933 000042E6 498B4208                	mov rax, qword[r10 + 1 * 8]
  6934 000042EA 4889442408              	mov qword[rsp + 1*8] ,rax
  6935 000042EF 498B02                  	mov rax, qword[r10]
  6936 000042F2 48890424                	mov qword[rsp], rax
  6937 000042F6 C8000000                	enter 0, 0
  6938                                  	; preparing a non-tail-call
  6939 000042FA 488B4528                	mov rax, PARAM(1)	; param s
  6940 000042FE 50                      	push rax
  6941 000042FF 6A01                    	push 1	; arg count
  6942 00004301 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6943 00004309 803805                  	cmp byte [rax], T_undefined
  6944 0000430C 0F8486E90000            	je L_error_fvar_undefined
  6945 00004312 803804                  	cmp byte [rax], T_closure
  6946 00004315 0F8501EA0000            	jne L_error_non_closure
  6947 0000431B FF7001                  	push SOB_CLOSURE_ENV(rax)
  6948 0000431E FF5009                  	call SOB_CLOSURE_CODE(rax)
  6949 00004321 483D[02000000]          	cmp rax, sob_boolean_false
  6950 00004327 740C                    	je .L_if_else_00a5
  6951 00004329 48B8-                   	mov rax, L_constants + 1
  6951 0000432B [0100000000000000] 
  6952 00004333 EB29                    	jmp .L_if_end_00a5
  6953                                  .L_if_else_00a5:
  6954                                  	; preparing a non-tail-call
  6955 00004335 488B4528                	mov rax, PARAM(1)	; param s
  6956 00004339 50                      	push rax
  6957 0000433A 488B4520                	mov rax, PARAM(0)	; param f
  6958 0000433E 50                      	push rax
  6959 0000433F 6A02                    	push 2	; arg count
  6960 00004341 488B4510                	mov rax, ENV
  6961 00004345 488B00                  	mov rax, qword [rax + 8 * 0]
  6962 00004348 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  6963 0000434C 488B00                  	mov rax, qword [rax]
  6964 0000434F 803804                  	cmp byte [rax], T_closure
  6965 00004352 0F85C4E90000            	jne L_error_non_closure
  6966 00004358 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6967 0000435B FF5009                  	call SOB_CLOSURE_CODE(rax)
  6968                                  .L_if_end_00a5:
  6969 0000435E C9                      	leave
  6970 0000435F C22000                  	ret AND_KILL_FRAME(2)
  6971                                  .L_lambda_opt_end_001e:	; new closure is in rax
  6972 00004362 C9                      	leave
  6973 00004363 C22000                  	ret AND_KILL_FRAME(2)
  6974                                  .L_lambda_simple_end_00ef:	; new closure is in rax
  6975 00004366 803804                  	cmp byte [rax], T_closure
  6976 00004369 0F85ADE90000            	jne L_error_non_closure
  6977 0000436F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6978 00004372 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6979 00004375 48890425[9C140000]      	mov qword [free_var_103], rax
  6980 0000437D 48B8-                   	mov rax, sob_void
  6980 0000437F [0000000000000000] 
  6981                                  
  6982 00004387 4889C7                  	mov rdi, rax
  6983 0000438A E88BEC0000              	call print_sexpr_if_not_void
  6984 0000438F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6985 00004394 E82CEA0000              	call malloc
  6986 00004399 50                      	push rax
  6987 0000439A BF00000000              	mov rdi, 8 * 0	; new rib
  6988 0000439F E821EA0000              	call malloc
  6989 000043A4 50                      	push rax
  6990 000043A5 BF08000000              	mov rdi, 8 * 1	; extended env
  6991 000043AA E816EA0000              	call malloc
  6992 000043AF 488B7D10                	mov rdi, ENV
  6993 000043B3 BE00000000              	mov rsi, 0
  6994 000043B8 BA01000000              	mov rdx, 1
  6995                                  .L_lambda_simple_env_loop_00f2:	; ext_env[i + 1] <-- env[i]
  6996 000043BD 4883FE00                	cmp rsi, 0
  6997 000043C1 7410                    	je .L_lambda_simple_env_end_00f2
  6998 000043C3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6999 000043C7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7000 000043CB 48FFC6                  	inc rsi
  7001 000043CE 48FFC2                  	inc rdx
  7002 000043D1 EBEA                    	jmp .L_lambda_simple_env_loop_00f2
  7003                                  .L_lambda_simple_env_end_00f2:
  7004 000043D3 5B                      	pop rbx
  7005 000043D4 BE00000000              	mov rsi, 0
  7006                                  .L_lambda_simple_params_loop_00f2:	; copy params
  7007 000043D9 4883FE00                	cmp rsi, 0
  7008 000043DD 740E                    	je .L_lambda_simple_params_end_00f2
  7009 000043DF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7010 000043E4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7011 000043E8 48FFC6                  	inc rsi
  7012 000043EB EBEC                    	jmp .L_lambda_simple_params_loop_00f2
  7013                                  .L_lambda_simple_params_end_00f2:
  7014 000043ED 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7015 000043F0 4889C3                  	mov rbx, rax
  7016 000043F3 58                      	pop rax
  7017 000043F4 C60004                  	mov byte [rax], T_closure
  7018 000043F7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7019 000043FB 48C74009[08440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00f2
  7020 00004403 E90B010000              	jmp .L_lambda_simple_end_00f2
  7021                                  .L_lambda_simple_code_00f2:	; lambda-simple body
  7022 00004408 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7023 0000440E 740B                    	je .L_lambda_simple_arity_check_ok_00f2
  7024 00004410 FF742410                	push qword [rsp + 8 * 2]
  7025 00004414 6A01                    	push 1
  7026 00004416 E963E90000              	jmp L_error_incorrect_arity_simple
  7027                                  .L_lambda_simple_arity_check_ok_00f2:
  7028 0000441B C8000000                	enter 0, 0
  7029                                  	; preparing a non-tail-call
  7030 0000441F 488B4520                	mov rax, PARAM(0)	; param s
  7031 00004423 50                      	push rax
  7032 00004424 48B8-                   	mov rax, L_constants + 1
  7032 00004426 [0100000000000000] 
  7033 0000442E 50                      	push rax
  7034 0000442F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7035 00004434 E88CE90000              	call malloc
  7036 00004439 50                      	push rax
  7037 0000443A BF08000000              	mov rdi, 8 * 1	; new rib
  7038 0000443F E881E90000              	call malloc
  7039 00004444 50                      	push rax
  7040 00004445 BF10000000              	mov rdi, 8 * 2	; extended env
  7041 0000444A E876E90000              	call malloc
  7042 0000444F 488B7D10                	mov rdi, ENV
  7043 00004453 BE00000000              	mov rsi, 0
  7044 00004458 BA01000000              	mov rdx, 1
  7045                                  .L_lambda_simple_env_loop_00f3:	; ext_env[i + 1] <-- env[i]
  7046 0000445D 4883FE01                	cmp rsi, 1
  7047 00004461 7410                    	je .L_lambda_simple_env_end_00f3
  7048 00004463 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7049 00004467 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7050 0000446B 48FFC6                  	inc rsi
  7051 0000446E 48FFC2                  	inc rdx
  7052 00004471 EBEA                    	jmp .L_lambda_simple_env_loop_00f3
  7053                                  .L_lambda_simple_env_end_00f3:
  7054 00004473 5B                      	pop rbx
  7055 00004474 BE00000000              	mov rsi, 0
  7056                                  .L_lambda_simple_params_loop_00f3:	; copy params
  7057 00004479 4883FE01                	cmp rsi, 1
  7058 0000447D 740E                    	je .L_lambda_simple_params_end_00f3
  7059 0000447F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7060 00004484 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7061 00004488 48FFC6                  	inc rsi
  7062 0000448B EBEC                    	jmp .L_lambda_simple_params_loop_00f3
  7063                                  .L_lambda_simple_params_end_00f3:
  7064 0000448D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7065 00004490 4889C3                  	mov rbx, rax
  7066 00004493 58                      	pop rax
  7067 00004494 C60004                  	mov byte [rax], T_closure
  7068 00004497 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7069 0000449B 48C74009[A5440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00f3
  7070 000044A3 EB47                    	jmp .L_lambda_simple_end_00f3
  7071                                  .L_lambda_simple_code_00f3:	; lambda-simple body
  7072 000044A5 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7073 000044AB 740B                    	je .L_lambda_simple_arity_check_ok_00f3
  7074 000044AD FF742410                	push qword [rsp + 8 * 2]
  7075 000044B1 6A02                    	push 2
  7076 000044B3 E9C6E80000              	jmp L_error_incorrect_arity_simple
  7077                                  .L_lambda_simple_arity_check_ok_00f3:
  7078 000044B8 C8000000                	enter 0, 0
  7079                                  	; preparing a non-tail-call
  7080 000044BC 488B4520                	mov rax, PARAM(0)	; param r
  7081 000044C0 50                      	push rax
  7082 000044C1 488B4528                	mov rax, PARAM(1)	; param a
  7083 000044C5 50                      	push rax
  7084 000044C6 6A02                    	push 2	; arg count
  7085 000044C8 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7086 000044D0 803805                  	cmp byte [rax], T_undefined
  7087 000044D3 0F84BFE70000            	je L_error_fvar_undefined
  7088 000044D9 803804                  	cmp byte [rax], T_closure
  7089 000044DC 0F853AE80000            	jne L_error_non_closure
  7090 000044E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7091 000044E5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7092 000044E8 C9                      	leave
  7093 000044E9 C22000                  	ret AND_KILL_FRAME(2)
  7094                                  .L_lambda_simple_end_00f3:	; new closure is in rax
  7095 000044EC 50                      	push rax
  7096 000044ED 6A03                    	push 3	; arg count
  7097 000044EF 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  7098 000044F7 803805                  	cmp byte [rax], T_undefined
  7099 000044FA 0F8498E70000            	je L_error_fvar_undefined
  7100 00004500 803804                  	cmp byte [rax], T_closure
  7101 00004503 0F8513E80000            	jne L_error_non_closure
  7102 00004509 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7103 0000450C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7104 0000450F C9                      	leave
  7105 00004510 C21800                  	ret AND_KILL_FRAME(1)
  7106                                  .L_lambda_simple_end_00f2:	; new closure is in rax
  7107 00004513 48890425[9B150000]      	mov qword [free_var_118], rax
  7108 0000451B 48B8-                   	mov rax, sob_void
  7108 0000451D [0000000000000000] 
  7109                                  
  7110 00004525 4889C7                  	mov rdi, rax
  7111 00004528 E8EDEA0000              	call print_sexpr_if_not_void
  7112                                  	; preparing a non-tail-call
  7113 0000452D 48B8-                   	mov rax, L_constants + 1993
  7113 0000452F [C907000000000000] 
  7114 00004537 50                      	push rax
  7115 00004538 48B8-                   	mov rax, L_constants + 1993
  7115 0000453A [C907000000000000] 
  7116 00004542 50                      	push rax
  7117 00004543 6A02                    	push 2	; arg count
  7118 00004545 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7119 0000454A E876E80000              	call malloc
  7120 0000454F 50                      	push rax
  7121 00004550 BF00000000              	mov rdi, 8 * 0	; new rib
  7122 00004555 E86BE80000              	call malloc
  7123 0000455A 50                      	push rax
  7124 0000455B BF08000000              	mov rdi, 8 * 1	; extended env
  7125 00004560 E860E80000              	call malloc
  7126 00004565 488B7D10                	mov rdi, ENV
  7127 00004569 BE00000000              	mov rsi, 0
  7128 0000456E BA01000000              	mov rdx, 1
  7129                                  .L_lambda_simple_env_loop_00f4:	; ext_env[i + 1] <-- env[i]
  7130 00004573 4883FE00                	cmp rsi, 0
  7131 00004577 7410                    	je .L_lambda_simple_env_end_00f4
  7132 00004579 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7133 0000457D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7134 00004581 48FFC6                  	inc rsi
  7135 00004584 48FFC2                  	inc rdx
  7136 00004587 EBEA                    	jmp .L_lambda_simple_env_loop_00f4
  7137                                  .L_lambda_simple_env_end_00f4:
  7138 00004589 5B                      	pop rbx
  7139 0000458A BE00000000              	mov rsi, 0
  7140                                  .L_lambda_simple_params_loop_00f4:	; copy params
  7141 0000458F 4883FE00                	cmp rsi, 0
  7142 00004593 740E                    	je .L_lambda_simple_params_end_00f4
  7143 00004595 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7144 0000459A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7145 0000459E 48FFC6                  	inc rsi
  7146 000045A1 EBEC                    	jmp .L_lambda_simple_params_loop_00f4
  7147                                  .L_lambda_simple_params_end_00f4:
  7148 000045A3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7149 000045A6 4889C3                  	mov rbx, rax
  7150 000045A9 58                      	pop rax
  7151 000045AA C60004                  	mov byte [rax], T_closure
  7152 000045AD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7153 000045B1 48C74009[BE450000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00f4
  7154 000045B9 E9CE050000              	jmp .L_lambda_simple_end_00f4
  7155                                  .L_lambda_simple_code_00f4:	; lambda-simple body
  7156 000045BE 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7157 000045C4 740B                    	je .L_lambda_simple_arity_check_ok_00f4
  7158 000045C6 FF742410                	push qword [rsp + 8 * 2]
  7159 000045CA 6A02                    	push 2
  7160 000045CC E9ADE70000              	jmp L_error_incorrect_arity_simple
  7161                                  .L_lambda_simple_arity_check_ok_00f4:
  7162 000045D1 C8000000                	enter 0, 0
  7163 000045D5 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  7164 000045D9 488903                  	mov qword [rbx], rax
  7165                                  
  7166 000045DC 488B5D28                	mov rbx, qword [rbp + 8 * (4 + 1)]
  7167 000045E0 488903                  	mov qword [rbx], rax
  7168                                  
  7169 000045E3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7170 000045E8 E8D8E70000              	call malloc
  7171 000045ED 50                      	push rax
  7172 000045EE BF10000000              	mov rdi, 8 * 2	; new rib
  7173 000045F3 E8CDE70000              	call malloc
  7174 000045F8 50                      	push rax
  7175 000045F9 BF10000000              	mov rdi, 8 * 2	; extended env
  7176 000045FE E8C2E70000              	call malloc
  7177 00004603 488B7D10                	mov rdi, ENV
  7178 00004607 BE00000000              	mov rsi, 0
  7179 0000460C BA01000000              	mov rdx, 1
  7180                                  .L_lambda_simple_env_loop_00f5:	; ext_env[i + 1] <-- env[i]
  7181 00004611 4883FE01                	cmp rsi, 1
  7182 00004615 7410                    	je .L_lambda_simple_env_end_00f5
  7183 00004617 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7184 0000461B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7185 0000461F 48FFC6                  	inc rsi
  7186 00004622 48FFC2                  	inc rdx
  7187 00004625 EBEA                    	jmp .L_lambda_simple_env_loop_00f5
  7188                                  .L_lambda_simple_env_end_00f5:
  7189 00004627 5B                      	pop rbx
  7190 00004628 BE00000000              	mov rsi, 0
  7191                                  .L_lambda_simple_params_loop_00f5:	; copy params
  7192 0000462D 4883FE02                	cmp rsi, 2
  7193 00004631 740E                    	je .L_lambda_simple_params_end_00f5
  7194 00004633 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7195 00004638 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7196 0000463C 48FFC6                  	inc rsi
  7197 0000463F EBEC                    	jmp .L_lambda_simple_params_loop_00f5
  7198                                  .L_lambda_simple_params_end_00f5:
  7199 00004641 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7200 00004644 4889C3                  	mov rbx, rax
  7201 00004647 58                      	pop rax
  7202 00004648 C60004                  	mov byte [rax], T_closure
  7203 0000464B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7204 0000464F 48C74009[5C460000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00f5
  7205 00004657 E9E6000000              	jmp .L_lambda_simple_end_00f5
  7206                                  .L_lambda_simple_code_00f5:	; lambda-simple body
  7207 0000465C 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7208 00004662 740B                    	je .L_lambda_simple_arity_check_ok_00f5
  7209 00004664 FF742410                	push qword [rsp + 8 * 2]
  7210 00004668 6A02                    	push 2
  7211 0000466A E90FE70000              	jmp L_error_incorrect_arity_simple
  7212                                  .L_lambda_simple_arity_check_ok_00f5:
  7213 0000466F C8000000                	enter 0, 0
  7214                                  	; preparing a non-tail-call
  7215 00004673 488B4528                	mov rax, PARAM(1)	; param sr
  7216 00004677 50                      	push rax
  7217 00004678 6A01                    	push 1	; arg count
  7218 0000467A 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7219 00004682 803805                  	cmp byte [rax], T_undefined
  7220 00004685 0F840DE60000            	je L_error_fvar_undefined
  7221 0000468B 803804                  	cmp byte [rax], T_closure
  7222 0000468E 0F8588E60000            	jne L_error_non_closure
  7223 00004694 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7224 00004697 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7225 0000469A 483D[02000000]          	cmp rax, sob_boolean_false
  7226 000046A0 7409                    	je .L_if_else_00a7
  7227 000046A2 488B4520                	mov rax, PARAM(0)	; param s1
  7228 000046A6 E993000000              	jmp .L_if_end_00a7
  7229                                  .L_if_else_00a7:
  7230                                  	; preparing a non-tail-call
  7231                                  	; preparing a non-tail-call
  7232                                  	; preparing a non-tail-call
  7233 000046AB 488B4528                	mov rax, PARAM(1)	; param sr
  7234 000046AF 50                      	push rax
  7235 000046B0 6A01                    	push 1	; arg count
  7236 000046B2 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7237 000046BA 803805                  	cmp byte [rax], T_undefined
  7238 000046BD 0F84D5E50000            	je L_error_fvar_undefined
  7239 000046C3 803804                  	cmp byte [rax], T_closure
  7240 000046C6 0F8550E60000            	jne L_error_non_closure
  7241 000046CC FF7001                  	push SOB_CLOSURE_ENV(rax)
  7242 000046CF FF5009                  	call SOB_CLOSURE_CODE(rax)
  7243 000046D2 50                      	push rax
  7244                                  	; preparing a non-tail-call
  7245 000046D3 488B4528                	mov rax, PARAM(1)	; param sr
  7246 000046D7 50                      	push rax
  7247 000046D8 6A01                    	push 1	; arg count
  7248 000046DA 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7249 000046E2 803805                  	cmp byte [rax], T_undefined
  7250 000046E5 0F84ADE50000            	je L_error_fvar_undefined
  7251 000046EB 803804                  	cmp byte [rax], T_closure
  7252 000046EE 0F8528E60000            	jne L_error_non_closure
  7253 000046F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7254 000046F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7255 000046FA 50                      	push rax
  7256 000046FB 6A02                    	push 2	; arg count
  7257 000046FD 488B4510                	mov rax, ENV
  7258 00004701 488B00                  	mov rax, qword [rax + 8 * 0]
  7259 00004704 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7260 00004707 488B00                  	mov rax, qword [rax]
  7261 0000470A 803804                  	cmp byte [rax], T_closure
  7262 0000470D 0F8509E60000            	jne L_error_non_closure
  7263 00004713 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7264 00004716 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7265 00004719 50                      	push rax
  7266 0000471A 488B4520                	mov rax, PARAM(0)	; param s1
  7267 0000471E 50                      	push rax
  7268 0000471F 6A02                    	push 2	; arg count
  7269 00004721 488B4510                	mov rax, ENV
  7270 00004725 488B00                  	mov rax, qword [rax + 8 * 0]
  7271 00004728 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7272 0000472C 488B00                  	mov rax, qword [rax]
  7273 0000472F 803804                  	cmp byte [rax], T_closure
  7274 00004732 0F85E4E50000            	jne L_error_non_closure
  7275 00004738 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7276 0000473B FF5009                  	call SOB_CLOSURE_CODE(rax)
  7277                                  .L_if_end_00a7:
  7278 0000473E C9                      	leave
  7279 0000473F C22000                  	ret AND_KILL_FRAME(2)
  7280                                  .L_lambda_simple_end_00f5:	; new closure is in rax
  7281 00004742 50                      	push rax
  7282 00004743 488B4520                	mov rax, PARAM(0)	; param run-1
  7283 00004747 8F00                    	pop qword [rax]
  7284 00004749 48B8-                   	mov rax, sob_void
  7284 0000474B [0000000000000000] 
  7285                                  
  7286 00004753 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7287 00004758 E868E60000              	call malloc
  7288 0000475D 50                      	push rax
  7289 0000475E BF10000000              	mov rdi, 8 * 2	; new rib
  7290 00004763 E85DE60000              	call malloc
  7291 00004768 50                      	push rax
  7292 00004769 BF10000000              	mov rdi, 8 * 2	; extended env
  7293 0000476E E852E60000              	call malloc
  7294 00004773 488B7D10                	mov rdi, ENV
  7295 00004777 BE00000000              	mov rsi, 0
  7296 0000477C BA01000000              	mov rdx, 1
  7297                                  .L_lambda_simple_env_loop_00f6:	; ext_env[i + 1] <-- env[i]
  7298 00004781 4883FE01                	cmp rsi, 1
  7299 00004785 7410                    	je .L_lambda_simple_env_end_00f6
  7300 00004787 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7301 0000478B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7302 0000478F 48FFC6                  	inc rsi
  7303 00004792 48FFC2                  	inc rdx
  7304 00004795 EBEA                    	jmp .L_lambda_simple_env_loop_00f6
  7305                                  .L_lambda_simple_env_end_00f6:
  7306 00004797 5B                      	pop rbx
  7307 00004798 BE00000000              	mov rsi, 0
  7308                                  .L_lambda_simple_params_loop_00f6:	; copy params
  7309 0000479D 4883FE02                	cmp rsi, 2
  7310 000047A1 740E                    	je .L_lambda_simple_params_end_00f6
  7311 000047A3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7312 000047A8 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7313 000047AC 48FFC6                  	inc rsi
  7314 000047AF EBEC                    	jmp .L_lambda_simple_params_loop_00f6
  7315                                  .L_lambda_simple_params_end_00f6:
  7316 000047B1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7317 000047B4 4889C3                  	mov rbx, rax
  7318 000047B7 58                      	pop rax
  7319 000047B8 C60004                  	mov byte [rax], T_closure
  7320 000047BB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7321 000047BF 48C74009[CC470000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00f6
  7322 000047C7 E9EA000000              	jmp .L_lambda_simple_end_00f6
  7323                                  .L_lambda_simple_code_00f6:	; lambda-simple body
  7324 000047CC 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7325 000047D2 740B                    	je .L_lambda_simple_arity_check_ok_00f6
  7326 000047D4 FF742410                	push qword [rsp + 8 * 2]
  7327 000047D8 6A02                    	push 2
  7328 000047DA E99FE50000              	jmp L_error_incorrect_arity_simple
  7329                                  .L_lambda_simple_arity_check_ok_00f6:
  7330 000047DF C8000000                	enter 0, 0
  7331                                  	; preparing a non-tail-call
  7332 000047E3 488B4520                	mov rax, PARAM(0)	; param s1
  7333 000047E7 50                      	push rax
  7334 000047E8 6A01                    	push 1	; arg count
  7335 000047EA 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7336 000047F2 803805                  	cmp byte [rax], T_undefined
  7337 000047F5 0F849DE40000            	je L_error_fvar_undefined
  7338 000047FB 803804                  	cmp byte [rax], T_closure
  7339 000047FE 0F8518E50000            	jne L_error_non_closure
  7340 00004804 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7341 00004807 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7342 0000480A 483D[02000000]          	cmp rax, sob_boolean_false
  7343 00004810 7409                    	je .L_if_else_00a8
  7344 00004812 488B4528                	mov rax, PARAM(1)	; param s2
  7345 00004816 E997000000              	jmp .L_if_end_00a8
  7346                                  .L_if_else_00a8:
  7347                                  	; preparing a non-tail-call
  7348                                  	; preparing a non-tail-call
  7349 0000481B 488B4528                	mov rax, PARAM(1)	; param s2
  7350 0000481F 50                      	push rax
  7351                                  	; preparing a non-tail-call
  7352 00004820 488B4520                	mov rax, PARAM(0)	; param s1
  7353 00004824 50                      	push rax
  7354 00004825 6A01                    	push 1	; arg count
  7355 00004827 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7356 0000482F 803805                  	cmp byte [rax], T_undefined
  7357 00004832 0F8460E40000            	je L_error_fvar_undefined
  7358 00004838 803804                  	cmp byte [rax], T_closure
  7359 0000483B 0F85DBE40000            	jne L_error_non_closure
  7360 00004841 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7361 00004844 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7362 00004847 50                      	push rax
  7363 00004848 6A02                    	push 2	; arg count
  7364 0000484A 488B4510                	mov rax, ENV
  7365 0000484E 488B00                  	mov rax, qword [rax + 8 * 0]
  7366 00004851 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  7367 00004855 488B00                  	mov rax, qword [rax]
  7368 00004858 803804                  	cmp byte [rax], T_closure
  7369 0000485B 0F85BBE40000            	jne L_error_non_closure
  7370 00004861 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7371 00004864 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7372 00004867 50                      	push rax
  7373                                  	; preparing a non-tail-call
  7374 00004868 488B4520                	mov rax, PARAM(0)	; param s1
  7375 0000486C 50                      	push rax
  7376 0000486D 6A01                    	push 1	; arg count
  7377 0000486F 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7378 00004877 803805                  	cmp byte [rax], T_undefined
  7379 0000487A 0F8418E40000            	je L_error_fvar_undefined
  7380 00004880 803804                  	cmp byte [rax], T_closure
  7381 00004883 0F8593E40000            	jne L_error_non_closure
  7382 00004889 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7383 0000488C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7384 0000488F 50                      	push rax
  7385 00004890 6A02                    	push 2	; arg count
  7386 00004892 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7387 0000489A 803805                  	cmp byte [rax], T_undefined
  7388 0000489D 0F84F5E30000            	je L_error_fvar_undefined
  7389 000048A3 803804                  	cmp byte [rax], T_closure
  7390 000048A6 0F8570E40000            	jne L_error_non_closure
  7391 000048AC FF7001                  	push SOB_CLOSURE_ENV(rax)
  7392 000048AF FF5009                  	call SOB_CLOSURE_CODE(rax)
  7393                                  .L_if_end_00a8:
  7394 000048B2 C9                      	leave
  7395 000048B3 C22000                  	ret AND_KILL_FRAME(2)
  7396                                  .L_lambda_simple_end_00f6:	; new closure is in rax
  7397 000048B6 50                      	push rax
  7398 000048B7 488B4528                	mov rax, PARAM(1)	; param run-2
  7399 000048BB 8F00                    	pop qword [rax]
  7400 000048BD 48B8-                   	mov rax, sob_void
  7400 000048BF [0000000000000000] 
  7401                                  
  7402 000048C7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7403 000048CC E8F4E40000              	call malloc
  7404 000048D1 50                      	push rax
  7405 000048D2 BF10000000              	mov rdi, 8 * 2	; new rib
  7406 000048D7 E8E9E40000              	call malloc
  7407 000048DC 50                      	push rax
  7408 000048DD BF10000000              	mov rdi, 8 * 2	; extended env
  7409 000048E2 E8DEE40000              	call malloc
  7410 000048E7 488B7D10                	mov rdi, ENV
  7411 000048EB BE00000000              	mov rsi, 0
  7412 000048F0 BA01000000              	mov rdx, 1
  7413                                  .L_lambda_opt_env_loop_001f:	; ext_env[i + 1] <-- env[i]
  7414 000048F5 4883FE01                	cmp rsi, 1
  7415 000048F9 7410                    	je .L_lambda_opt_env_end_001f
  7416 000048FB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7417 000048FF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7418 00004903 48FFC6                  	inc rsi
  7419 00004906 48FFC2                  	inc rdx
  7420 00004909 EBEA                    	jmp .L_lambda_opt_env_loop_001f
  7421                                  .L_lambda_opt_env_end_001f:
  7422 0000490B 5B                      	pop rbx
  7423 0000490C BE00000000              	mov rsi, 0
  7424                                  .L_lambda_opt_params_loop_001f:	; copy params
  7425 00004911 4883FE02                	cmp rsi, 2
  7426 00004915 740E                    	je .L_lambda_opt_params_end_001f
  7427 00004917 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7428 0000491C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7429 00004920 48FFC6                  	inc rsi
  7430 00004923 EBEC                    	jmp .L_lambda_opt_params_loop_001f
  7431                                  .L_lambda_opt_params_end_001f:
  7432 00004925 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7433 00004928 4889C3                  	mov rbx, rax
  7434 0000492B 58                      	pop rax
  7435 0000492C C60004                  	mov byte [rax], T_closure
  7436 0000492F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7437 00004933 48C74009[40490000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_001f
  7438 0000493B E948020000              	jmp .L_lambda_opt_end_001f
  7439                                  .L_lambda_opt_code_001f:	; lambda-opt body
  7440 00004940 48837C241000            	cmp qword [rsp + 8 * 2], 0
  7441 00004946 7411                    	je .L_lambda_opt_arity_check_exact_001f
  7442 00004948 0F8FF1000000            	jg .L_lambda_opt_arity_check_more_001f
  7443 0000494E FF742410                	push qword [rsp + 8 * 2]
  7444 00004952 6A00                    	push 0
  7445 00004954 E939E40000              	jmp L_error_incorrect_arity_opt
  7446                                  .L_lambda_opt_arity_check_exact_001f:
  7447 00004959 4883EC08                	sub rsp, 8
  7448 0000495D 488B442408              	mov rax, qword[rsp + 8 *1]
  7449 00004962 48890424                	mov qword[rsp], rax  
  7450 00004966 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  7451 0000496B 4889442408              	mov qword[rsp + 8 * 1], rax
  7452 00004970 B801000000              	mov rax, 1
  7453 00004975 4889442410              	mov qword[rsp + 8 *2], rax
  7454 0000497A 48B8-                   	mov rax, sob_nil
  7454 0000497C [0100000000000000] 
  7455 00004984 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  7456 00004989 C8000000                	enter 0, 0
  7457                                  	; preparing a non-tail-call
  7458 0000498D 488B4520                	mov rax, PARAM(0)	; param s
  7459 00004991 50                      	push rax
  7460 00004992 6A01                    	push 1	; arg count
  7461 00004994 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7462 0000499C 803805                  	cmp byte [rax], T_undefined
  7463 0000499F 0F84F3E20000            	je L_error_fvar_undefined
  7464 000049A5 803804                  	cmp byte [rax], T_closure
  7465 000049A8 0F856EE30000            	jne L_error_non_closure
  7466 000049AE FF7001                  	push SOB_CLOSURE_ENV(rax)
  7467 000049B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7468 000049B4 483D[02000000]          	cmp rax, sob_boolean_false
  7469 000049BA 740C                    	je .L_if_else_00aa
  7470 000049BC 48B8-                   	mov rax, L_constants + 1
  7470 000049BE [0100000000000000] 
  7471 000049C6 EB6E                    	jmp .L_if_end_00aa
  7472                                  .L_if_else_00aa:
  7473                                  	; preparing a non-tail-call
  7474                                  	; preparing a non-tail-call
  7475 000049C8 488B4520                	mov rax, PARAM(0)	; param s
  7476 000049CC 50                      	push rax
  7477 000049CD 6A01                    	push 1	; arg count
  7478 000049CF 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7479 000049D7 803805                  	cmp byte [rax], T_undefined
  7480 000049DA 0F84B8E20000            	je L_error_fvar_undefined
  7481 000049E0 803804                  	cmp byte [rax], T_closure
  7482 000049E3 0F8533E30000            	jne L_error_non_closure
  7483 000049E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7484 000049EC FF5009                  	call SOB_CLOSURE_CODE(rax)
  7485 000049EF 50                      	push rax
  7486                                  	; preparing a non-tail-call
  7487 000049F0 488B4520                	mov rax, PARAM(0)	; param s
  7488 000049F4 50                      	push rax
  7489 000049F5 6A01                    	push 1	; arg count
  7490 000049F7 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7491 000049FF 803805                  	cmp byte [rax], T_undefined
  7492 00004A02 0F8490E20000            	je L_error_fvar_undefined
  7493 00004A08 803804                  	cmp byte [rax], T_closure
  7494 00004A0B 0F850BE30000            	jne L_error_non_closure
  7495 00004A11 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7496 00004A14 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7497 00004A17 50                      	push rax
  7498 00004A18 6A02                    	push 2	; arg count
  7499 00004A1A 488B4510                	mov rax, ENV
  7500 00004A1E 488B00                  	mov rax, qword [rax + 8 * 0]
  7501 00004A21 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7502 00004A24 488B00                  	mov rax, qword [rax]
  7503 00004A27 803804                  	cmp byte [rax], T_closure
  7504 00004A2A 0F85ECE20000            	jne L_error_non_closure
  7505 00004A30 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7506 00004A33 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7507                                  .L_if_end_00aa:
  7508 00004A36 C9                      	leave
  7509 00004A37 C21800                  	ret AND_KILL_FRAME(1)
  7510 00004A3A E949010000              	jmp .L_lambda_opt_end_001f	; new closure is in rax
  7511                                  .L_lambda_opt_arity_check_more_001f:
  7512 00004A3F 488B442410              	mov rax, qword[rsp + 2 * 8]
  7513 00004A44 4889C7                  	mov rdi, rax
  7514 00004A47 49B9-                   	mov r9, sob_nil
  7514 00004A49 [0100000000000000] 
  7515 00004A51 4C8B442410              	mov r8, qword[rsp+2*8]
  7516                                  .L_lambda_opt_stack_shrink_loop_001f:
  7517 00004A56 4983F800                	cmp r8, 0
  7518 00004A5A 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_001f
  7519 00004A5C 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  7520 00004A61 BF11000000              	mov rdi, 1+8+8	;for pair
  7521 00004A66 E85AE30000              	call malloc	 ;to create the pair in the stack
  7522 00004A6B C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  7523 00004A6E 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  7524 00004A72 4C894809                 	mov qword[rax+1+8],r9
  7525 00004A76 4989C1                  	mov r9 , rax	 ; for the recursion 
  7526 00004A79 49FFC8                  	dec r8
  7527 00004A7C EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_001f
  7528                                  .L_lambda_opt_stack_shrink_loop_exit_001f:
  7529 00004A7E 488B442410              	mov rax, qword[rsp + 2 * 8]
  7530 00004A83 BF01000000              	mov rdi, 1
  7531 00004A88 4829F8                  	sub rax, rdi
  7532 00004A8B 4889C7                  	mov rdi, rax
  7533 00004A8E 486BC008                	imul rax,8
  7534 00004A92 4801C4                  	add rsp, rax
  7535 00004A95 4889E0                  	mov rax, rsp
  7536 00004A98 4989F8                  	mov r8, rdi
  7537 00004A9B 4D6BC008                	imul r8, 8
  7538 00004A9F 4C29C0                  	sub rax, r8
  7539 00004AA2 4989C2                  	mov r10, rax	; holds the original ret in the stack
  7540 00004AA5 4983C218                	add r10, 8*3
  7541 00004AA9 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  7542 00004AAD 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  7543 00004AB0 4D6BC008                	imul r8,8
  7544 00004AB4 4C01C0                  	add rax, r8
  7545 00004AB7 4C8908                  	mov qword[rax] ,r9
  7546 00004ABA 4983EA18                 	sub r10, 8*3
  7547 00004ABE 48C744241001000000      	mov qword [rsp+2*8], 1
  7548 00004AC7 498B4208                	mov rax, qword[r10 + 1 * 8]
  7549 00004ACB 4889442408              	mov qword[rsp + 1*8] ,rax
  7550 00004AD0 498B02                  	mov rax, qword[r10]
  7551 00004AD3 48890424                	mov qword[rsp], rax
  7552 00004AD7 C8000000                	enter 0, 0
  7553                                  	; preparing a non-tail-call
  7554 00004ADB 488B4520                	mov rax, PARAM(0)	; param s
  7555 00004ADF 50                      	push rax
  7556 00004AE0 6A01                    	push 1	; arg count
  7557 00004AE2 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7558 00004AEA 803805                  	cmp byte [rax], T_undefined
  7559 00004AED 0F84A5E10000            	je L_error_fvar_undefined
  7560 00004AF3 803804                  	cmp byte [rax], T_closure
  7561 00004AF6 0F8520E20000            	jne L_error_non_closure
  7562 00004AFC FF7001                  	push SOB_CLOSURE_ENV(rax)
  7563 00004AFF FF5009                  	call SOB_CLOSURE_CODE(rax)
  7564 00004B02 483D[02000000]          	cmp rax, sob_boolean_false
  7565 00004B08 740C                    	je .L_if_else_00a9
  7566 00004B0A 48B8-                   	mov rax, L_constants + 1
  7566 00004B0C [0100000000000000] 
  7567 00004B14 EB6E                    	jmp .L_if_end_00a9
  7568                                  .L_if_else_00a9:
  7569                                  	; preparing a non-tail-call
  7570                                  	; preparing a non-tail-call
  7571 00004B16 488B4520                	mov rax, PARAM(0)	; param s
  7572 00004B1A 50                      	push rax
  7573 00004B1B 6A01                    	push 1	; arg count
  7574 00004B1D 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7575 00004B25 803805                  	cmp byte [rax], T_undefined
  7576 00004B28 0F846AE10000            	je L_error_fvar_undefined
  7577 00004B2E 803804                  	cmp byte [rax], T_closure
  7578 00004B31 0F85E5E10000            	jne L_error_non_closure
  7579 00004B37 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7580 00004B3A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7581 00004B3D 50                      	push rax
  7582                                  	; preparing a non-tail-call
  7583 00004B3E 488B4520                	mov rax, PARAM(0)	; param s
  7584 00004B42 50                      	push rax
  7585 00004B43 6A01                    	push 1	; arg count
  7586 00004B45 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7587 00004B4D 803805                  	cmp byte [rax], T_undefined
  7588 00004B50 0F8442E10000            	je L_error_fvar_undefined
  7589 00004B56 803804                  	cmp byte [rax], T_closure
  7590 00004B59 0F85BDE10000            	jne L_error_non_closure
  7591 00004B5F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7592 00004B62 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7593 00004B65 50                      	push rax
  7594 00004B66 6A02                    	push 2	; arg count
  7595 00004B68 488B4510                	mov rax, ENV
  7596 00004B6C 488B00                  	mov rax, qword [rax + 8 * 0]
  7597 00004B6F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  7598 00004B72 488B00                  	mov rax, qword [rax]
  7599 00004B75 803804                  	cmp byte [rax], T_closure
  7600 00004B78 0F859EE10000            	jne L_error_non_closure
  7601 00004B7E FF7001                  	push SOB_CLOSURE_ENV(rax)
  7602 00004B81 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7603                                  .L_if_end_00a9:
  7604 00004B84 C9                      	leave
  7605 00004B85 C21800                  	ret AND_KILL_FRAME(1)
  7606                                  .L_lambda_opt_end_001f:	; new closure is in rax
  7607 00004B88 C9                      	leave
  7608 00004B89 C22000                  	ret AND_KILL_FRAME(2)
  7609                                  .L_lambda_simple_end_00f4:	; new closure is in rax
  7610 00004B8C 803804                  	cmp byte [rax], T_closure
  7611 00004B8F 0F8587E10000            	jne L_error_non_closure
  7612 00004B95 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7613 00004B98 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7614 00004B9B 48890425[E50F0000]      	mov qword [free_var_32], rax
  7615 00004BA3 48B8-                   	mov rax, sob_void
  7615 00004BA5 [0000000000000000] 
  7616                                  
  7617 00004BAD 4889C7                  	mov rdi, rax
  7618 00004BB0 E865E40000              	call print_sexpr_if_not_void
  7619                                  	; preparing a non-tail-call
  7620 00004BB5 48B8-                   	mov rax, L_constants + 1993
  7620 00004BB7 [C907000000000000] 
  7621 00004BBF 50                      	push rax
  7622 00004BC0 6A01                    	push 1	; arg count
  7623 00004BC2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7624 00004BC7 E8F9E10000              	call malloc
  7625 00004BCC 50                      	push rax
  7626 00004BCD BF00000000              	mov rdi, 8 * 0	; new rib
  7627 00004BD2 E8EEE10000              	call malloc
  7628 00004BD7 50                      	push rax
  7629 00004BD8 BF08000000              	mov rdi, 8 * 1	; extended env
  7630 00004BDD E8E3E10000              	call malloc
  7631 00004BE2 488B7D10                	mov rdi, ENV
  7632 00004BE6 BE00000000              	mov rsi, 0
  7633 00004BEB BA01000000              	mov rdx, 1
  7634                                  .L_lambda_simple_env_loop_00f7:	; ext_env[i + 1] <-- env[i]
  7635 00004BF0 4883FE00                	cmp rsi, 0
  7636 00004BF4 7410                    	je .L_lambda_simple_env_end_00f7
  7637 00004BF6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7638 00004BFA 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7639 00004BFE 48FFC6                  	inc rsi
  7640 00004C01 48FFC2                  	inc rdx
  7641 00004C04 EBEA                    	jmp .L_lambda_simple_env_loop_00f7
  7642                                  .L_lambda_simple_env_end_00f7:
  7643 00004C06 5B                      	pop rbx
  7644 00004C07 BE00000000              	mov rsi, 0
  7645                                  .L_lambda_simple_params_loop_00f7:	; copy params
  7646 00004C0C 4883FE00                	cmp rsi, 0
  7647 00004C10 740E                    	je .L_lambda_simple_params_end_00f7
  7648 00004C12 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7649 00004C17 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7650 00004C1B 48FFC6                  	inc rsi
  7651 00004C1E EBEC                    	jmp .L_lambda_simple_params_loop_00f7
  7652                                  .L_lambda_simple_params_end_00f7:
  7653 00004C20 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7654 00004C23 4889C3                  	mov rbx, rax
  7655 00004C26 58                      	pop rax
  7656 00004C27 C60004                  	mov byte [rax], T_closure
  7657 00004C2A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7658 00004C2E 48C74009[3B4C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00f7
  7659 00004C36 E9CE030000              	jmp .L_lambda_simple_end_00f7
  7660                                  .L_lambda_simple_code_00f7:	; lambda-simple body
  7661 00004C3B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7662 00004C41 740B                    	je .L_lambda_simple_arity_check_ok_00f7
  7663 00004C43 FF742410                	push qword [rsp + 8 * 2]
  7664 00004C47 6A01                    	push 1
  7665 00004C49 E930E10000              	jmp L_error_incorrect_arity_simple
  7666                                  .L_lambda_simple_arity_check_ok_00f7:
  7667 00004C4E C8000000                	enter 0, 0
  7668 00004C52 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  7669 00004C56 488903                  	mov qword [rbx], rax
  7670                                  
  7671 00004C59 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7672 00004C5E E862E10000              	call malloc
  7673 00004C63 50                      	push rax
  7674 00004C64 BF08000000              	mov rdi, 8 * 1	; new rib
  7675 00004C69 E857E10000              	call malloc
  7676 00004C6E 50                      	push rax
  7677 00004C6F BF10000000              	mov rdi, 8 * 2	; extended env
  7678 00004C74 E84CE10000              	call malloc
  7679 00004C79 488B7D10                	mov rdi, ENV
  7680 00004C7D BE00000000              	mov rsi, 0
  7681 00004C82 BA01000000              	mov rdx, 1
  7682                                  .L_lambda_simple_env_loop_00f8:	; ext_env[i + 1] <-- env[i]
  7683 00004C87 4883FE01                	cmp rsi, 1
  7684 00004C8B 7410                    	je .L_lambda_simple_env_end_00f8
  7685 00004C8D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7686 00004C91 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7687 00004C95 48FFC6                  	inc rsi
  7688 00004C98 48FFC2                  	inc rdx
  7689 00004C9B EBEA                    	jmp .L_lambda_simple_env_loop_00f8
  7690                                  .L_lambda_simple_env_end_00f8:
  7691 00004C9D 5B                      	pop rbx
  7692 00004C9E BE00000000              	mov rsi, 0
  7693                                  .L_lambda_simple_params_loop_00f8:	; copy params
  7694 00004CA3 4883FE01                	cmp rsi, 1
  7695 00004CA7 740E                    	je .L_lambda_simple_params_end_00f8
  7696 00004CA9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7697 00004CAE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7698 00004CB2 48FFC6                  	inc rsi
  7699 00004CB5 EBEC                    	jmp .L_lambda_simple_params_loop_00f8
  7700                                  .L_lambda_simple_params_end_00f8:
  7701 00004CB7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7702 00004CBA 4889C3                  	mov rbx, rax
  7703 00004CBD 58                      	pop rax
  7704 00004CBE C60004                  	mov byte [rax], T_closure
  7705 00004CC1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7706 00004CC5 48C74009[D24C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00f8
  7707 00004CCD E929010000              	jmp .L_lambda_simple_end_00f8
  7708                                  .L_lambda_simple_code_00f8:	; lambda-simple body
  7709 00004CD2 48837C241003            	cmp qword [rsp + 8 * 2], 3
  7710 00004CD8 740B                    	je .L_lambda_simple_arity_check_ok_00f8
  7711 00004CDA FF742410                	push qword [rsp + 8 * 2]
  7712 00004CDE 6A03                    	push 3
  7713 00004CE0 E999E00000              	jmp L_error_incorrect_arity_simple
  7714                                  .L_lambda_simple_arity_check_ok_00f8:
  7715 00004CE5 C8000000                	enter 0, 0
  7716                                  	; preparing a non-tail-call
  7717 00004CE9 488B4530                	mov rax, PARAM(2)	; param ss
  7718 00004CED 50                      	push rax
  7719 00004CEE 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7720 00004CF6 803805                  	cmp byte [rax], T_undefined
  7721 00004CF9 0F8499DF0000            	je L_error_fvar_undefined
  7722 00004CFF 50                      	push rax
  7723 00004D00 6A02                    	push 2	; arg count
  7724 00004D02 488B0425[13150000]      	mov rax, qword [free_var_110]	; free var ormap
  7725 00004D0A 803805                  	cmp byte [rax], T_undefined
  7726 00004D0D 0F8485DF0000            	je L_error_fvar_undefined
  7727 00004D13 803804                  	cmp byte [rax], T_closure
  7728 00004D16 0F8500E00000            	jne L_error_non_closure
  7729 00004D1C FF7001                  	push SOB_CLOSURE_ENV(rax)
  7730 00004D1F FF5009                  	call SOB_CLOSURE_CODE(rax)
  7731 00004D22 483D[02000000]          	cmp rax, sob_boolean_false
  7732 00004D28 7409                    	je .L_if_else_00ab
  7733 00004D2A 488B4528                	mov rax, PARAM(1)	; param unit
  7734 00004D2E E9C4000000              	jmp .L_if_end_00ab
  7735                                  .L_if_else_00ab:
  7736                                  	; preparing a non-tail-call
  7737                                  	; preparing a non-tail-call
  7738 00004D33 488B4530                	mov rax, PARAM(2)	; param ss
  7739 00004D37 50                      	push rax
  7740 00004D38 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7741 00004D40 803805                  	cmp byte [rax], T_undefined
  7742 00004D43 0F844FDF0000            	je L_error_fvar_undefined
  7743 00004D49 50                      	push rax
  7744 00004D4A 6A02                    	push 2	; arg count
  7745 00004D4C 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  7746 00004D54 803805                  	cmp byte [rax], T_undefined
  7747 00004D57 0F843BDF0000            	je L_error_fvar_undefined
  7748 00004D5D 803804                  	cmp byte [rax], T_closure
  7749 00004D60 0F85B6DF0000            	jne L_error_non_closure
  7750 00004D66 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7751 00004D69 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7752 00004D6C 50                      	push rax
  7753                                  	; preparing a non-tail-call
  7754                                  	; preparing a non-tail-call
  7755 00004D6D 488B4530                	mov rax, PARAM(2)	; param ss
  7756 00004D71 50                      	push rax
  7757 00004D72 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7758 00004D7A 803805                  	cmp byte [rax], T_undefined
  7759 00004D7D 0F8415DF0000            	je L_error_fvar_undefined
  7760 00004D83 50                      	push rax
  7761 00004D84 6A02                    	push 2	; arg count
  7762 00004D86 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  7763 00004D8E 803805                  	cmp byte [rax], T_undefined
  7764 00004D91 0F8401DF0000            	je L_error_fvar_undefined
  7765 00004D97 803804                  	cmp byte [rax], T_closure
  7766 00004D9A 0F857CDF0000            	jne L_error_non_closure
  7767 00004DA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7768 00004DA3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7769 00004DA6 50                      	push rax
  7770 00004DA7 488B4528                	mov rax, PARAM(1)	; param unit
  7771 00004DAB 50                      	push rax
  7772 00004DAC 488B4520                	mov rax, PARAM(0)	; param f
  7773 00004DB0 50                      	push rax
  7774 00004DB1 6A03                    	push 3	; arg count
  7775 00004DB3 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  7776 00004DBB 803805                  	cmp byte [rax], T_undefined
  7777 00004DBE 0F84D4DE0000            	je L_error_fvar_undefined
  7778 00004DC4 803804                  	cmp byte [rax], T_closure
  7779 00004DC7 0F854FDF0000            	jne L_error_non_closure
  7780 00004DCD FF7001                  	push SOB_CLOSURE_ENV(rax)
  7781 00004DD0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7782 00004DD3 50                      	push rax
  7783 00004DD4 488B4520                	mov rax, PARAM(0)	; param f
  7784 00004DD8 50                      	push rax
  7785 00004DD9 6A03                    	push 3	; arg count
  7786 00004DDB 488B4510                	mov rax, ENV
  7787 00004DDF 488B00                  	mov rax, qword [rax + 8 * 0]
  7788 00004DE2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  7789 00004DE5 488B00                  	mov rax, qword [rax]
  7790 00004DE8 803804                  	cmp byte [rax], T_closure
  7791 00004DEB 0F852BDF0000            	jne L_error_non_closure
  7792 00004DF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7793 00004DF4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7794                                  .L_if_end_00ab:
  7795 00004DF7 C9                      	leave
  7796 00004DF8 C22800                  	ret AND_KILL_FRAME(3)
  7797                                  .L_lambda_simple_end_00f8:	; new closure is in rax
  7798 00004DFB 50                      	push rax
  7799 00004DFC 488B4520                	mov rax, PARAM(0)	; param run
  7800 00004E00 8F00                    	pop qword [rax]
  7801 00004E02 48B8-                   	mov rax, sob_void
  7801 00004E04 [0000000000000000] 
  7802                                  
  7803 00004E0C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7804 00004E11 E8AFDF0000              	call malloc
  7805 00004E16 50                      	push rax
  7806 00004E17 BF08000000              	mov rdi, 8 * 1	; new rib
  7807 00004E1C E8A4DF0000              	call malloc
  7808 00004E21 50                      	push rax
  7809 00004E22 BF10000000              	mov rdi, 8 * 2	; extended env
  7810 00004E27 E899DF0000              	call malloc
  7811 00004E2C 488B7D10                	mov rdi, ENV
  7812 00004E30 BE00000000              	mov rsi, 0
  7813 00004E35 BA01000000              	mov rdx, 1
  7814                                  .L_lambda_opt_env_loop_0020:	; ext_env[i + 1] <-- env[i]
  7815 00004E3A 4883FE01                	cmp rsi, 1
  7816 00004E3E 7410                    	je .L_lambda_opt_env_end_0020
  7817 00004E40 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7818 00004E44 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7819 00004E48 48FFC6                  	inc rsi
  7820 00004E4B 48FFC2                  	inc rdx
  7821 00004E4E EBEA                    	jmp .L_lambda_opt_env_loop_0020
  7822                                  .L_lambda_opt_env_end_0020:
  7823 00004E50 5B                      	pop rbx
  7824 00004E51 BE00000000              	mov rsi, 0
  7825                                  .L_lambda_opt_params_loop_0020:	; copy params
  7826 00004E56 4883FE01                	cmp rsi, 1
  7827 00004E5A 740E                    	je .L_lambda_opt_params_end_0020
  7828 00004E5C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7829 00004E61 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7830 00004E65 48FFC6                  	inc rsi
  7831 00004E68 EBEC                    	jmp .L_lambda_opt_params_loop_0020
  7832                                  .L_lambda_opt_params_end_0020:
  7833 00004E6A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7834 00004E6D 4889C3                  	mov rbx, rax
  7835 00004E70 58                      	pop rax
  7836 00004E71 C60004                  	mov byte [rax], T_closure
  7837 00004E74 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7838 00004E78 48C74009[854E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0020
  7839 00004E80 E980010000              	jmp .L_lambda_opt_end_0020
  7840                                  .L_lambda_opt_code_0020:	; lambda-opt body
  7841 00004E85 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7842 00004E8B 7411                    	je .L_lambda_opt_arity_check_exact_0020
  7843 00004E8D 0F8F89000000            	jg .L_lambda_opt_arity_check_more_0020
  7844 00004E93 FF742410                	push qword [rsp + 8 * 2]
  7845 00004E97 6A02                    	push 2
  7846 00004E99 E9F4DE0000              	jmp L_error_incorrect_arity_opt
  7847                                  .L_lambda_opt_arity_check_exact_0020:
  7848 00004E9E 4883EC08                	sub rsp, 8
  7849 00004EA2 488B442408              	mov rax, qword[rsp + 8 *1]
  7850 00004EA7 48890424                	mov qword[rsp], rax  
  7851 00004EAB 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  7852 00004EB0 4889442408              	mov qword[rsp + 8 * 1], rax
  7853 00004EB5 B803000000              	mov rax, 3
  7854 00004EBA 4889442410              	mov qword[rsp + 8 *2], rax
  7855 00004EBF 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  7856 00004EC4 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  7857 00004EC9 488B442428              	mov rax, qword[rsp + 8 * (4 + 1)]
  7858 00004ECE 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  7859 00004ED3 48B8-                   	mov rax, sob_nil
  7859 00004ED5 [0100000000000000] 
  7860 00004EDD 4889442428              	mov qword[rsp + 8 * (3 + 2)], rax
  7861 00004EE2 C8000000                	enter 0, 0
  7862                                  	; preparing a non-tail-call
  7863 00004EE6 488B4530                	mov rax, PARAM(2)	; param ss
  7864 00004EEA 50                      	push rax
  7865 00004EEB 488B4528                	mov rax, PARAM(1)	; param unit
  7866 00004EEF 50                      	push rax
  7867 00004EF0 488B4520                	mov rax, PARAM(0)	; param f
  7868 00004EF4 50                      	push rax
  7869 00004EF5 6A03                    	push 3	; arg count
  7870 00004EF7 488B4510                	mov rax, ENV
  7871 00004EFB 488B00                  	mov rax, qword [rax + 8 * 0]
  7872 00004EFE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  7873 00004F01 488B00                  	mov rax, qword [rax]
  7874 00004F04 803804                  	cmp byte [rax], T_closure
  7875 00004F07 0F850FDE0000            	jne L_error_non_closure
  7876 00004F0D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7877 00004F10 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7878 00004F13 C9                      	leave
  7879 00004F14 C22800                  	ret AND_KILL_FRAME(3)
  7880 00004F17 E9E9000000              	jmp .L_lambda_opt_end_0020	; new closure is in rax
  7881                                  .L_lambda_opt_arity_check_more_0020:
  7882 00004F1C 488B442410              	mov rax, qword[rsp + 2 * 8]
  7883 00004F21 4889C7                  	mov rdi, rax
  7884 00004F24 49B9-                   	mov r9, sob_nil
  7884 00004F26 [0100000000000000] 
  7885 00004F2E 4C8B442410              	mov r8, qword[rsp+2*8]
  7886                                  .L_lambda_opt_stack_shrink_loop_0020:
  7887 00004F33 4983F802                	cmp r8, 2
  7888 00004F37 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0020
  7889 00004F39 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  7890 00004F3E BF11000000              	mov rdi, 1+8+8	;for pair
  7891 00004F43 E87DDE0000              	call malloc	 ;to create the pair in the stack
  7892 00004F48 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  7893 00004F4B 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  7894 00004F4F 4C894809                 	mov qword[rax+1+8],r9
  7895 00004F53 4989C1                  	mov r9 , rax	 ; for the recursion 
  7896 00004F56 49FFC8                  	dec r8
  7897 00004F59 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0020
  7898                                  .L_lambda_opt_stack_shrink_loop_exit_0020:
  7899 00004F5B 488B442410              	mov rax, qword[rsp + 2 * 8]
  7900 00004F60 BF03000000              	mov rdi, 3
  7901 00004F65 4829F8                  	sub rax, rdi
  7902 00004F68 4889C7                  	mov rdi, rax
  7903 00004F6B 486BC008                	imul rax,8
  7904 00004F6F 4801C4                  	add rsp, rax
  7905 00004F72 4889E0                  	mov rax, rsp
  7906 00004F75 4989F8                  	mov r8, rdi
  7907 00004F78 4D6BC008                	imul r8, 8
  7908 00004F7C 4C29C0                  	sub rax, r8
  7909 00004F7F 4989C2                  	mov r10, rax	; holds the original ret in the stack
  7910 00004F82 4983C218                	add r10, 8*3
  7911 00004F86 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  7912 00004F8A 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  7913 00004F8D 4D6BC008                	imul r8,8
  7914 00004F91 4C01C0                  	add rax, r8
  7915 00004F94 4C8908                  	mov qword[rax] ,r9
  7916 00004F97 4D89D0                   	mov r8, r10
  7917 00004F9A 4983C008                	add r8, 8 * 1
  7918 00004F9E 4D8B08                  	mov r9,qword[r8]
  7919 00004FA1 4D890CF8                	mov qword [r8 + rdi * 8], r9
  7920 00004FA5 4D89D0                  	mov r8, r10
  7921 00004FA8 4983C000                	add r8, 8 * 0
  7922 00004FAC 4D8B08                  	mov r9,qword[r8]
  7923 00004FAF 4D890CF8                	mov qword [r8 + rdi * 8], r9
  7924 00004FB3 4983EA18                	sub r10, 8*3
  7925 00004FB7 48C744241003000000      	mov qword [rsp+2*8], 3
  7926 00004FC0 498B4208                	mov rax, qword[r10 + 1 * 8]
  7927 00004FC4 4889442408              	mov qword[rsp + 1*8] ,rax
  7928 00004FC9 498B02                  	mov rax, qword[r10]
  7929 00004FCC 48890424                	mov qword[rsp], rax
  7930 00004FD0 C8000000                	enter 0, 0
  7931                                  	; preparing a non-tail-call
  7932 00004FD4 488B4530                	mov rax, PARAM(2)	; param ss
  7933 00004FD8 50                      	push rax
  7934 00004FD9 488B4528                	mov rax, PARAM(1)	; param unit
  7935 00004FDD 50                      	push rax
  7936 00004FDE 488B4520                	mov rax, PARAM(0)	; param f
  7937 00004FE2 50                      	push rax
  7938 00004FE3 6A03                    	push 3	; arg count
  7939 00004FE5 488B4510                	mov rax, ENV
  7940 00004FE9 488B00                  	mov rax, qword [rax + 8 * 0]
  7941 00004FEC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  7942 00004FEF 488B00                  	mov rax, qword [rax]
  7943 00004FF2 803804                  	cmp byte [rax], T_closure
  7944 00004FF5 0F8521DD0000            	jne L_error_non_closure
  7945 00004FFB FF7001                  	push SOB_CLOSURE_ENV(rax)
  7946 00004FFE FF5009                  	call SOB_CLOSURE_CODE(rax)
  7947 00005001 C9                      	leave
  7948 00005002 C22800                  	ret AND_KILL_FRAME(3)
  7949                                  .L_lambda_opt_end_0020:	; new closure is in rax
  7950 00005005 C9                      	leave
  7951 00005006 C21800                  	ret AND_KILL_FRAME(1)
  7952                                  .L_lambda_simple_end_00f7:	; new closure is in rax
  7953 00005009 803804                  	cmp byte [rax], T_closure
  7954 0000500C 0F850ADD0000            	jne L_error_non_closure
  7955 00005012 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7956 00005015 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7957 00005018 48890425[6A130000]      	mov qword [free_var_85], rax
  7958 00005020 48B8-                   	mov rax, sob_void
  7958 00005022 [0000000000000000] 
  7959                                  
  7960 0000502A 4889C7                  	mov rdi, rax
  7961 0000502D E8E8DF0000              	call print_sexpr_if_not_void
  7962                                  	; preparing a non-tail-call
  7963 00005032 48B8-                   	mov rax, L_constants + 1993
  7963 00005034 [C907000000000000] 
  7964 0000503C 50                      	push rax
  7965 0000503D 6A01                    	push 1	; arg count
  7966 0000503F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7967 00005044 E87CDD0000              	call malloc
  7968 00005049 50                      	push rax
  7969 0000504A BF00000000              	mov rdi, 8 * 0	; new rib
  7970 0000504F E871DD0000              	call malloc
  7971 00005054 50                      	push rax
  7972 00005055 BF08000000              	mov rdi, 8 * 1	; extended env
  7973 0000505A E866DD0000              	call malloc
  7974 0000505F 488B7D10                	mov rdi, ENV
  7975 00005063 BE00000000              	mov rsi, 0
  7976 00005068 BA01000000              	mov rdx, 1
  7977                                  .L_lambda_simple_env_loop_00f9:	; ext_env[i + 1] <-- env[i]
  7978 0000506D 4883FE00                	cmp rsi, 0
  7979 00005071 7410                    	je .L_lambda_simple_env_end_00f9
  7980 00005073 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7981 00005077 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7982 0000507B 48FFC6                  	inc rsi
  7983 0000507E 48FFC2                  	inc rdx
  7984 00005081 EBEA                    	jmp .L_lambda_simple_env_loop_00f9
  7985                                  .L_lambda_simple_env_end_00f9:
  7986 00005083 5B                      	pop rbx
  7987 00005084 BE00000000              	mov rsi, 0
  7988                                  .L_lambda_simple_params_loop_00f9:	; copy params
  7989 00005089 4883FE00                	cmp rsi, 0
  7990 0000508D 740E                    	je .L_lambda_simple_params_end_00f9
  7991 0000508F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7992 00005094 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7993 00005098 48FFC6                  	inc rsi
  7994 0000509B EBEC                    	jmp .L_lambda_simple_params_loop_00f9
  7995                                  .L_lambda_simple_params_end_00f9:
  7996 0000509D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7997 000050A0 4889C3                  	mov rbx, rax
  7998 000050A3 58                      	pop rax
  7999 000050A4 C60004                  	mov byte [rax], T_closure
  8000 000050A7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8001 000050AB 48C74009[B8500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00f9
  8002 000050B3 E91F040000              	jmp .L_lambda_simple_end_00f9
  8003                                  .L_lambda_simple_code_00f9:	; lambda-simple body
  8004 000050B8 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8005 000050BE 740B                    	je .L_lambda_simple_arity_check_ok_00f9
  8006 000050C0 FF742410                	push qword [rsp + 8 * 2]
  8007 000050C4 6A01                    	push 1
  8008 000050C6 E9B3DC0000              	jmp L_error_incorrect_arity_simple
  8009                                  .L_lambda_simple_arity_check_ok_00f9:
  8010 000050CB C8000000                	enter 0, 0
  8011 000050CF 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  8012 000050D3 488903                  	mov qword [rbx], rax
  8013                                  
  8014 000050D6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8015 000050DB E8E5DC0000              	call malloc
  8016 000050E0 50                      	push rax
  8017 000050E1 BF08000000              	mov rdi, 8 * 1	; new rib
  8018 000050E6 E8DADC0000              	call malloc
  8019 000050EB 50                      	push rax
  8020 000050EC BF10000000              	mov rdi, 8 * 2	; extended env
  8021 000050F1 E8CFDC0000              	call malloc
  8022 000050F6 488B7D10                	mov rdi, ENV
  8023 000050FA BE00000000              	mov rsi, 0
  8024 000050FF BA01000000              	mov rdx, 1
  8025                                  .L_lambda_simple_env_loop_00fa:	; ext_env[i + 1] <-- env[i]
  8026 00005104 4883FE01                	cmp rsi, 1
  8027 00005108 7410                    	je .L_lambda_simple_env_end_00fa
  8028 0000510A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8029 0000510E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8030 00005112 48FFC6                  	inc rsi
  8031 00005115 48FFC2                  	inc rdx
  8032 00005118 EBEA                    	jmp .L_lambda_simple_env_loop_00fa
  8033                                  .L_lambda_simple_env_end_00fa:
  8034 0000511A 5B                      	pop rbx
  8035 0000511B BE00000000              	mov rsi, 0
  8036                                  .L_lambda_simple_params_loop_00fa:	; copy params
  8037 00005120 4883FE01                	cmp rsi, 1
  8038 00005124 740E                    	je .L_lambda_simple_params_end_00fa
  8039 00005126 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8040 0000512B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8041 0000512F 48FFC6                  	inc rsi
  8042 00005132 EBEC                    	jmp .L_lambda_simple_params_loop_00fa
  8043                                  .L_lambda_simple_params_end_00fa:
  8044 00005134 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8045 00005137 4889C3                  	mov rbx, rax
  8046 0000513A 58                      	pop rax
  8047 0000513B C60004                  	mov byte [rax], T_closure
  8048 0000513E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8049 00005142 48C74009[4F510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00fa
  8050 0000514A E97A010000              	jmp .L_lambda_simple_end_00fa
  8051                                  .L_lambda_simple_code_00fa:	; lambda-simple body
  8052 0000514F 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8053 00005155 740B                    	je .L_lambda_simple_arity_check_ok_00fa
  8054 00005157 FF742410                	push qword [rsp + 8 * 2]
  8055 0000515B 6A03                    	push 3
  8056 0000515D E91CDC0000              	jmp L_error_incorrect_arity_simple
  8057                                  .L_lambda_simple_arity_check_ok_00fa:
  8058 00005162 C8000000                	enter 0, 0
  8059                                  	; preparing a non-tail-call
  8060 00005166 488B4530                	mov rax, PARAM(2)	; param ss
  8061 0000516A 50                      	push rax
  8062 0000516B 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8063 00005173 803805                  	cmp byte [rax], T_undefined
  8064 00005176 0F841CDB0000            	je L_error_fvar_undefined
  8065 0000517C 50                      	push rax
  8066 0000517D 6A02                    	push 2	; arg count
  8067 0000517F 488B0425[13150000]      	mov rax, qword [free_var_110]	; free var ormap
  8068 00005187 803805                  	cmp byte [rax], T_undefined
  8069 0000518A 0F8408DB0000            	je L_error_fvar_undefined
  8070 00005190 803804                  	cmp byte [rax], T_closure
  8071 00005193 0F8583DB0000            	jne L_error_non_closure
  8072 00005199 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8073 0000519C FF5009                  	call SOB_CLOSURE_CODE(rax)
  8074 0000519F 483D[02000000]          	cmp rax, sob_boolean_false
  8075 000051A5 7409                    	je .L_if_else_00ac
  8076 000051A7 488B4528                	mov rax, PARAM(1)	; param unit
  8077 000051AB E915010000              	jmp .L_if_end_00ac
  8078                                  .L_if_else_00ac:
  8079                                  	; preparing a non-tail-call
  8080                                  	; preparing a non-tail-call
  8081                                  	; preparing a non-tail-call
  8082 000051B0 48B8-                   	mov rax, L_constants + 1
  8082 000051B2 [0100000000000000] 
  8083 000051BA 50                      	push rax
  8084                                  	; preparing a non-tail-call
  8085                                  	; preparing a non-tail-call
  8086 000051BB 488B4530                	mov rax, PARAM(2)	; param ss
  8087 000051BF 50                      	push rax
  8088 000051C0 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8089 000051C8 803805                  	cmp byte [rax], T_undefined
  8090 000051CB 0F84C7DA0000            	je L_error_fvar_undefined
  8091 000051D1 50                      	push rax
  8092 000051D2 6A02                    	push 2	; arg count
  8093 000051D4 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8094 000051DC 803805                  	cmp byte [rax], T_undefined
  8095 000051DF 0F84B3DA0000            	je L_error_fvar_undefined
  8096 000051E5 803804                  	cmp byte [rax], T_closure
  8097 000051E8 0F852EDB0000            	jne L_error_non_closure
  8098 000051EE FF7001                  	push SOB_CLOSURE_ENV(rax)
  8099 000051F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8100 000051F4 50                      	push rax
  8101 000051F5 488B4528                	mov rax, PARAM(1)	; param unit
  8102 000051F9 50                      	push rax
  8103 000051FA 488B4520                	mov rax, PARAM(0)	; param f
  8104 000051FE 50                      	push rax
  8105 000051FF 6A03                    	push 3	; arg count
  8106 00005201 488B4510                	mov rax, ENV
  8107 00005205 488B00                  	mov rax, qword [rax + 8 * 0]
  8108 00005208 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8109 0000520B 488B00                  	mov rax, qword [rax]
  8110 0000520E 803804                  	cmp byte [rax], T_closure
  8111 00005211 0F8505DB0000            	jne L_error_non_closure
  8112 00005217 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8113 0000521A FF5009                  	call SOB_CLOSURE_CODE(rax)
  8114 0000521D 50                      	push rax
  8115 0000521E 6A02                    	push 2	; arg count
  8116 00005220 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  8117 00005228 803805                  	cmp byte [rax], T_undefined
  8118 0000522B 0F8467DA0000            	je L_error_fvar_undefined
  8119 00005231 803804                  	cmp byte [rax], T_closure
  8120 00005234 0F85E2DA0000            	jne L_error_non_closure
  8121 0000523A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8122 0000523D FF5009                  	call SOB_CLOSURE_CODE(rax)
  8123 00005240 50                      	push rax
  8124                                  	; preparing a non-tail-call
  8125 00005241 488B4530                	mov rax, PARAM(2)	; param ss
  8126 00005245 50                      	push rax
  8127 00005246 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8128 0000524E 803805                  	cmp byte [rax], T_undefined
  8129 00005251 0F8441DA0000            	je L_error_fvar_undefined
  8130 00005257 50                      	push rax
  8131 00005258 6A02                    	push 2	; arg count
  8132 0000525A 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8133 00005262 803805                  	cmp byte [rax], T_undefined
  8134 00005265 0F842DDA0000            	je L_error_fvar_undefined
  8135 0000526B 803804                  	cmp byte [rax], T_closure
  8136 0000526E 0F85A8DA0000            	jne L_error_non_closure
  8137 00005274 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8138 00005277 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8139 0000527A 50                      	push rax
  8140 0000527B 6A02                    	push 2	; arg count
  8141 0000527D 488B0425[E50F0000]      	mov rax, qword [free_var_32]	; free var append
  8142 00005285 803805                  	cmp byte [rax], T_undefined
  8143 00005288 0F840ADA0000            	je L_error_fvar_undefined
  8144 0000528E 803804                  	cmp byte [rax], T_closure
  8145 00005291 0F8585DA0000            	jne L_error_non_closure
  8146 00005297 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8147 0000529A FF5009                  	call SOB_CLOSURE_CODE(rax)
  8148 0000529D 50                      	push rax
  8149 0000529E 488B4520                	mov rax, PARAM(0)	; param f
  8150 000052A2 50                      	push rax
  8151 000052A3 6A02                    	push 2	; arg count
  8152 000052A5 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  8153 000052AD 803805                  	cmp byte [rax], T_undefined
  8154 000052B0 0F84E2D90000            	je L_error_fvar_undefined
  8155 000052B6 803804                  	cmp byte [rax], T_closure
  8156 000052B9 0F855DDA0000            	jne L_error_non_closure
  8157 000052BF FF7001                  	push SOB_CLOSURE_ENV(rax)
  8158 000052C2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8159                                  .L_if_end_00ac:
  8160 000052C5 C9                      	leave
  8161 000052C6 C22800                  	ret AND_KILL_FRAME(3)
  8162                                  .L_lambda_simple_end_00fa:	; new closure is in rax
  8163 000052C9 50                      	push rax
  8164 000052CA 488B4520                	mov rax, PARAM(0)	; param run
  8165 000052CE 8F00                    	pop qword [rax]
  8166 000052D0 48B8-                   	mov rax, sob_void
  8166 000052D2 [0000000000000000] 
  8167                                  
  8168 000052DA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8169 000052DF E8E1DA0000              	call malloc
  8170 000052E4 50                      	push rax
  8171 000052E5 BF08000000              	mov rdi, 8 * 1	; new rib
  8172 000052EA E8D6DA0000              	call malloc
  8173 000052EF 50                      	push rax
  8174 000052F0 BF10000000              	mov rdi, 8 * 2	; extended env
  8175 000052F5 E8CBDA0000              	call malloc
  8176 000052FA 488B7D10                	mov rdi, ENV
  8177 000052FE BE00000000              	mov rsi, 0
  8178 00005303 BA01000000              	mov rdx, 1
  8179                                  .L_lambda_opt_env_loop_0021:	; ext_env[i + 1] <-- env[i]
  8180 00005308 4883FE01                	cmp rsi, 1
  8181 0000530C 7410                    	je .L_lambda_opt_env_end_0021
  8182 0000530E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8183 00005312 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8184 00005316 48FFC6                  	inc rsi
  8185 00005319 48FFC2                  	inc rdx
  8186 0000531C EBEA                    	jmp .L_lambda_opt_env_loop_0021
  8187                                  .L_lambda_opt_env_end_0021:
  8188 0000531E 5B                      	pop rbx
  8189 0000531F BE00000000              	mov rsi, 0
  8190                                  .L_lambda_opt_params_loop_0021:	; copy params
  8191 00005324 4883FE01                	cmp rsi, 1
  8192 00005328 740E                    	je .L_lambda_opt_params_end_0021
  8193 0000532A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8194 0000532F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8195 00005333 48FFC6                  	inc rsi
  8196 00005336 EBEC                    	jmp .L_lambda_opt_params_loop_0021
  8197                                  .L_lambda_opt_params_end_0021:
  8198 00005338 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8199 0000533B 4889C3                  	mov rbx, rax
  8200 0000533E 58                      	pop rax
  8201 0000533F C60004                  	mov byte [rax], T_closure
  8202 00005342 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8203 00005346 48C74009[53530000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0021
  8204 0000534E E980010000              	jmp .L_lambda_opt_end_0021
  8205                                  .L_lambda_opt_code_0021:	; lambda-opt body
  8206 00005353 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8207 00005359 7411                    	je .L_lambda_opt_arity_check_exact_0021
  8208 0000535B 0F8F89000000            	jg .L_lambda_opt_arity_check_more_0021
  8209 00005361 FF742410                	push qword [rsp + 8 * 2]
  8210 00005365 6A02                    	push 2
  8211 00005367 E926DA0000              	jmp L_error_incorrect_arity_opt
  8212                                  .L_lambda_opt_arity_check_exact_0021:
  8213 0000536C 4883EC08                	sub rsp, 8
  8214 00005370 488B442408              	mov rax, qword[rsp + 8 *1]
  8215 00005375 48890424                	mov qword[rsp], rax  
  8216 00005379 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  8217 0000537E 4889442408              	mov qword[rsp + 8 * 1], rax
  8218 00005383 B803000000              	mov rax, 3
  8219 00005388 4889442410              	mov qword[rsp + 8 *2], rax
  8220 0000538D 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  8221 00005392 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  8222 00005397 488B442428              	mov rax, qword[rsp + 8 * (4 + 1)]
  8223 0000539C 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  8224 000053A1 48B8-                   	mov rax, sob_nil
  8224 000053A3 [0100000000000000] 
  8225 000053AB 4889442428              	mov qword[rsp + 8 * (3 + 2)], rax
  8226 000053B0 C8000000                	enter 0, 0
  8227                                  	; preparing a non-tail-call
  8228 000053B4 488B4530                	mov rax, PARAM(2)	; param ss
  8229 000053B8 50                      	push rax
  8230 000053B9 488B4528                	mov rax, PARAM(1)	; param unit
  8231 000053BD 50                      	push rax
  8232 000053BE 488B4520                	mov rax, PARAM(0)	; param f
  8233 000053C2 50                      	push rax
  8234 000053C3 6A03                    	push 3	; arg count
  8235 000053C5 488B4510                	mov rax, ENV
  8236 000053C9 488B00                  	mov rax, qword [rax + 8 * 0]
  8237 000053CC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8238 000053CF 488B00                  	mov rax, qword [rax]
  8239 000053D2 803804                  	cmp byte [rax], T_closure
  8240 000053D5 0F8541D90000            	jne L_error_non_closure
  8241 000053DB FF7001                  	push SOB_CLOSURE_ENV(rax)
  8242 000053DE FF5009                  	call SOB_CLOSURE_CODE(rax)
  8243 000053E1 C9                      	leave
  8244 000053E2 C22800                  	ret AND_KILL_FRAME(3)
  8245 000053E5 E9E9000000              	jmp .L_lambda_opt_end_0021	; new closure is in rax
  8246                                  .L_lambda_opt_arity_check_more_0021:
  8247 000053EA 488B442410              	mov rax, qword[rsp + 2 * 8]
  8248 000053EF 4889C7                  	mov rdi, rax
  8249 000053F2 49B9-                   	mov r9, sob_nil
  8249 000053F4 [0100000000000000] 
  8250 000053FC 4C8B442410              	mov r8, qword[rsp+2*8]
  8251                                  .L_lambda_opt_stack_shrink_loop_0021:
  8252 00005401 4983F802                	cmp r8, 2
  8253 00005405 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0021
  8254 00005407 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  8255 0000540C BF11000000              	mov rdi, 1+8+8	;for pair
  8256 00005411 E8AFD90000              	call malloc	 ;to create the pair in the stack
  8257 00005416 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  8258 00005419 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  8259 0000541D 4C894809                 	mov qword[rax+1+8],r9
  8260 00005421 4989C1                  	mov r9 , rax	 ; for the recursion 
  8261 00005424 49FFC8                  	dec r8
  8262 00005427 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0021
  8263                                  .L_lambda_opt_stack_shrink_loop_exit_0021:
  8264 00005429 488B442410              	mov rax, qword[rsp + 2 * 8]
  8265 0000542E BF03000000              	mov rdi, 3
  8266 00005433 4829F8                  	sub rax, rdi
  8267 00005436 4889C7                  	mov rdi, rax
  8268 00005439 486BC008                	imul rax,8
  8269 0000543D 4801C4                  	add rsp, rax
  8270 00005440 4889E0                  	mov rax, rsp
  8271 00005443 4989F8                  	mov r8, rdi
  8272 00005446 4D6BC008                	imul r8, 8
  8273 0000544A 4C29C0                  	sub rax, r8
  8274 0000544D 4989C2                  	mov r10, rax	; holds the original ret in the stack
  8275 00005450 4983C218                	add r10, 8*3
  8276 00005454 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  8277 00005458 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  8278 0000545B 4D6BC008                	imul r8,8
  8279 0000545F 4C01C0                  	add rax, r8
  8280 00005462 4C8908                  	mov qword[rax] ,r9
  8281 00005465 4D89D0                   	mov r8, r10
  8282 00005468 4983C008                	add r8, 8 * 1
  8283 0000546C 4D8B08                  	mov r9,qword[r8]
  8284 0000546F 4D890CF8                	mov qword [r8 + rdi * 8], r9
  8285 00005473 4D89D0                  	mov r8, r10
  8286 00005476 4983C000                	add r8, 8 * 0
  8287 0000547A 4D8B08                  	mov r9,qword[r8]
  8288 0000547D 4D890CF8                	mov qword [r8 + rdi * 8], r9
  8289 00005481 4983EA18                	sub r10, 8*3
  8290 00005485 48C744241003000000      	mov qword [rsp+2*8], 3
  8291 0000548E 498B4208                	mov rax, qword[r10 + 1 * 8]
  8292 00005492 4889442408              	mov qword[rsp + 1*8] ,rax
  8293 00005497 498B02                  	mov rax, qword[r10]
  8294 0000549A 48890424                	mov qword[rsp], rax
  8295 0000549E C8000000                	enter 0, 0
  8296                                  	; preparing a non-tail-call
  8297 000054A2 488B4530                	mov rax, PARAM(2)	; param ss
  8298 000054A6 50                      	push rax
  8299 000054A7 488B4528                	mov rax, PARAM(1)	; param unit
  8300 000054AB 50                      	push rax
  8301 000054AC 488B4520                	mov rax, PARAM(0)	; param f
  8302 000054B0 50                      	push rax
  8303 000054B1 6A03                    	push 3	; arg count
  8304 000054B3 488B4510                	mov rax, ENV
  8305 000054B7 488B00                  	mov rax, qword [rax + 8 * 0]
  8306 000054BA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8307 000054BD 488B00                  	mov rax, qword [rax]
  8308 000054C0 803804                  	cmp byte [rax], T_closure
  8309 000054C3 0F8553D80000            	jne L_error_non_closure
  8310 000054C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8311 000054CC FF5009                  	call SOB_CLOSURE_CODE(rax)
  8312 000054CF C9                      	leave
  8313 000054D0 C22800                  	ret AND_KILL_FRAME(3)
  8314                                  .L_lambda_opt_end_0021:	; new closure is in rax
  8315 000054D3 C9                      	leave
  8316 000054D4 C21800                  	ret AND_KILL_FRAME(1)
  8317                                  .L_lambda_simple_end_00f9:	; new closure is in rax
  8318 000054D7 803804                  	cmp byte [rax], T_closure
  8319 000054DA 0F853CD80000            	jne L_error_non_closure
  8320 000054E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8321 000054E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8322 000054E6 48890425[7B130000]      	mov qword [free_var_86], rax
  8323 000054EE 48B8-                   	mov rax, sob_void
  8323 000054F0 [0000000000000000] 
  8324                                  
  8325 000054F8 4889C7                  	mov rdi, rax
  8326 000054FB E81ADB0000              	call print_sexpr_if_not_void
  8327                                  	; preparing a non-tail-call
  8328 00005500 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8329 00005505 E8BBD80000              	call malloc
  8330 0000550A 50                      	push rax
  8331 0000550B BF00000000              	mov rdi, 8 * 0	; new rib
  8332 00005510 E8B0D80000              	call malloc
  8333 00005515 50                      	push rax
  8334 00005516 BF08000000              	mov rdi, 8 * 1	; extended env
  8335 0000551B E8A5D80000              	call malloc
  8336 00005520 488B7D10                	mov rdi, ENV
  8337 00005524 BE00000000              	mov rsi, 0
  8338 00005529 BA01000000              	mov rdx, 1
  8339                                  .L_lambda_simple_env_loop_00fb:	; ext_env[i + 1] <-- env[i]
  8340 0000552E 4883FE00                	cmp rsi, 0
  8341 00005532 7410                    	je .L_lambda_simple_env_end_00fb
  8342 00005534 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8343 00005538 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8344 0000553C 48FFC6                  	inc rsi
  8345 0000553F 48FFC2                  	inc rdx
  8346 00005542 EBEA                    	jmp .L_lambda_simple_env_loop_00fb
  8347                                  .L_lambda_simple_env_end_00fb:
  8348 00005544 5B                      	pop rbx
  8349 00005545 BE00000000              	mov rsi, 0
  8350                                  .L_lambda_simple_params_loop_00fb:	; copy params
  8351 0000554A 4883FE00                	cmp rsi, 0
  8352 0000554E 740E                    	je .L_lambda_simple_params_end_00fb
  8353 00005550 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8354 00005555 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8355 00005559 48FFC6                  	inc rsi
  8356 0000555C EBEC                    	jmp .L_lambda_simple_params_loop_00fb
  8357                                  .L_lambda_simple_params_end_00fb:
  8358 0000555E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8359 00005561 4889C3                  	mov rbx, rax
  8360 00005564 58                      	pop rax
  8361 00005565 C60004                  	mov byte [rax], T_closure
  8362 00005568 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8363 0000556C 48C74009[76550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00fb
  8364 00005574 EB53                    	jmp .L_lambda_simple_end_00fb
  8365                                  .L_lambda_simple_code_00fb:	; lambda-simple body
  8366 00005576 48837C241000            	cmp qword [rsp + 8 * 2], 0
  8367 0000557C 740B                    	je .L_lambda_simple_arity_check_ok_00fb
  8368 0000557E FF742410                	push qword [rsp + 8 * 2]
  8369 00005582 6A00                    	push 0
  8370 00005584 E9F5D70000              	jmp L_error_incorrect_arity_simple
  8371                                  .L_lambda_simple_arity_check_ok_00fb:
  8372 00005589 C8000000                	enter 0, 0
  8373                                  	; preparing a non-tail-call
  8374 0000558D 48B8-                   	mov rax, L_constants + 2187
  8374 0000558F [8B08000000000000] 
  8375 00005597 50                      	push rax
  8376 00005598 48B8-                   	mov rax, L_constants + 2178
  8376 0000559A [8208000000000000] 
  8377 000055A2 50                      	push rax
  8378 000055A3 6A02                    	push 2	; arg count
  8379 000055A5 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
  8380 000055AD 803805                  	cmp byte [rax], T_undefined
  8381 000055B0 0F84E2D60000            	je L_error_fvar_undefined
  8382 000055B6 803804                  	cmp byte [rax], T_closure
  8383 000055B9 0F855DD70000            	jne L_error_non_closure
  8384 000055BF FF7001                  	push SOB_CLOSURE_ENV(rax)
  8385 000055C2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8386 000055C5 C9                      	leave
  8387 000055C6 C21000                  	ret AND_KILL_FRAME(0)
  8388                                  .L_lambda_simple_end_00fb:	; new closure is in rax
  8389 000055C9 50                      	push rax
  8390 000055CA 6A01                    	push 1	; arg count
  8391 000055CC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8392 000055D1 E8EFD70000              	call malloc
  8393 000055D6 50                      	push rax
  8394 000055D7 BF00000000              	mov rdi, 8 * 0	; new rib
  8395 000055DC E8E4D70000              	call malloc
  8396 000055E1 50                      	push rax
  8397 000055E2 BF08000000              	mov rdi, 8 * 1	; extended env
  8398 000055E7 E8D9D70000              	call malloc
  8399 000055EC 488B7D10                	mov rdi, ENV
  8400 000055F0 BE00000000              	mov rsi, 0
  8401 000055F5 BA01000000              	mov rdx, 1
  8402                                  .L_lambda_simple_env_loop_00fc:	; ext_env[i + 1] <-- env[i]
  8403 000055FA 4883FE00                	cmp rsi, 0
  8404 000055FE 7410                    	je .L_lambda_simple_env_end_00fc
  8405 00005600 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8406 00005604 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8407 00005608 48FFC6                  	inc rsi
  8408 0000560B 48FFC2                  	inc rdx
  8409 0000560E EBEA                    	jmp .L_lambda_simple_env_loop_00fc
  8410                                  .L_lambda_simple_env_end_00fc:
  8411 00005610 5B                      	pop rbx
  8412 00005611 BE00000000              	mov rsi, 0
  8413                                  .L_lambda_simple_params_loop_00fc:	; copy params
  8414 00005616 4883FE00                	cmp rsi, 0
  8415 0000561A 740E                    	je .L_lambda_simple_params_end_00fc
  8416 0000561C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8417 00005621 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8418 00005625 48FFC6                  	inc rsi
  8419 00005628 EBEC                    	jmp .L_lambda_simple_params_loop_00fc
  8420                                  .L_lambda_simple_params_end_00fc:
  8421 0000562A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8422 0000562D 4889C3                  	mov rbx, rax
  8423 00005630 58                      	pop rax
  8424 00005631 C60004                  	mov byte [rax], T_closure
  8425 00005634 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8426 00005638 48C74009[45560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00fc
  8427 00005640 E975080000              	jmp .L_lambda_simple_end_00fc
  8428                                  .L_lambda_simple_code_00fc:	; lambda-simple body
  8429 00005645 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8430 0000564B 740B                    	je .L_lambda_simple_arity_check_ok_00fc
  8431 0000564D FF742410                	push qword [rsp + 8 * 2]
  8432 00005651 6A01                    	push 1
  8433 00005653 E926D70000              	jmp L_error_incorrect_arity_simple
  8434                                  .L_lambda_simple_arity_check_ok_00fc:
  8435 00005658 C8000000                	enter 0, 0
  8436                                  	; preparing a non-tail-call
  8437 0000565C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8438 00005661 E85FD70000              	call malloc
  8439 00005666 50                      	push rax
  8440 00005667 BF08000000              	mov rdi, 8 * 1	; new rib
  8441 0000566C E854D70000              	call malloc
  8442 00005671 50                      	push rax
  8443 00005672 BF10000000              	mov rdi, 8 * 2	; extended env
  8444 00005677 E849D70000              	call malloc
  8445 0000567C 488B7D10                	mov rdi, ENV
  8446 00005680 BE00000000              	mov rsi, 0
  8447 00005685 BA01000000              	mov rdx, 1
  8448                                  .L_lambda_simple_env_loop_00fd:	; ext_env[i + 1] <-- env[i]
  8449 0000568A 4883FE01                	cmp rsi, 1
  8450 0000568E 7410                    	je .L_lambda_simple_env_end_00fd
  8451 00005690 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8452 00005694 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8453 00005698 48FFC6                  	inc rsi
  8454 0000569B 48FFC2                  	inc rdx
  8455 0000569E EBEA                    	jmp .L_lambda_simple_env_loop_00fd
  8456                                  .L_lambda_simple_env_end_00fd:
  8457 000056A0 5B                      	pop rbx
  8458 000056A1 BE00000000              	mov rsi, 0
  8459                                  .L_lambda_simple_params_loop_00fd:	; copy params
  8460 000056A6 4883FE01                	cmp rsi, 1
  8461 000056AA 740E                    	je .L_lambda_simple_params_end_00fd
  8462 000056AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8463 000056B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8464 000056B5 48FFC6                  	inc rsi
  8465 000056B8 EBEC                    	jmp .L_lambda_simple_params_loop_00fd
  8466                                  .L_lambda_simple_params_end_00fd:
  8467 000056BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8468 000056BD 4889C3                  	mov rbx, rax
  8469 000056C0 58                      	pop rax
  8470 000056C1 C60004                  	mov byte [rax], T_closure
  8471 000056C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8472 000056C8 48C74009[D5560000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00fd
  8473 000056D0 E952050000              	jmp .L_lambda_simple_end_00fd
  8474                                  .L_lambda_simple_code_00fd:	; lambda-simple body
  8475 000056D5 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8476 000056DB 740B                    	je .L_lambda_simple_arity_check_ok_00fd
  8477 000056DD FF742410                	push qword [rsp + 8 * 2]
  8478 000056E1 6A02                    	push 2
  8479 000056E3 E996D60000              	jmp L_error_incorrect_arity_simple
  8480                                  .L_lambda_simple_arity_check_ok_00fd:
  8481 000056E8 C8000000                	enter 0, 0
  8482                                  	; preparing a non-tail-call
  8483 000056EC 488B4520                	mov rax, PARAM(0)	; param a
  8484 000056F0 50                      	push rax
  8485 000056F1 6A01                    	push 1	; arg count
  8486 000056F3 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  8487 000056FB 803805                  	cmp byte [rax], T_undefined
  8488 000056FE 0F8494D50000            	je L_error_fvar_undefined
  8489 00005704 803804                  	cmp byte [rax], T_closure
  8490 00005707 0F850FD60000            	jne L_error_non_closure
  8491 0000570D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8492 00005710 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8493 00005713 483D[02000000]          	cmp rax, sob_boolean_false
  8494 00005719 0F8483010000            	je .L_if_else_00b8
  8495                                  	; preparing a non-tail-call
  8496 0000571F 488B4528                	mov rax, PARAM(1)	; param b
  8497 00005723 50                      	push rax
  8498 00005724 6A01                    	push 1	; arg count
  8499 00005726 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  8500 0000572E 803805                  	cmp byte [rax], T_undefined
  8501 00005731 0F8461D50000            	je L_error_fvar_undefined
  8502 00005737 803804                  	cmp byte [rax], T_closure
  8503 0000573A 0F85DCD50000            	jne L_error_non_closure
  8504 00005740 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8505 00005743 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8506 00005746 483D[02000000]          	cmp rax, sob_boolean_false
  8507 0000574C 7431                    	je .L_if_else_00af
  8508                                  	; preparing a non-tail-call
  8509 0000574E 488B4528                	mov rax, PARAM(1)	; param b
  8510 00005752 50                      	push rax
  8511 00005753 488B4520                	mov rax, PARAM(0)	; param a
  8512 00005757 50                      	push rax
  8513 00005758 6A02                    	push 2	; arg count
  8514 0000575A 488B0425[800E0000]      	mov rax, qword [free_var_11]	; free var __bin-add-zz
  8515 00005762 803805                  	cmp byte [rax], T_undefined
  8516 00005765 0F842DD50000            	je L_error_fvar_undefined
  8517 0000576B 803804                  	cmp byte [rax], T_closure
  8518 0000576E 0F85A8D50000            	jne L_error_non_closure
  8519 00005774 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8520 00005777 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8521 0000577A E91E010000              	jmp .L_if_end_00af
  8522                                  .L_if_else_00af:
  8523                                  	; preparing a non-tail-call
  8524 0000577F 488B4528                	mov rax, PARAM(1)	; param b
  8525 00005783 50                      	push rax
  8526 00005784 6A01                    	push 1	; arg count
  8527 00005786 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  8528 0000578E 803805                  	cmp byte [rax], T_undefined
  8529 00005791 0F8401D50000            	je L_error_fvar_undefined
  8530 00005797 803804                  	cmp byte [rax], T_closure
  8531 0000579A 0F857CD50000            	jne L_error_non_closure
  8532 000057A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8533 000057A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8534 000057A6 483D[02000000]          	cmp rax, sob_boolean_false
  8535 000057AC 7454                    	je .L_if_else_00ae
  8536                                  	; preparing a non-tail-call
  8537 000057AE 488B4528                	mov rax, PARAM(1)	; param b
  8538 000057B2 50                      	push rax
  8539                                  	; preparing a non-tail-call
  8540 000057B3 488B4520                	mov rax, PARAM(0)	; param a
  8541 000057B7 50                      	push rax
  8542 000057B8 6A01                    	push 1	; arg count
  8543 000057BA 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  8544 000057C2 803805                  	cmp byte [rax], T_undefined
  8545 000057C5 0F84CDD40000            	je L_error_fvar_undefined
  8546 000057CB 803804                  	cmp byte [rax], T_closure
  8547 000057CE 0F8548D50000            	jne L_error_non_closure
  8548 000057D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8549 000057D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8550 000057DA 50                      	push rax
  8551 000057DB 6A02                    	push 2	; arg count
  8552 000057DD 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  8553 000057E5 803805                  	cmp byte [rax], T_undefined
  8554 000057E8 0F84AAD40000            	je L_error_fvar_undefined
  8555 000057EE 803804                  	cmp byte [rax], T_closure
  8556 000057F1 0F8525D50000            	jne L_error_non_closure
  8557 000057F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8558 000057FA FF5009                  	call SOB_CLOSURE_CODE(rax)
  8559 000057FD E99B000000              	jmp .L_if_end_00ae
  8560                                  .L_if_else_00ae:
  8561                                  	; preparing a non-tail-call
  8562 00005802 488B4528                	mov rax, PARAM(1)	; param b
  8563 00005806 50                      	push rax
  8564 00005807 6A01                    	push 1	; arg count
  8565 00005809 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  8566 00005811 803805                  	cmp byte [rax], T_undefined
  8567 00005814 0F847ED40000            	je L_error_fvar_undefined
  8568 0000581A 803804                  	cmp byte [rax], T_closure
  8569 0000581D 0F85F9D40000            	jne L_error_non_closure
  8570 00005823 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8571 00005826 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8572 00005829 483D[02000000]          	cmp rax, sob_boolean_false
  8573 0000582F 7451                    	je .L_if_else_00ad
  8574                                  	; preparing a non-tail-call
  8575 00005831 488B4528                	mov rax, PARAM(1)	; param b
  8576 00005835 50                      	push rax
  8577                                  	; preparing a non-tail-call
  8578 00005836 488B4520                	mov rax, PARAM(0)	; param a
  8579 0000583A 50                      	push rax
  8580 0000583B 6A01                    	push 1	; arg count
  8581 0000583D 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
  8582 00005845 803805                  	cmp byte [rax], T_undefined
  8583 00005848 0F844AD40000            	je L_error_fvar_undefined
  8584 0000584E 803804                  	cmp byte [rax], T_closure
  8585 00005851 0F85C5D40000            	jne L_error_non_closure
  8586 00005857 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8587 0000585A FF5009                  	call SOB_CLOSURE_CODE(rax)
  8588 0000585D 50                      	push rax
  8589 0000585E 6A02                    	push 2	; arg count
  8590 00005860 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  8591 00005868 803805                  	cmp byte [rax], T_undefined
  8592 0000586B 0F8427D40000            	je L_error_fvar_undefined
  8593 00005871 803804                  	cmp byte [rax], T_closure
  8594 00005874 0F85A2D40000            	jne L_error_non_closure
  8595 0000587A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8596 0000587D FF5009                  	call SOB_CLOSURE_CODE(rax)
  8597 00005880 EB1B                    	jmp .L_if_end_00ad
  8598                                  .L_if_else_00ad:
  8599                                  	; preparing a non-tail-call
  8600 00005882 6A00                    	push 0	; arg count
  8601 00005884 488B4510                	mov rax, ENV
  8602 00005888 488B00                  	mov rax, qword [rax + 8 * 0]
  8603 0000588B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  8604 0000588E 803804                  	cmp byte [rax], T_closure
  8605 00005891 0F8585D40000            	jne L_error_non_closure
  8606 00005897 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8607 0000589A FF5009                  	call SOB_CLOSURE_CODE(rax)
  8608                                  .L_if_end_00ad:
  8609                                  .L_if_end_00ae:
  8610                                  .L_if_end_00af:
  8611 0000589D E981030000              	jmp .L_if_end_00b8
  8612                                  .L_if_else_00b8:
  8613                                  	; preparing a non-tail-call
  8614 000058A2 488B4520                	mov rax, PARAM(0)	; param a
  8615 000058A6 50                      	push rax
  8616 000058A7 6A01                    	push 1	; arg count
  8617 000058A9 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  8618 000058B1 803805                  	cmp byte [rax], T_undefined
  8619 000058B4 0F84DED30000            	je L_error_fvar_undefined
  8620 000058BA 803804                  	cmp byte [rax], T_closure
  8621 000058BD 0F8559D40000            	jne L_error_non_closure
  8622 000058C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8623 000058C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8624 000058C9 483D[02000000]          	cmp rax, sob_boolean_false
  8625 000058CF 0F8483010000            	je .L_if_else_00b7
  8626                                  	; preparing a non-tail-call
  8627 000058D5 488B4528                	mov rax, PARAM(1)	; param b
  8628 000058D9 50                      	push rax
  8629 000058DA 6A01                    	push 1	; arg count
  8630 000058DC 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  8631 000058E4 803805                  	cmp byte [rax], T_undefined
  8632 000058E7 0F84ABD30000            	je L_error_fvar_undefined
  8633 000058ED 803804                  	cmp byte [rax], T_closure
  8634 000058F0 0F8526D40000            	jne L_error_non_closure
  8635 000058F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8636 000058F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8637 000058FC 483D[02000000]          	cmp rax, sob_boolean_false
  8638 00005902 7454                    	je .L_if_else_00b2
  8639                                  	; preparing a non-tail-call
  8640                                  	; preparing a non-tail-call
  8641 00005904 488B4528                	mov rax, PARAM(1)	; param b
  8642 00005908 50                      	push rax
  8643 00005909 6A01                    	push 1	; arg count
  8644 0000590B 488B0425[A10F0000]      	mov rax, qword [free_var_28]	; free var __bin_integer_to_fraction
  8645 00005913 803805                  	cmp byte [rax], T_undefined
  8646 00005916 0F847CD30000            	je L_error_fvar_undefined
  8647 0000591C 803804                  	cmp byte [rax], T_closure
  8648 0000591F 0F85F7D30000            	jne L_error_non_closure
  8649 00005925 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8650 00005928 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8651 0000592B 50                      	push rax
  8652 0000592C 488B4520                	mov rax, PARAM(0)	; param a
  8653 00005930 50                      	push rax
  8654 00005931 6A02                    	push 2	; arg count
  8655 00005933 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  8656 0000593B 803805                  	cmp byte [rax], T_undefined
  8657 0000593E 0F8454D30000            	je L_error_fvar_undefined
  8658 00005944 803804                  	cmp byte [rax], T_closure
  8659 00005947 0F85CFD30000            	jne L_error_non_closure
  8660 0000594D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8661 00005950 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8662 00005953 E9FB000000              	jmp .L_if_end_00b2
  8663                                  .L_if_else_00b2:
  8664                                  	; preparing a non-tail-call
  8665 00005958 488B4528                	mov rax, PARAM(1)	; param b
  8666 0000595C 50                      	push rax
  8667 0000595D 6A01                    	push 1	; arg count
  8668 0000595F 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  8669 00005967 803805                  	cmp byte [rax], T_undefined
  8670 0000596A 0F8428D30000            	je L_error_fvar_undefined
  8671 00005970 803804                  	cmp byte [rax], T_closure
  8672 00005973 0F85A3D30000            	jne L_error_non_closure
  8673 00005979 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8674 0000597C FF5009                  	call SOB_CLOSURE_CODE(rax)
  8675 0000597F 483D[02000000]          	cmp rax, sob_boolean_false
  8676 00005985 7431                    	je .L_if_else_00b1
  8677                                  	; preparing a non-tail-call
  8678 00005987 488B4528                	mov rax, PARAM(1)	; param b
  8679 0000598B 50                      	push rax
  8680 0000598C 488B4520                	mov rax, PARAM(0)	; param a
  8681 00005990 50                      	push rax
  8682 00005991 6A02                    	push 2	; arg count
  8683 00005993 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  8684 0000599B 803805                  	cmp byte [rax], T_undefined
  8685 0000599E 0F84F4D20000            	je L_error_fvar_undefined
  8686 000059A4 803804                  	cmp byte [rax], T_closure
  8687 000059A7 0F856FD30000            	jne L_error_non_closure
  8688 000059AD FF7001                  	push SOB_CLOSURE_ENV(rax)
  8689 000059B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8690 000059B3 E99B000000              	jmp .L_if_end_00b1
  8691                                  .L_if_else_00b1:
  8692                                  	; preparing a non-tail-call
  8693 000059B8 488B4528                	mov rax, PARAM(1)	; param b
  8694 000059BC 50                      	push rax
  8695 000059BD 6A01                    	push 1	; arg count
  8696 000059BF 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  8697 000059C7 803805                  	cmp byte [rax], T_undefined
  8698 000059CA 0F84C8D20000            	je L_error_fvar_undefined
  8699 000059D0 803804                  	cmp byte [rax], T_closure
  8700 000059D3 0F8543D30000            	jne L_error_non_closure
  8701 000059D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8702 000059DC FF5009                  	call SOB_CLOSURE_CODE(rax)
  8703 000059DF 483D[02000000]          	cmp rax, sob_boolean_false
  8704 000059E5 7451                    	je .L_if_else_00b0
  8705                                  	; preparing a non-tail-call
  8706 000059E7 488B4528                	mov rax, PARAM(1)	; param b
  8707 000059EB 50                      	push rax
  8708                                  	; preparing a non-tail-call
  8709 000059EC 488B4520                	mov rax, PARAM(0)	; param a
  8710 000059F0 50                      	push rax
  8711 000059F1 6A01                    	push 1	; arg count
  8712 000059F3 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  8713 000059FB 803805                  	cmp byte [rax], T_undefined
  8714 000059FE 0F8494D20000            	je L_error_fvar_undefined
  8715 00005A04 803804                  	cmp byte [rax], T_closure
  8716 00005A07 0F850FD30000            	jne L_error_non_closure
  8717 00005A0D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8718 00005A10 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8719 00005A13 50                      	push rax
  8720 00005A14 6A02                    	push 2	; arg count
  8721 00005A16 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  8722 00005A1E 803805                  	cmp byte [rax], T_undefined
  8723 00005A21 0F8471D20000            	je L_error_fvar_undefined
  8724 00005A27 803804                  	cmp byte [rax], T_closure
  8725 00005A2A 0F85ECD20000            	jne L_error_non_closure
  8726 00005A30 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8727 00005A33 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8728 00005A36 EB1B                    	jmp .L_if_end_00b0
  8729                                  .L_if_else_00b0:
  8730                                  	; preparing a non-tail-call
  8731 00005A38 6A00                    	push 0	; arg count
  8732 00005A3A 488B4510                	mov rax, ENV
  8733 00005A3E 488B00                  	mov rax, qword [rax + 8 * 0]
  8734 00005A41 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  8735 00005A44 803804                  	cmp byte [rax], T_closure
  8736 00005A47 0F85CFD20000            	jne L_error_non_closure
  8737 00005A4D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8738 00005A50 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8739                                  .L_if_end_00b0:
  8740                                  .L_if_end_00b1:
  8741                                  .L_if_end_00b2:
  8742 00005A53 E9CB010000              	jmp .L_if_end_00b7
  8743                                  .L_if_else_00b7:
  8744                                  	; preparing a non-tail-call
  8745 00005A58 488B4520                	mov rax, PARAM(0)	; param a
  8746 00005A5C 50                      	push rax
  8747 00005A5D 6A01                    	push 1	; arg count
  8748 00005A5F 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  8749 00005A67 803805                  	cmp byte [rax], T_undefined
  8750 00005A6A 0F8428D20000            	je L_error_fvar_undefined
  8751 00005A70 803804                  	cmp byte [rax], T_closure
  8752 00005A73 0F85A3D20000            	jne L_error_non_closure
  8753 00005A79 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8754 00005A7C FF5009                  	call SOB_CLOSURE_CODE(rax)
  8755 00005A7F 483D[02000000]          	cmp rax, sob_boolean_false
  8756 00005A85 0F847D010000            	je .L_if_else_00b6
  8757                                  	; preparing a non-tail-call
  8758 00005A8B 488B4528                	mov rax, PARAM(1)	; param b
  8759 00005A8F 50                      	push rax
  8760 00005A90 6A01                    	push 1	; arg count
  8761 00005A92 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  8762 00005A9A 803805                  	cmp byte [rax], T_undefined
  8763 00005A9D 0F84F5D10000            	je L_error_fvar_undefined
  8764 00005AA3 803804                  	cmp byte [rax], T_closure
  8765 00005AA6 0F8570D20000            	jne L_error_non_closure
  8766 00005AAC FF7001                  	push SOB_CLOSURE_ENV(rax)
  8767 00005AAF FF5009                  	call SOB_CLOSURE_CODE(rax)
  8768 00005AB2 483D[02000000]          	cmp rax, sob_boolean_false
  8769 00005AB8 7454                    	je .L_if_else_00b5
  8770                                  	; preparing a non-tail-call
  8771                                  	; preparing a non-tail-call
  8772 00005ABA 488B4528                	mov rax, PARAM(1)	; param b
  8773 00005ABE 50                      	push rax
  8774 00005ABF 6A01                    	push 1	; arg count
  8775 00005AC1 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
  8776 00005AC9 803805                  	cmp byte [rax], T_undefined
  8777 00005ACC 0F84C6D10000            	je L_error_fvar_undefined
  8778 00005AD2 803804                  	cmp byte [rax], T_closure
  8779 00005AD5 0F8541D20000            	jne L_error_non_closure
  8780 00005ADB FF7001                  	push SOB_CLOSURE_ENV(rax)
  8781 00005ADE FF5009                  	call SOB_CLOSURE_CODE(rax)
  8782 00005AE1 50                      	push rax
  8783 00005AE2 488B4520                	mov rax, PARAM(0)	; param a
  8784 00005AE6 50                      	push rax
  8785 00005AE7 6A02                    	push 2	; arg count
  8786 00005AE9 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  8787 00005AF1 803805                  	cmp byte [rax], T_undefined
  8788 00005AF4 0F849ED10000            	je L_error_fvar_undefined
  8789 00005AFA 803804                  	cmp byte [rax], T_closure
  8790 00005AFD 0F8519D20000            	jne L_error_non_closure
  8791 00005B03 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8792 00005B06 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8793 00005B09 E9F8000000              	jmp .L_if_end_00b5
  8794                                  .L_if_else_00b5:
  8795                                  	; preparing a non-tail-call
  8796 00005B0E 488B4528                	mov rax, PARAM(1)	; param b
  8797 00005B12 50                      	push rax
  8798 00005B13 6A01                    	push 1	; arg count
  8799 00005B15 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  8800 00005B1D 803805                  	cmp byte [rax], T_undefined
  8801 00005B20 0F8472D10000            	je L_error_fvar_undefined
  8802 00005B26 803804                  	cmp byte [rax], T_closure
  8803 00005B29 0F85EDD10000            	jne L_error_non_closure
  8804 00005B2F FF7001                  	push SOB_CLOSURE_ENV(rax)
  8805 00005B32 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8806 00005B35 483D[02000000]          	cmp rax, sob_boolean_false
  8807 00005B3B 7451                    	je .L_if_else_00b4
  8808                                  	; preparing a non-tail-call
  8809                                  	; preparing a non-tail-call
  8810 00005B3D 488B4528                	mov rax, PARAM(1)	; param b
  8811 00005B41 50                      	push rax
  8812 00005B42 6A01                    	push 1	; arg count
  8813 00005B44 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  8814 00005B4C 803805                  	cmp byte [rax], T_undefined
  8815 00005B4F 0F8443D10000            	je L_error_fvar_undefined
  8816 00005B55 803804                  	cmp byte [rax], T_closure
  8817 00005B58 0F85BED10000            	jne L_error_non_closure
  8818 00005B5E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8819 00005B61 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8820 00005B64 50                      	push rax
  8821 00005B65 488B4520                	mov rax, PARAM(0)	; param a
  8822 00005B69 50                      	push rax
  8823 00005B6A 6A02                    	push 2	; arg count
  8824 00005B6C 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  8825 00005B74 803805                  	cmp byte [rax], T_undefined
  8826 00005B77 0F841BD10000            	je L_error_fvar_undefined
  8827 00005B7D 803804                  	cmp byte [rax], T_closure
  8828 00005B80 0F8596D10000            	jne L_error_non_closure
  8829 00005B86 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8830 00005B89 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8831 00005B8C EB78                    	jmp .L_if_end_00b4
  8832                                  .L_if_else_00b4:
  8833                                  	; preparing a non-tail-call
  8834 00005B8E 488B4528                	mov rax, PARAM(1)	; param b
  8835 00005B92 50                      	push rax
  8836 00005B93 6A01                    	push 1	; arg count
  8837 00005B95 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  8838 00005B9D 803805                  	cmp byte [rax], T_undefined
  8839 00005BA0 0F84F2D00000            	je L_error_fvar_undefined
  8840 00005BA6 803804                  	cmp byte [rax], T_closure
  8841 00005BA9 0F856DD10000            	jne L_error_non_closure
  8842 00005BAF FF7001                  	push SOB_CLOSURE_ENV(rax)
  8843 00005BB2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8844 00005BB5 483D[02000000]          	cmp rax, sob_boolean_false
  8845 00005BBB 742E                    	je .L_if_else_00b3
  8846                                  	; preparing a non-tail-call
  8847 00005BBD 488B4528                	mov rax, PARAM(1)	; param b
  8848 00005BC1 50                      	push rax
  8849 00005BC2 488B4520                	mov rax, PARAM(0)	; param a
  8850 00005BC6 50                      	push rax
  8851 00005BC7 6A02                    	push 2	; arg count
  8852 00005BC9 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  8853 00005BD1 803805                  	cmp byte [rax], T_undefined
  8854 00005BD4 0F84BED00000            	je L_error_fvar_undefined
  8855 00005BDA 803804                  	cmp byte [rax], T_closure
  8856 00005BDD 0F8539D10000            	jne L_error_non_closure
  8857 00005BE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8858 00005BE6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8859 00005BE9 EB1B                    	jmp .L_if_end_00b3
  8860                                  .L_if_else_00b3:
  8861                                  	; preparing a non-tail-call
  8862 00005BEB 6A00                    	push 0	; arg count
  8863 00005BED 488B4510                	mov rax, ENV
  8864 00005BF1 488B00                  	mov rax, qword [rax + 8 * 0]
  8865 00005BF4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  8866 00005BF7 803804                  	cmp byte [rax], T_closure
  8867 00005BFA 0F851CD10000            	jne L_error_non_closure
  8868 00005C00 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8869 00005C03 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8870                                  .L_if_end_00b3:
  8871                                  .L_if_end_00b4:
  8872                                  .L_if_end_00b5:
  8873 00005C06 EB1B                    	jmp .L_if_end_00b6
  8874                                  .L_if_else_00b6:
  8875                                  	; preparing a non-tail-call
  8876 00005C08 6A00                    	push 0	; arg count
  8877 00005C0A 488B4510                	mov rax, ENV
  8878 00005C0E 488B00                  	mov rax, qword [rax + 8 * 0]
  8879 00005C11 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  8880 00005C14 803804                  	cmp byte [rax], T_closure
  8881 00005C17 0F85FFD00000            	jne L_error_non_closure
  8882 00005C1D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8883 00005C20 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8884                                  .L_if_end_00b6:
  8885                                  .L_if_end_00b7:
  8886                                  .L_if_end_00b8:
  8887 00005C23 C9                      	leave
  8888 00005C24 C22000                  	ret AND_KILL_FRAME(2)
  8889                                  .L_lambda_simple_end_00fd:	; new closure is in rax
  8890 00005C27 50                      	push rax
  8891 00005C28 6A01                    	push 1	; arg count
  8892 00005C2A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8893 00005C2F E891D10000              	call malloc
  8894 00005C34 50                      	push rax
  8895 00005C35 BF08000000              	mov rdi, 8 * 1	; new rib
  8896 00005C3A E886D10000              	call malloc
  8897 00005C3F 50                      	push rax
  8898 00005C40 BF10000000              	mov rdi, 8 * 2	; extended env
  8899 00005C45 E87BD10000              	call malloc
  8900 00005C4A 488B7D10                	mov rdi, ENV
  8901 00005C4E BE00000000              	mov rsi, 0
  8902 00005C53 BA01000000              	mov rdx, 1
  8903                                  .L_lambda_simple_env_loop_00fe:	; ext_env[i + 1] <-- env[i]
  8904 00005C58 4883FE01                	cmp rsi, 1
  8905 00005C5C 7410                    	je .L_lambda_simple_env_end_00fe
  8906 00005C5E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8907 00005C62 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8908 00005C66 48FFC6                  	inc rsi
  8909 00005C69 48FFC2                  	inc rdx
  8910 00005C6C EBEA                    	jmp .L_lambda_simple_env_loop_00fe
  8911                                  .L_lambda_simple_env_end_00fe:
  8912 00005C6E 5B                      	pop rbx
  8913 00005C6F BE00000000              	mov rsi, 0
  8914                                  .L_lambda_simple_params_loop_00fe:	; copy params
  8915 00005C74 4883FE01                	cmp rsi, 1
  8916 00005C78 740E                    	je .L_lambda_simple_params_end_00fe
  8917 00005C7A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8918 00005C7F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8919 00005C83 48FFC6                  	inc rsi
  8920 00005C86 EBEC                    	jmp .L_lambda_simple_params_loop_00fe
  8921                                  .L_lambda_simple_params_end_00fe:
  8922 00005C88 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8923 00005C8B 4889C3                  	mov rbx, rax
  8924 00005C8E 58                      	pop rax
  8925 00005C8F C60004                  	mov byte [rax], T_closure
  8926 00005C92 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8927 00005C96 48C74009[A35C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00fe
  8928 00005C9E E904020000              	jmp .L_lambda_simple_end_00fe
  8929                                  .L_lambda_simple_code_00fe:	; lambda-simple body
  8930 00005CA3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8931 00005CA9 740B                    	je .L_lambda_simple_arity_check_ok_00fe
  8932 00005CAB FF742410                	push qword [rsp + 8 * 2]
  8933 00005CAF 6A01                    	push 1
  8934 00005CB1 E9C8D00000              	jmp L_error_incorrect_arity_simple
  8935                                  .L_lambda_simple_arity_check_ok_00fe:
  8936 00005CB6 C8000000                	enter 0, 0
  8937 00005CBA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8938 00005CBF E801D10000              	call malloc
  8939 00005CC4 50                      	push rax
  8940 00005CC5 BF08000000              	mov rdi, 8 * 1	; new rib
  8941 00005CCA E8F6D00000              	call malloc
  8942 00005CCF 50                      	push rax
  8943 00005CD0 BF18000000              	mov rdi, 8 * 3	; extended env
  8944 00005CD5 E8EBD00000              	call malloc
  8945 00005CDA 488B7D10                	mov rdi, ENV
  8946 00005CDE BE00000000              	mov rsi, 0
  8947 00005CE3 BA01000000              	mov rdx, 1
  8948                                  .L_lambda_opt_env_loop_0022:	; ext_env[i + 1] <-- env[i]
  8949 00005CE8 4883FE02                	cmp rsi, 2
  8950 00005CEC 7410                    	je .L_lambda_opt_env_end_0022
  8951 00005CEE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8952 00005CF2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8953 00005CF6 48FFC6                  	inc rsi
  8954 00005CF9 48FFC2                  	inc rdx
  8955 00005CFC EBEA                    	jmp .L_lambda_opt_env_loop_0022
  8956                                  .L_lambda_opt_env_end_0022:
  8957 00005CFE 5B                      	pop rbx
  8958 00005CFF BE00000000              	mov rsi, 0
  8959                                  .L_lambda_opt_params_loop_0022:	; copy params
  8960 00005D04 4883FE01                	cmp rsi, 1
  8961 00005D08 740E                    	je .L_lambda_opt_params_end_0022
  8962 00005D0A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8963 00005D0F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8964 00005D13 48FFC6                  	inc rsi
  8965 00005D16 EBEC                    	jmp .L_lambda_opt_params_loop_0022
  8966                                  .L_lambda_opt_params_end_0022:
  8967 00005D18 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8968 00005D1B 4889C3                  	mov rbx, rax
  8969 00005D1E 58                      	pop rax
  8970 00005D1F C60004                  	mov byte [rax], T_closure
  8971 00005D22 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8972 00005D26 48C74009[335D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0022
  8973 00005D2E E970010000              	jmp .L_lambda_opt_end_0022
  8974                                  .L_lambda_opt_code_0022:	; lambda-opt body
  8975 00005D33 48837C241000            	cmp qword [rsp + 8 * 2], 0
  8976 00005D39 7411                    	je .L_lambda_opt_arity_check_exact_0022
  8977 00005D3B 0F8F85000000            	jg .L_lambda_opt_arity_check_more_0022
  8978 00005D41 FF742410                	push qword [rsp + 8 * 2]
  8979 00005D45 6A00                    	push 0
  8980 00005D47 E946D00000              	jmp L_error_incorrect_arity_opt
  8981                                  .L_lambda_opt_arity_check_exact_0022:
  8982 00005D4C 4883EC08                	sub rsp, 8
  8983 00005D50 488B442408              	mov rax, qword[rsp + 8 *1]
  8984 00005D55 48890424                	mov qword[rsp], rax  
  8985 00005D59 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  8986 00005D5E 4889442408              	mov qword[rsp + 8 * 1], rax
  8987 00005D63 B801000000              	mov rax, 1
  8988 00005D68 4889442410              	mov qword[rsp + 8 *2], rax
  8989 00005D6D 48B8-                   	mov rax, sob_nil
  8989 00005D6F [0100000000000000] 
  8990 00005D77 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  8991 00005D7C C8000000                	enter 0, 0
  8992                                  	; preparing a non-tail-call
  8993 00005D80 488B4520                	mov rax, PARAM(0)	; param s
  8994 00005D84 50                      	push rax
  8995 00005D85 48B8-                   	mov rax, L_constants + 2135
  8995 00005D87 [5708000000000000] 
  8996 00005D8F 50                      	push rax
  8997 00005D90 488B4510                	mov rax, ENV
  8998 00005D94 488B00                  	mov rax, qword [rax + 8 * 0]
  8999 00005D97 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
  9000 00005D9A 50                      	push rax
  9001 00005D9B 6A03                    	push 3	; arg count
  9002 00005D9D 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  9003 00005DA5 803805                  	cmp byte [rax], T_undefined
  9004 00005DA8 0F84EACE0000            	je L_error_fvar_undefined
  9005 00005DAE 803804                  	cmp byte [rax], T_closure
  9006 00005DB1 0F8565CF0000            	jne L_error_non_closure
  9007 00005DB7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9008 00005DBA FF5009                  	call SOB_CLOSURE_CODE(rax)
  9009 00005DBD C9                      	leave
  9010 00005DBE C21800                  	ret AND_KILL_FRAME(1)
  9011 00005DC1 E9DD000000              	jmp .L_lambda_opt_end_0022	; new closure is in rax
  9012                                  .L_lambda_opt_arity_check_more_0022:
  9013 00005DC6 488B442410              	mov rax, qword[rsp + 2 * 8]
  9014 00005DCB 4889C7                  	mov rdi, rax
  9015 00005DCE 49B9-                   	mov r9, sob_nil
  9015 00005DD0 [0100000000000000] 
  9016 00005DD8 4C8B442410              	mov r8, qword[rsp+2*8]
  9017                                  .L_lambda_opt_stack_shrink_loop_0022:
  9018 00005DDD 4983F800                	cmp r8, 0
  9019 00005DE1 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0022
  9020 00005DE3 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  9021 00005DE8 BF11000000              	mov rdi, 1+8+8	;for pair
  9022 00005DED E8D3CF0000              	call malloc	 ;to create the pair in the stack
  9023 00005DF2 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  9024 00005DF5 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  9025 00005DF9 4C894809                 	mov qword[rax+1+8],r9
  9026 00005DFD 4989C1                  	mov r9 , rax	 ; for the recursion 
  9027 00005E00 49FFC8                  	dec r8
  9028 00005E03 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0022
  9029                                  .L_lambda_opt_stack_shrink_loop_exit_0022:
  9030 00005E05 488B442410              	mov rax, qword[rsp + 2 * 8]
  9031 00005E0A BF01000000              	mov rdi, 1
  9032 00005E0F 4829F8                  	sub rax, rdi
  9033 00005E12 4889C7                  	mov rdi, rax
  9034 00005E15 486BC008                	imul rax,8
  9035 00005E19 4801C4                  	add rsp, rax
  9036 00005E1C 4889E0                  	mov rax, rsp
  9037 00005E1F 4989F8                  	mov r8, rdi
  9038 00005E22 4D6BC008                	imul r8, 8
  9039 00005E26 4C29C0                  	sub rax, r8
  9040 00005E29 4989C2                  	mov r10, rax	; holds the original ret in the stack
  9041 00005E2C 4983C218                	add r10, 8*3
  9042 00005E30 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  9043 00005E34 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  9044 00005E37 4D6BC008                	imul r8,8
  9045 00005E3B 4C01C0                  	add rax, r8
  9046 00005E3E 4C8908                  	mov qword[rax] ,r9
  9047 00005E41 4983EA18                 	sub r10, 8*3
  9048 00005E45 48C744241001000000      	mov qword [rsp+2*8], 1
  9049 00005E4E 498B4208                	mov rax, qword[r10 + 1 * 8]
  9050 00005E52 4889442408              	mov qword[rsp + 1*8] ,rax
  9051 00005E57 498B02                  	mov rax, qword[r10]
  9052 00005E5A 48890424                	mov qword[rsp], rax
  9053 00005E5E C8000000                	enter 0, 0
  9054                                  	; preparing a non-tail-call
  9055 00005E62 488B4520                	mov rax, PARAM(0)	; param s
  9056 00005E66 50                      	push rax
  9057 00005E67 48B8-                   	mov rax, L_constants + 2135
  9057 00005E69 [5708000000000000] 
  9058 00005E71 50                      	push rax
  9059 00005E72 488B4510                	mov rax, ENV
  9060 00005E76 488B00                  	mov rax, qword [rax + 8 * 0]
  9061 00005E79 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
  9062 00005E7C 50                      	push rax
  9063 00005E7D 6A03                    	push 3	; arg count
  9064 00005E7F 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  9065 00005E87 803805                  	cmp byte [rax], T_undefined
  9066 00005E8A 0F8408CE0000            	je L_error_fvar_undefined
  9067 00005E90 803804                  	cmp byte [rax], T_closure
  9068 00005E93 0F8583CE0000            	jne L_error_non_closure
  9069 00005E99 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9070 00005E9C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9071 00005E9F C9                      	leave
  9072 00005EA0 C21800                  	ret AND_KILL_FRAME(1)
  9073                                  .L_lambda_opt_end_0022:	; new closure is in rax
  9074 00005EA3 C9                      	leave
  9075 00005EA4 C21800                  	ret AND_KILL_FRAME(1)
  9076                                  .L_lambda_simple_end_00fe:	; new closure is in rax
  9077 00005EA7 803804                  	cmp byte [rax], T_closure
  9078 00005EAA 0F856CCE0000            	jne L_error_non_closure
  9079 00005EB0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9080 00005EB3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9081 00005EB6 C9                      	leave
  9082 00005EB7 C21800                  	ret AND_KILL_FRAME(1)
  9083                                  .L_lambda_simple_end_00fc:	; new closure is in rax
  9084 00005EBA 803804                  	cmp byte [rax], T_closure
  9085 00005EBD 0F8559CE0000            	jne L_error_non_closure
  9086 00005EC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9087 00005EC6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9088 00005EC9 48890425[D60D0000]      	mov qword [free_var_1], rax
  9089 00005ED1 48B8-                   	mov rax, sob_void
  9089 00005ED3 [0000000000000000] 
  9090                                  
  9091 00005EDB 4889C7                  	mov rdi, rax
  9092 00005EDE E837D10000              	call print_sexpr_if_not_void
  9093                                  	; preparing a non-tail-call
  9094 00005EE3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9095 00005EE8 E8D8CE0000              	call malloc
  9096 00005EED 50                      	push rax
  9097 00005EEE BF00000000              	mov rdi, 8 * 0	; new rib
  9098 00005EF3 E8CDCE0000              	call malloc
  9099 00005EF8 50                      	push rax
  9100 00005EF9 BF08000000              	mov rdi, 8 * 1	; extended env
  9101 00005EFE E8C2CE0000              	call malloc
  9102 00005F03 488B7D10                	mov rdi, ENV
  9103 00005F07 BE00000000              	mov rsi, 0
  9104 00005F0C BA01000000              	mov rdx, 1
  9105                                  .L_lambda_simple_env_loop_00ff:	; ext_env[i + 1] <-- env[i]
  9106 00005F11 4883FE00                	cmp rsi, 0
  9107 00005F15 7410                    	je .L_lambda_simple_env_end_00ff
  9108 00005F17 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9109 00005F1B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9110 00005F1F 48FFC6                  	inc rsi
  9111 00005F22 48FFC2                  	inc rdx
  9112 00005F25 EBEA                    	jmp .L_lambda_simple_env_loop_00ff
  9113                                  .L_lambda_simple_env_end_00ff:
  9114 00005F27 5B                      	pop rbx
  9115 00005F28 BE00000000              	mov rsi, 0
  9116                                  .L_lambda_simple_params_loop_00ff:	; copy params
  9117 00005F2D 4883FE00                	cmp rsi, 0
  9118 00005F31 740E                    	je .L_lambda_simple_params_end_00ff
  9119 00005F33 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9120 00005F38 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9121 00005F3C 48FFC6                  	inc rsi
  9122 00005F3F EBEC                    	jmp .L_lambda_simple_params_loop_00ff
  9123                                  .L_lambda_simple_params_end_00ff:
  9124 00005F41 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9125 00005F44 4889C3                  	mov rbx, rax
  9126 00005F47 58                      	pop rax
  9127 00005F48 C60004                  	mov byte [rax], T_closure
  9128 00005F4B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9129 00005F4F 48C74009[595F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ff
  9130 00005F57 EB53                    	jmp .L_lambda_simple_end_00ff
  9131                                  .L_lambda_simple_code_00ff:	; lambda-simple body
  9132 00005F59 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9133 00005F5F 740B                    	je .L_lambda_simple_arity_check_ok_00ff
  9134 00005F61 FF742410                	push qword [rsp + 8 * 2]
  9135 00005F65 6A00                    	push 0
  9136 00005F67 E912CE0000              	jmp L_error_incorrect_arity_simple
  9137                                  .L_lambda_simple_arity_check_ok_00ff:
  9138 00005F6C C8000000                	enter 0, 0
  9139                                  	; preparing a non-tail-call
  9140 00005F70 48B8-                   	mov rax, L_constants + 2187
  9140 00005F72 [8B08000000000000] 
  9141 00005F7A 50                      	push rax
  9142 00005F7B 48B8-                   	mov rax, L_constants + 2251
  9142 00005F7D [CB08000000000000] 
  9143 00005F85 50                      	push rax
  9144 00005F86 6A02                    	push 2	; arg count
  9145 00005F88 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
  9146 00005F90 803805                  	cmp byte [rax], T_undefined
  9147 00005F93 0F84FFCC0000            	je L_error_fvar_undefined
  9148 00005F99 803804                  	cmp byte [rax], T_closure
  9149 00005F9C 0F857ACD0000            	jne L_error_non_closure
  9150 00005FA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9151 00005FA5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9152 00005FA8 C9                      	leave
  9153 00005FA9 C21000                  	ret AND_KILL_FRAME(0)
  9154                                  .L_lambda_simple_end_00ff:	; new closure is in rax
  9155 00005FAC 50                      	push rax
  9156 00005FAD 6A01                    	push 1	; arg count
  9157 00005FAF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9158 00005FB4 E80CCE0000              	call malloc
  9159 00005FB9 50                      	push rax
  9160 00005FBA BF00000000              	mov rdi, 8 * 0	; new rib
  9161 00005FBF E801CE0000              	call malloc
  9162 00005FC4 50                      	push rax
  9163 00005FC5 BF08000000              	mov rdi, 8 * 1	; extended env
  9164 00005FCA E8F6CD0000              	call malloc
  9165 00005FCF 488B7D10                	mov rdi, ENV
  9166 00005FD3 BE00000000              	mov rsi, 0
  9167 00005FD8 BA01000000              	mov rdx, 1
  9168                                  .L_lambda_simple_env_loop_0100:	; ext_env[i + 1] <-- env[i]
  9169 00005FDD 4883FE00                	cmp rsi, 0
  9170 00005FE1 7410                    	je .L_lambda_simple_env_end_0100
  9171 00005FE3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9172 00005FE7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9173 00005FEB 48FFC6                  	inc rsi
  9174 00005FEE 48FFC2                  	inc rdx
  9175 00005FF1 EBEA                    	jmp .L_lambda_simple_env_loop_0100
  9176                                  .L_lambda_simple_env_end_0100:
  9177 00005FF3 5B                      	pop rbx
  9178 00005FF4 BE00000000              	mov rsi, 0
  9179                                  .L_lambda_simple_params_loop_0100:	; copy params
  9180 00005FF9 4883FE00                	cmp rsi, 0
  9181 00005FFD 740E                    	je .L_lambda_simple_params_end_0100
  9182 00005FFF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9183 00006004 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9184 00006008 48FFC6                  	inc rsi
  9185 0000600B EBEC                    	jmp .L_lambda_simple_params_loop_0100
  9186                                  .L_lambda_simple_params_end_0100:
  9187 0000600D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9188 00006010 4889C3                  	mov rbx, rax
  9189 00006013 58                      	pop rax
  9190 00006014 C60004                  	mov byte [rax], T_closure
  9191 00006017 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9192 0000601B 48C74009[28600000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0100
  9193 00006023 E9F70A0000              	jmp .L_lambda_simple_end_0100
  9194                                  .L_lambda_simple_code_0100:	; lambda-simple body
  9195 00006028 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9196 0000602E 740B                    	je .L_lambda_simple_arity_check_ok_0100
  9197 00006030 FF742410                	push qword [rsp + 8 * 2]
  9198 00006034 6A01                    	push 1
  9199 00006036 E943CD0000              	jmp L_error_incorrect_arity_simple
  9200                                  .L_lambda_simple_arity_check_ok_0100:
  9201 0000603B C8000000                	enter 0, 0
  9202                                  	; preparing a non-tail-call
  9203 0000603F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9204 00006044 E87CCD0000              	call malloc
  9205 00006049 50                      	push rax
  9206 0000604A BF08000000              	mov rdi, 8 * 1	; new rib
  9207 0000604F E871CD0000              	call malloc
  9208 00006054 50                      	push rax
  9209 00006055 BF10000000              	mov rdi, 8 * 2	; extended env
  9210 0000605A E866CD0000              	call malloc
  9211 0000605F 488B7D10                	mov rdi, ENV
  9212 00006063 BE00000000              	mov rsi, 0
  9213 00006068 BA01000000              	mov rdx, 1
  9214                                  .L_lambda_simple_env_loop_0101:	; ext_env[i + 1] <-- env[i]
  9215 0000606D 4883FE01                	cmp rsi, 1
  9216 00006071 7410                    	je .L_lambda_simple_env_end_0101
  9217 00006073 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9218 00006077 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9219 0000607B 48FFC6                  	inc rsi
  9220 0000607E 48FFC2                  	inc rdx
  9221 00006081 EBEA                    	jmp .L_lambda_simple_env_loop_0101
  9222                                  .L_lambda_simple_env_end_0101:
  9223 00006083 5B                      	pop rbx
  9224 00006084 BE00000000              	mov rsi, 0
  9225                                  .L_lambda_simple_params_loop_0101:	; copy params
  9226 00006089 4883FE01                	cmp rsi, 1
  9227 0000608D 740E                    	je .L_lambda_simple_params_end_0101
  9228 0000608F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9229 00006094 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9230 00006098 48FFC6                  	inc rsi
  9231 0000609B EBEC                    	jmp .L_lambda_simple_params_loop_0101
  9232                                  .L_lambda_simple_params_end_0101:
  9233 0000609D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9234 000060A0 4889C3                  	mov rbx, rax
  9235 000060A3 58                      	pop rax
  9236 000060A4 C60004                  	mov byte [rax], T_closure
  9237 000060A7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9238 000060AB 48C74009[B8600000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0101
  9239 000060B3 E952050000              	jmp .L_lambda_simple_end_0101
  9240                                  .L_lambda_simple_code_0101:	; lambda-simple body
  9241 000060B8 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9242 000060BE 740B                    	je .L_lambda_simple_arity_check_ok_0101
  9243 000060C0 FF742410                	push qword [rsp + 8 * 2]
  9244 000060C4 6A02                    	push 2
  9245 000060C6 E9B3CC0000              	jmp L_error_incorrect_arity_simple
  9246                                  .L_lambda_simple_arity_check_ok_0101:
  9247 000060CB C8000000                	enter 0, 0
  9248                                  	; preparing a non-tail-call
  9249 000060CF 488B4520                	mov rax, PARAM(0)	; param a
  9250 000060D3 50                      	push rax
  9251 000060D4 6A01                    	push 1	; arg count
  9252 000060D6 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9253 000060DE 803805                  	cmp byte [rax], T_undefined
  9254 000060E1 0F84B1CB0000            	je L_error_fvar_undefined
  9255 000060E7 803804                  	cmp byte [rax], T_closure
  9256 000060EA 0F852CCC0000            	jne L_error_non_closure
  9257 000060F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9258 000060F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9259 000060F6 483D[02000000]          	cmp rax, sob_boolean_false
  9260 000060FC 0F8483010000            	je .L_if_else_00c4
  9261                                  	; preparing a non-tail-call
  9262 00006102 488B4528                	mov rax, PARAM(1)	; param b
  9263 00006106 50                      	push rax
  9264 00006107 6A01                    	push 1	; arg count
  9265 00006109 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9266 00006111 803805                  	cmp byte [rax], T_undefined
  9267 00006114 0F847ECB0000            	je L_error_fvar_undefined
  9268 0000611A 803804                  	cmp byte [rax], T_closure
  9269 0000611D 0F85F9CB0000            	jne L_error_non_closure
  9270 00006123 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9271 00006126 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9272 00006129 483D[02000000]          	cmp rax, sob_boolean_false
  9273 0000612F 7431                    	je .L_if_else_00bb
  9274                                  	; preparing a non-tail-call
  9275 00006131 488B4528                	mov rax, PARAM(1)	; param b
  9276 00006135 50                      	push rax
  9277 00006136 488B4520                	mov rax, PARAM(0)	; param a
  9278 0000613A 50                      	push rax
  9279 0000613B 6A02                    	push 2	; arg count
  9280 0000613D 488B0425[900F0000]      	mov rax, qword [free_var_27]	; free var __bin-sub-zz
  9281 00006145 803805                  	cmp byte [rax], T_undefined
  9282 00006148 0F844ACB0000            	je L_error_fvar_undefined
  9283 0000614E 803804                  	cmp byte [rax], T_closure
  9284 00006151 0F85C5CB0000            	jne L_error_non_closure
  9285 00006157 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9286 0000615A FF5009                  	call SOB_CLOSURE_CODE(rax)
  9287 0000615D E91E010000              	jmp .L_if_end_00bb
  9288                                  .L_if_else_00bb:
  9289                                  	; preparing a non-tail-call
  9290 00006162 488B4528                	mov rax, PARAM(1)	; param b
  9291 00006166 50                      	push rax
  9292 00006167 6A01                    	push 1	; arg count
  9293 00006169 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9294 00006171 803805                  	cmp byte [rax], T_undefined
  9295 00006174 0F841ECB0000            	je L_error_fvar_undefined
  9296 0000617A 803804                  	cmp byte [rax], T_closure
  9297 0000617D 0F8599CB0000            	jne L_error_non_closure
  9298 00006183 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9299 00006186 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9300 00006189 483D[02000000]          	cmp rax, sob_boolean_false
  9301 0000618F 7454                    	je .L_if_else_00ba
  9302                                  	; preparing a non-tail-call
  9303 00006191 488B4528                	mov rax, PARAM(1)	; param b
  9304 00006195 50                      	push rax
  9305                                  	; preparing a non-tail-call
  9306 00006196 488B4520                	mov rax, PARAM(0)	; param a
  9307 0000619A 50                      	push rax
  9308 0000619B 6A01                    	push 1	; arg count
  9309 0000619D 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9310 000061A5 803805                  	cmp byte [rax], T_undefined
  9311 000061A8 0F84EACA0000            	je L_error_fvar_undefined
  9312 000061AE 803804                  	cmp byte [rax], T_closure
  9313 000061B1 0F8565CB0000            	jne L_error_non_closure
  9314 000061B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9315 000061BA FF5009                  	call SOB_CLOSURE_CODE(rax)
  9316 000061BD 50                      	push rax
  9317 000061BE 6A02                    	push 2	; arg count
  9318 000061C0 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
  9319 000061C8 803805                  	cmp byte [rax], T_undefined
  9320 000061CB 0F84C7CA0000            	je L_error_fvar_undefined
  9321 000061D1 803804                  	cmp byte [rax], T_closure
  9322 000061D4 0F8542CB0000            	jne L_error_non_closure
  9323 000061DA FF7001                  	push SOB_CLOSURE_ENV(rax)
  9324 000061DD FF5009                  	call SOB_CLOSURE_CODE(rax)
  9325 000061E0 E99B000000              	jmp .L_if_end_00ba
  9326                                  .L_if_else_00ba:
  9327                                  	; preparing a non-tail-call
  9328 000061E5 488B4528                	mov rax, PARAM(1)	; param b
  9329 000061E9 50                      	push rax
  9330 000061EA 6A01                    	push 1	; arg count
  9331 000061EC 488B0425[68150000]      	mov rax, qword [free_var_115]	; free var real
  9332 000061F4 803805                  	cmp byte [rax], T_undefined
  9333 000061F7 0F849BCA0000            	je L_error_fvar_undefined
  9334 000061FD 803804                  	cmp byte [rax], T_closure
  9335 00006200 0F8516CB0000            	jne L_error_non_closure
  9336 00006206 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9337 00006209 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9338 0000620C 483D[02000000]          	cmp rax, sob_boolean_false
  9339 00006212 7451                    	je .L_if_else_00b9
  9340                                  	; preparing a non-tail-call
  9341 00006214 488B4528                	mov rax, PARAM(1)	; param b
  9342 00006218 50                      	push rax
  9343                                  	; preparing a non-tail-call
  9344 00006219 488B4520                	mov rax, PARAM(0)	; param a
  9345 0000621D 50                      	push rax
  9346 0000621E 6A01                    	push 1	; arg count
  9347 00006220 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9348 00006228 803805                  	cmp byte [rax], T_undefined
  9349 0000622B 0F8467CA0000            	je L_error_fvar_undefined
  9350 00006231 803804                  	cmp byte [rax], T_closure
  9351 00006234 0F85E2CA0000            	jne L_error_non_closure
  9352 0000623A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9353 0000623D FF5009                  	call SOB_CLOSURE_CODE(rax)
  9354 00006240 50                      	push rax
  9355 00006241 6A02                    	push 2	; arg count
  9356 00006243 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
  9357 0000624B 803805                  	cmp byte [rax], T_undefined
  9358 0000624E 0F8444CA0000            	je L_error_fvar_undefined
  9359 00006254 803804                  	cmp byte [rax], T_closure
  9360 00006257 0F85BFCA0000            	jne L_error_non_closure
  9361 0000625D FF7001                  	push SOB_CLOSURE_ENV(rax)
  9362 00006260 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9363 00006263 EB1B                    	jmp .L_if_end_00b9
  9364                                  .L_if_else_00b9:
  9365                                  	; preparing a non-tail-call
  9366 00006265 6A00                    	push 0	; arg count
  9367 00006267 488B4510                	mov rax, ENV
  9368 0000626B 488B00                  	mov rax, qword [rax + 8 * 0]
  9369 0000626E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9370 00006271 803804                  	cmp byte [rax], T_closure
  9371 00006274 0F85A2CA0000            	jne L_error_non_closure
  9372 0000627A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9373 0000627D FF5009                  	call SOB_CLOSURE_CODE(rax)
  9374                                  .L_if_end_00b9:
  9375                                  .L_if_end_00ba:
  9376                                  .L_if_end_00bb:
  9377 00006280 E981030000              	jmp .L_if_end_00c4
  9378                                  .L_if_else_00c4:
  9379                                  	; preparing a non-tail-call
  9380 00006285 488B4520                	mov rax, PARAM(0)	; param a
  9381 00006289 50                      	push rax
  9382 0000628A 6A01                    	push 1	; arg count
  9383 0000628C 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9384 00006294 803805                  	cmp byte [rax], T_undefined
  9385 00006297 0F84FBC90000            	je L_error_fvar_undefined
  9386 0000629D 803804                  	cmp byte [rax], T_closure
  9387 000062A0 0F8576CA0000            	jne L_error_non_closure
  9388 000062A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9389 000062A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9390 000062AC 483D[02000000]          	cmp rax, sob_boolean_false
  9391 000062B2 0F8483010000            	je .L_if_else_00c3
  9392                                  	; preparing a non-tail-call
  9393 000062B8 488B4528                	mov rax, PARAM(1)	; param b
  9394 000062BC 50                      	push rax
  9395 000062BD 6A01                    	push 1	; arg count
  9396 000062BF 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9397 000062C7 803805                  	cmp byte [rax], T_undefined
  9398 000062CA 0F84C8C90000            	je L_error_fvar_undefined
  9399 000062D0 803804                  	cmp byte [rax], T_closure
  9400 000062D3 0F8543CA0000            	jne L_error_non_closure
  9401 000062D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9402 000062DC FF5009                  	call SOB_CLOSURE_CODE(rax)
  9403 000062DF 483D[02000000]          	cmp rax, sob_boolean_false
  9404 000062E5 7454                    	je .L_if_else_00be
  9405                                  	; preparing a non-tail-call
  9406                                  	; preparing a non-tail-call
  9407 000062E7 488B4528                	mov rax, PARAM(1)	; param b
  9408 000062EB 50                      	push rax
  9409 000062EC 6A01                    	push 1	; arg count
  9410 000062EE 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9411 000062F6 803805                  	cmp byte [rax], T_undefined
  9412 000062F9 0F8499C90000            	je L_error_fvar_undefined
  9413 000062FF 803804                  	cmp byte [rax], T_closure
  9414 00006302 0F8514CA0000            	jne L_error_non_closure
  9415 00006308 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9416 0000630B FF5009                  	call SOB_CLOSURE_CODE(rax)
  9417 0000630E 50                      	push rax
  9418 0000630F 488B4520                	mov rax, PARAM(0)	; param a
  9419 00006313 50                      	push rax
  9420 00006314 6A02                    	push 2	; arg count
  9421 00006316 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
  9422 0000631E 803805                  	cmp byte [rax], T_undefined
  9423 00006321 0F8471C90000            	je L_error_fvar_undefined
  9424 00006327 803804                  	cmp byte [rax], T_closure
  9425 0000632A 0F85ECC90000            	jne L_error_non_closure
  9426 00006330 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9427 00006333 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9428 00006336 E9FB000000              	jmp .L_if_end_00be
  9429                                  .L_if_else_00be:
  9430                                  	; preparing a non-tail-call
  9431 0000633B 488B4528                	mov rax, PARAM(1)	; param b
  9432 0000633F 50                      	push rax
  9433 00006340 6A01                    	push 1	; arg count
  9434 00006342 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9435 0000634A 803805                  	cmp byte [rax], T_undefined
  9436 0000634D 0F8445C90000            	je L_error_fvar_undefined
  9437 00006353 803804                  	cmp byte [rax], T_closure
  9438 00006356 0F85C0C90000            	jne L_error_non_closure
  9439 0000635C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9440 0000635F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9441 00006362 483D[02000000]          	cmp rax, sob_boolean_false
  9442 00006368 7431                    	je .L_if_else_00bd
  9443                                  	; preparing a non-tail-call
  9444 0000636A 488B4528                	mov rax, PARAM(1)	; param b
  9445 0000636E 50                      	push rax
  9446 0000636F 488B4520                	mov rax, PARAM(0)	; param a
  9447 00006373 50                      	push rax
  9448 00006374 6A02                    	push 2	; arg count
  9449 00006376 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
  9450 0000637E 803805                  	cmp byte [rax], T_undefined
  9451 00006381 0F8411C90000            	je L_error_fvar_undefined
  9452 00006387 803804                  	cmp byte [rax], T_closure
  9453 0000638A 0F858CC90000            	jne L_error_non_closure
  9454 00006390 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9455 00006393 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9456 00006396 E99B000000              	jmp .L_if_end_00bd
  9457                                  .L_if_else_00bd:
  9458                                  	; preparing a non-tail-call
  9459 0000639B 488B4528                	mov rax, PARAM(1)	; param b
  9460 0000639F 50                      	push rax
  9461 000063A0 6A01                    	push 1	; arg count
  9462 000063A2 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9463 000063AA 803805                  	cmp byte [rax], T_undefined
  9464 000063AD 0F84E5C80000            	je L_error_fvar_undefined
  9465 000063B3 803804                  	cmp byte [rax], T_closure
  9466 000063B6 0F8560C90000            	jne L_error_non_closure
  9467 000063BC FF7001                  	push SOB_CLOSURE_ENV(rax)
  9468 000063BF FF5009                  	call SOB_CLOSURE_CODE(rax)
  9469 000063C2 483D[02000000]          	cmp rax, sob_boolean_false
  9470 000063C8 7451                    	je .L_if_else_00bc
  9471                                  	; preparing a non-tail-call
  9472 000063CA 488B4528                	mov rax, PARAM(1)	; param b
  9473 000063CE 50                      	push rax
  9474                                  	; preparing a non-tail-call
  9475 000063CF 488B4520                	mov rax, PARAM(0)	; param a
  9476 000063D3 50                      	push rax
  9477 000063D4 6A01                    	push 1	; arg count
  9478 000063D6 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9479 000063DE 803805                  	cmp byte [rax], T_undefined
  9480 000063E1 0F84B1C80000            	je L_error_fvar_undefined
  9481 000063E7 803804                  	cmp byte [rax], T_closure
  9482 000063EA 0F852CC90000            	jne L_error_non_closure
  9483 000063F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9484 000063F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9485 000063F6 50                      	push rax
  9486 000063F7 6A02                    	push 2	; arg count
  9487 000063F9 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
  9488 00006401 803805                  	cmp byte [rax], T_undefined
  9489 00006404 0F848EC80000            	je L_error_fvar_undefined
  9490 0000640A 803804                  	cmp byte [rax], T_closure
  9491 0000640D 0F8509C90000            	jne L_error_non_closure
  9492 00006413 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9493 00006416 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9494 00006419 EB1B                    	jmp .L_if_end_00bc
  9495                                  .L_if_else_00bc:
  9496                                  	; preparing a non-tail-call
  9497 0000641B 6A00                    	push 0	; arg count
  9498 0000641D 488B4510                	mov rax, ENV
  9499 00006421 488B00                  	mov rax, qword [rax + 8 * 0]
  9500 00006424 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9501 00006427 803804                  	cmp byte [rax], T_closure
  9502 0000642A 0F85ECC80000            	jne L_error_non_closure
  9503 00006430 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9504 00006433 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9505                                  .L_if_end_00bc:
  9506                                  .L_if_end_00bd:
  9507                                  .L_if_end_00be:
  9508 00006436 E9CB010000              	jmp .L_if_end_00c3
  9509                                  .L_if_else_00c3:
  9510                                  	; preparing a non-tail-call
  9511 0000643B 488B4520                	mov rax, PARAM(0)	; param a
  9512 0000643F 50                      	push rax
  9513 00006440 6A01                    	push 1	; arg count
  9514 00006442 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9515 0000644A 803805                  	cmp byte [rax], T_undefined
  9516 0000644D 0F8445C80000            	je L_error_fvar_undefined
  9517 00006453 803804                  	cmp byte [rax], T_closure
  9518 00006456 0F85C0C80000            	jne L_error_non_closure
  9519 0000645C FF7001                  	push SOB_CLOSURE_ENV(rax)
  9520 0000645F FF5009                  	call SOB_CLOSURE_CODE(rax)
  9521 00006462 483D[02000000]          	cmp rax, sob_boolean_false
  9522 00006468 0F847D010000            	je .L_if_else_00c2
  9523                                  	; preparing a non-tail-call
  9524 0000646E 488B4528                	mov rax, PARAM(1)	; param b
  9525 00006472 50                      	push rax
  9526 00006473 6A01                    	push 1	; arg count
  9527 00006475 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9528 0000647D 803805                  	cmp byte [rax], T_undefined
  9529 00006480 0F8412C80000            	je L_error_fvar_undefined
  9530 00006486 803804                  	cmp byte [rax], T_closure
  9531 00006489 0F858DC80000            	jne L_error_non_closure
  9532 0000648F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9533 00006492 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9534 00006495 483D[02000000]          	cmp rax, sob_boolean_false
  9535 0000649B 7454                    	je .L_if_else_00c1
  9536                                  	; preparing a non-tail-call
  9537                                  	; preparing a non-tail-call
  9538 0000649D 488B4528                	mov rax, PARAM(1)	; param b
  9539 000064A1 50                      	push rax
  9540 000064A2 6A01                    	push 1	; arg count
  9541 000064A4 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9542 000064AC 803805                  	cmp byte [rax], T_undefined
  9543 000064AF 0F84E3C70000            	je L_error_fvar_undefined
  9544 000064B5 803804                  	cmp byte [rax], T_closure
  9545 000064B8 0F855EC80000            	jne L_error_non_closure
  9546 000064BE FF7001                  	push SOB_CLOSURE_ENV(rax)
  9547 000064C1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9548 000064C4 50                      	push rax
  9549 000064C5 488B4520                	mov rax, PARAM(0)	; param a
  9550 000064C9 50                      	push rax
  9551 000064CA 6A02                    	push 2	; arg count
  9552 000064CC 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
  9553 000064D4 803805                  	cmp byte [rax], T_undefined
  9554 000064D7 0F84BBC70000            	je L_error_fvar_undefined
  9555 000064DD 803804                  	cmp byte [rax], T_closure
  9556 000064E0 0F8536C80000            	jne L_error_non_closure
  9557 000064E6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9558 000064E9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9559 000064EC E9F8000000              	jmp .L_if_end_00c1
  9560                                  .L_if_else_00c1:
  9561                                  	; preparing a non-tail-call
  9562 000064F1 488B4528                	mov rax, PARAM(1)	; param b
  9563 000064F5 50                      	push rax
  9564 000064F6 6A01                    	push 1	; arg count
  9565 000064F8 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9566 00006500 803805                  	cmp byte [rax], T_undefined
  9567 00006503 0F848FC70000            	je L_error_fvar_undefined
  9568 00006509 803804                  	cmp byte [rax], T_closure
  9569 0000650C 0F850AC80000            	jne L_error_non_closure
  9570 00006512 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9571 00006515 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9572 00006518 483D[02000000]          	cmp rax, sob_boolean_false
  9573 0000651E 7451                    	je .L_if_else_00c0
  9574                                  	; preparing a non-tail-call
  9575                                  	; preparing a non-tail-call
  9576 00006520 488B4528                	mov rax, PARAM(1)	; param b
  9577 00006524 50                      	push rax
  9578 00006525 6A01                    	push 1	; arg count
  9579 00006527 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9580 0000652F 803805                  	cmp byte [rax], T_undefined
  9581 00006532 0F8460C70000            	je L_error_fvar_undefined
  9582 00006538 803804                  	cmp byte [rax], T_closure
  9583 0000653B 0F85DBC70000            	jne L_error_non_closure
  9584 00006541 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9585 00006544 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9586 00006547 50                      	push rax
  9587 00006548 488B4520                	mov rax, PARAM(0)	; param a
  9588 0000654C 50                      	push rax
  9589 0000654D 6A02                    	push 2	; arg count
  9590 0000654F 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
  9591 00006557 803805                  	cmp byte [rax], T_undefined
  9592 0000655A 0F8438C70000            	je L_error_fvar_undefined
  9593 00006560 803804                  	cmp byte [rax], T_closure
  9594 00006563 0F85B3C70000            	jne L_error_non_closure
  9595 00006569 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9596 0000656C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9597 0000656F EB78                    	jmp .L_if_end_00c0
  9598                                  .L_if_else_00c0:
  9599                                  	; preparing a non-tail-call
  9600 00006571 488B4528                	mov rax, PARAM(1)	; param b
  9601 00006575 50                      	push rax
  9602 00006576 6A01                    	push 1	; arg count
  9603 00006578 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9604 00006580 803805                  	cmp byte [rax], T_undefined
  9605 00006583 0F840FC70000            	je L_error_fvar_undefined
  9606 00006589 803804                  	cmp byte [rax], T_closure
  9607 0000658C 0F858AC70000            	jne L_error_non_closure
  9608 00006592 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9609 00006595 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9610 00006598 483D[02000000]          	cmp rax, sob_boolean_false
  9611 0000659E 742E                    	je .L_if_else_00bf
  9612                                  	; preparing a non-tail-call
  9613 000065A0 488B4528                	mov rax, PARAM(1)	; param b
  9614 000065A4 50                      	push rax
  9615 000065A5 488B4520                	mov rax, PARAM(0)	; param a
  9616 000065A9 50                      	push rax
  9617 000065AA 6A02                    	push 2	; arg count
  9618 000065AC 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
  9619 000065B4 803805                  	cmp byte [rax], T_undefined
  9620 000065B7 0F84DBC60000            	je L_error_fvar_undefined
  9621 000065BD 803804                  	cmp byte [rax], T_closure
  9622 000065C0 0F8556C70000            	jne L_error_non_closure
  9623 000065C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9624 000065C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9625 000065CC EB1B                    	jmp .L_if_end_00bf
  9626                                  .L_if_else_00bf:
  9627                                  	; preparing a non-tail-call
  9628 000065CE 6A00                    	push 0	; arg count
  9629 000065D0 488B4510                	mov rax, ENV
  9630 000065D4 488B00                  	mov rax, qword [rax + 8 * 0]
  9631 000065D7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9632 000065DA 803804                  	cmp byte [rax], T_closure
  9633 000065DD 0F8539C70000            	jne L_error_non_closure
  9634 000065E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9635 000065E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9636                                  .L_if_end_00bf:
  9637                                  .L_if_end_00c0:
  9638                                  .L_if_end_00c1:
  9639 000065E9 EB1B                    	jmp .L_if_end_00c2
  9640                                  .L_if_else_00c2:
  9641                                  	; preparing a non-tail-call
  9642 000065EB 6A00                    	push 0	; arg count
  9643 000065ED 488B4510                	mov rax, ENV
  9644 000065F1 488B00                  	mov rax, qword [rax + 8 * 0]
  9645 000065F4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9646 000065F7 803804                  	cmp byte [rax], T_closure
  9647 000065FA 0F851CC70000            	jne L_error_non_closure
  9648 00006600 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9649 00006603 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9650                                  .L_if_end_00c2:
  9651                                  .L_if_end_00c3:
  9652                                  .L_if_end_00c4:
  9653 00006606 C9                      	leave
  9654 00006607 C22000                  	ret AND_KILL_FRAME(2)
  9655                                  .L_lambda_simple_end_0101:	; new closure is in rax
  9656 0000660A 50                      	push rax
  9657 0000660B 6A01                    	push 1	; arg count
  9658 0000660D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9659 00006612 E8AEC70000              	call malloc
  9660 00006617 50                      	push rax
  9661 00006618 BF08000000              	mov rdi, 8 * 1	; new rib
  9662 0000661D E8A3C70000              	call malloc
  9663 00006622 50                      	push rax
  9664 00006623 BF10000000              	mov rdi, 8 * 2	; extended env
  9665 00006628 E898C70000              	call malloc
  9666 0000662D 488B7D10                	mov rdi, ENV
  9667 00006631 BE00000000              	mov rsi, 0
  9668 00006636 BA01000000              	mov rdx, 1
  9669                                  .L_lambda_simple_env_loop_0102:	; ext_env[i + 1] <-- env[i]
  9670 0000663B 4883FE01                	cmp rsi, 1
  9671 0000663F 7410                    	je .L_lambda_simple_env_end_0102
  9672 00006641 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9673 00006645 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9674 00006649 48FFC6                  	inc rsi
  9675 0000664C 48FFC2                  	inc rdx
  9676 0000664F EBEA                    	jmp .L_lambda_simple_env_loop_0102
  9677                                  .L_lambda_simple_env_end_0102:
  9678 00006651 5B                      	pop rbx
  9679 00006652 BE00000000              	mov rsi, 0
  9680                                  .L_lambda_simple_params_loop_0102:	; copy params
  9681 00006657 4883FE01                	cmp rsi, 1
  9682 0000665B 740E                    	je .L_lambda_simple_params_end_0102
  9683 0000665D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9684 00006662 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9685 00006666 48FFC6                  	inc rsi
  9686 00006669 EBEC                    	jmp .L_lambda_simple_params_loop_0102
  9687                                  .L_lambda_simple_params_end_0102:
  9688 0000666B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9689 0000666E 4889C3                  	mov rbx, rax
  9690 00006671 58                      	pop rax
  9691 00006672 C60004                  	mov byte [rax], T_closure
  9692 00006675 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9693 00006679 48C74009[86660000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0102
  9694 00006681 E986040000              	jmp .L_lambda_simple_end_0102
  9695                                  .L_lambda_simple_code_0102:	; lambda-simple body
  9696 00006686 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9697 0000668C 740B                    	je .L_lambda_simple_arity_check_ok_0102
  9698 0000668E FF742410                	push qword [rsp + 8 * 2]
  9699 00006692 6A01                    	push 1
  9700 00006694 E9E5C60000              	jmp L_error_incorrect_arity_simple
  9701                                  .L_lambda_simple_arity_check_ok_0102:
  9702 00006699 C8000000                	enter 0, 0
  9703 0000669D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9704 000066A2 E81EC70000              	call malloc
  9705 000066A7 50                      	push rax
  9706 000066A8 BF08000000              	mov rdi, 8 * 1	; new rib
  9707 000066AD E813C70000              	call malloc
  9708 000066B2 50                      	push rax
  9709 000066B3 BF18000000              	mov rdi, 8 * 3	; extended env
  9710 000066B8 E808C70000              	call malloc
  9711 000066BD 488B7D10                	mov rdi, ENV
  9712 000066C1 BE00000000              	mov rsi, 0
  9713 000066C6 BA01000000              	mov rdx, 1
  9714                                  .L_lambda_opt_env_loop_0023:	; ext_env[i + 1] <-- env[i]
  9715 000066CB 4883FE02                	cmp rsi, 2
  9716 000066CF 7410                    	je .L_lambda_opt_env_end_0023
  9717 000066D1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9718 000066D5 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9719 000066D9 48FFC6                  	inc rsi
  9720 000066DC 48FFC2                  	inc rdx
  9721 000066DF EBEA                    	jmp .L_lambda_opt_env_loop_0023
  9722                                  .L_lambda_opt_env_end_0023:
  9723 000066E1 5B                      	pop rbx
  9724 000066E2 BE00000000              	mov rsi, 0
  9725                                  .L_lambda_opt_params_loop_0023:	; copy params
  9726 000066E7 4883FE01                	cmp rsi, 1
  9727 000066EB 740E                    	je .L_lambda_opt_params_end_0023
  9728 000066ED 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9729 000066F2 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9730 000066F6 48FFC6                  	inc rsi
  9731 000066F9 EBEC                    	jmp .L_lambda_opt_params_loop_0023
  9732                                  .L_lambda_opt_params_end_0023:
  9733 000066FB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9734 000066FE 4889C3                  	mov rbx, rax
  9735 00006701 58                      	pop rax
  9736 00006702 C60004                  	mov byte [rax], T_closure
  9737 00006705 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9738 00006709 48C74009[16670000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0023
  9739 00006711 E9F2030000              	jmp .L_lambda_opt_end_0023
  9740                                  .L_lambda_opt_code_0023:	; lambda-opt body
  9741 00006716 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9742 0000671C 7411                    	je .L_lambda_opt_arity_check_exact_0023
  9743 0000671E 0F8FC4010000            	jg .L_lambda_opt_arity_check_more_0023
  9744 00006724 FF742410                	push qword [rsp + 8 * 2]
  9745 00006728 6A01                    	push 1
  9746 0000672A E963C60000              	jmp L_error_incorrect_arity_opt
  9747                                  .L_lambda_opt_arity_check_exact_0023:
  9748 0000672F 4883EC08                	sub rsp, 8
  9749 00006733 488B442408              	mov rax, qword[rsp + 8 *1]
  9750 00006738 48890424                	mov qword[rsp], rax  
  9751 0000673C 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  9752 00006741 4889442408              	mov qword[rsp + 8 * 1], rax
  9753 00006746 B802000000              	mov rax, 2
  9754 0000674B 4889442410              	mov qword[rsp + 8 *2], rax
  9755 00006750 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  9756 00006755 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  9757 0000675A 48B8-                   	mov rax, sob_nil
  9757 0000675C [0100000000000000] 
  9758 00006764 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  9759 00006769 C8000000                	enter 0, 0
  9760                                  	; preparing a non-tail-call
  9761 0000676D 488B4528                	mov rax, PARAM(1)	; param s
  9762 00006771 50                      	push rax
  9763 00006772 6A01                    	push 1	; arg count
  9764 00006774 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  9765 0000677C 803805                  	cmp byte [rax], T_undefined
  9766 0000677F 0F8413C50000            	je L_error_fvar_undefined
  9767 00006785 803804                  	cmp byte [rax], T_closure
  9768 00006788 0F858EC50000            	jne L_error_non_closure
  9769 0000678E FF7001                  	push SOB_CLOSURE_ENV(rax)
  9770 00006791 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9771 00006794 483D[02000000]          	cmp rax, sob_boolean_false
  9772 0000679A 7430                    	je .L_if_else_00c6
  9773                                  	; preparing a non-tail-call
  9774 0000679C 488B4520                	mov rax, PARAM(0)	; param a
  9775 000067A0 50                      	push rax
  9776 000067A1 48B8-                   	mov rax, L_constants + 2135
  9776 000067A3 [5708000000000000] 
  9777 000067AB 50                      	push rax
  9778 000067AC 6A02                    	push 2	; arg count
  9779 000067AE 488B4510                	mov rax, ENV
  9780 000067B2 488B00                  	mov rax, qword [rax + 8 * 0]
  9781 000067B5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
  9782 000067B8 803804                  	cmp byte [rax], T_closure
  9783 000067BB 0F855BC50000            	jne L_error_non_closure
  9784 000067C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9785 000067C4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9786 000067C7 E913010000              	jmp .L_if_end_00c6
  9787                                  .L_if_else_00c6:
  9788                                  	; preparing a non-tail-call
  9789                                  	; preparing a non-tail-call
  9790 000067CC 488B4528                	mov rax, PARAM(1)	; param s
  9791 000067D0 50                      	push rax
  9792 000067D1 48B8-                   	mov rax, L_constants + 2135
  9792 000067D3 [5708000000000000] 
  9793 000067DB 50                      	push rax
  9794 000067DC 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
  9795 000067E4 803805                  	cmp byte [rax], T_undefined
  9796 000067E7 0F84ABC40000            	je L_error_fvar_undefined
  9797 000067ED 50                      	push rax
  9798 000067EE 6A03                    	push 3	; arg count
  9799 000067F0 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  9800 000067F8 803805                  	cmp byte [rax], T_undefined
  9801 000067FB 0F8497C40000            	je L_error_fvar_undefined
  9802 00006801 803804                  	cmp byte [rax], T_closure
  9803 00006804 0F8512C50000            	jne L_error_non_closure
  9804 0000680A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9805 0000680D FF5009                  	call SOB_CLOSURE_CODE(rax)
  9806 00006810 50                      	push rax
  9807 00006811 6A01                    	push 1	; arg count
  9808 00006813 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9809 00006818 E8A8C50000              	call malloc
  9810 0000681D 50                      	push rax
  9811 0000681E BF10000000              	mov rdi, 8 * 2	; new rib
  9812 00006823 E89DC50000              	call malloc
  9813 00006828 50                      	push rax
  9814 00006829 BF20000000              	mov rdi, 8 * 4	; extended env
  9815 0000682E E892C50000              	call malloc
  9816 00006833 488B7D10                	mov rdi, ENV
  9817 00006837 BE00000000              	mov rsi, 0
  9818 0000683C BA01000000              	mov rdx, 1
  9819                                  .L_lambda_simple_env_loop_0104:	; ext_env[i + 1] <-- env[i]
  9820 00006841 4883FE03                	cmp rsi, 3
  9821 00006845 7410                    	je .L_lambda_simple_env_end_0104
  9822 00006847 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9823 0000684B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9824 0000684F 48FFC6                  	inc rsi
  9825 00006852 48FFC2                  	inc rdx
  9826 00006855 EBEA                    	jmp .L_lambda_simple_env_loop_0104
  9827                                  .L_lambda_simple_env_end_0104:
  9828 00006857 5B                      	pop rbx
  9829 00006858 BE00000000              	mov rsi, 0
  9830                                  .L_lambda_simple_params_loop_0104:	; copy params
  9831 0000685D 4883FE02                	cmp rsi, 2
  9832 00006861 740E                    	je .L_lambda_simple_params_end_0104
  9833 00006863 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9834 00006868 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9835 0000686C 48FFC6                  	inc rsi
  9836 0000686F EBEC                    	jmp .L_lambda_simple_params_loop_0104
  9837                                  .L_lambda_simple_params_end_0104:
  9838 00006871 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9839 00006874 4889C3                  	mov rbx, rax
  9840 00006877 58                      	pop rax
  9841 00006878 C60004                  	mov byte [rax], T_closure
  9842 0000687B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9843 0000687F 48C74009[89680000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0104
  9844 00006887 EB47                    	jmp .L_lambda_simple_end_0104
  9845                                  .L_lambda_simple_code_0104:	; lambda-simple body
  9846 00006889 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9847 0000688F 740B                    	je .L_lambda_simple_arity_check_ok_0104
  9848 00006891 FF742410                	push qword [rsp + 8 * 2]
  9849 00006895 6A01                    	push 1
  9850 00006897 E9E2C40000              	jmp L_error_incorrect_arity_simple
  9851                                  .L_lambda_simple_arity_check_ok_0104:
  9852 0000689C C8000000                	enter 0, 0
  9853                                  	; preparing a non-tail-call
  9854 000068A0 488B4520                	mov rax, PARAM(0)	; param b
  9855 000068A4 50                      	push rax
  9856 000068A5 488B4510                	mov rax, ENV
  9857 000068A9 488B00                  	mov rax, qword [rax + 8 * 0]
  9858 000068AC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
  9859 000068AF 50                      	push rax
  9860 000068B0 6A02                    	push 2	; arg count
  9861 000068B2 488B4510                	mov rax, ENV
  9862 000068B6 488B4008                	mov rax, qword [rax + 8 * 1]
  9863 000068BA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
  9864 000068BD 803804                  	cmp byte [rax], T_closure
  9865 000068C0 0F8556C40000            	jne L_error_non_closure
  9866 000068C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9867 000068C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9868 000068CC C9                      	leave
  9869 000068CD C21800                  	ret AND_KILL_FRAME(1)
  9870                                  .L_lambda_simple_end_0104:	; new closure is in rax
  9871 000068D0 803804                  	cmp byte [rax], T_closure
  9872 000068D3 0F8543C40000            	jne L_error_non_closure
  9873 000068D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9874 000068DC FF5009                  	call SOB_CLOSURE_CODE(rax)
  9875                                  .L_if_end_00c6:
  9876 000068DF C9                      	leave
  9877 000068E0 C22000                  	ret AND_KILL_FRAME(2)
  9878 000068E3 E920020000              	jmp .L_lambda_opt_end_0023	; new closure is in rax
  9879                                  .L_lambda_opt_arity_check_more_0023:
  9880 000068E8 488B442410              	mov rax, qword[rsp + 2 * 8]
  9881 000068ED 4889C7                  	mov rdi, rax
  9882 000068F0 49B9-                   	mov r9, sob_nil
  9882 000068F2 [0100000000000000] 
  9883 000068FA 4C8B442410              	mov r8, qword[rsp+2*8]
  9884                                  .L_lambda_opt_stack_shrink_loop_0023:
  9885 000068FF 4983F801                	cmp r8, 1
  9886 00006903 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0023
  9887 00006905 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  9888 0000690A BF11000000              	mov rdi, 1+8+8	;for pair
  9889 0000690F E8B1C40000              	call malloc	 ;to create the pair in the stack
  9890 00006914 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  9891 00006917 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  9892 0000691B 4C894809                 	mov qword[rax+1+8],r9
  9893 0000691F 4989C1                  	mov r9 , rax	 ; for the recursion 
  9894 00006922 49FFC8                  	dec r8
  9895 00006925 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0023
  9896                                  .L_lambda_opt_stack_shrink_loop_exit_0023:
  9897 00006927 488B442410              	mov rax, qword[rsp + 2 * 8]
  9898 0000692C BF02000000              	mov rdi, 2
  9899 00006931 4829F8                  	sub rax, rdi
  9900 00006934 4889C7                  	mov rdi, rax
  9901 00006937 486BC008                	imul rax,8
  9902 0000693B 4801C4                  	add rsp, rax
  9903 0000693E 4889E0                  	mov rax, rsp
  9904 00006941 4989F8                  	mov r8, rdi
  9905 00006944 4D6BC008                	imul r8, 8
  9906 00006948 4C29C0                  	sub rax, r8
  9907 0000694B 4989C2                  	mov r10, rax	; holds the original ret in the stack
  9908 0000694E 4983C218                	add r10, 8*3
  9909 00006952 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  9910 00006956 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  9911 00006959 4D6BC008                	imul r8,8
  9912 0000695D 4C01C0                  	add rax, r8
  9913 00006960 4C8908                  	mov qword[rax] ,r9
  9914 00006963 4D89D0                   	mov r8, r10
  9915 00006966 4983C000                	add r8, 8 * 0
  9916 0000696A 4D8B08                  	mov r9,qword[r8]
  9917 0000696D 4D890CF8                	mov qword [r8 + rdi * 8], r9
  9918 00006971 4983EA18                	sub r10, 8*3
  9919 00006975 48C744241002000000      	mov qword [rsp+2*8], 2
  9920 0000697E 498B4208                	mov rax, qword[r10 + 1 * 8]
  9921 00006982 4889442408              	mov qword[rsp + 1*8] ,rax
  9922 00006987 498B02                  	mov rax, qword[r10]
  9923 0000698A 48890424                	mov qword[rsp], rax
  9924 0000698E C8000000                	enter 0, 0
  9925                                  	; preparing a non-tail-call
  9926 00006992 488B4528                	mov rax, PARAM(1)	; param s
  9927 00006996 50                      	push rax
  9928 00006997 6A01                    	push 1	; arg count
  9929 00006999 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  9930 000069A1 803805                  	cmp byte [rax], T_undefined
  9931 000069A4 0F84EEC20000            	je L_error_fvar_undefined
  9932 000069AA 803804                  	cmp byte [rax], T_closure
  9933 000069AD 0F8569C30000            	jne L_error_non_closure
  9934 000069B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9935 000069B6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9936 000069B9 483D[02000000]          	cmp rax, sob_boolean_false
  9937 000069BF 7430                    	je .L_if_else_00c5
  9938                                  	; preparing a non-tail-call
  9939 000069C1 488B4520                	mov rax, PARAM(0)	; param a
  9940 000069C5 50                      	push rax
  9941 000069C6 48B8-                   	mov rax, L_constants + 2135
  9941 000069C8 [5708000000000000] 
  9942 000069D0 50                      	push rax
  9943 000069D1 6A02                    	push 2	; arg count
  9944 000069D3 488B4510                	mov rax, ENV
  9945 000069D7 488B00                  	mov rax, qword [rax + 8 * 0]
  9946 000069DA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
  9947 000069DD 803804                  	cmp byte [rax], T_closure
  9948 000069E0 0F8536C30000            	jne L_error_non_closure
  9949 000069E6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9950 000069E9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9951 000069EC E913010000              	jmp .L_if_end_00c5
  9952                                  .L_if_else_00c5:
  9953                                  	; preparing a non-tail-call
  9954                                  	; preparing a non-tail-call
  9955 000069F1 488B4528                	mov rax, PARAM(1)	; param s
  9956 000069F5 50                      	push rax
  9957 000069F6 48B8-                   	mov rax, L_constants + 2135
  9957 000069F8 [5708000000000000] 
  9958 00006A00 50                      	push rax
  9959 00006A01 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
  9960 00006A09 803805                  	cmp byte [rax], T_undefined
  9961 00006A0C 0F8486C20000            	je L_error_fvar_undefined
  9962 00006A12 50                      	push rax
  9963 00006A13 6A03                    	push 3	; arg count
  9964 00006A15 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  9965 00006A1D 803805                  	cmp byte [rax], T_undefined
  9966 00006A20 0F8472C20000            	je L_error_fvar_undefined
  9967 00006A26 803804                  	cmp byte [rax], T_closure
  9968 00006A29 0F85EDC20000            	jne L_error_non_closure
  9969 00006A2F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9970 00006A32 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9971 00006A35 50                      	push rax
  9972 00006A36 6A01                    	push 1	; arg count
  9973 00006A38 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9974 00006A3D E883C30000              	call malloc
  9975 00006A42 50                      	push rax
  9976 00006A43 BF10000000              	mov rdi, 8 * 2	; new rib
  9977 00006A48 E878C30000              	call malloc
  9978 00006A4D 50                      	push rax
  9979 00006A4E BF20000000              	mov rdi, 8 * 4	; extended env
  9980 00006A53 E86DC30000              	call malloc
  9981 00006A58 488B7D10                	mov rdi, ENV
  9982 00006A5C BE00000000              	mov rsi, 0
  9983 00006A61 BA01000000              	mov rdx, 1
  9984                                  .L_lambda_simple_env_loop_0103:	; ext_env[i + 1] <-- env[i]
  9985 00006A66 4883FE03                	cmp rsi, 3
  9986 00006A6A 7410                    	je .L_lambda_simple_env_end_0103
  9987 00006A6C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9988 00006A70 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9989 00006A74 48FFC6                  	inc rsi
  9990 00006A77 48FFC2                  	inc rdx
  9991 00006A7A EBEA                    	jmp .L_lambda_simple_env_loop_0103
  9992                                  .L_lambda_simple_env_end_0103:
  9993 00006A7C 5B                      	pop rbx
  9994 00006A7D BE00000000              	mov rsi, 0
  9995                                  .L_lambda_simple_params_loop_0103:	; copy params
  9996 00006A82 4883FE02                	cmp rsi, 2
  9997 00006A86 740E                    	je .L_lambda_simple_params_end_0103
  9998 00006A88 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9999 00006A8D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10000 00006A91 48FFC6                  	inc rsi
 10001 00006A94 EBEC                    	jmp .L_lambda_simple_params_loop_0103
 10002                                  .L_lambda_simple_params_end_0103:
 10003 00006A96 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10004 00006A99 4889C3                  	mov rbx, rax
 10005 00006A9C 58                      	pop rax
 10006 00006A9D C60004                  	mov byte [rax], T_closure
 10007 00006AA0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10008 00006AA4 48C74009[AE6A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0103
 10009 00006AAC EB47                    	jmp .L_lambda_simple_end_0103
 10010                                  .L_lambda_simple_code_0103:	; lambda-simple body
 10011 00006AAE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10012 00006AB4 740B                    	je .L_lambda_simple_arity_check_ok_0103
 10013 00006AB6 FF742410                	push qword [rsp + 8 * 2]
 10014 00006ABA 6A01                    	push 1
 10015 00006ABC E9BDC20000              	jmp L_error_incorrect_arity_simple
 10016                                  .L_lambda_simple_arity_check_ok_0103:
 10017 00006AC1 C8000000                	enter 0, 0
 10018                                  	; preparing a non-tail-call
 10019 00006AC5 488B4520                	mov rax, PARAM(0)	; param b
 10020 00006AC9 50                      	push rax
 10021 00006ACA 488B4510                	mov rax, ENV
 10022 00006ACE 488B00                  	mov rax, qword [rax + 8 * 0]
 10023 00006AD1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 10024 00006AD4 50                      	push rax
 10025 00006AD5 6A02                    	push 2	; arg count
 10026 00006AD7 488B4510                	mov rax, ENV
 10027 00006ADB 488B4008                	mov rax, qword [rax + 8 * 1]
 10028 00006ADF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 10029 00006AE2 803804                  	cmp byte [rax], T_closure
 10030 00006AE5 0F8531C20000            	jne L_error_non_closure
 10031 00006AEB FF7001                  	push SOB_CLOSURE_ENV(rax)
 10032 00006AEE FF5009                  	call SOB_CLOSURE_CODE(rax)
 10033 00006AF1 C9                      	leave
 10034 00006AF2 C21800                  	ret AND_KILL_FRAME(1)
 10035                                  .L_lambda_simple_end_0103:	; new closure is in rax
 10036 00006AF5 803804                  	cmp byte [rax], T_closure
 10037 00006AF8 0F851EC20000            	jne L_error_non_closure
 10038 00006AFE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10039 00006B01 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10040                                  .L_if_end_00c5:
 10041 00006B04 C9                      	leave
 10042 00006B05 C22000                  	ret AND_KILL_FRAME(2)
 10043                                  .L_lambda_opt_end_0023:	; new closure is in rax
 10044 00006B08 C9                      	leave
 10045 00006B09 C21800                  	ret AND_KILL_FRAME(1)
 10046                                  .L_lambda_simple_end_0102:	; new closure is in rax
 10047 00006B0C 803804                  	cmp byte [rax], T_closure
 10048 00006B0F 0F8507C20000            	jne L_error_non_closure
 10049 00006B15 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10050 00006B18 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10051 00006B1B C9                      	leave
 10052 00006B1C C21800                  	ret AND_KILL_FRAME(1)
 10053                                  .L_lambda_simple_end_0100:	; new closure is in rax
 10054 00006B1F 803804                  	cmp byte [rax], T_closure
 10055 00006B22 0F85F4C10000            	jne L_error_non_closure
 10056 00006B28 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10057 00006B2B FF5009                  	call SOB_CLOSURE_CODE(rax)
 10058 00006B2E 48890425[E70D0000]      	mov qword [free_var_2], rax
 10059 00006B36 48B8-                   	mov rax, sob_void
 10059 00006B38 [0000000000000000] 
 10060                                  
 10061 00006B40 4889C7                  	mov rdi, rax
 10062 00006B43 E8D2C40000              	call print_sexpr_if_not_void
 10063                                  	; preparing a non-tail-call
 10064 00006B48 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10065 00006B4D E873C20000              	call malloc
 10066 00006B52 50                      	push rax
 10067 00006B53 BF00000000              	mov rdi, 8 * 0	; new rib
 10068 00006B58 E868C20000              	call malloc
 10069 00006B5D 50                      	push rax
 10070 00006B5E BF08000000              	mov rdi, 8 * 1	; extended env
 10071 00006B63 E85DC20000              	call malloc
 10072 00006B68 488B7D10                	mov rdi, ENV
 10073 00006B6C BE00000000              	mov rsi, 0
 10074 00006B71 BA01000000              	mov rdx, 1
 10075                                  .L_lambda_simple_env_loop_0105:	; ext_env[i + 1] <-- env[i]
 10076 00006B76 4883FE00                	cmp rsi, 0
 10077 00006B7A 7410                    	je .L_lambda_simple_env_end_0105
 10078 00006B7C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10079 00006B80 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10080 00006B84 48FFC6                  	inc rsi
 10081 00006B87 48FFC2                  	inc rdx
 10082 00006B8A EBEA                    	jmp .L_lambda_simple_env_loop_0105
 10083                                  .L_lambda_simple_env_end_0105:
 10084 00006B8C 5B                      	pop rbx
 10085 00006B8D BE00000000              	mov rsi, 0
 10086                                  .L_lambda_simple_params_loop_0105:	; copy params
 10087 00006B92 4883FE00                	cmp rsi, 0
 10088 00006B96 740E                    	je .L_lambda_simple_params_end_0105
 10089 00006B98 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10090 00006B9D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10091 00006BA1 48FFC6                  	inc rsi
 10092 00006BA4 EBEC                    	jmp .L_lambda_simple_params_loop_0105
 10093                                  .L_lambda_simple_params_end_0105:
 10094 00006BA6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10095 00006BA9 4889C3                  	mov rbx, rax
 10096 00006BAC 58                      	pop rax
 10097 00006BAD C60004                  	mov byte [rax], T_closure
 10098 00006BB0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10099 00006BB4 48C74009[BE6B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0105
 10100 00006BBC EB53                    	jmp .L_lambda_simple_end_0105
 10101                                  .L_lambda_simple_code_0105:	; lambda-simple body
 10102 00006BBE 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10103 00006BC4 740B                    	je .L_lambda_simple_arity_check_ok_0105
 10104 00006BC6 FF742410                	push qword [rsp + 8 * 2]
 10105 00006BCA 6A00                    	push 0
 10106 00006BCC E9ADC10000              	jmp L_error_incorrect_arity_simple
 10107                                  .L_lambda_simple_arity_check_ok_0105:
 10108 00006BD1 C8000000                	enter 0, 0
 10109                                  	; preparing a non-tail-call
 10110 00006BD5 48B8-                   	mov rax, L_constants + 2187
 10110 00006BD7 [8B08000000000000] 
 10111 00006BDF 50                      	push rax
 10112 00006BE0 48B8-                   	mov rax, L_constants + 2279
 10112 00006BE2 [E708000000000000] 
 10113 00006BEA 50                      	push rax
 10114 00006BEB 6A02                    	push 2	; arg count
 10115 00006BED 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 10116 00006BF5 803805                  	cmp byte [rax], T_undefined
 10117 00006BF8 0F849AC00000            	je L_error_fvar_undefined
 10118 00006BFE 803804                  	cmp byte [rax], T_closure
 10119 00006C01 0F8515C10000            	jne L_error_non_closure
 10120 00006C07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10121 00006C0A FF5009                  	call SOB_CLOSURE_CODE(rax)
 10122 00006C0D C9                      	leave
 10123 00006C0E C21000                  	ret AND_KILL_FRAME(0)
 10124                                  .L_lambda_simple_end_0105:	; new closure is in rax
 10125 00006C11 50                      	push rax
 10126 00006C12 6A01                    	push 1	; arg count
 10127 00006C14 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10128 00006C19 E8A7C10000              	call malloc
 10129 00006C1E 50                      	push rax
 10130 00006C1F BF00000000              	mov rdi, 8 * 0	; new rib
 10131 00006C24 E89CC10000              	call malloc
 10132 00006C29 50                      	push rax
 10133 00006C2A BF08000000              	mov rdi, 8 * 1	; extended env
 10134 00006C2F E891C10000              	call malloc
 10135 00006C34 488B7D10                	mov rdi, ENV
 10136 00006C38 BE00000000              	mov rsi, 0
 10137 00006C3D BA01000000              	mov rdx, 1
 10138                                  .L_lambda_simple_env_loop_0106:	; ext_env[i + 1] <-- env[i]
 10139 00006C42 4883FE00                	cmp rsi, 0
 10140 00006C46 7410                    	je .L_lambda_simple_env_end_0106
 10141 00006C48 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10142 00006C4C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10143 00006C50 48FFC6                  	inc rsi
 10144 00006C53 48FFC2                  	inc rdx
 10145 00006C56 EBEA                    	jmp .L_lambda_simple_env_loop_0106
 10146                                  .L_lambda_simple_env_end_0106:
 10147 00006C58 5B                      	pop rbx
 10148 00006C59 BE00000000              	mov rsi, 0
 10149                                  .L_lambda_simple_params_loop_0106:	; copy params
 10150 00006C5E 4883FE00                	cmp rsi, 0
 10151 00006C62 740E                    	je .L_lambda_simple_params_end_0106
 10152 00006C64 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10153 00006C69 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10154 00006C6D 48FFC6                  	inc rsi
 10155 00006C70 EBEC                    	jmp .L_lambda_simple_params_loop_0106
 10156                                  .L_lambda_simple_params_end_0106:
 10157 00006C72 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10158 00006C75 4889C3                  	mov rbx, rax
 10159 00006C78 58                      	pop rax
 10160 00006C79 C60004                  	mov byte [rax], T_closure
 10161 00006C7C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10162 00006C80 48C74009[8D6C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0106
 10163 00006C88 E975080000              	jmp .L_lambda_simple_end_0106
 10164                                  .L_lambda_simple_code_0106:	; lambda-simple body
 10165 00006C8D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10166 00006C93 740B                    	je .L_lambda_simple_arity_check_ok_0106
 10167 00006C95 FF742410                	push qword [rsp + 8 * 2]
 10168 00006C99 6A01                    	push 1
 10169 00006C9B E9DEC00000              	jmp L_error_incorrect_arity_simple
 10170                                  .L_lambda_simple_arity_check_ok_0106:
 10171 00006CA0 C8000000                	enter 0, 0
 10172                                  	; preparing a non-tail-call
 10173 00006CA4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10174 00006CA9 E817C10000              	call malloc
 10175 00006CAE 50                      	push rax
 10176 00006CAF BF08000000              	mov rdi, 8 * 1	; new rib
 10177 00006CB4 E80CC10000              	call malloc
 10178 00006CB9 50                      	push rax
 10179 00006CBA BF10000000              	mov rdi, 8 * 2	; extended env
 10180 00006CBF E801C10000              	call malloc
 10181 00006CC4 488B7D10                	mov rdi, ENV
 10182 00006CC8 BE00000000              	mov rsi, 0
 10183 00006CCD BA01000000              	mov rdx, 1
 10184                                  .L_lambda_simple_env_loop_0107:	; ext_env[i + 1] <-- env[i]
 10185 00006CD2 4883FE01                	cmp rsi, 1
 10186 00006CD6 7410                    	je .L_lambda_simple_env_end_0107
 10187 00006CD8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10188 00006CDC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10189 00006CE0 48FFC6                  	inc rsi
 10190 00006CE3 48FFC2                  	inc rdx
 10191 00006CE6 EBEA                    	jmp .L_lambda_simple_env_loop_0107
 10192                                  .L_lambda_simple_env_end_0107:
 10193 00006CE8 5B                      	pop rbx
 10194 00006CE9 BE00000000              	mov rsi, 0
 10195                                  .L_lambda_simple_params_loop_0107:	; copy params
 10196 00006CEE 4883FE01                	cmp rsi, 1
 10197 00006CF2 740E                    	je .L_lambda_simple_params_end_0107
 10198 00006CF4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10199 00006CF9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10200 00006CFD 48FFC6                  	inc rsi
 10201 00006D00 EBEC                    	jmp .L_lambda_simple_params_loop_0107
 10202                                  .L_lambda_simple_params_end_0107:
 10203 00006D02 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10204 00006D05 4889C3                  	mov rbx, rax
 10205 00006D08 58                      	pop rax
 10206 00006D09 C60004                  	mov byte [rax], T_closure
 10207 00006D0C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10208 00006D10 48C74009[1D6D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0107
 10209 00006D18 E952050000              	jmp .L_lambda_simple_end_0107
 10210                                  .L_lambda_simple_code_0107:	; lambda-simple body
 10211 00006D1D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10212 00006D23 740B                    	je .L_lambda_simple_arity_check_ok_0107
 10213 00006D25 FF742410                	push qword [rsp + 8 * 2]
 10214 00006D29 6A02                    	push 2
 10215 00006D2B E94EC00000              	jmp L_error_incorrect_arity_simple
 10216                                  .L_lambda_simple_arity_check_ok_0107:
 10217 00006D30 C8000000                	enter 0, 0
 10218                                  	; preparing a non-tail-call
 10219 00006D34 488B4520                	mov rax, PARAM(0)	; param a
 10220 00006D38 50                      	push rax
 10221 00006D39 6A01                    	push 1	; arg count
 10222 00006D3B 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10223 00006D43 803805                  	cmp byte [rax], T_undefined
 10224 00006D46 0F844CBF0000            	je L_error_fvar_undefined
 10225 00006D4C 803804                  	cmp byte [rax], T_closure
 10226 00006D4F 0F85C7BF0000            	jne L_error_non_closure
 10227 00006D55 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10228 00006D58 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10229 00006D5B 483D[02000000]          	cmp rax, sob_boolean_false
 10230 00006D61 0F8483010000            	je .L_if_else_00d2
 10231                                  	; preparing a non-tail-call
 10232 00006D67 488B4528                	mov rax, PARAM(1)	; param b
 10233 00006D6B 50                      	push rax
 10234 00006D6C 6A01                    	push 1	; arg count
 10235 00006D6E 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10236 00006D76 803805                  	cmp byte [rax], T_undefined
 10237 00006D79 0F8419BF0000            	je L_error_fvar_undefined
 10238 00006D7F 803804                  	cmp byte [rax], T_closure
 10239 00006D82 0F8594BF0000            	jne L_error_non_closure
 10240 00006D88 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10241 00006D8B FF5009                  	call SOB_CLOSURE_CODE(rax)
 10242 00006D8E 483D[02000000]          	cmp rax, sob_boolean_false
 10243 00006D94 7431                    	je .L_if_else_00c9
 10244                                  	; preparing a non-tail-call
 10245 00006D96 488B4528                	mov rax, PARAM(1)	; param b
 10246 00006D9A 50                      	push rax
 10247 00006D9B 488B4520                	mov rax, PARAM(0)	; param a
 10248 00006D9F 50                      	push rax
 10249 00006DA0 6A02                    	push 2	; arg count
 10250 00006DA2 488B0425[5D0F0000]      	mov rax, qword [free_var_24]	; free var __bin-mul-zz
 10251 00006DAA 803805                  	cmp byte [rax], T_undefined
 10252 00006DAD 0F84E5BE0000            	je L_error_fvar_undefined
 10253 00006DB3 803804                  	cmp byte [rax], T_closure
 10254 00006DB6 0F8560BF0000            	jne L_error_non_closure
 10255 00006DBC FF7001                  	push SOB_CLOSURE_ENV(rax)
 10256 00006DBF FF5009                  	call SOB_CLOSURE_CODE(rax)
 10257 00006DC2 E91E010000              	jmp .L_if_end_00c9
 10258                                  .L_if_else_00c9:
 10259                                  	; preparing a non-tail-call
 10260 00006DC7 488B4528                	mov rax, PARAM(1)	; param b
 10261 00006DCB 50                      	push rax
 10262 00006DCC 6A01                    	push 1	; arg count
 10263 00006DCE 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10264 00006DD6 803805                  	cmp byte [rax], T_undefined
 10265 00006DD9 0F84B9BE0000            	je L_error_fvar_undefined
 10266 00006DDF 803804                  	cmp byte [rax], T_closure
 10267 00006DE2 0F8534BF0000            	jne L_error_non_closure
 10268 00006DE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10269 00006DEB FF5009                  	call SOB_CLOSURE_CODE(rax)
 10270 00006DEE 483D[02000000]          	cmp rax, sob_boolean_false
 10271 00006DF4 7454                    	je .L_if_else_00c8
 10272                                  	; preparing a non-tail-call
 10273 00006DF6 488B4528                	mov rax, PARAM(1)	; param b
 10274 00006DFA 50                      	push rax
 10275                                  	; preparing a non-tail-call
 10276 00006DFB 488B4520                	mov rax, PARAM(0)	; param a
 10277 00006DFF 50                      	push rax
 10278 00006E00 6A01                    	push 1	; arg count
 10279 00006E02 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10280 00006E0A 803805                  	cmp byte [rax], T_undefined
 10281 00006E0D 0F8485BE0000            	je L_error_fvar_undefined
 10282 00006E13 803804                  	cmp byte [rax], T_closure
 10283 00006E16 0F8500BF0000            	jne L_error_non_closure
 10284 00006E1C FF7001                  	push SOB_CLOSURE_ENV(rax)
 10285 00006E1F FF5009                  	call SOB_CLOSURE_CODE(rax)
 10286 00006E22 50                      	push rax
 10287 00006E23 6A02                    	push 2	; arg count
 10288 00006E25 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 10289 00006E2D 803805                  	cmp byte [rax], T_undefined
 10290 00006E30 0F8462BE0000            	je L_error_fvar_undefined
 10291 00006E36 803804                  	cmp byte [rax], T_closure
 10292 00006E39 0F85DDBE0000            	jne L_error_non_closure
 10293 00006E3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10294 00006E42 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10295 00006E45 E99B000000              	jmp .L_if_end_00c8
 10296                                  .L_if_else_00c8:
 10297                                  	; preparing a non-tail-call
 10298 00006E4A 488B4528                	mov rax, PARAM(1)	; param b
 10299 00006E4E 50                      	push rax
 10300 00006E4F 6A01                    	push 1	; arg count
 10301 00006E51 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10302 00006E59 803805                  	cmp byte [rax], T_undefined
 10303 00006E5C 0F8436BE0000            	je L_error_fvar_undefined
 10304 00006E62 803804                  	cmp byte [rax], T_closure
 10305 00006E65 0F85B1BE0000            	jne L_error_non_closure
 10306 00006E6B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10307 00006E6E FF5009                  	call SOB_CLOSURE_CODE(rax)
 10308 00006E71 483D[02000000]          	cmp rax, sob_boolean_false
 10309 00006E77 7451                    	je .L_if_else_00c7
 10310                                  	; preparing a non-tail-call
 10311 00006E79 488B4528                	mov rax, PARAM(1)	; param b
 10312 00006E7D 50                      	push rax
 10313                                  	; preparing a non-tail-call
 10314 00006E7E 488B4520                	mov rax, PARAM(0)	; param a
 10315 00006E82 50                      	push rax
 10316 00006E83 6A01                    	push 1	; arg count
 10317 00006E85 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10318 00006E8D 803805                  	cmp byte [rax], T_undefined
 10319 00006E90 0F8402BE0000            	je L_error_fvar_undefined
 10320 00006E96 803804                  	cmp byte [rax], T_closure
 10321 00006E99 0F857DBE0000            	jne L_error_non_closure
 10322 00006E9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10323 00006EA2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10324 00006EA5 50                      	push rax
 10325 00006EA6 6A02                    	push 2	; arg count
 10326 00006EA8 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 10327 00006EB0 803805                  	cmp byte [rax], T_undefined
 10328 00006EB3 0F84DFBD0000            	je L_error_fvar_undefined
 10329 00006EB9 803804                  	cmp byte [rax], T_closure
 10330 00006EBC 0F855ABE0000            	jne L_error_non_closure
 10331 00006EC2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10332 00006EC5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10333 00006EC8 EB1B                    	jmp .L_if_end_00c7
 10334                                  .L_if_else_00c7:
 10335                                  	; preparing a non-tail-call
 10336 00006ECA 6A00                    	push 0	; arg count
 10337 00006ECC 488B4510                	mov rax, ENV
 10338 00006ED0 488B00                  	mov rax, qword [rax + 8 * 0]
 10339 00006ED3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10340 00006ED6 803804                  	cmp byte [rax], T_closure
 10341 00006ED9 0F853DBE0000            	jne L_error_non_closure
 10342 00006EDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10343 00006EE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10344                                  .L_if_end_00c7:
 10345                                  .L_if_end_00c8:
 10346                                  .L_if_end_00c9:
 10347 00006EE5 E981030000              	jmp .L_if_end_00d2
 10348                                  .L_if_else_00d2:
 10349                                  	; preparing a non-tail-call
 10350 00006EEA 488B4520                	mov rax, PARAM(0)	; param a
 10351 00006EEE 50                      	push rax
 10352 00006EEF 6A01                    	push 1	; arg count
 10353 00006EF1 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10354 00006EF9 803805                  	cmp byte [rax], T_undefined
 10355 00006EFC 0F8496BD0000            	je L_error_fvar_undefined
 10356 00006F02 803804                  	cmp byte [rax], T_closure
 10357 00006F05 0F8511BE0000            	jne L_error_non_closure
 10358 00006F0B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10359 00006F0E FF5009                  	call SOB_CLOSURE_CODE(rax)
 10360 00006F11 483D[02000000]          	cmp rax, sob_boolean_false
 10361 00006F17 0F8483010000            	je .L_if_else_00d1
 10362                                  	; preparing a non-tail-call
 10363 00006F1D 488B4528                	mov rax, PARAM(1)	; param b
 10364 00006F21 50                      	push rax
 10365 00006F22 6A01                    	push 1	; arg count
 10366 00006F24 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10367 00006F2C 803805                  	cmp byte [rax], T_undefined
 10368 00006F2F 0F8463BD0000            	je L_error_fvar_undefined
 10369 00006F35 803804                  	cmp byte [rax], T_closure
 10370 00006F38 0F85DEBD0000            	jne L_error_non_closure
 10371 00006F3E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10372 00006F41 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10373 00006F44 483D[02000000]          	cmp rax, sob_boolean_false
 10374 00006F4A 7454                    	je .L_if_else_00cc
 10375                                  	; preparing a non-tail-call
 10376                                  	; preparing a non-tail-call
 10377 00006F4C 488B4528                	mov rax, PARAM(1)	; param b
 10378 00006F50 50                      	push rax
 10379 00006F51 6A01                    	push 1	; arg count
 10380 00006F53 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10381 00006F5B 803805                  	cmp byte [rax], T_undefined
 10382 00006F5E 0F8434BD0000            	je L_error_fvar_undefined
 10383 00006F64 803804                  	cmp byte [rax], T_closure
 10384 00006F67 0F85AFBD0000            	jne L_error_non_closure
 10385 00006F6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 10386 00006F70 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10387 00006F73 50                      	push rax
 10388 00006F74 488B4520                	mov rax, PARAM(0)	; param a
 10389 00006F78 50                      	push rax
 10390 00006F79 6A02                    	push 2	; arg count
 10391 00006F7B 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 10392 00006F83 803805                  	cmp byte [rax], T_undefined
 10393 00006F86 0F840CBD0000            	je L_error_fvar_undefined
 10394 00006F8C 803804                  	cmp byte [rax], T_closure
 10395 00006F8F 0F8587BD0000            	jne L_error_non_closure
 10396 00006F95 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10397 00006F98 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10398 00006F9B E9FB000000              	jmp .L_if_end_00cc
 10399                                  .L_if_else_00cc:
 10400                                  	; preparing a non-tail-call
 10401 00006FA0 488B4528                	mov rax, PARAM(1)	; param b
 10402 00006FA4 50                      	push rax
 10403 00006FA5 6A01                    	push 1	; arg count
 10404 00006FA7 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10405 00006FAF 803805                  	cmp byte [rax], T_undefined
 10406 00006FB2 0F84E0BC0000            	je L_error_fvar_undefined
 10407 00006FB8 803804                  	cmp byte [rax], T_closure
 10408 00006FBB 0F855BBD0000            	jne L_error_non_closure
 10409 00006FC1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10410 00006FC4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10411 00006FC7 483D[02000000]          	cmp rax, sob_boolean_false
 10412 00006FCD 7431                    	je .L_if_else_00cb
 10413                                  	; preparing a non-tail-call
 10414 00006FCF 488B4528                	mov rax, PARAM(1)	; param b
 10415 00006FD3 50                      	push rax
 10416 00006FD4 488B4520                	mov rax, PARAM(0)	; param a
 10417 00006FD8 50                      	push rax
 10418 00006FD9 6A02                    	push 2	; arg count
 10419 00006FDB 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 10420 00006FE3 803805                  	cmp byte [rax], T_undefined
 10421 00006FE6 0F84ACBC0000            	je L_error_fvar_undefined
 10422 00006FEC 803804                  	cmp byte [rax], T_closure
 10423 00006FEF 0F8527BD0000            	jne L_error_non_closure
 10424 00006FF5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10425 00006FF8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10426 00006FFB E99B000000              	jmp .L_if_end_00cb
 10427                                  .L_if_else_00cb:
 10428                                  	; preparing a non-tail-call
 10429 00007000 488B4528                	mov rax, PARAM(1)	; param b
 10430 00007004 50                      	push rax
 10431 00007005 6A01                    	push 1	; arg count
 10432 00007007 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10433 0000700F 803805                  	cmp byte [rax], T_undefined
 10434 00007012 0F8480BC0000            	je L_error_fvar_undefined
 10435 00007018 803804                  	cmp byte [rax], T_closure
 10436 0000701B 0F85FBBC0000            	jne L_error_non_closure
 10437 00007021 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10438 00007024 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10439 00007027 483D[02000000]          	cmp rax, sob_boolean_false
 10440 0000702D 7451                    	je .L_if_else_00ca
 10441                                  	; preparing a non-tail-call
 10442 0000702F 488B4528                	mov rax, PARAM(1)	; param b
 10443 00007033 50                      	push rax
 10444                                  	; preparing a non-tail-call
 10445 00007034 488B4520                	mov rax, PARAM(0)	; param a
 10446 00007038 50                      	push rax
 10447 00007039 6A01                    	push 1	; arg count
 10448 0000703B 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10449 00007043 803805                  	cmp byte [rax], T_undefined
 10450 00007046 0F844CBC0000            	je L_error_fvar_undefined
 10451 0000704C 803804                  	cmp byte [rax], T_closure
 10452 0000704F 0F85C7BC0000            	jne L_error_non_closure
 10453 00007055 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10454 00007058 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10455 0000705B 50                      	push rax
 10456 0000705C 6A02                    	push 2	; arg count
 10457 0000705E 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 10458 00007066 803805                  	cmp byte [rax], T_undefined
 10459 00007069 0F8429BC0000            	je L_error_fvar_undefined
 10460 0000706F 803804                  	cmp byte [rax], T_closure
 10461 00007072 0F85A4BC0000            	jne L_error_non_closure
 10462 00007078 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10463 0000707B FF5009                  	call SOB_CLOSURE_CODE(rax)
 10464 0000707E EB1B                    	jmp .L_if_end_00ca
 10465                                  .L_if_else_00ca:
 10466                                  	; preparing a non-tail-call
 10467 00007080 6A00                    	push 0	; arg count
 10468 00007082 488B4510                	mov rax, ENV
 10469 00007086 488B00                  	mov rax, qword [rax + 8 * 0]
 10470 00007089 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10471 0000708C 803804                  	cmp byte [rax], T_closure
 10472 0000708F 0F8587BC0000            	jne L_error_non_closure
 10473 00007095 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10474 00007098 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10475                                  .L_if_end_00ca:
 10476                                  .L_if_end_00cb:
 10477                                  .L_if_end_00cc:
 10478 0000709B E9CB010000              	jmp .L_if_end_00d1
 10479                                  .L_if_else_00d1:
 10480                                  	; preparing a non-tail-call
 10481 000070A0 488B4520                	mov rax, PARAM(0)	; param a
 10482 000070A4 50                      	push rax
 10483 000070A5 6A01                    	push 1	; arg count
 10484 000070A7 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10485 000070AF 803805                  	cmp byte [rax], T_undefined
 10486 000070B2 0F84E0BB0000            	je L_error_fvar_undefined
 10487 000070B8 803804                  	cmp byte [rax], T_closure
 10488 000070BB 0F855BBC0000            	jne L_error_non_closure
 10489 000070C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10490 000070C4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10491 000070C7 483D[02000000]          	cmp rax, sob_boolean_false
 10492 000070CD 0F847D010000            	je .L_if_else_00d0
 10493                                  	; preparing a non-tail-call
 10494 000070D3 488B4528                	mov rax, PARAM(1)	; param b
 10495 000070D7 50                      	push rax
 10496 000070D8 6A01                    	push 1	; arg count
 10497 000070DA 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10498 000070E2 803805                  	cmp byte [rax], T_undefined
 10499 000070E5 0F84ADBB0000            	je L_error_fvar_undefined
 10500 000070EB 803804                  	cmp byte [rax], T_closure
 10501 000070EE 0F8528BC0000            	jne L_error_non_closure
 10502 000070F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10503 000070F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10504 000070FA 483D[02000000]          	cmp rax, sob_boolean_false
 10505 00007100 7454                    	je .L_if_else_00cf
 10506                                  	; preparing a non-tail-call
 10507                                  	; preparing a non-tail-call
 10508 00007102 488B4528                	mov rax, PARAM(1)	; param b
 10509 00007106 50                      	push rax
 10510 00007107 6A01                    	push 1	; arg count
 10511 00007109 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10512 00007111 803805                  	cmp byte [rax], T_undefined
 10513 00007114 0F847EBB0000            	je L_error_fvar_undefined
 10514 0000711A 803804                  	cmp byte [rax], T_closure
 10515 0000711D 0F85F9BB0000            	jne L_error_non_closure
 10516 00007123 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10517 00007126 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10518 00007129 50                      	push rax
 10519 0000712A 488B4520                	mov rax, PARAM(0)	; param a
 10520 0000712E 50                      	push rax
 10521 0000712F 6A02                    	push 2	; arg count
 10522 00007131 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 10523 00007139 803805                  	cmp byte [rax], T_undefined
 10524 0000713C 0F8456BB0000            	je L_error_fvar_undefined
 10525 00007142 803804                  	cmp byte [rax], T_closure
 10526 00007145 0F85D1BB0000            	jne L_error_non_closure
 10527 0000714B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10528 0000714E FF5009                  	call SOB_CLOSURE_CODE(rax)
 10529 00007151 E9F8000000              	jmp .L_if_end_00cf
 10530                                  .L_if_else_00cf:
 10531                                  	; preparing a non-tail-call
 10532 00007156 488B4528                	mov rax, PARAM(1)	; param b
 10533 0000715A 50                      	push rax
 10534 0000715B 6A01                    	push 1	; arg count
 10535 0000715D 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10536 00007165 803805                  	cmp byte [rax], T_undefined
 10537 00007168 0F842ABB0000            	je L_error_fvar_undefined
 10538 0000716E 803804                  	cmp byte [rax], T_closure
 10539 00007171 0F85A5BB0000            	jne L_error_non_closure
 10540 00007177 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10541 0000717A FF5009                  	call SOB_CLOSURE_CODE(rax)
 10542 0000717D 483D[02000000]          	cmp rax, sob_boolean_false
 10543 00007183 7451                    	je .L_if_else_00ce
 10544                                  	; preparing a non-tail-call
 10545                                  	; preparing a non-tail-call
 10546 00007185 488B4528                	mov rax, PARAM(1)	; param b
 10547 00007189 50                      	push rax
 10548 0000718A 6A01                    	push 1	; arg count
 10549 0000718C 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10550 00007194 803805                  	cmp byte [rax], T_undefined
 10551 00007197 0F84FBBA0000            	je L_error_fvar_undefined
 10552 0000719D 803804                  	cmp byte [rax], T_closure
 10553 000071A0 0F8576BB0000            	jne L_error_non_closure
 10554 000071A6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10555 000071A9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10556 000071AC 50                      	push rax
 10557 000071AD 488B4520                	mov rax, PARAM(0)	; param a
 10558 000071B1 50                      	push rax
 10559 000071B2 6A02                    	push 2	; arg count
 10560 000071B4 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 10561 000071BC 803805                  	cmp byte [rax], T_undefined
 10562 000071BF 0F84D3BA0000            	je L_error_fvar_undefined
 10563 000071C5 803804                  	cmp byte [rax], T_closure
 10564 000071C8 0F854EBB0000            	jne L_error_non_closure
 10565 000071CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10566 000071D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10567 000071D4 EB78                    	jmp .L_if_end_00ce
 10568                                  .L_if_else_00ce:
 10569                                  	; preparing a non-tail-call
 10570 000071D6 488B4528                	mov rax, PARAM(1)	; param b
 10571 000071DA 50                      	push rax
 10572 000071DB 6A01                    	push 1	; arg count
 10573 000071DD 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10574 000071E5 803805                  	cmp byte [rax], T_undefined
 10575 000071E8 0F84AABA0000            	je L_error_fvar_undefined
 10576 000071EE 803804                  	cmp byte [rax], T_closure
 10577 000071F1 0F8525BB0000            	jne L_error_non_closure
 10578 000071F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10579 000071FA FF5009                  	call SOB_CLOSURE_CODE(rax)
 10580 000071FD 483D[02000000]          	cmp rax, sob_boolean_false
 10581 00007203 742E                    	je .L_if_else_00cd
 10582                                  	; preparing a non-tail-call
 10583 00007205 488B4528                	mov rax, PARAM(1)	; param b
 10584 00007209 50                      	push rax
 10585 0000720A 488B4520                	mov rax, PARAM(0)	; param a
 10586 0000720E 50                      	push rax
 10587 0000720F 6A02                    	push 2	; arg count
 10588 00007211 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 10589 00007219 803805                  	cmp byte [rax], T_undefined
 10590 0000721C 0F8476BA0000            	je L_error_fvar_undefined
 10591 00007222 803804                  	cmp byte [rax], T_closure
 10592 00007225 0F85F1BA0000            	jne L_error_non_closure
 10593 0000722B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10594 0000722E FF5009                  	call SOB_CLOSURE_CODE(rax)
 10595 00007231 EB1B                    	jmp .L_if_end_00cd
 10596                                  .L_if_else_00cd:
 10597                                  	; preparing a non-tail-call
 10598 00007233 6A00                    	push 0	; arg count
 10599 00007235 488B4510                	mov rax, ENV
 10600 00007239 488B00                  	mov rax, qword [rax + 8 * 0]
 10601 0000723C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10602 0000723F 803804                  	cmp byte [rax], T_closure
 10603 00007242 0F85D4BA0000            	jne L_error_non_closure
 10604 00007248 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10605 0000724B FF5009                  	call SOB_CLOSURE_CODE(rax)
 10606                                  .L_if_end_00cd:
 10607                                  .L_if_end_00ce:
 10608                                  .L_if_end_00cf:
 10609 0000724E EB1B                    	jmp .L_if_end_00d0
 10610                                  .L_if_else_00d0:
 10611                                  	; preparing a non-tail-call
 10612 00007250 6A00                    	push 0	; arg count
 10613 00007252 488B4510                	mov rax, ENV
 10614 00007256 488B00                  	mov rax, qword [rax + 8 * 0]
 10615 00007259 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10616 0000725C 803804                  	cmp byte [rax], T_closure
 10617 0000725F 0F85B7BA0000            	jne L_error_non_closure
 10618 00007265 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10619 00007268 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10620                                  .L_if_end_00d0:
 10621                                  .L_if_end_00d1:
 10622                                  .L_if_end_00d2:
 10623 0000726B C9                      	leave
 10624 0000726C C22000                  	ret AND_KILL_FRAME(2)
 10625                                  .L_lambda_simple_end_0107:	; new closure is in rax
 10626 0000726F 50                      	push rax
 10627 00007270 6A01                    	push 1	; arg count
 10628 00007272 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10629 00007277 E849BB0000              	call malloc
 10630 0000727C 50                      	push rax
 10631 0000727D BF08000000              	mov rdi, 8 * 1	; new rib
 10632 00007282 E83EBB0000              	call malloc
 10633 00007287 50                      	push rax
 10634 00007288 BF10000000              	mov rdi, 8 * 2	; extended env
 10635 0000728D E833BB0000              	call malloc
 10636 00007292 488B7D10                	mov rdi, ENV
 10637 00007296 BE00000000              	mov rsi, 0
 10638 0000729B BA01000000              	mov rdx, 1
 10639                                  .L_lambda_simple_env_loop_0108:	; ext_env[i + 1] <-- env[i]
 10640 000072A0 4883FE01                	cmp rsi, 1
 10641 000072A4 7410                    	je .L_lambda_simple_env_end_0108
 10642 000072A6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10643 000072AA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10644 000072AE 48FFC6                  	inc rsi
 10645 000072B1 48FFC2                  	inc rdx
 10646 000072B4 EBEA                    	jmp .L_lambda_simple_env_loop_0108
 10647                                  .L_lambda_simple_env_end_0108:
 10648 000072B6 5B                      	pop rbx
 10649 000072B7 BE00000000              	mov rsi, 0
 10650                                  .L_lambda_simple_params_loop_0108:	; copy params
 10651 000072BC 4883FE01                	cmp rsi, 1
 10652 000072C0 740E                    	je .L_lambda_simple_params_end_0108
 10653 000072C2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10654 000072C7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10655 000072CB 48FFC6                  	inc rsi
 10656 000072CE EBEC                    	jmp .L_lambda_simple_params_loop_0108
 10657                                  .L_lambda_simple_params_end_0108:
 10658 000072D0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10659 000072D3 4889C3                  	mov rbx, rax
 10660 000072D6 58                      	pop rax
 10661 000072D7 C60004                  	mov byte [rax], T_closure
 10662 000072DA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10663 000072DE 48C74009[EB720000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0108
 10664 000072E6 E904020000              	jmp .L_lambda_simple_end_0108
 10665                                  .L_lambda_simple_code_0108:	; lambda-simple body
 10666 000072EB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10667 000072F1 740B                    	je .L_lambda_simple_arity_check_ok_0108
 10668 000072F3 FF742410                	push qword [rsp + 8 * 2]
 10669 000072F7 6A01                    	push 1
 10670 000072F9 E980BA0000              	jmp L_error_incorrect_arity_simple
 10671                                  .L_lambda_simple_arity_check_ok_0108:
 10672 000072FE C8000000                	enter 0, 0
 10673 00007302 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10674 00007307 E8B9BA0000              	call malloc
 10675 0000730C 50                      	push rax
 10676 0000730D BF08000000              	mov rdi, 8 * 1	; new rib
 10677 00007312 E8AEBA0000              	call malloc
 10678 00007317 50                      	push rax
 10679 00007318 BF18000000              	mov rdi, 8 * 3	; extended env
 10680 0000731D E8A3BA0000              	call malloc
 10681 00007322 488B7D10                	mov rdi, ENV
 10682 00007326 BE00000000              	mov rsi, 0
 10683 0000732B BA01000000              	mov rdx, 1
 10684                                  .L_lambda_opt_env_loop_0024:	; ext_env[i + 1] <-- env[i]
 10685 00007330 4883FE02                	cmp rsi, 2
 10686 00007334 7410                    	je .L_lambda_opt_env_end_0024
 10687 00007336 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10688 0000733A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10689 0000733E 48FFC6                  	inc rsi
 10690 00007341 48FFC2                  	inc rdx
 10691 00007344 EBEA                    	jmp .L_lambda_opt_env_loop_0024
 10692                                  .L_lambda_opt_env_end_0024:
 10693 00007346 5B                      	pop rbx
 10694 00007347 BE00000000              	mov rsi, 0
 10695                                  .L_lambda_opt_params_loop_0024:	; copy params
 10696 0000734C 4883FE01                	cmp rsi, 1
 10697 00007350 740E                    	je .L_lambda_opt_params_end_0024
 10698 00007352 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10699 00007357 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10700 0000735B 48FFC6                  	inc rsi
 10701 0000735E EBEC                    	jmp .L_lambda_opt_params_loop_0024
 10702                                  .L_lambda_opt_params_end_0024:
 10703 00007360 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10704 00007363 4889C3                  	mov rbx, rax
 10705 00007366 58                      	pop rax
 10706 00007367 C60004                  	mov byte [rax], T_closure
 10707 0000736A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10708 0000736E 48C74009[7B730000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0024
 10709 00007376 E970010000              	jmp .L_lambda_opt_end_0024
 10710                                  .L_lambda_opt_code_0024:	; lambda-opt body
 10711 0000737B 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10712 00007381 7411                    	je .L_lambda_opt_arity_check_exact_0024
 10713 00007383 0F8F85000000            	jg .L_lambda_opt_arity_check_more_0024
 10714 00007389 FF742410                	push qword [rsp + 8 * 2]
 10715 0000738D 6A00                    	push 0
 10716 0000738F E9FEB90000              	jmp L_error_incorrect_arity_opt
 10717                                  .L_lambda_opt_arity_check_exact_0024:
 10718 00007394 4883EC08                	sub rsp, 8
 10719 00007398 488B442408              	mov rax, qword[rsp + 8 *1]
 10720 0000739D 48890424                	mov qword[rsp], rax  
 10721 000073A1 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 10722 000073A6 4889442408              	mov qword[rsp + 8 * 1], rax
 10723 000073AB B801000000              	mov rax, 1
 10724 000073B0 4889442410              	mov qword[rsp + 8 *2], rax
 10725 000073B5 48B8-                   	mov rax, sob_nil
 10725 000073B7 [0100000000000000] 
 10726 000073BF 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 10727 000073C4 C8000000                	enter 0, 0
 10728                                  	; preparing a non-tail-call
 10729 000073C8 488B4520                	mov rax, PARAM(0)	; param s
 10730 000073CC 50                      	push rax
 10731 000073CD 48B8-                   	mov rax, L_constants + 2270
 10731 000073CF [DE08000000000000] 
 10732 000073D7 50                      	push rax
 10733 000073D8 488B4510                	mov rax, ENV
 10734 000073DC 488B00                  	mov rax, qword [rax + 8 * 0]
 10735 000073DF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 10736 000073E2 50                      	push rax
 10737 000073E3 6A03                    	push 3	; arg count
 10738 000073E5 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 10739 000073ED 803805                  	cmp byte [rax], T_undefined
 10740 000073F0 0F84A2B80000            	je L_error_fvar_undefined
 10741 000073F6 803804                  	cmp byte [rax], T_closure
 10742 000073F9 0F851DB90000            	jne L_error_non_closure
 10743 000073FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10744 00007402 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10745 00007405 C9                      	leave
 10746 00007406 C21800                  	ret AND_KILL_FRAME(1)
 10747 00007409 E9DD000000              	jmp .L_lambda_opt_end_0024	; new closure is in rax
 10748                                  .L_lambda_opt_arity_check_more_0024:
 10749 0000740E 488B442410              	mov rax, qword[rsp + 2 * 8]
 10750 00007413 4889C7                  	mov rdi, rax
 10751 00007416 49B9-                   	mov r9, sob_nil
 10751 00007418 [0100000000000000] 
 10752 00007420 4C8B442410              	mov r8, qword[rsp+2*8]
 10753                                  .L_lambda_opt_stack_shrink_loop_0024:
 10754 00007425 4983F800                	cmp r8, 0
 10755 00007429 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0024
 10756 0000742B 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 10757 00007430 BF11000000              	mov rdi, 1+8+8	;for pair
 10758 00007435 E88BB90000              	call malloc	 ;to create the pair in the stack
 10759 0000743A C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 10760 0000743D 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 10761 00007441 4C894809                 	mov qword[rax+1+8],r9
 10762 00007445 4989C1                  	mov r9 , rax	 ; for the recursion 
 10763 00007448 49FFC8                  	dec r8
 10764 0000744B EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0024
 10765                                  .L_lambda_opt_stack_shrink_loop_exit_0024:
 10766 0000744D 488B442410              	mov rax, qword[rsp + 2 * 8]
 10767 00007452 BF01000000              	mov rdi, 1
 10768 00007457 4829F8                  	sub rax, rdi
 10769 0000745A 4889C7                  	mov rdi, rax
 10770 0000745D 486BC008                	imul rax,8
 10771 00007461 4801C4                  	add rsp, rax
 10772 00007464 4889E0                  	mov rax, rsp
 10773 00007467 4989F8                  	mov r8, rdi
 10774 0000746A 4D6BC008                	imul r8, 8
 10775 0000746E 4C29C0                  	sub rax, r8
 10776 00007471 4989C2                  	mov r10, rax	; holds the original ret in the stack
 10777 00007474 4983C218                	add r10, 8*3
 10778 00007478 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 10779 0000747C 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 10780 0000747F 4D6BC008                	imul r8,8
 10781 00007483 4C01C0                  	add rax, r8
 10782 00007486 4C8908                  	mov qword[rax] ,r9
 10783 00007489 4983EA18                 	sub r10, 8*3
 10784 0000748D 48C744241001000000      	mov qword [rsp+2*8], 1
 10785 00007496 498B4208                	mov rax, qword[r10 + 1 * 8]
 10786 0000749A 4889442408              	mov qword[rsp + 1*8] ,rax
 10787 0000749F 498B02                  	mov rax, qword[r10]
 10788 000074A2 48890424                	mov qword[rsp], rax
 10789 000074A6 C8000000                	enter 0, 0
 10790                                  	; preparing a non-tail-call
 10791 000074AA 488B4520                	mov rax, PARAM(0)	; param s
 10792 000074AE 50                      	push rax
 10793 000074AF 48B8-                   	mov rax, L_constants + 2270
 10793 000074B1 [DE08000000000000] 
 10794 000074B9 50                      	push rax
 10795 000074BA 488B4510                	mov rax, ENV
 10796 000074BE 488B00                  	mov rax, qword [rax + 8 * 0]
 10797 000074C1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 10798 000074C4 50                      	push rax
 10799 000074C5 6A03                    	push 3	; arg count
 10800 000074C7 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 10801 000074CF 803805                  	cmp byte [rax], T_undefined
 10802 000074D2 0F84C0B70000            	je L_error_fvar_undefined
 10803 000074D8 803804                  	cmp byte [rax], T_closure
 10804 000074DB 0F853BB80000            	jne L_error_non_closure
 10805 000074E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10806 000074E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10807 000074E7 C9                      	leave
 10808 000074E8 C21800                  	ret AND_KILL_FRAME(1)
 10809                                  .L_lambda_opt_end_0024:	; new closure is in rax
 10810 000074EB C9                      	leave
 10811 000074EC C21800                  	ret AND_KILL_FRAME(1)
 10812                                  .L_lambda_simple_end_0108:	; new closure is in rax
 10813 000074EF 803804                  	cmp byte [rax], T_closure
 10814 000074F2 0F8524B80000            	jne L_error_non_closure
 10815 000074F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10816 000074FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 10817 000074FE C9                      	leave
 10818 000074FF C21800                  	ret AND_KILL_FRAME(1)
 10819                                  .L_lambda_simple_end_0106:	; new closure is in rax
 10820 00007502 803804                  	cmp byte [rax], T_closure
 10821 00007505 0F8511B80000            	jne L_error_non_closure
 10822 0000750B FF7001                  	push SOB_CLOSURE_ENV(rax)
 10823 0000750E FF5009                  	call SOB_CLOSURE_CODE(rax)
 10824 00007511 48890425[C50D0000]      	mov qword [free_var_0], rax
 10825 00007519 48B8-                   	mov rax, sob_void
 10825 0000751B [0000000000000000] 
 10826                                  
 10827 00007523 4889C7                  	mov rdi, rax
 10828 00007526 E8EFBA0000              	call print_sexpr_if_not_void
 10829                                  	; preparing a non-tail-call
 10830 0000752B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10831 00007530 E890B80000              	call malloc
 10832 00007535 50                      	push rax
 10833 00007536 BF00000000              	mov rdi, 8 * 0	; new rib
 10834 0000753B E885B80000              	call malloc
 10835 00007540 50                      	push rax
 10836 00007541 BF08000000              	mov rdi, 8 * 1	; extended env
 10837 00007546 E87AB80000              	call malloc
 10838 0000754B 488B7D10                	mov rdi, ENV
 10839 0000754F BE00000000              	mov rsi, 0
 10840 00007554 BA01000000              	mov rdx, 1
 10841                                  .L_lambda_simple_env_loop_0109:	; ext_env[i + 1] <-- env[i]
 10842 00007559 4883FE00                	cmp rsi, 0
 10843 0000755D 7410                    	je .L_lambda_simple_env_end_0109
 10844 0000755F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10845 00007563 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10846 00007567 48FFC6                  	inc rsi
 10847 0000756A 48FFC2                  	inc rdx
 10848 0000756D EBEA                    	jmp .L_lambda_simple_env_loop_0109
 10849                                  .L_lambda_simple_env_end_0109:
 10850 0000756F 5B                      	pop rbx
 10851 00007570 BE00000000              	mov rsi, 0
 10852                                  .L_lambda_simple_params_loop_0109:	; copy params
 10853 00007575 4883FE00                	cmp rsi, 0
 10854 00007579 740E                    	je .L_lambda_simple_params_end_0109
 10855 0000757B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10856 00007580 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10857 00007584 48FFC6                  	inc rsi
 10858 00007587 EBEC                    	jmp .L_lambda_simple_params_loop_0109
 10859                                  .L_lambda_simple_params_end_0109:
 10860 00007589 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10861 0000758C 4889C3                  	mov rbx, rax
 10862 0000758F 58                      	pop rax
 10863 00007590 C60004                  	mov byte [rax], T_closure
 10864 00007593 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10865 00007597 48C74009[A1750000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0109
 10866 0000759F EB53                    	jmp .L_lambda_simple_end_0109
 10867                                  .L_lambda_simple_code_0109:	; lambda-simple body
 10868 000075A1 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10869 000075A7 740B                    	je .L_lambda_simple_arity_check_ok_0109
 10870 000075A9 FF742410                	push qword [rsp + 8 * 2]
 10871 000075AD 6A00                    	push 0
 10872 000075AF E9CAB70000              	jmp L_error_incorrect_arity_simple
 10873                                  .L_lambda_simple_arity_check_ok_0109:
 10874 000075B4 C8000000                	enter 0, 0
 10875                                  	; preparing a non-tail-call
 10876 000075B8 48B8-                   	mov rax, L_constants + 2187
 10876 000075BA [8B08000000000000] 
 10877 000075C2 50                      	push rax
 10878 000075C3 48B8-                   	mov rax, L_constants + 2298
 10878 000075C5 [FA08000000000000] 
 10879 000075CD 50                      	push rax
 10880 000075CE 6A02                    	push 2	; arg count
 10881 000075D0 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 10882 000075D8 803805                  	cmp byte [rax], T_undefined
 10883 000075DB 0F84B7B60000            	je L_error_fvar_undefined
 10884 000075E1 803804                  	cmp byte [rax], T_closure
 10885 000075E4 0F8532B70000            	jne L_error_non_closure
 10886 000075EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10887 000075ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 10888 000075F0 C9                      	leave
 10889 000075F1 C21000                  	ret AND_KILL_FRAME(0)
 10890                                  .L_lambda_simple_end_0109:	; new closure is in rax
 10891 000075F4 50                      	push rax
 10892 000075F5 6A01                    	push 1	; arg count
 10893 000075F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10894 000075FC E8C4B70000              	call malloc
 10895 00007601 50                      	push rax
 10896 00007602 BF00000000              	mov rdi, 8 * 0	; new rib
 10897 00007607 E8B9B70000              	call malloc
 10898 0000760C 50                      	push rax
 10899 0000760D BF08000000              	mov rdi, 8 * 1	; extended env
 10900 00007612 E8AEB70000              	call malloc
 10901 00007617 488B7D10                	mov rdi, ENV
 10902 0000761B BE00000000              	mov rsi, 0
 10903 00007620 BA01000000              	mov rdx, 1
 10904                                  .L_lambda_simple_env_loop_010a:	; ext_env[i + 1] <-- env[i]
 10905 00007625 4883FE00                	cmp rsi, 0
 10906 00007629 7410                    	je .L_lambda_simple_env_end_010a
 10907 0000762B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10908 0000762F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10909 00007633 48FFC6                  	inc rsi
 10910 00007636 48FFC2                  	inc rdx
 10911 00007639 EBEA                    	jmp .L_lambda_simple_env_loop_010a
 10912                                  .L_lambda_simple_env_end_010a:
 10913 0000763B 5B                      	pop rbx
 10914 0000763C BE00000000              	mov rsi, 0
 10915                                  .L_lambda_simple_params_loop_010a:	; copy params
 10916 00007641 4883FE00                	cmp rsi, 0
 10917 00007645 740E                    	je .L_lambda_simple_params_end_010a
 10918 00007647 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10919 0000764C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10920 00007650 48FFC6                  	inc rsi
 10921 00007653 EBEC                    	jmp .L_lambda_simple_params_loop_010a
 10922                                  .L_lambda_simple_params_end_010a:
 10923 00007655 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10924 00007658 4889C3                  	mov rbx, rax
 10925 0000765B 58                      	pop rax
 10926 0000765C C60004                  	mov byte [rax], T_closure
 10927 0000765F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10928 00007663 48C74009[70760000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_010a
 10929 0000766B E9F70A0000              	jmp .L_lambda_simple_end_010a
 10930                                  .L_lambda_simple_code_010a:	; lambda-simple body
 10931 00007670 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10932 00007676 740B                    	je .L_lambda_simple_arity_check_ok_010a
 10933 00007678 FF742410                	push qword [rsp + 8 * 2]
 10934 0000767C 6A01                    	push 1
 10935 0000767E E9FBB60000              	jmp L_error_incorrect_arity_simple
 10936                                  .L_lambda_simple_arity_check_ok_010a:
 10937 00007683 C8000000                	enter 0, 0
 10938                                  	; preparing a non-tail-call
 10939 00007687 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10940 0000768C E834B70000              	call malloc
 10941 00007691 50                      	push rax
 10942 00007692 BF08000000              	mov rdi, 8 * 1	; new rib
 10943 00007697 E829B70000              	call malloc
 10944 0000769C 50                      	push rax
 10945 0000769D BF10000000              	mov rdi, 8 * 2	; extended env
 10946 000076A2 E81EB70000              	call malloc
 10947 000076A7 488B7D10                	mov rdi, ENV
 10948 000076AB BE00000000              	mov rsi, 0
 10949 000076B0 BA01000000              	mov rdx, 1
 10950                                  .L_lambda_simple_env_loop_010b:	; ext_env[i + 1] <-- env[i]
 10951 000076B5 4883FE01                	cmp rsi, 1
 10952 000076B9 7410                    	je .L_lambda_simple_env_end_010b
 10953 000076BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10954 000076BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10955 000076C3 48FFC6                  	inc rsi
 10956 000076C6 48FFC2                  	inc rdx
 10957 000076C9 EBEA                    	jmp .L_lambda_simple_env_loop_010b
 10958                                  .L_lambda_simple_env_end_010b:
 10959 000076CB 5B                      	pop rbx
 10960 000076CC BE00000000              	mov rsi, 0
 10961                                  .L_lambda_simple_params_loop_010b:	; copy params
 10962 000076D1 4883FE01                	cmp rsi, 1
 10963 000076D5 740E                    	je .L_lambda_simple_params_end_010b
 10964 000076D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10965 000076DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10966 000076E0 48FFC6                  	inc rsi
 10967 000076E3 EBEC                    	jmp .L_lambda_simple_params_loop_010b
 10968                                  .L_lambda_simple_params_end_010b:
 10969 000076E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10970 000076E8 4889C3                  	mov rbx, rax
 10971 000076EB 58                      	pop rax
 10972 000076EC C60004                  	mov byte [rax], T_closure
 10973 000076EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10974 000076F3 48C74009[00770000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_010b
 10975 000076FB E952050000              	jmp .L_lambda_simple_end_010b
 10976                                  .L_lambda_simple_code_010b:	; lambda-simple body
 10977 00007700 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10978 00007706 740B                    	je .L_lambda_simple_arity_check_ok_010b
 10979 00007708 FF742410                	push qword [rsp + 8 * 2]
 10980 0000770C 6A02                    	push 2
 10981 0000770E E96BB60000              	jmp L_error_incorrect_arity_simple
 10982                                  .L_lambda_simple_arity_check_ok_010b:
 10983 00007713 C8000000                	enter 0, 0
 10984                                  	; preparing a non-tail-call
 10985 00007717 488B4520                	mov rax, PARAM(0)	; param a
 10986 0000771B 50                      	push rax
 10987 0000771C 6A01                    	push 1	; arg count
 10988 0000771E 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10989 00007726 803805                  	cmp byte [rax], T_undefined
 10990 00007729 0F8469B50000            	je L_error_fvar_undefined
 10991 0000772F 803804                  	cmp byte [rax], T_closure
 10992 00007732 0F85E4B50000            	jne L_error_non_closure
 10993 00007738 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10994 0000773B FF5009                  	call SOB_CLOSURE_CODE(rax)
 10995 0000773E 483D[02000000]          	cmp rax, sob_boolean_false
 10996 00007744 0F8483010000            	je .L_if_else_00de
 10997                                  	; preparing a non-tail-call
 10998 0000774A 488B4528                	mov rax, PARAM(1)	; param b
 10999 0000774E 50                      	push rax
 11000 0000774F 6A01                    	push 1	; arg count
 11001 00007751 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11002 00007759 803805                  	cmp byte [rax], T_undefined
 11003 0000775C 0F8436B50000            	je L_error_fvar_undefined
 11004 00007762 803804                  	cmp byte [rax], T_closure
 11005 00007765 0F85B1B50000            	jne L_error_non_closure
 11006 0000776B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11007 0000776E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11008 00007771 483D[02000000]          	cmp rax, sob_boolean_false
 11009 00007777 7431                    	je .L_if_else_00d5
 11010                                  	; preparing a non-tail-call
 11011 00007779 488B4528                	mov rax, PARAM(1)	; param b
 11012 0000777D 50                      	push rax
 11013 0000777E 488B4520                	mov rax, PARAM(0)	; param a
 11014 00007782 50                      	push rax
 11015 00007783 6A02                    	push 2	; arg count
 11016 00007785 488B0425[C40E0000]      	mov rax, qword [free_var_15]	; free var __bin-div-zz
 11017 0000778D 803805                  	cmp byte [rax], T_undefined
 11018 00007790 0F8402B50000            	je L_error_fvar_undefined
 11019 00007796 803804                  	cmp byte [rax], T_closure
 11020 00007799 0F857DB50000            	jne L_error_non_closure
 11021 0000779F FF7001                  	push SOB_CLOSURE_ENV(rax)
 11022 000077A2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11023 000077A5 E91E010000              	jmp .L_if_end_00d5
 11024                                  .L_if_else_00d5:
 11025                                  	; preparing a non-tail-call
 11026 000077AA 488B4528                	mov rax, PARAM(1)	; param b
 11027 000077AE 50                      	push rax
 11028 000077AF 6A01                    	push 1	; arg count
 11029 000077B1 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11030 000077B9 803805                  	cmp byte [rax], T_undefined
 11031 000077BC 0F84D6B40000            	je L_error_fvar_undefined
 11032 000077C2 803804                  	cmp byte [rax], T_closure
 11033 000077C5 0F8551B50000            	jne L_error_non_closure
 11034 000077CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 11035 000077CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 11036 000077D1 483D[02000000]          	cmp rax, sob_boolean_false
 11037 000077D7 7454                    	je .L_if_else_00d4
 11038                                  	; preparing a non-tail-call
 11039 000077D9 488B4528                	mov rax, PARAM(1)	; param b
 11040 000077DD 50                      	push rax
 11041                                  	; preparing a non-tail-call
 11042 000077DE 488B4520                	mov rax, PARAM(0)	; param a
 11043 000077E2 50                      	push rax
 11044 000077E3 6A01                    	push 1	; arg count
 11045 000077E5 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11046 000077ED 803805                  	cmp byte [rax], T_undefined
 11047 000077F0 0F84A2B40000            	je L_error_fvar_undefined
 11048 000077F6 803804                  	cmp byte [rax], T_closure
 11049 000077F9 0F851DB50000            	jne L_error_non_closure
 11050 000077FF FF7001                  	push SOB_CLOSURE_ENV(rax)
 11051 00007802 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11052 00007805 50                      	push rax
 11053 00007806 6A02                    	push 2	; arg count
 11054 00007808 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 11055 00007810 803805                  	cmp byte [rax], T_undefined
 11056 00007813 0F847FB40000            	je L_error_fvar_undefined
 11057 00007819 803804                  	cmp byte [rax], T_closure
 11058 0000781C 0F85FAB40000            	jne L_error_non_closure
 11059 00007822 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11060 00007825 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11061 00007828 E99B000000              	jmp .L_if_end_00d4
 11062                                  .L_if_else_00d4:
 11063                                  	; preparing a non-tail-call
 11064 0000782D 488B4528                	mov rax, PARAM(1)	; param b
 11065 00007831 50                      	push rax
 11066 00007832 6A01                    	push 1	; arg count
 11067 00007834 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11068 0000783C 803805                  	cmp byte [rax], T_undefined
 11069 0000783F 0F8453B40000            	je L_error_fvar_undefined
 11070 00007845 803804                  	cmp byte [rax], T_closure
 11071 00007848 0F85CEB40000            	jne L_error_non_closure
 11072 0000784E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11073 00007851 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11074 00007854 483D[02000000]          	cmp rax, sob_boolean_false
 11075 0000785A 7451                    	je .L_if_else_00d3
 11076                                  	; preparing a non-tail-call
 11077 0000785C 488B4528                	mov rax, PARAM(1)	; param b
 11078 00007860 50                      	push rax
 11079                                  	; preparing a non-tail-call
 11080 00007861 488B4520                	mov rax, PARAM(0)	; param a
 11081 00007865 50                      	push rax
 11082 00007866 6A01                    	push 1	; arg count
 11083 00007868 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11084 00007870 803805                  	cmp byte [rax], T_undefined
 11085 00007873 0F841FB40000            	je L_error_fvar_undefined
 11086 00007879 803804                  	cmp byte [rax], T_closure
 11087 0000787C 0F859AB40000            	jne L_error_non_closure
 11088 00007882 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11089 00007885 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11090 00007888 50                      	push rax
 11091 00007889 6A02                    	push 2	; arg count
 11092 0000788B 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 11093 00007893 803805                  	cmp byte [rax], T_undefined
 11094 00007896 0F84FCB30000            	je L_error_fvar_undefined
 11095 0000789C 803804                  	cmp byte [rax], T_closure
 11096 0000789F 0F8577B40000            	jne L_error_non_closure
 11097 000078A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11098 000078A8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11099 000078AB EB1B                    	jmp .L_if_end_00d3
 11100                                  .L_if_else_00d3:
 11101                                  	; preparing a non-tail-call
 11102 000078AD 6A00                    	push 0	; arg count
 11103 000078AF 488B4510                	mov rax, ENV
 11104 000078B3 488B00                  	mov rax, qword [rax + 8 * 0]
 11105 000078B6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11106 000078B9 803804                  	cmp byte [rax], T_closure
 11107 000078BC 0F855AB40000            	jne L_error_non_closure
 11108 000078C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11109 000078C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11110                                  .L_if_end_00d3:
 11111                                  .L_if_end_00d4:
 11112                                  .L_if_end_00d5:
 11113 000078C8 E981030000              	jmp .L_if_end_00de
 11114                                  .L_if_else_00de:
 11115                                  	; preparing a non-tail-call
 11116 000078CD 488B4520                	mov rax, PARAM(0)	; param a
 11117 000078D1 50                      	push rax
 11118 000078D2 6A01                    	push 1	; arg count
 11119 000078D4 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11120 000078DC 803805                  	cmp byte [rax], T_undefined
 11121 000078DF 0F84B3B30000            	je L_error_fvar_undefined
 11122 000078E5 803804                  	cmp byte [rax], T_closure
 11123 000078E8 0F852EB40000            	jne L_error_non_closure
 11124 000078EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 11125 000078F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11126 000078F4 483D[02000000]          	cmp rax, sob_boolean_false
 11127 000078FA 0F8483010000            	je .L_if_else_00dd
 11128                                  	; preparing a non-tail-call
 11129 00007900 488B4528                	mov rax, PARAM(1)	; param b
 11130 00007904 50                      	push rax
 11131 00007905 6A01                    	push 1	; arg count
 11132 00007907 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11133 0000790F 803805                  	cmp byte [rax], T_undefined
 11134 00007912 0F8480B30000            	je L_error_fvar_undefined
 11135 00007918 803804                  	cmp byte [rax], T_closure
 11136 0000791B 0F85FBB30000            	jne L_error_non_closure
 11137 00007921 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11138 00007924 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11139 00007927 483D[02000000]          	cmp rax, sob_boolean_false
 11140 0000792D 7454                    	je .L_if_else_00d8
 11141                                  	; preparing a non-tail-call
 11142                                  	; preparing a non-tail-call
 11143 0000792F 488B4528                	mov rax, PARAM(1)	; param b
 11144 00007933 50                      	push rax
 11145 00007934 6A01                    	push 1	; arg count
 11146 00007936 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 11147 0000793E 803805                  	cmp byte [rax], T_undefined
 11148 00007941 0F8451B30000            	je L_error_fvar_undefined
 11149 00007947 803804                  	cmp byte [rax], T_closure
 11150 0000794A 0F85CCB30000            	jne L_error_non_closure
 11151 00007950 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11152 00007953 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11153 00007956 50                      	push rax
 11154 00007957 488B4520                	mov rax, PARAM(0)	; param a
 11155 0000795B 50                      	push rax
 11156 0000795C 6A02                    	push 2	; arg count
 11157 0000795E 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 11158 00007966 803805                  	cmp byte [rax], T_undefined
 11159 00007969 0F8429B30000            	je L_error_fvar_undefined
 11160 0000796F 803804                  	cmp byte [rax], T_closure
 11161 00007972 0F85A4B30000            	jne L_error_non_closure
 11162 00007978 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11163 0000797B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11164 0000797E E9FB000000              	jmp .L_if_end_00d8
 11165                                  .L_if_else_00d8:
 11166                                  	; preparing a non-tail-call
 11167 00007983 488B4528                	mov rax, PARAM(1)	; param b
 11168 00007987 50                      	push rax
 11169 00007988 6A01                    	push 1	; arg count
 11170 0000798A 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11171 00007992 803805                  	cmp byte [rax], T_undefined
 11172 00007995 0F84FDB20000            	je L_error_fvar_undefined
 11173 0000799B 803804                  	cmp byte [rax], T_closure
 11174 0000799E 0F8578B30000            	jne L_error_non_closure
 11175 000079A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11176 000079A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11177 000079AA 483D[02000000]          	cmp rax, sob_boolean_false
 11178 000079B0 7431                    	je .L_if_else_00d7
 11179                                  	; preparing a non-tail-call
 11180 000079B2 488B4528                	mov rax, PARAM(1)	; param b
 11181 000079B6 50                      	push rax
 11182 000079B7 488B4520                	mov rax, PARAM(0)	; param a
 11183 000079BB 50                      	push rax
 11184 000079BC 6A02                    	push 2	; arg count
 11185 000079BE 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 11186 000079C6 803805                  	cmp byte [rax], T_undefined
 11187 000079C9 0F84C9B20000            	je L_error_fvar_undefined
 11188 000079CF 803804                  	cmp byte [rax], T_closure
 11189 000079D2 0F8544B30000            	jne L_error_non_closure
 11190 000079D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11191 000079DB FF5009                  	call SOB_CLOSURE_CODE(rax)
 11192 000079DE E99B000000              	jmp .L_if_end_00d7
 11193                                  .L_if_else_00d7:
 11194                                  	; preparing a non-tail-call
 11195 000079E3 488B4528                	mov rax, PARAM(1)	; param b
 11196 000079E7 50                      	push rax
 11197 000079E8 6A01                    	push 1	; arg count
 11198 000079EA 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11199 000079F2 803805                  	cmp byte [rax], T_undefined
 11200 000079F5 0F849DB20000            	je L_error_fvar_undefined
 11201 000079FB 803804                  	cmp byte [rax], T_closure
 11202 000079FE 0F8518B30000            	jne L_error_non_closure
 11203 00007A04 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11204 00007A07 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11205 00007A0A 483D[02000000]          	cmp rax, sob_boolean_false
 11206 00007A10 7451                    	je .L_if_else_00d6
 11207                                  	; preparing a non-tail-call
 11208 00007A12 488B4528                	mov rax, PARAM(1)	; param b
 11209 00007A16 50                      	push rax
 11210                                  	; preparing a non-tail-call
 11211 00007A17 488B4520                	mov rax, PARAM(0)	; param a
 11212 00007A1B 50                      	push rax
 11213 00007A1C 6A01                    	push 1	; arg count
 11214 00007A1E 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11215 00007A26 803805                  	cmp byte [rax], T_undefined
 11216 00007A29 0F8469B20000            	je L_error_fvar_undefined
 11217 00007A2F 803804                  	cmp byte [rax], T_closure
 11218 00007A32 0F85E4B20000            	jne L_error_non_closure
 11219 00007A38 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11220 00007A3B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11221 00007A3E 50                      	push rax
 11222 00007A3F 6A02                    	push 2	; arg count
 11223 00007A41 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 11224 00007A49 803805                  	cmp byte [rax], T_undefined
 11225 00007A4C 0F8446B20000            	je L_error_fvar_undefined
 11226 00007A52 803804                  	cmp byte [rax], T_closure
 11227 00007A55 0F85C1B20000            	jne L_error_non_closure
 11228 00007A5B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11229 00007A5E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11230 00007A61 EB1B                    	jmp .L_if_end_00d6
 11231                                  .L_if_else_00d6:
 11232                                  	; preparing a non-tail-call
 11233 00007A63 6A00                    	push 0	; arg count
 11234 00007A65 488B4510                	mov rax, ENV
 11235 00007A69 488B00                  	mov rax, qword [rax + 8 * 0]
 11236 00007A6C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11237 00007A6F 803804                  	cmp byte [rax], T_closure
 11238 00007A72 0F85A4B20000            	jne L_error_non_closure
 11239 00007A78 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11240 00007A7B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11241                                  .L_if_end_00d6:
 11242                                  .L_if_end_00d7:
 11243                                  .L_if_end_00d8:
 11244 00007A7E E9CB010000              	jmp .L_if_end_00dd
 11245                                  .L_if_else_00dd:
 11246                                  	; preparing a non-tail-call
 11247 00007A83 488B4520                	mov rax, PARAM(0)	; param a
 11248 00007A87 50                      	push rax
 11249 00007A88 6A01                    	push 1	; arg count
 11250 00007A8A 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11251 00007A92 803805                  	cmp byte [rax], T_undefined
 11252 00007A95 0F84FDB10000            	je L_error_fvar_undefined
 11253 00007A9B 803804                  	cmp byte [rax], T_closure
 11254 00007A9E 0F8578B20000            	jne L_error_non_closure
 11255 00007AA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11256 00007AA7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11257 00007AAA 483D[02000000]          	cmp rax, sob_boolean_false
 11258 00007AB0 0F847D010000            	je .L_if_else_00dc
 11259                                  	; preparing a non-tail-call
 11260 00007AB6 488B4528                	mov rax, PARAM(1)	; param b
 11261 00007ABA 50                      	push rax
 11262 00007ABB 6A01                    	push 1	; arg count
 11263 00007ABD 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11264 00007AC5 803805                  	cmp byte [rax], T_undefined
 11265 00007AC8 0F84CAB10000            	je L_error_fvar_undefined
 11266 00007ACE 803804                  	cmp byte [rax], T_closure
 11267 00007AD1 0F8545B20000            	jne L_error_non_closure
 11268 00007AD7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11269 00007ADA FF5009                  	call SOB_CLOSURE_CODE(rax)
 11270 00007ADD 483D[02000000]          	cmp rax, sob_boolean_false
 11271 00007AE3 7454                    	je .L_if_else_00db
 11272                                  	; preparing a non-tail-call
 11273                                  	; preparing a non-tail-call
 11274 00007AE5 488B4528                	mov rax, PARAM(1)	; param b
 11275 00007AE9 50                      	push rax
 11276 00007AEA 6A01                    	push 1	; arg count
 11277 00007AEC 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11278 00007AF4 803805                  	cmp byte [rax], T_undefined
 11279 00007AF7 0F849BB10000            	je L_error_fvar_undefined
 11280 00007AFD 803804                  	cmp byte [rax], T_closure
 11281 00007B00 0F8516B20000            	jne L_error_non_closure
 11282 00007B06 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11283 00007B09 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11284 00007B0C 50                      	push rax
 11285 00007B0D 488B4520                	mov rax, PARAM(0)	; param a
 11286 00007B11 50                      	push rax
 11287 00007B12 6A02                    	push 2	; arg count
 11288 00007B14 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 11289 00007B1C 803805                  	cmp byte [rax], T_undefined
 11290 00007B1F 0F8473B10000            	je L_error_fvar_undefined
 11291 00007B25 803804                  	cmp byte [rax], T_closure
 11292 00007B28 0F85EEB10000            	jne L_error_non_closure
 11293 00007B2E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11294 00007B31 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11295 00007B34 E9F8000000              	jmp .L_if_end_00db
 11296                                  .L_if_else_00db:
 11297                                  	; preparing a non-tail-call
 11298 00007B39 488B4528                	mov rax, PARAM(1)	; param b
 11299 00007B3D 50                      	push rax
 11300 00007B3E 6A01                    	push 1	; arg count
 11301 00007B40 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11302 00007B48 803805                  	cmp byte [rax], T_undefined
 11303 00007B4B 0F8447B10000            	je L_error_fvar_undefined
 11304 00007B51 803804                  	cmp byte [rax], T_closure
 11305 00007B54 0F85C2B10000            	jne L_error_non_closure
 11306 00007B5A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11307 00007B5D FF5009                  	call SOB_CLOSURE_CODE(rax)
 11308 00007B60 483D[02000000]          	cmp rax, sob_boolean_false
 11309 00007B66 7451                    	je .L_if_else_00da
 11310                                  	; preparing a non-tail-call
 11311                                  	; preparing a non-tail-call
 11312 00007B68 488B4528                	mov rax, PARAM(1)	; param b
 11313 00007B6C 50                      	push rax
 11314 00007B6D 6A01                    	push 1	; arg count
 11315 00007B6F 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11316 00007B77 803805                  	cmp byte [rax], T_undefined
 11317 00007B7A 0F8418B10000            	je L_error_fvar_undefined
 11318 00007B80 803804                  	cmp byte [rax], T_closure
 11319 00007B83 0F8593B10000            	jne L_error_non_closure
 11320 00007B89 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11321 00007B8C FF5009                  	call SOB_CLOSURE_CODE(rax)
 11322 00007B8F 50                      	push rax
 11323 00007B90 488B4520                	mov rax, PARAM(0)	; param a
 11324 00007B94 50                      	push rax
 11325 00007B95 6A02                    	push 2	; arg count
 11326 00007B97 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 11327 00007B9F 803805                  	cmp byte [rax], T_undefined
 11328 00007BA2 0F84F0B00000            	je L_error_fvar_undefined
 11329 00007BA8 803804                  	cmp byte [rax], T_closure
 11330 00007BAB 0F856BB10000            	jne L_error_non_closure
 11331 00007BB1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11332 00007BB4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11333 00007BB7 EB78                    	jmp .L_if_end_00da
 11334                                  .L_if_else_00da:
 11335                                  	; preparing a non-tail-call
 11336 00007BB9 488B4528                	mov rax, PARAM(1)	; param b
 11337 00007BBD 50                      	push rax
 11338 00007BBE 6A01                    	push 1	; arg count
 11339 00007BC0 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11340 00007BC8 803805                  	cmp byte [rax], T_undefined
 11341 00007BCB 0F84C7B00000            	je L_error_fvar_undefined
 11342 00007BD1 803804                  	cmp byte [rax], T_closure
 11343 00007BD4 0F8542B10000            	jne L_error_non_closure
 11344 00007BDA FF7001                  	push SOB_CLOSURE_ENV(rax)
 11345 00007BDD FF5009                  	call SOB_CLOSURE_CODE(rax)
 11346 00007BE0 483D[02000000]          	cmp rax, sob_boolean_false
 11347 00007BE6 742E                    	je .L_if_else_00d9
 11348                                  	; preparing a non-tail-call
 11349 00007BE8 488B4528                	mov rax, PARAM(1)	; param b
 11350 00007BEC 50                      	push rax
 11351 00007BED 488B4520                	mov rax, PARAM(0)	; param a
 11352 00007BF1 50                      	push rax
 11353 00007BF2 6A02                    	push 2	; arg count
 11354 00007BF4 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 11355 00007BFC 803805                  	cmp byte [rax], T_undefined
 11356 00007BFF 0F8493B00000            	je L_error_fvar_undefined
 11357 00007C05 803804                  	cmp byte [rax], T_closure
 11358 00007C08 0F850EB10000            	jne L_error_non_closure
 11359 00007C0E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11360 00007C11 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11361 00007C14 EB1B                    	jmp .L_if_end_00d9
 11362                                  .L_if_else_00d9:
 11363                                  	; preparing a non-tail-call
 11364 00007C16 6A00                    	push 0	; arg count
 11365 00007C18 488B4510                	mov rax, ENV
 11366 00007C1C 488B00                  	mov rax, qword [rax + 8 * 0]
 11367 00007C1F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11368 00007C22 803804                  	cmp byte [rax], T_closure
 11369 00007C25 0F85F1B00000            	jne L_error_non_closure
 11370 00007C2B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11371 00007C2E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11372                                  .L_if_end_00d9:
 11373                                  .L_if_end_00da:
 11374                                  .L_if_end_00db:
 11375 00007C31 EB1B                    	jmp .L_if_end_00dc
 11376                                  .L_if_else_00dc:
 11377                                  	; preparing a non-tail-call
 11378 00007C33 6A00                    	push 0	; arg count
 11379 00007C35 488B4510                	mov rax, ENV
 11380 00007C39 488B00                  	mov rax, qword [rax + 8 * 0]
 11381 00007C3C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11382 00007C3F 803804                  	cmp byte [rax], T_closure
 11383 00007C42 0F85D4B00000            	jne L_error_non_closure
 11384 00007C48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11385 00007C4B FF5009                  	call SOB_CLOSURE_CODE(rax)
 11386                                  .L_if_end_00dc:
 11387                                  .L_if_end_00dd:
 11388                                  .L_if_end_00de:
 11389 00007C4E C9                      	leave
 11390 00007C4F C22000                  	ret AND_KILL_FRAME(2)
 11391                                  .L_lambda_simple_end_010b:	; new closure is in rax
 11392 00007C52 50                      	push rax
 11393 00007C53 6A01                    	push 1	; arg count
 11394 00007C55 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11395 00007C5A E866B10000              	call malloc
 11396 00007C5F 50                      	push rax
 11397 00007C60 BF08000000              	mov rdi, 8 * 1	; new rib
 11398 00007C65 E85BB10000              	call malloc
 11399 00007C6A 50                      	push rax
 11400 00007C6B BF10000000              	mov rdi, 8 * 2	; extended env
 11401 00007C70 E850B10000              	call malloc
 11402 00007C75 488B7D10                	mov rdi, ENV
 11403 00007C79 BE00000000              	mov rsi, 0
 11404 00007C7E BA01000000              	mov rdx, 1
 11405                                  .L_lambda_simple_env_loop_010c:	; ext_env[i + 1] <-- env[i]
 11406 00007C83 4883FE01                	cmp rsi, 1
 11407 00007C87 7410                    	je .L_lambda_simple_env_end_010c
 11408 00007C89 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11409 00007C8D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11410 00007C91 48FFC6                  	inc rsi
 11411 00007C94 48FFC2                  	inc rdx
 11412 00007C97 EBEA                    	jmp .L_lambda_simple_env_loop_010c
 11413                                  .L_lambda_simple_env_end_010c:
 11414 00007C99 5B                      	pop rbx
 11415 00007C9A BE00000000              	mov rsi, 0
 11416                                  .L_lambda_simple_params_loop_010c:	; copy params
 11417 00007C9F 4883FE01                	cmp rsi, 1
 11418 00007CA3 740E                    	je .L_lambda_simple_params_end_010c
 11419 00007CA5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11420 00007CAA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11421 00007CAE 48FFC6                  	inc rsi
 11422 00007CB1 EBEC                    	jmp .L_lambda_simple_params_loop_010c
 11423                                  .L_lambda_simple_params_end_010c:
 11424 00007CB3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11425 00007CB6 4889C3                  	mov rbx, rax
 11426 00007CB9 58                      	pop rax
 11427 00007CBA C60004                  	mov byte [rax], T_closure
 11428 00007CBD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11429 00007CC1 48C74009[CE7C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_010c
 11430 00007CC9 E986040000              	jmp .L_lambda_simple_end_010c
 11431                                  .L_lambda_simple_code_010c:	; lambda-simple body
 11432 00007CCE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11433 00007CD4 740B                    	je .L_lambda_simple_arity_check_ok_010c
 11434 00007CD6 FF742410                	push qword [rsp + 8 * 2]
 11435 00007CDA 6A01                    	push 1
 11436 00007CDC E99DB00000              	jmp L_error_incorrect_arity_simple
 11437                                  .L_lambda_simple_arity_check_ok_010c:
 11438 00007CE1 C8000000                	enter 0, 0
 11439 00007CE5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11440 00007CEA E8D6B00000              	call malloc
 11441 00007CEF 50                      	push rax
 11442 00007CF0 BF08000000              	mov rdi, 8 * 1	; new rib
 11443 00007CF5 E8CBB00000              	call malloc
 11444 00007CFA 50                      	push rax
 11445 00007CFB BF18000000              	mov rdi, 8 * 3	; extended env
 11446 00007D00 E8C0B00000              	call malloc
 11447 00007D05 488B7D10                	mov rdi, ENV
 11448 00007D09 BE00000000              	mov rsi, 0
 11449 00007D0E BA01000000              	mov rdx, 1
 11450                                  .L_lambda_opt_env_loop_0025:	; ext_env[i + 1] <-- env[i]
 11451 00007D13 4883FE02                	cmp rsi, 2
 11452 00007D17 7410                    	je .L_lambda_opt_env_end_0025
 11453 00007D19 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11454 00007D1D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11455 00007D21 48FFC6                  	inc rsi
 11456 00007D24 48FFC2                  	inc rdx
 11457 00007D27 EBEA                    	jmp .L_lambda_opt_env_loop_0025
 11458                                  .L_lambda_opt_env_end_0025:
 11459 00007D29 5B                      	pop rbx
 11460 00007D2A BE00000000              	mov rsi, 0
 11461                                  .L_lambda_opt_params_loop_0025:	; copy params
 11462 00007D2F 4883FE01                	cmp rsi, 1
 11463 00007D33 740E                    	je .L_lambda_opt_params_end_0025
 11464 00007D35 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11465 00007D3A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11466 00007D3E 48FFC6                  	inc rsi
 11467 00007D41 EBEC                    	jmp .L_lambda_opt_params_loop_0025
 11468                                  .L_lambda_opt_params_end_0025:
 11469 00007D43 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11470 00007D46 4889C3                  	mov rbx, rax
 11471 00007D49 58                      	pop rax
 11472 00007D4A C60004                  	mov byte [rax], T_closure
 11473 00007D4D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11474 00007D51 48C74009[5E7D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0025
 11475 00007D59 E9F2030000              	jmp .L_lambda_opt_end_0025
 11476                                  .L_lambda_opt_code_0025:	; lambda-opt body
 11477 00007D5E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11478 00007D64 7411                    	je .L_lambda_opt_arity_check_exact_0025
 11479 00007D66 0F8FC4010000            	jg .L_lambda_opt_arity_check_more_0025
 11480 00007D6C FF742410                	push qword [rsp + 8 * 2]
 11481 00007D70 6A01                    	push 1
 11482 00007D72 E91BB00000              	jmp L_error_incorrect_arity_opt
 11483                                  .L_lambda_opt_arity_check_exact_0025:
 11484 00007D77 4883EC08                	sub rsp, 8
 11485 00007D7B 488B442408              	mov rax, qword[rsp + 8 *1]
 11486 00007D80 48890424                	mov qword[rsp], rax  
 11487 00007D84 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 11488 00007D89 4889442408              	mov qword[rsp + 8 * 1], rax
 11489 00007D8E B802000000              	mov rax, 2
 11490 00007D93 4889442410              	mov qword[rsp + 8 *2], rax
 11491 00007D98 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 11492 00007D9D 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 11493 00007DA2 48B8-                   	mov rax, sob_nil
 11493 00007DA4 [0100000000000000] 
 11494 00007DAC 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 11495 00007DB1 C8000000                	enter 0, 0
 11496                                  	; preparing a non-tail-call
 11497 00007DB5 488B4528                	mov rax, PARAM(1)	; param s
 11498 00007DB9 50                      	push rax
 11499 00007DBA 6A01                    	push 1	; arg count
 11500 00007DBC 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 11501 00007DC4 803805                  	cmp byte [rax], T_undefined
 11502 00007DC7 0F84CBAE0000            	je L_error_fvar_undefined
 11503 00007DCD 803804                  	cmp byte [rax], T_closure
 11504 00007DD0 0F8546AF0000            	jne L_error_non_closure
 11505 00007DD6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11506 00007DD9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11507 00007DDC 483D[02000000]          	cmp rax, sob_boolean_false
 11508 00007DE2 7430                    	je .L_if_else_00e0
 11509                                  	; preparing a non-tail-call
 11510 00007DE4 488B4520                	mov rax, PARAM(0)	; param a
 11511 00007DE8 50                      	push rax
 11512 00007DE9 48B8-                   	mov rax, L_constants + 2270
 11512 00007DEB [DE08000000000000] 
 11513 00007DF3 50                      	push rax
 11514 00007DF4 6A02                    	push 2	; arg count
 11515 00007DF6 488B4510                	mov rax, ENV
 11516 00007DFA 488B00                  	mov rax, qword [rax + 8 * 0]
 11517 00007DFD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 11518 00007E00 803804                  	cmp byte [rax], T_closure
 11519 00007E03 0F8513AF0000            	jne L_error_non_closure
 11520 00007E09 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11521 00007E0C FF5009                  	call SOB_CLOSURE_CODE(rax)
 11522 00007E0F E913010000              	jmp .L_if_end_00e0
 11523                                  .L_if_else_00e0:
 11524                                  	; preparing a non-tail-call
 11525                                  	; preparing a non-tail-call
 11526 00007E14 488B4528                	mov rax, PARAM(1)	; param s
 11527 00007E18 50                      	push rax
 11528 00007E19 48B8-                   	mov rax, L_constants + 2270
 11528 00007E1B [DE08000000000000] 
 11529 00007E23 50                      	push rax
 11530 00007E24 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 11531 00007E2C 803805                  	cmp byte [rax], T_undefined
 11532 00007E2F 0F8463AE0000            	je L_error_fvar_undefined
 11533 00007E35 50                      	push rax
 11534 00007E36 6A03                    	push 3	; arg count
 11535 00007E38 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 11536 00007E40 803805                  	cmp byte [rax], T_undefined
 11537 00007E43 0F844FAE0000            	je L_error_fvar_undefined
 11538 00007E49 803804                  	cmp byte [rax], T_closure
 11539 00007E4C 0F85CAAE0000            	jne L_error_non_closure
 11540 00007E52 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11541 00007E55 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11542 00007E58 50                      	push rax
 11543 00007E59 6A01                    	push 1	; arg count
 11544 00007E5B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11545 00007E60 E860AF0000              	call malloc
 11546 00007E65 50                      	push rax
 11547 00007E66 BF10000000              	mov rdi, 8 * 2	; new rib
 11548 00007E6B E855AF0000              	call malloc
 11549 00007E70 50                      	push rax
 11550 00007E71 BF20000000              	mov rdi, 8 * 4	; extended env
 11551 00007E76 E84AAF0000              	call malloc
 11552 00007E7B 488B7D10                	mov rdi, ENV
 11553 00007E7F BE00000000              	mov rsi, 0
 11554 00007E84 BA01000000              	mov rdx, 1
 11555                                  .L_lambda_simple_env_loop_010e:	; ext_env[i + 1] <-- env[i]
 11556 00007E89 4883FE03                	cmp rsi, 3
 11557 00007E8D 7410                    	je .L_lambda_simple_env_end_010e
 11558 00007E8F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11559 00007E93 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11560 00007E97 48FFC6                  	inc rsi
 11561 00007E9A 48FFC2                  	inc rdx
 11562 00007E9D EBEA                    	jmp .L_lambda_simple_env_loop_010e
 11563                                  .L_lambda_simple_env_end_010e:
 11564 00007E9F 5B                      	pop rbx
 11565 00007EA0 BE00000000              	mov rsi, 0
 11566                                  .L_lambda_simple_params_loop_010e:	; copy params
 11567 00007EA5 4883FE02                	cmp rsi, 2
 11568 00007EA9 740E                    	je .L_lambda_simple_params_end_010e
 11569 00007EAB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11570 00007EB0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11571 00007EB4 48FFC6                  	inc rsi
 11572 00007EB7 EBEC                    	jmp .L_lambda_simple_params_loop_010e
 11573                                  .L_lambda_simple_params_end_010e:
 11574 00007EB9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11575 00007EBC 4889C3                  	mov rbx, rax
 11576 00007EBF 58                      	pop rax
 11577 00007EC0 C60004                  	mov byte [rax], T_closure
 11578 00007EC3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11579 00007EC7 48C74009[D17E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_010e
 11580 00007ECF EB47                    	jmp .L_lambda_simple_end_010e
 11581                                  .L_lambda_simple_code_010e:	; lambda-simple body
 11582 00007ED1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11583 00007ED7 740B                    	je .L_lambda_simple_arity_check_ok_010e
 11584 00007ED9 FF742410                	push qword [rsp + 8 * 2]
 11585 00007EDD 6A01                    	push 1
 11586 00007EDF E99AAE0000              	jmp L_error_incorrect_arity_simple
 11587                                  .L_lambda_simple_arity_check_ok_010e:
 11588 00007EE4 C8000000                	enter 0, 0
 11589                                  	; preparing a non-tail-call
 11590 00007EE8 488B4520                	mov rax, PARAM(0)	; param b
 11591 00007EEC 50                      	push rax
 11592 00007EED 488B4510                	mov rax, ENV
 11593 00007EF1 488B00                  	mov rax, qword [rax + 8 * 0]
 11594 00007EF4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 11595 00007EF7 50                      	push rax
 11596 00007EF8 6A02                    	push 2	; arg count
 11597 00007EFA 488B4510                	mov rax, ENV
 11598 00007EFE 488B4008                	mov rax, qword [rax + 8 * 1]
 11599 00007F02 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 11600 00007F05 803804                  	cmp byte [rax], T_closure
 11601 00007F08 0F850EAE0000            	jne L_error_non_closure
 11602 00007F0E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11603 00007F11 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11604 00007F14 C9                      	leave
 11605 00007F15 C21800                  	ret AND_KILL_FRAME(1)
 11606                                  .L_lambda_simple_end_010e:	; new closure is in rax
 11607 00007F18 803804                  	cmp byte [rax], T_closure
 11608 00007F1B 0F85FBAD0000            	jne L_error_non_closure
 11609 00007F21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11610 00007F24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11611                                  .L_if_end_00e0:
 11612 00007F27 C9                      	leave
 11613 00007F28 C22000                  	ret AND_KILL_FRAME(2)
 11614 00007F2B E920020000              	jmp .L_lambda_opt_end_0025	; new closure is in rax
 11615                                  .L_lambda_opt_arity_check_more_0025:
 11616 00007F30 488B442410              	mov rax, qword[rsp + 2 * 8]
 11617 00007F35 4889C7                  	mov rdi, rax
 11618 00007F38 49B9-                   	mov r9, sob_nil
 11618 00007F3A [0100000000000000] 
 11619 00007F42 4C8B442410              	mov r8, qword[rsp+2*8]
 11620                                  .L_lambda_opt_stack_shrink_loop_0025:
 11621 00007F47 4983F801                	cmp r8, 1
 11622 00007F4B 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0025
 11623 00007F4D 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 11624 00007F52 BF11000000              	mov rdi, 1+8+8	;for pair
 11625 00007F57 E869AE0000              	call malloc	 ;to create the pair in the stack
 11626 00007F5C C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 11627 00007F5F 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 11628 00007F63 4C894809                 	mov qword[rax+1+8],r9
 11629 00007F67 4989C1                  	mov r9 , rax	 ; for the recursion 
 11630 00007F6A 49FFC8                  	dec r8
 11631 00007F6D EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0025
 11632                                  .L_lambda_opt_stack_shrink_loop_exit_0025:
 11633 00007F6F 488B442410              	mov rax, qword[rsp + 2 * 8]
 11634 00007F74 BF02000000              	mov rdi, 2
 11635 00007F79 4829F8                  	sub rax, rdi
 11636 00007F7C 4889C7                  	mov rdi, rax
 11637 00007F7F 486BC008                	imul rax,8
 11638 00007F83 4801C4                  	add rsp, rax
 11639 00007F86 4889E0                  	mov rax, rsp
 11640 00007F89 4989F8                  	mov r8, rdi
 11641 00007F8C 4D6BC008                	imul r8, 8
 11642 00007F90 4C29C0                  	sub rax, r8
 11643 00007F93 4989C2                  	mov r10, rax	; holds the original ret in the stack
 11644 00007F96 4983C218                	add r10, 8*3
 11645 00007F9A 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 11646 00007F9E 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 11647 00007FA1 4D6BC008                	imul r8,8
 11648 00007FA5 4C01C0                  	add rax, r8
 11649 00007FA8 4C8908                  	mov qword[rax] ,r9
 11650 00007FAB 4D89D0                   	mov r8, r10
 11651 00007FAE 4983C000                	add r8, 8 * 0
 11652 00007FB2 4D8B08                  	mov r9,qword[r8]
 11653 00007FB5 4D890CF8                	mov qword [r8 + rdi * 8], r9
 11654 00007FB9 4983EA18                	sub r10, 8*3
 11655 00007FBD 48C744241002000000      	mov qword [rsp+2*8], 2
 11656 00007FC6 498B4208                	mov rax, qword[r10 + 1 * 8]
 11657 00007FCA 4889442408              	mov qword[rsp + 1*8] ,rax
 11658 00007FCF 498B02                  	mov rax, qword[r10]
 11659 00007FD2 48890424                	mov qword[rsp], rax
 11660 00007FD6 C8000000                	enter 0, 0
 11661                                  	; preparing a non-tail-call
 11662 00007FDA 488B4528                	mov rax, PARAM(1)	; param s
 11663 00007FDE 50                      	push rax
 11664 00007FDF 6A01                    	push 1	; arg count
 11665 00007FE1 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 11666 00007FE9 803805                  	cmp byte [rax], T_undefined
 11667 00007FEC 0F84A6AC0000            	je L_error_fvar_undefined
 11668 00007FF2 803804                  	cmp byte [rax], T_closure
 11669 00007FF5 0F8521AD0000            	jne L_error_non_closure
 11670 00007FFB FF7001                  	push SOB_CLOSURE_ENV(rax)
 11671 00007FFE FF5009                  	call SOB_CLOSURE_CODE(rax)
 11672 00008001 483D[02000000]          	cmp rax, sob_boolean_false
 11673 00008007 7430                    	je .L_if_else_00df
 11674                                  	; preparing a non-tail-call
 11675 00008009 488B4520                	mov rax, PARAM(0)	; param a
 11676 0000800D 50                      	push rax
 11677 0000800E 48B8-                   	mov rax, L_constants + 2270
 11677 00008010 [DE08000000000000] 
 11678 00008018 50                      	push rax
 11679 00008019 6A02                    	push 2	; arg count
 11680 0000801B 488B4510                	mov rax, ENV
 11681 0000801F 488B00                  	mov rax, qword [rax + 8 * 0]
 11682 00008022 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 11683 00008025 803804                  	cmp byte [rax], T_closure
 11684 00008028 0F85EEAC0000            	jne L_error_non_closure
 11685 0000802E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11686 00008031 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11687 00008034 E913010000              	jmp .L_if_end_00df
 11688                                  .L_if_else_00df:
 11689                                  	; preparing a non-tail-call
 11690                                  	; preparing a non-tail-call
 11691 00008039 488B4528                	mov rax, PARAM(1)	; param s
 11692 0000803D 50                      	push rax
 11693 0000803E 48B8-                   	mov rax, L_constants + 2270
 11693 00008040 [DE08000000000000] 
 11694 00008048 50                      	push rax
 11695 00008049 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 11696 00008051 803805                  	cmp byte [rax], T_undefined
 11697 00008054 0F843EAC0000            	je L_error_fvar_undefined
 11698 0000805A 50                      	push rax
 11699 0000805B 6A03                    	push 3	; arg count
 11700 0000805D 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 11701 00008065 803805                  	cmp byte [rax], T_undefined
 11702 00008068 0F842AAC0000            	je L_error_fvar_undefined
 11703 0000806E 803804                  	cmp byte [rax], T_closure
 11704 00008071 0F85A5AC0000            	jne L_error_non_closure
 11705 00008077 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11706 0000807A FF5009                  	call SOB_CLOSURE_CODE(rax)
 11707 0000807D 50                      	push rax
 11708 0000807E 6A01                    	push 1	; arg count
 11709 00008080 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11710 00008085 E83BAD0000              	call malloc
 11711 0000808A 50                      	push rax
 11712 0000808B BF10000000              	mov rdi, 8 * 2	; new rib
 11713 00008090 E830AD0000              	call malloc
 11714 00008095 50                      	push rax
 11715 00008096 BF20000000              	mov rdi, 8 * 4	; extended env
 11716 0000809B E825AD0000              	call malloc
 11717 000080A0 488B7D10                	mov rdi, ENV
 11718 000080A4 BE00000000              	mov rsi, 0
 11719 000080A9 BA01000000              	mov rdx, 1
 11720                                  .L_lambda_simple_env_loop_010d:	; ext_env[i + 1] <-- env[i]
 11721 000080AE 4883FE03                	cmp rsi, 3
 11722 000080B2 7410                    	je .L_lambda_simple_env_end_010d
 11723 000080B4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11724 000080B8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11725 000080BC 48FFC6                  	inc rsi
 11726 000080BF 48FFC2                  	inc rdx
 11727 000080C2 EBEA                    	jmp .L_lambda_simple_env_loop_010d
 11728                                  .L_lambda_simple_env_end_010d:
 11729 000080C4 5B                      	pop rbx
 11730 000080C5 BE00000000              	mov rsi, 0
 11731                                  .L_lambda_simple_params_loop_010d:	; copy params
 11732 000080CA 4883FE02                	cmp rsi, 2
 11733 000080CE 740E                    	je .L_lambda_simple_params_end_010d
 11734 000080D0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11735 000080D5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11736 000080D9 48FFC6                  	inc rsi
 11737 000080DC EBEC                    	jmp .L_lambda_simple_params_loop_010d
 11738                                  .L_lambda_simple_params_end_010d:
 11739 000080DE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11740 000080E1 4889C3                  	mov rbx, rax
 11741 000080E4 58                      	pop rax
 11742 000080E5 C60004                  	mov byte [rax], T_closure
 11743 000080E8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11744 000080EC 48C74009[F6800000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_010d
 11745 000080F4 EB47                    	jmp .L_lambda_simple_end_010d
 11746                                  .L_lambda_simple_code_010d:	; lambda-simple body
 11747 000080F6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11748 000080FC 740B                    	je .L_lambda_simple_arity_check_ok_010d
 11749 000080FE FF742410                	push qword [rsp + 8 * 2]
 11750 00008102 6A01                    	push 1
 11751 00008104 E975AC0000              	jmp L_error_incorrect_arity_simple
 11752                                  .L_lambda_simple_arity_check_ok_010d:
 11753 00008109 C8000000                	enter 0, 0
 11754                                  	; preparing a non-tail-call
 11755 0000810D 488B4520                	mov rax, PARAM(0)	; param b
 11756 00008111 50                      	push rax
 11757 00008112 488B4510                	mov rax, ENV
 11758 00008116 488B00                  	mov rax, qword [rax + 8 * 0]
 11759 00008119 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 11760 0000811C 50                      	push rax
 11761 0000811D 6A02                    	push 2	; arg count
 11762 0000811F 488B4510                	mov rax, ENV
 11763 00008123 488B4008                	mov rax, qword [rax + 8 * 1]
 11764 00008127 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 11765 0000812A 803804                  	cmp byte [rax], T_closure
 11766 0000812D 0F85E9AB0000            	jne L_error_non_closure
 11767 00008133 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11768 00008136 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11769 00008139 C9                      	leave
 11770 0000813A C21800                  	ret AND_KILL_FRAME(1)
 11771                                  .L_lambda_simple_end_010d:	; new closure is in rax
 11772 0000813D 803804                  	cmp byte [rax], T_closure
 11773 00008140 0F85D6AB0000            	jne L_error_non_closure
 11774 00008146 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11775 00008149 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11776                                  .L_if_end_00df:
 11777 0000814C C9                      	leave
 11778 0000814D C22000                  	ret AND_KILL_FRAME(2)
 11779                                  .L_lambda_opt_end_0025:	; new closure is in rax
 11780 00008150 C9                      	leave
 11781 00008151 C21800                  	ret AND_KILL_FRAME(1)
 11782                                  .L_lambda_simple_end_010c:	; new closure is in rax
 11783 00008154 803804                  	cmp byte [rax], T_closure
 11784 00008157 0F85BFAB0000            	jne L_error_non_closure
 11785 0000815D FF7001                  	push SOB_CLOSURE_ENV(rax)
 11786 00008160 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11787 00008163 C9                      	leave
 11788 00008164 C21800                  	ret AND_KILL_FRAME(1)
 11789                                  .L_lambda_simple_end_010a:	; new closure is in rax
 11790 00008167 803804                  	cmp byte [rax], T_closure
 11791 0000816A 0F85ACAB0000            	jne L_error_non_closure
 11792 00008170 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11793 00008173 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11794 00008176 48890425[F80D0000]      	mov qword [free_var_3], rax
 11795 0000817E 48B8-                   	mov rax, sob_void
 11795 00008180 [0000000000000000] 
 11796                                  
 11797 00008188 4889C7                  	mov rdi, rax
 11798 0000818B E88AAE0000              	call print_sexpr_if_not_void
 11799 00008190 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11800 00008195 E82BAC0000              	call malloc
 11801 0000819A 50                      	push rax
 11802 0000819B BF00000000              	mov rdi, 8 * 0	; new rib
 11803 000081A0 E820AC0000              	call malloc
 11804 000081A5 50                      	push rax
 11805 000081A6 BF08000000              	mov rdi, 8 * 1	; extended env
 11806 000081AB E815AC0000              	call malloc
 11807 000081B0 488B7D10                	mov rdi, ENV
 11808 000081B4 BE00000000              	mov rsi, 0
 11809 000081B9 BA01000000              	mov rdx, 1
 11810                                  .L_lambda_simple_env_loop_010f:	; ext_env[i + 1] <-- env[i]
 11811 000081BE 4883FE00                	cmp rsi, 0
 11812 000081C2 7410                    	je .L_lambda_simple_env_end_010f
 11813 000081C4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11814 000081C8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11815 000081CC 48FFC6                  	inc rsi
 11816 000081CF 48FFC2                  	inc rdx
 11817 000081D2 EBEA                    	jmp .L_lambda_simple_env_loop_010f
 11818                                  .L_lambda_simple_env_end_010f:
 11819 000081D4 5B                      	pop rbx
 11820 000081D5 BE00000000              	mov rsi, 0
 11821                                  .L_lambda_simple_params_loop_010f:	; copy params
 11822 000081DA 4883FE00                	cmp rsi, 0
 11823 000081DE 740E                    	je .L_lambda_simple_params_end_010f
 11824 000081E0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11825 000081E5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11826 000081E9 48FFC6                  	inc rsi
 11827 000081EC EBEC                    	jmp .L_lambda_simple_params_loop_010f
 11828                                  .L_lambda_simple_params_end_010f:
 11829 000081EE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11830 000081F1 4889C3                  	mov rbx, rax
 11831 000081F4 58                      	pop rax
 11832 000081F5 C60004                  	mov byte [rax], T_closure
 11833 000081F8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11834 000081FC 48C74009[09820000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_010f
 11835 00008204 E9D6000000              	jmp .L_lambda_simple_end_010f
 11836                                  .L_lambda_simple_code_010f:	; lambda-simple body
 11837 00008209 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11838 0000820F 740B                    	je .L_lambda_simple_arity_check_ok_010f
 11839 00008211 FF742410                	push qword [rsp + 8 * 2]
 11840 00008215 6A01                    	push 1
 11841 00008217 E962AB0000              	jmp L_error_incorrect_arity_simple
 11842                                  .L_lambda_simple_arity_check_ok_010f:
 11843 0000821C C8000000                	enter 0, 0
 11844                                  	; preparing a non-tail-call
 11845 00008220 488B4520                	mov rax, PARAM(0)	; param n
 11846 00008224 50                      	push rax
 11847 00008225 6A01                    	push 1	; arg count
 11848 00008227 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 11849 0000822F 803805                  	cmp byte [rax], T_undefined
 11850 00008232 0F8460AA0000            	je L_error_fvar_undefined
 11851 00008238 803804                  	cmp byte [rax], T_closure
 11852 0000823B 0F85DBAA0000            	jne L_error_non_closure
 11853 00008241 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11854 00008244 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11855 00008247 483D[02000000]          	cmp rax, sob_boolean_false
 11856 0000824D 740F                    	je .L_if_else_00e1
 11857 0000824F 48B8-                   	mov rax, L_constants + 2270
 11857 00008251 [DE08000000000000] 
 11858 00008259 E97D000000              	jmp .L_if_end_00e1
 11859                                  .L_if_else_00e1:
 11860                                  	; preparing a non-tail-call
 11861                                  	; preparing a non-tail-call
 11862                                  	; preparing a non-tail-call
 11863 0000825E 48B8-                   	mov rax, L_constants + 2270
 11863 00008260 [DE08000000000000] 
 11864 00008268 50                      	push rax
 11865 00008269 488B4520                	mov rax, PARAM(0)	; param n
 11866 0000826D 50                      	push rax
 11867 0000826E 6A02                    	push 2	; arg count
 11868 00008270 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 11869 00008278 803805                  	cmp byte [rax], T_undefined
 11870 0000827B 0F8417AA0000            	je L_error_fvar_undefined
 11871 00008281 803804                  	cmp byte [rax], T_closure
 11872 00008284 0F8592AA0000            	jne L_error_non_closure
 11873 0000828A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11874 0000828D FF5009                  	call SOB_CLOSURE_CODE(rax)
 11875 00008290 50                      	push rax
 11876 00008291 6A01                    	push 1	; arg count
 11877 00008293 488B0425[59130000]      	mov rax, qword [free_var_84]	; free var fact
 11878 0000829B 803805                  	cmp byte [rax], T_undefined
 11879 0000829E 0F84F4A90000            	je L_error_fvar_undefined
 11880 000082A4 803804                  	cmp byte [rax], T_closure
 11881 000082A7 0F856FAA0000            	jne L_error_non_closure
 11882 000082AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 11883 000082B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11884 000082B3 50                      	push rax
 11885 000082B4 488B4520                	mov rax, PARAM(0)	; param n
 11886 000082B8 50                      	push rax
 11887 000082B9 6A02                    	push 2	; arg count
 11888 000082BB 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 11889 000082C3 803805                  	cmp byte [rax], T_undefined
 11890 000082C6 0F84CCA90000            	je L_error_fvar_undefined
 11891 000082CC 803804                  	cmp byte [rax], T_closure
 11892 000082CF 0F8547AA0000            	jne L_error_non_closure
 11893 000082D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11894 000082D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11895                                  .L_if_end_00e1:
 11896 000082DB C9                      	leave
 11897 000082DC C21800                  	ret AND_KILL_FRAME(1)
 11898                                  .L_lambda_simple_end_010f:	; new closure is in rax
 11899 000082DF 48890425[59130000]      	mov qword [free_var_84], rax
 11900 000082E7 48B8-                   	mov rax, sob_void
 11900 000082E9 [0000000000000000] 
 11901                                  
 11902 000082F1 4889C7                  	mov rdi, rax
 11903 000082F4 E821AD0000              	call print_sexpr_if_not_void
 11904 000082F9 48B8-                   	mov rax, L_constants + 0
 11904 000082FB [0000000000000000] 
 11905 00008303 48890425[090E0000]      	mov qword [free_var_4], rax
 11906 0000830B 48B8-                   	mov rax, sob_void
 11906 0000830D [0000000000000000] 
 11907                                  
 11908 00008315 4889C7                  	mov rdi, rax
 11909 00008318 E8FDAC0000              	call print_sexpr_if_not_void
 11910 0000831D 48B8-                   	mov rax, L_constants + 0
 11910 0000831F [0000000000000000] 
 11911 00008327 48890425[1A0E0000]      	mov qword [free_var_5], rax
 11912 0000832F 48B8-                   	mov rax, sob_void
 11912 00008331 [0000000000000000] 
 11913                                  
 11914 00008339 4889C7                  	mov rdi, rax
 11915 0000833C E8D9AC0000              	call print_sexpr_if_not_void
 11916 00008341 48B8-                   	mov rax, L_constants + 0
 11916 00008343 [0000000000000000] 
 11917 0000834B 48890425[3C0E0000]      	mov qword [free_var_7], rax
 11918 00008353 48B8-                   	mov rax, sob_void
 11918 00008355 [0000000000000000] 
 11919                                  
 11920 0000835D 4889C7                  	mov rdi, rax
 11921 00008360 E8B5AC0000              	call print_sexpr_if_not_void
 11922 00008365 48B8-                   	mov rax, L_constants + 0
 11922 00008367 [0000000000000000] 
 11923 0000836F 48890425[4D0E0000]      	mov qword [free_var_8], rax
 11924 00008377 48B8-                   	mov rax, sob_void
 11924 00008379 [0000000000000000] 
 11925                                  
 11926 00008381 4889C7                  	mov rdi, rax
 11927 00008384 E891AC0000              	call print_sexpr_if_not_void
 11928 00008389 48B8-                   	mov rax, L_constants + 0
 11928 0000838B [0000000000000000] 
 11929 00008393 48890425[2B0E0000]      	mov qword [free_var_6], rax
 11930 0000839B 48B8-                   	mov rax, sob_void
 11930 0000839D [0000000000000000] 
 11931                                  
 11932 000083A5 4889C7                  	mov rdi, rax
 11933 000083A8 E86DAC0000              	call print_sexpr_if_not_void
 11934                                  	; preparing a non-tail-call
 11935 000083AD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11936 000083B2 E80EAA0000              	call malloc
 11937 000083B7 50                      	push rax
 11938 000083B8 BF00000000              	mov rdi, 8 * 0	; new rib
 11939 000083BD E803AA0000              	call malloc
 11940 000083C2 50                      	push rax
 11941 000083C3 BF08000000              	mov rdi, 8 * 1	; extended env
 11942 000083C8 E8F8A90000              	call malloc
 11943 000083CD 488B7D10                	mov rdi, ENV
 11944 000083D1 BE00000000              	mov rsi, 0
 11945 000083D6 BA01000000              	mov rdx, 1
 11946                                  .L_lambda_simple_env_loop_0110:	; ext_env[i + 1] <-- env[i]
 11947 000083DB 4883FE00                	cmp rsi, 0
 11948 000083DF 7410                    	je .L_lambda_simple_env_end_0110
 11949 000083E1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11950 000083E5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11951 000083E9 48FFC6                  	inc rsi
 11952 000083EC 48FFC2                  	inc rdx
 11953 000083EF EBEA                    	jmp .L_lambda_simple_env_loop_0110
 11954                                  .L_lambda_simple_env_end_0110:
 11955 000083F1 5B                      	pop rbx
 11956 000083F2 BE00000000              	mov rsi, 0
 11957                                  .L_lambda_simple_params_loop_0110:	; copy params
 11958 000083F7 4883FE00                	cmp rsi, 0
 11959 000083FB 740E                    	je .L_lambda_simple_params_end_0110
 11960 000083FD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11961 00008402 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11962 00008406 48FFC6                  	inc rsi
 11963 00008409 EBEC                    	jmp .L_lambda_simple_params_loop_0110
 11964                                  .L_lambda_simple_params_end_0110:
 11965 0000840B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11966 0000840E 4889C3                  	mov rbx, rax
 11967 00008411 58                      	pop rax
 11968 00008412 C60004                  	mov byte [rax], T_closure
 11969 00008415 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11970 00008419 48C74009[23840000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0110
 11971 00008421 EB53                    	jmp .L_lambda_simple_end_0110
 11972                                  .L_lambda_simple_code_0110:	; lambda-simple body
 11973 00008423 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11974 00008429 740B                    	je .L_lambda_simple_arity_check_ok_0110
 11975 0000842B FF742410                	push qword [rsp + 8 * 2]
 11976 0000842F 6A00                    	push 0
 11977 00008431 E948A90000              	jmp L_error_incorrect_arity_simple
 11978                                  .L_lambda_simple_arity_check_ok_0110:
 11979 00008436 C8000000                	enter 0, 0
 11980                                  	; preparing a non-tail-call
 11981 0000843A 48B8-                   	mov rax, L_constants + 2408
 11981 0000843C [6809000000000000] 
 11982 00008444 50                      	push rax
 11983 00008445 48B8-                   	mov rax, L_constants + 2399
 11983 00008447 [5F09000000000000] 
 11984 0000844F 50                      	push rax
 11985 00008450 6A02                    	push 2	; arg count
 11986 00008452 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 11987 0000845A 803805                  	cmp byte [rax], T_undefined
 11988 0000845D 0F8435A80000            	je L_error_fvar_undefined
 11989 00008463 803804                  	cmp byte [rax], T_closure
 11990 00008466 0F85B0A80000            	jne L_error_non_closure
 11991 0000846C FF7001                  	push SOB_CLOSURE_ENV(rax)
 11992 0000846F FF5009                  	call SOB_CLOSURE_CODE(rax)
 11993 00008472 C9                      	leave
 11994 00008473 C21000                  	ret AND_KILL_FRAME(0)
 11995                                  .L_lambda_simple_end_0110:	; new closure is in rax
 11996 00008476 50                      	push rax
 11997 00008477 6A01                    	push 1	; arg count
 11998 00008479 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11999 0000847E E842A90000              	call malloc
 12000 00008483 50                      	push rax
 12001 00008484 BF00000000              	mov rdi, 8 * 0	; new rib
 12002 00008489 E837A90000              	call malloc
 12003 0000848E 50                      	push rax
 12004 0000848F BF08000000              	mov rdi, 8 * 1	; extended env
 12005 00008494 E82CA90000              	call malloc
 12006 00008499 488B7D10                	mov rdi, ENV
 12007 0000849D BE00000000              	mov rsi, 0
 12008 000084A2 BA01000000              	mov rdx, 1
 12009                                  .L_lambda_simple_env_loop_0111:	; ext_env[i + 1] <-- env[i]
 12010 000084A7 4883FE00                	cmp rsi, 0
 12011 000084AB 7410                    	je .L_lambda_simple_env_end_0111
 12012 000084AD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12013 000084B1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12014 000084B5 48FFC6                  	inc rsi
 12015 000084B8 48FFC2                  	inc rdx
 12016 000084BB EBEA                    	jmp .L_lambda_simple_env_loop_0111
 12017                                  .L_lambda_simple_env_end_0111:
 12018 000084BD 5B                      	pop rbx
 12019 000084BE BE00000000              	mov rsi, 0
 12020                                  .L_lambda_simple_params_loop_0111:	; copy params
 12021 000084C3 4883FE00                	cmp rsi, 0
 12022 000084C7 740E                    	je .L_lambda_simple_params_end_0111
 12023 000084C9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12024 000084CE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12025 000084D2 48FFC6                  	inc rsi
 12026 000084D5 EBEC                    	jmp .L_lambda_simple_params_loop_0111
 12027                                  .L_lambda_simple_params_end_0111:
 12028 000084D7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12029 000084DA 4889C3                  	mov rbx, rax
 12030 000084DD 58                      	pop rax
 12031 000084DE C60004                  	mov byte [rax], T_closure
 12032 000084E1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12033 000084E5 48C74009[F2840000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0111
 12034 000084ED E996130000              	jmp .L_lambda_simple_end_0111
 12035                                  .L_lambda_simple_code_0111:	; lambda-simple body
 12036 000084F2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12037 000084F8 740B                    	je .L_lambda_simple_arity_check_ok_0111
 12038 000084FA FF742410                	push qword [rsp + 8 * 2]
 12039 000084FE 6A01                    	push 1
 12040 00008500 E979A80000              	jmp L_error_incorrect_arity_simple
 12041                                  .L_lambda_simple_arity_check_ok_0111:
 12042 00008505 C8000000                	enter 0, 0
 12043                                  	; preparing a non-tail-call
 12044 00008509 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12045 0000850E E8B2A80000              	call malloc
 12046 00008513 50                      	push rax
 12047 00008514 BF08000000              	mov rdi, 8 * 1	; new rib
 12048 00008519 E8A7A80000              	call malloc
 12049 0000851E 50                      	push rax
 12050 0000851F BF10000000              	mov rdi, 8 * 2	; extended env
 12051 00008524 E89CA80000              	call malloc
 12052 00008529 488B7D10                	mov rdi, ENV
 12053 0000852D BE00000000              	mov rsi, 0
 12054 00008532 BA01000000              	mov rdx, 1
 12055                                  .L_lambda_simple_env_loop_0112:	; ext_env[i + 1] <-- env[i]
 12056 00008537 4883FE01                	cmp rsi, 1
 12057 0000853B 7410                    	je .L_lambda_simple_env_end_0112
 12058 0000853D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12059 00008541 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12060 00008545 48FFC6                  	inc rsi
 12061 00008548 48FFC2                  	inc rdx
 12062 0000854B EBEA                    	jmp .L_lambda_simple_env_loop_0112
 12063                                  .L_lambda_simple_env_end_0112:
 12064 0000854D 5B                      	pop rbx
 12065 0000854E BE00000000              	mov rsi, 0
 12066                                  .L_lambda_simple_params_loop_0112:	; copy params
 12067 00008553 4883FE01                	cmp rsi, 1
 12068 00008557 740E                    	je .L_lambda_simple_params_end_0112
 12069 00008559 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12070 0000855E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12071 00008562 48FFC6                  	inc rsi
 12072 00008565 EBEC                    	jmp .L_lambda_simple_params_loop_0112
 12073                                  .L_lambda_simple_params_end_0112:
 12074 00008567 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12075 0000856A 4889C3                  	mov rbx, rax
 12076 0000856D 58                      	pop rax
 12077 0000856E C60004                  	mov byte [rax], T_closure
 12078 00008571 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12079 00008575 48C74009[82850000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0112
 12080 0000857D E9B3050000              	jmp .L_lambda_simple_end_0112
 12081                                  .L_lambda_simple_code_0112:	; lambda-simple body
 12082 00008582 48837C241003            	cmp qword [rsp + 8 * 2], 3
 12083 00008588 740B                    	je .L_lambda_simple_arity_check_ok_0112
 12084 0000858A FF742410                	push qword [rsp + 8 * 2]
 12085 0000858E 6A03                    	push 3
 12086 00008590 E9E9A70000              	jmp L_error_incorrect_arity_simple
 12087                                  .L_lambda_simple_arity_check_ok_0112:
 12088 00008595 C8000000                	enter 0, 0
 12089 00008599 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12090 0000859E E822A80000              	call malloc
 12091 000085A3 50                      	push rax
 12092 000085A4 BF18000000              	mov rdi, 8 * 3	; new rib
 12093 000085A9 E817A80000              	call malloc
 12094 000085AE 50                      	push rax
 12095 000085AF BF18000000              	mov rdi, 8 * 3	; extended env
 12096 000085B4 E80CA80000              	call malloc
 12097 000085B9 488B7D10                	mov rdi, ENV
 12098 000085BD BE00000000              	mov rsi, 0
 12099 000085C2 BA01000000              	mov rdx, 1
 12100                                  .L_lambda_simple_env_loop_0113:	; ext_env[i + 1] <-- env[i]
 12101 000085C7 4883FE02                	cmp rsi, 2
 12102 000085CB 7410                    	je .L_lambda_simple_env_end_0113
 12103 000085CD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12104 000085D1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12105 000085D5 48FFC6                  	inc rsi
 12106 000085D8 48FFC2                  	inc rdx
 12107 000085DB EBEA                    	jmp .L_lambda_simple_env_loop_0113
 12108                                  .L_lambda_simple_env_end_0113:
 12109 000085DD 5B                      	pop rbx
 12110 000085DE BE00000000              	mov rsi, 0
 12111                                  .L_lambda_simple_params_loop_0113:	; copy params
 12112 000085E3 4883FE03                	cmp rsi, 3
 12113 000085E7 740E                    	je .L_lambda_simple_params_end_0113
 12114 000085E9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12115 000085EE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12116 000085F2 48FFC6                  	inc rsi
 12117 000085F5 EBEC                    	jmp .L_lambda_simple_params_loop_0113
 12118                                  .L_lambda_simple_params_end_0113:
 12119 000085F7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12120 000085FA 4889C3                  	mov rbx, rax
 12121 000085FD 58                      	pop rax
 12122 000085FE C60004                  	mov byte [rax], T_closure
 12123 00008601 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12124 00008605 48C74009[12860000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0113
 12125 0000860D E91F050000              	jmp .L_lambda_simple_end_0113
 12126                                  .L_lambda_simple_code_0113:	; lambda-simple body
 12127 00008612 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12128 00008618 740B                    	je .L_lambda_simple_arity_check_ok_0113
 12129 0000861A FF742410                	push qword [rsp + 8 * 2]
 12130 0000861E 6A02                    	push 2
 12131 00008620 E959A70000              	jmp L_error_incorrect_arity_simple
 12132                                  .L_lambda_simple_arity_check_ok_0113:
 12133 00008625 C8000000                	enter 0, 0
 12134                                  	; preparing a non-tail-call
 12135 00008629 488B4520                	mov rax, PARAM(0)	; param a
 12136 0000862D 50                      	push rax
 12137 0000862E 6A01                    	push 1	; arg count
 12138 00008630 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12139 00008638 803805                  	cmp byte [rax], T_undefined
 12140 0000863B 0F8457A60000            	je L_error_fvar_undefined
 12141 00008641 803804                  	cmp byte [rax], T_closure
 12142 00008644 0F85D2A60000            	jne L_error_non_closure
 12143 0000864A FF7001                  	push SOB_CLOSURE_ENV(rax)
 12144 0000864D FF5009                  	call SOB_CLOSURE_CODE(rax)
 12145 00008650 483D[02000000]          	cmp rax, sob_boolean_false
 12146 00008656 0F8471010000            	je .L_if_else_00ed
 12147                                  	; preparing a non-tail-call
 12148 0000865C 488B4528                	mov rax, PARAM(1)	; param b
 12149 00008660 50                      	push rax
 12150 00008661 6A01                    	push 1	; arg count
 12151 00008663 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12152 0000866B 803805                  	cmp byte [rax], T_undefined
 12153 0000866E 0F8424A60000            	je L_error_fvar_undefined
 12154 00008674 803804                  	cmp byte [rax], T_closure
 12155 00008677 0F859FA60000            	jne L_error_non_closure
 12156 0000867D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12157 00008680 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12158 00008683 483D[02000000]          	cmp rax, sob_boolean_false
 12159 00008689 742A                    	je .L_if_else_00e4
 12160                                  	; preparing a non-tail-call
 12161 0000868B 488B4528                	mov rax, PARAM(1)	; param b
 12162 0000868F 50                      	push rax
 12163 00008690 488B4520                	mov rax, PARAM(0)	; param a
 12164 00008694 50                      	push rax
 12165 00008695 6A02                    	push 2	; arg count
 12166 00008697 488B4510                	mov rax, ENV
 12167 0000869B 488B00                  	mov rax, qword [rax + 8 * 0]
 12168 0000869E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator-zz
 12169 000086A1 803804                  	cmp byte [rax], T_closure
 12170 000086A4 0F8572A60000            	jne L_error_non_closure
 12171 000086AA FF7001                  	push SOB_CLOSURE_ENV(rax)
 12172 000086AD FF5009                  	call SOB_CLOSURE_CODE(rax)
 12173 000086B0 E913010000              	jmp .L_if_end_00e4
 12174                                  .L_if_else_00e4:
 12175                                  	; preparing a non-tail-call
 12176 000086B5 488B4528                	mov rax, PARAM(1)	; param b
 12177 000086B9 50                      	push rax
 12178 000086BA 6A01                    	push 1	; arg count
 12179 000086BC 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12180 000086C4 803805                  	cmp byte [rax], T_undefined
 12181 000086C7 0F84CBA50000            	je L_error_fvar_undefined
 12182 000086CD 803804                  	cmp byte [rax], T_closure
 12183 000086D0 0F8546A60000            	jne L_error_non_closure
 12184 000086D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12185 000086D9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12186 000086DC 483D[02000000]          	cmp rax, sob_boolean_false
 12187 000086E2 744E                    	je .L_if_else_00e3
 12188                                  	; preparing a non-tail-call
 12189 000086E4 488B4528                	mov rax, PARAM(1)	; param b
 12190 000086E8 50                      	push rax
 12191                                  	; preparing a non-tail-call
 12192 000086E9 488B4520                	mov rax, PARAM(0)	; param a
 12193 000086ED 50                      	push rax
 12194 000086EE 6A01                    	push 1	; arg count
 12195 000086F0 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12196 000086F8 803805                  	cmp byte [rax], T_undefined
 12197 000086FB 0F8497A50000            	je L_error_fvar_undefined
 12198 00008701 803804                  	cmp byte [rax], T_closure
 12199 00008704 0F8512A60000            	jne L_error_non_closure
 12200 0000870A FF7001                  	push SOB_CLOSURE_ENV(rax)
 12201 0000870D FF5009                  	call SOB_CLOSURE_CODE(rax)
 12202 00008710 50                      	push rax
 12203 00008711 6A02                    	push 2	; arg count
 12204 00008713 488B4510                	mov rax, ENV
 12205 00008717 488B00                  	mov rax, qword [rax + 8 * 0]
 12206 0000871A 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 12207 0000871E 803804                  	cmp byte [rax], T_closure
 12208 00008721 0F85F5A50000            	jne L_error_non_closure
 12209 00008727 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12210 0000872A FF5009                  	call SOB_CLOSURE_CODE(rax)
 12211 0000872D E996000000              	jmp .L_if_end_00e3
 12212                                  .L_if_else_00e3:
 12213                                  	; preparing a non-tail-call
 12214 00008732 488B4528                	mov rax, PARAM(1)	; param b
 12215 00008736 50                      	push rax
 12216 00008737 6A01                    	push 1	; arg count
 12217 00008739 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12218 00008741 803805                  	cmp byte [rax], T_undefined
 12219 00008744 0F844EA50000            	je L_error_fvar_undefined
 12220 0000874A 803804                  	cmp byte [rax], T_closure
 12221 0000874D 0F85C9A50000            	jne L_error_non_closure
 12222 00008753 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12223 00008756 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12224 00008759 483D[02000000]          	cmp rax, sob_boolean_false
 12225 0000875F 744B                    	je .L_if_else_00e2
 12226                                  	; preparing a non-tail-call
 12227 00008761 488B4528                	mov rax, PARAM(1)	; param b
 12228 00008765 50                      	push rax
 12229                                  	; preparing a non-tail-call
 12230 00008766 488B4520                	mov rax, PARAM(0)	; param a
 12231 0000876A 50                      	push rax
 12232 0000876B 6A01                    	push 1	; arg count
 12233 0000876D 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 12234 00008775 803805                  	cmp byte [rax], T_undefined
 12235 00008778 0F841AA50000            	je L_error_fvar_undefined
 12236 0000877E 803804                  	cmp byte [rax], T_closure
 12237 00008781 0F8595A50000            	jne L_error_non_closure
 12238 00008787 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12239 0000878A FF5009                  	call SOB_CLOSURE_CODE(rax)
 12240 0000878D 50                      	push rax
 12241 0000878E 6A02                    	push 2	; arg count
 12242 00008790 488B4510                	mov rax, ENV
 12243 00008794 488B00                  	mov rax, qword [rax + 8 * 0]
 12244 00008797 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 12245 0000879B 803804                  	cmp byte [rax], T_closure
 12246 0000879E 0F8578A50000            	jne L_error_non_closure
 12247 000087A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12248 000087A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12249 000087AA EB1C                    	jmp .L_if_end_00e2
 12250                                  .L_if_else_00e2:
 12251                                  	; preparing a non-tail-call
 12252 000087AC 6A00                    	push 0	; arg count
 12253 000087AE 488B4510                	mov rax, ENV
 12254 000087B2 488B4008                	mov rax, qword [rax + 8 * 1]
 12255 000087B6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 12256 000087B9 803804                  	cmp byte [rax], T_closure
 12257 000087BC 0F855AA50000            	jne L_error_non_closure
 12258 000087C2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12259 000087C5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12260                                  .L_if_end_00e2:
 12261                                  .L_if_end_00e3:
 12262                                  .L_if_end_00e4:
 12263 000087C8 E960030000              	jmp .L_if_end_00ed
 12264                                  .L_if_else_00ed:
 12265                                  	; preparing a non-tail-call
 12266 000087CD 488B4520                	mov rax, PARAM(0)	; param a
 12267 000087D1 50                      	push rax
 12268 000087D2 6A01                    	push 1	; arg count
 12269 000087D4 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12270 000087DC 803805                  	cmp byte [rax], T_undefined
 12271 000087DF 0F84B3A40000            	je L_error_fvar_undefined
 12272 000087E5 803804                  	cmp byte [rax], T_closure
 12273 000087E8 0F852EA50000            	jne L_error_non_closure
 12274 000087EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 12275 000087F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12276 000087F4 483D[02000000]          	cmp rax, sob_boolean_false
 12277 000087FA 0F8472010000            	je .L_if_else_00ec
 12278                                  	; preparing a non-tail-call
 12279 00008800 488B4528                	mov rax, PARAM(1)	; param b
 12280 00008804 50                      	push rax
 12281 00008805 6A01                    	push 1	; arg count
 12282 00008807 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12283 0000880F 803805                  	cmp byte [rax], T_undefined
 12284 00008812 0F8480A40000            	je L_error_fvar_undefined
 12285 00008818 803804                  	cmp byte [rax], T_closure
 12286 0000881B 0F85FBA40000            	jne L_error_non_closure
 12287 00008821 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12288 00008824 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12289 00008827 483D[02000000]          	cmp rax, sob_boolean_false
 12290 0000882D 744E                    	je .L_if_else_00e7
 12291                                  	; preparing a non-tail-call
 12292                                  	; preparing a non-tail-call
 12293 0000882F 488B4528                	mov rax, PARAM(1)	; param b
 12294 00008833 50                      	push rax
 12295 00008834 6A01                    	push 1	; arg count
 12296 00008836 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12297 0000883E 803805                  	cmp byte [rax], T_undefined
 12298 00008841 0F8451A40000            	je L_error_fvar_undefined
 12299 00008847 803804                  	cmp byte [rax], T_closure
 12300 0000884A 0F85CCA40000            	jne L_error_non_closure
 12301 00008850 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12302 00008853 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12303 00008856 50                      	push rax
 12304 00008857 488B4520                	mov rax, PARAM(0)	; param a
 12305 0000885B 50                      	push rax
 12306 0000885C 6A02                    	push 2	; arg count
 12307 0000885E 488B4510                	mov rax, ENV
 12308 00008862 488B00                  	mov rax, qword [rax + 8 * 0]
 12309 00008865 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 12310 00008869 803804                  	cmp byte [rax], T_closure
 12311 0000886C 0F85AAA40000            	jne L_error_non_closure
 12312 00008872 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12313 00008875 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12314 00008878 E9F0000000              	jmp .L_if_end_00e7
 12315                                  .L_if_else_00e7:
 12316                                  	; preparing a non-tail-call
 12317 0000887D 488B4528                	mov rax, PARAM(1)	; param b
 12318 00008881 50                      	push rax
 12319 00008882 6A01                    	push 1	; arg count
 12320 00008884 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12321 0000888C 803805                  	cmp byte [rax], T_undefined
 12322 0000888F 0F8403A40000            	je L_error_fvar_undefined
 12323 00008895 803804                  	cmp byte [rax], T_closure
 12324 00008898 0F857EA40000            	jne L_error_non_closure
 12325 0000889E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12326 000088A1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12327 000088A4 483D[02000000]          	cmp rax, sob_boolean_false
 12328 000088AA 742B                    	je .L_if_else_00e6
 12329                                  	; preparing a non-tail-call
 12330 000088AC 488B4528                	mov rax, PARAM(1)	; param b
 12331 000088B0 50                      	push rax
 12332 000088B1 488B4520                	mov rax, PARAM(0)	; param a
 12333 000088B5 50                      	push rax
 12334 000088B6 6A02                    	push 2	; arg count
 12335 000088B8 488B4510                	mov rax, ENV
 12336 000088BC 488B00                  	mov rax, qword [rax + 8 * 0]
 12337 000088BF 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 12338 000088C3 803804                  	cmp byte [rax], T_closure
 12339 000088C6 0F8550A40000            	jne L_error_non_closure
 12340 000088CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 12341 000088CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 12342 000088D2 E996000000              	jmp .L_if_end_00e6
 12343                                  .L_if_else_00e6:
 12344                                  	; preparing a non-tail-call
 12345 000088D7 488B4528                	mov rax, PARAM(1)	; param b
 12346 000088DB 50                      	push rax
 12347 000088DC 6A01                    	push 1	; arg count
 12348 000088DE 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12349 000088E6 803805                  	cmp byte [rax], T_undefined
 12350 000088E9 0F84A9A30000            	je L_error_fvar_undefined
 12351 000088EF 803804                  	cmp byte [rax], T_closure
 12352 000088F2 0F8524A40000            	jne L_error_non_closure
 12353 000088F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12354 000088FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 12355 000088FE 483D[02000000]          	cmp rax, sob_boolean_false
 12356 00008904 744B                    	je .L_if_else_00e5
 12357                                  	; preparing a non-tail-call
 12358 00008906 488B4528                	mov rax, PARAM(1)	; param b
 12359 0000890A 50                      	push rax
 12360                                  	; preparing a non-tail-call
 12361 0000890B 488B4520                	mov rax, PARAM(0)	; param a
 12362 0000890F 50                      	push rax
 12363 00008910 6A01                    	push 1	; arg count
 12364 00008912 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12365 0000891A 803805                  	cmp byte [rax], T_undefined
 12366 0000891D 0F8475A30000            	je L_error_fvar_undefined
 12367 00008923 803804                  	cmp byte [rax], T_closure
 12368 00008926 0F85F0A30000            	jne L_error_non_closure
 12369 0000892C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12370 0000892F FF5009                  	call SOB_CLOSURE_CODE(rax)
 12371 00008932 50                      	push rax
 12372 00008933 6A02                    	push 2	; arg count
 12373 00008935 488B4510                	mov rax, ENV
 12374 00008939 488B00                  	mov rax, qword [rax + 8 * 0]
 12375 0000893C 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 12376 00008940 803804                  	cmp byte [rax], T_closure
 12377 00008943 0F85D3A30000            	jne L_error_non_closure
 12378 00008949 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12379 0000894C FF5009                  	call SOB_CLOSURE_CODE(rax)
 12380 0000894F EB1C                    	jmp .L_if_end_00e5
 12381                                  .L_if_else_00e5:
 12382                                  	; preparing a non-tail-call
 12383 00008951 6A00                    	push 0	; arg count
 12384 00008953 488B4510                	mov rax, ENV
 12385 00008957 488B4008                	mov rax, qword [rax + 8 * 1]
 12386 0000895B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 12387 0000895E 803804                  	cmp byte [rax], T_closure
 12388 00008961 0F85B5A30000            	jne L_error_non_closure
 12389 00008967 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12390 0000896A FF5009                  	call SOB_CLOSURE_CODE(rax)
 12391                                  .L_if_end_00e5:
 12392                                  .L_if_end_00e6:
 12393                                  .L_if_end_00e7:
 12394 0000896D E9BB010000              	jmp .L_if_end_00ec
 12395                                  .L_if_else_00ec:
 12396                                  	; preparing a non-tail-call
 12397 00008972 488B4520                	mov rax, PARAM(0)	; param a
 12398 00008976 50                      	push rax
 12399 00008977 6A01                    	push 1	; arg count
 12400 00008979 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12401 00008981 803805                  	cmp byte [rax], T_undefined
 12402 00008984 0F840EA30000            	je L_error_fvar_undefined
 12403 0000898A 803804                  	cmp byte [rax], T_closure
 12404 0000898D 0F8589A30000            	jne L_error_non_closure
 12405 00008993 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12406 00008996 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12407 00008999 483D[02000000]          	cmp rax, sob_boolean_false
 12408 0000899F 0F846C010000            	je .L_if_else_00eb
 12409                                  	; preparing a non-tail-call
 12410 000089A5 488B4528                	mov rax, PARAM(1)	; param b
 12411 000089A9 50                      	push rax
 12412 000089AA 6A01                    	push 1	; arg count
 12413 000089AC 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12414 000089B4 803805                  	cmp byte [rax], T_undefined
 12415 000089B7 0F84DBA20000            	je L_error_fvar_undefined
 12416 000089BD 803804                  	cmp byte [rax], T_closure
 12417 000089C0 0F8556A30000            	jne L_error_non_closure
 12418 000089C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12419 000089C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12420 000089CC 483D[02000000]          	cmp rax, sob_boolean_false
 12421 000089D2 744E                    	je .L_if_else_00ea
 12422                                  	; preparing a non-tail-call
 12423                                  	; preparing a non-tail-call
 12424 000089D4 488B4528                	mov rax, PARAM(1)	; param b
 12425 000089D8 50                      	push rax
 12426 000089D9 6A01                    	push 1	; arg count
 12427 000089DB 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 12428 000089E3 803805                  	cmp byte [rax], T_undefined
 12429 000089E6 0F84ACA20000            	je L_error_fvar_undefined
 12430 000089EC 803804                  	cmp byte [rax], T_closure
 12431 000089EF 0F8527A30000            	jne L_error_non_closure
 12432 000089F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12433 000089F8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12434 000089FB 50                      	push rax
 12435 000089FC 488B4520                	mov rax, PARAM(0)	; param a
 12436 00008A00 50                      	push rax
 12437 00008A01 6A02                    	push 2	; arg count
 12438 00008A03 488B4510                	mov rax, ENV
 12439 00008A07 488B00                  	mov rax, qword [rax + 8 * 0]
 12440 00008A0A 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 12441 00008A0E 803804                  	cmp byte [rax], T_closure
 12442 00008A11 0F8505A30000            	jne L_error_non_closure
 12443 00008A17 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12444 00008A1A FF5009                  	call SOB_CLOSURE_CODE(rax)
 12445 00008A1D E9ED000000              	jmp .L_if_end_00ea
 12446                                  .L_if_else_00ea:
 12447                                  	; preparing a non-tail-call
 12448 00008A22 488B4528                	mov rax, PARAM(1)	; param b
 12449 00008A26 50                      	push rax
 12450 00008A27 6A01                    	push 1	; arg count
 12451 00008A29 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12452 00008A31 803805                  	cmp byte [rax], T_undefined
 12453 00008A34 0F845EA20000            	je L_error_fvar_undefined
 12454 00008A3A 803804                  	cmp byte [rax], T_closure
 12455 00008A3D 0F85D9A20000            	jne L_error_non_closure
 12456 00008A43 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12457 00008A46 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12458 00008A49 483D[02000000]          	cmp rax, sob_boolean_false
 12459 00008A4F 744B                    	je .L_if_else_00e9
 12460                                  	; preparing a non-tail-call
 12461                                  	; preparing a non-tail-call
 12462 00008A51 488B4528                	mov rax, PARAM(1)	; param b
 12463 00008A55 50                      	push rax
 12464 00008A56 6A01                    	push 1	; arg count
 12465 00008A58 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12466 00008A60 803805                  	cmp byte [rax], T_undefined
 12467 00008A63 0F842FA20000            	je L_error_fvar_undefined
 12468 00008A69 803804                  	cmp byte [rax], T_closure
 12469 00008A6C 0F85AAA20000            	jne L_error_non_closure
 12470 00008A72 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12471 00008A75 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12472 00008A78 50                      	push rax
 12473 00008A79 488B4520                	mov rax, PARAM(0)	; param a
 12474 00008A7D 50                      	push rax
 12475 00008A7E 6A02                    	push 2	; arg count
 12476 00008A80 488B4510                	mov rax, ENV
 12477 00008A84 488B00                  	mov rax, qword [rax + 8 * 0]
 12478 00008A87 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 12479 00008A8B 803804                  	cmp byte [rax], T_closure
 12480 00008A8E 0F8588A20000            	jne L_error_non_closure
 12481 00008A94 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12482 00008A97 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12483 00008A9A EB73                    	jmp .L_if_end_00e9
 12484                                  .L_if_else_00e9:
 12485                                  	; preparing a non-tail-call
 12486 00008A9C 488B4528                	mov rax, PARAM(1)	; param b
 12487 00008AA0 50                      	push rax
 12488 00008AA1 6A01                    	push 1	; arg count
 12489 00008AA3 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12490 00008AAB 803805                  	cmp byte [rax], T_undefined
 12491 00008AAE 0F84E4A10000            	je L_error_fvar_undefined
 12492 00008AB4 803804                  	cmp byte [rax], T_closure
 12493 00008AB7 0F855FA20000            	jne L_error_non_closure
 12494 00008ABD FF7001                  	push SOB_CLOSURE_ENV(rax)
 12495 00008AC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12496 00008AC3 483D[02000000]          	cmp rax, sob_boolean_false
 12497 00008AC9 7428                    	je .L_if_else_00e8
 12498                                  	; preparing a non-tail-call
 12499 00008ACB 488B4528                	mov rax, PARAM(1)	; param b
 12500 00008ACF 50                      	push rax
 12501 00008AD0 488B4520                	mov rax, PARAM(0)	; param a
 12502 00008AD4 50                      	push rax
 12503 00008AD5 6A02                    	push 2	; arg count
 12504 00008AD7 488B4510                	mov rax, ENV
 12505 00008ADB 488B00                  	mov rax, qword [rax + 8 * 0]
 12506 00008ADE 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 12507 00008AE2 803804                  	cmp byte [rax], T_closure
 12508 00008AE5 0F8531A20000            	jne L_error_non_closure
 12509 00008AEB FF7001                  	push SOB_CLOSURE_ENV(rax)
 12510 00008AEE FF5009                  	call SOB_CLOSURE_CODE(rax)
 12511 00008AF1 EB1C                    	jmp .L_if_end_00e8
 12512                                  .L_if_else_00e8:
 12513                                  	; preparing a non-tail-call
 12514 00008AF3 6A00                    	push 0	; arg count
 12515 00008AF5 488B4510                	mov rax, ENV
 12516 00008AF9 488B4008                	mov rax, qword [rax + 8 * 1]
 12517 00008AFD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 12518 00008B00 803804                  	cmp byte [rax], T_closure
 12519 00008B03 0F8513A20000            	jne L_error_non_closure
 12520 00008B09 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12521 00008B0C FF5009                  	call SOB_CLOSURE_CODE(rax)
 12522                                  .L_if_end_00e8:
 12523                                  .L_if_end_00e9:
 12524                                  .L_if_end_00ea:
 12525 00008B0F EB1C                    	jmp .L_if_end_00eb
 12526                                  .L_if_else_00eb:
 12527                                  	; preparing a non-tail-call
 12528 00008B11 6A00                    	push 0	; arg count
 12529 00008B13 488B4510                	mov rax, ENV
 12530 00008B17 488B4008                	mov rax, qword [rax + 8 * 1]
 12531 00008B1B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 12532 00008B1E 803804                  	cmp byte [rax], T_closure
 12533 00008B21 0F85F5A10000            	jne L_error_non_closure
 12534 00008B27 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12535 00008B2A FF5009                  	call SOB_CLOSURE_CODE(rax)
 12536                                  .L_if_end_00eb:
 12537                                  .L_if_end_00ec:
 12538                                  .L_if_end_00ed:
 12539 00008B2D C9                      	leave
 12540 00008B2E C22000                  	ret AND_KILL_FRAME(2)
 12541                                  .L_lambda_simple_end_0113:	; new closure is in rax
 12542 00008B31 C9                      	leave
 12543 00008B32 C22800                  	ret AND_KILL_FRAME(3)
 12544                                  .L_lambda_simple_end_0112:	; new closure is in rax
 12545 00008B35 50                      	push rax
 12546 00008B36 6A01                    	push 1	; arg count
 12547 00008B38 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12548 00008B3D E883A20000              	call malloc
 12549 00008B42 50                      	push rax
 12550 00008B43 BF08000000              	mov rdi, 8 * 1	; new rib
 12551 00008B48 E878A20000              	call malloc
 12552 00008B4D 50                      	push rax
 12553 00008B4E BF10000000              	mov rdi, 8 * 2	; extended env
 12554 00008B53 E86DA20000              	call malloc
 12555 00008B58 488B7D10                	mov rdi, ENV
 12556 00008B5C BE00000000              	mov rsi, 0
 12557 00008B61 BA01000000              	mov rdx, 1
 12558                                  .L_lambda_simple_env_loop_0114:	; ext_env[i + 1] <-- env[i]
 12559 00008B66 4883FE01                	cmp rsi, 1
 12560 00008B6A 7410                    	je .L_lambda_simple_env_end_0114
 12561 00008B6C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12562 00008B70 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12563 00008B74 48FFC6                  	inc rsi
 12564 00008B77 48FFC2                  	inc rdx
 12565 00008B7A EBEA                    	jmp .L_lambda_simple_env_loop_0114
 12566                                  .L_lambda_simple_env_end_0114:
 12567 00008B7C 5B                      	pop rbx
 12568 00008B7D BE00000000              	mov rsi, 0
 12569                                  .L_lambda_simple_params_loop_0114:	; copy params
 12570 00008B82 4883FE01                	cmp rsi, 1
 12571 00008B86 740E                    	je .L_lambda_simple_params_end_0114
 12572 00008B88 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12573 00008B8D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12574 00008B91 48FFC6                  	inc rsi
 12575 00008B94 EBEC                    	jmp .L_lambda_simple_params_loop_0114
 12576                                  .L_lambda_simple_params_end_0114:
 12577 00008B96 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12578 00008B99 4889C3                  	mov rbx, rax
 12579 00008B9C 58                      	pop rax
 12580 00008B9D C60004                  	mov byte [rax], T_closure
 12581 00008BA0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12582 00008BA4 48C74009[B18B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0114
 12583 00008BAC E9C40C0000              	jmp .L_lambda_simple_end_0114
 12584                                  .L_lambda_simple_code_0114:	; lambda-simple body
 12585 00008BB1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12586 00008BB7 740B                    	je .L_lambda_simple_arity_check_ok_0114
 12587 00008BB9 FF742410                	push qword [rsp + 8 * 2]
 12588 00008BBD 6A01                    	push 1
 12589 00008BBF E9BAA10000              	jmp L_error_incorrect_arity_simple
 12590                                  .L_lambda_simple_arity_check_ok_0114:
 12591 00008BC4 C8000000                	enter 0, 0
 12592                                  	; preparing a non-tail-call
 12593                                  	; preparing a non-tail-call
 12594 00008BC8 488B0425[190F0000]      	mov rax, qword [free_var_20]	; free var __bin-less-than-rr
 12595 00008BD0 803805                  	cmp byte [rax], T_undefined
 12596 00008BD3 0F84BFA00000            	je L_error_fvar_undefined
 12597 00008BD9 50                      	push rax
 12598 00008BDA 488B0425[080F0000]      	mov rax, qword [free_var_19]	; free var __bin-less-than-qq
 12599 00008BE2 803805                  	cmp byte [rax], T_undefined
 12600 00008BE5 0F84ADA00000            	je L_error_fvar_undefined
 12601 00008BEB 50                      	push rax
 12602 00008BEC 488B0425[2A0F0000]      	mov rax, qword [free_var_21]	; free var __bin-less-than-zz
 12603 00008BF4 803805                  	cmp byte [rax], T_undefined
 12604 00008BF7 0F849BA00000            	je L_error_fvar_undefined
 12605 00008BFD 50                      	push rax
 12606 00008BFE 6A03                    	push 3	; arg count
 12607 00008C00 488B4520                	mov rax, PARAM(0)	; param make-bin-comparator
 12608 00008C04 803804                  	cmp byte [rax], T_closure
 12609 00008C07 0F850FA10000            	jne L_error_non_closure
 12610 00008C0D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12611 00008C10 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12612 00008C13 50                      	push rax
 12613 00008C14 6A01                    	push 1	; arg count
 12614 00008C16 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12615 00008C1B E8A5A10000              	call malloc
 12616 00008C20 50                      	push rax
 12617 00008C21 BF08000000              	mov rdi, 8 * 1	; new rib
 12618 00008C26 E89AA10000              	call malloc
 12619 00008C2B 50                      	push rax
 12620 00008C2C BF18000000              	mov rdi, 8 * 3	; extended env
 12621 00008C31 E88FA10000              	call malloc
 12622 00008C36 488B7D10                	mov rdi, ENV
 12623 00008C3A BE00000000              	mov rsi, 0
 12624 00008C3F BA01000000              	mov rdx, 1
 12625                                  .L_lambda_simple_env_loop_0115:	; ext_env[i + 1] <-- env[i]
 12626 00008C44 4883FE02                	cmp rsi, 2
 12627 00008C48 7410                    	je .L_lambda_simple_env_end_0115
 12628 00008C4A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12629 00008C4E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12630 00008C52 48FFC6                  	inc rsi
 12631 00008C55 48FFC2                  	inc rdx
 12632 00008C58 EBEA                    	jmp .L_lambda_simple_env_loop_0115
 12633                                  .L_lambda_simple_env_end_0115:
 12634 00008C5A 5B                      	pop rbx
 12635 00008C5B BE00000000              	mov rsi, 0
 12636                                  .L_lambda_simple_params_loop_0115:	; copy params
 12637 00008C60 4883FE01                	cmp rsi, 1
 12638 00008C64 740E                    	je .L_lambda_simple_params_end_0115
 12639 00008C66 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12640 00008C6B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12641 00008C6F 48FFC6                  	inc rsi
 12642 00008C72 EBEC                    	jmp .L_lambda_simple_params_loop_0115
 12643                                  .L_lambda_simple_params_end_0115:
 12644 00008C74 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12645 00008C77 4889C3                  	mov rbx, rax
 12646 00008C7A 58                      	pop rax
 12647 00008C7B C60004                  	mov byte [rax], T_closure
 12648 00008C7E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12649 00008C82 48C74009[8F8C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0115
 12650 00008C8A E9D30B0000              	jmp .L_lambda_simple_end_0115
 12651                                  .L_lambda_simple_code_0115:	; lambda-simple body
 12652 00008C8F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12653 00008C95 740B                    	je .L_lambda_simple_arity_check_ok_0115
 12654 00008C97 FF742410                	push qword [rsp + 8 * 2]
 12655 00008C9B 6A01                    	push 1
 12656 00008C9D E9DCA00000              	jmp L_error_incorrect_arity_simple
 12657                                  .L_lambda_simple_arity_check_ok_0115:
 12658 00008CA2 C8000000                	enter 0, 0
 12659                                  	; preparing a non-tail-call
 12660                                  	; preparing a non-tail-call
 12661 00008CA6 488B0425[E60E0000]      	mov rax, qword [free_var_17]	; free var __bin-equal-rr
 12662 00008CAE 803805                  	cmp byte [rax], T_undefined
 12663 00008CB1 0F84E19F0000            	je L_error_fvar_undefined
 12664 00008CB7 50                      	push rax
 12665 00008CB8 488B0425[D50E0000]      	mov rax, qword [free_var_16]	; free var __bin-equal-qq
 12666 00008CC0 803805                  	cmp byte [rax], T_undefined
 12667 00008CC3 0F84CF9F0000            	je L_error_fvar_undefined
 12668 00008CC9 50                      	push rax
 12669 00008CCA 488B0425[F70E0000]      	mov rax, qword [free_var_18]	; free var __bin-equal-zz
 12670 00008CD2 803805                  	cmp byte [rax], T_undefined
 12671 00008CD5 0F84BD9F0000            	je L_error_fvar_undefined
 12672 00008CDB 50                      	push rax
 12673 00008CDC 6A03                    	push 3	; arg count
 12674 00008CDE 488B4510                	mov rax, ENV
 12675 00008CE2 488B00                  	mov rax, qword [rax + 8 * 0]
 12676 00008CE5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var make-bin-comparator
 12677 00008CE8 803804                  	cmp byte [rax], T_closure
 12678 00008CEB 0F852BA00000            	jne L_error_non_closure
 12679 00008CF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12680 00008CF4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12681 00008CF7 50                      	push rax
 12682 00008CF8 6A01                    	push 1	; arg count
 12683 00008CFA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12684 00008CFF E8C1A00000              	call malloc
 12685 00008D04 50                      	push rax
 12686 00008D05 BF08000000              	mov rdi, 8 * 1	; new rib
 12687 00008D0A E8B6A00000              	call malloc
 12688 00008D0F 50                      	push rax
 12689 00008D10 BF20000000              	mov rdi, 8 * 4	; extended env
 12690 00008D15 E8ABA00000              	call malloc
 12691 00008D1A 488B7D10                	mov rdi, ENV
 12692 00008D1E BE00000000              	mov rsi, 0
 12693 00008D23 BA01000000              	mov rdx, 1
 12694                                  .L_lambda_simple_env_loop_0116:	; ext_env[i + 1] <-- env[i]
 12695 00008D28 4883FE03                	cmp rsi, 3
 12696 00008D2C 7410                    	je .L_lambda_simple_env_end_0116
 12697 00008D2E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12698 00008D32 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12699 00008D36 48FFC6                  	inc rsi
 12700 00008D39 48FFC2                  	inc rdx
 12701 00008D3C EBEA                    	jmp .L_lambda_simple_env_loop_0116
 12702                                  .L_lambda_simple_env_end_0116:
 12703 00008D3E 5B                      	pop rbx
 12704 00008D3F BE00000000              	mov rsi, 0
 12705                                  .L_lambda_simple_params_loop_0116:	; copy params
 12706 00008D44 4883FE01                	cmp rsi, 1
 12707 00008D48 740E                    	je .L_lambda_simple_params_end_0116
 12708 00008D4A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12709 00008D4F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12710 00008D53 48FFC6                  	inc rsi
 12711 00008D56 EBEC                    	jmp .L_lambda_simple_params_loop_0116
 12712                                  .L_lambda_simple_params_end_0116:
 12713 00008D58 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12714 00008D5B 4889C3                  	mov rbx, rax
 12715 00008D5E 58                      	pop rax
 12716 00008D5F C60004                  	mov byte [rax], T_closure
 12717 00008D62 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12718 00008D66 48C74009[738D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0116
 12719 00008D6E E9DC0A0000              	jmp .L_lambda_simple_end_0116
 12720                                  .L_lambda_simple_code_0116:	; lambda-simple body
 12721 00008D73 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12722 00008D79 740B                    	je .L_lambda_simple_arity_check_ok_0116
 12723 00008D7B FF742410                	push qword [rsp + 8 * 2]
 12724 00008D7F 6A01                    	push 1
 12725 00008D81 E9F89F0000              	jmp L_error_incorrect_arity_simple
 12726                                  .L_lambda_simple_arity_check_ok_0116:
 12727 00008D86 C8000000                	enter 0, 0
 12728                                  	; preparing a non-tail-call
 12729 00008D8A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12730 00008D8F E831A00000              	call malloc
 12731 00008D94 50                      	push rax
 12732 00008D95 BF08000000              	mov rdi, 8 * 1	; new rib
 12733 00008D9A E826A00000              	call malloc
 12734 00008D9F 50                      	push rax
 12735 00008DA0 BF28000000              	mov rdi, 8 * 5	; extended env
 12736 00008DA5 E81BA00000              	call malloc
 12737 00008DAA 488B7D10                	mov rdi, ENV
 12738 00008DAE BE00000000              	mov rsi, 0
 12739 00008DB3 BA01000000              	mov rdx, 1
 12740                                  .L_lambda_simple_env_loop_0117:	; ext_env[i + 1] <-- env[i]
 12741 00008DB8 4883FE04                	cmp rsi, 4
 12742 00008DBC 7410                    	je .L_lambda_simple_env_end_0117
 12743 00008DBE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12744 00008DC2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12745 00008DC6 48FFC6                  	inc rsi
 12746 00008DC9 48FFC2                  	inc rdx
 12747 00008DCC EBEA                    	jmp .L_lambda_simple_env_loop_0117
 12748                                  .L_lambda_simple_env_end_0117:
 12749 00008DCE 5B                      	pop rbx
 12750 00008DCF BE00000000              	mov rsi, 0
 12751                                  .L_lambda_simple_params_loop_0117:	; copy params
 12752 00008DD4 4883FE01                	cmp rsi, 1
 12753 00008DD8 740E                    	je .L_lambda_simple_params_end_0117
 12754 00008DDA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12755 00008DDF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12756 00008DE3 48FFC6                  	inc rsi
 12757 00008DE6 EBEC                    	jmp .L_lambda_simple_params_loop_0117
 12758                                  .L_lambda_simple_params_end_0117:
 12759 00008DE8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12760 00008DEB 4889C3                  	mov rbx, rax
 12761 00008DEE 58                      	pop rax
 12762 00008DEF C60004                  	mov byte [rax], T_closure
 12763 00008DF2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12764 00008DF6 48C74009[008E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0117
 12765 00008DFE EB64                    	jmp .L_lambda_simple_end_0117
 12766                                  .L_lambda_simple_code_0117:	; lambda-simple body
 12767 00008E00 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12768 00008E06 740B                    	je .L_lambda_simple_arity_check_ok_0117
 12769 00008E08 FF742410                	push qword [rsp + 8 * 2]
 12770 00008E0C 6A02                    	push 2
 12771 00008E0E E96B9F0000              	jmp L_error_incorrect_arity_simple
 12772                                  .L_lambda_simple_arity_check_ok_0117:
 12773 00008E13 C8000000                	enter 0, 0
 12774                                  	; preparing a non-tail-call
 12775                                  	; preparing a non-tail-call
 12776 00008E17 488B4528                	mov rax, PARAM(1)	; param b
 12777 00008E1B 50                      	push rax
 12778 00008E1C 488B4520                	mov rax, PARAM(0)	; param a
 12779 00008E20 50                      	push rax
 12780 00008E21 6A02                    	push 2	; arg count
 12781 00008E23 488B4510                	mov rax, ENV
 12782 00008E27 488B4008                	mov rax, qword [rax + 8 * 1]
 12783 00008E2B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 12784 00008E2E 803804                  	cmp byte [rax], T_closure
 12785 00008E31 0F85E59E0000            	jne L_error_non_closure
 12786 00008E37 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12787 00008E3A FF5009                  	call SOB_CLOSURE_CODE(rax)
 12788 00008E3D 50                      	push rax
 12789 00008E3E 6A01                    	push 1	; arg count
 12790 00008E40 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 12791 00008E48 803805                  	cmp byte [rax], T_undefined
 12792 00008E4B 0F84479E0000            	je L_error_fvar_undefined
 12793 00008E51 803804                  	cmp byte [rax], T_closure
 12794 00008E54 0F85C29E0000            	jne L_error_non_closure
 12795 00008E5A FF7001                  	push SOB_CLOSURE_ENV(rax)
 12796 00008E5D FF5009                  	call SOB_CLOSURE_CODE(rax)
 12797 00008E60 C9                      	leave
 12798 00008E61 C22000                  	ret AND_KILL_FRAME(2)
 12799                                  .L_lambda_simple_end_0117:	; new closure is in rax
 12800 00008E64 50                      	push rax
 12801 00008E65 6A01                    	push 1	; arg count
 12802 00008E67 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12803 00008E6C E8549F0000              	call malloc
 12804 00008E71 50                      	push rax
 12805 00008E72 BF08000000              	mov rdi, 8 * 1	; new rib
 12806 00008E77 E8499F0000              	call malloc
 12807 00008E7C 50                      	push rax
 12808 00008E7D BF28000000              	mov rdi, 8 * 5	; extended env
 12809 00008E82 E83E9F0000              	call malloc
 12810 00008E87 488B7D10                	mov rdi, ENV
 12811 00008E8B BE00000000              	mov rsi, 0
 12812 00008E90 BA01000000              	mov rdx, 1
 12813                                  .L_lambda_simple_env_loop_0118:	; ext_env[i + 1] <-- env[i]
 12814 00008E95 4883FE04                	cmp rsi, 4
 12815 00008E99 7410                    	je .L_lambda_simple_env_end_0118
 12816 00008E9B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12817 00008E9F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12818 00008EA3 48FFC6                  	inc rsi
 12819 00008EA6 48FFC2                  	inc rdx
 12820 00008EA9 EBEA                    	jmp .L_lambda_simple_env_loop_0118
 12821                                  .L_lambda_simple_env_end_0118:
 12822 00008EAB 5B                      	pop rbx
 12823 00008EAC BE00000000              	mov rsi, 0
 12824                                  .L_lambda_simple_params_loop_0118:	; copy params
 12825 00008EB1 4883FE01                	cmp rsi, 1
 12826 00008EB5 740E                    	je .L_lambda_simple_params_end_0118
 12827 00008EB7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12828 00008EBC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12829 00008EC0 48FFC6                  	inc rsi
 12830 00008EC3 EBEC                    	jmp .L_lambda_simple_params_loop_0118
 12831                                  .L_lambda_simple_params_end_0118:
 12832 00008EC5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12833 00008EC8 4889C3                  	mov rbx, rax
 12834 00008ECB 58                      	pop rax
 12835 00008ECC C60004                  	mov byte [rax], T_closure
 12836 00008ECF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12837 00008ED3 48C74009[E08E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0118
 12838 00008EDB E95C090000              	jmp .L_lambda_simple_end_0118
 12839                                  .L_lambda_simple_code_0118:	; lambda-simple body
 12840 00008EE0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12841 00008EE6 740B                    	je .L_lambda_simple_arity_check_ok_0118
 12842 00008EE8 FF742410                	push qword [rsp + 8 * 2]
 12843 00008EEC 6A01                    	push 1
 12844 00008EEE E98B9E0000              	jmp L_error_incorrect_arity_simple
 12845                                  .L_lambda_simple_arity_check_ok_0118:
 12846 00008EF3 C8000000                	enter 0, 0
 12847                                  	; preparing a non-tail-call
 12848 00008EF7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12849 00008EFC E8C49E0000              	call malloc
 12850 00008F01 50                      	push rax
 12851 00008F02 BF08000000              	mov rdi, 8 * 1	; new rib
 12852 00008F07 E8B99E0000              	call malloc
 12853 00008F0C 50                      	push rax
 12854 00008F0D BF30000000              	mov rdi, 8 * 6	; extended env
 12855 00008F12 E8AE9E0000              	call malloc
 12856 00008F17 488B7D10                	mov rdi, ENV
 12857 00008F1B BE00000000              	mov rsi, 0
 12858 00008F20 BA01000000              	mov rdx, 1
 12859                                  .L_lambda_simple_env_loop_0119:	; ext_env[i + 1] <-- env[i]
 12860 00008F25 4883FE05                	cmp rsi, 5
 12861 00008F29 7410                    	je .L_lambda_simple_env_end_0119
 12862 00008F2B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12863 00008F2F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12864 00008F33 48FFC6                  	inc rsi
 12865 00008F36 48FFC2                  	inc rdx
 12866 00008F39 EBEA                    	jmp .L_lambda_simple_env_loop_0119
 12867                                  .L_lambda_simple_env_end_0119:
 12868 00008F3B 5B                      	pop rbx
 12869 00008F3C BE00000000              	mov rsi, 0
 12870                                  .L_lambda_simple_params_loop_0119:	; copy params
 12871 00008F41 4883FE01                	cmp rsi, 1
 12872 00008F45 740E                    	je .L_lambda_simple_params_end_0119
 12873 00008F47 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12874 00008F4C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12875 00008F50 48FFC6                  	inc rsi
 12876 00008F53 EBEC                    	jmp .L_lambda_simple_params_loop_0119
 12877                                  .L_lambda_simple_params_end_0119:
 12878 00008F55 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12879 00008F58 4889C3                  	mov rbx, rax
 12880 00008F5B 58                      	pop rax
 12881 00008F5C C60004                  	mov byte [rax], T_closure
 12882 00008F5F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12883 00008F63 48C74009[6D8F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0119
 12884 00008F6B EB41                    	jmp .L_lambda_simple_end_0119
 12885                                  .L_lambda_simple_code_0119:	; lambda-simple body
 12886 00008F6D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12887 00008F73 740B                    	je .L_lambda_simple_arity_check_ok_0119
 12888 00008F75 FF742410                	push qword [rsp + 8 * 2]
 12889 00008F79 6A02                    	push 2
 12890 00008F7B E9FE9D0000              	jmp L_error_incorrect_arity_simple
 12891                                  .L_lambda_simple_arity_check_ok_0119:
 12892 00008F80 C8000000                	enter 0, 0
 12893                                  	; preparing a non-tail-call
 12894 00008F84 488B4520                	mov rax, PARAM(0)	; param a
 12895 00008F88 50                      	push rax
 12896 00008F89 488B4528                	mov rax, PARAM(1)	; param b
 12897 00008F8D 50                      	push rax
 12898 00008F8E 6A02                    	push 2	; arg count
 12899 00008F90 488B4510                	mov rax, ENV
 12900 00008F94 488B4010                	mov rax, qword [rax + 8 * 2]
 12901 00008F98 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 12902 00008F9B 803804                  	cmp byte [rax], T_closure
 12903 00008F9E 0F85789D0000            	jne L_error_non_closure
 12904 00008FA4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12905 00008FA7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12906 00008FAA C9                      	leave
 12907 00008FAB C22000                  	ret AND_KILL_FRAME(2)
 12908                                  .L_lambda_simple_end_0119:	; new closure is in rax
 12909 00008FAE 50                      	push rax
 12910 00008FAF 6A01                    	push 1	; arg count
 12911 00008FB1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12912 00008FB6 E80A9E0000              	call malloc
 12913 00008FBB 50                      	push rax
 12914 00008FBC BF08000000              	mov rdi, 8 * 1	; new rib
 12915 00008FC1 E8FF9D0000              	call malloc
 12916 00008FC6 50                      	push rax
 12917 00008FC7 BF30000000              	mov rdi, 8 * 6	; extended env
 12918 00008FCC E8F49D0000              	call malloc
 12919 00008FD1 488B7D10                	mov rdi, ENV
 12920 00008FD5 BE00000000              	mov rsi, 0
 12921 00008FDA BA01000000              	mov rdx, 1
 12922                                  .L_lambda_simple_env_loop_011a:	; ext_env[i + 1] <-- env[i]
 12923 00008FDF 4883FE05                	cmp rsi, 5
 12924 00008FE3 7410                    	je .L_lambda_simple_env_end_011a
 12925 00008FE5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12926 00008FE9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12927 00008FED 48FFC6                  	inc rsi
 12928 00008FF0 48FFC2                  	inc rdx
 12929 00008FF3 EBEA                    	jmp .L_lambda_simple_env_loop_011a
 12930                                  .L_lambda_simple_env_end_011a:
 12931 00008FF5 5B                      	pop rbx
 12932 00008FF6 BE00000000              	mov rsi, 0
 12933                                  .L_lambda_simple_params_loop_011a:	; copy params
 12934 00008FFB 4883FE01                	cmp rsi, 1
 12935 00008FFF 740E                    	je .L_lambda_simple_params_end_011a
 12936 00009001 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12937 00009006 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12938 0000900A 48FFC6                  	inc rsi
 12939 0000900D EBEC                    	jmp .L_lambda_simple_params_loop_011a
 12940                                  .L_lambda_simple_params_end_011a:
 12941 0000900F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12942 00009012 4889C3                  	mov rbx, rax
 12943 00009015 58                      	pop rax
 12944 00009016 C60004                  	mov byte [rax], T_closure
 12945 00009019 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12946 0000901D 48C74009[2A900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_011a
 12947 00009025 E9FF070000              	jmp .L_lambda_simple_end_011a
 12948                                  .L_lambda_simple_code_011a:	; lambda-simple body
 12949 0000902A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12950 00009030 740B                    	je .L_lambda_simple_arity_check_ok_011a
 12951 00009032 FF742410                	push qword [rsp + 8 * 2]
 12952 00009036 6A01                    	push 1
 12953 00009038 E9419D0000              	jmp L_error_incorrect_arity_simple
 12954                                  .L_lambda_simple_arity_check_ok_011a:
 12955 0000903D C8000000                	enter 0, 0
 12956                                  	; preparing a non-tail-call
 12957 00009041 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12958 00009046 E87A9D0000              	call malloc
 12959 0000904B 50                      	push rax
 12960 0000904C BF08000000              	mov rdi, 8 * 1	; new rib
 12961 00009051 E86F9D0000              	call malloc
 12962 00009056 50                      	push rax
 12963 00009057 BF38000000              	mov rdi, 8 * 7	; extended env
 12964 0000905C E8649D0000              	call malloc
 12965 00009061 488B7D10                	mov rdi, ENV
 12966 00009065 BE00000000              	mov rsi, 0
 12967 0000906A BA01000000              	mov rdx, 1
 12968                                  .L_lambda_simple_env_loop_011b:	; ext_env[i + 1] <-- env[i]
 12969 0000906F 4883FE06                	cmp rsi, 6
 12970 00009073 7410                    	je .L_lambda_simple_env_end_011b
 12971 00009075 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12972 00009079 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12973 0000907D 48FFC6                  	inc rsi
 12974 00009080 48FFC2                  	inc rdx
 12975 00009083 EBEA                    	jmp .L_lambda_simple_env_loop_011b
 12976                                  .L_lambda_simple_env_end_011b:
 12977 00009085 5B                      	pop rbx
 12978 00009086 BE00000000              	mov rsi, 0
 12979                                  .L_lambda_simple_params_loop_011b:	; copy params
 12980 0000908B 4883FE01                	cmp rsi, 1
 12981 0000908F 740E                    	je .L_lambda_simple_params_end_011b
 12982 00009091 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12983 00009096 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12984 0000909A 48FFC6                  	inc rsi
 12985 0000909D EBEC                    	jmp .L_lambda_simple_params_loop_011b
 12986                                  .L_lambda_simple_params_end_011b:
 12987 0000909F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12988 000090A2 4889C3                  	mov rbx, rax
 12989 000090A5 58                      	pop rax
 12990 000090A6 C60004                  	mov byte [rax], T_closure
 12991 000090A9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12992 000090AD 48C74009[B7900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_011b
 12993 000090B5 EB63                    	jmp .L_lambda_simple_end_011b
 12994                                  .L_lambda_simple_code_011b:	; lambda-simple body
 12995 000090B7 48837C241002            	cmp qword [rsp + 8 * 2], 2
 12996 000090BD 740B                    	je .L_lambda_simple_arity_check_ok_011b
 12997 000090BF FF742410                	push qword [rsp + 8 * 2]
 12998 000090C3 6A02                    	push 2
 12999 000090C5 E9B49C0000              	jmp L_error_incorrect_arity_simple
 13000                                  .L_lambda_simple_arity_check_ok_011b:
 13001 000090CA C8000000                	enter 0, 0
 13002                                  	; preparing a non-tail-call
 13003                                  	; preparing a non-tail-call
 13004 000090CE 488B4528                	mov rax, PARAM(1)	; param b
 13005 000090D2 50                      	push rax
 13006 000090D3 488B4520                	mov rax, PARAM(0)	; param a
 13007 000090D7 50                      	push rax
 13008 000090D8 6A02                    	push 2	; arg count
 13009 000090DA 488B4510                	mov rax, ENV
 13010 000090DE 488B00                  	mov rax, qword [rax + 8 * 0]
 13011 000090E1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 13012 000090E4 803804                  	cmp byte [rax], T_closure
 13013 000090E7 0F852F9C0000            	jne L_error_non_closure
 13014 000090ED FF7001                  	push SOB_CLOSURE_ENV(rax)
 13015 000090F0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13016 000090F3 50                      	push rax
 13017 000090F4 6A01                    	push 1	; arg count
 13018 000090F6 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 13019 000090FE 803805                  	cmp byte [rax], T_undefined
 13020 00009101 0F84919B0000            	je L_error_fvar_undefined
 13021 00009107 803804                  	cmp byte [rax], T_closure
 13022 0000910A 0F850C9C0000            	jne L_error_non_closure
 13023 00009110 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13024 00009113 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13025 00009116 C9                      	leave
 13026 00009117 C22000                  	ret AND_KILL_FRAME(2)
 13027                                  .L_lambda_simple_end_011b:	; new closure is in rax
 13028 0000911A 50                      	push rax
 13029 0000911B 6A01                    	push 1	; arg count
 13030 0000911D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13031 00009122 E89E9C0000              	call malloc
 13032 00009127 50                      	push rax
 13033 00009128 BF08000000              	mov rdi, 8 * 1	; new rib
 13034 0000912D E8939C0000              	call malloc
 13035 00009132 50                      	push rax
 13036 00009133 BF38000000              	mov rdi, 8 * 7	; extended env
 13037 00009138 E8889C0000              	call malloc
 13038 0000913D 488B7D10                	mov rdi, ENV
 13039 00009141 BE00000000              	mov rsi, 0
 13040 00009146 BA01000000              	mov rdx, 1
 13041                                  .L_lambda_simple_env_loop_011c:	; ext_env[i + 1] <-- env[i]
 13042 0000914B 4883FE06                	cmp rsi, 6
 13043 0000914F 7410                    	je .L_lambda_simple_env_end_011c
 13044 00009151 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13045 00009155 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13046 00009159 48FFC6                  	inc rsi
 13047 0000915C 48FFC2                  	inc rdx
 13048 0000915F EBEA                    	jmp .L_lambda_simple_env_loop_011c
 13049                                  .L_lambda_simple_env_end_011c:
 13050 00009161 5B                      	pop rbx
 13051 00009162 BE00000000              	mov rsi, 0
 13052                                  .L_lambda_simple_params_loop_011c:	; copy params
 13053 00009167 4883FE01                	cmp rsi, 1
 13054 0000916B 740E                    	je .L_lambda_simple_params_end_011c
 13055 0000916D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13056 00009172 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13057 00009176 48FFC6                  	inc rsi
 13058 00009179 EBEC                    	jmp .L_lambda_simple_params_loop_011c
 13059                                  .L_lambda_simple_params_end_011c:
 13060 0000917B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13061 0000917E 4889C3                  	mov rbx, rax
 13062 00009181 58                      	pop rax
 13063 00009182 C60004                  	mov byte [rax], T_closure
 13064 00009185 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13065 00009189 48C74009[96910000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_011c
 13066 00009191 E980060000              	jmp .L_lambda_simple_end_011c
 13067                                  .L_lambda_simple_code_011c:	; lambda-simple body
 13068 00009196 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13069 0000919C 740B                    	je .L_lambda_simple_arity_check_ok_011c
 13070 0000919E FF742410                	push qword [rsp + 8 * 2]
 13071 000091A2 6A01                    	push 1
 13072 000091A4 E9D59B0000              	jmp L_error_incorrect_arity_simple
 13073                                  .L_lambda_simple_arity_check_ok_011c:
 13074 000091A9 C8000000                	enter 0, 0
 13075                                  	; preparing a non-tail-call
 13076 000091AD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13077 000091B2 E80E9C0000              	call malloc
 13078 000091B7 50                      	push rax
 13079 000091B8 BF08000000              	mov rdi, 8 * 1	; new rib
 13080 000091BD E8039C0000              	call malloc
 13081 000091C2 50                      	push rax
 13082 000091C3 BF40000000              	mov rdi, 8 * 8	; extended env
 13083 000091C8 E8F89B0000              	call malloc
 13084 000091CD 488B7D10                	mov rdi, ENV
 13085 000091D1 BE00000000              	mov rsi, 0
 13086 000091D6 BA01000000              	mov rdx, 1
 13087                                  .L_lambda_simple_env_loop_011d:	; ext_env[i + 1] <-- env[i]
 13088 000091DB 4883FE07                	cmp rsi, 7
 13089 000091DF 7410                    	je .L_lambda_simple_env_end_011d
 13090 000091E1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13091 000091E5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13092 000091E9 48FFC6                  	inc rsi
 13093 000091EC 48FFC2                  	inc rdx
 13094 000091EF EBEA                    	jmp .L_lambda_simple_env_loop_011d
 13095                                  .L_lambda_simple_env_end_011d:
 13096 000091F1 5B                      	pop rbx
 13097 000091F2 BE00000000              	mov rsi, 0
 13098                                  .L_lambda_simple_params_loop_011d:	; copy params
 13099 000091F7 4883FE01                	cmp rsi, 1
 13100 000091FB 740E                    	je .L_lambda_simple_params_end_011d
 13101 000091FD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13102 00009202 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13103 00009206 48FFC6                  	inc rsi
 13104 00009209 EBEC                    	jmp .L_lambda_simple_params_loop_011d
 13105                                  .L_lambda_simple_params_end_011d:
 13106 0000920B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13107 0000920E 4889C3                  	mov rbx, rax
 13108 00009211 58                      	pop rax
 13109 00009212 C60004                  	mov byte [rax], T_closure
 13110 00009215 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13111 00009219 48C74009[26920000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_011d
 13112 00009221 E948040000              	jmp .L_lambda_simple_end_011d
 13113                                  .L_lambda_simple_code_011d:	; lambda-simple body
 13114 00009226 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13115 0000922C 740B                    	je .L_lambda_simple_arity_check_ok_011d
 13116 0000922E FF742410                	push qword [rsp + 8 * 2]
 13117 00009232 6A01                    	push 1
 13118 00009234 E9459B0000              	jmp L_error_incorrect_arity_simple
 13119                                  .L_lambda_simple_arity_check_ok_011d:
 13120 00009239 C8000000                	enter 0, 0
 13121                                  	; preparing a non-tail-call
 13122 0000923D 48B8-                   	mov rax, L_constants + 1993
 13122 0000923F [C907000000000000] 
 13123 00009247 50                      	push rax
 13124 00009248 6A01                    	push 1	; arg count
 13125 0000924A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13126 0000924F E8719B0000              	call malloc
 13127 00009254 50                      	push rax
 13128 00009255 BF08000000              	mov rdi, 8 * 1	; new rib
 13129 0000925A E8669B0000              	call malloc
 13130 0000925F 50                      	push rax
 13131 00009260 BF48000000              	mov rdi, 8 * 9	; extended env
 13132 00009265 E85B9B0000              	call malloc
 13133 0000926A 488B7D10                	mov rdi, ENV
 13134 0000926E BE00000000              	mov rsi, 0
 13135 00009273 BA01000000              	mov rdx, 1
 13136                                  .L_lambda_simple_env_loop_011e:	; ext_env[i + 1] <-- env[i]
 13137 00009278 4883FE08                	cmp rsi, 8
 13138 0000927C 7410                    	je .L_lambda_simple_env_end_011e
 13139 0000927E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13140 00009282 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13141 00009286 48FFC6                  	inc rsi
 13142 00009289 48FFC2                  	inc rdx
 13143 0000928C EBEA                    	jmp .L_lambda_simple_env_loop_011e
 13144                                  .L_lambda_simple_env_end_011e:
 13145 0000928E 5B                      	pop rbx
 13146 0000928F BE00000000              	mov rsi, 0
 13147                                  .L_lambda_simple_params_loop_011e:	; copy params
 13148 00009294 4883FE01                	cmp rsi, 1
 13149 00009298 740E                    	je .L_lambda_simple_params_end_011e
 13150 0000929A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13151 0000929F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13152 000092A3 48FFC6                  	inc rsi
 13153 000092A6 EBEC                    	jmp .L_lambda_simple_params_loop_011e
 13154                                  .L_lambda_simple_params_end_011e:
 13155 000092A8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13156 000092AB 4889C3                  	mov rbx, rax
 13157 000092AE 58                      	pop rax
 13158 000092AF C60004                  	mov byte [rax], T_closure
 13159 000092B2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13160 000092B6 48C74009[C3920000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_011e
 13161 000092BE E998030000              	jmp .L_lambda_simple_end_011e
 13162                                  .L_lambda_simple_code_011e:	; lambda-simple body
 13163 000092C3 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13164 000092C9 740B                    	je .L_lambda_simple_arity_check_ok_011e
 13165 000092CB FF742410                	push qword [rsp + 8 * 2]
 13166 000092CF 6A01                    	push 1
 13167 000092D1 E9A89A0000              	jmp L_error_incorrect_arity_simple
 13168                                  .L_lambda_simple_arity_check_ok_011e:
 13169 000092D6 C8000000                	enter 0, 0
 13170 000092DA 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 13171 000092DE 488903                  	mov qword [rbx], rax
 13172                                  
 13173 000092E1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13174 000092E6 E8DA9A0000              	call malloc
 13175 000092EB 50                      	push rax
 13176 000092EC BF08000000              	mov rdi, 8 * 1	; new rib
 13177 000092F1 E8CF9A0000              	call malloc
 13178 000092F6 50                      	push rax
 13179 000092F7 BF50000000              	mov rdi, 8 * 10	; extended env
 13180 000092FC E8C49A0000              	call malloc
 13181 00009301 488B7D10                	mov rdi, ENV
 13182 00009305 BE00000000              	mov rsi, 0
 13183 0000930A BA01000000              	mov rdx, 1
 13184                                  .L_lambda_simple_env_loop_011f:	; ext_env[i + 1] <-- env[i]
 13185 0000930F 4883FE09                	cmp rsi, 9
 13186 00009313 7410                    	je .L_lambda_simple_env_end_011f
 13187 00009315 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13188 00009319 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13189 0000931D 48FFC6                  	inc rsi
 13190 00009320 48FFC2                  	inc rdx
 13191 00009323 EBEA                    	jmp .L_lambda_simple_env_loop_011f
 13192                                  .L_lambda_simple_env_end_011f:
 13193 00009325 5B                      	pop rbx
 13194 00009326 BE00000000              	mov rsi, 0
 13195                                  .L_lambda_simple_params_loop_011f:	; copy params
 13196 0000932B 4883FE01                	cmp rsi, 1
 13197 0000932F 740E                    	je .L_lambda_simple_params_end_011f
 13198 00009331 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13199 00009336 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13200 0000933A 48FFC6                  	inc rsi
 13201 0000933D EBEC                    	jmp .L_lambda_simple_params_loop_011f
 13202                                  .L_lambda_simple_params_end_011f:
 13203 0000933F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13204 00009342 4889C3                  	mov rbx, rax
 13205 00009345 58                      	pop rax
 13206 00009346 C60004                  	mov byte [rax], T_closure
 13207 00009349 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13208 0000934D 48C74009[5A930000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_011f
 13209 00009355 E919010000              	jmp .L_lambda_simple_end_011f
 13210                                  .L_lambda_simple_code_011f:	; lambda-simple body
 13211 0000935A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13212 00009360 740B                    	je .L_lambda_simple_arity_check_ok_011f
 13213 00009362 FF742410                	push qword [rsp + 8 * 2]
 13214 00009366 6A02                    	push 2
 13215 00009368 E9119A0000              	jmp L_error_incorrect_arity_simple
 13216                                  .L_lambda_simple_arity_check_ok_011f:
 13217 0000936D C8000000                	enter 0, 0
 13218                                  	; preparing a non-tail-call
 13219 00009371 488B4528                	mov rax, PARAM(1)	; param s
 13220 00009375 50                      	push rax
 13221 00009376 6A01                    	push 1	; arg count
 13222 00009378 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 13223 00009380 803805                  	cmp byte [rax], T_undefined
 13224 00009383 0F840F990000            	je L_error_fvar_undefined
 13225 00009389 803804                  	cmp byte [rax], T_closure
 13226 0000938C 0F858A990000            	jne L_error_non_closure
 13227 00009392 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13228 00009395 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13229 00009398 483D[02000000]          	cmp rax, sob_boolean_false
 13230 0000939E 0F85CB000000            	jne .L_or_end_001a
 13231                                  	; preparing a non-tail-call
 13232                                  	; preparing a non-tail-call
 13233 000093A4 488B4528                	mov rax, PARAM(1)	; param s
 13234 000093A8 50                      	push rax
 13235 000093A9 6A01                    	push 1	; arg count
 13236 000093AB 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 13237 000093B3 803805                  	cmp byte [rax], T_undefined
 13238 000093B6 0F84DC980000            	je L_error_fvar_undefined
 13239 000093BC 803804                  	cmp byte [rax], T_closure
 13240 000093BF 0F8557990000            	jne L_error_non_closure
 13241 000093C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13242 000093C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13243 000093CB 50                      	push rax
 13244 000093CC 488B4520                	mov rax, PARAM(0)	; param a
 13245 000093D0 50                      	push rax
 13246 000093D1 6A02                    	push 2	; arg count
 13247 000093D3 488B4510                	mov rax, ENV
 13248 000093D7 488B4008                	mov rax, qword [rax + 8 * 1]
 13249 000093DB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-ordering
 13250 000093DE 803804                  	cmp byte [rax], T_closure
 13251 000093E1 0F8535990000            	jne L_error_non_closure
 13252 000093E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13253 000093EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 13254 000093ED 483D[02000000]          	cmp rax, sob_boolean_false
 13255 000093F3 7470                    	je .L_if_else_00ee
 13256                                  	; preparing a non-tail-call
 13257                                  	; preparing a non-tail-call
 13258 000093F5 488B4528                	mov rax, PARAM(1)	; param s
 13259 000093F9 50                      	push rax
 13260 000093FA 6A01                    	push 1	; arg count
 13261 000093FC 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 13262 00009404 803805                  	cmp byte [rax], T_undefined
 13263 00009407 0F848B980000            	je L_error_fvar_undefined
 13264 0000940D 803804                  	cmp byte [rax], T_closure
 13265 00009410 0F8506990000            	jne L_error_non_closure
 13266 00009416 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13267 00009419 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13268 0000941C 50                      	push rax
 13269                                  	; preparing a non-tail-call
 13270 0000941D 488B4528                	mov rax, PARAM(1)	; param s
 13271 00009421 50                      	push rax
 13272 00009422 6A01                    	push 1	; arg count
 13273 00009424 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 13274 0000942C 803805                  	cmp byte [rax], T_undefined
 13275 0000942F 0F8463980000            	je L_error_fvar_undefined
 13276 00009435 803804                  	cmp byte [rax], T_closure
 13277 00009438 0F85DE980000            	jne L_error_non_closure
 13278 0000943E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13279 00009441 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13280 00009444 50                      	push rax
 13281 00009445 6A02                    	push 2	; arg count
 13282 00009447 488B4510                	mov rax, ENV
 13283 0000944B 488B00                  	mov rax, qword [rax + 8 * 0]
 13284 0000944E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 13285 00009451 488B00                  	mov rax, qword [rax]
 13286 00009454 803804                  	cmp byte [rax], T_closure
 13287 00009457 0F85BF980000            	jne L_error_non_closure
 13288 0000945D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13289 00009460 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13290 00009463 EB0A                    	jmp .L_if_end_00ee
 13291                                  .L_if_else_00ee:
 13292 00009465 48B8-                   	mov rax, L_constants + 2
 13292 00009467 [0200000000000000] 
 13293                                  .L_if_end_00ee:
 13294                                  .L_or_end_001a:
 13295 0000946F C9                      	leave
 13296 00009470 C22000                  	ret AND_KILL_FRAME(2)
 13297                                  .L_lambda_simple_end_011f:	; new closure is in rax
 13298 00009473 50                      	push rax
 13299 00009474 488B4520                	mov rax, PARAM(0)	; param run
 13300 00009478 8F00                    	pop qword [rax]
 13301 0000947A 48B8-                   	mov rax, sob_void
 13301 0000947C [0000000000000000] 
 13302                                  
 13303 00009484 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13304 00009489 E837990000              	call malloc
 13305 0000948E 50                      	push rax
 13306 0000948F BF08000000              	mov rdi, 8 * 1	; new rib
 13307 00009494 E82C990000              	call malloc
 13308 00009499 50                      	push rax
 13309 0000949A BF50000000              	mov rdi, 8 * 10	; extended env
 13310 0000949F E821990000              	call malloc
 13311 000094A4 488B7D10                	mov rdi, ENV
 13312 000094A8 BE00000000              	mov rsi, 0
 13313 000094AD BA01000000              	mov rdx, 1
 13314                                  .L_lambda_opt_env_loop_0026:	; ext_env[i + 1] <-- env[i]
 13315 000094B2 4883FE09                	cmp rsi, 9
 13316 000094B6 7410                    	je .L_lambda_opt_env_end_0026
 13317 000094B8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13318 000094BC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13319 000094C0 48FFC6                  	inc rsi
 13320 000094C3 48FFC2                  	inc rdx
 13321 000094C6 EBEA                    	jmp .L_lambda_opt_env_loop_0026
 13322                                  .L_lambda_opt_env_end_0026:
 13323 000094C8 5B                      	pop rbx
 13324 000094C9 BE00000000              	mov rsi, 0
 13325                                  .L_lambda_opt_params_loop_0026:	; copy params
 13326 000094CE 4883FE01                	cmp rsi, 1
 13327 000094D2 740E                    	je .L_lambda_opt_params_end_0026
 13328 000094D4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13329 000094D9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13330 000094DD 48FFC6                  	inc rsi
 13331 000094E0 EBEC                    	jmp .L_lambda_opt_params_loop_0026
 13332                                  .L_lambda_opt_params_end_0026:
 13333 000094E2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13334 000094E5 4889C3                  	mov rbx, rax
 13335 000094E8 58                      	pop rax
 13336 000094E9 C60004                  	mov byte [rax], T_closure
 13337 000094EC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13338 000094F0 48C74009[FD940000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0026
 13339 000094F8 E95A010000              	jmp .L_lambda_opt_end_0026
 13340                                  .L_lambda_opt_code_0026:	; lambda-opt body
 13341 000094FD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13342 00009503 740D                    	je .L_lambda_opt_arity_check_exact_0026
 13343 00009505 7F7A                    	jg .L_lambda_opt_arity_check_more_0026
 13344 00009507 FF742410                	push qword [rsp + 8 * 2]
 13345 0000950B 6A01                    	push 1
 13346 0000950D E980980000              	jmp L_error_incorrect_arity_opt
 13347                                  .L_lambda_opt_arity_check_exact_0026:
 13348 00009512 4883EC08                	sub rsp, 8
 13349 00009516 488B442408              	mov rax, qword[rsp + 8 *1]
 13350 0000951B 48890424                	mov qword[rsp], rax  
 13351 0000951F 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 13352 00009524 4889442408              	mov qword[rsp + 8 * 1], rax
 13353 00009529 B802000000              	mov rax, 2
 13354 0000952E 4889442410              	mov qword[rsp + 8 *2], rax
 13355 00009533 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 13356 00009538 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 13357 0000953D 48B8-                   	mov rax, sob_nil
 13357 0000953F [0100000000000000] 
 13358 00009547 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 13359 0000954C C8000000                	enter 0, 0
 13360                                  	; preparing a non-tail-call
 13361 00009550 488B4528                	mov rax, PARAM(1)	; param s
 13362 00009554 50                      	push rax
 13363 00009555 488B4520                	mov rax, PARAM(0)	; param a
 13364 00009559 50                      	push rax
 13365 0000955A 6A02                    	push 2	; arg count
 13366 0000955C 488B4510                	mov rax, ENV
 13367 00009560 488B00                  	mov rax, qword [rax + 8 * 0]
 13368 00009563 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 13369 00009566 488B00                  	mov rax, qword [rax]
 13370 00009569 803804                  	cmp byte [rax], T_closure
 13371 0000956C 0F85AA970000            	jne L_error_non_closure
 13372 00009572 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13373 00009575 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13374 00009578 C9                      	leave
 13375 00009579 C22000                  	ret AND_KILL_FRAME(2)
 13376 0000957C E9D6000000              	jmp .L_lambda_opt_end_0026	; new closure is in rax
 13377                                  .L_lambda_opt_arity_check_more_0026:
 13378 00009581 488B442410              	mov rax, qword[rsp + 2 * 8]
 13379 00009586 4889C7                  	mov rdi, rax
 13380 00009589 49B9-                   	mov r9, sob_nil
 13380 0000958B [0100000000000000] 
 13381 00009593 4C8B442410              	mov r8, qword[rsp+2*8]
 13382                                  .L_lambda_opt_stack_shrink_loop_0026:
 13383 00009598 4983F801                	cmp r8, 1
 13384 0000959C 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0026
 13385 0000959E 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 13386 000095A3 BF11000000              	mov rdi, 1+8+8	;for pair
 13387 000095A8 E818980000              	call malloc	 ;to create the pair in the stack
 13388 000095AD C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 13389 000095B0 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 13390 000095B4 4C894809                 	mov qword[rax+1+8],r9
 13391 000095B8 4989C1                  	mov r9 , rax	 ; for the recursion 
 13392 000095BB 49FFC8                  	dec r8
 13393 000095BE EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0026
 13394                                  .L_lambda_opt_stack_shrink_loop_exit_0026:
 13395 000095C0 488B442410              	mov rax, qword[rsp + 2 * 8]
 13396 000095C5 BF02000000              	mov rdi, 2
 13397 000095CA 4829F8                  	sub rax, rdi
 13398 000095CD 4889C7                  	mov rdi, rax
 13399 000095D0 486BC008                	imul rax,8
 13400 000095D4 4801C4                  	add rsp, rax
 13401 000095D7 4889E0                  	mov rax, rsp
 13402 000095DA 4989F8                  	mov r8, rdi
 13403 000095DD 4D6BC008                	imul r8, 8
 13404 000095E1 4C29C0                  	sub rax, r8
 13405 000095E4 4989C2                  	mov r10, rax	; holds the original ret in the stack
 13406 000095E7 4983C218                	add r10, 8*3
 13407 000095EB 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 13408 000095EF 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 13409 000095F2 4D6BC008                	imul r8,8
 13410 000095F6 4C01C0                  	add rax, r8
 13411 000095F9 4C8908                  	mov qword[rax] ,r9
 13412 000095FC 4D89D0                   	mov r8, r10
 13413 000095FF 4983C000                	add r8, 8 * 0
 13414 00009603 4D8B08                  	mov r9,qword[r8]
 13415 00009606 4D890CF8                	mov qword [r8 + rdi * 8], r9
 13416 0000960A 4983EA18                	sub r10, 8*3
 13417 0000960E 48C744241002000000      	mov qword [rsp+2*8], 2
 13418 00009617 498B4208                	mov rax, qword[r10 + 1 * 8]
 13419 0000961B 4889442408              	mov qword[rsp + 1*8] ,rax
 13420 00009620 498B02                  	mov rax, qword[r10]
 13421 00009623 48890424                	mov qword[rsp], rax
 13422 00009627 C8000000                	enter 0, 0
 13423                                  	; preparing a non-tail-call
 13424 0000962B 488B4528                	mov rax, PARAM(1)	; param s
 13425 0000962F 50                      	push rax
 13426 00009630 488B4520                	mov rax, PARAM(0)	; param a
 13427 00009634 50                      	push rax
 13428 00009635 6A02                    	push 2	; arg count
 13429 00009637 488B4510                	mov rax, ENV
 13430 0000963B 488B00                  	mov rax, qword [rax + 8 * 0]
 13431 0000963E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 13432 00009641 488B00                  	mov rax, qword [rax]
 13433 00009644 803804                  	cmp byte [rax], T_closure
 13434 00009647 0F85CF960000            	jne L_error_non_closure
 13435 0000964D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13436 00009650 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13437 00009653 C9                      	leave
 13438 00009654 C22000                  	ret AND_KILL_FRAME(2)
 13439                                  .L_lambda_opt_end_0026:	; new closure is in rax
 13440 00009657 C9                      	leave
 13441 00009658 C21800                  	ret AND_KILL_FRAME(1)
 13442                                  .L_lambda_simple_end_011e:	; new closure is in rax
 13443 0000965B 803804                  	cmp byte [rax], T_closure
 13444 0000965E 0F85B8960000            	jne L_error_non_closure
 13445 00009664 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13446 00009667 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13447 0000966A C9                      	leave
 13448 0000966B C21800                  	ret AND_KILL_FRAME(1)
 13449                                  .L_lambda_simple_end_011d:	; new closure is in rax
 13450 0000966E 50                      	push rax
 13451 0000966F 6A01                    	push 1	; arg count
 13452 00009671 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13453 00009676 E84A970000              	call malloc
 13454 0000967B 50                      	push rax
 13455 0000967C BF08000000              	mov rdi, 8 * 1	; new rib
 13456 00009681 E83F970000              	call malloc
 13457 00009686 50                      	push rax
 13458 00009687 BF40000000              	mov rdi, 8 * 8	; extended env
 13459 0000968C E834970000              	call malloc
 13460 00009691 488B7D10                	mov rdi, ENV
 13461 00009695 BE00000000              	mov rsi, 0
 13462 0000969A BA01000000              	mov rdx, 1
 13463                                  .L_lambda_simple_env_loop_0120:	; ext_env[i + 1] <-- env[i]
 13464 0000969F 4883FE07                	cmp rsi, 7
 13465 000096A3 7410                    	je .L_lambda_simple_env_end_0120
 13466 000096A5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13467 000096A9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13468 000096AD 48FFC6                  	inc rsi
 13469 000096B0 48FFC2                  	inc rdx
 13470 000096B3 EBEA                    	jmp .L_lambda_simple_env_loop_0120
 13471                                  .L_lambda_simple_env_end_0120:
 13472 000096B5 5B                      	pop rbx
 13473 000096B6 BE00000000              	mov rsi, 0
 13474                                  .L_lambda_simple_params_loop_0120:	; copy params
 13475 000096BB 4883FE01                	cmp rsi, 1
 13476 000096BF 740E                    	je .L_lambda_simple_params_end_0120
 13477 000096C1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13478 000096C6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13479 000096CA 48FFC6                  	inc rsi
 13480 000096CD EBEC                    	jmp .L_lambda_simple_params_loop_0120
 13481                                  .L_lambda_simple_params_end_0120:
 13482 000096CF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13483 000096D2 4889C3                  	mov rbx, rax
 13484 000096D5 58                      	pop rax
 13485 000096D6 C60004                  	mov byte [rax], T_closure
 13486 000096D9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13487 000096DD 48C74009[EA960000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0120
 13488 000096E5 E919010000              	jmp .L_lambda_simple_end_0120
 13489                                  .L_lambda_simple_code_0120:	; lambda-simple body
 13490 000096EA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13491 000096F0 740B                    	je .L_lambda_simple_arity_check_ok_0120
 13492 000096F2 FF742410                	push qword [rsp + 8 * 2]
 13493 000096F6 6A01                    	push 1
 13494 000096F8 E981960000              	jmp L_error_incorrect_arity_simple
 13495                                  .L_lambda_simple_arity_check_ok_0120:
 13496 000096FD C8000000                	enter 0, 0
 13497                                  	; preparing a non-tail-call
 13498 00009701 488B4510                	mov rax, ENV
 13499 00009705 488B4020                	mov rax, qword [rax + 8 * 4]
 13500 00009709 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 13501 0000970C 50                      	push rax
 13502 0000970D 6A01                    	push 1	; arg count
 13503 0000970F 488B4520                	mov rax, PARAM(0)	; param make-run
 13504 00009713 803804                  	cmp byte [rax], T_closure
 13505 00009716 0F8500960000            	jne L_error_non_closure
 13506 0000971C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13507 0000971F FF5009                  	call SOB_CLOSURE_CODE(rax)
 13508 00009722 48890425[090E0000]      	mov qword [free_var_4], rax
 13509 0000972A 48B8-                   	mov rax, sob_void
 13509 0000972C [0000000000000000] 
 13510                                  
 13511                                  	; preparing a non-tail-call
 13512 00009734 488B4510                	mov rax, ENV
 13513 00009738 488B00                  	mov rax, qword [rax + 8 * 0]
 13514 0000973B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<=?
 13515 0000973E 50                      	push rax
 13516 0000973F 6A01                    	push 1	; arg count
 13517 00009741 488B4520                	mov rax, PARAM(0)	; param make-run
 13518 00009745 803804                  	cmp byte [rax], T_closure
 13519 00009748 0F85CE950000            	jne L_error_non_closure
 13520 0000974E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13521 00009751 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13522 00009754 48890425[1A0E0000]      	mov qword [free_var_5], rax
 13523 0000975C 48B8-                   	mov rax, sob_void
 13523 0000975E [0000000000000000] 
 13524                                  
 13525                                  	; preparing a non-tail-call
 13526 00009766 488B4510                	mov rax, ENV
 13527 0000976A 488B4008                	mov rax, qword [rax + 8 * 1]
 13528 0000976E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 13529 00009771 50                      	push rax
 13530 00009772 6A01                    	push 1	; arg count
 13531 00009774 488B4520                	mov rax, PARAM(0)	; param make-run
 13532 00009778 803804                  	cmp byte [rax], T_closure
 13533 0000977B 0F859B950000            	jne L_error_non_closure
 13534 00009781 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13535 00009784 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13536 00009787 48890425[3C0E0000]      	mov qword [free_var_7], rax
 13537 0000978F 48B8-                   	mov rax, sob_void
 13537 00009791 [0000000000000000] 
 13538                                  
 13539                                  	; preparing a non-tail-call
 13540 00009799 488B4510                	mov rax, ENV
 13541 0000979D 488B4010                	mov rax, qword [rax + 8 * 2]
 13542 000097A1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>=?
 13543 000097A4 50                      	push rax
 13544 000097A5 6A01                    	push 1	; arg count
 13545 000097A7 488B4520                	mov rax, PARAM(0)	; param make-run
 13546 000097AB 803804                  	cmp byte [rax], T_closure
 13547 000097AE 0F8568950000            	jne L_error_non_closure
 13548 000097B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13549 000097B7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13550 000097BA 48890425[4D0E0000]      	mov qword [free_var_8], rax
 13551 000097C2 48B8-                   	mov rax, sob_void
 13551 000097C4 [0000000000000000] 
 13552                                  
 13553                                  	; preparing a non-tail-call
 13554 000097CC 488B4510                	mov rax, ENV
 13555 000097D0 488B4018                	mov rax, qword [rax + 8 * 3]
 13556 000097D4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin=?
 13557 000097D7 50                      	push rax
 13558 000097D8 6A01                    	push 1	; arg count
 13559 000097DA 488B4520                	mov rax, PARAM(0)	; param make-run
 13560 000097DE 803804                  	cmp byte [rax], T_closure
 13561 000097E1 0F8535950000            	jne L_error_non_closure
 13562 000097E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13563 000097EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 13564 000097ED 48890425[2B0E0000]      	mov qword [free_var_6], rax
 13565 000097F5 48B8-                   	mov rax, sob_void
 13565 000097F7 [0000000000000000] 
 13566 000097FF C9                      	leave
 13567 00009800 C21800                  	ret AND_KILL_FRAME(1)
 13568                                  .L_lambda_simple_end_0120:	; new closure is in rax
 13569 00009803 803804                  	cmp byte [rax], T_closure
 13570 00009806 0F8510950000            	jne L_error_non_closure
 13571 0000980C FF7001                  	push SOB_CLOSURE_ENV(rax)
 13572 0000980F FF5009                  	call SOB_CLOSURE_CODE(rax)
 13573 00009812 C9                      	leave
 13574 00009813 C21800                  	ret AND_KILL_FRAME(1)
 13575                                  .L_lambda_simple_end_011c:	; new closure is in rax
 13576 00009816 803804                  	cmp byte [rax], T_closure
 13577 00009819 0F85FD940000            	jne L_error_non_closure
 13578 0000981F FF7001                  	push SOB_CLOSURE_ENV(rax)
 13579 00009822 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13580 00009825 C9                      	leave
 13581 00009826 C21800                  	ret AND_KILL_FRAME(1)
 13582                                  .L_lambda_simple_end_011a:	; new closure is in rax
 13583 00009829 803804                  	cmp byte [rax], T_closure
 13584 0000982C 0F85EA940000            	jne L_error_non_closure
 13585 00009832 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13586 00009835 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13587 00009838 C9                      	leave
 13588 00009839 C21800                  	ret AND_KILL_FRAME(1)
 13589                                  .L_lambda_simple_end_0118:	; new closure is in rax
 13590 0000983C 803804                  	cmp byte [rax], T_closure
 13591 0000983F 0F85D7940000            	jne L_error_non_closure
 13592 00009845 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13593 00009848 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13594 0000984B C9                      	leave
 13595 0000984C C21800                  	ret AND_KILL_FRAME(1)
 13596                                  .L_lambda_simple_end_0116:	; new closure is in rax
 13597 0000984F 803804                  	cmp byte [rax], T_closure
 13598 00009852 0F85C4940000            	jne L_error_non_closure
 13599 00009858 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13600 0000985B FF5009                  	call SOB_CLOSURE_CODE(rax)
 13601 0000985E C9                      	leave
 13602 0000985F C21800                  	ret AND_KILL_FRAME(1)
 13603                                  .L_lambda_simple_end_0115:	; new closure is in rax
 13604 00009862 803804                  	cmp byte [rax], T_closure
 13605 00009865 0F85B1940000            	jne L_error_non_closure
 13606 0000986B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13607 0000986E FF5009                  	call SOB_CLOSURE_CODE(rax)
 13608 00009871 C9                      	leave
 13609 00009872 C21800                  	ret AND_KILL_FRAME(1)
 13610                                  .L_lambda_simple_end_0114:	; new closure is in rax
 13611 00009875 803804                  	cmp byte [rax], T_closure
 13612 00009878 0F859E940000            	jne L_error_non_closure
 13613 0000987E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13614 00009881 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13615 00009884 C9                      	leave
 13616 00009885 C21800                  	ret AND_KILL_FRAME(1)
 13617                                  .L_lambda_simple_end_0111:	; new closure is in rax
 13618 00009888 803804                  	cmp byte [rax], T_closure
 13619 0000988B 0F858B940000            	jne L_error_non_closure
 13620 00009891 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13621 00009894 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13622                                  
 13623 00009897 4889C7                  	mov rdi, rax
 13624 0000989A E87B970000              	call print_sexpr_if_not_void
 13625 0000989F 48B8-                   	mov rax, L_constants + 0
 13625 000098A1 [0000000000000000] 
 13626 000098A9 48890425[AF120000]      	mov qword [free_var_74], rax
 13627 000098B1 48B8-                   	mov rax, sob_void
 13627 000098B3 [0000000000000000] 
 13628                                  
 13629 000098BB 4889C7                  	mov rdi, rax
 13630 000098BE E857970000              	call print_sexpr_if_not_void
 13631 000098C3 48B8-                   	mov rax, L_constants + 0
 13631 000098C5 [0000000000000000] 
 13632 000098CD 48890425[9E120000]      	mov qword [free_var_73], rax
 13633 000098D5 48B8-                   	mov rax, sob_void
 13633 000098D7 [0000000000000000] 
 13634                                  
 13635 000098DF 4889C7                  	mov rdi, rax
 13636 000098E2 E833970000              	call print_sexpr_if_not_void
 13637 000098E7 48B8-                   	mov rax, L_constants + 0
 13637 000098E9 [0000000000000000] 
 13638 000098F1 48890425[C0120000]      	mov qword [free_var_75], rax
 13639 000098F9 48B8-                   	mov rax, sob_void
 13639 000098FB [0000000000000000] 
 13640                                  
 13641 00009903 4889C7                  	mov rdi, rax
 13642 00009906 E80F970000              	call print_sexpr_if_not_void
 13643 0000990B 48B8-                   	mov rax, L_constants + 0
 13643 0000990D [0000000000000000] 
 13644 00009915 48890425[E2120000]      	mov qword [free_var_77], rax
 13645 0000991D 48B8-                   	mov rax, sob_void
 13645 0000991F [0000000000000000] 
 13646                                  
 13647 00009927 4889C7                  	mov rdi, rax
 13648 0000992A E8EB960000              	call print_sexpr_if_not_void
 13649 0000992F 48B8-                   	mov rax, L_constants + 0
 13649 00009931 [0000000000000000] 
 13650 00009939 48890425[D1120000]      	mov qword [free_var_76], rax
 13651 00009941 48B8-                   	mov rax, sob_void
 13651 00009943 [0000000000000000] 
 13652                                  
 13653 0000994B 4889C7                  	mov rdi, rax
 13654 0000994E E8C7960000              	call print_sexpr_if_not_void
 13655                                  	; preparing a non-tail-call
 13656 00009953 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13657 00009958 E868940000              	call malloc
 13658 0000995D 50                      	push rax
 13659 0000995E BF00000000              	mov rdi, 8 * 0	; new rib
 13660 00009963 E85D940000              	call malloc
 13661 00009968 50                      	push rax
 13662 00009969 BF08000000              	mov rdi, 8 * 1	; extended env
 13663 0000996E E852940000              	call malloc
 13664 00009973 488B7D10                	mov rdi, ENV
 13665 00009977 BE00000000              	mov rsi, 0
 13666 0000997C BA01000000              	mov rdx, 1
 13667                                  .L_lambda_simple_env_loop_0121:	; ext_env[i + 1] <-- env[i]
 13668 00009981 4883FE00                	cmp rsi, 0
 13669 00009985 7410                    	je .L_lambda_simple_env_end_0121
 13670 00009987 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13671 0000998B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13672 0000998F 48FFC6                  	inc rsi
 13673 00009992 48FFC2                  	inc rdx
 13674 00009995 EBEA                    	jmp .L_lambda_simple_env_loop_0121
 13675                                  .L_lambda_simple_env_end_0121:
 13676 00009997 5B                      	pop rbx
 13677 00009998 BE00000000              	mov rsi, 0
 13678                                  .L_lambda_simple_params_loop_0121:	; copy params
 13679 0000999D 4883FE00                	cmp rsi, 0
 13680 000099A1 740E                    	je .L_lambda_simple_params_end_0121
 13681 000099A3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13682 000099A8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13683 000099AC 48FFC6                  	inc rsi
 13684 000099AF EBEC                    	jmp .L_lambda_simple_params_loop_0121
 13685                                  .L_lambda_simple_params_end_0121:
 13686 000099B1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13687 000099B4 4889C3                  	mov rbx, rax
 13688 000099B7 58                      	pop rax
 13689 000099B8 C60004                  	mov byte [rax], T_closure
 13690 000099BB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13691 000099BF 48C74009[CC990000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0121
 13692 000099C7 E958020000              	jmp .L_lambda_simple_end_0121
 13693                                  .L_lambda_simple_code_0121:	; lambda-simple body
 13694 000099CC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13695 000099D2 740B                    	je .L_lambda_simple_arity_check_ok_0121
 13696 000099D4 FF742410                	push qword [rsp + 8 * 2]
 13697 000099D8 6A01                    	push 1
 13698 000099DA E99F930000              	jmp L_error_incorrect_arity_simple
 13699                                  .L_lambda_simple_arity_check_ok_0121:
 13700 000099DF C8000000                	enter 0, 0
 13701 000099E3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13702 000099E8 E8D8930000              	call malloc
 13703 000099ED 50                      	push rax
 13704 000099EE BF08000000              	mov rdi, 8 * 1	; new rib
 13705 000099F3 E8CD930000              	call malloc
 13706 000099F8 50                      	push rax
 13707 000099F9 BF10000000              	mov rdi, 8 * 2	; extended env
 13708 000099FE E8C2930000              	call malloc
 13709 00009A03 488B7D10                	mov rdi, ENV
 13710 00009A07 BE00000000              	mov rsi, 0
 13711 00009A0C BA01000000              	mov rdx, 1
 13712                                  .L_lambda_opt_env_loop_0027:	; ext_env[i + 1] <-- env[i]
 13713 00009A11 4883FE01                	cmp rsi, 1
 13714 00009A15 7410                    	je .L_lambda_opt_env_end_0027
 13715 00009A17 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13716 00009A1B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13717 00009A1F 48FFC6                  	inc rsi
 13718 00009A22 48FFC2                  	inc rdx
 13719 00009A25 EBEA                    	jmp .L_lambda_opt_env_loop_0027
 13720                                  .L_lambda_opt_env_end_0027:
 13721 00009A27 5B                      	pop rbx
 13722 00009A28 BE00000000              	mov rsi, 0
 13723                                  .L_lambda_opt_params_loop_0027:	; copy params
 13724 00009A2D 4883FE01                	cmp rsi, 1
 13725 00009A31 740E                    	je .L_lambda_opt_params_end_0027
 13726 00009A33 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13727 00009A38 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13728 00009A3C 48FFC6                  	inc rsi
 13729 00009A3F EBEC                    	jmp .L_lambda_opt_params_loop_0027
 13730                                  .L_lambda_opt_params_end_0027:
 13731 00009A41 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13732 00009A44 4889C3                  	mov rbx, rax
 13733 00009A47 58                      	pop rax
 13734 00009A48 C60004                  	mov byte [rax], T_closure
 13735 00009A4B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13736 00009A4F 48C74009[5C9A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0027
 13737 00009A57 E9C4010000              	jmp .L_lambda_opt_end_0027
 13738                                  .L_lambda_opt_code_0027:	; lambda-opt body
 13739 00009A5C 48837C241000            	cmp qword [rsp + 8 * 2], 0
 13740 00009A62 7411                    	je .L_lambda_opt_arity_check_exact_0027
 13741 00009A64 0F8FAF000000            	jg .L_lambda_opt_arity_check_more_0027
 13742 00009A6A FF742410                	push qword [rsp + 8 * 2]
 13743 00009A6E 6A00                    	push 0
 13744 00009A70 E91D930000              	jmp L_error_incorrect_arity_opt
 13745                                  .L_lambda_opt_arity_check_exact_0027:
 13746 00009A75 4883EC08                	sub rsp, 8
 13747 00009A79 488B442408              	mov rax, qword[rsp + 8 *1]
 13748 00009A7E 48890424                	mov qword[rsp], rax  
 13749 00009A82 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 13750 00009A87 4889442408              	mov qword[rsp + 8 * 1], rax
 13751 00009A8C B801000000              	mov rax, 1
 13752 00009A91 4889442410              	mov qword[rsp + 8 *2], rax
 13753 00009A96 48B8-                   	mov rax, sob_nil
 13753 00009A98 [0100000000000000] 
 13754 00009AA0 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 13755 00009AA5 C8000000                	enter 0, 0
 13756                                  	; preparing a non-tail-call
 13757                                  	; preparing a non-tail-call
 13758 00009AA9 488B4520                	mov rax, PARAM(0)	; param s
 13759 00009AAD 50                      	push rax
 13760 00009AAE 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 13761 00009AB6 803805                  	cmp byte [rax], T_undefined
 13762 00009AB9 0F84D9910000            	je L_error_fvar_undefined
 13763 00009ABF 50                      	push rax
 13764 00009AC0 6A02                    	push 2	; arg count
 13765 00009AC2 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 13766 00009ACA 803805                  	cmp byte [rax], T_undefined
 13767 00009ACD 0F84C5910000            	je L_error_fvar_undefined
 13768 00009AD3 803804                  	cmp byte [rax], T_closure
 13769 00009AD6 0F8540920000            	jne L_error_non_closure
 13770 00009ADC FF7001                  	push SOB_CLOSURE_ENV(rax)
 13771 00009ADF FF5009                  	call SOB_CLOSURE_CODE(rax)
 13772 00009AE2 50                      	push rax
 13773 00009AE3 488B4510                	mov rax, ENV
 13774 00009AE7 488B00                  	mov rax, qword [rax + 8 * 0]
 13775 00009AEA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 13776 00009AED 50                      	push rax
 13777 00009AEE 6A02                    	push 2	; arg count
 13778 00009AF0 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 13779 00009AF8 803805                  	cmp byte [rax], T_undefined
 13780 00009AFB 0F8497910000            	je L_error_fvar_undefined
 13781 00009B01 803804                  	cmp byte [rax], T_closure
 13782 00009B04 0F8512920000            	jne L_error_non_closure
 13783 00009B0A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13784 00009B0D FF5009                  	call SOB_CLOSURE_CODE(rax)
 13785 00009B10 C9                      	leave
 13786 00009B11 C21800                  	ret AND_KILL_FRAME(1)
 13787 00009B14 E907010000              	jmp .L_lambda_opt_end_0027	; new closure is in rax
 13788                                  .L_lambda_opt_arity_check_more_0027:
 13789 00009B19 488B442410              	mov rax, qword[rsp + 2 * 8]
 13790 00009B1E 4889C7                  	mov rdi, rax
 13791 00009B21 49B9-                   	mov r9, sob_nil
 13791 00009B23 [0100000000000000] 
 13792 00009B2B 4C8B442410              	mov r8, qword[rsp+2*8]
 13793                                  .L_lambda_opt_stack_shrink_loop_0027:
 13794 00009B30 4983F800                	cmp r8, 0
 13795 00009B34 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0027
 13796 00009B36 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 13797 00009B3B BF11000000              	mov rdi, 1+8+8	;for pair
 13798 00009B40 E880920000              	call malloc	 ;to create the pair in the stack
 13799 00009B45 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 13800 00009B48 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 13801 00009B4C 4C894809                 	mov qword[rax+1+8],r9
 13802 00009B50 4989C1                  	mov r9 , rax	 ; for the recursion 
 13803 00009B53 49FFC8                  	dec r8
 13804 00009B56 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0027
 13805                                  .L_lambda_opt_stack_shrink_loop_exit_0027:
 13806 00009B58 488B442410              	mov rax, qword[rsp + 2 * 8]
 13807 00009B5D BF01000000              	mov rdi, 1
 13808 00009B62 4829F8                  	sub rax, rdi
 13809 00009B65 4889C7                  	mov rdi, rax
 13810 00009B68 486BC008                	imul rax,8
 13811 00009B6C 4801C4                  	add rsp, rax
 13812 00009B6F 4889E0                  	mov rax, rsp
 13813 00009B72 4989F8                  	mov r8, rdi
 13814 00009B75 4D6BC008                	imul r8, 8
 13815 00009B79 4C29C0                  	sub rax, r8
 13816 00009B7C 4989C2                  	mov r10, rax	; holds the original ret in the stack
 13817 00009B7F 4983C218                	add r10, 8*3
 13818 00009B83 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 13819 00009B87 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 13820 00009B8A 4D6BC008                	imul r8,8
 13821 00009B8E 4C01C0                  	add rax, r8
 13822 00009B91 4C8908                  	mov qword[rax] ,r9
 13823 00009B94 4983EA18                 	sub r10, 8*3
 13824 00009B98 48C744241001000000      	mov qword [rsp+2*8], 1
 13825 00009BA1 498B4208                	mov rax, qword[r10 + 1 * 8]
 13826 00009BA5 4889442408              	mov qword[rsp + 1*8] ,rax
 13827 00009BAA 498B02                  	mov rax, qword[r10]
 13828 00009BAD 48890424                	mov qword[rsp], rax
 13829 00009BB1 C8000000                	enter 0, 0
 13830                                  	; preparing a non-tail-call
 13831                                  	; preparing a non-tail-call
 13832 00009BB5 488B4520                	mov rax, PARAM(0)	; param s
 13833 00009BB9 50                      	push rax
 13834 00009BBA 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 13835 00009BC2 803805                  	cmp byte [rax], T_undefined
 13836 00009BC5 0F84CD900000            	je L_error_fvar_undefined
 13837 00009BCB 50                      	push rax
 13838 00009BCC 6A02                    	push 2	; arg count
 13839 00009BCE 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 13840 00009BD6 803805                  	cmp byte [rax], T_undefined
 13841 00009BD9 0F84B9900000            	je L_error_fvar_undefined
 13842 00009BDF 803804                  	cmp byte [rax], T_closure
 13843 00009BE2 0F8534910000            	jne L_error_non_closure
 13844 00009BE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13845 00009BEB FF5009                  	call SOB_CLOSURE_CODE(rax)
 13846 00009BEE 50                      	push rax
 13847 00009BEF 488B4510                	mov rax, ENV
 13848 00009BF3 488B00                  	mov rax, qword [rax + 8 * 0]
 13849 00009BF6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 13850 00009BF9 50                      	push rax
 13851 00009BFA 6A02                    	push 2	; arg count
 13852 00009BFC 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 13853 00009C04 803805                  	cmp byte [rax], T_undefined
 13854 00009C07 0F848B900000            	je L_error_fvar_undefined
 13855 00009C0D 803804                  	cmp byte [rax], T_closure
 13856 00009C10 0F8506910000            	jne L_error_non_closure
 13857 00009C16 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13858 00009C19 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13859 00009C1C C9                      	leave
 13860 00009C1D C21800                  	ret AND_KILL_FRAME(1)
 13861                                  .L_lambda_opt_end_0027:	; new closure is in rax
 13862 00009C20 C9                      	leave
 13863 00009C21 C21800                  	ret AND_KILL_FRAME(1)
 13864                                  .L_lambda_simple_end_0121:	; new closure is in rax
 13865 00009C24 50                      	push rax
 13866 00009C25 6A01                    	push 1	; arg count
 13867 00009C27 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13868 00009C2C E894910000              	call malloc
 13869 00009C31 50                      	push rax
 13870 00009C32 BF00000000              	mov rdi, 8 * 0	; new rib
 13871 00009C37 E889910000              	call malloc
 13872 00009C3C 50                      	push rax
 13873 00009C3D BF08000000              	mov rdi, 8 * 1	; extended env
 13874 00009C42 E87E910000              	call malloc
 13875 00009C47 488B7D10                	mov rdi, ENV
 13876 00009C4B BE00000000              	mov rsi, 0
 13877 00009C50 BA01000000              	mov rdx, 1
 13878                                  .L_lambda_simple_env_loop_0122:	; ext_env[i + 1] <-- env[i]
 13879 00009C55 4883FE00                	cmp rsi, 0
 13880 00009C59 7410                    	je .L_lambda_simple_env_end_0122
 13881 00009C5B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13882 00009C5F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13883 00009C63 48FFC6                  	inc rsi
 13884 00009C66 48FFC2                  	inc rdx
 13885 00009C69 EBEA                    	jmp .L_lambda_simple_env_loop_0122
 13886                                  .L_lambda_simple_env_end_0122:
 13887 00009C6B 5B                      	pop rbx
 13888 00009C6C BE00000000              	mov rsi, 0
 13889                                  .L_lambda_simple_params_loop_0122:	; copy params
 13890 00009C71 4883FE00                	cmp rsi, 0
 13891 00009C75 740E                    	je .L_lambda_simple_params_end_0122
 13892 00009C77 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13893 00009C7C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13894 00009C80 48FFC6                  	inc rsi
 13895 00009C83 EBEC                    	jmp .L_lambda_simple_params_loop_0122
 13896                                  .L_lambda_simple_params_end_0122:
 13897 00009C85 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13898 00009C88 4889C3                  	mov rbx, rax
 13899 00009C8B 58                      	pop rax
 13900 00009C8C C60004                  	mov byte [rax], T_closure
 13901 00009C8F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13902 00009C93 48C74009[A09C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0122
 13903 00009C9B E938010000              	jmp .L_lambda_simple_end_0122
 13904                                  .L_lambda_simple_code_0122:	; lambda-simple body
 13905 00009CA0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13906 00009CA6 740B                    	je .L_lambda_simple_arity_check_ok_0122
 13907 00009CA8 FF742410                	push qword [rsp + 8 * 2]
 13908 00009CAC 6A01                    	push 1
 13909 00009CAE E9CB900000              	jmp L_error_incorrect_arity_simple
 13910                                  .L_lambda_simple_arity_check_ok_0122:
 13911 00009CB3 C8000000                	enter 0, 0
 13912                                  	; preparing a non-tail-call
 13913 00009CB7 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 13914 00009CBF 803805                  	cmp byte [rax], T_undefined
 13915 00009CC2 0F84D08F0000            	je L_error_fvar_undefined
 13916 00009CC8 50                      	push rax
 13917 00009CC9 6A01                    	push 1	; arg count
 13918 00009CCB 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 13919 00009CCF 803804                  	cmp byte [rax], T_closure
 13920 00009CD2 0F8544900000            	jne L_error_non_closure
 13921 00009CD8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13922 00009CDB FF5009                  	call SOB_CLOSURE_CODE(rax)
 13923 00009CDE 48890425[AF120000]      	mov qword [free_var_74], rax
 13924 00009CE6 48B8-                   	mov rax, sob_void
 13924 00009CE8 [0000000000000000] 
 13925                                  
 13926                                  	; preparing a non-tail-call
 13927 00009CF0 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 13928 00009CF8 803805                  	cmp byte [rax], T_undefined
 13929 00009CFB 0F84978F0000            	je L_error_fvar_undefined
 13930 00009D01 50                      	push rax
 13931 00009D02 6A01                    	push 1	; arg count
 13932 00009D04 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 13933 00009D08 803804                  	cmp byte [rax], T_closure
 13934 00009D0B 0F850B900000            	jne L_error_non_closure
 13935 00009D11 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13936 00009D14 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13937 00009D17 48890425[9E120000]      	mov qword [free_var_73], rax
 13938 00009D1F 48B8-                   	mov rax, sob_void
 13938 00009D21 [0000000000000000] 
 13939                                  
 13940                                  	; preparing a non-tail-call
 13941 00009D29 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 13942 00009D31 803805                  	cmp byte [rax], T_undefined
 13943 00009D34 0F845E8F0000            	je L_error_fvar_undefined
 13944 00009D3A 50                      	push rax
 13945 00009D3B 6A01                    	push 1	; arg count
 13946 00009D3D 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 13947 00009D41 803804                  	cmp byte [rax], T_closure
 13948 00009D44 0F85D28F0000            	jne L_error_non_closure
 13949 00009D4A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13950 00009D4D FF5009                  	call SOB_CLOSURE_CODE(rax)
 13951 00009D50 48890425[C0120000]      	mov qword [free_var_75], rax
 13952 00009D58 48B8-                   	mov rax, sob_void
 13952 00009D5A [0000000000000000] 
 13953                                  
 13954                                  	; preparing a non-tail-call
 13955 00009D62 488B0425[3C0E0000]      	mov rax, qword [free_var_7]	; free var >
 13956 00009D6A 803805                  	cmp byte [rax], T_undefined
 13957 00009D6D 0F84258F0000            	je L_error_fvar_undefined
 13958 00009D73 50                      	push rax
 13959 00009D74 6A01                    	push 1	; arg count
 13960 00009D76 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 13961 00009D7A 803804                  	cmp byte [rax], T_closure
 13962 00009D7D 0F85998F0000            	jne L_error_non_closure
 13963 00009D83 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13964 00009D86 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13965 00009D89 48890425[E2120000]      	mov qword [free_var_77], rax
 13966 00009D91 48B8-                   	mov rax, sob_void
 13966 00009D93 [0000000000000000] 
 13967                                  
 13968                                  	; preparing a non-tail-call
 13969 00009D9B 488B0425[4D0E0000]      	mov rax, qword [free_var_8]	; free var >=
 13970 00009DA3 803805                  	cmp byte [rax], T_undefined
 13971 00009DA6 0F84EC8E0000            	je L_error_fvar_undefined
 13972 00009DAC 50                      	push rax
 13973 00009DAD 6A01                    	push 1	; arg count
 13974 00009DAF 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 13975 00009DB3 803804                  	cmp byte [rax], T_closure
 13976 00009DB6 0F85608F0000            	jne L_error_non_closure
 13977 00009DBC FF7001                  	push SOB_CLOSURE_ENV(rax)
 13978 00009DBF FF5009                  	call SOB_CLOSURE_CODE(rax)
 13979 00009DC2 48890425[D1120000]      	mov qword [free_var_76], rax
 13980 00009DCA 48B8-                   	mov rax, sob_void
 13980 00009DCC [0000000000000000] 
 13981 00009DD4 C9                      	leave
 13982 00009DD5 C21800                  	ret AND_KILL_FRAME(1)
 13983                                  .L_lambda_simple_end_0122:	; new closure is in rax
 13984 00009DD8 803804                  	cmp byte [rax], T_closure
 13985 00009DDB 0F853B8F0000            	jne L_error_non_closure
 13986 00009DE1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13987 00009DE4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13988                                  
 13989 00009DE7 4889C7                  	mov rdi, rax
 13990 00009DEA E82B920000              	call print_sexpr_if_not_void
 13991 00009DEF 48B8-                   	mov rax, L_constants + 0
 13991 00009DF1 [0000000000000000] 
 13992 00009DF9 48890425[7C120000]      	mov qword [free_var_71], rax
 13993 00009E01 48B8-                   	mov rax, sob_void
 13993 00009E03 [0000000000000000] 
 13994                                  
 13995 00009E0B 4889C7                  	mov rdi, rax
 13996 00009E0E E807920000              	call print_sexpr_if_not_void
 13997 00009E13 48B8-                   	mov rax, L_constants + 0
 13997 00009E15 [0000000000000000] 
 13998 00009E1D 48890425[8D120000]      	mov qword [free_var_72], rax
 13999 00009E25 48B8-                   	mov rax, sob_void
 13999 00009E27 [0000000000000000] 
 14000                                  
 14001 00009E2F 4889C7                  	mov rdi, rax
 14002 00009E32 E8E3910000              	call print_sexpr_if_not_void
 14003                                  	; preparing a non-tail-call
 14004                                  	; preparing a non-tail-call
 14005                                  	; preparing a non-tail-call
 14006 00009E37 48B8-                   	mov rax, L_constants + 2569
 14006 00009E39 [090A000000000000] 
 14007 00009E41 50                      	push rax
 14008 00009E42 6A01                    	push 1	; arg count
 14009 00009E44 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 14010 00009E4C 803805                  	cmp byte [rax], T_undefined
 14011 00009E4F 0F84438E0000            	je L_error_fvar_undefined
 14012 00009E55 803804                  	cmp byte [rax], T_closure
 14013 00009E58 0F85BE8E0000            	jne L_error_non_closure
 14014 00009E5E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14015 00009E61 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14016 00009E64 50                      	push rax
 14017                                  	; preparing a non-tail-call
 14018 00009E65 48B8-                   	mov rax, L_constants + 2573
 14018 00009E67 [0D0A000000000000] 
 14019 00009E6F 50                      	push rax
 14020 00009E70 6A01                    	push 1	; arg count
 14021 00009E72 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 14022 00009E7A 803805                  	cmp byte [rax], T_undefined
 14023 00009E7D 0F84158E0000            	je L_error_fvar_undefined
 14024 00009E83 803804                  	cmp byte [rax], T_closure
 14025 00009E86 0F85908E0000            	jne L_error_non_closure
 14026 00009E8C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14027 00009E8F FF5009                  	call SOB_CLOSURE_CODE(rax)
 14028 00009E92 50                      	push rax
 14029 00009E93 6A02                    	push 2	; arg count
 14030 00009E95 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 14031 00009E9D 803805                  	cmp byte [rax], T_undefined
 14032 00009EA0 0F84F28D0000            	je L_error_fvar_undefined
 14033 00009EA6 803804                  	cmp byte [rax], T_closure
 14034 00009EA9 0F856D8E0000            	jne L_error_non_closure
 14035 00009EAF FF7001                  	push SOB_CLOSURE_ENV(rax)
 14036 00009EB2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14037 00009EB5 50                      	push rax
 14038 00009EB6 6A01                    	push 1	; arg count
 14039 00009EB8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14040 00009EBD E8038F0000              	call malloc
 14041 00009EC2 50                      	push rax
 14042 00009EC3 BF00000000              	mov rdi, 8 * 0	; new rib
 14043 00009EC8 E8F88E0000              	call malloc
 14044 00009ECD 50                      	push rax
 14045 00009ECE BF08000000              	mov rdi, 8 * 1	; extended env
 14046 00009ED3 E8ED8E0000              	call malloc
 14047 00009ED8 488B7D10                	mov rdi, ENV
 14048 00009EDC BE00000000              	mov rsi, 0
 14049 00009EE1 BA01000000              	mov rdx, 1
 14050                                  .L_lambda_simple_env_loop_0123:	; ext_env[i + 1] <-- env[i]
 14051 00009EE6 4883FE00                	cmp rsi, 0
 14052 00009EEA 7410                    	je .L_lambda_simple_env_end_0123
 14053 00009EEC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14054 00009EF0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14055 00009EF4 48FFC6                  	inc rsi
 14056 00009EF7 48FFC2                  	inc rdx
 14057 00009EFA EBEA                    	jmp .L_lambda_simple_env_loop_0123
 14058                                  .L_lambda_simple_env_end_0123:
 14059 00009EFC 5B                      	pop rbx
 14060 00009EFD BE00000000              	mov rsi, 0
 14061                                  .L_lambda_simple_params_loop_0123:	; copy params
 14062 00009F02 4883FE00                	cmp rsi, 0
 14063 00009F06 740E                    	je .L_lambda_simple_params_end_0123
 14064 00009F08 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14065 00009F0D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14066 00009F11 48FFC6                  	inc rsi
 14067 00009F14 EBEC                    	jmp .L_lambda_simple_params_loop_0123
 14068                                  .L_lambda_simple_params_end_0123:
 14069 00009F16 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14070 00009F19 4889C3                  	mov rbx, rax
 14071 00009F1C 58                      	pop rax
 14072 00009F1D C60004                  	mov byte [rax], T_closure
 14073 00009F20 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14074 00009F24 48C74009[319F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0123
 14075 00009F2C E9ED020000              	jmp .L_lambda_simple_end_0123
 14076                                  .L_lambda_simple_code_0123:	; lambda-simple body
 14077 00009F31 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14078 00009F37 740B                    	je .L_lambda_simple_arity_check_ok_0123
 14079 00009F39 FF742410                	push qword [rsp + 8 * 2]
 14080 00009F3D 6A01                    	push 1
 14081 00009F3F E93A8E0000              	jmp L_error_incorrect_arity_simple
 14082                                  .L_lambda_simple_arity_check_ok_0123:
 14083 00009F44 C8000000                	enter 0, 0
 14084 00009F48 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14085 00009F4D E8738E0000              	call malloc
 14086 00009F52 50                      	push rax
 14087 00009F53 BF08000000              	mov rdi, 8 * 1	; new rib
 14088 00009F58 E8688E0000              	call malloc
 14089 00009F5D 50                      	push rax
 14090 00009F5E BF10000000              	mov rdi, 8 * 2	; extended env
 14091 00009F63 E85D8E0000              	call malloc
 14092 00009F68 488B7D10                	mov rdi, ENV
 14093 00009F6C BE00000000              	mov rsi, 0
 14094 00009F71 BA01000000              	mov rdx, 1
 14095                                  .L_lambda_simple_env_loop_0124:	; ext_env[i + 1] <-- env[i]
 14096 00009F76 4883FE01                	cmp rsi, 1
 14097 00009F7A 7410                    	je .L_lambda_simple_env_end_0124
 14098 00009F7C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14099 00009F80 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14100 00009F84 48FFC6                  	inc rsi
 14101 00009F87 48FFC2                  	inc rdx
 14102 00009F8A EBEA                    	jmp .L_lambda_simple_env_loop_0124
 14103                                  .L_lambda_simple_env_end_0124:
 14104 00009F8C 5B                      	pop rbx
 14105 00009F8D BE00000000              	mov rsi, 0
 14106                                  .L_lambda_simple_params_loop_0124:	; copy params
 14107 00009F92 4883FE01                	cmp rsi, 1
 14108 00009F96 740E                    	je .L_lambda_simple_params_end_0124
 14109 00009F98 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14110 00009F9D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14111 00009FA1 48FFC6                  	inc rsi
 14112 00009FA4 EBEC                    	jmp .L_lambda_simple_params_loop_0124
 14113                                  .L_lambda_simple_params_end_0124:
 14114 00009FA6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14115 00009FA9 4889C3                  	mov rbx, rax
 14116 00009FAC 58                      	pop rax
 14117 00009FAD C60004                  	mov byte [rax], T_closure
 14118 00009FB0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14119 00009FB4 48C74009[C19F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0124
 14120 00009FBC E9DE000000              	jmp .L_lambda_simple_end_0124
 14121                                  .L_lambda_simple_code_0124:	; lambda-simple body
 14122 00009FC1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14123 00009FC7 740B                    	je .L_lambda_simple_arity_check_ok_0124
 14124 00009FC9 FF742410                	push qword [rsp + 8 * 2]
 14125 00009FCD 6A01                    	push 1
 14126 00009FCF E9AA8D0000              	jmp L_error_incorrect_arity_simple
 14127                                  .L_lambda_simple_arity_check_ok_0124:
 14128 00009FD4 C8000000                	enter 0, 0
 14129                                  	; preparing a non-tail-call
 14130 00009FD8 48B8-                   	mov rax, L_constants + 2571
 14130 00009FDA [0B0A000000000000] 
 14131 00009FE2 50                      	push rax
 14132 00009FE3 488B4520                	mov rax, PARAM(0)	; param ch
 14133 00009FE7 50                      	push rax
 14134 00009FE8 48B8-                   	mov rax, L_constants + 2569
 14134 00009FEA [090A000000000000] 
 14135 00009FF2 50                      	push rax
 14136 00009FF3 6A03                    	push 3	; arg count
 14137 00009FF5 488B0425[9E120000]      	mov rax, qword [free_var_73]	; free var char<=?
 14138 00009FFD 803805                  	cmp byte [rax], T_undefined
 14139 0000A000 0F84928C0000            	je L_error_fvar_undefined
 14140 0000A006 803804                  	cmp byte [rax], T_closure
 14141 0000A009 0F850D8D0000            	jne L_error_non_closure
 14142 0000A00F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14143 0000A012 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14144 0000A015 483D[02000000]          	cmp rax, sob_boolean_false
 14145 0000A01B 747A                    	je .L_if_else_00ef
 14146                                  	; preparing a non-tail-call
 14147                                  	; preparing a non-tail-call
 14148 0000A01D 488B4510                	mov rax, ENV
 14149 0000A021 488B00                  	mov rax, qword [rax + 8 * 0]
 14150 0000A024 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 14151 0000A027 50                      	push rax
 14152                                  	; preparing a non-tail-call
 14153 0000A028 488B4520                	mov rax, PARAM(0)	; param ch
 14154 0000A02C 50                      	push rax
 14155 0000A02D 6A01                    	push 1	; arg count
 14156 0000A02F 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 14157 0000A037 803805                  	cmp byte [rax], T_undefined
 14158 0000A03A 0F84588C0000            	je L_error_fvar_undefined
 14159 0000A040 803804                  	cmp byte [rax], T_closure
 14160 0000A043 0F85D38C0000            	jne L_error_non_closure
 14161 0000A049 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14162 0000A04C FF5009                  	call SOB_CLOSURE_CODE(rax)
 14163 0000A04F 50                      	push rax
 14164 0000A050 6A02                    	push 2	; arg count
 14165 0000A052 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 14166 0000A05A 803805                  	cmp byte [rax], T_undefined
 14167 0000A05D 0F84358C0000            	je L_error_fvar_undefined
 14168 0000A063 803804                  	cmp byte [rax], T_closure
 14169 0000A066 0F85B08C0000            	jne L_error_non_closure
 14170 0000A06C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14171 0000A06F FF5009                  	call SOB_CLOSURE_CODE(rax)
 14172 0000A072 50                      	push rax
 14173 0000A073 6A01                    	push 1	; arg count
 14174 0000A075 488B0425[AE130000]      	mov rax, qword [free_var_89]	; free var integer->char
 14175 0000A07D 803805                  	cmp byte [rax], T_undefined
 14176 0000A080 0F84128C0000            	je L_error_fvar_undefined
 14177 0000A086 803804                  	cmp byte [rax], T_closure
 14178 0000A089 0F858D8C0000            	jne L_error_non_closure
 14179 0000A08F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14180 0000A092 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14181 0000A095 EB04                    	jmp .L_if_end_00ef
 14182                                  .L_if_else_00ef:
 14183 0000A097 488B4520                	mov rax, PARAM(0)	; param ch
 14184                                  .L_if_end_00ef:
 14185 0000A09B C9                      	leave
 14186 0000A09C C21800                  	ret AND_KILL_FRAME(1)
 14187                                  .L_lambda_simple_end_0124:	; new closure is in rax
 14188 0000A09F 48890425[7C120000]      	mov qword [free_var_71], rax
 14189 0000A0A7 48B8-                   	mov rax, sob_void
 14189 0000A0A9 [0000000000000000] 
 14190                                  
 14191 0000A0B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14192 0000A0B6 E80A8D0000              	call malloc
 14193 0000A0BB 50                      	push rax
 14194 0000A0BC BF08000000              	mov rdi, 8 * 1	; new rib
 14195 0000A0C1 E8FF8C0000              	call malloc
 14196 0000A0C6 50                      	push rax
 14197 0000A0C7 BF10000000              	mov rdi, 8 * 2	; extended env
 14198 0000A0CC E8F48C0000              	call malloc
 14199 0000A0D1 488B7D10                	mov rdi, ENV
 14200 0000A0D5 BE00000000              	mov rsi, 0
 14201 0000A0DA BA01000000              	mov rdx, 1
 14202                                  .L_lambda_simple_env_loop_0125:	; ext_env[i + 1] <-- env[i]
 14203 0000A0DF 4883FE01                	cmp rsi, 1
 14204 0000A0E3 7410                    	je .L_lambda_simple_env_end_0125
 14205 0000A0E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14206 0000A0E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14207 0000A0ED 48FFC6                  	inc rsi
 14208 0000A0F0 48FFC2                  	inc rdx
 14209 0000A0F3 EBEA                    	jmp .L_lambda_simple_env_loop_0125
 14210                                  .L_lambda_simple_env_end_0125:
 14211 0000A0F5 5B                      	pop rbx
 14212 0000A0F6 BE00000000              	mov rsi, 0
 14213                                  .L_lambda_simple_params_loop_0125:	; copy params
 14214 0000A0FB 4883FE01                	cmp rsi, 1
 14215 0000A0FF 740E                    	je .L_lambda_simple_params_end_0125
 14216 0000A101 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14217 0000A106 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14218 0000A10A 48FFC6                  	inc rsi
 14219 0000A10D EBEC                    	jmp .L_lambda_simple_params_loop_0125
 14220                                  .L_lambda_simple_params_end_0125:
 14221 0000A10F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14222 0000A112 4889C3                  	mov rbx, rax
 14223 0000A115 58                      	pop rax
 14224 0000A116 C60004                  	mov byte [rax], T_closure
 14225 0000A119 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14226 0000A11D 48C74009[2AA10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0125
 14227 0000A125 E9DE000000              	jmp .L_lambda_simple_end_0125
 14228                                  .L_lambda_simple_code_0125:	; lambda-simple body
 14229 0000A12A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14230 0000A130 740B                    	je .L_lambda_simple_arity_check_ok_0125
 14231 0000A132 FF742410                	push qword [rsp + 8 * 2]
 14232 0000A136 6A01                    	push 1
 14233 0000A138 E9418C0000              	jmp L_error_incorrect_arity_simple
 14234                                  .L_lambda_simple_arity_check_ok_0125:
 14235 0000A13D C8000000                	enter 0, 0
 14236                                  	; preparing a non-tail-call
 14237 0000A141 48B8-                   	mov rax, L_constants + 2575
 14237 0000A143 [0F0A000000000000] 
 14238 0000A14B 50                      	push rax
 14239 0000A14C 488B4520                	mov rax, PARAM(0)	; param ch
 14240 0000A150 50                      	push rax
 14241 0000A151 48B8-                   	mov rax, L_constants + 2573
 14241 0000A153 [0D0A000000000000] 
 14242 0000A15B 50                      	push rax
 14243 0000A15C 6A03                    	push 3	; arg count
 14244 0000A15E 488B0425[9E120000]      	mov rax, qword [free_var_73]	; free var char<=?
 14245 0000A166 803805                  	cmp byte [rax], T_undefined
 14246 0000A169 0F84298B0000            	je L_error_fvar_undefined
 14247 0000A16F 803804                  	cmp byte [rax], T_closure
 14248 0000A172 0F85A48B0000            	jne L_error_non_closure
 14249 0000A178 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14250 0000A17B FF5009                  	call SOB_CLOSURE_CODE(rax)
 14251 0000A17E 483D[02000000]          	cmp rax, sob_boolean_false
 14252 0000A184 747A                    	je .L_if_else_00f0
 14253                                  	; preparing a non-tail-call
 14254                                  	; preparing a non-tail-call
 14255 0000A186 488B4510                	mov rax, ENV
 14256 0000A18A 488B00                  	mov rax, qword [rax + 8 * 0]
 14257 0000A18D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 14258 0000A190 50                      	push rax
 14259                                  	; preparing a non-tail-call
 14260 0000A191 488B4520                	mov rax, PARAM(0)	; param ch
 14261 0000A195 50                      	push rax
 14262 0000A196 6A01                    	push 1	; arg count
 14263 0000A198 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 14264 0000A1A0 803805                  	cmp byte [rax], T_undefined
 14265 0000A1A3 0F84EF8A0000            	je L_error_fvar_undefined
 14266 0000A1A9 803804                  	cmp byte [rax], T_closure
 14267 0000A1AC 0F856A8B0000            	jne L_error_non_closure
 14268 0000A1B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14269 0000A1B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14270 0000A1B8 50                      	push rax
 14271 0000A1B9 6A02                    	push 2	; arg count
 14272 0000A1BB 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 14273 0000A1C3 803805                  	cmp byte [rax], T_undefined
 14274 0000A1C6 0F84CC8A0000            	je L_error_fvar_undefined
 14275 0000A1CC 803804                  	cmp byte [rax], T_closure
 14276 0000A1CF 0F85478B0000            	jne L_error_non_closure
 14277 0000A1D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14278 0000A1D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14279 0000A1DB 50                      	push rax
 14280 0000A1DC 6A01                    	push 1	; arg count
 14281 0000A1DE 488B0425[AE130000]      	mov rax, qword [free_var_89]	; free var integer->char
 14282 0000A1E6 803805                  	cmp byte [rax], T_undefined
 14283 0000A1E9 0F84A98A0000            	je L_error_fvar_undefined
 14284 0000A1EF 803804                  	cmp byte [rax], T_closure
 14285 0000A1F2 0F85248B0000            	jne L_error_non_closure
 14286 0000A1F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14287 0000A1FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 14288 0000A1FE EB04                    	jmp .L_if_end_00f0
 14289                                  .L_if_else_00f0:
 14290 0000A200 488B4520                	mov rax, PARAM(0)	; param ch
 14291                                  .L_if_end_00f0:
 14292 0000A204 C9                      	leave
 14293 0000A205 C21800                  	ret AND_KILL_FRAME(1)
 14294                                  .L_lambda_simple_end_0125:	; new closure is in rax
 14295 0000A208 48890425[8D120000]      	mov qword [free_var_72], rax
 14296 0000A210 48B8-                   	mov rax, sob_void
 14296 0000A212 [0000000000000000] 
 14297 0000A21A C9                      	leave
 14298 0000A21B C21800                  	ret AND_KILL_FRAME(1)
 14299                                  .L_lambda_simple_end_0123:	; new closure is in rax
 14300 0000A21E 803804                  	cmp byte [rax], T_closure
 14301 0000A221 0F85F58A0000            	jne L_error_non_closure
 14302 0000A227 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14303 0000A22A FF5009                  	call SOB_CLOSURE_CODE(rax)
 14304                                  
 14305 0000A22D 4889C7                  	mov rdi, rax
 14306 0000A230 E8E58D0000              	call print_sexpr_if_not_void
 14307 0000A235 48B8-                   	mov rax, L_constants + 0
 14307 0000A237 [0000000000000000] 
 14308 0000A23F 48890425[38120000]      	mov qword [free_var_67], rax
 14309 0000A247 48B8-                   	mov rax, sob_void
 14309 0000A249 [0000000000000000] 
 14310                                  
 14311 0000A251 4889C7                  	mov rdi, rax
 14312 0000A254 E8C18D0000              	call print_sexpr_if_not_void
 14313 0000A259 48B8-                   	mov rax, L_constants + 0
 14313 0000A25B [0000000000000000] 
 14314 0000A263 48890425[27120000]      	mov qword [free_var_66], rax
 14315 0000A26B 48B8-                   	mov rax, sob_void
 14315 0000A26D [0000000000000000] 
 14316                                  
 14317 0000A275 4889C7                  	mov rdi, rax
 14318 0000A278 E89D8D0000              	call print_sexpr_if_not_void
 14319 0000A27D 48B8-                   	mov rax, L_constants + 0
 14319 0000A27F [0000000000000000] 
 14320 0000A287 48890425[49120000]      	mov qword [free_var_68], rax
 14321 0000A28F 48B8-                   	mov rax, sob_void
 14321 0000A291 [0000000000000000] 
 14322                                  
 14323 0000A299 4889C7                  	mov rdi, rax
 14324 0000A29C E8798D0000              	call print_sexpr_if_not_void
 14325 0000A2A1 48B8-                   	mov rax, L_constants + 0
 14325 0000A2A3 [0000000000000000] 
 14326 0000A2AB 48890425[6B120000]      	mov qword [free_var_70], rax
 14327 0000A2B3 48B8-                   	mov rax, sob_void
 14327 0000A2B5 [0000000000000000] 
 14328                                  
 14329 0000A2BD 4889C7                  	mov rdi, rax
 14330 0000A2C0 E8558D0000              	call print_sexpr_if_not_void
 14331 0000A2C5 48B8-                   	mov rax, L_constants + 0
 14331 0000A2C7 [0000000000000000] 
 14332 0000A2CF 48890425[5A120000]      	mov qword [free_var_69], rax
 14333 0000A2D7 48B8-                   	mov rax, sob_void
 14333 0000A2D9 [0000000000000000] 
 14334                                  
 14335 0000A2E1 4889C7                  	mov rdi, rax
 14336 0000A2E4 E8318D0000              	call print_sexpr_if_not_void
 14337                                  	; preparing a non-tail-call
 14338 0000A2E9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14339 0000A2EE E8D28A0000              	call malloc
 14340 0000A2F3 50                      	push rax
 14341 0000A2F4 BF00000000              	mov rdi, 8 * 0	; new rib
 14342 0000A2F9 E8C78A0000              	call malloc
 14343 0000A2FE 50                      	push rax
 14344 0000A2FF BF08000000              	mov rdi, 8 * 1	; extended env
 14345 0000A304 E8BC8A0000              	call malloc
 14346 0000A309 488B7D10                	mov rdi, ENV
 14347 0000A30D BE00000000              	mov rsi, 0
 14348 0000A312 BA01000000              	mov rdx, 1
 14349                                  .L_lambda_simple_env_loop_0126:	; ext_env[i + 1] <-- env[i]
 14350 0000A317 4883FE00                	cmp rsi, 0
 14351 0000A31B 7410                    	je .L_lambda_simple_env_end_0126
 14352 0000A31D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14353 0000A321 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14354 0000A325 48FFC6                  	inc rsi
 14355 0000A328 48FFC2                  	inc rdx
 14356 0000A32B EBEA                    	jmp .L_lambda_simple_env_loop_0126
 14357                                  .L_lambda_simple_env_end_0126:
 14358 0000A32D 5B                      	pop rbx
 14359 0000A32E BE00000000              	mov rsi, 0
 14360                                  .L_lambda_simple_params_loop_0126:	; copy params
 14361 0000A333 4883FE00                	cmp rsi, 0
 14362 0000A337 740E                    	je .L_lambda_simple_params_end_0126
 14363 0000A339 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14364 0000A33E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14365 0000A342 48FFC6                  	inc rsi
 14366 0000A345 EBEC                    	jmp .L_lambda_simple_params_loop_0126
 14367                                  .L_lambda_simple_params_end_0126:
 14368 0000A347 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14369 0000A34A 4889C3                  	mov rbx, rax
 14370 0000A34D 58                      	pop rax
 14371 0000A34E C60004                  	mov byte [rax], T_closure
 14372 0000A351 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14373 0000A355 48C74009[62A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0126
 14374 0000A35D E9EC030000              	jmp .L_lambda_simple_end_0126
 14375                                  .L_lambda_simple_code_0126:	; lambda-simple body
 14376 0000A362 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14377 0000A368 740B                    	je .L_lambda_simple_arity_check_ok_0126
 14378 0000A36A FF742410                	push qword [rsp + 8 * 2]
 14379 0000A36E 6A01                    	push 1
 14380 0000A370 E9098A0000              	jmp L_error_incorrect_arity_simple
 14381                                  .L_lambda_simple_arity_check_ok_0126:
 14382 0000A375 C8000000                	enter 0, 0
 14383 0000A379 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14384 0000A37E E8428A0000              	call malloc
 14385 0000A383 50                      	push rax
 14386 0000A384 BF08000000              	mov rdi, 8 * 1	; new rib
 14387 0000A389 E8378A0000              	call malloc
 14388 0000A38E 50                      	push rax
 14389 0000A38F BF10000000              	mov rdi, 8 * 2	; extended env
 14390 0000A394 E82C8A0000              	call malloc
 14391 0000A399 488B7D10                	mov rdi, ENV
 14392 0000A39D BE00000000              	mov rsi, 0
 14393 0000A3A2 BA01000000              	mov rdx, 1
 14394                                  .L_lambda_opt_env_loop_0028:	; ext_env[i + 1] <-- env[i]
 14395 0000A3A7 4883FE01                	cmp rsi, 1
 14396 0000A3AB 7410                    	je .L_lambda_opt_env_end_0028
 14397 0000A3AD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14398 0000A3B1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14399 0000A3B5 48FFC6                  	inc rsi
 14400 0000A3B8 48FFC2                  	inc rdx
 14401 0000A3BB EBEA                    	jmp .L_lambda_opt_env_loop_0028
 14402                                  .L_lambda_opt_env_end_0028:
 14403 0000A3BD 5B                      	pop rbx
 14404 0000A3BE BE00000000              	mov rsi, 0
 14405                                  .L_lambda_opt_params_loop_0028:	; copy params
 14406 0000A3C3 4883FE01                	cmp rsi, 1
 14407 0000A3C7 740E                    	je .L_lambda_opt_params_end_0028
 14408 0000A3C9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14409 0000A3CE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14410 0000A3D2 48FFC6                  	inc rsi
 14411 0000A3D5 EBEC                    	jmp .L_lambda_opt_params_loop_0028
 14412                                  .L_lambda_opt_params_end_0028:
 14413 0000A3D7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14414 0000A3DA 4889C3                  	mov rbx, rax
 14415 0000A3DD 58                      	pop rax
 14416 0000A3DE C60004                  	mov byte [rax], T_closure
 14417 0000A3E1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14418 0000A3E5 48C74009[F2A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0028
 14419 0000A3ED E958030000              	jmp .L_lambda_opt_end_0028
 14420                                  .L_lambda_opt_code_0028:	; lambda-opt body
 14421 0000A3F2 48837C241000            	cmp qword [rsp + 8 * 2], 0
 14422 0000A3F8 7411                    	je .L_lambda_opt_arity_check_exact_0028
 14423 0000A3FA 0F8F79010000            	jg .L_lambda_opt_arity_check_more_0028
 14424 0000A400 FF742410                	push qword [rsp + 8 * 2]
 14425 0000A404 6A00                    	push 0
 14426 0000A406 E987890000              	jmp L_error_incorrect_arity_opt
 14427                                  .L_lambda_opt_arity_check_exact_0028:
 14428 0000A40B 4883EC08                	sub rsp, 8
 14429 0000A40F 488B442408              	mov rax, qword[rsp + 8 *1]
 14430 0000A414 48890424                	mov qword[rsp], rax  
 14431 0000A418 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 14432 0000A41D 4889442408              	mov qword[rsp + 8 * 1], rax
 14433 0000A422 B801000000              	mov rax, 1
 14434 0000A427 4889442410              	mov qword[rsp + 8 *2], rax
 14435 0000A42C 48B8-                   	mov rax, sob_nil
 14435 0000A42E [0100000000000000] 
 14436 0000A436 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 14437 0000A43B C8000000                	enter 0, 0
 14438                                  	; preparing a non-tail-call
 14439                                  	; preparing a non-tail-call
 14440 0000A43F 488B4520                	mov rax, PARAM(0)	; param s
 14441 0000A443 50                      	push rax
 14442 0000A444 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14443 0000A449 E877890000              	call malloc
 14444 0000A44E 50                      	push rax
 14445 0000A44F BF08000000              	mov rdi, 8 * 1	; new rib
 14446 0000A454 E86C890000              	call malloc
 14447 0000A459 50                      	push rax
 14448 0000A45A BF18000000              	mov rdi, 8 * 3	; extended env
 14449 0000A45F E861890000              	call malloc
 14450 0000A464 488B7D10                	mov rdi, ENV
 14451 0000A468 BE00000000              	mov rsi, 0
 14452 0000A46D BA01000000              	mov rdx, 1
 14453                                  .L_lambda_simple_env_loop_0128:	; ext_env[i + 1] <-- env[i]
 14454 0000A472 4883FE02                	cmp rsi, 2
 14455 0000A476 7410                    	je .L_lambda_simple_env_end_0128
 14456 0000A478 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14457 0000A47C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14458 0000A480 48FFC6                  	inc rsi
 14459 0000A483 48FFC2                  	inc rdx
 14460 0000A486 EBEA                    	jmp .L_lambda_simple_env_loop_0128
 14461                                  .L_lambda_simple_env_end_0128:
 14462 0000A488 5B                      	pop rbx
 14463 0000A489 BE00000000              	mov rsi, 0
 14464                                  .L_lambda_simple_params_loop_0128:	; copy params
 14465 0000A48E 4883FE01                	cmp rsi, 1
 14466 0000A492 740E                    	je .L_lambda_simple_params_end_0128
 14467 0000A494 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14468 0000A499 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14469 0000A49D 48FFC6                  	inc rsi
 14470 0000A4A0 EBEC                    	jmp .L_lambda_simple_params_loop_0128
 14471                                  .L_lambda_simple_params_end_0128:
 14472 0000A4A2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14473 0000A4A5 4889C3                  	mov rbx, rax
 14474 0000A4A8 58                      	pop rax
 14475 0000A4A9 C60004                  	mov byte [rax], T_closure
 14476 0000A4AC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14477 0000A4B0 48C74009[BAA40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0128
 14478 0000A4B8 EB65                    	jmp .L_lambda_simple_end_0128
 14479                                  .L_lambda_simple_code_0128:	; lambda-simple body
 14480 0000A4BA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14481 0000A4C0 740B                    	je .L_lambda_simple_arity_check_ok_0128
 14482 0000A4C2 FF742410                	push qword [rsp + 8 * 2]
 14483 0000A4C6 6A01                    	push 1
 14484 0000A4C8 E9B1880000              	jmp L_error_incorrect_arity_simple
 14485                                  .L_lambda_simple_arity_check_ok_0128:
 14486 0000A4CD C8000000                	enter 0, 0
 14487                                  	; preparing a non-tail-call
 14488                                  	; preparing a non-tail-call
 14489 0000A4D1 488B4520                	mov rax, PARAM(0)	; param ch
 14490 0000A4D5 50                      	push rax
 14491 0000A4D6 6A01                    	push 1	; arg count
 14492 0000A4D8 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 14493 0000A4E0 803805                  	cmp byte [rax], T_undefined
 14494 0000A4E3 0F84AF870000            	je L_error_fvar_undefined
 14495 0000A4E9 803804                  	cmp byte [rax], T_closure
 14496 0000A4EC 0F852A880000            	jne L_error_non_closure
 14497 0000A4F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14498 0000A4F5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14499 0000A4F8 50                      	push rax
 14500 0000A4F9 6A01                    	push 1	; arg count
 14501 0000A4FB 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 14502 0000A503 803805                  	cmp byte [rax], T_undefined
 14503 0000A506 0F848C870000            	je L_error_fvar_undefined
 14504 0000A50C 803804                  	cmp byte [rax], T_closure
 14505 0000A50F 0F8507880000            	jne L_error_non_closure
 14506 0000A515 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14507 0000A518 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14508 0000A51B C9                      	leave
 14509 0000A51C C21800                  	ret AND_KILL_FRAME(1)
 14510                                  .L_lambda_simple_end_0128:	; new closure is in rax
 14511 0000A51F 50                      	push rax
 14512 0000A520 6A02                    	push 2	; arg count
 14513 0000A522 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 14514 0000A52A 803805                  	cmp byte [rax], T_undefined
 14515 0000A52D 0F8465870000            	je L_error_fvar_undefined
 14516 0000A533 803804                  	cmp byte [rax], T_closure
 14517 0000A536 0F85E0870000            	jne L_error_non_closure
 14518 0000A53C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14519 0000A53F FF5009                  	call SOB_CLOSURE_CODE(rax)
 14520 0000A542 50                      	push rax
 14521 0000A543 488B4510                	mov rax, ENV
 14522 0000A547 488B00                  	mov rax, qword [rax + 8 * 0]
 14523 0000A54A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 14524 0000A54D 50                      	push rax
 14525 0000A54E 6A02                    	push 2	; arg count
 14526 0000A550 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 14527 0000A558 803805                  	cmp byte [rax], T_undefined
 14528 0000A55B 0F8437870000            	je L_error_fvar_undefined
 14529 0000A561 803804                  	cmp byte [rax], T_closure
 14530 0000A564 0F85B2870000            	jne L_error_non_closure
 14531 0000A56A FF7001                  	push SOB_CLOSURE_ENV(rax)
 14532 0000A56D FF5009                  	call SOB_CLOSURE_CODE(rax)
 14533 0000A570 C9                      	leave
 14534 0000A571 C21800                  	ret AND_KILL_FRAME(1)
 14535 0000A574 E9D1010000              	jmp .L_lambda_opt_end_0028	; new closure is in rax
 14536                                  .L_lambda_opt_arity_check_more_0028:
 14537 0000A579 488B442410              	mov rax, qword[rsp + 2 * 8]
 14538 0000A57E 4889C7                  	mov rdi, rax
 14539 0000A581 49B9-                   	mov r9, sob_nil
 14539 0000A583 [0100000000000000] 
 14540 0000A58B 4C8B442410              	mov r8, qword[rsp+2*8]
 14541                                  .L_lambda_opt_stack_shrink_loop_0028:
 14542 0000A590 4983F800                	cmp r8, 0
 14543 0000A594 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0028
 14544 0000A596 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 14545 0000A59B BF11000000              	mov rdi, 1+8+8	;for pair
 14546 0000A5A0 E820880000              	call malloc	 ;to create the pair in the stack
 14547 0000A5A5 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 14548 0000A5A8 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 14549 0000A5AC 4C894809                 	mov qword[rax+1+8],r9
 14550 0000A5B0 4989C1                  	mov r9 , rax	 ; for the recursion 
 14551 0000A5B3 49FFC8                  	dec r8
 14552 0000A5B6 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0028
 14553                                  .L_lambda_opt_stack_shrink_loop_exit_0028:
 14554 0000A5B8 488B442410              	mov rax, qword[rsp + 2 * 8]
 14555 0000A5BD BF01000000              	mov rdi, 1
 14556 0000A5C2 4829F8                  	sub rax, rdi
 14557 0000A5C5 4889C7                  	mov rdi, rax
 14558 0000A5C8 486BC008                	imul rax,8
 14559 0000A5CC 4801C4                  	add rsp, rax
 14560 0000A5CF 4889E0                  	mov rax, rsp
 14561 0000A5D2 4989F8                  	mov r8, rdi
 14562 0000A5D5 4D6BC008                	imul r8, 8
 14563 0000A5D9 4C29C0                  	sub rax, r8
 14564 0000A5DC 4989C2                  	mov r10, rax	; holds the original ret in the stack
 14565 0000A5DF 4983C218                	add r10, 8*3
 14566 0000A5E3 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 14567 0000A5E7 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 14568 0000A5EA 4D6BC008                	imul r8,8
 14569 0000A5EE 4C01C0                  	add rax, r8
 14570 0000A5F1 4C8908                  	mov qword[rax] ,r9
 14571 0000A5F4 4983EA18                 	sub r10, 8*3
 14572 0000A5F8 48C744241001000000      	mov qword [rsp+2*8], 1
 14573 0000A601 498B4208                	mov rax, qword[r10 + 1 * 8]
 14574 0000A605 4889442408              	mov qword[rsp + 1*8] ,rax
 14575 0000A60A 498B02                  	mov rax, qword[r10]
 14576 0000A60D 48890424                	mov qword[rsp], rax
 14577 0000A611 C8000000                	enter 0, 0
 14578                                  	; preparing a non-tail-call
 14579                                  	; preparing a non-tail-call
 14580 0000A615 488B4520                	mov rax, PARAM(0)	; param s
 14581 0000A619 50                      	push rax
 14582 0000A61A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14583 0000A61F E8A1870000              	call malloc
 14584 0000A624 50                      	push rax
 14585 0000A625 BF08000000              	mov rdi, 8 * 1	; new rib
 14586 0000A62A E896870000              	call malloc
 14587 0000A62F 50                      	push rax
 14588 0000A630 BF18000000              	mov rdi, 8 * 3	; extended env
 14589 0000A635 E88B870000              	call malloc
 14590 0000A63A 488B7D10                	mov rdi, ENV
 14591 0000A63E BE00000000              	mov rsi, 0
 14592 0000A643 BA01000000              	mov rdx, 1
 14593                                  .L_lambda_simple_env_loop_0127:	; ext_env[i + 1] <-- env[i]
 14594 0000A648 4883FE02                	cmp rsi, 2
 14595 0000A64C 7410                    	je .L_lambda_simple_env_end_0127
 14596 0000A64E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14597 0000A652 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14598 0000A656 48FFC6                  	inc rsi
 14599 0000A659 48FFC2                  	inc rdx
 14600 0000A65C EBEA                    	jmp .L_lambda_simple_env_loop_0127
 14601                                  .L_lambda_simple_env_end_0127:
 14602 0000A65E 5B                      	pop rbx
 14603 0000A65F BE00000000              	mov rsi, 0
 14604                                  .L_lambda_simple_params_loop_0127:	; copy params
 14605 0000A664 4883FE01                	cmp rsi, 1
 14606 0000A668 740E                    	je .L_lambda_simple_params_end_0127
 14607 0000A66A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14608 0000A66F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14609 0000A673 48FFC6                  	inc rsi
 14610 0000A676 EBEC                    	jmp .L_lambda_simple_params_loop_0127
 14611                                  .L_lambda_simple_params_end_0127:
 14612 0000A678 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14613 0000A67B 4889C3                  	mov rbx, rax
 14614 0000A67E 58                      	pop rax
 14615 0000A67F C60004                  	mov byte [rax], T_closure
 14616 0000A682 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14617 0000A686 48C74009[90A60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0127
 14618 0000A68E EB65                    	jmp .L_lambda_simple_end_0127
 14619                                  .L_lambda_simple_code_0127:	; lambda-simple body
 14620 0000A690 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14621 0000A696 740B                    	je .L_lambda_simple_arity_check_ok_0127
 14622 0000A698 FF742410                	push qword [rsp + 8 * 2]
 14623 0000A69C 6A01                    	push 1
 14624 0000A69E E9DB860000              	jmp L_error_incorrect_arity_simple
 14625                                  .L_lambda_simple_arity_check_ok_0127:
 14626 0000A6A3 C8000000                	enter 0, 0
 14627                                  	; preparing a non-tail-call
 14628                                  	; preparing a non-tail-call
 14629 0000A6A7 488B4520                	mov rax, PARAM(0)	; param ch
 14630 0000A6AB 50                      	push rax
 14631 0000A6AC 6A01                    	push 1	; arg count
 14632 0000A6AE 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 14633 0000A6B6 803805                  	cmp byte [rax], T_undefined
 14634 0000A6B9 0F84D9850000            	je L_error_fvar_undefined
 14635 0000A6BF 803804                  	cmp byte [rax], T_closure
 14636 0000A6C2 0F8554860000            	jne L_error_non_closure
 14637 0000A6C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14638 0000A6CB FF5009                  	call SOB_CLOSURE_CODE(rax)
 14639 0000A6CE 50                      	push rax
 14640 0000A6CF 6A01                    	push 1	; arg count
 14641 0000A6D1 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 14642 0000A6D9 803805                  	cmp byte [rax], T_undefined
 14643 0000A6DC 0F84B6850000            	je L_error_fvar_undefined
 14644 0000A6E2 803804                  	cmp byte [rax], T_closure
 14645 0000A6E5 0F8531860000            	jne L_error_non_closure
 14646 0000A6EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 14647 0000A6EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 14648 0000A6F1 C9                      	leave
 14649 0000A6F2 C21800                  	ret AND_KILL_FRAME(1)
 14650                                  .L_lambda_simple_end_0127:	; new closure is in rax
 14651 0000A6F5 50                      	push rax
 14652 0000A6F6 6A02                    	push 2	; arg count
 14653 0000A6F8 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 14654 0000A700 803805                  	cmp byte [rax], T_undefined
 14655 0000A703 0F848F850000            	je L_error_fvar_undefined
 14656 0000A709 803804                  	cmp byte [rax], T_closure
 14657 0000A70C 0F850A860000            	jne L_error_non_closure
 14658 0000A712 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14659 0000A715 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14660 0000A718 50                      	push rax
 14661 0000A719 488B4510                	mov rax, ENV
 14662 0000A71D 488B00                  	mov rax, qword [rax + 8 * 0]
 14663 0000A720 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 14664 0000A723 50                      	push rax
 14665 0000A724 6A02                    	push 2	; arg count
 14666 0000A726 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 14667 0000A72E 803805                  	cmp byte [rax], T_undefined
 14668 0000A731 0F8461850000            	je L_error_fvar_undefined
 14669 0000A737 803804                  	cmp byte [rax], T_closure
 14670 0000A73A 0F85DC850000            	jne L_error_non_closure
 14671 0000A740 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14672 0000A743 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14673 0000A746 C9                      	leave
 14674 0000A747 C21800                  	ret AND_KILL_FRAME(1)
 14675                                  .L_lambda_opt_end_0028:	; new closure is in rax
 14676 0000A74A C9                      	leave
 14677 0000A74B C21800                  	ret AND_KILL_FRAME(1)
 14678                                  .L_lambda_simple_end_0126:	; new closure is in rax
 14679 0000A74E 50                      	push rax
 14680 0000A74F 6A01                    	push 1	; arg count
 14681 0000A751 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14682 0000A756 E86A860000              	call malloc
 14683 0000A75B 50                      	push rax
 14684 0000A75C BF00000000              	mov rdi, 8 * 0	; new rib
 14685 0000A761 E85F860000              	call malloc
 14686 0000A766 50                      	push rax
 14687 0000A767 BF08000000              	mov rdi, 8 * 1	; extended env
 14688 0000A76C E854860000              	call malloc
 14689 0000A771 488B7D10                	mov rdi, ENV
 14690 0000A775 BE00000000              	mov rsi, 0
 14691 0000A77A BA01000000              	mov rdx, 1
 14692                                  .L_lambda_simple_env_loop_0129:	; ext_env[i + 1] <-- env[i]
 14693 0000A77F 4883FE00                	cmp rsi, 0
 14694 0000A783 7410                    	je .L_lambda_simple_env_end_0129
 14695 0000A785 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14696 0000A789 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14697 0000A78D 48FFC6                  	inc rsi
 14698 0000A790 48FFC2                  	inc rdx
 14699 0000A793 EBEA                    	jmp .L_lambda_simple_env_loop_0129
 14700                                  .L_lambda_simple_env_end_0129:
 14701 0000A795 5B                      	pop rbx
 14702 0000A796 BE00000000              	mov rsi, 0
 14703                                  .L_lambda_simple_params_loop_0129:	; copy params
 14704 0000A79B 4883FE00                	cmp rsi, 0
 14705 0000A79F 740E                    	je .L_lambda_simple_params_end_0129
 14706 0000A7A1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14707 0000A7A6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14708 0000A7AA 48FFC6                  	inc rsi
 14709 0000A7AD EBEC                    	jmp .L_lambda_simple_params_loop_0129
 14710                                  .L_lambda_simple_params_end_0129:
 14711 0000A7AF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14712 0000A7B2 4889C3                  	mov rbx, rax
 14713 0000A7B5 58                      	pop rax
 14714 0000A7B6 C60004                  	mov byte [rax], T_closure
 14715 0000A7B9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14716 0000A7BD 48C74009[CAA70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0129
 14717 0000A7C5 E938010000              	jmp .L_lambda_simple_end_0129
 14718                                  .L_lambda_simple_code_0129:	; lambda-simple body
 14719 0000A7CA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14720 0000A7D0 740B                    	je .L_lambda_simple_arity_check_ok_0129
 14721 0000A7D2 FF742410                	push qword [rsp + 8 * 2]
 14722 0000A7D6 6A01                    	push 1
 14723 0000A7D8 E9A1850000              	jmp L_error_incorrect_arity_simple
 14724                                  .L_lambda_simple_arity_check_ok_0129:
 14725 0000A7DD C8000000                	enter 0, 0
 14726                                  	; preparing a non-tail-call
 14727 0000A7E1 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 14728 0000A7E9 803805                  	cmp byte [rax], T_undefined
 14729 0000A7EC 0F84A6840000            	je L_error_fvar_undefined
 14730 0000A7F2 50                      	push rax
 14731 0000A7F3 6A01                    	push 1	; arg count
 14732 0000A7F5 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 14733 0000A7F9 803804                  	cmp byte [rax], T_closure
 14734 0000A7FC 0F851A850000            	jne L_error_non_closure
 14735 0000A802 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14736 0000A805 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14737 0000A808 48890425[38120000]      	mov qword [free_var_67], rax
 14738 0000A810 48B8-                   	mov rax, sob_void
 14738 0000A812 [0000000000000000] 
 14739                                  
 14740                                  	; preparing a non-tail-call
 14741 0000A81A 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 14742 0000A822 803805                  	cmp byte [rax], T_undefined
 14743 0000A825 0F846D840000            	je L_error_fvar_undefined
 14744 0000A82B 50                      	push rax
 14745 0000A82C 6A01                    	push 1	; arg count
 14746 0000A82E 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 14747 0000A832 803804                  	cmp byte [rax], T_closure
 14748 0000A835 0F85E1840000            	jne L_error_non_closure
 14749 0000A83B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14750 0000A83E FF5009                  	call SOB_CLOSURE_CODE(rax)
 14751 0000A841 48890425[27120000]      	mov qword [free_var_66], rax
 14752 0000A849 48B8-                   	mov rax, sob_void
 14752 0000A84B [0000000000000000] 
 14753                                  
 14754                                  	; preparing a non-tail-call
 14755 0000A853 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 14756 0000A85B 803805                  	cmp byte [rax], T_undefined
 14757 0000A85E 0F8434840000            	je L_error_fvar_undefined
 14758 0000A864 50                      	push rax
 14759 0000A865 6A01                    	push 1	; arg count
 14760 0000A867 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 14761 0000A86B 803804                  	cmp byte [rax], T_closure
 14762 0000A86E 0F85A8840000            	jne L_error_non_closure
 14763 0000A874 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14764 0000A877 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14765 0000A87A 48890425[49120000]      	mov qword [free_var_68], rax
 14766 0000A882 48B8-                   	mov rax, sob_void
 14766 0000A884 [0000000000000000] 
 14767                                  
 14768                                  	; preparing a non-tail-call
 14769 0000A88C 488B0425[3C0E0000]      	mov rax, qword [free_var_7]	; free var >
 14770 0000A894 803805                  	cmp byte [rax], T_undefined
 14771 0000A897 0F84FB830000            	je L_error_fvar_undefined
 14772 0000A89D 50                      	push rax
 14773 0000A89E 6A01                    	push 1	; arg count
 14774 0000A8A0 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 14775 0000A8A4 803804                  	cmp byte [rax], T_closure
 14776 0000A8A7 0F856F840000            	jne L_error_non_closure
 14777 0000A8AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 14778 0000A8B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14779 0000A8B3 48890425[6B120000]      	mov qword [free_var_70], rax
 14780 0000A8BB 48B8-                   	mov rax, sob_void
 14780 0000A8BD [0000000000000000] 
 14781                                  
 14782                                  	; preparing a non-tail-call
 14783 0000A8C5 488B0425[4D0E0000]      	mov rax, qword [free_var_8]	; free var >=
 14784 0000A8CD 803805                  	cmp byte [rax], T_undefined
 14785 0000A8D0 0F84C2830000            	je L_error_fvar_undefined
 14786 0000A8D6 50                      	push rax
 14787 0000A8D7 6A01                    	push 1	; arg count
 14788 0000A8D9 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 14789 0000A8DD 803804                  	cmp byte [rax], T_closure
 14790 0000A8E0 0F8536840000            	jne L_error_non_closure
 14791 0000A8E6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14792 0000A8E9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14793 0000A8EC 48890425[5A120000]      	mov qword [free_var_69], rax
 14794 0000A8F4 48B8-                   	mov rax, sob_void
 14794 0000A8F6 [0000000000000000] 
 14795 0000A8FE C9                      	leave
 14796 0000A8FF C21800                  	ret AND_KILL_FRAME(1)
 14797                                  .L_lambda_simple_end_0129:	; new closure is in rax
 14798 0000A902 803804                  	cmp byte [rax], T_closure
 14799 0000A905 0F8511840000            	jne L_error_non_closure
 14800 0000A90B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14801 0000A90E FF5009                  	call SOB_CLOSURE_CODE(rax)
 14802                                  
 14803 0000A911 4889C7                  	mov rdi, rax
 14804 0000A914 E801870000              	call print_sexpr_if_not_void
 14805 0000A919 48B8-                   	mov rax, L_constants + 0
 14805 0000A91B [0000000000000000] 
 14806 0000A923 48890425[23160000]      	mov qword [free_var_126], rax
 14807 0000A92B 48B8-                   	mov rax, sob_void
 14807 0000A92D [0000000000000000] 
 14808                                  
 14809 0000A935 4889C7                  	mov rdi, rax
 14810 0000A938 E8DD860000              	call print_sexpr_if_not_void
 14811 0000A93D 48B8-                   	mov rax, L_constants + 0
 14811 0000A93F [0000000000000000] 
 14812 0000A947 48890425[89160000]      	mov qword [free_var_132], rax
 14813 0000A94F 48B8-                   	mov rax, sob_void
 14813 0000A951 [0000000000000000] 
 14814                                  
 14815 0000A959 4889C7                  	mov rdi, rax
 14816 0000A95C E8B9860000              	call print_sexpr_if_not_void
 14817                                  	; preparing a non-tail-call
 14818 0000A961 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14819 0000A966 E85A840000              	call malloc
 14820 0000A96B 50                      	push rax
 14821 0000A96C BF00000000              	mov rdi, 8 * 0	; new rib
 14822 0000A971 E84F840000              	call malloc
 14823 0000A976 50                      	push rax
 14824 0000A977 BF08000000              	mov rdi, 8 * 1	; extended env
 14825 0000A97C E844840000              	call malloc
 14826 0000A981 488B7D10                	mov rdi, ENV
 14827 0000A985 BE00000000              	mov rsi, 0
 14828 0000A98A BA01000000              	mov rdx, 1
 14829                                  .L_lambda_simple_env_loop_012a:	; ext_env[i + 1] <-- env[i]
 14830 0000A98F 4883FE00                	cmp rsi, 0
 14831 0000A993 7410                    	je .L_lambda_simple_env_end_012a
 14832 0000A995 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14833 0000A999 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14834 0000A99D 48FFC6                  	inc rsi
 14835 0000A9A0 48FFC2                  	inc rdx
 14836 0000A9A3 EBEA                    	jmp .L_lambda_simple_env_loop_012a
 14837                                  .L_lambda_simple_env_end_012a:
 14838 0000A9A5 5B                      	pop rbx
 14839 0000A9A6 BE00000000              	mov rsi, 0
 14840                                  .L_lambda_simple_params_loop_012a:	; copy params
 14841 0000A9AB 4883FE00                	cmp rsi, 0
 14842 0000A9AF 740E                    	je .L_lambda_simple_params_end_012a
 14843 0000A9B1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14844 0000A9B6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14845 0000A9BA 48FFC6                  	inc rsi
 14846 0000A9BD EBEC                    	jmp .L_lambda_simple_params_loop_012a
 14847                                  .L_lambda_simple_params_end_012a:
 14848 0000A9BF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14849 0000A9C2 4889C3                  	mov rbx, rax
 14850 0000A9C5 58                      	pop rax
 14851 0000A9C6 C60004                  	mov byte [rax], T_closure
 14852 0000A9C9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14853 0000A9CD 48C74009[DAA90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_012a
 14854 0000A9D5 E927010000              	jmp .L_lambda_simple_end_012a
 14855                                  .L_lambda_simple_code_012a:	; lambda-simple body
 14856 0000A9DA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14857 0000A9E0 740B                    	je .L_lambda_simple_arity_check_ok_012a
 14858 0000A9E2 FF742410                	push qword [rsp + 8 * 2]
 14859 0000A9E6 6A01                    	push 1
 14860 0000A9E8 E991830000              	jmp L_error_incorrect_arity_simple
 14861                                  .L_lambda_simple_arity_check_ok_012a:
 14862 0000A9ED C8000000                	enter 0, 0
 14863 0000A9F1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14864 0000A9F6 E8CA830000              	call malloc
 14865 0000A9FB 50                      	push rax
 14866 0000A9FC BF08000000              	mov rdi, 8 * 1	; new rib
 14867 0000AA01 E8BF830000              	call malloc
 14868 0000AA06 50                      	push rax
 14869 0000AA07 BF10000000              	mov rdi, 8 * 2	; extended env
 14870 0000AA0C E8B4830000              	call malloc
 14871 0000AA11 488B7D10                	mov rdi, ENV
 14872 0000AA15 BE00000000              	mov rsi, 0
 14873 0000AA1A BA01000000              	mov rdx, 1
 14874                                  .L_lambda_simple_env_loop_012b:	; ext_env[i + 1] <-- env[i]
 14875 0000AA1F 4883FE01                	cmp rsi, 1
 14876 0000AA23 7410                    	je .L_lambda_simple_env_end_012b
 14877 0000AA25 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14878 0000AA29 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14879 0000AA2D 48FFC6                  	inc rsi
 14880 0000AA30 48FFC2                  	inc rdx
 14881 0000AA33 EBEA                    	jmp .L_lambda_simple_env_loop_012b
 14882                                  .L_lambda_simple_env_end_012b:
 14883 0000AA35 5B                      	pop rbx
 14884 0000AA36 BE00000000              	mov rsi, 0
 14885                                  .L_lambda_simple_params_loop_012b:	; copy params
 14886 0000AA3B 4883FE01                	cmp rsi, 1
 14887 0000AA3F 740E                    	je .L_lambda_simple_params_end_012b
 14888 0000AA41 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14889 0000AA46 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14890 0000AA4A 48FFC6                  	inc rsi
 14891 0000AA4D EBEC                    	jmp .L_lambda_simple_params_loop_012b
 14892                                  .L_lambda_simple_params_end_012b:
 14893 0000AA4F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14894 0000AA52 4889C3                  	mov rbx, rax
 14895 0000AA55 58                      	pop rax
 14896 0000AA56 C60004                  	mov byte [rax], T_closure
 14897 0000AA59 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14898 0000AA5D 48C74009[6AAA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_012b
 14899 0000AA65 E993000000              	jmp .L_lambda_simple_end_012b
 14900                                  .L_lambda_simple_code_012b:	; lambda-simple body
 14901 0000AA6A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14902 0000AA70 740B                    	je .L_lambda_simple_arity_check_ok_012b
 14903 0000AA72 FF742410                	push qword [rsp + 8 * 2]
 14904 0000AA76 6A01                    	push 1
 14905 0000AA78 E901830000              	jmp L_error_incorrect_arity_simple
 14906                                  .L_lambda_simple_arity_check_ok_012b:
 14907 0000AA7D C8000000                	enter 0, 0
 14908                                  	; preparing a non-tail-call
 14909                                  	; preparing a non-tail-call
 14910                                  	; preparing a non-tail-call
 14911 0000AA81 488B4520                	mov rax, PARAM(0)	; param str
 14912 0000AA85 50                      	push rax
 14913 0000AA86 6A01                    	push 1	; arg count
 14914 0000AA88 488B0425[AC150000]      	mov rax, qword [free_var_119]	; free var string->list
 14915 0000AA90 803805                  	cmp byte [rax], T_undefined
 14916 0000AA93 0F84FF810000            	je L_error_fvar_undefined
 14917 0000AA99 803804                  	cmp byte [rax], T_closure
 14918 0000AA9C 0F857A820000            	jne L_error_non_closure
 14919 0000AAA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14920 0000AAA5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14921 0000AAA8 50                      	push rax
 14922 0000AAA9 488B4510                	mov rax, ENV
 14923 0000AAAD 488B00                  	mov rax, qword [rax + 8 * 0]
 14924 0000AAB0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char-case-converter
 14925 0000AAB3 50                      	push rax
 14926 0000AAB4 6A02                    	push 2	; arg count
 14927 0000AAB6 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 14928 0000AABE 803805                  	cmp byte [rax], T_undefined
 14929 0000AAC1 0F84D1810000            	je L_error_fvar_undefined
 14930 0000AAC7 803804                  	cmp byte [rax], T_closure
 14931 0000AACA 0F854C820000            	jne L_error_non_closure
 14932 0000AAD0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14933 0000AAD3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14934 0000AAD6 50                      	push rax
 14935 0000AAD7 6A01                    	push 1	; arg count
 14936 0000AAD9 488B0425[03140000]      	mov rax, qword [free_var_94]	; free var list->string
 14937 0000AAE1 803805                  	cmp byte [rax], T_undefined
 14938 0000AAE4 0F84AE810000            	je L_error_fvar_undefined
 14939 0000AAEA 803804                  	cmp byte [rax], T_closure
 14940 0000AAED 0F8529820000            	jne L_error_non_closure
 14941 0000AAF3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14942 0000AAF6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14943 0000AAF9 C9                      	leave
 14944 0000AAFA C21800                  	ret AND_KILL_FRAME(1)
 14945                                  .L_lambda_simple_end_012b:	; new closure is in rax
 14946 0000AAFD C9                      	leave
 14947 0000AAFE C21800                  	ret AND_KILL_FRAME(1)
 14948                                  .L_lambda_simple_end_012a:	; new closure is in rax
 14949 0000AB01 50                      	push rax
 14950 0000AB02 6A01                    	push 1	; arg count
 14951 0000AB04 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14952 0000AB09 E8B7820000              	call malloc
 14953 0000AB0E 50                      	push rax
 14954 0000AB0F BF00000000              	mov rdi, 8 * 0	; new rib
 14955 0000AB14 E8AC820000              	call malloc
 14956 0000AB19 50                      	push rax
 14957 0000AB1A BF08000000              	mov rdi, 8 * 1	; extended env
 14958 0000AB1F E8A1820000              	call malloc
 14959 0000AB24 488B7D10                	mov rdi, ENV
 14960 0000AB28 BE00000000              	mov rsi, 0
 14961 0000AB2D BA01000000              	mov rdx, 1
 14962                                  .L_lambda_simple_env_loop_012c:	; ext_env[i + 1] <-- env[i]
 14963 0000AB32 4883FE00                	cmp rsi, 0
 14964 0000AB36 7410                    	je .L_lambda_simple_env_end_012c
 14965 0000AB38 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14966 0000AB3C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14967 0000AB40 48FFC6                  	inc rsi
 14968 0000AB43 48FFC2                  	inc rdx
 14969 0000AB46 EBEA                    	jmp .L_lambda_simple_env_loop_012c
 14970                                  .L_lambda_simple_env_end_012c:
 14971 0000AB48 5B                      	pop rbx
 14972 0000AB49 BE00000000              	mov rsi, 0
 14973                                  .L_lambda_simple_params_loop_012c:	; copy params
 14974 0000AB4E 4883FE00                	cmp rsi, 0
 14975 0000AB52 740E                    	je .L_lambda_simple_params_end_012c
 14976 0000AB54 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14977 0000AB59 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14978 0000AB5D 48FFC6                  	inc rsi
 14979 0000AB60 EBEC                    	jmp .L_lambda_simple_params_loop_012c
 14980                                  .L_lambda_simple_params_end_012c:
 14981 0000AB62 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14982 0000AB65 4889C3                  	mov rbx, rax
 14983 0000AB68 58                      	pop rax
 14984 0000AB69 C60004                  	mov byte [rax], T_closure
 14985 0000AB6C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14986 0000AB70 48C74009[7DAB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_012c
 14987 0000AB78 E98D000000              	jmp .L_lambda_simple_end_012c
 14988                                  .L_lambda_simple_code_012c:	; lambda-simple body
 14989 0000AB7D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14990 0000AB83 740B                    	je .L_lambda_simple_arity_check_ok_012c
 14991 0000AB85 FF742410                	push qword [rsp + 8 * 2]
 14992 0000AB89 6A01                    	push 1
 14993 0000AB8B E9EE810000              	jmp L_error_incorrect_arity_simple
 14994                                  .L_lambda_simple_arity_check_ok_012c:
 14995 0000AB90 C8000000                	enter 0, 0
 14996                                  	; preparing a non-tail-call
 14997 0000AB94 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 14998 0000AB9C 803805                  	cmp byte [rax], T_undefined
 14999 0000AB9F 0F84F3800000            	je L_error_fvar_undefined
 15000 0000ABA5 50                      	push rax
 15001 0000ABA6 6A01                    	push 1	; arg count
 15002 0000ABA8 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 15003 0000ABAC 803804                  	cmp byte [rax], T_closure
 15004 0000ABAF 0F8567810000            	jne L_error_non_closure
 15005 0000ABB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15006 0000ABB8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15007 0000ABBB 48890425[23160000]      	mov qword [free_var_126], rax
 15008 0000ABC3 48B8-                   	mov rax, sob_void
 15008 0000ABC5 [0000000000000000] 
 15009                                  
 15010                                  	; preparing a non-tail-call
 15011 0000ABCD 488B0425[8D120000]      	mov rax, qword [free_var_72]	; free var char-upcase
 15012 0000ABD5 803805                  	cmp byte [rax], T_undefined
 15013 0000ABD8 0F84BA800000            	je L_error_fvar_undefined
 15014 0000ABDE 50                      	push rax
 15015 0000ABDF 6A01                    	push 1	; arg count
 15016 0000ABE1 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 15017 0000ABE5 803804                  	cmp byte [rax], T_closure
 15018 0000ABE8 0F852E810000            	jne L_error_non_closure
 15019 0000ABEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 15020 0000ABF1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15021 0000ABF4 48890425[89160000]      	mov qword [free_var_132], rax
 15022 0000ABFC 48B8-                   	mov rax, sob_void
 15022 0000ABFE [0000000000000000] 
 15023 0000AC06 C9                      	leave
 15024 0000AC07 C21800                  	ret AND_KILL_FRAME(1)
 15025                                  .L_lambda_simple_end_012c:	; new closure is in rax
 15026 0000AC0A 803804                  	cmp byte [rax], T_closure
 15027 0000AC0D 0F8509810000            	jne L_error_non_closure
 15028 0000AC13 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15029 0000AC16 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15030                                  
 15031 0000AC19 4889C7                  	mov rdi, rax
 15032 0000AC1C E8F9830000              	call print_sexpr_if_not_void
 15033 0000AC21 48B8-                   	mov rax, L_constants + 0
 15033 0000AC23 [0000000000000000] 
 15034 0000AC2B 48890425[AB160000]      	mov qword [free_var_134], rax
 15035 0000AC33 48B8-                   	mov rax, sob_void
 15035 0000AC35 [0000000000000000] 
 15036                                  
 15037 0000AC3D 4889C7                  	mov rdi, rax
 15038 0000AC40 E8D5830000              	call print_sexpr_if_not_void
 15039 0000AC45 48B8-                   	mov rax, L_constants + 0
 15039 0000AC47 [0000000000000000] 
 15040 0000AC4F 48890425[9A160000]      	mov qword [free_var_133], rax
 15041 0000AC57 48B8-                   	mov rax, sob_void
 15041 0000AC59 [0000000000000000] 
 15042                                  
 15043 0000AC61 4889C7                  	mov rdi, rax
 15044 0000AC64 E8B1830000              	call print_sexpr_if_not_void
 15045 0000AC69 48B8-                   	mov rax, L_constants + 0
 15045 0000AC6B [0000000000000000] 
 15046 0000AC73 48890425[BC160000]      	mov qword [free_var_135], rax
 15047 0000AC7B 48B8-                   	mov rax, sob_void
 15047 0000AC7D [0000000000000000] 
 15048                                  
 15049 0000AC85 4889C7                  	mov rdi, rax
 15050 0000AC88 E88D830000              	call print_sexpr_if_not_void
 15051 0000AC8D 48B8-                   	mov rax, L_constants + 0
 15051 0000AC8F [0000000000000000] 
 15052 0000AC97 48890425[CD160000]      	mov qword [free_var_136], rax
 15053 0000AC9F 48B8-                   	mov rax, sob_void
 15053 0000ACA1 [0000000000000000] 
 15054                                  
 15055 0000ACA9 4889C7                  	mov rdi, rax
 15056 0000ACAC E869830000              	call print_sexpr_if_not_void
 15057 0000ACB1 48B8-                   	mov rax, L_constants + 0
 15057 0000ACB3 [0000000000000000] 
 15058 0000ACBB 48890425[DE160000]      	mov qword [free_var_137], rax
 15059 0000ACC3 48B8-                   	mov rax, sob_void
 15059 0000ACC5 [0000000000000000] 
 15060                                  
 15061 0000ACCD 4889C7                  	mov rdi, rax
 15062 0000ACD0 E845830000              	call print_sexpr_if_not_void
 15063 0000ACD5 48B8-                   	mov rax, L_constants + 0
 15063 0000ACD7 [0000000000000000] 
 15064 0000ACDF 48890425[DF150000]      	mov qword [free_var_122], rax
 15065 0000ACE7 48B8-                   	mov rax, sob_void
 15065 0000ACE9 [0000000000000000] 
 15066                                  
 15067 0000ACF1 4889C7                  	mov rdi, rax
 15068 0000ACF4 E821830000              	call print_sexpr_if_not_void
 15069 0000ACF9 48B8-                   	mov rax, L_constants + 0
 15069 0000ACFB [0000000000000000] 
 15070 0000AD03 48890425[CE150000]      	mov qword [free_var_121], rax
 15071 0000AD0B 48B8-                   	mov rax, sob_void
 15071 0000AD0D [0000000000000000] 
 15072                                  
 15073 0000AD15 4889C7                  	mov rdi, rax
 15074 0000AD18 E8FD820000              	call print_sexpr_if_not_void
 15075 0000AD1D 48B8-                   	mov rax, L_constants + 0
 15075 0000AD1F [0000000000000000] 
 15076 0000AD27 48890425[F0150000]      	mov qword [free_var_123], rax
 15077 0000AD2F 48B8-                   	mov rax, sob_void
 15077 0000AD31 [0000000000000000] 
 15078                                  
 15079 0000AD39 4889C7                  	mov rdi, rax
 15080 0000AD3C E8D9820000              	call print_sexpr_if_not_void
 15081 0000AD41 48B8-                   	mov rax, L_constants + 0
 15081 0000AD43 [0000000000000000] 
 15082 0000AD4B 48890425[01160000]      	mov qword [free_var_124], rax
 15083 0000AD53 48B8-                   	mov rax, sob_void
 15083 0000AD55 [0000000000000000] 
 15084                                  
 15085 0000AD5D 4889C7                  	mov rdi, rax
 15086 0000AD60 E8B5820000              	call print_sexpr_if_not_void
 15087 0000AD65 48B8-                   	mov rax, L_constants + 0
 15087 0000AD67 [0000000000000000] 
 15088 0000AD6F 48890425[12160000]      	mov qword [free_var_125], rax
 15089 0000AD77 48B8-                   	mov rax, sob_void
 15089 0000AD79 [0000000000000000] 
 15090                                  
 15091 0000AD81 4889C7                  	mov rdi, rax
 15092 0000AD84 E891820000              	call print_sexpr_if_not_void
 15093                                  	; preparing a non-tail-call
 15094 0000AD89 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15095 0000AD8E E832800000              	call malloc
 15096 0000AD93 50                      	push rax
 15097 0000AD94 BF00000000              	mov rdi, 8 * 0	; new rib
 15098 0000AD99 E827800000              	call malloc
 15099 0000AD9E 50                      	push rax
 15100 0000AD9F BF08000000              	mov rdi, 8 * 1	; extended env
 15101 0000ADA4 E81C800000              	call malloc
 15102 0000ADA9 488B7D10                	mov rdi, ENV
 15103 0000ADAD BE00000000              	mov rsi, 0
 15104 0000ADB2 BA01000000              	mov rdx, 1
 15105                                  .L_lambda_simple_env_loop_012d:	; ext_env[i + 1] <-- env[i]
 15106 0000ADB7 4883FE00                	cmp rsi, 0
 15107 0000ADBB 7410                    	je .L_lambda_simple_env_end_012d
 15108 0000ADBD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15109 0000ADC1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15110 0000ADC5 48FFC6                  	inc rsi
 15111 0000ADC8 48FFC2                  	inc rdx
 15112 0000ADCB EBEA                    	jmp .L_lambda_simple_env_loop_012d
 15113                                  .L_lambda_simple_env_end_012d:
 15114 0000ADCD 5B                      	pop rbx
 15115 0000ADCE BE00000000              	mov rsi, 0
 15116                                  .L_lambda_simple_params_loop_012d:	; copy params
 15117 0000ADD3 4883FE00                	cmp rsi, 0
 15118 0000ADD7 740E                    	je .L_lambda_simple_params_end_012d
 15119 0000ADD9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15120 0000ADDE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15121 0000ADE2 48FFC6                  	inc rsi
 15122 0000ADE5 EBEC                    	jmp .L_lambda_simple_params_loop_012d
 15123                                  .L_lambda_simple_params_end_012d:
 15124 0000ADE7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15125 0000ADEA 4889C3                  	mov rbx, rax
 15126 0000ADED 58                      	pop rax
 15127 0000ADEE C60004                  	mov byte [rax], T_closure
 15128 0000ADF1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15129 0000ADF5 48C74009[02AE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_012d
 15130 0000ADFD E9CD0A0000              	jmp .L_lambda_simple_end_012d
 15131                                  .L_lambda_simple_code_012d:	; lambda-simple body
 15132 0000AE02 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15133 0000AE08 740B                    	je .L_lambda_simple_arity_check_ok_012d
 15134 0000AE0A FF742410                	push qword [rsp + 8 * 2]
 15135 0000AE0E 6A02                    	push 2
 15136 0000AE10 E9697F0000              	jmp L_error_incorrect_arity_simple
 15137                                  .L_lambda_simple_arity_check_ok_012d:
 15138 0000AE15 C8000000                	enter 0, 0
 15139                                  	; preparing a non-tail-call
 15140 0000AE19 48B8-                   	mov rax, L_constants + 1993
 15140 0000AE1B [C907000000000000] 
 15141 0000AE23 50                      	push rax
 15142 0000AE24 6A01                    	push 1	; arg count
 15143 0000AE26 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15144 0000AE2B E8957F0000              	call malloc
 15145 0000AE30 50                      	push rax
 15146 0000AE31 BF10000000              	mov rdi, 8 * 2	; new rib
 15147 0000AE36 E88A7F0000              	call malloc
 15148 0000AE3B 50                      	push rax
 15149 0000AE3C BF10000000              	mov rdi, 8 * 2	; extended env
 15150 0000AE41 E87F7F0000              	call malloc
 15151 0000AE46 488B7D10                	mov rdi, ENV
 15152 0000AE4A BE00000000              	mov rsi, 0
 15153 0000AE4F BA01000000              	mov rdx, 1
 15154                                  .L_lambda_simple_env_loop_012e:	; ext_env[i + 1] <-- env[i]
 15155 0000AE54 4883FE01                	cmp rsi, 1
 15156 0000AE58 7410                    	je .L_lambda_simple_env_end_012e
 15157 0000AE5A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15158 0000AE5E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15159 0000AE62 48FFC6                  	inc rsi
 15160 0000AE65 48FFC2                  	inc rdx
 15161 0000AE68 EBEA                    	jmp .L_lambda_simple_env_loop_012e
 15162                                  .L_lambda_simple_env_end_012e:
 15163 0000AE6A 5B                      	pop rbx
 15164 0000AE6B BE00000000              	mov rsi, 0
 15165                                  .L_lambda_simple_params_loop_012e:	; copy params
 15166 0000AE70 4883FE02                	cmp rsi, 2
 15167 0000AE74 740E                    	je .L_lambda_simple_params_end_012e
 15168 0000AE76 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15169 0000AE7B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15170 0000AE7F 48FFC6                  	inc rsi
 15171 0000AE82 EBEC                    	jmp .L_lambda_simple_params_loop_012e
 15172                                  .L_lambda_simple_params_end_012e:
 15173 0000AE84 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15174 0000AE87 4889C3                  	mov rbx, rax
 15175 0000AE8A 58                      	pop rax
 15176 0000AE8B C60004                  	mov byte [rax], T_closure
 15177 0000AE8E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15178 0000AE92 48C74009[9FAE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_012e
 15179 0000AE9A E91D0A0000              	jmp .L_lambda_simple_end_012e
 15180                                  .L_lambda_simple_code_012e:	; lambda-simple body
 15181 0000AE9F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15182 0000AEA5 740B                    	je .L_lambda_simple_arity_check_ok_012e
 15183 0000AEA7 FF742410                	push qword [rsp + 8 * 2]
 15184 0000AEAB 6A01                    	push 1
 15185 0000AEAD E9CC7E0000              	jmp L_error_incorrect_arity_simple
 15186                                  .L_lambda_simple_arity_check_ok_012e:
 15187 0000AEB2 C8000000                	enter 0, 0
 15188 0000AEB6 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 15189 0000AEBA 488903                  	mov qword [rbx], rax
 15190                                  
 15191 0000AEBD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15192 0000AEC2 E8FE7E0000              	call malloc
 15193 0000AEC7 50                      	push rax
 15194 0000AEC8 BF08000000              	mov rdi, 8 * 1	; new rib
 15195 0000AECD E8F37E0000              	call malloc
 15196 0000AED2 50                      	push rax
 15197 0000AED3 BF18000000              	mov rdi, 8 * 3	; extended env
 15198 0000AED8 E8E87E0000              	call malloc
 15199 0000AEDD 488B7D10                	mov rdi, ENV
 15200 0000AEE1 BE00000000              	mov rsi, 0
 15201 0000AEE6 BA01000000              	mov rdx, 1
 15202                                  .L_lambda_simple_env_loop_012f:	; ext_env[i + 1] <-- env[i]
 15203 0000AEEB 4883FE02                	cmp rsi, 2
 15204 0000AEEF 7410                    	je .L_lambda_simple_env_end_012f
 15205 0000AEF1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15206 0000AEF5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15207 0000AEF9 48FFC6                  	inc rsi
 15208 0000AEFC 48FFC2                  	inc rdx
 15209 0000AEFF EBEA                    	jmp .L_lambda_simple_env_loop_012f
 15210                                  .L_lambda_simple_env_end_012f:
 15211 0000AF01 5B                      	pop rbx
 15212 0000AF02 BE00000000              	mov rsi, 0
 15213                                  .L_lambda_simple_params_loop_012f:	; copy params
 15214 0000AF07 4883FE01                	cmp rsi, 1
 15215 0000AF0B 740E                    	je .L_lambda_simple_params_end_012f
 15216 0000AF0D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15217 0000AF12 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15218 0000AF16 48FFC6                  	inc rsi
 15219 0000AF19 EBEC                    	jmp .L_lambda_simple_params_loop_012f
 15220                                  .L_lambda_simple_params_end_012f:
 15221 0000AF1B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15222 0000AF1E 4889C3                  	mov rbx, rax
 15223 0000AF21 58                      	pop rax
 15224 0000AF22 C60004                  	mov byte [rax], T_closure
 15225 0000AF25 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15226 0000AF29 48C74009[36AF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_012f
 15227 0000AF31 E949020000              	jmp .L_lambda_simple_end_012f
 15228                                  .L_lambda_simple_code_012f:	; lambda-simple body
 15229 0000AF36 48837C241005            	cmp qword [rsp + 8 * 2], 5
 15230 0000AF3C 740B                    	je .L_lambda_simple_arity_check_ok_012f
 15231 0000AF3E FF742410                	push qword [rsp + 8 * 2]
 15232 0000AF42 6A05                    	push 5
 15233 0000AF44 E9357E0000              	jmp L_error_incorrect_arity_simple
 15234                                  .L_lambda_simple_arity_check_ok_012f:
 15235 0000AF49 C8000000                	enter 0, 0
 15236                                  	; preparing a non-tail-call
 15237 0000AF4D 488B4530                	mov rax, PARAM(2)	; param len1
 15238 0000AF51 50                      	push rax
 15239 0000AF52 488B4520                	mov rax, PARAM(0)	; param i
 15240 0000AF56 50                      	push rax
 15241 0000AF57 6A02                    	push 2	; arg count
 15242 0000AF59 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 15243 0000AF61 803805                  	cmp byte [rax], T_undefined
 15244 0000AF64 0F842E7D0000            	je L_error_fvar_undefined
 15245 0000AF6A 803804                  	cmp byte [rax], T_closure
 15246 0000AF6D 0F85A97D0000            	jne L_error_non_closure
 15247 0000AF73 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15248 0000AF76 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15249 0000AF79 483D[02000000]          	cmp rax, sob_boolean_false
 15250 0000AF7F 742E                    	je .L_if_else_00f1
 15251                                  	; preparing a non-tail-call
 15252 0000AF81 488B4540                	mov rax, PARAM(4)	; param len2
 15253 0000AF85 50                      	push rax
 15254 0000AF86 488B4530                	mov rax, PARAM(2)	; param len1
 15255 0000AF8A 50                      	push rax
 15256 0000AF8B 6A02                    	push 2	; arg count
 15257 0000AF8D 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 15258 0000AF95 803805                  	cmp byte [rax], T_undefined
 15259 0000AF98 0F84FA7C0000            	je L_error_fvar_undefined
 15260 0000AF9E 803804                  	cmp byte [rax], T_closure
 15261 0000AFA1 0F85757D0000            	jne L_error_non_closure
 15262 0000AFA7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15263 0000AFAA FF5009                  	call SOB_CLOSURE_CODE(rax)
 15264 0000AFAD EB0A                    	jmp .L_if_end_00f1
 15265                                  .L_if_else_00f1:
 15266 0000AFAF 48B8-                   	mov rax, L_constants + 2
 15266 0000AFB1 [0200000000000000] 
 15267                                  .L_if_end_00f1:
 15268 0000AFB9 483D[02000000]          	cmp rax, sob_boolean_false
 15269 0000AFBF 0F85B6010000            	jne .L_or_end_001b
 15270                                  	; preparing a non-tail-call
 15271 0000AFC5 488B4530                	mov rax, PARAM(2)	; param len1
 15272 0000AFC9 50                      	push rax
 15273 0000AFCA 488B4520                	mov rax, PARAM(0)	; param i
 15274 0000AFCE 50                      	push rax
 15275 0000AFCF 6A02                    	push 2	; arg count
 15276 0000AFD1 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 15277 0000AFD9 803805                  	cmp byte [rax], T_undefined
 15278 0000AFDC 0F84B67C0000            	je L_error_fvar_undefined
 15279 0000AFE2 803804                  	cmp byte [rax], T_closure
 15280 0000AFE5 0F85317D0000            	jne L_error_non_closure
 15281 0000AFEB FF7001                  	push SOB_CLOSURE_ENV(rax)
 15282 0000AFEE FF5009                  	call SOB_CLOSURE_CODE(rax)
 15283 0000AFF1 483D[02000000]          	cmp rax, sob_boolean_false
 15284 0000AFF7 0F8474010000            	je .L_if_else_00f3
 15285                                  	; preparing a non-tail-call
 15286                                  	; preparing a non-tail-call
 15287 0000AFFD 488B4520                	mov rax, PARAM(0)	; param i
 15288 0000B001 50                      	push rax
 15289 0000B002 488B4538                	mov rax, PARAM(3)	; param str2
 15290 0000B006 50                      	push rax
 15291 0000B007 6A02                    	push 2	; arg count
 15292 0000B009 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 15293 0000B011 803805                  	cmp byte [rax], T_undefined
 15294 0000B014 0F847E7C0000            	je L_error_fvar_undefined
 15295 0000B01A 803804                  	cmp byte [rax], T_closure
 15296 0000B01D 0F85F97C0000            	jne L_error_non_closure
 15297 0000B023 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15298 0000B026 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15299 0000B029 50                      	push rax
 15300                                  	; preparing a non-tail-call
 15301 0000B02A 488B4520                	mov rax, PARAM(0)	; param i
 15302 0000B02E 50                      	push rax
 15303 0000B02F 488B4528                	mov rax, PARAM(1)	; param str1
 15304 0000B033 50                      	push rax
 15305 0000B034 6A02                    	push 2	; arg count
 15306 0000B036 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 15307 0000B03E 803805                  	cmp byte [rax], T_undefined
 15308 0000B041 0F84517C0000            	je L_error_fvar_undefined
 15309 0000B047 803804                  	cmp byte [rax], T_closure
 15310 0000B04A 0F85CC7C0000            	jne L_error_non_closure
 15311 0000B050 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15312 0000B053 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15313 0000B056 50                      	push rax
 15314 0000B057 6A02                    	push 2	; arg count
 15315 0000B059 488B4510                	mov rax, ENV
 15316 0000B05D 488B4008                	mov rax, qword [rax + 8 * 1]
 15317 0000B061 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 15318 0000B064 803804                  	cmp byte [rax], T_closure
 15319 0000B067 0F85AF7C0000            	jne L_error_non_closure
 15320 0000B06D FF7001                  	push SOB_CLOSURE_ENV(rax)
 15321 0000B070 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15322 0000B073 483D[02000000]          	cmp rax, sob_boolean_false
 15323 0000B079 0F85F0000000            	jne .L_or_end_001c
 15324                                  	; preparing a non-tail-call
 15325                                  	; preparing a non-tail-call
 15326 0000B07F 488B4520                	mov rax, PARAM(0)	; param i
 15327 0000B083 50                      	push rax
 15328 0000B084 488B4538                	mov rax, PARAM(3)	; param str2
 15329 0000B088 50                      	push rax
 15330 0000B089 6A02                    	push 2	; arg count
 15331 0000B08B 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 15332 0000B093 803805                  	cmp byte [rax], T_undefined
 15333 0000B096 0F84FC7B0000            	je L_error_fvar_undefined
 15334 0000B09C 803804                  	cmp byte [rax], T_closure
 15335 0000B09F 0F85777C0000            	jne L_error_non_closure
 15336 0000B0A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15337 0000B0A8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15338 0000B0AB 50                      	push rax
 15339                                  	; preparing a non-tail-call
 15340 0000B0AC 488B4520                	mov rax, PARAM(0)	; param i
 15341 0000B0B0 50                      	push rax
 15342 0000B0B1 488B4528                	mov rax, PARAM(1)	; param str1
 15343 0000B0B5 50                      	push rax
 15344 0000B0B6 6A02                    	push 2	; arg count
 15345 0000B0B8 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 15346 0000B0C0 803805                  	cmp byte [rax], T_undefined
 15347 0000B0C3 0F84CF7B0000            	je L_error_fvar_undefined
 15348 0000B0C9 803804                  	cmp byte [rax], T_closure
 15349 0000B0CC 0F854A7C0000            	jne L_error_non_closure
 15350 0000B0D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15351 0000B0D5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15352 0000B0D8 50                      	push rax
 15353 0000B0D9 6A02                    	push 2	; arg count
 15354 0000B0DB 488B4510                	mov rax, ENV
 15355 0000B0DF 488B4008                	mov rax, qword [rax + 8 * 1]
 15356 0000B0E3 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 15357 0000B0E7 803804                  	cmp byte [rax], T_closure
 15358 0000B0EA 0F852C7C0000            	jne L_error_non_closure
 15359 0000B0F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15360 0000B0F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15361 0000B0F6 483D[02000000]          	cmp rax, sob_boolean_false
 15362 0000B0FC 7467                    	je .L_if_else_00f2
 15363                                  	; preparing a non-tail-call
 15364 0000B0FE 488B4540                	mov rax, PARAM(4)	; param len2
 15365 0000B102 50                      	push rax
 15366 0000B103 488B4538                	mov rax, PARAM(3)	; param str2
 15367 0000B107 50                      	push rax
 15368 0000B108 488B4530                	mov rax, PARAM(2)	; param len1
 15369 0000B10C 50                      	push rax
 15370 0000B10D 488B4528                	mov rax, PARAM(1)	; param str1
 15371 0000B111 50                      	push rax
 15372                                  	; preparing a non-tail-call
 15373 0000B112 48B8-                   	mov rax, L_constants + 2270
 15373 0000B114 [DE08000000000000] 
 15374 0000B11C 50                      	push rax
 15375 0000B11D 488B4520                	mov rax, PARAM(0)	; param i
 15376 0000B121 50                      	push rax
 15377 0000B122 6A02                    	push 2	; arg count
 15378 0000B124 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 15379 0000B12C 803805                  	cmp byte [rax], T_undefined
 15380 0000B12F 0F84637B0000            	je L_error_fvar_undefined
 15381 0000B135 803804                  	cmp byte [rax], T_closure
 15382 0000B138 0F85DE7B0000            	jne L_error_non_closure
 15383 0000B13E FF7001                  	push SOB_CLOSURE_ENV(rax)
 15384 0000B141 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15385 0000B144 50                      	push rax
 15386 0000B145 6A05                    	push 5	; arg count
 15387 0000B147 488B4510                	mov rax, ENV
 15388 0000B14B 488B00                  	mov rax, qword [rax + 8 * 0]
 15389 0000B14E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15390 0000B151 488B00                  	mov rax, qword [rax]
 15391 0000B154 803804                  	cmp byte [rax], T_closure
 15392 0000B157 0F85BF7B0000            	jne L_error_non_closure
 15393 0000B15D FF7001                  	push SOB_CLOSURE_ENV(rax)
 15394 0000B160 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15395 0000B163 EB0A                    	jmp .L_if_end_00f2
 15396                                  .L_if_else_00f2:
 15397 0000B165 48B8-                   	mov rax, L_constants + 2
 15397 0000B167 [0200000000000000] 
 15398                                  .L_if_end_00f2:
 15399                                  .L_or_end_001c:
 15400 0000B16F EB0A                    	jmp .L_if_end_00f3
 15401                                  .L_if_else_00f3:
 15402 0000B171 48B8-                   	mov rax, L_constants + 2
 15402 0000B173 [0200000000000000] 
 15403                                  .L_if_end_00f3:
 15404                                  .L_or_end_001b:
 15405 0000B17B C9                      	leave
 15406 0000B17C C23800                  	ret AND_KILL_FRAME(5)
 15407                                  .L_lambda_simple_end_012f:	; new closure is in rax
 15408 0000B17F 50                      	push rax
 15409 0000B180 488B4520                	mov rax, PARAM(0)	; param run
 15410 0000B184 8F00                    	pop qword [rax]
 15411 0000B186 48B8-                   	mov rax, sob_void
 15411 0000B188 [0000000000000000] 
 15412                                  
 15413                                  	; preparing a non-tail-call
 15414 0000B190 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15415 0000B195 E82B7C0000              	call malloc
 15416 0000B19A 50                      	push rax
 15417 0000B19B BF08000000              	mov rdi, 8 * 1	; new rib
 15418 0000B1A0 E8207C0000              	call malloc
 15419 0000B1A5 50                      	push rax
 15420 0000B1A6 BF18000000              	mov rdi, 8 * 3	; extended env
 15421 0000B1AB E8157C0000              	call malloc
 15422 0000B1B0 488B7D10                	mov rdi, ENV
 15423 0000B1B4 BE00000000              	mov rsi, 0
 15424 0000B1B9 BA01000000              	mov rdx, 1
 15425                                  .L_lambda_simple_env_loop_0130:	; ext_env[i + 1] <-- env[i]
 15426 0000B1BE 4883FE02                	cmp rsi, 2
 15427 0000B1C2 7410                    	je .L_lambda_simple_env_end_0130
 15428 0000B1C4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15429 0000B1C8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15430 0000B1CC 48FFC6                  	inc rsi
 15431 0000B1CF 48FFC2                  	inc rdx
 15432 0000B1D2 EBEA                    	jmp .L_lambda_simple_env_loop_0130
 15433                                  .L_lambda_simple_env_end_0130:
 15434 0000B1D4 5B                      	pop rbx
 15435 0000B1D5 BE00000000              	mov rsi, 0
 15436                                  .L_lambda_simple_params_loop_0130:	; copy params
 15437 0000B1DA 4883FE01                	cmp rsi, 1
 15438 0000B1DE 740E                    	je .L_lambda_simple_params_end_0130
 15439 0000B1E0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15440 0000B1E5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15441 0000B1E9 48FFC6                  	inc rsi
 15442 0000B1EC EBEC                    	jmp .L_lambda_simple_params_loop_0130
 15443                                  .L_lambda_simple_params_end_0130:
 15444 0000B1EE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15445 0000B1F1 4889C3                  	mov rbx, rax
 15446 0000B1F4 58                      	pop rax
 15447 0000B1F5 C60004                  	mov byte [rax], T_closure
 15448 0000B1F8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15449 0000B1FC 48C74009[09B20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0130
 15450 0000B204 E9DC010000              	jmp .L_lambda_simple_end_0130
 15451                                  .L_lambda_simple_code_0130:	; lambda-simple body
 15452 0000B209 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15453 0000B20F 740B                    	je .L_lambda_simple_arity_check_ok_0130
 15454 0000B211 FF742410                	push qword [rsp + 8 * 2]
 15455 0000B215 6A02                    	push 2
 15456 0000B217 E9627B0000              	jmp L_error_incorrect_arity_simple
 15457                                  .L_lambda_simple_arity_check_ok_0130:
 15458 0000B21C C8000000                	enter 0, 0
 15459                                  	; preparing a non-tail-call
 15460                                  	; preparing a non-tail-call
 15461 0000B220 488B4528                	mov rax, PARAM(1)	; param str2
 15462 0000B224 50                      	push rax
 15463 0000B225 6A01                    	push 1	; arg count
 15464 0000B227 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 15465 0000B22F 803805                  	cmp byte [rax], T_undefined
 15466 0000B232 0F84607A0000            	je L_error_fvar_undefined
 15467 0000B238 803804                  	cmp byte [rax], T_closure
 15468 0000B23B 0F85DB7A0000            	jne L_error_non_closure
 15469 0000B241 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15470 0000B244 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15471 0000B247 50                      	push rax
 15472                                  	; preparing a non-tail-call
 15473 0000B248 488B4520                	mov rax, PARAM(0)	; param str1
 15474 0000B24C 50                      	push rax
 15475 0000B24D 6A01                    	push 1	; arg count
 15476 0000B24F 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 15477 0000B257 803805                  	cmp byte [rax], T_undefined
 15478 0000B25A 0F84387A0000            	je L_error_fvar_undefined
 15479 0000B260 803804                  	cmp byte [rax], T_closure
 15480 0000B263 0F85B37A0000            	jne L_error_non_closure
 15481 0000B269 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15482 0000B26C FF5009                  	call SOB_CLOSURE_CODE(rax)
 15483 0000B26F 50                      	push rax
 15484 0000B270 6A02                    	push 2	; arg count
 15485 0000B272 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15486 0000B277 E8497B0000              	call malloc
 15487 0000B27C 50                      	push rax
 15488 0000B27D BF10000000              	mov rdi, 8 * 2	; new rib
 15489 0000B282 E83E7B0000              	call malloc
 15490 0000B287 50                      	push rax
 15491 0000B288 BF20000000              	mov rdi, 8 * 4	; extended env
 15492 0000B28D E8337B0000              	call malloc
 15493 0000B292 488B7D10                	mov rdi, ENV
 15494 0000B296 BE00000000              	mov rsi, 0
 15495 0000B29B BA01000000              	mov rdx, 1
 15496                                  .L_lambda_simple_env_loop_0131:	; ext_env[i + 1] <-- env[i]
 15497 0000B2A0 4883FE03                	cmp rsi, 3
 15498 0000B2A4 7410                    	je .L_lambda_simple_env_end_0131
 15499 0000B2A6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15500 0000B2AA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15501 0000B2AE 48FFC6                  	inc rsi
 15502 0000B2B1 48FFC2                  	inc rdx
 15503 0000B2B4 EBEA                    	jmp .L_lambda_simple_env_loop_0131
 15504                                  .L_lambda_simple_env_end_0131:
 15505 0000B2B6 5B                      	pop rbx
 15506 0000B2B7 BE00000000              	mov rsi, 0
 15507                                  .L_lambda_simple_params_loop_0131:	; copy params
 15508 0000B2BC 4883FE02                	cmp rsi, 2
 15509 0000B2C0 740E                    	je .L_lambda_simple_params_end_0131
 15510 0000B2C2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15511 0000B2C7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15512 0000B2CB 48FFC6                  	inc rsi
 15513 0000B2CE EBEC                    	jmp .L_lambda_simple_params_loop_0131
 15514                                  .L_lambda_simple_params_end_0131:
 15515 0000B2D0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15516 0000B2D3 4889C3                  	mov rbx, rax
 15517 0000B2D6 58                      	pop rax
 15518 0000B2D7 C60004                  	mov byte [rax], T_closure
 15519 0000B2DA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15520 0000B2DE 48C74009[EBB20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0131
 15521 0000B2E6 E9E7000000              	jmp .L_lambda_simple_end_0131
 15522                                  .L_lambda_simple_code_0131:	; lambda-simple body
 15523 0000B2EB 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15524 0000B2F1 740B                    	je .L_lambda_simple_arity_check_ok_0131
 15525 0000B2F3 FF742410                	push qword [rsp + 8 * 2]
 15526 0000B2F7 6A02                    	push 2
 15527 0000B2F9 E9807A0000              	jmp L_error_incorrect_arity_simple
 15528                                  .L_lambda_simple_arity_check_ok_0131:
 15529 0000B2FE C8000000                	enter 0, 0
 15530                                  	; preparing a non-tail-call
 15531 0000B302 488B4528                	mov rax, PARAM(1)	; param len2
 15532 0000B306 50                      	push rax
 15533 0000B307 488B4520                	mov rax, PARAM(0)	; param len1
 15534 0000B30B 50                      	push rax
 15535 0000B30C 6A02                    	push 2	; arg count
 15536 0000B30E 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 15537 0000B316 803805                  	cmp byte [rax], T_undefined
 15538 0000B319 0F8479790000            	je L_error_fvar_undefined
 15539 0000B31F 803804                  	cmp byte [rax], T_closure
 15540 0000B322 0F85F4790000            	jne L_error_non_closure
 15541 0000B328 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15542 0000B32B FF5009                  	call SOB_CLOSURE_CODE(rax)
 15543 0000B32E 483D[02000000]          	cmp rax, sob_boolean_false
 15544 0000B334 744D                    	je .L_if_else_00f4
 15545                                  	; preparing a non-tail-call
 15546 0000B336 488B4528                	mov rax, PARAM(1)	; param len2
 15547 0000B33A 50                      	push rax
 15548 0000B33B 488B4510                	mov rax, ENV
 15549 0000B33F 488B00                  	mov rax, qword [rax + 8 * 0]
 15550 0000B342 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 15551 0000B346 50                      	push rax
 15552 0000B347 488B4520                	mov rax, PARAM(0)	; param len1
 15553 0000B34B 50                      	push rax
 15554 0000B34C 488B4510                	mov rax, ENV
 15555 0000B350 488B00                  	mov rax, qword [rax + 8 * 0]
 15556 0000B353 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 15557 0000B356 50                      	push rax
 15558 0000B357 48B8-                   	mov rax, L_constants + 2135
 15558 0000B359 [5708000000000000] 
 15559 0000B361 50                      	push rax
 15560 0000B362 6A05                    	push 5	; arg count
 15561 0000B364 488B4510                	mov rax, ENV
 15562 0000B368 488B4008                	mov rax, qword [rax + 8 * 1]
 15563 0000B36C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15564 0000B36F 488B00                  	mov rax, qword [rax]
 15565 0000B372 803804                  	cmp byte [rax], T_closure
 15566 0000B375 0F85A1790000            	jne L_error_non_closure
 15567 0000B37B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15568 0000B37E FF5009                  	call SOB_CLOSURE_CODE(rax)
 15569 0000B381 EB4B                    	jmp .L_if_end_00f4
 15570                                  .L_if_else_00f4:
 15571                                  	; preparing a non-tail-call
 15572 0000B383 488B4520                	mov rax, PARAM(0)	; param len1
 15573 0000B387 50                      	push rax
 15574 0000B388 488B4510                	mov rax, ENV
 15575 0000B38C 488B00                  	mov rax, qword [rax + 8 * 0]
 15576 0000B38F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 15577 0000B392 50                      	push rax
 15578 0000B393 488B4528                	mov rax, PARAM(1)	; param len2
 15579 0000B397 50                      	push rax
 15580 0000B398 488B4510                	mov rax, ENV
 15581 0000B39C 488B00                  	mov rax, qword [rax + 8 * 0]
 15582 0000B39F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 15583 0000B3A3 50                      	push rax
 15584 0000B3A4 48B8-                   	mov rax, L_constants + 2135
 15584 0000B3A6 [5708000000000000] 
 15585 0000B3AE 50                      	push rax
 15586 0000B3AF 6A05                    	push 5	; arg count
 15587 0000B3B1 488B4510                	mov rax, ENV
 15588 0000B3B5 488B4008                	mov rax, qword [rax + 8 * 1]
 15589 0000B3B9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15590 0000B3BC 488B00                  	mov rax, qword [rax]
 15591 0000B3BF 803804                  	cmp byte [rax], T_closure
 15592 0000B3C2 0F8554790000            	jne L_error_non_closure
 15593 0000B3C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15594 0000B3CB FF5009                  	call SOB_CLOSURE_CODE(rax)
 15595                                  .L_if_end_00f4:
 15596 0000B3CE C9                      	leave
 15597 0000B3CF C22000                  	ret AND_KILL_FRAME(2)
 15598                                  .L_lambda_simple_end_0131:	; new closure is in rax
 15599 0000B3D2 803804                  	cmp byte [rax], T_closure
 15600 0000B3D5 0F8541790000            	jne L_error_non_closure
 15601 0000B3DB FF7001                  	push SOB_CLOSURE_ENV(rax)
 15602 0000B3DE FF5009                  	call SOB_CLOSURE_CODE(rax)
 15603 0000B3E1 C9                      	leave
 15604 0000B3E2 C22000                  	ret AND_KILL_FRAME(2)
 15605                                  .L_lambda_simple_end_0130:	; new closure is in rax
 15606 0000B3E5 50                      	push rax
 15607 0000B3E6 6A01                    	push 1	; arg count
 15608 0000B3E8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15609 0000B3ED E8D3790000              	call malloc
 15610 0000B3F2 50                      	push rax
 15611 0000B3F3 BF08000000              	mov rdi, 8 * 1	; new rib
 15612 0000B3F8 E8C8790000              	call malloc
 15613 0000B3FD 50                      	push rax
 15614 0000B3FE BF18000000              	mov rdi, 8 * 3	; extended env
 15615 0000B403 E8BD790000              	call malloc
 15616 0000B408 488B7D10                	mov rdi, ENV
 15617 0000B40C BE00000000              	mov rsi, 0
 15618 0000B411 BA01000000              	mov rdx, 1
 15619                                  .L_lambda_simple_env_loop_0132:	; ext_env[i + 1] <-- env[i]
 15620 0000B416 4883FE02                	cmp rsi, 2
 15621 0000B41A 7410                    	je .L_lambda_simple_env_end_0132
 15622 0000B41C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15623 0000B420 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15624 0000B424 48FFC6                  	inc rsi
 15625 0000B427 48FFC2                  	inc rdx
 15626 0000B42A EBEA                    	jmp .L_lambda_simple_env_loop_0132
 15627                                  .L_lambda_simple_env_end_0132:
 15628 0000B42C 5B                      	pop rbx
 15629 0000B42D BE00000000              	mov rsi, 0
 15630                                  .L_lambda_simple_params_loop_0132:	; copy params
 15631 0000B432 4883FE01                	cmp rsi, 1
 15632 0000B436 740E                    	je .L_lambda_simple_params_end_0132
 15633 0000B438 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15634 0000B43D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15635 0000B441 48FFC6                  	inc rsi
 15636 0000B444 EBEC                    	jmp .L_lambda_simple_params_loop_0132
 15637                                  .L_lambda_simple_params_end_0132:
 15638 0000B446 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15639 0000B449 4889C3                  	mov rbx, rax
 15640 0000B44C 58                      	pop rax
 15641 0000B44D C60004                  	mov byte [rax], T_closure
 15642 0000B450 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15643 0000B454 48C74009[61B40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0132
 15644 0000B45C E948040000              	jmp .L_lambda_simple_end_0132
 15645                                  .L_lambda_simple_code_0132:	; lambda-simple body
 15646 0000B461 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15647 0000B467 740B                    	je .L_lambda_simple_arity_check_ok_0132
 15648 0000B469 FF742410                	push qword [rsp + 8 * 2]
 15649 0000B46D 6A01                    	push 1
 15650 0000B46F E90A790000              	jmp L_error_incorrect_arity_simple
 15651                                  .L_lambda_simple_arity_check_ok_0132:
 15652 0000B474 C8000000                	enter 0, 0
 15653                                  	; preparing a non-tail-call
 15654 0000B478 48B8-                   	mov rax, L_constants + 1993
 15654 0000B47A [C907000000000000] 
 15655 0000B482 50                      	push rax
 15656 0000B483 6A01                    	push 1	; arg count
 15657 0000B485 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15658 0000B48A E836790000              	call malloc
 15659 0000B48F 50                      	push rax
 15660 0000B490 BF08000000              	mov rdi, 8 * 1	; new rib
 15661 0000B495 E82B790000              	call malloc
 15662 0000B49A 50                      	push rax
 15663 0000B49B BF20000000              	mov rdi, 8 * 4	; extended env
 15664 0000B4A0 E820790000              	call malloc
 15665 0000B4A5 488B7D10                	mov rdi, ENV
 15666 0000B4A9 BE00000000              	mov rsi, 0
 15667 0000B4AE BA01000000              	mov rdx, 1
 15668                                  .L_lambda_simple_env_loop_0133:	; ext_env[i + 1] <-- env[i]
 15669 0000B4B3 4883FE03                	cmp rsi, 3
 15670 0000B4B7 7410                    	je .L_lambda_simple_env_end_0133
 15671 0000B4B9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15672 0000B4BD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15673 0000B4C1 48FFC6                  	inc rsi
 15674 0000B4C4 48FFC2                  	inc rdx
 15675 0000B4C7 EBEA                    	jmp .L_lambda_simple_env_loop_0133
 15676                                  .L_lambda_simple_env_end_0133:
 15677 0000B4C9 5B                      	pop rbx
 15678 0000B4CA BE00000000              	mov rsi, 0
 15679                                  .L_lambda_simple_params_loop_0133:	; copy params
 15680 0000B4CF 4883FE01                	cmp rsi, 1
 15681 0000B4D3 740E                    	je .L_lambda_simple_params_end_0133
 15682 0000B4D5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15683 0000B4DA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15684 0000B4DE 48FFC6                  	inc rsi
 15685 0000B4E1 EBEC                    	jmp .L_lambda_simple_params_loop_0133
 15686                                  .L_lambda_simple_params_end_0133:
 15687 0000B4E3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15688 0000B4E6 4889C3                  	mov rbx, rax
 15689 0000B4E9 58                      	pop rax
 15690 0000B4EA C60004                  	mov byte [rax], T_closure
 15691 0000B4ED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15692 0000B4F1 48C74009[FEB40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0133
 15693 0000B4F9 E998030000              	jmp .L_lambda_simple_end_0133
 15694                                  .L_lambda_simple_code_0133:	; lambda-simple body
 15695 0000B4FE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15696 0000B504 740B                    	je .L_lambda_simple_arity_check_ok_0133
 15697 0000B506 FF742410                	push qword [rsp + 8 * 2]
 15698 0000B50A 6A01                    	push 1
 15699 0000B50C E96D780000              	jmp L_error_incorrect_arity_simple
 15700                                  .L_lambda_simple_arity_check_ok_0133:
 15701 0000B511 C8000000                	enter 0, 0
 15702 0000B515 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 15703 0000B519 488903                  	mov qword [rbx], rax
 15704                                  
 15705 0000B51C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15706 0000B521 E89F780000              	call malloc
 15707 0000B526 50                      	push rax
 15708 0000B527 BF08000000              	mov rdi, 8 * 1	; new rib
 15709 0000B52C E894780000              	call malloc
 15710 0000B531 50                      	push rax
 15711 0000B532 BF28000000              	mov rdi, 8 * 5	; extended env
 15712 0000B537 E889780000              	call malloc
 15713 0000B53C 488B7D10                	mov rdi, ENV
 15714 0000B540 BE00000000              	mov rsi, 0
 15715 0000B545 BA01000000              	mov rdx, 1
 15716                                  .L_lambda_simple_env_loop_0134:	; ext_env[i + 1] <-- env[i]
 15717 0000B54A 4883FE04                	cmp rsi, 4
 15718 0000B54E 7410                    	je .L_lambda_simple_env_end_0134
 15719 0000B550 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15720 0000B554 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15721 0000B558 48FFC6                  	inc rsi
 15722 0000B55B 48FFC2                  	inc rdx
 15723 0000B55E EBEA                    	jmp .L_lambda_simple_env_loop_0134
 15724                                  .L_lambda_simple_env_end_0134:
 15725 0000B560 5B                      	pop rbx
 15726 0000B561 BE00000000              	mov rsi, 0
 15727                                  .L_lambda_simple_params_loop_0134:	; copy params
 15728 0000B566 4883FE01                	cmp rsi, 1
 15729 0000B56A 740E                    	je .L_lambda_simple_params_end_0134
 15730 0000B56C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15731 0000B571 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15732 0000B575 48FFC6                  	inc rsi
 15733 0000B578 EBEC                    	jmp .L_lambda_simple_params_loop_0134
 15734                                  .L_lambda_simple_params_end_0134:
 15735 0000B57A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15736 0000B57D 4889C3                  	mov rbx, rax
 15737 0000B580 58                      	pop rax
 15738 0000B581 C60004                  	mov byte [rax], T_closure
 15739 0000B584 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15740 0000B588 48C74009[95B50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0134
 15741 0000B590 E919010000              	jmp .L_lambda_simple_end_0134
 15742                                  .L_lambda_simple_code_0134:	; lambda-simple body
 15743 0000B595 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15744 0000B59B 740B                    	je .L_lambda_simple_arity_check_ok_0134
 15745 0000B59D FF742410                	push qword [rsp + 8 * 2]
 15746 0000B5A1 6A02                    	push 2
 15747 0000B5A3 E9D6770000              	jmp L_error_incorrect_arity_simple
 15748                                  .L_lambda_simple_arity_check_ok_0134:
 15749 0000B5A8 C8000000                	enter 0, 0
 15750                                  	; preparing a non-tail-call
 15751 0000B5AC 488B4528                	mov rax, PARAM(1)	; param strs
 15752 0000B5B0 50                      	push rax
 15753 0000B5B1 6A01                    	push 1	; arg count
 15754 0000B5B3 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 15755 0000B5BB 803805                  	cmp byte [rax], T_undefined
 15756 0000B5BE 0F84D4760000            	je L_error_fvar_undefined
 15757 0000B5C4 803804                  	cmp byte [rax], T_closure
 15758 0000B5C7 0F854F770000            	jne L_error_non_closure
 15759 0000B5CD FF7001                  	push SOB_CLOSURE_ENV(rax)
 15760 0000B5D0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15761 0000B5D3 483D[02000000]          	cmp rax, sob_boolean_false
 15762 0000B5D9 0F85CB000000            	jne .L_or_end_001d
 15763                                  	; preparing a non-tail-call
 15764                                  	; preparing a non-tail-call
 15765 0000B5DF 488B4528                	mov rax, PARAM(1)	; param strs
 15766 0000B5E3 50                      	push rax
 15767 0000B5E4 6A01                    	push 1	; arg count
 15768 0000B5E6 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 15769 0000B5EE 803805                  	cmp byte [rax], T_undefined
 15770 0000B5F1 0F84A1760000            	je L_error_fvar_undefined
 15771 0000B5F7 803804                  	cmp byte [rax], T_closure
 15772 0000B5FA 0F851C770000            	jne L_error_non_closure
 15773 0000B600 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15774 0000B603 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15775 0000B606 50                      	push rax
 15776 0000B607 488B4520                	mov rax, PARAM(0)	; param str
 15777 0000B60B 50                      	push rax
 15778 0000B60C 6A02                    	push 2	; arg count
 15779 0000B60E 488B4510                	mov rax, ENV
 15780 0000B612 488B4008                	mov rax, qword [rax + 8 * 1]
 15781 0000B616 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<?
 15782 0000B619 803804                  	cmp byte [rax], T_closure
 15783 0000B61C 0F85FA760000            	jne L_error_non_closure
 15784 0000B622 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15785 0000B625 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15786 0000B628 483D[02000000]          	cmp rax, sob_boolean_false
 15787 0000B62E 7470                    	je .L_if_else_00f5
 15788                                  	; preparing a non-tail-call
 15789                                  	; preparing a non-tail-call
 15790 0000B630 488B4528                	mov rax, PARAM(1)	; param strs
 15791 0000B634 50                      	push rax
 15792 0000B635 6A01                    	push 1	; arg count
 15793 0000B637 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 15794 0000B63F 803805                  	cmp byte [rax], T_undefined
 15795 0000B642 0F8450760000            	je L_error_fvar_undefined
 15796 0000B648 803804                  	cmp byte [rax], T_closure
 15797 0000B64B 0F85CB760000            	jne L_error_non_closure
 15798 0000B651 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15799 0000B654 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15800 0000B657 50                      	push rax
 15801                                  	; preparing a non-tail-call
 15802 0000B658 488B4528                	mov rax, PARAM(1)	; param strs
 15803 0000B65C 50                      	push rax
 15804 0000B65D 6A01                    	push 1	; arg count
 15805 0000B65F 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 15806 0000B667 803805                  	cmp byte [rax], T_undefined
 15807 0000B66A 0F8428760000            	je L_error_fvar_undefined
 15808 0000B670 803804                  	cmp byte [rax], T_closure
 15809 0000B673 0F85A3760000            	jne L_error_non_closure
 15810 0000B679 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15811 0000B67C FF5009                  	call SOB_CLOSURE_CODE(rax)
 15812 0000B67F 50                      	push rax
 15813 0000B680 6A02                    	push 2	; arg count
 15814 0000B682 488B4510                	mov rax, ENV
 15815 0000B686 488B00                  	mov rax, qword [rax + 8 * 0]
 15816 0000B689 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15817 0000B68C 488B00                  	mov rax, qword [rax]
 15818 0000B68F 803804                  	cmp byte [rax], T_closure
 15819 0000B692 0F8584760000            	jne L_error_non_closure
 15820 0000B698 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15821 0000B69B FF5009                  	call SOB_CLOSURE_CODE(rax)
 15822 0000B69E EB0A                    	jmp .L_if_end_00f5
 15823                                  .L_if_else_00f5:
 15824 0000B6A0 48B8-                   	mov rax, L_constants + 2
 15824 0000B6A2 [0200000000000000] 
 15825                                  .L_if_end_00f5:
 15826                                  .L_or_end_001d:
 15827 0000B6AA C9                      	leave
 15828 0000B6AB C22000                  	ret AND_KILL_FRAME(2)
 15829                                  .L_lambda_simple_end_0134:	; new closure is in rax
 15830 0000B6AE 50                      	push rax
 15831 0000B6AF 488B4520                	mov rax, PARAM(0)	; param run
 15832 0000B6B3 8F00                    	pop qword [rax]
 15833 0000B6B5 48B8-                   	mov rax, sob_void
 15833 0000B6B7 [0000000000000000] 
 15834                                  
 15835 0000B6BF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15836 0000B6C4 E8FC760000              	call malloc
 15837 0000B6C9 50                      	push rax
 15838 0000B6CA BF08000000              	mov rdi, 8 * 1	; new rib
 15839 0000B6CF E8F1760000              	call malloc
 15840 0000B6D4 50                      	push rax
 15841 0000B6D5 BF28000000              	mov rdi, 8 * 5	; extended env
 15842 0000B6DA E8E6760000              	call malloc
 15843 0000B6DF 488B7D10                	mov rdi, ENV
 15844 0000B6E3 BE00000000              	mov rsi, 0
 15845 0000B6E8 BA01000000              	mov rdx, 1
 15846                                  .L_lambda_opt_env_loop_0029:	; ext_env[i + 1] <-- env[i]
 15847 0000B6ED 4883FE04                	cmp rsi, 4
 15848 0000B6F1 7410                    	je .L_lambda_opt_env_end_0029
 15849 0000B6F3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15850 0000B6F7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15851 0000B6FB 48FFC6                  	inc rsi
 15852 0000B6FE 48FFC2                  	inc rdx
 15853 0000B701 EBEA                    	jmp .L_lambda_opt_env_loop_0029
 15854                                  .L_lambda_opt_env_end_0029:
 15855 0000B703 5B                      	pop rbx
 15856 0000B704 BE00000000              	mov rsi, 0
 15857                                  .L_lambda_opt_params_loop_0029:	; copy params
 15858 0000B709 4883FE01                	cmp rsi, 1
 15859 0000B70D 740E                    	je .L_lambda_opt_params_end_0029
 15860 0000B70F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15861 0000B714 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15862 0000B718 48FFC6                  	inc rsi
 15863 0000B71B EBEC                    	jmp .L_lambda_opt_params_loop_0029
 15864                                  .L_lambda_opt_params_end_0029:
 15865 0000B71D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15866 0000B720 4889C3                  	mov rbx, rax
 15867 0000B723 58                      	pop rax
 15868 0000B724 C60004                  	mov byte [rax], T_closure
 15869 0000B727 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15870 0000B72B 48C74009[38B70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0029
 15871 0000B733 E95A010000              	jmp .L_lambda_opt_end_0029
 15872                                  .L_lambda_opt_code_0029:	; lambda-opt body
 15873 0000B738 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15874 0000B73E 740D                    	je .L_lambda_opt_arity_check_exact_0029
 15875 0000B740 7F7A                    	jg .L_lambda_opt_arity_check_more_0029
 15876 0000B742 FF742410                	push qword [rsp + 8 * 2]
 15877 0000B746 6A01                    	push 1
 15878 0000B748 E945760000              	jmp L_error_incorrect_arity_opt
 15879                                  .L_lambda_opt_arity_check_exact_0029:
 15880 0000B74D 4883EC08                	sub rsp, 8
 15881 0000B751 488B442408              	mov rax, qword[rsp + 8 *1]
 15882 0000B756 48890424                	mov qword[rsp], rax  
 15883 0000B75A 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 15884 0000B75F 4889442408              	mov qword[rsp + 8 * 1], rax
 15885 0000B764 B802000000              	mov rax, 2
 15886 0000B769 4889442410              	mov qword[rsp + 8 *2], rax
 15887 0000B76E 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 15888 0000B773 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 15889 0000B778 48B8-                   	mov rax, sob_nil
 15889 0000B77A [0100000000000000] 
 15890 0000B782 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 15891 0000B787 C8000000                	enter 0, 0
 15892                                  	; preparing a non-tail-call
 15893 0000B78B 488B4528                	mov rax, PARAM(1)	; param strs
 15894 0000B78F 50                      	push rax
 15895 0000B790 488B4520                	mov rax, PARAM(0)	; param str
 15896 0000B794 50                      	push rax
 15897 0000B795 6A02                    	push 2	; arg count
 15898 0000B797 488B4510                	mov rax, ENV
 15899 0000B79B 488B00                  	mov rax, qword [rax + 8 * 0]
 15900 0000B79E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15901 0000B7A1 488B00                  	mov rax, qword [rax]
 15902 0000B7A4 803804                  	cmp byte [rax], T_closure
 15903 0000B7A7 0F856F750000            	jne L_error_non_closure
 15904 0000B7AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 15905 0000B7B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15906 0000B7B3 C9                      	leave
 15907 0000B7B4 C22000                  	ret AND_KILL_FRAME(2)
 15908 0000B7B7 E9D6000000              	jmp .L_lambda_opt_end_0029	; new closure is in rax
 15909                                  .L_lambda_opt_arity_check_more_0029:
 15910 0000B7BC 488B442410              	mov rax, qword[rsp + 2 * 8]
 15911 0000B7C1 4889C7                  	mov rdi, rax
 15912 0000B7C4 49B9-                   	mov r9, sob_nil
 15912 0000B7C6 [0100000000000000] 
 15913 0000B7CE 4C8B442410              	mov r8, qword[rsp+2*8]
 15914                                  .L_lambda_opt_stack_shrink_loop_0029:
 15915 0000B7D3 4983F801                	cmp r8, 1
 15916 0000B7D7 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0029
 15917 0000B7D9 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 15918 0000B7DE BF11000000              	mov rdi, 1+8+8	;for pair
 15919 0000B7E3 E8DD750000              	call malloc	 ;to create the pair in the stack
 15920 0000B7E8 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 15921 0000B7EB 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 15922 0000B7EF 4C894809                 	mov qword[rax+1+8],r9
 15923 0000B7F3 4989C1                  	mov r9 , rax	 ; for the recursion 
 15924 0000B7F6 49FFC8                  	dec r8
 15925 0000B7F9 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0029
 15926                                  .L_lambda_opt_stack_shrink_loop_exit_0029:
 15927 0000B7FB 488B442410              	mov rax, qword[rsp + 2 * 8]
 15928 0000B800 BF02000000              	mov rdi, 2
 15929 0000B805 4829F8                  	sub rax, rdi
 15930 0000B808 4889C7                  	mov rdi, rax
 15931 0000B80B 486BC008                	imul rax,8
 15932 0000B80F 4801C4                  	add rsp, rax
 15933 0000B812 4889E0                  	mov rax, rsp
 15934 0000B815 4989F8                  	mov r8, rdi
 15935 0000B818 4D6BC008                	imul r8, 8
 15936 0000B81C 4C29C0                  	sub rax, r8
 15937 0000B81F 4989C2                  	mov r10, rax	; holds the original ret in the stack
 15938 0000B822 4983C218                	add r10, 8*3
 15939 0000B826 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 15940 0000B82A 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 15941 0000B82D 4D6BC008                	imul r8,8
 15942 0000B831 4C01C0                  	add rax, r8
 15943 0000B834 4C8908                  	mov qword[rax] ,r9
 15944 0000B837 4D89D0                   	mov r8, r10
 15945 0000B83A 4983C000                	add r8, 8 * 0
 15946 0000B83E 4D8B08                  	mov r9,qword[r8]
 15947 0000B841 4D890CF8                	mov qword [r8 + rdi * 8], r9
 15948 0000B845 4983EA18                	sub r10, 8*3
 15949 0000B849 48C744241002000000      	mov qword [rsp+2*8], 2
 15950 0000B852 498B4208                	mov rax, qword[r10 + 1 * 8]
 15951 0000B856 4889442408              	mov qword[rsp + 1*8] ,rax
 15952 0000B85B 498B02                  	mov rax, qword[r10]
 15953 0000B85E 48890424                	mov qword[rsp], rax
 15954 0000B862 C8000000                	enter 0, 0
 15955                                  	; preparing a non-tail-call
 15956 0000B866 488B4528                	mov rax, PARAM(1)	; param strs
 15957 0000B86A 50                      	push rax
 15958 0000B86B 488B4520                	mov rax, PARAM(0)	; param str
 15959 0000B86F 50                      	push rax
 15960 0000B870 6A02                    	push 2	; arg count
 15961 0000B872 488B4510                	mov rax, ENV
 15962 0000B876 488B00                  	mov rax, qword [rax + 8 * 0]
 15963 0000B879 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15964 0000B87C 488B00                  	mov rax, qword [rax]
 15965 0000B87F 803804                  	cmp byte [rax], T_closure
 15966 0000B882 0F8594740000            	jne L_error_non_closure
 15967 0000B888 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15968 0000B88B FF5009                  	call SOB_CLOSURE_CODE(rax)
 15969 0000B88E C9                      	leave
 15970 0000B88F C22000                  	ret AND_KILL_FRAME(2)
 15971                                  .L_lambda_opt_end_0029:	; new closure is in rax
 15972 0000B892 C9                      	leave
 15973 0000B893 C21800                  	ret AND_KILL_FRAME(1)
 15974                                  .L_lambda_simple_end_0133:	; new closure is in rax
 15975 0000B896 803804                  	cmp byte [rax], T_closure
 15976 0000B899 0F857D740000            	jne L_error_non_closure
 15977 0000B89F FF7001                  	push SOB_CLOSURE_ENV(rax)
 15978 0000B8A2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15979 0000B8A5 C9                      	leave
 15980 0000B8A6 C21800                  	ret AND_KILL_FRAME(1)
 15981                                  .L_lambda_simple_end_0132:	; new closure is in rax
 15982 0000B8A9 803804                  	cmp byte [rax], T_closure
 15983 0000B8AC 0F856A740000            	jne L_error_non_closure
 15984 0000B8B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15985 0000B8B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15986 0000B8B8 C9                      	leave
 15987 0000B8B9 C21800                  	ret AND_KILL_FRAME(1)
 15988                                  .L_lambda_simple_end_012e:	; new closure is in rax
 15989 0000B8BC 803804                  	cmp byte [rax], T_closure
 15990 0000B8BF 0F8557740000            	jne L_error_non_closure
 15991 0000B8C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15992 0000B8C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15993 0000B8CB C9                      	leave
 15994 0000B8CC C22000                  	ret AND_KILL_FRAME(2)
 15995                                  .L_lambda_simple_end_012d:	; new closure is in rax
 15996 0000B8CF 50                      	push rax
 15997 0000B8D0 6A01                    	push 1	; arg count
 15998 0000B8D2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15999 0000B8D7 E8E9740000              	call malloc
 16000 0000B8DC 50                      	push rax
 16001 0000B8DD BF00000000              	mov rdi, 8 * 0	; new rib
 16002 0000B8E2 E8DE740000              	call malloc
 16003 0000B8E7 50                      	push rax
 16004 0000B8E8 BF08000000              	mov rdi, 8 * 1	; extended env
 16005 0000B8ED E8D3740000              	call malloc
 16006 0000B8F2 488B7D10                	mov rdi, ENV
 16007 0000B8F6 BE00000000              	mov rsi, 0
 16008 0000B8FB BA01000000              	mov rdx, 1
 16009                                  .L_lambda_simple_env_loop_0135:	; ext_env[i + 1] <-- env[i]
 16010 0000B900 4883FE00                	cmp rsi, 0
 16011 0000B904 7410                    	je .L_lambda_simple_env_end_0135
 16012 0000B906 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16013 0000B90A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16014 0000B90E 48FFC6                  	inc rsi
 16015 0000B911 48FFC2                  	inc rdx
 16016 0000B914 EBEA                    	jmp .L_lambda_simple_env_loop_0135
 16017                                  .L_lambda_simple_env_end_0135:
 16018 0000B916 5B                      	pop rbx
 16019 0000B917 BE00000000              	mov rsi, 0
 16020                                  .L_lambda_simple_params_loop_0135:	; copy params
 16021 0000B91C 4883FE00                	cmp rsi, 0
 16022 0000B920 740E                    	je .L_lambda_simple_params_end_0135
 16023 0000B922 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16024 0000B927 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16025 0000B92B 48FFC6                  	inc rsi
 16026 0000B92E EBEC                    	jmp .L_lambda_simple_params_loop_0135
 16027                                  .L_lambda_simple_params_end_0135:
 16028 0000B930 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16029 0000B933 4889C3                  	mov rbx, rax
 16030 0000B936 58                      	pop rax
 16031 0000B937 C60004                  	mov byte [rax], T_closure
 16032 0000B93A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16033 0000B93E 48C74009[4BB90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0135
 16034 0000B946 E947010000              	jmp .L_lambda_simple_end_0135
 16035                                  .L_lambda_simple_code_0135:	; lambda-simple body
 16036 0000B94B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16037 0000B951 740B                    	je .L_lambda_simple_arity_check_ok_0135
 16038 0000B953 FF742410                	push qword [rsp + 8 * 2]
 16039 0000B957 6A01                    	push 1
 16040 0000B959 E920740000              	jmp L_error_incorrect_arity_simple
 16041                                  .L_lambda_simple_arity_check_ok_0135:
 16042 0000B95E C8000000                	enter 0, 0
 16043                                  	; preparing a non-tail-call
 16044 0000B962 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 16045 0000B96A 803805                  	cmp byte [rax], T_undefined
 16046 0000B96D 0F8425730000            	je L_error_fvar_undefined
 16047 0000B973 50                      	push rax
 16048 0000B974 488B0425[AF120000]      	mov rax, qword [free_var_74]	; free var char<?
 16049 0000B97C 803805                  	cmp byte [rax], T_undefined
 16050 0000B97F 0F8413730000            	je L_error_fvar_undefined
 16051 0000B985 50                      	push rax
 16052 0000B986 6A02                    	push 2	; arg count
 16053 0000B988 488B4520                	mov rax, PARAM(0)	; param make-string<?
 16054 0000B98C 803804                  	cmp byte [rax], T_closure
 16055 0000B98F 0F8587730000            	jne L_error_non_closure
 16056 0000B995 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16057 0000B998 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16058 0000B99B 48890425[AB160000]      	mov qword [free_var_134], rax
 16059 0000B9A3 48B8-                   	mov rax, sob_void
 16059 0000B9A5 [0000000000000000] 
 16060                                  
 16061                                  	; preparing a non-tail-call
 16062 0000B9AD 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 16063 0000B9B5 803805                  	cmp byte [rax], T_undefined
 16064 0000B9B8 0F84DA720000            	je L_error_fvar_undefined
 16065 0000B9BE 50                      	push rax
 16066 0000B9BF 488B0425[38120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 16067 0000B9C7 803805                  	cmp byte [rax], T_undefined
 16068 0000B9CA 0F84C8720000            	je L_error_fvar_undefined
 16069 0000B9D0 50                      	push rax
 16070 0000B9D1 6A02                    	push 2	; arg count
 16071 0000B9D3 488B4520                	mov rax, PARAM(0)	; param make-string<?
 16072 0000B9D7 803804                  	cmp byte [rax], T_closure
 16073 0000B9DA 0F853C730000            	jne L_error_non_closure
 16074 0000B9E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16075 0000B9E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16076 0000B9E6 48890425[DF150000]      	mov qword [free_var_122], rax
 16077 0000B9EE 48B8-                   	mov rax, sob_void
 16077 0000B9F0 [0000000000000000] 
 16078                                  
 16079                                  	; preparing a non-tail-call
 16080 0000B9F8 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 16081 0000BA00 803805                  	cmp byte [rax], T_undefined
 16082 0000BA03 0F848F720000            	je L_error_fvar_undefined
 16083 0000BA09 50                      	push rax
 16084 0000BA0A 488B0425[E2120000]      	mov rax, qword [free_var_77]	; free var char>?
 16085 0000BA12 803805                  	cmp byte [rax], T_undefined
 16086 0000BA15 0F847D720000            	je L_error_fvar_undefined
 16087 0000BA1B 50                      	push rax
 16088 0000BA1C 6A02                    	push 2	; arg count
 16089 0000BA1E 488B4520                	mov rax, PARAM(0)	; param make-string<?
 16090 0000BA22 803804                  	cmp byte [rax], T_closure
 16091 0000BA25 0F85F1720000            	jne L_error_non_closure
 16092 0000BA2B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16093 0000BA2E FF5009                  	call SOB_CLOSURE_CODE(rax)
 16094 0000BA31 48890425[DE160000]      	mov qword [free_var_137], rax
 16095 0000BA39 48B8-                   	mov rax, sob_void
 16095 0000BA3B [0000000000000000] 
 16096                                  
 16097                                  	; preparing a non-tail-call
 16098 0000BA43 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 16099 0000BA4B 803805                  	cmp byte [rax], T_undefined
 16100 0000BA4E 0F8444720000            	je L_error_fvar_undefined
 16101 0000BA54 50                      	push rax
 16102 0000BA55 488B0425[6B120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 16103 0000BA5D 803805                  	cmp byte [rax], T_undefined
 16104 0000BA60 0F8432720000            	je L_error_fvar_undefined
 16105 0000BA66 50                      	push rax
 16106 0000BA67 6A02                    	push 2	; arg count
 16107 0000BA69 488B4520                	mov rax, PARAM(0)	; param make-string<?
 16108 0000BA6D 803804                  	cmp byte [rax], T_closure
 16109 0000BA70 0F85A6720000            	jne L_error_non_closure
 16110 0000BA76 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16111 0000BA79 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16112 0000BA7C 48890425[12160000]      	mov qword [free_var_125], rax
 16113 0000BA84 48B8-                   	mov rax, sob_void
 16113 0000BA86 [0000000000000000] 
 16114 0000BA8E C9                      	leave
 16115 0000BA8F C21800                  	ret AND_KILL_FRAME(1)
 16116                                  .L_lambda_simple_end_0135:	; new closure is in rax
 16117 0000BA92 803804                  	cmp byte [rax], T_closure
 16118 0000BA95 0F8581720000            	jne L_error_non_closure
 16119 0000BA9B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16120 0000BA9E FF5009                  	call SOB_CLOSURE_CODE(rax)
 16121                                  
 16122 0000BAA1 4889C7                  	mov rdi, rax
 16123 0000BAA4 E871750000              	call print_sexpr_if_not_void
 16124                                  	; preparing a non-tail-call
 16125 0000BAA9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16126 0000BAAE E812730000              	call malloc
 16127 0000BAB3 50                      	push rax
 16128 0000BAB4 BF00000000              	mov rdi, 8 * 0	; new rib
 16129 0000BAB9 E807730000              	call malloc
 16130 0000BABE 50                      	push rax
 16131 0000BABF BF08000000              	mov rdi, 8 * 1	; extended env
 16132 0000BAC4 E8FC720000              	call malloc
 16133 0000BAC9 488B7D10                	mov rdi, ENV
 16134 0000BACD BE00000000              	mov rsi, 0
 16135 0000BAD2 BA01000000              	mov rdx, 1
 16136                                  .L_lambda_simple_env_loop_0136:	; ext_env[i + 1] <-- env[i]
 16137 0000BAD7 4883FE00                	cmp rsi, 0
 16138 0000BADB 7410                    	je .L_lambda_simple_env_end_0136
 16139 0000BADD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16140 0000BAE1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16141 0000BAE5 48FFC6                  	inc rsi
 16142 0000BAE8 48FFC2                  	inc rdx
 16143 0000BAEB EBEA                    	jmp .L_lambda_simple_env_loop_0136
 16144                                  .L_lambda_simple_env_end_0136:
 16145 0000BAED 5B                      	pop rbx
 16146 0000BAEE BE00000000              	mov rsi, 0
 16147                                  .L_lambda_simple_params_loop_0136:	; copy params
 16148 0000BAF3 4883FE00                	cmp rsi, 0
 16149 0000BAF7 740E                    	je .L_lambda_simple_params_end_0136
 16150 0000BAF9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16151 0000BAFE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16152 0000BB02 48FFC6                  	inc rsi
 16153 0000BB05 EBEC                    	jmp .L_lambda_simple_params_loop_0136
 16154                                  .L_lambda_simple_params_end_0136:
 16155 0000BB07 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16156 0000BB0A 4889C3                  	mov rbx, rax
 16157 0000BB0D 58                      	pop rax
 16158 0000BB0E C60004                  	mov byte [rax], T_closure
 16159 0000BB11 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16160 0000BB15 48C74009[22BB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0136
 16161 0000BB1D E98D0A0000              	jmp .L_lambda_simple_end_0136
 16162                                  .L_lambda_simple_code_0136:	; lambda-simple body
 16163 0000BB22 48837C241002            	cmp qword [rsp + 8 * 2], 2
 16164 0000BB28 740B                    	je .L_lambda_simple_arity_check_ok_0136
 16165 0000BB2A FF742410                	push qword [rsp + 8 * 2]
 16166 0000BB2E 6A02                    	push 2
 16167 0000BB30 E949720000              	jmp L_error_incorrect_arity_simple
 16168                                  .L_lambda_simple_arity_check_ok_0136:
 16169 0000BB35 C8000000                	enter 0, 0
 16170                                  	; preparing a non-tail-call
 16171 0000BB39 48B8-                   	mov rax, L_constants + 1993
 16171 0000BB3B [C907000000000000] 
 16172 0000BB43 50                      	push rax
 16173 0000BB44 6A01                    	push 1	; arg count
 16174 0000BB46 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16175 0000BB4B E875720000              	call malloc
 16176 0000BB50 50                      	push rax
 16177 0000BB51 BF10000000              	mov rdi, 8 * 2	; new rib
 16178 0000BB56 E86A720000              	call malloc
 16179 0000BB5B 50                      	push rax
 16180 0000BB5C BF10000000              	mov rdi, 8 * 2	; extended env
 16181 0000BB61 E85F720000              	call malloc
 16182 0000BB66 488B7D10                	mov rdi, ENV
 16183 0000BB6A BE00000000              	mov rsi, 0
 16184 0000BB6F BA01000000              	mov rdx, 1
 16185                                  .L_lambda_simple_env_loop_0137:	; ext_env[i + 1] <-- env[i]
 16186 0000BB74 4883FE01                	cmp rsi, 1
 16187 0000BB78 7410                    	je .L_lambda_simple_env_end_0137
 16188 0000BB7A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16189 0000BB7E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16190 0000BB82 48FFC6                  	inc rsi
 16191 0000BB85 48FFC2                  	inc rdx
 16192 0000BB88 EBEA                    	jmp .L_lambda_simple_env_loop_0137
 16193                                  .L_lambda_simple_env_end_0137:
 16194 0000BB8A 5B                      	pop rbx
 16195 0000BB8B BE00000000              	mov rsi, 0
 16196                                  .L_lambda_simple_params_loop_0137:	; copy params
 16197 0000BB90 4883FE02                	cmp rsi, 2
 16198 0000BB94 740E                    	je .L_lambda_simple_params_end_0137
 16199 0000BB96 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16200 0000BB9B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16201 0000BB9F 48FFC6                  	inc rsi
 16202 0000BBA2 EBEC                    	jmp .L_lambda_simple_params_loop_0137
 16203                                  .L_lambda_simple_params_end_0137:
 16204 0000BBA4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16205 0000BBA7 4889C3                  	mov rbx, rax
 16206 0000BBAA 58                      	pop rax
 16207 0000BBAB C60004                  	mov byte [rax], T_closure
 16208 0000BBAE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16209 0000BBB2 48C74009[BFBB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0137
 16210 0000BBBA E9DD090000              	jmp .L_lambda_simple_end_0137
 16211                                  .L_lambda_simple_code_0137:	; lambda-simple body
 16212 0000BBBF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16213 0000BBC5 740B                    	je .L_lambda_simple_arity_check_ok_0137
 16214 0000BBC7 FF742410                	push qword [rsp + 8 * 2]
 16215 0000BBCB 6A01                    	push 1
 16216 0000BBCD E9AC710000              	jmp L_error_incorrect_arity_simple
 16217                                  .L_lambda_simple_arity_check_ok_0137:
 16218 0000BBD2 C8000000                	enter 0, 0
 16219 0000BBD6 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 16220 0000BBDA 488903                  	mov qword [rbx], rax
 16221                                  
 16222 0000BBDD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16223 0000BBE2 E8DE710000              	call malloc
 16224 0000BBE7 50                      	push rax
 16225 0000BBE8 BF08000000              	mov rdi, 8 * 1	; new rib
 16226 0000BBED E8D3710000              	call malloc
 16227 0000BBF2 50                      	push rax
 16228 0000BBF3 BF18000000              	mov rdi, 8 * 3	; extended env
 16229 0000BBF8 E8C8710000              	call malloc
 16230 0000BBFD 488B7D10                	mov rdi, ENV
 16231 0000BC01 BE00000000              	mov rsi, 0
 16232 0000BC06 BA01000000              	mov rdx, 1
 16233                                  .L_lambda_simple_env_loop_0138:	; ext_env[i + 1] <-- env[i]
 16234 0000BC0B 4883FE02                	cmp rsi, 2
 16235 0000BC0F 7410                    	je .L_lambda_simple_env_end_0138
 16236 0000BC11 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16237 0000BC15 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16238 0000BC19 48FFC6                  	inc rsi
 16239 0000BC1C 48FFC2                  	inc rdx
 16240 0000BC1F EBEA                    	jmp .L_lambda_simple_env_loop_0138
 16241                                  .L_lambda_simple_env_end_0138:
 16242 0000BC21 5B                      	pop rbx
 16243 0000BC22 BE00000000              	mov rsi, 0
 16244                                  .L_lambda_simple_params_loop_0138:	; copy params
 16245 0000BC27 4883FE01                	cmp rsi, 1
 16246 0000BC2B 740E                    	je .L_lambda_simple_params_end_0138
 16247 0000BC2D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16248 0000BC32 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16249 0000BC36 48FFC6                  	inc rsi
 16250 0000BC39 EBEC                    	jmp .L_lambda_simple_params_loop_0138
 16251                                  .L_lambda_simple_params_end_0138:
 16252 0000BC3B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16253 0000BC3E 4889C3                  	mov rbx, rax
 16254 0000BC41 58                      	pop rax
 16255 0000BC42 C60004                  	mov byte [rax], T_closure
 16256 0000BC45 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16257 0000BC49 48C74009[56BC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0138
 16258 0000BC51 E909020000              	jmp .L_lambda_simple_end_0138
 16259                                  .L_lambda_simple_code_0138:	; lambda-simple body
 16260 0000BC56 48837C241005            	cmp qword [rsp + 8 * 2], 5
 16261 0000BC5C 740B                    	je .L_lambda_simple_arity_check_ok_0138
 16262 0000BC5E FF742410                	push qword [rsp + 8 * 2]
 16263 0000BC62 6A05                    	push 5
 16264 0000BC64 E915710000              	jmp L_error_incorrect_arity_simple
 16265                                  .L_lambda_simple_arity_check_ok_0138:
 16266 0000BC69 C8000000                	enter 0, 0
 16267                                  	; preparing a non-tail-call
 16268 0000BC6D 488B4530                	mov rax, PARAM(2)	; param len1
 16269 0000BC71 50                      	push rax
 16270 0000BC72 488B4520                	mov rax, PARAM(0)	; param i
 16271 0000BC76 50                      	push rax
 16272 0000BC77 6A02                    	push 2	; arg count
 16273 0000BC79 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 16274 0000BC81 803805                  	cmp byte [rax], T_undefined
 16275 0000BC84 0F840E700000            	je L_error_fvar_undefined
 16276 0000BC8A 803804                  	cmp byte [rax], T_closure
 16277 0000BC8D 0F8589700000            	jne L_error_non_closure
 16278 0000BC93 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16279 0000BC96 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16280 0000BC99 483D[02000000]          	cmp rax, sob_boolean_false
 16281 0000BC9F 0F85B6010000            	jne .L_or_end_001e
 16282                                  	; preparing a non-tail-call
 16283                                  	; preparing a non-tail-call
 16284 0000BCA5 488B4520                	mov rax, PARAM(0)	; param i
 16285 0000BCA9 50                      	push rax
 16286 0000BCAA 488B4538                	mov rax, PARAM(3)	; param str2
 16287 0000BCAE 50                      	push rax
 16288 0000BCAF 6A02                    	push 2	; arg count
 16289 0000BCB1 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 16290 0000BCB9 803805                  	cmp byte [rax], T_undefined
 16291 0000BCBC 0F84D66F0000            	je L_error_fvar_undefined
 16292 0000BCC2 803804                  	cmp byte [rax], T_closure
 16293 0000BCC5 0F8551700000            	jne L_error_non_closure
 16294 0000BCCB FF7001                  	push SOB_CLOSURE_ENV(rax)
 16295 0000BCCE FF5009                  	call SOB_CLOSURE_CODE(rax)
 16296 0000BCD1 50                      	push rax
 16297                                  	; preparing a non-tail-call
 16298 0000BCD2 488B4520                	mov rax, PARAM(0)	; param i
 16299 0000BCD6 50                      	push rax
 16300 0000BCD7 488B4528                	mov rax, PARAM(1)	; param str1
 16301 0000BCDB 50                      	push rax
 16302 0000BCDC 6A02                    	push 2	; arg count
 16303 0000BCDE 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 16304 0000BCE6 803805                  	cmp byte [rax], T_undefined
 16305 0000BCE9 0F84A96F0000            	je L_error_fvar_undefined
 16306 0000BCEF 803804                  	cmp byte [rax], T_closure
 16307 0000BCF2 0F8524700000            	jne L_error_non_closure
 16308 0000BCF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16309 0000BCFB FF5009                  	call SOB_CLOSURE_CODE(rax)
 16310 0000BCFE 50                      	push rax
 16311 0000BCFF 6A02                    	push 2	; arg count
 16312 0000BD01 488B4510                	mov rax, ENV
 16313 0000BD05 488B4008                	mov rax, qword [rax + 8 * 1]
 16314 0000BD09 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 16315 0000BD0C 803804                  	cmp byte [rax], T_closure
 16316 0000BD0F 0F8507700000            	jne L_error_non_closure
 16317 0000BD15 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16318 0000BD18 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16319 0000BD1B 483D[02000000]          	cmp rax, sob_boolean_false
 16320 0000BD21 0F8534010000            	jne .L_or_end_001e
 16321                                  	; preparing a non-tail-call
 16322 0000BD27 488B4530                	mov rax, PARAM(2)	; param len1
 16323 0000BD2B 50                      	push rax
 16324 0000BD2C 488B4520                	mov rax, PARAM(0)	; param i
 16325 0000BD30 50                      	push rax
 16326 0000BD31 6A02                    	push 2	; arg count
 16327 0000BD33 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 16328 0000BD3B 803805                  	cmp byte [rax], T_undefined
 16329 0000BD3E 0F84546F0000            	je L_error_fvar_undefined
 16330 0000BD44 803804                  	cmp byte [rax], T_closure
 16331 0000BD47 0F85CF6F0000            	jne L_error_non_closure
 16332 0000BD4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16333 0000BD50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16334 0000BD53 483D[02000000]          	cmp rax, sob_boolean_false
 16335 0000BD59 0F84F2000000            	je .L_if_else_00f7
 16336                                  	; preparing a non-tail-call
 16337                                  	; preparing a non-tail-call
 16338 0000BD5F 488B4520                	mov rax, PARAM(0)	; param i
 16339 0000BD63 50                      	push rax
 16340 0000BD64 488B4538                	mov rax, PARAM(3)	; param str2
 16341 0000BD68 50                      	push rax
 16342 0000BD69 6A02                    	push 2	; arg count
 16343 0000BD6B 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 16344 0000BD73 803805                  	cmp byte [rax], T_undefined
 16345 0000BD76 0F841C6F0000            	je L_error_fvar_undefined
 16346 0000BD7C 803804                  	cmp byte [rax], T_closure
 16347 0000BD7F 0F85976F0000            	jne L_error_non_closure
 16348 0000BD85 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16349 0000BD88 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16350 0000BD8B 50                      	push rax
 16351                                  	; preparing a non-tail-call
 16352 0000BD8C 488B4520                	mov rax, PARAM(0)	; param i
 16353 0000BD90 50                      	push rax
 16354 0000BD91 488B4528                	mov rax, PARAM(1)	; param str1
 16355 0000BD95 50                      	push rax
 16356 0000BD96 6A02                    	push 2	; arg count
 16357 0000BD98 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 16358 0000BDA0 803805                  	cmp byte [rax], T_undefined
 16359 0000BDA3 0F84EF6E0000            	je L_error_fvar_undefined
 16360 0000BDA9 803804                  	cmp byte [rax], T_closure
 16361 0000BDAC 0F856A6F0000            	jne L_error_non_closure
 16362 0000BDB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16363 0000BDB5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16364 0000BDB8 50                      	push rax
 16365 0000BDB9 6A02                    	push 2	; arg count
 16366 0000BDBB 488B4510                	mov rax, ENV
 16367 0000BDBF 488B4008                	mov rax, qword [rax + 8 * 1]
 16368 0000BDC3 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 16369 0000BDC7 803804                  	cmp byte [rax], T_closure
 16370 0000BDCA 0F854C6F0000            	jne L_error_non_closure
 16371 0000BDD0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16372 0000BDD3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16373 0000BDD6 483D[02000000]          	cmp rax, sob_boolean_false
 16374 0000BDDC 7467                    	je .L_if_else_00f6
 16375                                  	; preparing a non-tail-call
 16376 0000BDDE 488B4540                	mov rax, PARAM(4)	; param len2
 16377 0000BDE2 50                      	push rax
 16378 0000BDE3 488B4538                	mov rax, PARAM(3)	; param str2
 16379 0000BDE7 50                      	push rax
 16380 0000BDE8 488B4530                	mov rax, PARAM(2)	; param len1
 16381 0000BDEC 50                      	push rax
 16382 0000BDED 488B4528                	mov rax, PARAM(1)	; param str1
 16383 0000BDF1 50                      	push rax
 16384                                  	; preparing a non-tail-call
 16385 0000BDF2 48B8-                   	mov rax, L_constants + 2270
 16385 0000BDF4 [DE08000000000000] 
 16386 0000BDFC 50                      	push rax
 16387 0000BDFD 488B4520                	mov rax, PARAM(0)	; param i
 16388 0000BE01 50                      	push rax
 16389 0000BE02 6A02                    	push 2	; arg count
 16390 0000BE04 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 16391 0000BE0C 803805                  	cmp byte [rax], T_undefined
 16392 0000BE0F 0F84836E0000            	je L_error_fvar_undefined
 16393 0000BE15 803804                  	cmp byte [rax], T_closure
 16394 0000BE18 0F85FE6E0000            	jne L_error_non_closure
 16395 0000BE1E FF7001                  	push SOB_CLOSURE_ENV(rax)
 16396 0000BE21 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16397 0000BE24 50                      	push rax
 16398 0000BE25 6A05                    	push 5	; arg count
 16399 0000BE27 488B4510                	mov rax, ENV
 16400 0000BE2B 488B00                  	mov rax, qword [rax + 8 * 0]
 16401 0000BE2E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 16402 0000BE31 488B00                  	mov rax, qword [rax]
 16403 0000BE34 803804                  	cmp byte [rax], T_closure
 16404 0000BE37 0F85DF6E0000            	jne L_error_non_closure
 16405 0000BE3D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16406 0000BE40 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16407 0000BE43 EB0A                    	jmp .L_if_end_00f6
 16408                                  .L_if_else_00f6:
 16409 0000BE45 48B8-                   	mov rax, L_constants + 2
 16409 0000BE47 [0200000000000000] 
 16410                                  .L_if_end_00f6:
 16411 0000BE4F EB0A                    	jmp .L_if_end_00f7
 16412                                  .L_if_else_00f7:
 16413 0000BE51 48B8-                   	mov rax, L_constants + 2
 16413 0000BE53 [0200000000000000] 
 16414                                  .L_if_end_00f7:
 16415                                  .L_or_end_001e:
 16416 0000BE5B C9                      	leave
 16417 0000BE5C C23800                  	ret AND_KILL_FRAME(5)
 16418                                  .L_lambda_simple_end_0138:	; new closure is in rax
 16419 0000BE5F 50                      	push rax
 16420 0000BE60 488B4520                	mov rax, PARAM(0)	; param run
 16421 0000BE64 8F00                    	pop qword [rax]
 16422 0000BE66 48B8-                   	mov rax, sob_void
 16422 0000BE68 [0000000000000000] 
 16423                                  
 16424                                  	; preparing a non-tail-call
 16425 0000BE70 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16426 0000BE75 E84B6F0000              	call malloc
 16427 0000BE7A 50                      	push rax
 16428 0000BE7B BF08000000              	mov rdi, 8 * 1	; new rib
 16429 0000BE80 E8406F0000              	call malloc
 16430 0000BE85 50                      	push rax
 16431 0000BE86 BF18000000              	mov rdi, 8 * 3	; extended env
 16432 0000BE8B E8356F0000              	call malloc
 16433 0000BE90 488B7D10                	mov rdi, ENV
 16434 0000BE94 BE00000000              	mov rsi, 0
 16435 0000BE99 BA01000000              	mov rdx, 1
 16436                                  .L_lambda_simple_env_loop_0139:	; ext_env[i + 1] <-- env[i]
 16437 0000BE9E 4883FE02                	cmp rsi, 2
 16438 0000BEA2 7410                    	je .L_lambda_simple_env_end_0139
 16439 0000BEA4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16440 0000BEA8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16441 0000BEAC 48FFC6                  	inc rsi
 16442 0000BEAF 48FFC2                  	inc rdx
 16443 0000BEB2 EBEA                    	jmp .L_lambda_simple_env_loop_0139
 16444                                  .L_lambda_simple_env_end_0139:
 16445 0000BEB4 5B                      	pop rbx
 16446 0000BEB5 BE00000000              	mov rsi, 0
 16447                                  .L_lambda_simple_params_loop_0139:	; copy params
 16448 0000BEBA 4883FE01                	cmp rsi, 1
 16449 0000BEBE 740E                    	je .L_lambda_simple_params_end_0139
 16450 0000BEC0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16451 0000BEC5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16452 0000BEC9 48FFC6                  	inc rsi
 16453 0000BECC EBEC                    	jmp .L_lambda_simple_params_loop_0139
 16454                                  .L_lambda_simple_params_end_0139:
 16455 0000BECE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16456 0000BED1 4889C3                  	mov rbx, rax
 16457 0000BED4 58                      	pop rax
 16458 0000BED5 C60004                  	mov byte [rax], T_closure
 16459 0000BED8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16460 0000BEDC 48C74009[E9BE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0139
 16461 0000BEE4 E9DC010000              	jmp .L_lambda_simple_end_0139
 16462                                  .L_lambda_simple_code_0139:	; lambda-simple body
 16463 0000BEE9 48837C241002            	cmp qword [rsp + 8 * 2], 2
 16464 0000BEEF 740B                    	je .L_lambda_simple_arity_check_ok_0139
 16465 0000BEF1 FF742410                	push qword [rsp + 8 * 2]
 16466 0000BEF5 6A02                    	push 2
 16467 0000BEF7 E9826E0000              	jmp L_error_incorrect_arity_simple
 16468                                  .L_lambda_simple_arity_check_ok_0139:
 16469 0000BEFC C8000000                	enter 0, 0
 16470                                  	; preparing a non-tail-call
 16471                                  	; preparing a non-tail-call
 16472 0000BF00 488B4528                	mov rax, PARAM(1)	; param str2
 16473 0000BF04 50                      	push rax
 16474 0000BF05 6A01                    	push 1	; arg count
 16475 0000BF07 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 16476 0000BF0F 803805                  	cmp byte [rax], T_undefined
 16477 0000BF12 0F84806D0000            	je L_error_fvar_undefined
 16478 0000BF18 803804                  	cmp byte [rax], T_closure
 16479 0000BF1B 0F85FB6D0000            	jne L_error_non_closure
 16480 0000BF21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16481 0000BF24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16482 0000BF27 50                      	push rax
 16483                                  	; preparing a non-tail-call
 16484 0000BF28 488B4520                	mov rax, PARAM(0)	; param str1
 16485 0000BF2C 50                      	push rax
 16486 0000BF2D 6A01                    	push 1	; arg count
 16487 0000BF2F 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 16488 0000BF37 803805                  	cmp byte [rax], T_undefined
 16489 0000BF3A 0F84586D0000            	je L_error_fvar_undefined
 16490 0000BF40 803804                  	cmp byte [rax], T_closure
 16491 0000BF43 0F85D36D0000            	jne L_error_non_closure
 16492 0000BF49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16493 0000BF4C FF5009                  	call SOB_CLOSURE_CODE(rax)
 16494 0000BF4F 50                      	push rax
 16495 0000BF50 6A02                    	push 2	; arg count
 16496 0000BF52 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16497 0000BF57 E8696E0000              	call malloc
 16498 0000BF5C 50                      	push rax
 16499 0000BF5D BF10000000              	mov rdi, 8 * 2	; new rib
 16500 0000BF62 E85E6E0000              	call malloc
 16501 0000BF67 50                      	push rax
 16502 0000BF68 BF20000000              	mov rdi, 8 * 4	; extended env
 16503 0000BF6D E8536E0000              	call malloc
 16504 0000BF72 488B7D10                	mov rdi, ENV
 16505 0000BF76 BE00000000              	mov rsi, 0
 16506 0000BF7B BA01000000              	mov rdx, 1
 16507                                  .L_lambda_simple_env_loop_013a:	; ext_env[i + 1] <-- env[i]
 16508 0000BF80 4883FE03                	cmp rsi, 3
 16509 0000BF84 7410                    	je .L_lambda_simple_env_end_013a
 16510 0000BF86 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16511 0000BF8A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16512 0000BF8E 48FFC6                  	inc rsi
 16513 0000BF91 48FFC2                  	inc rdx
 16514 0000BF94 EBEA                    	jmp .L_lambda_simple_env_loop_013a
 16515                                  .L_lambda_simple_env_end_013a:
 16516 0000BF96 5B                      	pop rbx
 16517 0000BF97 BE00000000              	mov rsi, 0
 16518                                  .L_lambda_simple_params_loop_013a:	; copy params
 16519 0000BF9C 4883FE02                	cmp rsi, 2
 16520 0000BFA0 740E                    	je .L_lambda_simple_params_end_013a
 16521 0000BFA2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16522 0000BFA7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16523 0000BFAB 48FFC6                  	inc rsi
 16524 0000BFAE EBEC                    	jmp .L_lambda_simple_params_loop_013a
 16525                                  .L_lambda_simple_params_end_013a:
 16526 0000BFB0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16527 0000BFB3 4889C3                  	mov rbx, rax
 16528 0000BFB6 58                      	pop rax
 16529 0000BFB7 C60004                  	mov byte [rax], T_closure
 16530 0000BFBA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16531 0000BFBE 48C74009[CBBF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_013a
 16532 0000BFC6 E9E7000000              	jmp .L_lambda_simple_end_013a
 16533                                  .L_lambda_simple_code_013a:	; lambda-simple body
 16534 0000BFCB 48837C241002            	cmp qword [rsp + 8 * 2], 2
 16535 0000BFD1 740B                    	je .L_lambda_simple_arity_check_ok_013a
 16536 0000BFD3 FF742410                	push qword [rsp + 8 * 2]
 16537 0000BFD7 6A02                    	push 2
 16538 0000BFD9 E9A06D0000              	jmp L_error_incorrect_arity_simple
 16539                                  .L_lambda_simple_arity_check_ok_013a:
 16540 0000BFDE C8000000                	enter 0, 0
 16541                                  	; preparing a non-tail-call
 16542 0000BFE2 488B4528                	mov rax, PARAM(1)	; param len2
 16543 0000BFE6 50                      	push rax
 16544 0000BFE7 488B4520                	mov rax, PARAM(0)	; param len1
 16545 0000BFEB 50                      	push rax
 16546 0000BFEC 6A02                    	push 2	; arg count
 16547 0000BFEE 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 16548 0000BFF6 803805                  	cmp byte [rax], T_undefined
 16549 0000BFF9 0F84996C0000            	je L_error_fvar_undefined
 16550 0000BFFF 803804                  	cmp byte [rax], T_closure
 16551 0000C002 0F85146D0000            	jne L_error_non_closure
 16552 0000C008 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16553 0000C00B FF5009                  	call SOB_CLOSURE_CODE(rax)
 16554 0000C00E 483D[02000000]          	cmp rax, sob_boolean_false
 16555 0000C014 744D                    	je .L_if_else_00f8
 16556                                  	; preparing a non-tail-call
 16557 0000C016 488B4528                	mov rax, PARAM(1)	; param len2
 16558 0000C01A 50                      	push rax
 16559 0000C01B 488B4510                	mov rax, ENV
 16560 0000C01F 488B00                  	mov rax, qword [rax + 8 * 0]
 16561 0000C022 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 16562 0000C026 50                      	push rax
 16563 0000C027 488B4520                	mov rax, PARAM(0)	; param len1
 16564 0000C02B 50                      	push rax
 16565 0000C02C 488B4510                	mov rax, ENV
 16566 0000C030 488B00                  	mov rax, qword [rax + 8 * 0]
 16567 0000C033 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 16568 0000C036 50                      	push rax
 16569 0000C037 48B8-                   	mov rax, L_constants + 2135
 16569 0000C039 [5708000000000000] 
 16570 0000C041 50                      	push rax
 16571 0000C042 6A05                    	push 5	; arg count
 16572 0000C044 488B4510                	mov rax, ENV
 16573 0000C048 488B4008                	mov rax, qword [rax + 8 * 1]
 16574 0000C04C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 16575 0000C04F 488B00                  	mov rax, qword [rax]
 16576 0000C052 803804                  	cmp byte [rax], T_closure
 16577 0000C055 0F85C16C0000            	jne L_error_non_closure
 16578 0000C05B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16579 0000C05E FF5009                  	call SOB_CLOSURE_CODE(rax)
 16580 0000C061 EB4B                    	jmp .L_if_end_00f8
 16581                                  .L_if_else_00f8:
 16582                                  	; preparing a non-tail-call
 16583 0000C063 488B4520                	mov rax, PARAM(0)	; param len1
 16584 0000C067 50                      	push rax
 16585 0000C068 488B4510                	mov rax, ENV
 16586 0000C06C 488B00                  	mov rax, qword [rax + 8 * 0]
 16587 0000C06F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 16588 0000C072 50                      	push rax
 16589 0000C073 488B4528                	mov rax, PARAM(1)	; param len2
 16590 0000C077 50                      	push rax
 16591 0000C078 488B4510                	mov rax, ENV
 16592 0000C07C 488B00                  	mov rax, qword [rax + 8 * 0]
 16593 0000C07F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 16594 0000C083 50                      	push rax
 16595 0000C084 48B8-                   	mov rax, L_constants + 2135
 16595 0000C086 [5708000000000000] 
 16596 0000C08E 50                      	push rax
 16597 0000C08F 6A05                    	push 5	; arg count
 16598 0000C091 488B4510                	mov rax, ENV
 16599 0000C095 488B4008                	mov rax, qword [rax + 8 * 1]
 16600 0000C099 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 16601 0000C09C 488B00                  	mov rax, qword [rax]
 16602 0000C09F 803804                  	cmp byte [rax], T_closure
 16603 0000C0A2 0F85746C0000            	jne L_error_non_closure
 16604 0000C0A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16605 0000C0AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 16606                                  .L_if_end_00f8:
 16607 0000C0AE C9                      	leave
 16608 0000C0AF C22000                  	ret AND_KILL_FRAME(2)
 16609                                  .L_lambda_simple_end_013a:	; new closure is in rax
 16610 0000C0B2 803804                  	cmp byte [rax], T_closure
 16611 0000C0B5 0F85616C0000            	jne L_error_non_closure
 16612 0000C0BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 16613 0000C0BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 16614 0000C0C1 C9                      	leave
 16615 0000C0C2 C22000                  	ret AND_KILL_FRAME(2)
 16616                                  .L_lambda_simple_end_0139:	; new closure is in rax
 16617 0000C0C5 50                      	push rax
 16618 0000C0C6 6A01                    	push 1	; arg count
 16619 0000C0C8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16620 0000C0CD E8F36C0000              	call malloc
 16621 0000C0D2 50                      	push rax
 16622 0000C0D3 BF08000000              	mov rdi, 8 * 1	; new rib
 16623 0000C0D8 E8E86C0000              	call malloc
 16624 0000C0DD 50                      	push rax
 16625 0000C0DE BF18000000              	mov rdi, 8 * 3	; extended env
 16626 0000C0E3 E8DD6C0000              	call malloc
 16627 0000C0E8 488B7D10                	mov rdi, ENV
 16628 0000C0EC BE00000000              	mov rsi, 0
 16629 0000C0F1 BA01000000              	mov rdx, 1
 16630                                  .L_lambda_simple_env_loop_013b:	; ext_env[i + 1] <-- env[i]
 16631 0000C0F6 4883FE02                	cmp rsi, 2
 16632 0000C0FA 7410                    	je .L_lambda_simple_env_end_013b
 16633 0000C0FC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16634 0000C100 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16635 0000C104 48FFC6                  	inc rsi
 16636 0000C107 48FFC2                  	inc rdx
 16637 0000C10A EBEA                    	jmp .L_lambda_simple_env_loop_013b
 16638                                  .L_lambda_simple_env_end_013b:
 16639 0000C10C 5B                      	pop rbx
 16640 0000C10D BE00000000              	mov rsi, 0
 16641                                  .L_lambda_simple_params_loop_013b:	; copy params
 16642 0000C112 4883FE01                	cmp rsi, 1
 16643 0000C116 740E                    	je .L_lambda_simple_params_end_013b
 16644 0000C118 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16645 0000C11D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16646 0000C121 48FFC6                  	inc rsi
 16647 0000C124 EBEC                    	jmp .L_lambda_simple_params_loop_013b
 16648                                  .L_lambda_simple_params_end_013b:
 16649 0000C126 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16650 0000C129 4889C3                  	mov rbx, rax
 16651 0000C12C 58                      	pop rax
 16652 0000C12D C60004                  	mov byte [rax], T_closure
 16653 0000C130 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16654 0000C134 48C74009[41C10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_013b
 16655 0000C13C E948040000              	jmp .L_lambda_simple_end_013b
 16656                                  .L_lambda_simple_code_013b:	; lambda-simple body
 16657 0000C141 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16658 0000C147 740B                    	je .L_lambda_simple_arity_check_ok_013b
 16659 0000C149 FF742410                	push qword [rsp + 8 * 2]
 16660 0000C14D 6A01                    	push 1
 16661 0000C14F E92A6C0000              	jmp L_error_incorrect_arity_simple
 16662                                  .L_lambda_simple_arity_check_ok_013b:
 16663 0000C154 C8000000                	enter 0, 0
 16664                                  	; preparing a non-tail-call
 16665 0000C158 48B8-                   	mov rax, L_constants + 1993
 16665 0000C15A [C907000000000000] 
 16666 0000C162 50                      	push rax
 16667 0000C163 6A01                    	push 1	; arg count
 16668 0000C165 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16669 0000C16A E8566C0000              	call malloc
 16670 0000C16F 50                      	push rax
 16671 0000C170 BF08000000              	mov rdi, 8 * 1	; new rib
 16672 0000C175 E84B6C0000              	call malloc
 16673 0000C17A 50                      	push rax
 16674 0000C17B BF20000000              	mov rdi, 8 * 4	; extended env
 16675 0000C180 E8406C0000              	call malloc
 16676 0000C185 488B7D10                	mov rdi, ENV
 16677 0000C189 BE00000000              	mov rsi, 0
 16678 0000C18E BA01000000              	mov rdx, 1
 16679                                  .L_lambda_simple_env_loop_013c:	; ext_env[i + 1] <-- env[i]
 16680 0000C193 4883FE03                	cmp rsi, 3
 16681 0000C197 7410                    	je .L_lambda_simple_env_end_013c
 16682 0000C199 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16683 0000C19D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16684 0000C1A1 48FFC6                  	inc rsi
 16685 0000C1A4 48FFC2                  	inc rdx
 16686 0000C1A7 EBEA                    	jmp .L_lambda_simple_env_loop_013c
 16687                                  .L_lambda_simple_env_end_013c:
 16688 0000C1A9 5B                      	pop rbx
 16689 0000C1AA BE00000000              	mov rsi, 0
 16690                                  .L_lambda_simple_params_loop_013c:	; copy params
 16691 0000C1AF 4883FE01                	cmp rsi, 1
 16692 0000C1B3 740E                    	je .L_lambda_simple_params_end_013c
 16693 0000C1B5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16694 0000C1BA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16695 0000C1BE 48FFC6                  	inc rsi
 16696 0000C1C1 EBEC                    	jmp .L_lambda_simple_params_loop_013c
 16697                                  .L_lambda_simple_params_end_013c:
 16698 0000C1C3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16699 0000C1C6 4889C3                  	mov rbx, rax
 16700 0000C1C9 58                      	pop rax
 16701 0000C1CA C60004                  	mov byte [rax], T_closure
 16702 0000C1CD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16703 0000C1D1 48C74009[DEC10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_013c
 16704 0000C1D9 E998030000              	jmp .L_lambda_simple_end_013c
 16705                                  .L_lambda_simple_code_013c:	; lambda-simple body
 16706 0000C1DE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16707 0000C1E4 740B                    	je .L_lambda_simple_arity_check_ok_013c
 16708 0000C1E6 FF742410                	push qword [rsp + 8 * 2]
 16709 0000C1EA 6A01                    	push 1
 16710 0000C1EC E98D6B0000              	jmp L_error_incorrect_arity_simple
 16711                                  .L_lambda_simple_arity_check_ok_013c:
 16712 0000C1F1 C8000000                	enter 0, 0
 16713 0000C1F5 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 16714 0000C1F9 488903                  	mov qword [rbx], rax
 16715                                  
 16716 0000C1FC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16717 0000C201 E8BF6B0000              	call malloc
 16718 0000C206 50                      	push rax
 16719 0000C207 BF08000000              	mov rdi, 8 * 1	; new rib
 16720 0000C20C E8B46B0000              	call malloc
 16721 0000C211 50                      	push rax
 16722 0000C212 BF28000000              	mov rdi, 8 * 5	; extended env
 16723 0000C217 E8A96B0000              	call malloc
 16724 0000C21C 488B7D10                	mov rdi, ENV
 16725 0000C220 BE00000000              	mov rsi, 0
 16726 0000C225 BA01000000              	mov rdx, 1
 16727                                  .L_lambda_simple_env_loop_013d:	; ext_env[i + 1] <-- env[i]
 16728 0000C22A 4883FE04                	cmp rsi, 4
 16729 0000C22E 7410                    	je .L_lambda_simple_env_end_013d
 16730 0000C230 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16731 0000C234 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16732 0000C238 48FFC6                  	inc rsi
 16733 0000C23B 48FFC2                  	inc rdx
 16734 0000C23E EBEA                    	jmp .L_lambda_simple_env_loop_013d
 16735                                  .L_lambda_simple_env_end_013d:
 16736 0000C240 5B                      	pop rbx
 16737 0000C241 BE00000000              	mov rsi, 0
 16738                                  .L_lambda_simple_params_loop_013d:	; copy params
 16739 0000C246 4883FE01                	cmp rsi, 1
 16740 0000C24A 740E                    	je .L_lambda_simple_params_end_013d
 16741 0000C24C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16742 0000C251 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16743 0000C255 48FFC6                  	inc rsi
 16744 0000C258 EBEC                    	jmp .L_lambda_simple_params_loop_013d
 16745                                  .L_lambda_simple_params_end_013d:
 16746 0000C25A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16747 0000C25D 4889C3                  	mov rbx, rax
 16748 0000C260 58                      	pop rax
 16749 0000C261 C60004                  	mov byte [rax], T_closure
 16750 0000C264 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16751 0000C268 48C74009[75C20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_013d
 16752 0000C270 E919010000              	jmp .L_lambda_simple_end_013d
 16753                                  .L_lambda_simple_code_013d:	; lambda-simple body
 16754 0000C275 48837C241002            	cmp qword [rsp + 8 * 2], 2
 16755 0000C27B 740B                    	je .L_lambda_simple_arity_check_ok_013d
 16756 0000C27D FF742410                	push qword [rsp + 8 * 2]
 16757 0000C281 6A02                    	push 2
 16758 0000C283 E9F66A0000              	jmp L_error_incorrect_arity_simple
 16759                                  .L_lambda_simple_arity_check_ok_013d:
 16760 0000C288 C8000000                	enter 0, 0
 16761                                  	; preparing a non-tail-call
 16762 0000C28C 488B4528                	mov rax, PARAM(1)	; param strs
 16763 0000C290 50                      	push rax
 16764 0000C291 6A01                    	push 1	; arg count
 16765 0000C293 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 16766 0000C29B 803805                  	cmp byte [rax], T_undefined
 16767 0000C29E 0F84F4690000            	je L_error_fvar_undefined
 16768 0000C2A4 803804                  	cmp byte [rax], T_closure
 16769 0000C2A7 0F856F6A0000            	jne L_error_non_closure
 16770 0000C2AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 16771 0000C2B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16772 0000C2B3 483D[02000000]          	cmp rax, sob_boolean_false
 16773 0000C2B9 0F85CB000000            	jne .L_or_end_001f
 16774                                  	; preparing a non-tail-call
 16775                                  	; preparing a non-tail-call
 16776 0000C2BF 488B4528                	mov rax, PARAM(1)	; param strs
 16777 0000C2C3 50                      	push rax
 16778 0000C2C4 6A01                    	push 1	; arg count
 16779 0000C2C6 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 16780 0000C2CE 803805                  	cmp byte [rax], T_undefined
 16781 0000C2D1 0F84C1690000            	je L_error_fvar_undefined
 16782 0000C2D7 803804                  	cmp byte [rax], T_closure
 16783 0000C2DA 0F853C6A0000            	jne L_error_non_closure
 16784 0000C2E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16785 0000C2E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16786 0000C2E6 50                      	push rax
 16787 0000C2E7 488B4520                	mov rax, PARAM(0)	; param str
 16788 0000C2EB 50                      	push rax
 16789 0000C2EC 6A02                    	push 2	; arg count
 16790 0000C2EE 488B4510                	mov rax, ENV
 16791 0000C2F2 488B4008                	mov rax, qword [rax + 8 * 1]
 16792 0000C2F6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<=?
 16793 0000C2F9 803804                  	cmp byte [rax], T_closure
 16794 0000C2FC 0F851A6A0000            	jne L_error_non_closure
 16795 0000C302 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16796 0000C305 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16797 0000C308 483D[02000000]          	cmp rax, sob_boolean_false
 16798 0000C30E 7470                    	je .L_if_else_00f9
 16799                                  	; preparing a non-tail-call
 16800                                  	; preparing a non-tail-call
 16801 0000C310 488B4528                	mov rax, PARAM(1)	; param strs
 16802 0000C314 50                      	push rax
 16803 0000C315 6A01                    	push 1	; arg count
 16804 0000C317 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 16805 0000C31F 803805                  	cmp byte [rax], T_undefined
 16806 0000C322 0F8470690000            	je L_error_fvar_undefined
 16807 0000C328 803804                  	cmp byte [rax], T_closure
 16808 0000C32B 0F85EB690000            	jne L_error_non_closure
 16809 0000C331 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16810 0000C334 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16811 0000C337 50                      	push rax
 16812                                  	; preparing a non-tail-call
 16813 0000C338 488B4528                	mov rax, PARAM(1)	; param strs
 16814 0000C33C 50                      	push rax
 16815 0000C33D 6A01                    	push 1	; arg count
 16816 0000C33F 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 16817 0000C347 803805                  	cmp byte [rax], T_undefined
 16818 0000C34A 0F8448690000            	je L_error_fvar_undefined
 16819 0000C350 803804                  	cmp byte [rax], T_closure
 16820 0000C353 0F85C3690000            	jne L_error_non_closure
 16821 0000C359 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16822 0000C35C FF5009                  	call SOB_CLOSURE_CODE(rax)
 16823 0000C35F 50                      	push rax
 16824 0000C360 6A02                    	push 2	; arg count
 16825 0000C362 488B4510                	mov rax, ENV
 16826 0000C366 488B00                  	mov rax, qword [rax + 8 * 0]
 16827 0000C369 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 16828 0000C36C 488B00                  	mov rax, qword [rax]
 16829 0000C36F 803804                  	cmp byte [rax], T_closure
 16830 0000C372 0F85A4690000            	jne L_error_non_closure
 16831 0000C378 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16832 0000C37B FF5009                  	call SOB_CLOSURE_CODE(rax)
 16833 0000C37E EB0A                    	jmp .L_if_end_00f9
 16834                                  .L_if_else_00f9:
 16835 0000C380 48B8-                   	mov rax, L_constants + 2
 16835 0000C382 [0200000000000000] 
 16836                                  .L_if_end_00f9:
 16837                                  .L_or_end_001f:
 16838 0000C38A C9                      	leave
 16839 0000C38B C22000                  	ret AND_KILL_FRAME(2)
 16840                                  .L_lambda_simple_end_013d:	; new closure is in rax
 16841 0000C38E 50                      	push rax
 16842 0000C38F 488B4520                	mov rax, PARAM(0)	; param run
 16843 0000C393 8F00                    	pop qword [rax]
 16844 0000C395 48B8-                   	mov rax, sob_void
 16844 0000C397 [0000000000000000] 
 16845                                  
 16846 0000C39F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16847 0000C3A4 E81C6A0000              	call malloc
 16848 0000C3A9 50                      	push rax
 16849 0000C3AA BF08000000              	mov rdi, 8 * 1	; new rib
 16850 0000C3AF E8116A0000              	call malloc
 16851 0000C3B4 50                      	push rax
 16852 0000C3B5 BF28000000              	mov rdi, 8 * 5	; extended env
 16853 0000C3BA E8066A0000              	call malloc
 16854 0000C3BF 488B7D10                	mov rdi, ENV
 16855 0000C3C3 BE00000000              	mov rsi, 0
 16856 0000C3C8 BA01000000              	mov rdx, 1
 16857                                  .L_lambda_opt_env_loop_002a:	; ext_env[i + 1] <-- env[i]
 16858 0000C3CD 4883FE04                	cmp rsi, 4
 16859 0000C3D1 7410                    	je .L_lambda_opt_env_end_002a
 16860 0000C3D3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16861 0000C3D7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16862 0000C3DB 48FFC6                  	inc rsi
 16863 0000C3DE 48FFC2                  	inc rdx
 16864 0000C3E1 EBEA                    	jmp .L_lambda_opt_env_loop_002a
 16865                                  .L_lambda_opt_env_end_002a:
 16866 0000C3E3 5B                      	pop rbx
 16867 0000C3E4 BE00000000              	mov rsi, 0
 16868                                  .L_lambda_opt_params_loop_002a:	; copy params
 16869 0000C3E9 4883FE01                	cmp rsi, 1
 16870 0000C3ED 740E                    	je .L_lambda_opt_params_end_002a
 16871 0000C3EF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16872 0000C3F4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16873 0000C3F8 48FFC6                  	inc rsi
 16874 0000C3FB EBEC                    	jmp .L_lambda_opt_params_loop_002a
 16875                                  .L_lambda_opt_params_end_002a:
 16876 0000C3FD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16877 0000C400 4889C3                  	mov rbx, rax
 16878 0000C403 58                      	pop rax
 16879 0000C404 C60004                  	mov byte [rax], T_closure
 16880 0000C407 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16881 0000C40B 48C74009[18C40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_002a
 16882 0000C413 E95A010000              	jmp .L_lambda_opt_end_002a
 16883                                  .L_lambda_opt_code_002a:	; lambda-opt body
 16884 0000C418 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16885 0000C41E 740D                    	je .L_lambda_opt_arity_check_exact_002a
 16886 0000C420 7F7A                    	jg .L_lambda_opt_arity_check_more_002a
 16887 0000C422 FF742410                	push qword [rsp + 8 * 2]
 16888 0000C426 6A01                    	push 1
 16889 0000C428 E965690000              	jmp L_error_incorrect_arity_opt
 16890                                  .L_lambda_opt_arity_check_exact_002a:
 16891 0000C42D 4883EC08                	sub rsp, 8
 16892 0000C431 488B442408              	mov rax, qword[rsp + 8 *1]
 16893 0000C436 48890424                	mov qword[rsp], rax  
 16894 0000C43A 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 16895 0000C43F 4889442408              	mov qword[rsp + 8 * 1], rax
 16896 0000C444 B802000000              	mov rax, 2
 16897 0000C449 4889442410              	mov qword[rsp + 8 *2], rax
 16898 0000C44E 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 16899 0000C453 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 16900 0000C458 48B8-                   	mov rax, sob_nil
 16900 0000C45A [0100000000000000] 
 16901 0000C462 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 16902 0000C467 C8000000                	enter 0, 0
 16903                                  	; preparing a non-tail-call
 16904 0000C46B 488B4528                	mov rax, PARAM(1)	; param strs
 16905 0000C46F 50                      	push rax
 16906 0000C470 488B4520                	mov rax, PARAM(0)	; param str
 16907 0000C474 50                      	push rax
 16908 0000C475 6A02                    	push 2	; arg count
 16909 0000C477 488B4510                	mov rax, ENV
 16910 0000C47B 488B00                  	mov rax, qword [rax + 8 * 0]
 16911 0000C47E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 16912 0000C481 488B00                  	mov rax, qword [rax]
 16913 0000C484 803804                  	cmp byte [rax], T_closure
 16914 0000C487 0F858F680000            	jne L_error_non_closure
 16915 0000C48D FF7001                  	push SOB_CLOSURE_ENV(rax)
 16916 0000C490 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16917 0000C493 C9                      	leave
 16918 0000C494 C22000                  	ret AND_KILL_FRAME(2)
 16919 0000C497 E9D6000000              	jmp .L_lambda_opt_end_002a	; new closure is in rax
 16920                                  .L_lambda_opt_arity_check_more_002a:
 16921 0000C49C 488B442410              	mov rax, qword[rsp + 2 * 8]
 16922 0000C4A1 4889C7                  	mov rdi, rax
 16923 0000C4A4 49B9-                   	mov r9, sob_nil
 16923 0000C4A6 [0100000000000000] 
 16924 0000C4AE 4C8B442410              	mov r8, qword[rsp+2*8]
 16925                                  .L_lambda_opt_stack_shrink_loop_002a:
 16926 0000C4B3 4983F801                	cmp r8, 1
 16927 0000C4B7 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_002a
 16928 0000C4B9 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 16929 0000C4BE BF11000000              	mov rdi, 1+8+8	;for pair
 16930 0000C4C3 E8FD680000              	call malloc	 ;to create the pair in the stack
 16931 0000C4C8 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 16932 0000C4CB 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 16933 0000C4CF 4C894809                 	mov qword[rax+1+8],r9
 16934 0000C4D3 4989C1                  	mov r9 , rax	 ; for the recursion 
 16935 0000C4D6 49FFC8                  	dec r8
 16936 0000C4D9 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_002a
 16937                                  .L_lambda_opt_stack_shrink_loop_exit_002a:
 16938 0000C4DB 488B442410              	mov rax, qword[rsp + 2 * 8]
 16939 0000C4E0 BF02000000              	mov rdi, 2
 16940 0000C4E5 4829F8                  	sub rax, rdi
 16941 0000C4E8 4889C7                  	mov rdi, rax
 16942 0000C4EB 486BC008                	imul rax,8
 16943 0000C4EF 4801C4                  	add rsp, rax
 16944 0000C4F2 4889E0                  	mov rax, rsp
 16945 0000C4F5 4989F8                  	mov r8, rdi
 16946 0000C4F8 4D6BC008                	imul r8, 8
 16947 0000C4FC 4C29C0                  	sub rax, r8
 16948 0000C4FF 4989C2                  	mov r10, rax	; holds the original ret in the stack
 16949 0000C502 4983C218                	add r10, 8*3
 16950 0000C506 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 16951 0000C50A 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 16952 0000C50D 4D6BC008                	imul r8,8
 16953 0000C511 4C01C0                  	add rax, r8
 16954 0000C514 4C8908                  	mov qword[rax] ,r9
 16955 0000C517 4D89D0                   	mov r8, r10
 16956 0000C51A 4983C000                	add r8, 8 * 0
 16957 0000C51E 4D8B08                  	mov r9,qword[r8]
 16958 0000C521 4D890CF8                	mov qword [r8 + rdi * 8], r9
 16959 0000C525 4983EA18                	sub r10, 8*3
 16960 0000C529 48C744241002000000      	mov qword [rsp+2*8], 2
 16961 0000C532 498B4208                	mov rax, qword[r10 + 1 * 8]
 16962 0000C536 4889442408              	mov qword[rsp + 1*8] ,rax
 16963 0000C53B 498B02                  	mov rax, qword[r10]
 16964 0000C53E 48890424                	mov qword[rsp], rax
 16965 0000C542 C8000000                	enter 0, 0
 16966                                  	; preparing a non-tail-call
 16967 0000C546 488B4528                	mov rax, PARAM(1)	; param strs
 16968 0000C54A 50                      	push rax
 16969 0000C54B 488B4520                	mov rax, PARAM(0)	; param str
 16970 0000C54F 50                      	push rax
 16971 0000C550 6A02                    	push 2	; arg count
 16972 0000C552 488B4510                	mov rax, ENV
 16973 0000C556 488B00                  	mov rax, qword [rax + 8 * 0]
 16974 0000C559 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 16975 0000C55C 488B00                  	mov rax, qword [rax]
 16976 0000C55F 803804                  	cmp byte [rax], T_closure
 16977 0000C562 0F85B4670000            	jne L_error_non_closure
 16978 0000C568 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16979 0000C56B FF5009                  	call SOB_CLOSURE_CODE(rax)
 16980 0000C56E C9                      	leave
 16981 0000C56F C22000                  	ret AND_KILL_FRAME(2)
 16982                                  .L_lambda_opt_end_002a:	; new closure is in rax
 16983 0000C572 C9                      	leave
 16984 0000C573 C21800                  	ret AND_KILL_FRAME(1)
 16985                                  .L_lambda_simple_end_013c:	; new closure is in rax
 16986 0000C576 803804                  	cmp byte [rax], T_closure
 16987 0000C579 0F859D670000            	jne L_error_non_closure
 16988 0000C57F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16989 0000C582 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16990 0000C585 C9                      	leave
 16991 0000C586 C21800                  	ret AND_KILL_FRAME(1)
 16992                                  .L_lambda_simple_end_013b:	; new closure is in rax
 16993 0000C589 803804                  	cmp byte [rax], T_closure
 16994 0000C58C 0F858A670000            	jne L_error_non_closure
 16995 0000C592 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16996 0000C595 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16997 0000C598 C9                      	leave
 16998 0000C599 C21800                  	ret AND_KILL_FRAME(1)
 16999                                  .L_lambda_simple_end_0137:	; new closure is in rax
 17000 0000C59C 803804                  	cmp byte [rax], T_closure
 17001 0000C59F 0F8577670000            	jne L_error_non_closure
 17002 0000C5A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17003 0000C5A8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17004 0000C5AB C9                      	leave
 17005 0000C5AC C22000                  	ret AND_KILL_FRAME(2)
 17006                                  .L_lambda_simple_end_0136:	; new closure is in rax
 17007 0000C5AF 50                      	push rax
 17008 0000C5B0 6A01                    	push 1	; arg count
 17009 0000C5B2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17010 0000C5B7 E809680000              	call malloc
 17011 0000C5BC 50                      	push rax
 17012 0000C5BD BF00000000              	mov rdi, 8 * 0	; new rib
 17013 0000C5C2 E8FE670000              	call malloc
 17014 0000C5C7 50                      	push rax
 17015 0000C5C8 BF08000000              	mov rdi, 8 * 1	; extended env
 17016 0000C5CD E8F3670000              	call malloc
 17017 0000C5D2 488B7D10                	mov rdi, ENV
 17018 0000C5D6 BE00000000              	mov rsi, 0
 17019 0000C5DB BA01000000              	mov rdx, 1
 17020                                  .L_lambda_simple_env_loop_013e:	; ext_env[i + 1] <-- env[i]
 17021 0000C5E0 4883FE00                	cmp rsi, 0
 17022 0000C5E4 7410                    	je .L_lambda_simple_env_end_013e
 17023 0000C5E6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17024 0000C5EA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17025 0000C5EE 48FFC6                  	inc rsi
 17026 0000C5F1 48FFC2                  	inc rdx
 17027 0000C5F4 EBEA                    	jmp .L_lambda_simple_env_loop_013e
 17028                                  .L_lambda_simple_env_end_013e:
 17029 0000C5F6 5B                      	pop rbx
 17030 0000C5F7 BE00000000              	mov rsi, 0
 17031                                  .L_lambda_simple_params_loop_013e:	; copy params
 17032 0000C5FC 4883FE00                	cmp rsi, 0
 17033 0000C600 740E                    	je .L_lambda_simple_params_end_013e
 17034 0000C602 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17035 0000C607 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17036 0000C60B 48FFC6                  	inc rsi
 17037 0000C60E EBEC                    	jmp .L_lambda_simple_params_loop_013e
 17038                                  .L_lambda_simple_params_end_013e:
 17039 0000C610 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17040 0000C613 4889C3                  	mov rbx, rax
 17041 0000C616 58                      	pop rax
 17042 0000C617 C60004                  	mov byte [rax], T_closure
 17043 0000C61A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17044 0000C61E 48C74009[2BC60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_013e
 17045 0000C626 E947010000              	jmp .L_lambda_simple_end_013e
 17046                                  .L_lambda_simple_code_013e:	; lambda-simple body
 17047 0000C62B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17048 0000C631 740B                    	je .L_lambda_simple_arity_check_ok_013e
 17049 0000C633 FF742410                	push qword [rsp + 8 * 2]
 17050 0000C637 6A01                    	push 1
 17051 0000C639 E940670000              	jmp L_error_incorrect_arity_simple
 17052                                  .L_lambda_simple_arity_check_ok_013e:
 17053 0000C63E C8000000                	enter 0, 0
 17054                                  	; preparing a non-tail-call
 17055 0000C642 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 17056 0000C64A 803805                  	cmp byte [rax], T_undefined
 17057 0000C64D 0F8445660000            	je L_error_fvar_undefined
 17058 0000C653 50                      	push rax
 17059 0000C654 488B0425[AF120000]      	mov rax, qword [free_var_74]	; free var char<?
 17060 0000C65C 803805                  	cmp byte [rax], T_undefined
 17061 0000C65F 0F8433660000            	je L_error_fvar_undefined
 17062 0000C665 50                      	push rax
 17063 0000C666 6A02                    	push 2	; arg count
 17064 0000C668 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 17065 0000C66C 803804                  	cmp byte [rax], T_closure
 17066 0000C66F 0F85A7660000            	jne L_error_non_closure
 17067 0000C675 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17068 0000C678 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17069 0000C67B 48890425[9A160000]      	mov qword [free_var_133], rax
 17070 0000C683 48B8-                   	mov rax, sob_void
 17070 0000C685 [0000000000000000] 
 17071                                  
 17072                                  	; preparing a non-tail-call
 17073 0000C68D 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 17074 0000C695 803805                  	cmp byte [rax], T_undefined
 17075 0000C698 0F84FA650000            	je L_error_fvar_undefined
 17076 0000C69E 50                      	push rax
 17077 0000C69F 488B0425[38120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 17078 0000C6A7 803805                  	cmp byte [rax], T_undefined
 17079 0000C6AA 0F84E8650000            	je L_error_fvar_undefined
 17080 0000C6B0 50                      	push rax
 17081 0000C6B1 6A02                    	push 2	; arg count
 17082 0000C6B3 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 17083 0000C6B7 803804                  	cmp byte [rax], T_closure
 17084 0000C6BA 0F855C660000            	jne L_error_non_closure
 17085 0000C6C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17086 0000C6C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17087 0000C6C6 48890425[CE150000]      	mov qword [free_var_121], rax
 17088 0000C6CE 48B8-                   	mov rax, sob_void
 17088 0000C6D0 [0000000000000000] 
 17089                                  
 17090                                  	; preparing a non-tail-call
 17091 0000C6D8 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 17092 0000C6E0 803805                  	cmp byte [rax], T_undefined
 17093 0000C6E3 0F84AF650000            	je L_error_fvar_undefined
 17094 0000C6E9 50                      	push rax
 17095 0000C6EA 488B0425[E2120000]      	mov rax, qword [free_var_77]	; free var char>?
 17096 0000C6F2 803805                  	cmp byte [rax], T_undefined
 17097 0000C6F5 0F849D650000            	je L_error_fvar_undefined
 17098 0000C6FB 50                      	push rax
 17099 0000C6FC 6A02                    	push 2	; arg count
 17100 0000C6FE 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 17101 0000C702 803804                  	cmp byte [rax], T_closure
 17102 0000C705 0F8511660000            	jne L_error_non_closure
 17103 0000C70B FF7001                  	push SOB_CLOSURE_ENV(rax)
 17104 0000C70E FF5009                  	call SOB_CLOSURE_CODE(rax)
 17105 0000C711 48890425[CD160000]      	mov qword [free_var_136], rax
 17106 0000C719 48B8-                   	mov rax, sob_void
 17106 0000C71B [0000000000000000] 
 17107                                  
 17108                                  	; preparing a non-tail-call
 17109 0000C723 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 17110 0000C72B 803805                  	cmp byte [rax], T_undefined
 17111 0000C72E 0F8464650000            	je L_error_fvar_undefined
 17112 0000C734 50                      	push rax
 17113 0000C735 488B0425[6B120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 17114 0000C73D 803805                  	cmp byte [rax], T_undefined
 17115 0000C740 0F8452650000            	je L_error_fvar_undefined
 17116 0000C746 50                      	push rax
 17117 0000C747 6A02                    	push 2	; arg count
 17118 0000C749 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 17119 0000C74D 803804                  	cmp byte [rax], T_closure
 17120 0000C750 0F85C6650000            	jne L_error_non_closure
 17121 0000C756 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17122 0000C759 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17123 0000C75C 48890425[01160000]      	mov qword [free_var_124], rax
 17124 0000C764 48B8-                   	mov rax, sob_void
 17124 0000C766 [0000000000000000] 
 17125 0000C76E C9                      	leave
 17126 0000C76F C21800                  	ret AND_KILL_FRAME(1)
 17127                                  .L_lambda_simple_end_013e:	; new closure is in rax
 17128 0000C772 803804                  	cmp byte [rax], T_closure
 17129 0000C775 0F85A1650000            	jne L_error_non_closure
 17130 0000C77B FF7001                  	push SOB_CLOSURE_ENV(rax)
 17131 0000C77E FF5009                  	call SOB_CLOSURE_CODE(rax)
 17132                                  
 17133 0000C781 4889C7                  	mov rdi, rax
 17134 0000C784 E891680000              	call print_sexpr_if_not_void
 17135                                  	; preparing a non-tail-call
 17136 0000C789 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17137 0000C78E E832660000              	call malloc
 17138 0000C793 50                      	push rax
 17139 0000C794 BF00000000              	mov rdi, 8 * 0	; new rib
 17140 0000C799 E827660000              	call malloc
 17141 0000C79E 50                      	push rax
 17142 0000C79F BF08000000              	mov rdi, 8 * 1	; extended env
 17143 0000C7A4 E81C660000              	call malloc
 17144 0000C7A9 488B7D10                	mov rdi, ENV
 17145 0000C7AD BE00000000              	mov rsi, 0
 17146 0000C7B2 BA01000000              	mov rdx, 1
 17147                                  .L_lambda_simple_env_loop_013f:	; ext_env[i + 1] <-- env[i]
 17148 0000C7B7 4883FE00                	cmp rsi, 0
 17149 0000C7BB 7410                    	je .L_lambda_simple_env_end_013f
 17150 0000C7BD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17151 0000C7C1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17152 0000C7C5 48FFC6                  	inc rsi
 17153 0000C7C8 48FFC2                  	inc rdx
 17154 0000C7CB EBEA                    	jmp .L_lambda_simple_env_loop_013f
 17155                                  .L_lambda_simple_env_end_013f:
 17156 0000C7CD 5B                      	pop rbx
 17157 0000C7CE BE00000000              	mov rsi, 0
 17158                                  .L_lambda_simple_params_loop_013f:	; copy params
 17159 0000C7D3 4883FE00                	cmp rsi, 0
 17160 0000C7D7 740E                    	je .L_lambda_simple_params_end_013f
 17161 0000C7D9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17162 0000C7DE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17163 0000C7E2 48FFC6                  	inc rsi
 17164 0000C7E5 EBEC                    	jmp .L_lambda_simple_params_loop_013f
 17165                                  .L_lambda_simple_params_end_013f:
 17166 0000C7E7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17167 0000C7EA 4889C3                  	mov rbx, rax
 17168 0000C7ED 58                      	pop rax
 17169 0000C7EE C60004                  	mov byte [rax], T_closure
 17170 0000C7F1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17171 0000C7F5 48C74009[02C80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_013f
 17172 0000C7FD E9BF090000              	jmp .L_lambda_simple_end_013f
 17173                                  .L_lambda_simple_code_013f:	; lambda-simple body
 17174 0000C802 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17175 0000C808 740B                    	je .L_lambda_simple_arity_check_ok_013f
 17176 0000C80A FF742410                	push qword [rsp + 8 * 2]
 17177 0000C80E 6A01                    	push 1
 17178 0000C810 E969650000              	jmp L_error_incorrect_arity_simple
 17179                                  .L_lambda_simple_arity_check_ok_013f:
 17180 0000C815 C8000000                	enter 0, 0
 17181                                  	; preparing a non-tail-call
 17182 0000C819 48B8-                   	mov rax, L_constants + 1993
 17182 0000C81B [C907000000000000] 
 17183 0000C823 50                      	push rax
 17184 0000C824 6A01                    	push 1	; arg count
 17185 0000C826 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17186 0000C82B E895650000              	call malloc
 17187 0000C830 50                      	push rax
 17188 0000C831 BF08000000              	mov rdi, 8 * 1	; new rib
 17189 0000C836 E88A650000              	call malloc
 17190 0000C83B 50                      	push rax
 17191 0000C83C BF10000000              	mov rdi, 8 * 2	; extended env
 17192 0000C841 E87F650000              	call malloc
 17193 0000C846 488B7D10                	mov rdi, ENV
 17194 0000C84A BE00000000              	mov rsi, 0
 17195 0000C84F BA01000000              	mov rdx, 1
 17196                                  .L_lambda_simple_env_loop_0140:	; ext_env[i + 1] <-- env[i]
 17197 0000C854 4883FE01                	cmp rsi, 1
 17198 0000C858 7410                    	je .L_lambda_simple_env_end_0140
 17199 0000C85A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17200 0000C85E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17201 0000C862 48FFC6                  	inc rsi
 17202 0000C865 48FFC2                  	inc rdx
 17203 0000C868 EBEA                    	jmp .L_lambda_simple_env_loop_0140
 17204                                  .L_lambda_simple_env_end_0140:
 17205 0000C86A 5B                      	pop rbx
 17206 0000C86B BE00000000              	mov rsi, 0
 17207                                  .L_lambda_simple_params_loop_0140:	; copy params
 17208 0000C870 4883FE01                	cmp rsi, 1
 17209 0000C874 740E                    	je .L_lambda_simple_params_end_0140
 17210 0000C876 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17211 0000C87B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17212 0000C87F 48FFC6                  	inc rsi
 17213 0000C882 EBEC                    	jmp .L_lambda_simple_params_loop_0140
 17214                                  .L_lambda_simple_params_end_0140:
 17215 0000C884 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17216 0000C887 4889C3                  	mov rbx, rax
 17217 0000C88A 58                      	pop rax
 17218 0000C88B C60004                  	mov byte [rax], T_closure
 17219 0000C88E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17220 0000C892 48C74009[9FC80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0140
 17221 0000C89A E90F090000              	jmp .L_lambda_simple_end_0140
 17222                                  .L_lambda_simple_code_0140:	; lambda-simple body
 17223 0000C89F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17224 0000C8A5 740B                    	je .L_lambda_simple_arity_check_ok_0140
 17225 0000C8A7 FF742410                	push qword [rsp + 8 * 2]
 17226 0000C8AB 6A01                    	push 1
 17227 0000C8AD E9CC640000              	jmp L_error_incorrect_arity_simple
 17228                                  .L_lambda_simple_arity_check_ok_0140:
 17229 0000C8B2 C8000000                	enter 0, 0
 17230 0000C8B6 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 17231 0000C8BA 488903                  	mov qword [rbx], rax
 17232                                  
 17233 0000C8BD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17234 0000C8C2 E8FE640000              	call malloc
 17235 0000C8C7 50                      	push rax
 17236 0000C8C8 BF08000000              	mov rdi, 8 * 1	; new rib
 17237 0000C8CD E8F3640000              	call malloc
 17238 0000C8D2 50                      	push rax
 17239 0000C8D3 BF18000000              	mov rdi, 8 * 3	; extended env
 17240 0000C8D8 E8E8640000              	call malloc
 17241 0000C8DD 488B7D10                	mov rdi, ENV
 17242 0000C8E1 BE00000000              	mov rsi, 0
 17243 0000C8E6 BA01000000              	mov rdx, 1
 17244                                  .L_lambda_simple_env_loop_0141:	; ext_env[i + 1] <-- env[i]
 17245 0000C8EB 4883FE02                	cmp rsi, 2
 17246 0000C8EF 7410                    	je .L_lambda_simple_env_end_0141
 17247 0000C8F1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17248 0000C8F5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17249 0000C8F9 48FFC6                  	inc rsi
 17250 0000C8FC 48FFC2                  	inc rdx
 17251 0000C8FF EBEA                    	jmp .L_lambda_simple_env_loop_0141
 17252                                  .L_lambda_simple_env_end_0141:
 17253 0000C901 5B                      	pop rbx
 17254 0000C902 BE00000000              	mov rsi, 0
 17255                                  .L_lambda_simple_params_loop_0141:	; copy params
 17256 0000C907 4883FE01                	cmp rsi, 1
 17257 0000C90B 740E                    	je .L_lambda_simple_params_end_0141
 17258 0000C90D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17259 0000C912 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17260 0000C916 48FFC6                  	inc rsi
 17261 0000C919 EBEC                    	jmp .L_lambda_simple_params_loop_0141
 17262                                  .L_lambda_simple_params_end_0141:
 17263 0000C91B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17264 0000C91E 4889C3                  	mov rbx, rax
 17265 0000C921 58                      	pop rax
 17266 0000C922 C60004                  	mov byte [rax], T_closure
 17267 0000C925 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17268 0000C929 48C74009[36C90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0141
 17269 0000C931 E981010000              	jmp .L_lambda_simple_end_0141
 17270                                  .L_lambda_simple_code_0141:	; lambda-simple body
 17271 0000C936 48837C241004            	cmp qword [rsp + 8 * 2], 4
 17272 0000C93C 740B                    	je .L_lambda_simple_arity_check_ok_0141
 17273 0000C93E FF742410                	push qword [rsp + 8 * 2]
 17274 0000C942 6A04                    	push 4
 17275 0000C944 E935640000              	jmp L_error_incorrect_arity_simple
 17276                                  .L_lambda_simple_arity_check_ok_0141:
 17277 0000C949 C8000000                	enter 0, 0
 17278                                  	; preparing a non-tail-call
 17279 0000C94D 488B4538                	mov rax, PARAM(3)	; param len
 17280 0000C951 50                      	push rax
 17281 0000C952 488B4520                	mov rax, PARAM(0)	; param i
 17282 0000C956 50                      	push rax
 17283 0000C957 6A02                    	push 2	; arg count
 17284 0000C959 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 17285 0000C961 803805                  	cmp byte [rax], T_undefined
 17286 0000C964 0F842E630000            	je L_error_fvar_undefined
 17287 0000C96A 803804                  	cmp byte [rax], T_closure
 17288 0000C96D 0F85A9630000            	jne L_error_non_closure
 17289 0000C973 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17290 0000C976 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17291 0000C979 483D[02000000]          	cmp rax, sob_boolean_false
 17292 0000C97F 0F852E010000            	jne .L_or_end_0020
 17293                                  	; preparing a non-tail-call
 17294 0000C985 488B4538                	mov rax, PARAM(3)	; param len
 17295 0000C989 50                      	push rax
 17296 0000C98A 488B4520                	mov rax, PARAM(0)	; param i
 17297 0000C98E 50                      	push rax
 17298 0000C98F 6A02                    	push 2	; arg count
 17299 0000C991 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 17300 0000C999 803805                  	cmp byte [rax], T_undefined
 17301 0000C99C 0F84F6620000            	je L_error_fvar_undefined
 17302 0000C9A2 803804                  	cmp byte [rax], T_closure
 17303 0000C9A5 0F8571630000            	jne L_error_non_closure
 17304 0000C9AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 17305 0000C9AE FF5009                  	call SOB_CLOSURE_CODE(rax)
 17306 0000C9B1 483D[02000000]          	cmp rax, sob_boolean_false
 17307 0000C9B7 0F84EC000000            	je .L_if_else_00fb
 17308                                  	; preparing a non-tail-call
 17309                                  	; preparing a non-tail-call
 17310 0000C9BD 488B4520                	mov rax, PARAM(0)	; param i
 17311 0000C9C1 50                      	push rax
 17312 0000C9C2 488B4530                	mov rax, PARAM(2)	; param str2
 17313 0000C9C6 50                      	push rax
 17314 0000C9C7 6A02                    	push 2	; arg count
 17315 0000C9C9 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17316 0000C9D1 803805                  	cmp byte [rax], T_undefined
 17317 0000C9D4 0F84BE620000            	je L_error_fvar_undefined
 17318 0000C9DA 803804                  	cmp byte [rax], T_closure
 17319 0000C9DD 0F8539630000            	jne L_error_non_closure
 17320 0000C9E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17321 0000C9E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17322 0000C9E9 50                      	push rax
 17323                                  	; preparing a non-tail-call
 17324 0000C9EA 488B4520                	mov rax, PARAM(0)	; param i
 17325 0000C9EE 50                      	push rax
 17326 0000C9EF 488B4528                	mov rax, PARAM(1)	; param str1
 17327 0000C9F3 50                      	push rax
 17328 0000C9F4 6A02                    	push 2	; arg count
 17329 0000C9F6 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 17330 0000C9FE 803805                  	cmp byte [rax], T_undefined
 17331 0000CA01 0F8491620000            	je L_error_fvar_undefined
 17332 0000CA07 803804                  	cmp byte [rax], T_closure
 17333 0000CA0A 0F850C630000            	jne L_error_non_closure
 17334 0000CA10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17335 0000CA13 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17336 0000CA16 50                      	push rax
 17337 0000CA17 6A02                    	push 2	; arg count
 17338 0000CA19 488B4510                	mov rax, ENV
 17339 0000CA1D 488B4008                	mov rax, qword [rax + 8 * 1]
 17340 0000CA21 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char=?
 17341 0000CA24 803804                  	cmp byte [rax], T_closure
 17342 0000CA27 0F85EF620000            	jne L_error_non_closure
 17343 0000CA2D FF7001                  	push SOB_CLOSURE_ENV(rax)
 17344 0000CA30 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17345 0000CA33 483D[02000000]          	cmp rax, sob_boolean_false
 17346 0000CA39 7462                    	je .L_if_else_00fa
 17347                                  	; preparing a non-tail-call
 17348 0000CA3B 488B4538                	mov rax, PARAM(3)	; param len
 17349 0000CA3F 50                      	push rax
 17350 0000CA40 488B4530                	mov rax, PARAM(2)	; param str2
 17351 0000CA44 50                      	push rax
 17352 0000CA45 488B4528                	mov rax, PARAM(1)	; param str1
 17353 0000CA49 50                      	push rax
 17354                                  	; preparing a non-tail-call
 17355 0000CA4A 48B8-                   	mov rax, L_constants + 2270
 17355 0000CA4C [DE08000000000000] 
 17356 0000CA54 50                      	push rax
 17357 0000CA55 488B4520                	mov rax, PARAM(0)	; param i
 17358 0000CA59 50                      	push rax
 17359 0000CA5A 6A02                    	push 2	; arg count
 17360 0000CA5C 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 17361 0000CA64 803805                  	cmp byte [rax], T_undefined
 17362 0000CA67 0F842B620000            	je L_error_fvar_undefined
 17363 0000CA6D 803804                  	cmp byte [rax], T_closure
 17364 0000CA70 0F85A6620000            	jne L_error_non_closure
 17365 0000CA76 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17366 0000CA79 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17367 0000CA7C 50                      	push rax
 17368 0000CA7D 6A04                    	push 4	; arg count
 17369 0000CA7F 488B4510                	mov rax, ENV
 17370 0000CA83 488B00                  	mov rax, qword [rax + 8 * 0]
 17371 0000CA86 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17372 0000CA89 488B00                  	mov rax, qword [rax]
 17373 0000CA8C 803804                  	cmp byte [rax], T_closure
 17374 0000CA8F 0F8587620000            	jne L_error_non_closure
 17375 0000CA95 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17376 0000CA98 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17377 0000CA9B EB0A                    	jmp .L_if_end_00fa
 17378                                  .L_if_else_00fa:
 17379 0000CA9D 48B8-                   	mov rax, L_constants + 2
 17379 0000CA9F [0200000000000000] 
 17380                                  .L_if_end_00fa:
 17381 0000CAA7 EB0A                    	jmp .L_if_end_00fb
 17382                                  .L_if_else_00fb:
 17383 0000CAA9 48B8-                   	mov rax, L_constants + 2
 17383 0000CAAB [0200000000000000] 
 17384                                  .L_if_end_00fb:
 17385                                  .L_or_end_0020:
 17386 0000CAB3 C9                      	leave
 17387 0000CAB4 C23000                  	ret AND_KILL_FRAME(4)
 17388                                  .L_lambda_simple_end_0141:	; new closure is in rax
 17389 0000CAB7 50                      	push rax
 17390 0000CAB8 488B4520                	mov rax, PARAM(0)	; param run
 17391 0000CABC 8F00                    	pop qword [rax]
 17392 0000CABE 48B8-                   	mov rax, sob_void
 17392 0000CAC0 [0000000000000000] 
 17393                                  
 17394                                  	; preparing a non-tail-call
 17395 0000CAC8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17396 0000CACD E8F3620000              	call malloc
 17397 0000CAD2 50                      	push rax
 17398 0000CAD3 BF08000000              	mov rdi, 8 * 1	; new rib
 17399 0000CAD8 E8E8620000              	call malloc
 17400 0000CADD 50                      	push rax
 17401 0000CADE BF18000000              	mov rdi, 8 * 3	; extended env
 17402 0000CAE3 E8DD620000              	call malloc
 17403 0000CAE8 488B7D10                	mov rdi, ENV
 17404 0000CAEC BE00000000              	mov rsi, 0
 17405 0000CAF1 BA01000000              	mov rdx, 1
 17406                                  .L_lambda_simple_env_loop_0142:	; ext_env[i + 1] <-- env[i]
 17407 0000CAF6 4883FE02                	cmp rsi, 2
 17408 0000CAFA 7410                    	je .L_lambda_simple_env_end_0142
 17409 0000CAFC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17410 0000CB00 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17411 0000CB04 48FFC6                  	inc rsi
 17412 0000CB07 48FFC2                  	inc rdx
 17413 0000CB0A EBEA                    	jmp .L_lambda_simple_env_loop_0142
 17414                                  .L_lambda_simple_env_end_0142:
 17415 0000CB0C 5B                      	pop rbx
 17416 0000CB0D BE00000000              	mov rsi, 0
 17417                                  .L_lambda_simple_params_loop_0142:	; copy params
 17418 0000CB12 4883FE01                	cmp rsi, 1
 17419 0000CB16 740E                    	je .L_lambda_simple_params_end_0142
 17420 0000CB18 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17421 0000CB1D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17422 0000CB21 48FFC6                  	inc rsi
 17423 0000CB24 EBEC                    	jmp .L_lambda_simple_params_loop_0142
 17424                                  .L_lambda_simple_params_end_0142:
 17425 0000CB26 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17426 0000CB29 4889C3                  	mov rbx, rax
 17427 0000CB2C 58                      	pop rax
 17428 0000CB2D C60004                  	mov byte [rax], T_closure
 17429 0000CB30 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17430 0000CB34 48C74009[41CB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0142
 17431 0000CB3C E996010000              	jmp .L_lambda_simple_end_0142
 17432                                  .L_lambda_simple_code_0142:	; lambda-simple body
 17433 0000CB41 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17434 0000CB47 740B                    	je .L_lambda_simple_arity_check_ok_0142
 17435 0000CB49 FF742410                	push qword [rsp + 8 * 2]
 17436 0000CB4D 6A02                    	push 2
 17437 0000CB4F E92A620000              	jmp L_error_incorrect_arity_simple
 17438                                  .L_lambda_simple_arity_check_ok_0142:
 17439 0000CB54 C8000000                	enter 0, 0
 17440                                  	; preparing a non-tail-call
 17441                                  	; preparing a non-tail-call
 17442 0000CB58 488B4528                	mov rax, PARAM(1)	; param str2
 17443 0000CB5C 50                      	push rax
 17444 0000CB5D 6A01                    	push 1	; arg count
 17445 0000CB5F 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 17446 0000CB67 803805                  	cmp byte [rax], T_undefined
 17447 0000CB6A 0F8428610000            	je L_error_fvar_undefined
 17448 0000CB70 803804                  	cmp byte [rax], T_closure
 17449 0000CB73 0F85A3610000            	jne L_error_non_closure
 17450 0000CB79 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17451 0000CB7C FF5009                  	call SOB_CLOSURE_CODE(rax)
 17452 0000CB7F 50                      	push rax
 17453                                  	; preparing a non-tail-call
 17454 0000CB80 488B4520                	mov rax, PARAM(0)	; param str1
 17455 0000CB84 50                      	push rax
 17456 0000CB85 6A01                    	push 1	; arg count
 17457 0000CB87 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 17458 0000CB8F 803805                  	cmp byte [rax], T_undefined
 17459 0000CB92 0F8400610000            	je L_error_fvar_undefined
 17460 0000CB98 803804                  	cmp byte [rax], T_closure
 17461 0000CB9B 0F857B610000            	jne L_error_non_closure
 17462 0000CBA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17463 0000CBA4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17464 0000CBA7 50                      	push rax
 17465 0000CBA8 6A02                    	push 2	; arg count
 17466 0000CBAA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17467 0000CBAF E811620000              	call malloc
 17468 0000CBB4 50                      	push rax
 17469 0000CBB5 BF10000000              	mov rdi, 8 * 2	; new rib
 17470 0000CBBA E806620000              	call malloc
 17471 0000CBBF 50                      	push rax
 17472 0000CBC0 BF20000000              	mov rdi, 8 * 4	; extended env
 17473 0000CBC5 E8FB610000              	call malloc
 17474 0000CBCA 488B7D10                	mov rdi, ENV
 17475 0000CBCE BE00000000              	mov rsi, 0
 17476 0000CBD3 BA01000000              	mov rdx, 1
 17477                                  .L_lambda_simple_env_loop_0143:	; ext_env[i + 1] <-- env[i]
 17478 0000CBD8 4883FE03                	cmp rsi, 3
 17479 0000CBDC 7410                    	je .L_lambda_simple_env_end_0143
 17480 0000CBDE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17481 0000CBE2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17482 0000CBE6 48FFC6                  	inc rsi
 17483 0000CBE9 48FFC2                  	inc rdx
 17484 0000CBEC EBEA                    	jmp .L_lambda_simple_env_loop_0143
 17485                                  .L_lambda_simple_env_end_0143:
 17486 0000CBEE 5B                      	pop rbx
 17487 0000CBEF BE00000000              	mov rsi, 0
 17488                                  .L_lambda_simple_params_loop_0143:	; copy params
 17489 0000CBF4 4883FE02                	cmp rsi, 2
 17490 0000CBF8 740E                    	je .L_lambda_simple_params_end_0143
 17491 0000CBFA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17492 0000CBFF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17493 0000CC03 48FFC6                  	inc rsi
 17494 0000CC06 EBEC                    	jmp .L_lambda_simple_params_loop_0143
 17495                                  .L_lambda_simple_params_end_0143:
 17496 0000CC08 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17497 0000CC0B 4889C3                  	mov rbx, rax
 17498 0000CC0E 58                      	pop rax
 17499 0000CC0F C60004                  	mov byte [rax], T_closure
 17500 0000CC12 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17501 0000CC16 48C74009[23CC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0143
 17502 0000CC1E E9A1000000              	jmp .L_lambda_simple_end_0143
 17503                                  .L_lambda_simple_code_0143:	; lambda-simple body
 17504 0000CC23 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17505 0000CC29 740B                    	je .L_lambda_simple_arity_check_ok_0143
 17506 0000CC2B FF742410                	push qword [rsp + 8 * 2]
 17507 0000CC2F 6A02                    	push 2
 17508 0000CC31 E948610000              	jmp L_error_incorrect_arity_simple
 17509                                  .L_lambda_simple_arity_check_ok_0143:
 17510 0000CC36 C8000000                	enter 0, 0
 17511                                  	; preparing a non-tail-call
 17512 0000CC3A 488B4528                	mov rax, PARAM(1)	; param len2
 17513 0000CC3E 50                      	push rax
 17514 0000CC3F 488B4520                	mov rax, PARAM(0)	; param len1
 17515 0000CC43 50                      	push rax
 17516 0000CC44 6A02                    	push 2	; arg count
 17517 0000CC46 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 17518 0000CC4E 803805                  	cmp byte [rax], T_undefined
 17519 0000CC51 0F8441600000            	je L_error_fvar_undefined
 17520 0000CC57 803804                  	cmp byte [rax], T_closure
 17521 0000CC5A 0F85BC600000            	jne L_error_non_closure
 17522 0000CC60 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17523 0000CC63 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17524 0000CC66 483D[02000000]          	cmp rax, sob_boolean_false
 17525 0000CC6C 7448                    	je .L_if_else_00fc
 17526                                  	; preparing a non-tail-call
 17527 0000CC6E 488B4520                	mov rax, PARAM(0)	; param len1
 17528 0000CC72 50                      	push rax
 17529 0000CC73 488B4510                	mov rax, ENV
 17530 0000CC77 488B00                  	mov rax, qword [rax + 8 * 0]
 17531 0000CC7A 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 17532 0000CC7E 50                      	push rax
 17533 0000CC7F 488B4510                	mov rax, ENV
 17534 0000CC83 488B00                  	mov rax, qword [rax + 8 * 0]
 17535 0000CC86 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 17536 0000CC89 50                      	push rax
 17537 0000CC8A 48B8-                   	mov rax, L_constants + 2135
 17537 0000CC8C [5708000000000000] 
 17538 0000CC94 50                      	push rax
 17539 0000CC95 6A04                    	push 4	; arg count
 17540 0000CC97 488B4510                	mov rax, ENV
 17541 0000CC9B 488B4008                	mov rax, qword [rax + 8 * 1]
 17542 0000CC9F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17543 0000CCA2 488B00                  	mov rax, qword [rax]
 17544 0000CCA5 803804                  	cmp byte [rax], T_closure
 17545 0000CCA8 0F856E600000            	jne L_error_non_closure
 17546 0000CCAE FF7001                  	push SOB_CLOSURE_ENV(rax)
 17547 0000CCB1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17548 0000CCB4 EB0A                    	jmp .L_if_end_00fc
 17549                                  .L_if_else_00fc:
 17550 0000CCB6 48B8-                   	mov rax, L_constants + 2
 17550 0000CCB8 [0200000000000000] 
 17551                                  .L_if_end_00fc:
 17552 0000CCC0 C9                      	leave
 17553 0000CCC1 C22000                  	ret AND_KILL_FRAME(2)
 17554                                  .L_lambda_simple_end_0143:	; new closure is in rax
 17555 0000CCC4 803804                  	cmp byte [rax], T_closure
 17556 0000CCC7 0F854F600000            	jne L_error_non_closure
 17557 0000CCCD FF7001                  	push SOB_CLOSURE_ENV(rax)
 17558 0000CCD0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17559 0000CCD3 C9                      	leave
 17560 0000CCD4 C22000                  	ret AND_KILL_FRAME(2)
 17561                                  .L_lambda_simple_end_0142:	; new closure is in rax
 17562 0000CCD7 50                      	push rax
 17563 0000CCD8 6A01                    	push 1	; arg count
 17564 0000CCDA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17565 0000CCDF E8E1600000              	call malloc
 17566 0000CCE4 50                      	push rax
 17567 0000CCE5 BF08000000              	mov rdi, 8 * 1	; new rib
 17568 0000CCEA E8D6600000              	call malloc
 17569 0000CCEF 50                      	push rax
 17570 0000CCF0 BF18000000              	mov rdi, 8 * 3	; extended env
 17571 0000CCF5 E8CB600000              	call malloc
 17572 0000CCFA 488B7D10                	mov rdi, ENV
 17573 0000CCFE BE00000000              	mov rsi, 0
 17574 0000CD03 BA01000000              	mov rdx, 1
 17575                                  .L_lambda_simple_env_loop_0144:	; ext_env[i + 1] <-- env[i]
 17576 0000CD08 4883FE02                	cmp rsi, 2
 17577 0000CD0C 7410                    	je .L_lambda_simple_env_end_0144
 17578 0000CD0E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17579 0000CD12 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17580 0000CD16 48FFC6                  	inc rsi
 17581 0000CD19 48FFC2                  	inc rdx
 17582 0000CD1C EBEA                    	jmp .L_lambda_simple_env_loop_0144
 17583                                  .L_lambda_simple_env_end_0144:
 17584 0000CD1E 5B                      	pop rbx
 17585 0000CD1F BE00000000              	mov rsi, 0
 17586                                  .L_lambda_simple_params_loop_0144:	; copy params
 17587 0000CD24 4883FE01                	cmp rsi, 1
 17588 0000CD28 740E                    	je .L_lambda_simple_params_end_0144
 17589 0000CD2A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17590 0000CD2F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17591 0000CD33 48FFC6                  	inc rsi
 17592 0000CD36 EBEC                    	jmp .L_lambda_simple_params_loop_0144
 17593                                  .L_lambda_simple_params_end_0144:
 17594 0000CD38 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17595 0000CD3B 4889C3                  	mov rbx, rax
 17596 0000CD3E 58                      	pop rax
 17597 0000CD3F C60004                  	mov byte [rax], T_closure
 17598 0000CD42 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17599 0000CD46 48C74009[53CD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0144
 17600 0000CD4E E948040000              	jmp .L_lambda_simple_end_0144
 17601                                  .L_lambda_simple_code_0144:	; lambda-simple body
 17602 0000CD53 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17603 0000CD59 740B                    	je .L_lambda_simple_arity_check_ok_0144
 17604 0000CD5B FF742410                	push qword [rsp + 8 * 2]
 17605 0000CD5F 6A01                    	push 1
 17606 0000CD61 E918600000              	jmp L_error_incorrect_arity_simple
 17607                                  .L_lambda_simple_arity_check_ok_0144:
 17608 0000CD66 C8000000                	enter 0, 0
 17609                                  	; preparing a non-tail-call
 17610 0000CD6A 48B8-                   	mov rax, L_constants + 1993
 17610 0000CD6C [C907000000000000] 
 17611 0000CD74 50                      	push rax
 17612 0000CD75 6A01                    	push 1	; arg count
 17613 0000CD77 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17614 0000CD7C E844600000              	call malloc
 17615 0000CD81 50                      	push rax
 17616 0000CD82 BF08000000              	mov rdi, 8 * 1	; new rib
 17617 0000CD87 E839600000              	call malloc
 17618 0000CD8C 50                      	push rax
 17619 0000CD8D BF20000000              	mov rdi, 8 * 4	; extended env
 17620 0000CD92 E82E600000              	call malloc
 17621 0000CD97 488B7D10                	mov rdi, ENV
 17622 0000CD9B BE00000000              	mov rsi, 0
 17623 0000CDA0 BA01000000              	mov rdx, 1
 17624                                  .L_lambda_simple_env_loop_0145:	; ext_env[i + 1] <-- env[i]
 17625 0000CDA5 4883FE03                	cmp rsi, 3
 17626 0000CDA9 7410                    	je .L_lambda_simple_env_end_0145
 17627 0000CDAB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17628 0000CDAF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17629 0000CDB3 48FFC6                  	inc rsi
 17630 0000CDB6 48FFC2                  	inc rdx
 17631 0000CDB9 EBEA                    	jmp .L_lambda_simple_env_loop_0145
 17632                                  .L_lambda_simple_env_end_0145:
 17633 0000CDBB 5B                      	pop rbx
 17634 0000CDBC BE00000000              	mov rsi, 0
 17635                                  .L_lambda_simple_params_loop_0145:	; copy params
 17636 0000CDC1 4883FE01                	cmp rsi, 1
 17637 0000CDC5 740E                    	je .L_lambda_simple_params_end_0145
 17638 0000CDC7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17639 0000CDCC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17640 0000CDD0 48FFC6                  	inc rsi
 17641 0000CDD3 EBEC                    	jmp .L_lambda_simple_params_loop_0145
 17642                                  .L_lambda_simple_params_end_0145:
 17643 0000CDD5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17644 0000CDD8 4889C3                  	mov rbx, rax
 17645 0000CDDB 58                      	pop rax
 17646 0000CDDC C60004                  	mov byte [rax], T_closure
 17647 0000CDDF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17648 0000CDE3 48C74009[F0CD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0145
 17649 0000CDEB E998030000              	jmp .L_lambda_simple_end_0145
 17650                                  .L_lambda_simple_code_0145:	; lambda-simple body
 17651 0000CDF0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17652 0000CDF6 740B                    	je .L_lambda_simple_arity_check_ok_0145
 17653 0000CDF8 FF742410                	push qword [rsp + 8 * 2]
 17654 0000CDFC 6A01                    	push 1
 17655 0000CDFE E97B5F0000              	jmp L_error_incorrect_arity_simple
 17656                                  .L_lambda_simple_arity_check_ok_0145:
 17657 0000CE03 C8000000                	enter 0, 0
 17658 0000CE07 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 17659 0000CE0B 488903                  	mov qword [rbx], rax
 17660                                  
 17661 0000CE0E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17662 0000CE13 E8AD5F0000              	call malloc
 17663 0000CE18 50                      	push rax
 17664 0000CE19 BF08000000              	mov rdi, 8 * 1	; new rib
 17665 0000CE1E E8A25F0000              	call malloc
 17666 0000CE23 50                      	push rax
 17667 0000CE24 BF28000000              	mov rdi, 8 * 5	; extended env
 17668 0000CE29 E8975F0000              	call malloc
 17669 0000CE2E 488B7D10                	mov rdi, ENV
 17670 0000CE32 BE00000000              	mov rsi, 0
 17671 0000CE37 BA01000000              	mov rdx, 1
 17672                                  .L_lambda_simple_env_loop_0146:	; ext_env[i + 1] <-- env[i]
 17673 0000CE3C 4883FE04                	cmp rsi, 4
 17674 0000CE40 7410                    	je .L_lambda_simple_env_end_0146
 17675 0000CE42 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17676 0000CE46 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17677 0000CE4A 48FFC6                  	inc rsi
 17678 0000CE4D 48FFC2                  	inc rdx
 17679 0000CE50 EBEA                    	jmp .L_lambda_simple_env_loop_0146
 17680                                  .L_lambda_simple_env_end_0146:
 17681 0000CE52 5B                      	pop rbx
 17682 0000CE53 BE00000000              	mov rsi, 0
 17683                                  .L_lambda_simple_params_loop_0146:	; copy params
 17684 0000CE58 4883FE01                	cmp rsi, 1
 17685 0000CE5C 740E                    	je .L_lambda_simple_params_end_0146
 17686 0000CE5E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17687 0000CE63 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17688 0000CE67 48FFC6                  	inc rsi
 17689 0000CE6A EBEC                    	jmp .L_lambda_simple_params_loop_0146
 17690                                  .L_lambda_simple_params_end_0146:
 17691 0000CE6C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17692 0000CE6F 4889C3                  	mov rbx, rax
 17693 0000CE72 58                      	pop rax
 17694 0000CE73 C60004                  	mov byte [rax], T_closure
 17695 0000CE76 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17696 0000CE7A 48C74009[87CE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0146
 17697 0000CE82 E919010000              	jmp .L_lambda_simple_end_0146
 17698                                  .L_lambda_simple_code_0146:	; lambda-simple body
 17699 0000CE87 48837C241002            	cmp qword [rsp + 8 * 2], 2
 17700 0000CE8D 740B                    	je .L_lambda_simple_arity_check_ok_0146
 17701 0000CE8F FF742410                	push qword [rsp + 8 * 2]
 17702 0000CE93 6A02                    	push 2
 17703 0000CE95 E9E45E0000              	jmp L_error_incorrect_arity_simple
 17704                                  .L_lambda_simple_arity_check_ok_0146:
 17705 0000CE9A C8000000                	enter 0, 0
 17706                                  	; preparing a non-tail-call
 17707 0000CE9E 488B4528                	mov rax, PARAM(1)	; param strs
 17708 0000CEA2 50                      	push rax
 17709 0000CEA3 6A01                    	push 1	; arg count
 17710 0000CEA5 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 17711 0000CEAD 803805                  	cmp byte [rax], T_undefined
 17712 0000CEB0 0F84E25D0000            	je L_error_fvar_undefined
 17713 0000CEB6 803804                  	cmp byte [rax], T_closure
 17714 0000CEB9 0F855D5E0000            	jne L_error_non_closure
 17715 0000CEBF FF7001                  	push SOB_CLOSURE_ENV(rax)
 17716 0000CEC2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17717 0000CEC5 483D[02000000]          	cmp rax, sob_boolean_false
 17718 0000CECB 0F85CB000000            	jne .L_or_end_0021
 17719                                  	; preparing a non-tail-call
 17720                                  	; preparing a non-tail-call
 17721 0000CED1 488B4528                	mov rax, PARAM(1)	; param strs
 17722 0000CED5 50                      	push rax
 17723 0000CED6 6A01                    	push 1	; arg count
 17724 0000CED8 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 17725 0000CEE0 803805                  	cmp byte [rax], T_undefined
 17726 0000CEE3 0F84AF5D0000            	je L_error_fvar_undefined
 17727 0000CEE9 803804                  	cmp byte [rax], T_closure
 17728 0000CEEC 0F852A5E0000            	jne L_error_non_closure
 17729 0000CEF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17730 0000CEF5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17731 0000CEF8 50                      	push rax
 17732 0000CEF9 488B4520                	mov rax, PARAM(0)	; param str
 17733 0000CEFD 50                      	push rax
 17734 0000CEFE 6A02                    	push 2	; arg count
 17735 0000CF00 488B4510                	mov rax, ENV
 17736 0000CF04 488B4008                	mov rax, qword [rax + 8 * 1]
 17737 0000CF08 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string=?
 17738 0000CF0B 803804                  	cmp byte [rax], T_closure
 17739 0000CF0E 0F85085E0000            	jne L_error_non_closure
 17740 0000CF14 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17741 0000CF17 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17742 0000CF1A 483D[02000000]          	cmp rax, sob_boolean_false
 17743 0000CF20 7470                    	je .L_if_else_00fd
 17744                                  	; preparing a non-tail-call
 17745                                  	; preparing a non-tail-call
 17746 0000CF22 488B4528                	mov rax, PARAM(1)	; param strs
 17747 0000CF26 50                      	push rax
 17748 0000CF27 6A01                    	push 1	; arg count
 17749 0000CF29 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 17750 0000CF31 803805                  	cmp byte [rax], T_undefined
 17751 0000CF34 0F845E5D0000            	je L_error_fvar_undefined
 17752 0000CF3A 803804                  	cmp byte [rax], T_closure
 17753 0000CF3D 0F85D95D0000            	jne L_error_non_closure
 17754 0000CF43 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17755 0000CF46 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17756 0000CF49 50                      	push rax
 17757                                  	; preparing a non-tail-call
 17758 0000CF4A 488B4528                	mov rax, PARAM(1)	; param strs
 17759 0000CF4E 50                      	push rax
 17760 0000CF4F 6A01                    	push 1	; arg count
 17761 0000CF51 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 17762 0000CF59 803805                  	cmp byte [rax], T_undefined
 17763 0000CF5C 0F84365D0000            	je L_error_fvar_undefined
 17764 0000CF62 803804                  	cmp byte [rax], T_closure
 17765 0000CF65 0F85B15D0000            	jne L_error_non_closure
 17766 0000CF6B FF7001                  	push SOB_CLOSURE_ENV(rax)
 17767 0000CF6E FF5009                  	call SOB_CLOSURE_CODE(rax)
 17768 0000CF71 50                      	push rax
 17769 0000CF72 6A02                    	push 2	; arg count
 17770 0000CF74 488B4510                	mov rax, ENV
 17771 0000CF78 488B00                  	mov rax, qword [rax + 8 * 0]
 17772 0000CF7B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17773 0000CF7E 488B00                  	mov rax, qword [rax]
 17774 0000CF81 803804                  	cmp byte [rax], T_closure
 17775 0000CF84 0F85925D0000            	jne L_error_non_closure
 17776 0000CF8A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17777 0000CF8D FF5009                  	call SOB_CLOSURE_CODE(rax)
 17778 0000CF90 EB0A                    	jmp .L_if_end_00fd
 17779                                  .L_if_else_00fd:
 17780 0000CF92 48B8-                   	mov rax, L_constants + 2
 17780 0000CF94 [0200000000000000] 
 17781                                  .L_if_end_00fd:
 17782                                  .L_or_end_0021:
 17783 0000CF9C C9                      	leave
 17784 0000CF9D C22000                  	ret AND_KILL_FRAME(2)
 17785                                  .L_lambda_simple_end_0146:	; new closure is in rax
 17786 0000CFA0 50                      	push rax
 17787 0000CFA1 488B4520                	mov rax, PARAM(0)	; param run
 17788 0000CFA5 8F00                    	pop qword [rax]
 17789 0000CFA7 48B8-                   	mov rax, sob_void
 17789 0000CFA9 [0000000000000000] 
 17790                                  
 17791 0000CFB1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17792 0000CFB6 E80A5E0000              	call malloc
 17793 0000CFBB 50                      	push rax
 17794 0000CFBC BF08000000              	mov rdi, 8 * 1	; new rib
 17795 0000CFC1 E8FF5D0000              	call malloc
 17796 0000CFC6 50                      	push rax
 17797 0000CFC7 BF28000000              	mov rdi, 8 * 5	; extended env
 17798 0000CFCC E8F45D0000              	call malloc
 17799 0000CFD1 488B7D10                	mov rdi, ENV
 17800 0000CFD5 BE00000000              	mov rsi, 0
 17801 0000CFDA BA01000000              	mov rdx, 1
 17802                                  .L_lambda_opt_env_loop_002b:	; ext_env[i + 1] <-- env[i]
 17803 0000CFDF 4883FE04                	cmp rsi, 4
 17804 0000CFE3 7410                    	je .L_lambda_opt_env_end_002b
 17805 0000CFE5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17806 0000CFE9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17807 0000CFED 48FFC6                  	inc rsi
 17808 0000CFF0 48FFC2                  	inc rdx
 17809 0000CFF3 EBEA                    	jmp .L_lambda_opt_env_loop_002b
 17810                                  .L_lambda_opt_env_end_002b:
 17811 0000CFF5 5B                      	pop rbx
 17812 0000CFF6 BE00000000              	mov rsi, 0
 17813                                  .L_lambda_opt_params_loop_002b:	; copy params
 17814 0000CFFB 4883FE01                	cmp rsi, 1
 17815 0000CFFF 740E                    	je .L_lambda_opt_params_end_002b
 17816 0000D001 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17817 0000D006 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17818 0000D00A 48FFC6                  	inc rsi
 17819 0000D00D EBEC                    	jmp .L_lambda_opt_params_loop_002b
 17820                                  .L_lambda_opt_params_end_002b:
 17821 0000D00F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17822 0000D012 4889C3                  	mov rbx, rax
 17823 0000D015 58                      	pop rax
 17824 0000D016 C60004                  	mov byte [rax], T_closure
 17825 0000D019 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17826 0000D01D 48C74009[2AD00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_002b
 17827 0000D025 E95A010000              	jmp .L_lambda_opt_end_002b
 17828                                  .L_lambda_opt_code_002b:	; lambda-opt body
 17829 0000D02A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17830 0000D030 740D                    	je .L_lambda_opt_arity_check_exact_002b
 17831 0000D032 7F7A                    	jg .L_lambda_opt_arity_check_more_002b
 17832 0000D034 FF742410                	push qword [rsp + 8 * 2]
 17833 0000D038 6A01                    	push 1
 17834 0000D03A E9535D0000              	jmp L_error_incorrect_arity_opt
 17835                                  .L_lambda_opt_arity_check_exact_002b:
 17836 0000D03F 4883EC08                	sub rsp, 8
 17837 0000D043 488B442408              	mov rax, qword[rsp + 8 *1]
 17838 0000D048 48890424                	mov qword[rsp], rax  
 17839 0000D04C 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 17840 0000D051 4889442408              	mov qword[rsp + 8 * 1], rax
 17841 0000D056 B802000000              	mov rax, 2
 17842 0000D05B 4889442410              	mov qword[rsp + 8 *2], rax
 17843 0000D060 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 17844 0000D065 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 17845 0000D06A 48B8-                   	mov rax, sob_nil
 17845 0000D06C [0100000000000000] 
 17846 0000D074 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 17847 0000D079 C8000000                	enter 0, 0
 17848                                  	; preparing a non-tail-call
 17849 0000D07D 488B4528                	mov rax, PARAM(1)	; param strs
 17850 0000D081 50                      	push rax
 17851 0000D082 488B4520                	mov rax, PARAM(0)	; param str
 17852 0000D086 50                      	push rax
 17853 0000D087 6A02                    	push 2	; arg count
 17854 0000D089 488B4510                	mov rax, ENV
 17855 0000D08D 488B00                  	mov rax, qword [rax + 8 * 0]
 17856 0000D090 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17857 0000D093 488B00                  	mov rax, qword [rax]
 17858 0000D096 803804                  	cmp byte [rax], T_closure
 17859 0000D099 0F857D5C0000            	jne L_error_non_closure
 17860 0000D09F FF7001                  	push SOB_CLOSURE_ENV(rax)
 17861 0000D0A2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17862 0000D0A5 C9                      	leave
 17863 0000D0A6 C22000                  	ret AND_KILL_FRAME(2)
 17864 0000D0A9 E9D6000000              	jmp .L_lambda_opt_end_002b	; new closure is in rax
 17865                                  .L_lambda_opt_arity_check_more_002b:
 17866 0000D0AE 488B442410              	mov rax, qword[rsp + 2 * 8]
 17867 0000D0B3 4889C7                  	mov rdi, rax
 17868 0000D0B6 49B9-                   	mov r9, sob_nil
 17868 0000D0B8 [0100000000000000] 
 17869 0000D0C0 4C8B442410              	mov r8, qword[rsp+2*8]
 17870                                  .L_lambda_opt_stack_shrink_loop_002b:
 17871 0000D0C5 4983F801                	cmp r8, 1
 17872 0000D0C9 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_002b
 17873 0000D0CB 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 17874 0000D0D0 BF11000000              	mov rdi, 1+8+8	;for pair
 17875 0000D0D5 E8EB5C0000              	call malloc	 ;to create the pair in the stack
 17876 0000D0DA C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 17877 0000D0DD 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 17878 0000D0E1 4C894809                 	mov qword[rax+1+8],r9
 17879 0000D0E5 4989C1                  	mov r9 , rax	 ; for the recursion 
 17880 0000D0E8 49FFC8                  	dec r8
 17881 0000D0EB EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_002b
 17882                                  .L_lambda_opt_stack_shrink_loop_exit_002b:
 17883 0000D0ED 488B442410              	mov rax, qword[rsp + 2 * 8]
 17884 0000D0F2 BF02000000              	mov rdi, 2
 17885 0000D0F7 4829F8                  	sub rax, rdi
 17886 0000D0FA 4889C7                  	mov rdi, rax
 17887 0000D0FD 486BC008                	imul rax,8
 17888 0000D101 4801C4                  	add rsp, rax
 17889 0000D104 4889E0                  	mov rax, rsp
 17890 0000D107 4989F8                  	mov r8, rdi
 17891 0000D10A 4D6BC008                	imul r8, 8
 17892 0000D10E 4C29C0                  	sub rax, r8
 17893 0000D111 4989C2                  	mov r10, rax	; holds the original ret in the stack
 17894 0000D114 4983C218                	add r10, 8*3
 17895 0000D118 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 17896 0000D11C 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 17897 0000D11F 4D6BC008                	imul r8,8
 17898 0000D123 4C01C0                  	add rax, r8
 17899 0000D126 4C8908                  	mov qword[rax] ,r9
 17900 0000D129 4D89D0                   	mov r8, r10
 17901 0000D12C 4983C000                	add r8, 8 * 0
 17902 0000D130 4D8B08                  	mov r9,qword[r8]
 17903 0000D133 4D890CF8                	mov qword [r8 + rdi * 8], r9
 17904 0000D137 4983EA18                	sub r10, 8*3
 17905 0000D13B 48C744241002000000      	mov qword [rsp+2*8], 2
 17906 0000D144 498B4208                	mov rax, qword[r10 + 1 * 8]
 17907 0000D148 4889442408              	mov qword[rsp + 1*8] ,rax
 17908 0000D14D 498B02                  	mov rax, qword[r10]
 17909 0000D150 48890424                	mov qword[rsp], rax
 17910 0000D154 C8000000                	enter 0, 0
 17911                                  	; preparing a non-tail-call
 17912 0000D158 488B4528                	mov rax, PARAM(1)	; param strs
 17913 0000D15C 50                      	push rax
 17914 0000D15D 488B4520                	mov rax, PARAM(0)	; param str
 17915 0000D161 50                      	push rax
 17916 0000D162 6A02                    	push 2	; arg count
 17917 0000D164 488B4510                	mov rax, ENV
 17918 0000D168 488B00                  	mov rax, qword [rax + 8 * 0]
 17919 0000D16B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 17920 0000D16E 488B00                  	mov rax, qword [rax]
 17921 0000D171 803804                  	cmp byte [rax], T_closure
 17922 0000D174 0F85A25B0000            	jne L_error_non_closure
 17923 0000D17A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17924 0000D17D FF5009                  	call SOB_CLOSURE_CODE(rax)
 17925 0000D180 C9                      	leave
 17926 0000D181 C22000                  	ret AND_KILL_FRAME(2)
 17927                                  .L_lambda_opt_end_002b:	; new closure is in rax
 17928 0000D184 C9                      	leave
 17929 0000D185 C21800                  	ret AND_KILL_FRAME(1)
 17930                                  .L_lambda_simple_end_0145:	; new closure is in rax
 17931 0000D188 803804                  	cmp byte [rax], T_closure
 17932 0000D18B 0F858B5B0000            	jne L_error_non_closure
 17933 0000D191 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17934 0000D194 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17935 0000D197 C9                      	leave
 17936 0000D198 C21800                  	ret AND_KILL_FRAME(1)
 17937                                  .L_lambda_simple_end_0144:	; new closure is in rax
 17938 0000D19B 803804                  	cmp byte [rax], T_closure
 17939 0000D19E 0F85785B0000            	jne L_error_non_closure
 17940 0000D1A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17941 0000D1A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17942 0000D1AA C9                      	leave
 17943 0000D1AB C21800                  	ret AND_KILL_FRAME(1)
 17944                                  .L_lambda_simple_end_0140:	; new closure is in rax
 17945 0000D1AE 803804                  	cmp byte [rax], T_closure
 17946 0000D1B1 0F85655B0000            	jne L_error_non_closure
 17947 0000D1B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17948 0000D1BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 17949 0000D1BD C9                      	leave
 17950 0000D1BE C21800                  	ret AND_KILL_FRAME(1)
 17951                                  .L_lambda_simple_end_013f:	; new closure is in rax
 17952 0000D1C1 50                      	push rax
 17953 0000D1C2 6A01                    	push 1	; arg count
 17954 0000D1C4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17955 0000D1C9 E8F75B0000              	call malloc
 17956 0000D1CE 50                      	push rax
 17957 0000D1CF BF00000000              	mov rdi, 8 * 0	; new rib
 17958 0000D1D4 E8EC5B0000              	call malloc
 17959 0000D1D9 50                      	push rax
 17960 0000D1DA BF08000000              	mov rdi, 8 * 1	; extended env
 17961 0000D1DF E8E15B0000              	call malloc
 17962 0000D1E4 488B7D10                	mov rdi, ENV
 17963 0000D1E8 BE00000000              	mov rsi, 0
 17964 0000D1ED BA01000000              	mov rdx, 1
 17965                                  .L_lambda_simple_env_loop_0147:	; ext_env[i + 1] <-- env[i]
 17966 0000D1F2 4883FE00                	cmp rsi, 0
 17967 0000D1F6 7410                    	je .L_lambda_simple_env_end_0147
 17968 0000D1F8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17969 0000D1FC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17970 0000D200 48FFC6                  	inc rsi
 17971 0000D203 48FFC2                  	inc rdx
 17972 0000D206 EBEA                    	jmp .L_lambda_simple_env_loop_0147
 17973                                  .L_lambda_simple_env_end_0147:
 17974 0000D208 5B                      	pop rbx
 17975 0000D209 BE00000000              	mov rsi, 0
 17976                                  .L_lambda_simple_params_loop_0147:	; copy params
 17977 0000D20E 4883FE00                	cmp rsi, 0
 17978 0000D212 740E                    	je .L_lambda_simple_params_end_0147
 17979 0000D214 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17980 0000D219 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17981 0000D21D 48FFC6                  	inc rsi
 17982 0000D220 EBEC                    	jmp .L_lambda_simple_params_loop_0147
 17983                                  .L_lambda_simple_params_end_0147:
 17984 0000D222 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17985 0000D225 4889C3                  	mov rbx, rax
 17986 0000D228 58                      	pop rax
 17987 0000D229 C60004                  	mov byte [rax], T_closure
 17988 0000D22C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17989 0000D230 48C74009[3DD20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0147
 17990 0000D238 E98D000000              	jmp .L_lambda_simple_end_0147
 17991                                  .L_lambda_simple_code_0147:	; lambda-simple body
 17992 0000D23D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17993 0000D243 740B                    	je .L_lambda_simple_arity_check_ok_0147
 17994 0000D245 FF742410                	push qword [rsp + 8 * 2]
 17995 0000D249 6A01                    	push 1
 17996 0000D24B E92E5B0000              	jmp L_error_incorrect_arity_simple
 17997                                  .L_lambda_simple_arity_check_ok_0147:
 17998 0000D250 C8000000                	enter 0, 0
 17999                                  	; preparing a non-tail-call
 18000 0000D254 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 18001 0000D25C 803805                  	cmp byte [rax], T_undefined
 18002 0000D25F 0F84335A0000            	je L_error_fvar_undefined
 18003 0000D265 50                      	push rax
 18004 0000D266 6A01                    	push 1	; arg count
 18005 0000D268 488B4520                	mov rax, PARAM(0)	; param make-string=?
 18006 0000D26C 803804                  	cmp byte [rax], T_closure
 18007 0000D26F 0F85A75A0000            	jne L_error_non_closure
 18008 0000D275 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18009 0000D278 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18010 0000D27B 48890425[BC160000]      	mov qword [free_var_135], rax
 18011 0000D283 48B8-                   	mov rax, sob_void
 18011 0000D285 [0000000000000000] 
 18012                                  
 18013                                  	; preparing a non-tail-call
 18014 0000D28D 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 18015 0000D295 803805                  	cmp byte [rax], T_undefined
 18016 0000D298 0F84FA590000            	je L_error_fvar_undefined
 18017 0000D29E 50                      	push rax
 18018 0000D29F 6A01                    	push 1	; arg count
 18019 0000D2A1 488B4520                	mov rax, PARAM(0)	; param make-string=?
 18020 0000D2A5 803804                  	cmp byte [rax], T_closure
 18021 0000D2A8 0F856E5A0000            	jne L_error_non_closure
 18022 0000D2AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 18023 0000D2B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18024 0000D2B4 48890425[F0150000]      	mov qword [free_var_123], rax
 18025 0000D2BC 48B8-                   	mov rax, sob_void
 18025 0000D2BE [0000000000000000] 
 18026 0000D2C6 C9                      	leave
 18027 0000D2C7 C21800                  	ret AND_KILL_FRAME(1)
 18028                                  .L_lambda_simple_end_0147:	; new closure is in rax
 18029 0000D2CA 803804                  	cmp byte [rax], T_closure
 18030 0000D2CD 0F85495A0000            	jne L_error_non_closure
 18031 0000D2D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18032 0000D2D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18033                                  
 18034 0000D2D9 4889C7                  	mov rdi, rax
 18035 0000D2DC E8395D0000              	call print_sexpr_if_not_void
 18036 0000D2E1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18037 0000D2E6 E8DA5A0000              	call malloc
 18038 0000D2EB 50                      	push rax
 18039 0000D2EC BF00000000              	mov rdi, 8 * 0	; new rib
 18040 0000D2F1 E8CF5A0000              	call malloc
 18041 0000D2F6 50                      	push rax
 18042 0000D2F7 BF08000000              	mov rdi, 8 * 1	; extended env
 18043 0000D2FC E8C45A0000              	call malloc
 18044 0000D301 488B7D10                	mov rdi, ENV
 18045 0000D305 BE00000000              	mov rsi, 0
 18046 0000D30A BA01000000              	mov rdx, 1
 18047                                  .L_lambda_simple_env_loop_0148:	; ext_env[i + 1] <-- env[i]
 18048 0000D30F 4883FE00                	cmp rsi, 0
 18049 0000D313 7410                    	je .L_lambda_simple_env_end_0148
 18050 0000D315 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18051 0000D319 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18052 0000D31D 48FFC6                  	inc rsi
 18053 0000D320 48FFC2                  	inc rdx
 18054 0000D323 EBEA                    	jmp .L_lambda_simple_env_loop_0148
 18055                                  .L_lambda_simple_env_end_0148:
 18056 0000D325 5B                      	pop rbx
 18057 0000D326 BE00000000              	mov rsi, 0
 18058                                  .L_lambda_simple_params_loop_0148:	; copy params
 18059 0000D32B 4883FE00                	cmp rsi, 0
 18060 0000D32F 740E                    	je .L_lambda_simple_params_end_0148
 18061 0000D331 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18062 0000D336 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18063 0000D33A 48FFC6                  	inc rsi
 18064 0000D33D EBEC                    	jmp .L_lambda_simple_params_loop_0148
 18065                                  .L_lambda_simple_params_end_0148:
 18066 0000D33F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18067 0000D342 4889C3                  	mov rbx, rax
 18068 0000D345 58                      	pop rax
 18069 0000D346 C60004                  	mov byte [rax], T_closure
 18070 0000D349 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18071 0000D34D 48C74009[5AD30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0148
 18072 0000D355 E9D3000000              	jmp .L_lambda_simple_end_0148
 18073                                  .L_lambda_simple_code_0148:	; lambda-simple body
 18074 0000D35A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18075 0000D360 740B                    	je .L_lambda_simple_arity_check_ok_0148
 18076 0000D362 FF742410                	push qword [rsp + 8 * 2]
 18077 0000D366 6A01                    	push 1
 18078 0000D368 E9115A0000              	jmp L_error_incorrect_arity_simple
 18079                                  .L_lambda_simple_arity_check_ok_0148:
 18080 0000D36D C8000000                	enter 0, 0
 18081                                  	; preparing a non-tail-call
 18082 0000D371 488B4520                	mov rax, PARAM(0)	; param e
 18083 0000D375 50                      	push rax
 18084 0000D376 6A01                    	push 1	; arg count
 18085 0000D378 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18086 0000D380 803805                  	cmp byte [rax], T_undefined
 18087 0000D383 0F840F590000            	je L_error_fvar_undefined
 18088 0000D389 803804                  	cmp byte [rax], T_closure
 18089 0000D38C 0F858A590000            	jne L_error_non_closure
 18090 0000D392 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18091 0000D395 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18092 0000D398 483D[02000000]          	cmp rax, sob_boolean_false
 18093 0000D39E 0F8585000000            	jne .L_or_end_0022
 18094                                  	; preparing a non-tail-call
 18095 0000D3A4 488B4520                	mov rax, PARAM(0)	; param e
 18096 0000D3A8 50                      	push rax
 18097 0000D3A9 6A01                    	push 1	; arg count
 18098 0000D3AB 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 18099 0000D3B3 803805                  	cmp byte [rax], T_undefined
 18100 0000D3B6 0F84DC580000            	je L_error_fvar_undefined
 18101 0000D3BC 803804                  	cmp byte [rax], T_closure
 18102 0000D3BF 0F8557590000            	jne L_error_non_closure
 18103 0000D3C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18104 0000D3C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18105 0000D3CB 483D[02000000]          	cmp rax, sob_boolean_false
 18106 0000D3D1 744C                    	je .L_if_else_00fe
 18107                                  	; preparing a non-tail-call
 18108                                  	; preparing a non-tail-call
 18109 0000D3D3 488B4520                	mov rax, PARAM(0)	; param e
 18110 0000D3D7 50                      	push rax
 18111 0000D3D8 6A01                    	push 1	; arg count
 18112 0000D3DA 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 18113 0000D3E2 803805                  	cmp byte [rax], T_undefined
 18114 0000D3E5 0F84AD580000            	je L_error_fvar_undefined
 18115 0000D3EB 803804                  	cmp byte [rax], T_closure
 18116 0000D3EE 0F8528590000            	jne L_error_non_closure
 18117 0000D3F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18118 0000D3F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18119 0000D3FA 50                      	push rax
 18120 0000D3FB 6A01                    	push 1	; arg count
 18121 0000D3FD 488B0425[25140000]      	mov rax, qword [free_var_96]	; free var list?
 18122 0000D405 803805                  	cmp byte [rax], T_undefined
 18123 0000D408 0F848A580000            	je L_error_fvar_undefined
 18124 0000D40E 803804                  	cmp byte [rax], T_closure
 18125 0000D411 0F8505590000            	jne L_error_non_closure
 18126 0000D417 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18127 0000D41A FF5009                  	call SOB_CLOSURE_CODE(rax)
 18128 0000D41D EB0A                    	jmp .L_if_end_00fe
 18129                                  .L_if_else_00fe:
 18130 0000D41F 48B8-                   	mov rax, L_constants + 2
 18130 0000D421 [0200000000000000] 
 18131                                  .L_if_end_00fe:
 18132                                  .L_or_end_0022:
 18133 0000D429 C9                      	leave
 18134 0000D42A C21800                  	ret AND_KILL_FRAME(1)
 18135                                  .L_lambda_simple_end_0148:	; new closure is in rax
 18136 0000D42D 48890425[25140000]      	mov qword [free_var_96], rax
 18137 0000D435 48B8-                   	mov rax, sob_void
 18137 0000D437 [0000000000000000] 
 18138                                  
 18139 0000D43F 4889C7                  	mov rdi, rax
 18140 0000D442 E8D35B0000              	call print_sexpr_if_not_void
 18141                                  	; preparing a non-tail-call
 18142 0000D447 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 18143 0000D44F 803805                  	cmp byte [rax], T_undefined
 18144 0000D452 0F8440580000            	je L_error_fvar_undefined
 18145 0000D458 50                      	push rax
 18146 0000D459 6A01                    	push 1	; arg count
 18147 0000D45B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18148 0000D460 E860590000              	call malloc
 18149 0000D465 50                      	push rax
 18150 0000D466 BF00000000              	mov rdi, 8 * 0	; new rib
 18151 0000D46B E855590000              	call malloc
 18152 0000D470 50                      	push rax
 18153 0000D471 BF08000000              	mov rdi, 8 * 1	; extended env
 18154 0000D476 E84A590000              	call malloc
 18155 0000D47B 488B7D10                	mov rdi, ENV
 18156 0000D47F BE00000000              	mov rsi, 0
 18157 0000D484 BA01000000              	mov rdx, 1
 18158                                  .L_lambda_simple_env_loop_0149:	; ext_env[i + 1] <-- env[i]
 18159 0000D489 4883FE00                	cmp rsi, 0
 18160 0000D48D 7410                    	je .L_lambda_simple_env_end_0149
 18161 0000D48F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18162 0000D493 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18163 0000D497 48FFC6                  	inc rsi
 18164 0000D49A 48FFC2                  	inc rdx
 18165 0000D49D EBEA                    	jmp .L_lambda_simple_env_loop_0149
 18166                                  .L_lambda_simple_env_end_0149:
 18167 0000D49F 5B                      	pop rbx
 18168 0000D4A0 BE00000000              	mov rsi, 0
 18169                                  .L_lambda_simple_params_loop_0149:	; copy params
 18170 0000D4A5 4883FE00                	cmp rsi, 0
 18171 0000D4A9 740E                    	je .L_lambda_simple_params_end_0149
 18172 0000D4AB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18173 0000D4B0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18174 0000D4B4 48FFC6                  	inc rsi
 18175 0000D4B7 EBEC                    	jmp .L_lambda_simple_params_loop_0149
 18176                                  .L_lambda_simple_params_end_0149:
 18177 0000D4B9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18178 0000D4BC 4889C3                  	mov rbx, rax
 18179 0000D4BF 58                      	pop rax
 18180 0000D4C0 C60004                  	mov byte [rax], T_closure
 18181 0000D4C3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18182 0000D4C7 48C74009[D4D40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0149
 18183 0000D4CF E998050000              	jmp .L_lambda_simple_end_0149
 18184                                  .L_lambda_simple_code_0149:	; lambda-simple body
 18185 0000D4D4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18186 0000D4DA 740B                    	je .L_lambda_simple_arity_check_ok_0149
 18187 0000D4DC FF742410                	push qword [rsp + 8 * 2]
 18188 0000D4E0 6A01                    	push 1
 18189 0000D4E2 E997580000              	jmp L_error_incorrect_arity_simple
 18190                                  .L_lambda_simple_arity_check_ok_0149:
 18191 0000D4E7 C8000000                	enter 0, 0
 18192 0000D4EB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18193 0000D4F0 E8D0580000              	call malloc
 18194 0000D4F5 50                      	push rax
 18195 0000D4F6 BF08000000              	mov rdi, 8 * 1	; new rib
 18196 0000D4FB E8C5580000              	call malloc
 18197 0000D500 50                      	push rax
 18198 0000D501 BF10000000              	mov rdi, 8 * 2	; extended env
 18199 0000D506 E8BA580000              	call malloc
 18200 0000D50B 488B7D10                	mov rdi, ENV
 18201 0000D50F BE00000000              	mov rsi, 0
 18202 0000D514 BA01000000              	mov rdx, 1
 18203                                  .L_lambda_opt_env_loop_002c:	; ext_env[i + 1] <-- env[i]
 18204 0000D519 4883FE01                	cmp rsi, 1
 18205 0000D51D 7410                    	je .L_lambda_opt_env_end_002c
 18206 0000D51F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18207 0000D523 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18208 0000D527 48FFC6                  	inc rsi
 18209 0000D52A 48FFC2                  	inc rdx
 18210 0000D52D EBEA                    	jmp .L_lambda_opt_env_loop_002c
 18211                                  .L_lambda_opt_env_end_002c:
 18212 0000D52F 5B                      	pop rbx
 18213 0000D530 BE00000000              	mov rsi, 0
 18214                                  .L_lambda_opt_params_loop_002c:	; copy params
 18215 0000D535 4883FE01                	cmp rsi, 1
 18216 0000D539 740E                    	je .L_lambda_opt_params_end_002c
 18217 0000D53B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18218 0000D540 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18219 0000D544 48FFC6                  	inc rsi
 18220 0000D547 EBEC                    	jmp .L_lambda_opt_params_loop_002c
 18221                                  .L_lambda_opt_params_end_002c:
 18222 0000D549 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18223 0000D54C 4889C3                  	mov rbx, rax
 18224 0000D54F 58                      	pop rax
 18225 0000D550 C60004                  	mov byte [rax], T_closure
 18226 0000D553 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18227 0000D557 48C74009[64D50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_002c
 18228 0000D55F E904050000              	jmp .L_lambda_opt_end_002c
 18229                                  .L_lambda_opt_code_002c:	; lambda-opt body
 18230 0000D564 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18231 0000D56A 7411                    	je .L_lambda_opt_arity_check_exact_002c
 18232 0000D56C 0F8F4D020000            	jg .L_lambda_opt_arity_check_more_002c
 18233 0000D572 FF742410                	push qword [rsp + 8 * 2]
 18234 0000D576 6A01                    	push 1
 18235 0000D578 E915580000              	jmp L_error_incorrect_arity_opt
 18236                                  .L_lambda_opt_arity_check_exact_002c:
 18237 0000D57D 4883EC08                	sub rsp, 8
 18238 0000D581 488B442408              	mov rax, qword[rsp + 8 *1]
 18239 0000D586 48890424                	mov qword[rsp], rax  
 18240 0000D58A 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 18241 0000D58F 4889442408              	mov qword[rsp + 8 * 1], rax
 18242 0000D594 B802000000              	mov rax, 2
 18243 0000D599 4889442410              	mov qword[rsp + 8 *2], rax
 18244 0000D59E 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 18245 0000D5A3 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 18246 0000D5A8 48B8-                   	mov rax, sob_nil
 18246 0000D5AA [0100000000000000] 
 18247 0000D5B2 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 18248 0000D5B7 C8000000                	enter 0, 0
 18249                                  	; preparing a non-tail-call
 18250                                  	; preparing a non-tail-call
 18251 0000D5BB 488B4528                	mov rax, PARAM(1)	; param xs
 18252 0000D5BF 50                      	push rax
 18253 0000D5C0 6A01                    	push 1	; arg count
 18254 0000D5C2 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18255 0000D5CA 803805                  	cmp byte [rax], T_undefined
 18256 0000D5CD 0F84C5560000            	je L_error_fvar_undefined
 18257 0000D5D3 803804                  	cmp byte [rax], T_closure
 18258 0000D5D6 0F8540570000            	jne L_error_non_closure
 18259 0000D5DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 18260 0000D5DF FF5009                  	call SOB_CLOSURE_CODE(rax)
 18261 0000D5E2 483D[02000000]          	cmp rax, sob_boolean_false
 18262 0000D5E8 740F                    	je .L_if_else_0104
 18263 0000D5EA 48B8-                   	mov rax, L_constants + 0
 18263 0000D5EC [0000000000000000] 
 18264 0000D5F4 E9EE000000              	jmp .L_if_end_0104
 18265                                  .L_if_else_0104:
 18266                                  	; preparing a non-tail-call
 18267 0000D5F9 488B4528                	mov rax, PARAM(1)	; param xs
 18268 0000D5FD 50                      	push rax
 18269 0000D5FE 6A01                    	push 1	; arg count
 18270 0000D600 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 18271 0000D608 803805                  	cmp byte [rax], T_undefined
 18272 0000D60B 0F8487560000            	je L_error_fvar_undefined
 18273 0000D611 803804                  	cmp byte [rax], T_closure
 18274 0000D614 0F8502570000            	jne L_error_non_closure
 18275 0000D61A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18276 0000D61D FF5009                  	call SOB_CLOSURE_CODE(rax)
 18277 0000D620 483D[02000000]          	cmp rax, sob_boolean_false
 18278 0000D626 744C                    	je .L_if_else_0102
 18279                                  	; preparing a non-tail-call
 18280                                  	; preparing a non-tail-call
 18281 0000D628 488B4528                	mov rax, PARAM(1)	; param xs
 18282 0000D62C 50                      	push rax
 18283 0000D62D 6A01                    	push 1	; arg count
 18284 0000D62F 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 18285 0000D637 803805                  	cmp byte [rax], T_undefined
 18286 0000D63A 0F8458560000            	je L_error_fvar_undefined
 18287 0000D640 803804                  	cmp byte [rax], T_closure
 18288 0000D643 0F85D3560000            	jne L_error_non_closure
 18289 0000D649 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18290 0000D64C FF5009                  	call SOB_CLOSURE_CODE(rax)
 18291 0000D64F 50                      	push rax
 18292 0000D650 6A01                    	push 1	; arg count
 18293 0000D652 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18294 0000D65A 803805                  	cmp byte [rax], T_undefined
 18295 0000D65D 0F8435560000            	je L_error_fvar_undefined
 18296 0000D663 803804                  	cmp byte [rax], T_closure
 18297 0000D666 0F85B0560000            	jne L_error_non_closure
 18298 0000D66C FF7001                  	push SOB_CLOSURE_ENV(rax)
 18299 0000D66F FF5009                  	call SOB_CLOSURE_CODE(rax)
 18300 0000D672 EB0A                    	jmp .L_if_end_0102
 18301                                  .L_if_else_0102:
 18302 0000D674 48B8-                   	mov rax, L_constants + 2
 18302 0000D676 [0200000000000000] 
 18303                                  .L_if_end_0102:
 18304 0000D67E 483D[02000000]          	cmp rax, sob_boolean_false
 18305 0000D684 7429                    	je .L_if_else_0103
 18306                                  	; preparing a non-tail-call
 18307 0000D686 488B4528                	mov rax, PARAM(1)	; param xs
 18308 0000D68A 50                      	push rax
 18309 0000D68B 6A01                    	push 1	; arg count
 18310 0000D68D 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18311 0000D695 803805                  	cmp byte [rax], T_undefined
 18312 0000D698 0F84FA550000            	je L_error_fvar_undefined
 18313 0000D69E 803804                  	cmp byte [rax], T_closure
 18314 0000D6A1 0F8575560000            	jne L_error_non_closure
 18315 0000D6A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18316 0000D6AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 18317 0000D6AD EB38                    	jmp .L_if_end_0103
 18318                                  .L_if_else_0103:
 18319                                  	; preparing a non-tail-call
 18320 0000D6AF 48B8-                   	mov rax, L_constants + 2955
 18320 0000D6B1 [8B0B000000000000] 
 18321 0000D6B9 50                      	push rax
 18322 0000D6BA 48B8-                   	mov rax, L_constants + 2946
 18322 0000D6BC [820B000000000000] 
 18323 0000D6C4 50                      	push rax
 18324 0000D6C5 6A02                    	push 2	; arg count
 18325 0000D6C7 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 18326 0000D6CF 803805                  	cmp byte [rax], T_undefined
 18327 0000D6D2 0F84C0550000            	je L_error_fvar_undefined
 18328 0000D6D8 803804                  	cmp byte [rax], T_closure
 18329 0000D6DB 0F853B560000            	jne L_error_non_closure
 18330 0000D6E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18331 0000D6E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18332                                  .L_if_end_0103:
 18333                                  .L_if_end_0104:
 18334 0000D6E7 50                      	push rax
 18335 0000D6E8 6A01                    	push 1	; arg count
 18336 0000D6EA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18337 0000D6EF E8D1560000              	call malloc
 18338 0000D6F4 50                      	push rax
 18339 0000D6F5 BF10000000              	mov rdi, 8 * 2	; new rib
 18340 0000D6FA E8C6560000              	call malloc
 18341 0000D6FF 50                      	push rax
 18342 0000D700 BF18000000              	mov rdi, 8 * 3	; extended env
 18343 0000D705 E8BB560000              	call malloc
 18344 0000D70A 488B7D10                	mov rdi, ENV
 18345 0000D70E BE00000000              	mov rsi, 0
 18346 0000D713 BA01000000              	mov rdx, 1
 18347                                  .L_lambda_simple_env_loop_014b:	; ext_env[i + 1] <-- env[i]
 18348 0000D718 4883FE02                	cmp rsi, 2
 18349 0000D71C 7410                    	je .L_lambda_simple_env_end_014b
 18350 0000D71E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18351 0000D722 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18352 0000D726 48FFC6                  	inc rsi
 18353 0000D729 48FFC2                  	inc rdx
 18354 0000D72C EBEA                    	jmp .L_lambda_simple_env_loop_014b
 18355                                  .L_lambda_simple_env_end_014b:
 18356 0000D72E 5B                      	pop rbx
 18357 0000D72F BE00000000              	mov rsi, 0
 18358                                  .L_lambda_simple_params_loop_014b:	; copy params
 18359 0000D734 4883FE02                	cmp rsi, 2
 18360 0000D738 740E                    	je .L_lambda_simple_params_end_014b
 18361 0000D73A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18362 0000D73F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18363 0000D743 48FFC6                  	inc rsi
 18364 0000D746 EBEC                    	jmp .L_lambda_simple_params_loop_014b
 18365                                  .L_lambda_simple_params_end_014b:
 18366 0000D748 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18367 0000D74B 4889C3                  	mov rbx, rax
 18368 0000D74E 58                      	pop rax
 18369 0000D74F C60004                  	mov byte [rax], T_closure
 18370 0000D752 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18371 0000D756 48C74009[60D70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_014b
 18372 0000D75E EB47                    	jmp .L_lambda_simple_end_014b
 18373                                  .L_lambda_simple_code_014b:	; lambda-simple body
 18374 0000D760 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18375 0000D766 740B                    	je .L_lambda_simple_arity_check_ok_014b
 18376 0000D768 FF742410                	push qword [rsp + 8 * 2]
 18377 0000D76C 6A01                    	push 1
 18378 0000D76E E90B560000              	jmp L_error_incorrect_arity_simple
 18379                                  .L_lambda_simple_arity_check_ok_014b:
 18380 0000D773 C8000000                	enter 0, 0
 18381                                  	; preparing a non-tail-call
 18382 0000D777 488B4520                	mov rax, PARAM(0)	; param x
 18383 0000D77B 50                      	push rax
 18384 0000D77C 488B4510                	mov rax, ENV
 18385 0000D780 488B00                  	mov rax, qword [rax + 8 * 0]
 18386 0000D783 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 18387 0000D786 50                      	push rax
 18388 0000D787 6A02                    	push 2	; arg count
 18389 0000D789 488B4510                	mov rax, ENV
 18390 0000D78D 488B4008                	mov rax, qword [rax + 8 * 1]
 18391 0000D791 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 18392 0000D794 803804                  	cmp byte [rax], T_closure
 18393 0000D797 0F857F550000            	jne L_error_non_closure
 18394 0000D79D FF7001                  	push SOB_CLOSURE_ENV(rax)
 18395 0000D7A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18396 0000D7A3 C9                      	leave
 18397 0000D7A4 C21800                  	ret AND_KILL_FRAME(1)
 18398                                  .L_lambda_simple_end_014b:	; new closure is in rax
 18399 0000D7A7 803804                  	cmp byte [rax], T_closure
 18400 0000D7AA 0F856C550000            	jne L_error_non_closure
 18401 0000D7B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18402 0000D7B3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18403 0000D7B6 C9                      	leave
 18404 0000D7B7 C22000                  	ret AND_KILL_FRAME(2)
 18405 0000D7BA E9A9020000              	jmp .L_lambda_opt_end_002c	; new closure is in rax
 18406                                  .L_lambda_opt_arity_check_more_002c:
 18407 0000D7BF 488B442410              	mov rax, qword[rsp + 2 * 8]
 18408 0000D7C4 4889C7                  	mov rdi, rax
 18409 0000D7C7 49B9-                   	mov r9, sob_nil
 18409 0000D7C9 [0100000000000000] 
 18410 0000D7D1 4C8B442410              	mov r8, qword[rsp+2*8]
 18411                                  .L_lambda_opt_stack_shrink_loop_002c:
 18412 0000D7D6 4983F801                	cmp r8, 1
 18413 0000D7DA 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_002c
 18414 0000D7DC 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 18415 0000D7E1 BF11000000              	mov rdi, 1+8+8	;for pair
 18416 0000D7E6 E8DA550000              	call malloc	 ;to create the pair in the stack
 18417 0000D7EB C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 18418 0000D7EE 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 18419 0000D7F2 4C894809                 	mov qword[rax+1+8],r9
 18420 0000D7F6 4989C1                  	mov r9 , rax	 ; for the recursion 
 18421 0000D7F9 49FFC8                  	dec r8
 18422 0000D7FC EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_002c
 18423                                  .L_lambda_opt_stack_shrink_loop_exit_002c:
 18424 0000D7FE 488B442410              	mov rax, qword[rsp + 2 * 8]
 18425 0000D803 BF02000000              	mov rdi, 2
 18426 0000D808 4829F8                  	sub rax, rdi
 18427 0000D80B 4889C7                  	mov rdi, rax
 18428 0000D80E 486BC008                	imul rax,8
 18429 0000D812 4801C4                  	add rsp, rax
 18430 0000D815 4889E0                  	mov rax, rsp
 18431 0000D818 4989F8                  	mov r8, rdi
 18432 0000D81B 4D6BC008                	imul r8, 8
 18433 0000D81F 4C29C0                  	sub rax, r8
 18434 0000D822 4989C2                  	mov r10, rax	; holds the original ret in the stack
 18435 0000D825 4983C218                	add r10, 8*3
 18436 0000D829 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 18437 0000D82D 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 18438 0000D830 4D6BC008                	imul r8,8
 18439 0000D834 4C01C0                  	add rax, r8
 18440 0000D837 4C8908                  	mov qword[rax] ,r9
 18441 0000D83A 4D89D0                   	mov r8, r10
 18442 0000D83D 4983C000                	add r8, 8 * 0
 18443 0000D841 4D8B08                  	mov r9,qword[r8]
 18444 0000D844 4D890CF8                	mov qword [r8 + rdi * 8], r9
 18445 0000D848 4983EA18                	sub r10, 8*3
 18446 0000D84C 48C744241002000000      	mov qword [rsp+2*8], 2
 18447 0000D855 498B4208                	mov rax, qword[r10 + 1 * 8]
 18448 0000D859 4889442408              	mov qword[rsp + 1*8] ,rax
 18449 0000D85E 498B02                  	mov rax, qword[r10]
 18450 0000D861 48890424                	mov qword[rsp], rax
 18451 0000D865 C8000000                	enter 0, 0
 18452                                  	; preparing a non-tail-call
 18453                                  	; preparing a non-tail-call
 18454 0000D869 488B4528                	mov rax, PARAM(1)	; param xs
 18455 0000D86D 50                      	push rax
 18456 0000D86E 6A01                    	push 1	; arg count
 18457 0000D870 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18458 0000D878 803805                  	cmp byte [rax], T_undefined
 18459 0000D87B 0F8417540000            	je L_error_fvar_undefined
 18460 0000D881 803804                  	cmp byte [rax], T_closure
 18461 0000D884 0F8592540000            	jne L_error_non_closure
 18462 0000D88A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18463 0000D88D FF5009                  	call SOB_CLOSURE_CODE(rax)
 18464 0000D890 483D[02000000]          	cmp rax, sob_boolean_false
 18465 0000D896 740F                    	je .L_if_else_0101
 18466 0000D898 48B8-                   	mov rax, L_constants + 0
 18466 0000D89A [0000000000000000] 
 18467 0000D8A2 E9EE000000              	jmp .L_if_end_0101
 18468                                  .L_if_else_0101:
 18469                                  	; preparing a non-tail-call
 18470 0000D8A7 488B4528                	mov rax, PARAM(1)	; param xs
 18471 0000D8AB 50                      	push rax
 18472 0000D8AC 6A01                    	push 1	; arg count
 18473 0000D8AE 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 18474 0000D8B6 803805                  	cmp byte [rax], T_undefined
 18475 0000D8B9 0F84D9530000            	je L_error_fvar_undefined
 18476 0000D8BF 803804                  	cmp byte [rax], T_closure
 18477 0000D8C2 0F8554540000            	jne L_error_non_closure
 18478 0000D8C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18479 0000D8CB FF5009                  	call SOB_CLOSURE_CODE(rax)
 18480 0000D8CE 483D[02000000]          	cmp rax, sob_boolean_false
 18481 0000D8D4 744C                    	je .L_if_else_00ff
 18482                                  	; preparing a non-tail-call
 18483                                  	; preparing a non-tail-call
 18484 0000D8D6 488B4528                	mov rax, PARAM(1)	; param xs
 18485 0000D8DA 50                      	push rax
 18486 0000D8DB 6A01                    	push 1	; arg count
 18487 0000D8DD 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 18488 0000D8E5 803805                  	cmp byte [rax], T_undefined
 18489 0000D8E8 0F84AA530000            	je L_error_fvar_undefined
 18490 0000D8EE 803804                  	cmp byte [rax], T_closure
 18491 0000D8F1 0F8525540000            	jne L_error_non_closure
 18492 0000D8F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18493 0000D8FA FF5009                  	call SOB_CLOSURE_CODE(rax)
 18494 0000D8FD 50                      	push rax
 18495 0000D8FE 6A01                    	push 1	; arg count
 18496 0000D900 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18497 0000D908 803805                  	cmp byte [rax], T_undefined
 18498 0000D90B 0F8487530000            	je L_error_fvar_undefined
 18499 0000D911 803804                  	cmp byte [rax], T_closure
 18500 0000D914 0F8502540000            	jne L_error_non_closure
 18501 0000D91A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18502 0000D91D FF5009                  	call SOB_CLOSURE_CODE(rax)
 18503 0000D920 EB0A                    	jmp .L_if_end_00ff
 18504                                  .L_if_else_00ff:
 18505 0000D922 48B8-                   	mov rax, L_constants + 2
 18505 0000D924 [0200000000000000] 
 18506                                  .L_if_end_00ff:
 18507 0000D92C 483D[02000000]          	cmp rax, sob_boolean_false
 18508 0000D932 7429                    	je .L_if_else_0100
 18509                                  	; preparing a non-tail-call
 18510 0000D934 488B4528                	mov rax, PARAM(1)	; param xs
 18511 0000D938 50                      	push rax
 18512 0000D939 6A01                    	push 1	; arg count
 18513 0000D93B 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18514 0000D943 803805                  	cmp byte [rax], T_undefined
 18515 0000D946 0F844C530000            	je L_error_fvar_undefined
 18516 0000D94C 803804                  	cmp byte [rax], T_closure
 18517 0000D94F 0F85C7530000            	jne L_error_non_closure
 18518 0000D955 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18519 0000D958 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18520 0000D95B EB38                    	jmp .L_if_end_0100
 18521                                  .L_if_else_0100:
 18522                                  	; preparing a non-tail-call
 18523 0000D95D 48B8-                   	mov rax, L_constants + 2955
 18523 0000D95F [8B0B000000000000] 
 18524 0000D967 50                      	push rax
 18525 0000D968 48B8-                   	mov rax, L_constants + 2946
 18525 0000D96A [820B000000000000] 
 18526 0000D972 50                      	push rax
 18527 0000D973 6A02                    	push 2	; arg count
 18528 0000D975 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 18529 0000D97D 803805                  	cmp byte [rax], T_undefined
 18530 0000D980 0F8412530000            	je L_error_fvar_undefined
 18531 0000D986 803804                  	cmp byte [rax], T_closure
 18532 0000D989 0F858D530000            	jne L_error_non_closure
 18533 0000D98F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18534 0000D992 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18535                                  .L_if_end_0100:
 18536                                  .L_if_end_0101:
 18537 0000D995 50                      	push rax
 18538 0000D996 6A01                    	push 1	; arg count
 18539 0000D998 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18540 0000D99D E823540000              	call malloc
 18541 0000D9A2 50                      	push rax
 18542 0000D9A3 BF10000000              	mov rdi, 8 * 2	; new rib
 18543 0000D9A8 E818540000              	call malloc
 18544 0000D9AD 50                      	push rax
 18545 0000D9AE BF18000000              	mov rdi, 8 * 3	; extended env
 18546 0000D9B3 E80D540000              	call malloc
 18547 0000D9B8 488B7D10                	mov rdi, ENV
 18548 0000D9BC BE00000000              	mov rsi, 0
 18549 0000D9C1 BA01000000              	mov rdx, 1
 18550                                  .L_lambda_simple_env_loop_014a:	; ext_env[i + 1] <-- env[i]
 18551 0000D9C6 4883FE02                	cmp rsi, 2
 18552 0000D9CA 7410                    	je .L_lambda_simple_env_end_014a
 18553 0000D9CC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18554 0000D9D0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18555 0000D9D4 48FFC6                  	inc rsi
 18556 0000D9D7 48FFC2                  	inc rdx
 18557 0000D9DA EBEA                    	jmp .L_lambda_simple_env_loop_014a
 18558                                  .L_lambda_simple_env_end_014a:
 18559 0000D9DC 5B                      	pop rbx
 18560 0000D9DD BE00000000              	mov rsi, 0
 18561                                  .L_lambda_simple_params_loop_014a:	; copy params
 18562 0000D9E2 4883FE02                	cmp rsi, 2
 18563 0000D9E6 740E                    	je .L_lambda_simple_params_end_014a
 18564 0000D9E8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18565 0000D9ED 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18566 0000D9F1 48FFC6                  	inc rsi
 18567 0000D9F4 EBEC                    	jmp .L_lambda_simple_params_loop_014a
 18568                                  .L_lambda_simple_params_end_014a:
 18569 0000D9F6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18570 0000D9F9 4889C3                  	mov rbx, rax
 18571 0000D9FC 58                      	pop rax
 18572 0000D9FD C60004                  	mov byte [rax], T_closure
 18573 0000DA00 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18574 0000DA04 48C74009[0EDA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_014a
 18575 0000DA0C EB47                    	jmp .L_lambda_simple_end_014a
 18576                                  .L_lambda_simple_code_014a:	; lambda-simple body
 18577 0000DA0E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18578 0000DA14 740B                    	je .L_lambda_simple_arity_check_ok_014a
 18579 0000DA16 FF742410                	push qword [rsp + 8 * 2]
 18580 0000DA1A 6A01                    	push 1
 18581 0000DA1C E95D530000              	jmp L_error_incorrect_arity_simple
 18582                                  .L_lambda_simple_arity_check_ok_014a:
 18583 0000DA21 C8000000                	enter 0, 0
 18584                                  	; preparing a non-tail-call
 18585 0000DA25 488B4520                	mov rax, PARAM(0)	; param x
 18586 0000DA29 50                      	push rax
 18587 0000DA2A 488B4510                	mov rax, ENV
 18588 0000DA2E 488B00                  	mov rax, qword [rax + 8 * 0]
 18589 0000DA31 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 18590 0000DA34 50                      	push rax
 18591 0000DA35 6A02                    	push 2	; arg count
 18592 0000DA37 488B4510                	mov rax, ENV
 18593 0000DA3B 488B4008                	mov rax, qword [rax + 8 * 1]
 18594 0000DA3F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 18595 0000DA42 803804                  	cmp byte [rax], T_closure
 18596 0000DA45 0F85D1520000            	jne L_error_non_closure
 18597 0000DA4B FF7001                  	push SOB_CLOSURE_ENV(rax)
 18598 0000DA4E FF5009                  	call SOB_CLOSURE_CODE(rax)
 18599 0000DA51 C9                      	leave
 18600 0000DA52 C21800                  	ret AND_KILL_FRAME(1)
 18601                                  .L_lambda_simple_end_014a:	; new closure is in rax
 18602 0000DA55 803804                  	cmp byte [rax], T_closure
 18603 0000DA58 0F85BE520000            	jne L_error_non_closure
 18604 0000DA5E FF7001                  	push SOB_CLOSURE_ENV(rax)
 18605 0000DA61 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18606 0000DA64 C9                      	leave
 18607 0000DA65 C22000                  	ret AND_KILL_FRAME(2)
 18608                                  .L_lambda_opt_end_002c:	; new closure is in rax
 18609 0000DA68 C9                      	leave
 18610 0000DA69 C21800                  	ret AND_KILL_FRAME(1)
 18611                                  .L_lambda_simple_end_0149:	; new closure is in rax
 18612 0000DA6C 803804                  	cmp byte [rax], T_closure
 18613 0000DA6F 0F85A7520000            	jne L_error_non_closure
 18614 0000DA75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18615 0000DA78 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18616 0000DA7B 48890425[7A140000]      	mov qword [free_var_101], rax
 18617 0000DA83 48B8-                   	mov rax, sob_void
 18617 0000DA85 [0000000000000000] 
 18618                                  
 18619 0000DA8D 4889C7                  	mov rdi, rax
 18620 0000DA90 E885550000              	call print_sexpr_if_not_void
 18621                                  	; preparing a non-tail-call
 18622 0000DA95 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 18623 0000DA9D 803805                  	cmp byte [rax], T_undefined
 18624 0000DAA0 0F84F2510000            	je L_error_fvar_undefined
 18625 0000DAA6 50                      	push rax
 18626 0000DAA7 6A01                    	push 1	; arg count
 18627 0000DAA9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18628 0000DAAE E812530000              	call malloc
 18629 0000DAB3 50                      	push rax
 18630 0000DAB4 BF00000000              	mov rdi, 8 * 0	; new rib
 18631 0000DAB9 E807530000              	call malloc
 18632 0000DABE 50                      	push rax
 18633 0000DABF BF08000000              	mov rdi, 8 * 1	; extended env
 18634 0000DAC4 E8FC520000              	call malloc
 18635 0000DAC9 488B7D10                	mov rdi, ENV
 18636 0000DACD BE00000000              	mov rsi, 0
 18637 0000DAD2 BA01000000              	mov rdx, 1
 18638                                  .L_lambda_simple_env_loop_014c:	; ext_env[i + 1] <-- env[i]
 18639 0000DAD7 4883FE00                	cmp rsi, 0
 18640 0000DADB 7410                    	je .L_lambda_simple_env_end_014c
 18641 0000DADD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18642 0000DAE1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18643 0000DAE5 48FFC6                  	inc rsi
 18644 0000DAE8 48FFC2                  	inc rdx
 18645 0000DAEB EBEA                    	jmp .L_lambda_simple_env_loop_014c
 18646                                  .L_lambda_simple_env_end_014c:
 18647 0000DAED 5B                      	pop rbx
 18648 0000DAEE BE00000000              	mov rsi, 0
 18649                                  .L_lambda_simple_params_loop_014c:	; copy params
 18650 0000DAF3 4883FE00                	cmp rsi, 0
 18651 0000DAF7 740E                    	je .L_lambda_simple_params_end_014c
 18652 0000DAF9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18653 0000DAFE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18654 0000DB02 48FFC6                  	inc rsi
 18655 0000DB05 EBEC                    	jmp .L_lambda_simple_params_loop_014c
 18656                                  .L_lambda_simple_params_end_014c:
 18657 0000DB07 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18658 0000DB0A 4889C3                  	mov rbx, rax
 18659 0000DB0D 58                      	pop rax
 18660 0000DB0E C60004                  	mov byte [rax], T_closure
 18661 0000DB11 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18662 0000DB15 48C74009[22DB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_014c
 18663 0000DB1D E998050000              	jmp .L_lambda_simple_end_014c
 18664                                  .L_lambda_simple_code_014c:	; lambda-simple body
 18665 0000DB22 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18666 0000DB28 740B                    	je .L_lambda_simple_arity_check_ok_014c
 18667 0000DB2A FF742410                	push qword [rsp + 8 * 2]
 18668 0000DB2E 6A01                    	push 1
 18669 0000DB30 E949520000              	jmp L_error_incorrect_arity_simple
 18670                                  .L_lambda_simple_arity_check_ok_014c:
 18671 0000DB35 C8000000                	enter 0, 0
 18672 0000DB39 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18673 0000DB3E E882520000              	call malloc
 18674 0000DB43 50                      	push rax
 18675 0000DB44 BF08000000              	mov rdi, 8 * 1	; new rib
 18676 0000DB49 E877520000              	call malloc
 18677 0000DB4E 50                      	push rax
 18678 0000DB4F BF10000000              	mov rdi, 8 * 2	; extended env
 18679 0000DB54 E86C520000              	call malloc
 18680 0000DB59 488B7D10                	mov rdi, ENV
 18681 0000DB5D BE00000000              	mov rsi, 0
 18682 0000DB62 BA01000000              	mov rdx, 1
 18683                                  .L_lambda_opt_env_loop_002d:	; ext_env[i + 1] <-- env[i]
 18684 0000DB67 4883FE01                	cmp rsi, 1
 18685 0000DB6B 7410                    	je .L_lambda_opt_env_end_002d
 18686 0000DB6D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18687 0000DB71 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18688 0000DB75 48FFC6                  	inc rsi
 18689 0000DB78 48FFC2                  	inc rdx
 18690 0000DB7B EBEA                    	jmp .L_lambda_opt_env_loop_002d
 18691                                  .L_lambda_opt_env_end_002d:
 18692 0000DB7D 5B                      	pop rbx
 18693 0000DB7E BE00000000              	mov rsi, 0
 18694                                  .L_lambda_opt_params_loop_002d:	; copy params
 18695 0000DB83 4883FE01                	cmp rsi, 1
 18696 0000DB87 740E                    	je .L_lambda_opt_params_end_002d
 18697 0000DB89 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18698 0000DB8E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18699 0000DB92 48FFC6                  	inc rsi
 18700 0000DB95 EBEC                    	jmp .L_lambda_opt_params_loop_002d
 18701                                  .L_lambda_opt_params_end_002d:
 18702 0000DB97 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18703 0000DB9A 4889C3                  	mov rbx, rax
 18704 0000DB9D 58                      	pop rax
 18705 0000DB9E C60004                  	mov byte [rax], T_closure
 18706 0000DBA1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18707 0000DBA5 48C74009[B2DB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_002d
 18708 0000DBAD E904050000              	jmp .L_lambda_opt_end_002d
 18709                                  .L_lambda_opt_code_002d:	; lambda-opt body
 18710 0000DBB2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18711 0000DBB8 7411                    	je .L_lambda_opt_arity_check_exact_002d
 18712 0000DBBA 0F8F4D020000            	jg .L_lambda_opt_arity_check_more_002d
 18713 0000DBC0 FF742410                	push qword [rsp + 8 * 2]
 18714 0000DBC4 6A01                    	push 1
 18715 0000DBC6 E9C7510000              	jmp L_error_incorrect_arity_opt
 18716                                  .L_lambda_opt_arity_check_exact_002d:
 18717 0000DBCB 4883EC08                	sub rsp, 8
 18718 0000DBCF 488B442408              	mov rax, qword[rsp + 8 *1]
 18719 0000DBD4 48890424                	mov qword[rsp], rax  
 18720 0000DBD8 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 18721 0000DBDD 4889442408              	mov qword[rsp + 8 * 1], rax
 18722 0000DBE2 B802000000              	mov rax, 2
 18723 0000DBE7 4889442410              	mov qword[rsp + 8 *2], rax
 18724 0000DBEC 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 18725 0000DBF1 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 18726 0000DBF6 48B8-                   	mov rax, sob_nil
 18726 0000DBF8 [0100000000000000] 
 18727 0000DC00 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 18728 0000DC05 C8000000                	enter 0, 0
 18729                                  	; preparing a non-tail-call
 18730                                  	; preparing a non-tail-call
 18731 0000DC09 488B4528                	mov rax, PARAM(1)	; param chs
 18732 0000DC0D 50                      	push rax
 18733 0000DC0E 6A01                    	push 1	; arg count
 18734 0000DC10 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18735 0000DC18 803805                  	cmp byte [rax], T_undefined
 18736 0000DC1B 0F8477500000            	je L_error_fvar_undefined
 18737 0000DC21 803804                  	cmp byte [rax], T_closure
 18738 0000DC24 0F85F2500000            	jne L_error_non_closure
 18739 0000DC2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18740 0000DC2D FF5009                  	call SOB_CLOSURE_CODE(rax)
 18741 0000DC30 483D[02000000]          	cmp rax, sob_boolean_false
 18742 0000DC36 740F                    	je .L_if_else_010a
 18743 0000DC38 48B8-                   	mov rax, L_constants + 4
 18743 0000DC3A [0400000000000000] 
 18744 0000DC42 E9EE000000              	jmp .L_if_end_010a
 18745                                  .L_if_else_010a:
 18746                                  	; preparing a non-tail-call
 18747 0000DC47 488B4528                	mov rax, PARAM(1)	; param chs
 18748 0000DC4B 50                      	push rax
 18749 0000DC4C 6A01                    	push 1	; arg count
 18750 0000DC4E 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 18751 0000DC56 803805                  	cmp byte [rax], T_undefined
 18752 0000DC59 0F8439500000            	je L_error_fvar_undefined
 18753 0000DC5F 803804                  	cmp byte [rax], T_closure
 18754 0000DC62 0F85B4500000            	jne L_error_non_closure
 18755 0000DC68 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18756 0000DC6B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18757 0000DC6E 483D[02000000]          	cmp rax, sob_boolean_false
 18758 0000DC74 744C                    	je .L_if_else_0108
 18759                                  	; preparing a non-tail-call
 18760                                  	; preparing a non-tail-call
 18761 0000DC76 488B4528                	mov rax, PARAM(1)	; param chs
 18762 0000DC7A 50                      	push rax
 18763 0000DC7B 6A01                    	push 1	; arg count
 18764 0000DC7D 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 18765 0000DC85 803805                  	cmp byte [rax], T_undefined
 18766 0000DC88 0F840A500000            	je L_error_fvar_undefined
 18767 0000DC8E 803804                  	cmp byte [rax], T_closure
 18768 0000DC91 0F8585500000            	jne L_error_non_closure
 18769 0000DC97 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18770 0000DC9A FF5009                  	call SOB_CLOSURE_CODE(rax)
 18771 0000DC9D 50                      	push rax
 18772 0000DC9E 6A01                    	push 1	; arg count
 18773 0000DCA0 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18774 0000DCA8 803805                  	cmp byte [rax], T_undefined
 18775 0000DCAB 0F84E74F0000            	je L_error_fvar_undefined
 18776 0000DCB1 803804                  	cmp byte [rax], T_closure
 18777 0000DCB4 0F8562500000            	jne L_error_non_closure
 18778 0000DCBA FF7001                  	push SOB_CLOSURE_ENV(rax)
 18779 0000DCBD FF5009                  	call SOB_CLOSURE_CODE(rax)
 18780 0000DCC0 EB0A                    	jmp .L_if_end_0108
 18781                                  .L_if_else_0108:
 18782 0000DCC2 48B8-                   	mov rax, L_constants + 2
 18782 0000DCC4 [0200000000000000] 
 18783                                  .L_if_end_0108:
 18784 0000DCCC 483D[02000000]          	cmp rax, sob_boolean_false
 18785 0000DCD2 7429                    	je .L_if_else_0109
 18786                                  	; preparing a non-tail-call
 18787 0000DCD4 488B4528                	mov rax, PARAM(1)	; param chs
 18788 0000DCD8 50                      	push rax
 18789 0000DCD9 6A01                    	push 1	; arg count
 18790 0000DCDB 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18791 0000DCE3 803805                  	cmp byte [rax], T_undefined
 18792 0000DCE6 0F84AC4F0000            	je L_error_fvar_undefined
 18793 0000DCEC 803804                  	cmp byte [rax], T_closure
 18794 0000DCEF 0F8527500000            	jne L_error_non_closure
 18795 0000DCF5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18796 0000DCF8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18797 0000DCFB EB38                    	jmp .L_if_end_0109
 18798                                  .L_if_else_0109:
 18799                                  	; preparing a non-tail-call
 18800 0000DCFD 48B8-                   	mov rax, L_constants + 3016
 18800 0000DCFF [C80B000000000000] 
 18801 0000DD07 50                      	push rax
 18802 0000DD08 48B8-                   	mov rax, L_constants + 3007
 18802 0000DD0A [BF0B000000000000] 
 18803 0000DD12 50                      	push rax
 18804 0000DD13 6A02                    	push 2	; arg count
 18805 0000DD15 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 18806 0000DD1D 803805                  	cmp byte [rax], T_undefined
 18807 0000DD20 0F84724F0000            	je L_error_fvar_undefined
 18808 0000DD26 803804                  	cmp byte [rax], T_closure
 18809 0000DD29 0F85ED4F0000            	jne L_error_non_closure
 18810 0000DD2F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18811 0000DD32 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18812                                  .L_if_end_0109:
 18813                                  .L_if_end_010a:
 18814 0000DD35 50                      	push rax
 18815 0000DD36 6A01                    	push 1	; arg count
 18816 0000DD38 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18817 0000DD3D E883500000              	call malloc
 18818 0000DD42 50                      	push rax
 18819 0000DD43 BF10000000              	mov rdi, 8 * 2	; new rib
 18820 0000DD48 E878500000              	call malloc
 18821 0000DD4D 50                      	push rax
 18822 0000DD4E BF18000000              	mov rdi, 8 * 3	; extended env
 18823 0000DD53 E86D500000              	call malloc
 18824 0000DD58 488B7D10                	mov rdi, ENV
 18825 0000DD5C BE00000000              	mov rsi, 0
 18826 0000DD61 BA01000000              	mov rdx, 1
 18827                                  .L_lambda_simple_env_loop_014e:	; ext_env[i + 1] <-- env[i]
 18828 0000DD66 4883FE02                	cmp rsi, 2
 18829 0000DD6A 7410                    	je .L_lambda_simple_env_end_014e
 18830 0000DD6C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18831 0000DD70 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18832 0000DD74 48FFC6                  	inc rsi
 18833 0000DD77 48FFC2                  	inc rdx
 18834 0000DD7A EBEA                    	jmp .L_lambda_simple_env_loop_014e
 18835                                  .L_lambda_simple_env_end_014e:
 18836 0000DD7C 5B                      	pop rbx
 18837 0000DD7D BE00000000              	mov rsi, 0
 18838                                  .L_lambda_simple_params_loop_014e:	; copy params
 18839 0000DD82 4883FE02                	cmp rsi, 2
 18840 0000DD86 740E                    	je .L_lambda_simple_params_end_014e
 18841 0000DD88 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18842 0000DD8D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18843 0000DD91 48FFC6                  	inc rsi
 18844 0000DD94 EBEC                    	jmp .L_lambda_simple_params_loop_014e
 18845                                  .L_lambda_simple_params_end_014e:
 18846 0000DD96 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18847 0000DD99 4889C3                  	mov rbx, rax
 18848 0000DD9C 58                      	pop rax
 18849 0000DD9D C60004                  	mov byte [rax], T_closure
 18850 0000DDA0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18851 0000DDA4 48C74009[AEDD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_014e
 18852 0000DDAC EB47                    	jmp .L_lambda_simple_end_014e
 18853                                  .L_lambda_simple_code_014e:	; lambda-simple body
 18854 0000DDAE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18855 0000DDB4 740B                    	je .L_lambda_simple_arity_check_ok_014e
 18856 0000DDB6 FF742410                	push qword [rsp + 8 * 2]
 18857 0000DDBA 6A01                    	push 1
 18858 0000DDBC E9BD4F0000              	jmp L_error_incorrect_arity_simple
 18859                                  .L_lambda_simple_arity_check_ok_014e:
 18860 0000DDC1 C8000000                	enter 0, 0
 18861                                  	; preparing a non-tail-call
 18862 0000DDC5 488B4520                	mov rax, PARAM(0)	; param ch
 18863 0000DDC9 50                      	push rax
 18864 0000DDCA 488B4510                	mov rax, ENV
 18865 0000DDCE 488B00                  	mov rax, qword [rax + 8 * 0]
 18866 0000DDD1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 18867 0000DDD4 50                      	push rax
 18868 0000DDD5 6A02                    	push 2	; arg count
 18869 0000DDD7 488B4510                	mov rax, ENV
 18870 0000DDDB 488B4008                	mov rax, qword [rax + 8 * 1]
 18871 0000DDDF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 18872 0000DDE2 803804                  	cmp byte [rax], T_closure
 18873 0000DDE5 0F85314F0000            	jne L_error_non_closure
 18874 0000DDEB FF7001                  	push SOB_CLOSURE_ENV(rax)
 18875 0000DDEE FF5009                  	call SOB_CLOSURE_CODE(rax)
 18876 0000DDF1 C9                      	leave
 18877 0000DDF2 C21800                  	ret AND_KILL_FRAME(1)
 18878                                  .L_lambda_simple_end_014e:	; new closure is in rax
 18879 0000DDF5 803804                  	cmp byte [rax], T_closure
 18880 0000DDF8 0F851E4F0000            	jne L_error_non_closure
 18881 0000DDFE FF7001                  	push SOB_CLOSURE_ENV(rax)
 18882 0000DE01 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18883 0000DE04 C9                      	leave
 18884 0000DE05 C22000                  	ret AND_KILL_FRAME(2)
 18885 0000DE08 E9A9020000              	jmp .L_lambda_opt_end_002d	; new closure is in rax
 18886                                  .L_lambda_opt_arity_check_more_002d:
 18887 0000DE0D 488B442410              	mov rax, qword[rsp + 2 * 8]
 18888 0000DE12 4889C7                  	mov rdi, rax
 18889 0000DE15 49B9-                   	mov r9, sob_nil
 18889 0000DE17 [0100000000000000] 
 18890 0000DE1F 4C8B442410              	mov r8, qword[rsp+2*8]
 18891                                  .L_lambda_opt_stack_shrink_loop_002d:
 18892 0000DE24 4983F801                	cmp r8, 1
 18893 0000DE28 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_002d
 18894 0000DE2A 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 18895 0000DE2F BF11000000              	mov rdi, 1+8+8	;for pair
 18896 0000DE34 E88C4F0000              	call malloc	 ;to create the pair in the stack
 18897 0000DE39 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 18898 0000DE3C 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 18899 0000DE40 4C894809                 	mov qword[rax+1+8],r9
 18900 0000DE44 4989C1                  	mov r9 , rax	 ; for the recursion 
 18901 0000DE47 49FFC8                  	dec r8
 18902 0000DE4A EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_002d
 18903                                  .L_lambda_opt_stack_shrink_loop_exit_002d:
 18904 0000DE4C 488B442410              	mov rax, qword[rsp + 2 * 8]
 18905 0000DE51 BF02000000              	mov rdi, 2
 18906 0000DE56 4829F8                  	sub rax, rdi
 18907 0000DE59 4889C7                  	mov rdi, rax
 18908 0000DE5C 486BC008                	imul rax,8
 18909 0000DE60 4801C4                  	add rsp, rax
 18910 0000DE63 4889E0                  	mov rax, rsp
 18911 0000DE66 4989F8                  	mov r8, rdi
 18912 0000DE69 4D6BC008                	imul r8, 8
 18913 0000DE6D 4C29C0                  	sub rax, r8
 18914 0000DE70 4989C2                  	mov r10, rax	; holds the original ret in the stack
 18915 0000DE73 4983C218                	add r10, 8*3
 18916 0000DE77 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 18917 0000DE7B 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 18918 0000DE7E 4D6BC008                	imul r8,8
 18919 0000DE82 4C01C0                  	add rax, r8
 18920 0000DE85 4C8908                  	mov qword[rax] ,r9
 18921 0000DE88 4D89D0                   	mov r8, r10
 18922 0000DE8B 4983C000                	add r8, 8 * 0
 18923 0000DE8F 4D8B08                  	mov r9,qword[r8]
 18924 0000DE92 4D890CF8                	mov qword [r8 + rdi * 8], r9
 18925 0000DE96 4983EA18                	sub r10, 8*3
 18926 0000DE9A 48C744241002000000      	mov qword [rsp+2*8], 2
 18927 0000DEA3 498B4208                	mov rax, qword[r10 + 1 * 8]
 18928 0000DEA7 4889442408              	mov qword[rsp + 1*8] ,rax
 18929 0000DEAC 498B02                  	mov rax, qword[r10]
 18930 0000DEAF 48890424                	mov qword[rsp], rax
 18931 0000DEB3 C8000000                	enter 0, 0
 18932                                  	; preparing a non-tail-call
 18933                                  	; preparing a non-tail-call
 18934 0000DEB7 488B4528                	mov rax, PARAM(1)	; param chs
 18935 0000DEBB 50                      	push rax
 18936 0000DEBC 6A01                    	push 1	; arg count
 18937 0000DEBE 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18938 0000DEC6 803805                  	cmp byte [rax], T_undefined
 18939 0000DEC9 0F84C94D0000            	je L_error_fvar_undefined
 18940 0000DECF 803804                  	cmp byte [rax], T_closure
 18941 0000DED2 0F85444E0000            	jne L_error_non_closure
 18942 0000DED8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18943 0000DEDB FF5009                  	call SOB_CLOSURE_CODE(rax)
 18944 0000DEDE 483D[02000000]          	cmp rax, sob_boolean_false
 18945 0000DEE4 740F                    	je .L_if_else_0107
 18946 0000DEE6 48B8-                   	mov rax, L_constants + 4
 18946 0000DEE8 [0400000000000000] 
 18947 0000DEF0 E9EE000000              	jmp .L_if_end_0107
 18948                                  .L_if_else_0107:
 18949                                  	; preparing a non-tail-call
 18950 0000DEF5 488B4528                	mov rax, PARAM(1)	; param chs
 18951 0000DEF9 50                      	push rax
 18952 0000DEFA 6A01                    	push 1	; arg count
 18953 0000DEFC 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 18954 0000DF04 803805                  	cmp byte [rax], T_undefined
 18955 0000DF07 0F848B4D0000            	je L_error_fvar_undefined
 18956 0000DF0D 803804                  	cmp byte [rax], T_closure
 18957 0000DF10 0F85064E0000            	jne L_error_non_closure
 18958 0000DF16 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18959 0000DF19 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18960 0000DF1C 483D[02000000]          	cmp rax, sob_boolean_false
 18961 0000DF22 744C                    	je .L_if_else_0105
 18962                                  	; preparing a non-tail-call
 18963                                  	; preparing a non-tail-call
 18964 0000DF24 488B4528                	mov rax, PARAM(1)	; param chs
 18965 0000DF28 50                      	push rax
 18966 0000DF29 6A01                    	push 1	; arg count
 18967 0000DF2B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 18968 0000DF33 803805                  	cmp byte [rax], T_undefined
 18969 0000DF36 0F845C4D0000            	je L_error_fvar_undefined
 18970 0000DF3C 803804                  	cmp byte [rax], T_closure
 18971 0000DF3F 0F85D74D0000            	jne L_error_non_closure
 18972 0000DF45 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18973 0000DF48 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18974 0000DF4B 50                      	push rax
 18975 0000DF4C 6A01                    	push 1	; arg count
 18976 0000DF4E 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18977 0000DF56 803805                  	cmp byte [rax], T_undefined
 18978 0000DF59 0F84394D0000            	je L_error_fvar_undefined
 18979 0000DF5F 803804                  	cmp byte [rax], T_closure
 18980 0000DF62 0F85B44D0000            	jne L_error_non_closure
 18981 0000DF68 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18982 0000DF6B FF5009                  	call SOB_CLOSURE_CODE(rax)
 18983 0000DF6E EB0A                    	jmp .L_if_end_0105
 18984                                  .L_if_else_0105:
 18985 0000DF70 48B8-                   	mov rax, L_constants + 2
 18985 0000DF72 [0200000000000000] 
 18986                                  .L_if_end_0105:
 18987 0000DF7A 483D[02000000]          	cmp rax, sob_boolean_false
 18988 0000DF80 7429                    	je .L_if_else_0106
 18989                                  	; preparing a non-tail-call
 18990 0000DF82 488B4528                	mov rax, PARAM(1)	; param chs
 18991 0000DF86 50                      	push rax
 18992 0000DF87 6A01                    	push 1	; arg count
 18993 0000DF89 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18994 0000DF91 803805                  	cmp byte [rax], T_undefined
 18995 0000DF94 0F84FE4C0000            	je L_error_fvar_undefined
 18996 0000DF9A 803804                  	cmp byte [rax], T_closure
 18997 0000DF9D 0F85794D0000            	jne L_error_non_closure
 18998 0000DFA3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18999 0000DFA6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19000 0000DFA9 EB38                    	jmp .L_if_end_0106
 19001                                  .L_if_else_0106:
 19002                                  	; preparing a non-tail-call
 19003 0000DFAB 48B8-                   	mov rax, L_constants + 3016
 19003 0000DFAD [C80B000000000000] 
 19004 0000DFB5 50                      	push rax
 19005 0000DFB6 48B8-                   	mov rax, L_constants + 3007
 19005 0000DFB8 [BF0B000000000000] 
 19006 0000DFC0 50                      	push rax
 19007 0000DFC1 6A02                    	push 2	; arg count
 19008 0000DFC3 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 19009 0000DFCB 803805                  	cmp byte [rax], T_undefined
 19010 0000DFCE 0F84C44C0000            	je L_error_fvar_undefined
 19011 0000DFD4 803804                  	cmp byte [rax], T_closure
 19012 0000DFD7 0F853F4D0000            	jne L_error_non_closure
 19013 0000DFDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 19014 0000DFE0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19015                                  .L_if_end_0106:
 19016                                  .L_if_end_0107:
 19017 0000DFE3 50                      	push rax
 19018 0000DFE4 6A01                    	push 1	; arg count
 19019 0000DFE6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19020 0000DFEB E8D54D0000              	call malloc
 19021 0000DFF0 50                      	push rax
 19022 0000DFF1 BF10000000              	mov rdi, 8 * 2	; new rib
 19023 0000DFF6 E8CA4D0000              	call malloc
 19024 0000DFFB 50                      	push rax
 19025 0000DFFC BF18000000              	mov rdi, 8 * 3	; extended env
 19026 0000E001 E8BF4D0000              	call malloc
 19027 0000E006 488B7D10                	mov rdi, ENV
 19028 0000E00A BE00000000              	mov rsi, 0
 19029 0000E00F BA01000000              	mov rdx, 1
 19030                                  .L_lambda_simple_env_loop_014d:	; ext_env[i + 1] <-- env[i]
 19031 0000E014 4883FE02                	cmp rsi, 2
 19032 0000E018 7410                    	je .L_lambda_simple_env_end_014d
 19033 0000E01A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19034 0000E01E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19035 0000E022 48FFC6                  	inc rsi
 19036 0000E025 48FFC2                  	inc rdx
 19037 0000E028 EBEA                    	jmp .L_lambda_simple_env_loop_014d
 19038                                  .L_lambda_simple_env_end_014d:
 19039 0000E02A 5B                      	pop rbx
 19040 0000E02B BE00000000              	mov rsi, 0
 19041                                  .L_lambda_simple_params_loop_014d:	; copy params
 19042 0000E030 4883FE02                	cmp rsi, 2
 19043 0000E034 740E                    	je .L_lambda_simple_params_end_014d
 19044 0000E036 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19045 0000E03B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19046 0000E03F 48FFC6                  	inc rsi
 19047 0000E042 EBEC                    	jmp .L_lambda_simple_params_loop_014d
 19048                                  .L_lambda_simple_params_end_014d:
 19049 0000E044 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19050 0000E047 4889C3                  	mov rbx, rax
 19051 0000E04A 58                      	pop rax
 19052 0000E04B C60004                  	mov byte [rax], T_closure
 19053 0000E04E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19054 0000E052 48C74009[5CE00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_014d
 19055 0000E05A EB47                    	jmp .L_lambda_simple_end_014d
 19056                                  .L_lambda_simple_code_014d:	; lambda-simple body
 19057 0000E05C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19058 0000E062 740B                    	je .L_lambda_simple_arity_check_ok_014d
 19059 0000E064 FF742410                	push qword [rsp + 8 * 2]
 19060 0000E068 6A01                    	push 1
 19061 0000E06A E90F4D0000              	jmp L_error_incorrect_arity_simple
 19062                                  .L_lambda_simple_arity_check_ok_014d:
 19063 0000E06F C8000000                	enter 0, 0
 19064                                  	; preparing a non-tail-call
 19065 0000E073 488B4520                	mov rax, PARAM(0)	; param ch
 19066 0000E077 50                      	push rax
 19067 0000E078 488B4510                	mov rax, ENV
 19068 0000E07C 488B00                  	mov rax, qword [rax + 8 * 0]
 19069 0000E07F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 19070 0000E082 50                      	push rax
 19071 0000E083 6A02                    	push 2	; arg count
 19072 0000E085 488B4510                	mov rax, ENV
 19073 0000E089 488B4008                	mov rax, qword [rax + 8 * 1]
 19074 0000E08D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 19075 0000E090 803804                  	cmp byte [rax], T_closure
 19076 0000E093 0F85834C0000            	jne L_error_non_closure
 19077 0000E099 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19078 0000E09C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19079 0000E09F C9                      	leave
 19080 0000E0A0 C21800                  	ret AND_KILL_FRAME(1)
 19081                                  .L_lambda_simple_end_014d:	; new closure is in rax
 19082 0000E0A3 803804                  	cmp byte [rax], T_closure
 19083 0000E0A6 0F85704C0000            	jne L_error_non_closure
 19084 0000E0AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 19085 0000E0AF FF5009                  	call SOB_CLOSURE_CODE(rax)
 19086 0000E0B2 C9                      	leave
 19087 0000E0B3 C22000                  	ret AND_KILL_FRAME(2)
 19088                                  .L_lambda_opt_end_002d:	; new closure is in rax
 19089 0000E0B6 C9                      	leave
 19090 0000E0B7 C21800                  	ret AND_KILL_FRAME(1)
 19091                                  .L_lambda_simple_end_014c:	; new closure is in rax
 19092 0000E0BA 803804                  	cmp byte [rax], T_closure
 19093 0000E0BD 0F85594C0000            	jne L_error_non_closure
 19094 0000E0C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19095 0000E0C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19096 0000E0C9 48890425[58140000]      	mov qword [free_var_99], rax
 19097 0000E0D1 48B8-                   	mov rax, sob_void
 19097 0000E0D3 [0000000000000000] 
 19098                                  
 19099 0000E0DB 4889C7                  	mov rdi, rax
 19100 0000E0DE E8374F0000              	call print_sexpr_if_not_void
 19101                                  	; preparing a non-tail-call
 19102 0000E0E3 48B8-                   	mov rax, L_constants + 1993
 19102 0000E0E5 [C907000000000000] 
 19103 0000E0ED 50                      	push rax
 19104 0000E0EE 6A01                    	push 1	; arg count
 19105 0000E0F0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19106 0000E0F5 E8CB4C0000              	call malloc
 19107 0000E0FA 50                      	push rax
 19108 0000E0FB BF00000000              	mov rdi, 8 * 0	; new rib
 19109 0000E100 E8C04C0000              	call malloc
 19110 0000E105 50                      	push rax
 19111 0000E106 BF08000000              	mov rdi, 8 * 1	; extended env
 19112 0000E10B E8B54C0000              	call malloc
 19113 0000E110 488B7D10                	mov rdi, ENV
 19114 0000E114 BE00000000              	mov rsi, 0
 19115 0000E119 BA01000000              	mov rdx, 1
 19116                                  .L_lambda_simple_env_loop_014f:	; ext_env[i + 1] <-- env[i]
 19117 0000E11E 4883FE00                	cmp rsi, 0
 19118 0000E122 7410                    	je .L_lambda_simple_env_end_014f
 19119 0000E124 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19120 0000E128 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19121 0000E12C 48FFC6                  	inc rsi
 19122 0000E12F 48FFC2                  	inc rdx
 19123 0000E132 EBEA                    	jmp .L_lambda_simple_env_loop_014f
 19124                                  .L_lambda_simple_env_end_014f:
 19125 0000E134 5B                      	pop rbx
 19126 0000E135 BE00000000              	mov rsi, 0
 19127                                  .L_lambda_simple_params_loop_014f:	; copy params
 19128 0000E13A 4883FE00                	cmp rsi, 0
 19129 0000E13E 740E                    	je .L_lambda_simple_params_end_014f
 19130 0000E140 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19131 0000E145 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19132 0000E149 48FFC6                  	inc rsi
 19133 0000E14C EBEC                    	jmp .L_lambda_simple_params_loop_014f
 19134                                  .L_lambda_simple_params_end_014f:
 19135 0000E14E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19136 0000E151 4889C3                  	mov rbx, rax
 19137 0000E154 58                      	pop rax
 19138 0000E155 C60004                  	mov byte [rax], T_closure
 19139 0000E158 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19140 0000E15C 48C74009[69E10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_014f
 19141 0000E164 E970030000              	jmp .L_lambda_simple_end_014f
 19142                                  .L_lambda_simple_code_014f:	; lambda-simple body
 19143 0000E169 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19144 0000E16F 740B                    	je .L_lambda_simple_arity_check_ok_014f
 19145 0000E171 FF742410                	push qword [rsp + 8 * 2]
 19146 0000E175 6A01                    	push 1
 19147 0000E177 E9024C0000              	jmp L_error_incorrect_arity_simple
 19148                                  .L_lambda_simple_arity_check_ok_014f:
 19149 0000E17C C8000000                	enter 0, 0
 19150 0000E180 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 19151 0000E184 488903                  	mov qword [rbx], rax
 19152                                  
 19153 0000E187 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19154 0000E18C E8344C0000              	call malloc
 19155 0000E191 50                      	push rax
 19156 0000E192 BF08000000              	mov rdi, 8 * 1	; new rib
 19157 0000E197 E8294C0000              	call malloc
 19158 0000E19C 50                      	push rax
 19159 0000E19D BF10000000              	mov rdi, 8 * 2	; extended env
 19160 0000E1A2 E81E4C0000              	call malloc
 19161 0000E1A7 488B7D10                	mov rdi, ENV
 19162 0000E1AB BE00000000              	mov rsi, 0
 19163 0000E1B0 BA01000000              	mov rdx, 1
 19164                                  .L_lambda_simple_env_loop_0150:	; ext_env[i + 1] <-- env[i]
 19165 0000E1B5 4883FE01                	cmp rsi, 1
 19166 0000E1B9 7410                    	je .L_lambda_simple_env_end_0150
 19167 0000E1BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19168 0000E1BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19169 0000E1C3 48FFC6                  	inc rsi
 19170 0000E1C6 48FFC2                  	inc rdx
 19171 0000E1C9 EBEA                    	jmp .L_lambda_simple_env_loop_0150
 19172                                  .L_lambda_simple_env_end_0150:
 19173 0000E1CB 5B                      	pop rbx
 19174 0000E1CC BE00000000              	mov rsi, 0
 19175                                  .L_lambda_simple_params_loop_0150:	; copy params
 19176 0000E1D1 4883FE01                	cmp rsi, 1
 19177 0000E1D5 740E                    	je .L_lambda_simple_params_end_0150
 19178 0000E1D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19179 0000E1DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19180 0000E1E0 48FFC6                  	inc rsi
 19181 0000E1E3 EBEC                    	jmp .L_lambda_simple_params_loop_0150
 19182                                  .L_lambda_simple_params_end_0150:
 19183 0000E1E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19184 0000E1E8 4889C3                  	mov rbx, rax
 19185 0000E1EB 58                      	pop rax
 19186 0000E1EC C60004                  	mov byte [rax], T_closure
 19187 0000E1EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19188 0000E1F3 48C74009[00E20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0150
 19189 0000E1FB E905020000              	jmp .L_lambda_simple_end_0150
 19190                                  .L_lambda_simple_code_0150:	; lambda-simple body
 19191 0000E200 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19192 0000E206 740B                    	je .L_lambda_simple_arity_check_ok_0150
 19193 0000E208 FF742410                	push qword [rsp + 8 * 2]
 19194 0000E20C 6A02                    	push 2
 19195 0000E20E E96B4B0000              	jmp L_error_incorrect_arity_simple
 19196                                  .L_lambda_simple_arity_check_ok_0150:
 19197 0000E213 C8000000                	enter 0, 0
 19198                                  	; preparing a non-tail-call
 19199 0000E217 488B4520                	mov rax, PARAM(0)	; param s
 19200 0000E21B 50                      	push rax
 19201 0000E21C 6A01                    	push 1	; arg count
 19202 0000E21E 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 19203 0000E226 803805                  	cmp byte [rax], T_undefined
 19204 0000E229 0F84694A0000            	je L_error_fvar_undefined
 19205 0000E22F 803804                  	cmp byte [rax], T_closure
 19206 0000E232 0F85E44A0000            	jne L_error_non_closure
 19207 0000E238 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19208 0000E23B FF5009                  	call SOB_CLOSURE_CODE(rax)
 19209 0000E23E 483D[02000000]          	cmp rax, sob_boolean_false
 19210 0000E244 7437                    	je .L_if_else_010b
 19211                                  	; preparing a non-tail-call
 19212 0000E246 48B8-                   	mov rax, L_constants + 0
 19212 0000E248 [0000000000000000] 
 19213 0000E250 50                      	push rax
 19214 0000E251 488B4528                	mov rax, PARAM(1)	; param i
 19215 0000E255 50                      	push rax
 19216 0000E256 6A02                    	push 2	; arg count
 19217 0000E258 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 19218 0000E260 803805                  	cmp byte [rax], T_undefined
 19219 0000E263 0F842F4A0000            	je L_error_fvar_undefined
 19220 0000E269 803804                  	cmp byte [rax], T_closure
 19221 0000E26C 0F85AA4A0000            	jne L_error_non_closure
 19222 0000E272 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19223 0000E275 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19224 0000E278 E984010000              	jmp .L_if_end_010b
 19225                                  .L_if_else_010b:
 19226                                  	; preparing a non-tail-call
 19227                                  	; preparing a non-tail-call
 19228                                  	; preparing a non-tail-call
 19229 0000E27D 48B8-                   	mov rax, L_constants + 2270
 19229 0000E27F [DE08000000000000] 
 19230 0000E287 50                      	push rax
 19231 0000E288 488B4528                	mov rax, PARAM(1)	; param i
 19232 0000E28C 50                      	push rax
 19233 0000E28D 6A02                    	push 2	; arg count
 19234 0000E28F 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 19235 0000E297 803805                  	cmp byte [rax], T_undefined
 19236 0000E29A 0F84F8490000            	je L_error_fvar_undefined
 19237 0000E2A0 803804                  	cmp byte [rax], T_closure
 19238 0000E2A3 0F85734A0000            	jne L_error_non_closure
 19239 0000E2A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19240 0000E2AC FF5009                  	call SOB_CLOSURE_CODE(rax)
 19241 0000E2AF 50                      	push rax
 19242                                  	; preparing a non-tail-call
 19243 0000E2B0 488B4520                	mov rax, PARAM(0)	; param s
 19244 0000E2B4 50                      	push rax
 19245 0000E2B5 6A01                    	push 1	; arg count
 19246 0000E2B7 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 19247 0000E2BF 803805                  	cmp byte [rax], T_undefined
 19248 0000E2C2 0F84D0490000            	je L_error_fvar_undefined
 19249 0000E2C8 803804                  	cmp byte [rax], T_closure
 19250 0000E2CB 0F854B4A0000            	jne L_error_non_closure
 19251 0000E2D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19252 0000E2D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19253 0000E2D7 50                      	push rax
 19254 0000E2D8 6A02                    	push 2	; arg count
 19255 0000E2DA 488B4510                	mov rax, ENV
 19256 0000E2DE 488B00                  	mov rax, qword [rax + 8 * 0]
 19257 0000E2E1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19258 0000E2E4 488B00                  	mov rax, qword [rax]
 19259 0000E2E7 803804                  	cmp byte [rax], T_closure
 19260 0000E2EA 0F852C4A0000            	jne L_error_non_closure
 19261 0000E2F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19262 0000E2F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19263 0000E2F6 50                      	push rax
 19264 0000E2F7 6A01                    	push 1	; arg count
 19265 0000E2F9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19266 0000E2FE E8C24A0000              	call malloc
 19267 0000E303 50                      	push rax
 19268 0000E304 BF10000000              	mov rdi, 8 * 2	; new rib
 19269 0000E309 E8B74A0000              	call malloc
 19270 0000E30E 50                      	push rax
 19271 0000E30F BF18000000              	mov rdi, 8 * 3	; extended env
 19272 0000E314 E8AC4A0000              	call malloc
 19273 0000E319 488B7D10                	mov rdi, ENV
 19274 0000E31D BE00000000              	mov rsi, 0
 19275 0000E322 BA01000000              	mov rdx, 1
 19276                                  .L_lambda_simple_env_loop_0151:	; ext_env[i + 1] <-- env[i]
 19277 0000E327 4883FE02                	cmp rsi, 2
 19278 0000E32B 7410                    	je .L_lambda_simple_env_end_0151
 19279 0000E32D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19280 0000E331 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19281 0000E335 48FFC6                  	inc rsi
 19282 0000E338 48FFC2                  	inc rdx
 19283 0000E33B EBEA                    	jmp .L_lambda_simple_env_loop_0151
 19284                                  .L_lambda_simple_env_end_0151:
 19285 0000E33D 5B                      	pop rbx
 19286 0000E33E BE00000000              	mov rsi, 0
 19287                                  .L_lambda_simple_params_loop_0151:	; copy params
 19288 0000E343 4883FE02                	cmp rsi, 2
 19289 0000E347 740E                    	je .L_lambda_simple_params_end_0151
 19290 0000E349 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19291 0000E34E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19292 0000E352 48FFC6                  	inc rsi
 19293 0000E355 EBEC                    	jmp .L_lambda_simple_params_loop_0151
 19294                                  .L_lambda_simple_params_end_0151:
 19295 0000E357 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19296 0000E35A 4889C3                  	mov rbx, rax
 19297 0000E35D 58                      	pop rax
 19298 0000E35E C60004                  	mov byte [rax], T_closure
 19299 0000E361 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19300 0000E365 48C74009[72E30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0151
 19301 0000E36D E980000000              	jmp .L_lambda_simple_end_0151
 19302                                  .L_lambda_simple_code_0151:	; lambda-simple body
 19303 0000E372 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19304 0000E378 740B                    	je .L_lambda_simple_arity_check_ok_0151
 19305 0000E37A FF742410                	push qword [rsp + 8 * 2]
 19306 0000E37E 6A01                    	push 1
 19307 0000E380 E9F9490000              	jmp L_error_incorrect_arity_simple
 19308                                  .L_lambda_simple_arity_check_ok_0151:
 19309 0000E385 C8000000                	enter 0, 0
 19310                                  	; preparing a non-tail-call
 19311                                  	; preparing a non-tail-call
 19312 0000E389 488B4510                	mov rax, ENV
 19313 0000E38D 488B00                  	mov rax, qword [rax + 8 * 0]
 19314 0000E390 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 19315 0000E393 50                      	push rax
 19316 0000E394 6A01                    	push 1	; arg count
 19317 0000E396 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 19318 0000E39E 803805                  	cmp byte [rax], T_undefined
 19319 0000E3A1 0F84F1480000            	je L_error_fvar_undefined
 19320 0000E3A7 803804                  	cmp byte [rax], T_closure
 19321 0000E3AA 0F856C490000            	jne L_error_non_closure
 19322 0000E3B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19323 0000E3B3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19324 0000E3B6 50                      	push rax
 19325 0000E3B7 488B4510                	mov rax, ENV
 19326 0000E3BB 488B00                  	mov rax, qword [rax + 8 * 0]
 19327 0000E3BE 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 19328 0000E3C2 50                      	push rax
 19329 0000E3C3 488B4520                	mov rax, PARAM(0)	; param v
 19330 0000E3C7 50                      	push rax
 19331 0000E3C8 6A03                    	push 3	; arg count
 19332 0000E3CA 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 19333 0000E3D2 803805                  	cmp byte [rax], T_undefined
 19334 0000E3D5 0F84BD480000            	je L_error_fvar_undefined
 19335 0000E3DB 803804                  	cmp byte [rax], T_closure
 19336 0000E3DE 0F8538490000            	jne L_error_non_closure
 19337 0000E3E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19338 0000E3E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19339                                  
 19340 0000E3EA 488B4520                	mov rax, PARAM(0)	; param v
 19341 0000E3EE C9                      	leave
 19342 0000E3EF C21800                  	ret AND_KILL_FRAME(1)
 19343                                  .L_lambda_simple_end_0151:	; new closure is in rax
 19344 0000E3F2 803804                  	cmp byte [rax], T_closure
 19345 0000E3F5 0F8521490000            	jne L_error_non_closure
 19346 0000E3FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 19347 0000E3FE FF5009                  	call SOB_CLOSURE_CODE(rax)
 19348                                  .L_if_end_010b:
 19349 0000E401 C9                      	leave
 19350 0000E402 C22000                  	ret AND_KILL_FRAME(2)
 19351                                  .L_lambda_simple_end_0150:	; new closure is in rax
 19352 0000E405 50                      	push rax
 19353 0000E406 488B4520                	mov rax, PARAM(0)	; param run
 19354 0000E40A 8F00                    	pop qword [rax]
 19355 0000E40C 48B8-                   	mov rax, sob_void
 19355 0000E40E [0000000000000000] 
 19356                                  
 19357 0000E416 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19358 0000E41B E8A5490000              	call malloc
 19359 0000E420 50                      	push rax
 19360 0000E421 BF08000000              	mov rdi, 8 * 1	; new rib
 19361 0000E426 E89A490000              	call malloc
 19362 0000E42B 50                      	push rax
 19363 0000E42C BF10000000              	mov rdi, 8 * 2	; extended env
 19364 0000E431 E88F490000              	call malloc
 19365 0000E436 488B7D10                	mov rdi, ENV
 19366 0000E43A BE00000000              	mov rsi, 0
 19367 0000E43F BA01000000              	mov rdx, 1
 19368                                  .L_lambda_simple_env_loop_0152:	; ext_env[i + 1] <-- env[i]
 19369 0000E444 4883FE01                	cmp rsi, 1
 19370 0000E448 7410                    	je .L_lambda_simple_env_end_0152
 19371 0000E44A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19372 0000E44E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19373 0000E452 48FFC6                  	inc rsi
 19374 0000E455 48FFC2                  	inc rdx
 19375 0000E458 EBEA                    	jmp .L_lambda_simple_env_loop_0152
 19376                                  .L_lambda_simple_env_end_0152:
 19377 0000E45A 5B                      	pop rbx
 19378 0000E45B BE00000000              	mov rsi, 0
 19379                                  .L_lambda_simple_params_loop_0152:	; copy params
 19380 0000E460 4883FE01                	cmp rsi, 1
 19381 0000E464 740E                    	je .L_lambda_simple_params_end_0152
 19382 0000E466 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19383 0000E46B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19384 0000E46F 48FFC6                  	inc rsi
 19385 0000E472 EBEC                    	jmp .L_lambda_simple_params_loop_0152
 19386                                  .L_lambda_simple_params_end_0152:
 19387 0000E474 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19388 0000E477 4889C3                  	mov rbx, rax
 19389 0000E47A 58                      	pop rax
 19390 0000E47B C60004                  	mov byte [rax], T_closure
 19391 0000E47E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19392 0000E482 48C74009[8CE40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0152
 19393 0000E48A EB49                    	jmp .L_lambda_simple_end_0152
 19394                                  .L_lambda_simple_code_0152:	; lambda-simple body
 19395 0000E48C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19396 0000E492 740B                    	je .L_lambda_simple_arity_check_ok_0152
 19397 0000E494 FF742410                	push qword [rsp + 8 * 2]
 19398 0000E498 6A01                    	push 1
 19399 0000E49A E9DF480000              	jmp L_error_incorrect_arity_simple
 19400                                  .L_lambda_simple_arity_check_ok_0152:
 19401 0000E49F C8000000                	enter 0, 0
 19402                                  	; preparing a non-tail-call
 19403 0000E4A3 48B8-                   	mov rax, L_constants + 2135
 19403 0000E4A5 [5708000000000000] 
 19404 0000E4AD 50                      	push rax
 19405 0000E4AE 488B4520                	mov rax, PARAM(0)	; param s
 19406 0000E4B2 50                      	push rax
 19407 0000E4B3 6A02                    	push 2	; arg count
 19408 0000E4B5 488B4510                	mov rax, ENV
 19409 0000E4B9 488B00                  	mov rax, qword [rax + 8 * 0]
 19410 0000E4BC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19411 0000E4BF 488B00                  	mov rax, qword [rax]
 19412 0000E4C2 803804                  	cmp byte [rax], T_closure
 19413 0000E4C5 0F8551480000            	jne L_error_non_closure
 19414 0000E4CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 19415 0000E4CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 19416 0000E4D1 C9                      	leave
 19417 0000E4D2 C21800                  	ret AND_KILL_FRAME(1)
 19418                                  .L_lambda_simple_end_0152:	; new closure is in rax
 19419 0000E4D5 C9                      	leave
 19420 0000E4D6 C21800                  	ret AND_KILL_FRAME(1)
 19421                                  .L_lambda_simple_end_014f:	; new closure is in rax
 19422 0000E4D9 803804                  	cmp byte [rax], T_closure
 19423 0000E4DC 0F853A480000            	jne L_error_non_closure
 19424 0000E4E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19425 0000E4E5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19426 0000E4E8 48890425[14140000]      	mov qword [free_var_95], rax
 19427 0000E4F0 48B8-                   	mov rax, sob_void
 19427 0000E4F2 [0000000000000000] 
 19428                                  
 19429 0000E4FA 4889C7                  	mov rdi, rax
 19430 0000E4FD E8184B0000              	call print_sexpr_if_not_void
 19431                                  	; preparing a non-tail-call
 19432 0000E502 48B8-                   	mov rax, L_constants + 1993
 19432 0000E504 [C907000000000000] 
 19433 0000E50C 50                      	push rax
 19434 0000E50D 6A01                    	push 1	; arg count
 19435 0000E50F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19436 0000E514 E8AC480000              	call malloc
 19437 0000E519 50                      	push rax
 19438 0000E51A BF00000000              	mov rdi, 8 * 0	; new rib
 19439 0000E51F E8A1480000              	call malloc
 19440 0000E524 50                      	push rax
 19441 0000E525 BF08000000              	mov rdi, 8 * 1	; extended env
 19442 0000E52A E896480000              	call malloc
 19443 0000E52F 488B7D10                	mov rdi, ENV
 19444 0000E533 BE00000000              	mov rsi, 0
 19445 0000E538 BA01000000              	mov rdx, 1
 19446                                  .L_lambda_simple_env_loop_0153:	; ext_env[i + 1] <-- env[i]
 19447 0000E53D 4883FE00                	cmp rsi, 0
 19448 0000E541 7410                    	je .L_lambda_simple_env_end_0153
 19449 0000E543 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19450 0000E547 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19451 0000E54B 48FFC6                  	inc rsi
 19452 0000E54E 48FFC2                  	inc rdx
 19453 0000E551 EBEA                    	jmp .L_lambda_simple_env_loop_0153
 19454                                  .L_lambda_simple_env_end_0153:
 19455 0000E553 5B                      	pop rbx
 19456 0000E554 BE00000000              	mov rsi, 0
 19457                                  .L_lambda_simple_params_loop_0153:	; copy params
 19458 0000E559 4883FE00                	cmp rsi, 0
 19459 0000E55D 740E                    	je .L_lambda_simple_params_end_0153
 19460 0000E55F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19461 0000E564 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19462 0000E568 48FFC6                  	inc rsi
 19463 0000E56B EBEC                    	jmp .L_lambda_simple_params_loop_0153
 19464                                  .L_lambda_simple_params_end_0153:
 19465 0000E56D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19466 0000E570 4889C3                  	mov rbx, rax
 19467 0000E573 58                      	pop rax
 19468 0000E574 C60004                  	mov byte [rax], T_closure
 19469 0000E577 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19470 0000E57B 48C74009[88E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0153
 19471 0000E583 E970030000              	jmp .L_lambda_simple_end_0153
 19472                                  .L_lambda_simple_code_0153:	; lambda-simple body
 19473 0000E588 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19474 0000E58E 740B                    	je .L_lambda_simple_arity_check_ok_0153
 19475 0000E590 FF742410                	push qword [rsp + 8 * 2]
 19476 0000E594 6A01                    	push 1
 19477 0000E596 E9E3470000              	jmp L_error_incorrect_arity_simple
 19478                                  .L_lambda_simple_arity_check_ok_0153:
 19479 0000E59B C8000000                	enter 0, 0
 19480 0000E59F 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 19481 0000E5A3 488903                  	mov qword [rbx], rax
 19482                                  
 19483 0000E5A6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19484 0000E5AB E815480000              	call malloc
 19485 0000E5B0 50                      	push rax
 19486 0000E5B1 BF08000000              	mov rdi, 8 * 1	; new rib
 19487 0000E5B6 E80A480000              	call malloc
 19488 0000E5BB 50                      	push rax
 19489 0000E5BC BF10000000              	mov rdi, 8 * 2	; extended env
 19490 0000E5C1 E8FF470000              	call malloc
 19491 0000E5C6 488B7D10                	mov rdi, ENV
 19492 0000E5CA BE00000000              	mov rsi, 0
 19493 0000E5CF BA01000000              	mov rdx, 1
 19494                                  .L_lambda_simple_env_loop_0154:	; ext_env[i + 1] <-- env[i]
 19495 0000E5D4 4883FE01                	cmp rsi, 1
 19496 0000E5D8 7410                    	je .L_lambda_simple_env_end_0154
 19497 0000E5DA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19498 0000E5DE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19499 0000E5E2 48FFC6                  	inc rsi
 19500 0000E5E5 48FFC2                  	inc rdx
 19501 0000E5E8 EBEA                    	jmp .L_lambda_simple_env_loop_0154
 19502                                  .L_lambda_simple_env_end_0154:
 19503 0000E5EA 5B                      	pop rbx
 19504 0000E5EB BE00000000              	mov rsi, 0
 19505                                  .L_lambda_simple_params_loop_0154:	; copy params
 19506 0000E5F0 4883FE01                	cmp rsi, 1
 19507 0000E5F4 740E                    	je .L_lambda_simple_params_end_0154
 19508 0000E5F6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19509 0000E5FB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19510 0000E5FF 48FFC6                  	inc rsi
 19511 0000E602 EBEC                    	jmp .L_lambda_simple_params_loop_0154
 19512                                  .L_lambda_simple_params_end_0154:
 19513 0000E604 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19514 0000E607 4889C3                  	mov rbx, rax
 19515 0000E60A 58                      	pop rax
 19516 0000E60B C60004                  	mov byte [rax], T_closure
 19517 0000E60E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19518 0000E612 48C74009[1FE60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0154
 19519 0000E61A E905020000              	jmp .L_lambda_simple_end_0154
 19520                                  .L_lambda_simple_code_0154:	; lambda-simple body
 19521 0000E61F 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19522 0000E625 740B                    	je .L_lambda_simple_arity_check_ok_0154
 19523 0000E627 FF742410                	push qword [rsp + 8 * 2]
 19524 0000E62B 6A02                    	push 2
 19525 0000E62D E94C470000              	jmp L_error_incorrect_arity_simple
 19526                                  .L_lambda_simple_arity_check_ok_0154:
 19527 0000E632 C8000000                	enter 0, 0
 19528                                  	; preparing a non-tail-call
 19529 0000E636 488B4520                	mov rax, PARAM(0)	; param s
 19530 0000E63A 50                      	push rax
 19531 0000E63B 6A01                    	push 1	; arg count
 19532 0000E63D 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 19533 0000E645 803805                  	cmp byte [rax], T_undefined
 19534 0000E648 0F844A460000            	je L_error_fvar_undefined
 19535 0000E64E 803804                  	cmp byte [rax], T_closure
 19536 0000E651 0F85C5460000            	jne L_error_non_closure
 19537 0000E657 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19538 0000E65A FF5009                  	call SOB_CLOSURE_CODE(rax)
 19539 0000E65D 483D[02000000]          	cmp rax, sob_boolean_false
 19540 0000E663 7437                    	je .L_if_else_010c
 19541                                  	; preparing a non-tail-call
 19542 0000E665 48B8-                   	mov rax, L_constants + 4
 19542 0000E667 [0400000000000000] 
 19543 0000E66F 50                      	push rax
 19544 0000E670 488B4528                	mov rax, PARAM(1)	; param i
 19545 0000E674 50                      	push rax
 19546 0000E675 6A02                    	push 2	; arg count
 19547 0000E677 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 19548 0000E67F 803805                  	cmp byte [rax], T_undefined
 19549 0000E682 0F8410460000            	je L_error_fvar_undefined
 19550 0000E688 803804                  	cmp byte [rax], T_closure
 19551 0000E68B 0F858B460000            	jne L_error_non_closure
 19552 0000E691 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19553 0000E694 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19554 0000E697 E984010000              	jmp .L_if_end_010c
 19555                                  .L_if_else_010c:
 19556                                  	; preparing a non-tail-call
 19557                                  	; preparing a non-tail-call
 19558                                  	; preparing a non-tail-call
 19559 0000E69C 48B8-                   	mov rax, L_constants + 2270
 19559 0000E69E [DE08000000000000] 
 19560 0000E6A6 50                      	push rax
 19561 0000E6A7 488B4528                	mov rax, PARAM(1)	; param i
 19562 0000E6AB 50                      	push rax
 19563 0000E6AC 6A02                    	push 2	; arg count
 19564 0000E6AE 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 19565 0000E6B6 803805                  	cmp byte [rax], T_undefined
 19566 0000E6B9 0F84D9450000            	je L_error_fvar_undefined
 19567 0000E6BF 803804                  	cmp byte [rax], T_closure
 19568 0000E6C2 0F8554460000            	jne L_error_non_closure
 19569 0000E6C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19570 0000E6CB FF5009                  	call SOB_CLOSURE_CODE(rax)
 19571 0000E6CE 50                      	push rax
 19572                                  	; preparing a non-tail-call
 19573 0000E6CF 488B4520                	mov rax, PARAM(0)	; param s
 19574 0000E6D3 50                      	push rax
 19575 0000E6D4 6A01                    	push 1	; arg count
 19576 0000E6D6 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 19577 0000E6DE 803805                  	cmp byte [rax], T_undefined
 19578 0000E6E1 0F84B1450000            	je L_error_fvar_undefined
 19579 0000E6E7 803804                  	cmp byte [rax], T_closure
 19580 0000E6EA 0F852C460000            	jne L_error_non_closure
 19581 0000E6F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19582 0000E6F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19583 0000E6F6 50                      	push rax
 19584 0000E6F7 6A02                    	push 2	; arg count
 19585 0000E6F9 488B4510                	mov rax, ENV
 19586 0000E6FD 488B00                  	mov rax, qword [rax + 8 * 0]
 19587 0000E700 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19588 0000E703 488B00                  	mov rax, qword [rax]
 19589 0000E706 803804                  	cmp byte [rax], T_closure
 19590 0000E709 0F850D460000            	jne L_error_non_closure
 19591 0000E70F FF7001                  	push SOB_CLOSURE_ENV(rax)
 19592 0000E712 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19593 0000E715 50                      	push rax
 19594 0000E716 6A01                    	push 1	; arg count
 19595 0000E718 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19596 0000E71D E8A3460000              	call malloc
 19597 0000E722 50                      	push rax
 19598 0000E723 BF10000000              	mov rdi, 8 * 2	; new rib
 19599 0000E728 E898460000              	call malloc
 19600 0000E72D 50                      	push rax
 19601 0000E72E BF18000000              	mov rdi, 8 * 3	; extended env
 19602 0000E733 E88D460000              	call malloc
 19603 0000E738 488B7D10                	mov rdi, ENV
 19604 0000E73C BE00000000              	mov rsi, 0
 19605 0000E741 BA01000000              	mov rdx, 1
 19606                                  .L_lambda_simple_env_loop_0155:	; ext_env[i + 1] <-- env[i]
 19607 0000E746 4883FE02                	cmp rsi, 2
 19608 0000E74A 7410                    	je .L_lambda_simple_env_end_0155
 19609 0000E74C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19610 0000E750 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19611 0000E754 48FFC6                  	inc rsi
 19612 0000E757 48FFC2                  	inc rdx
 19613 0000E75A EBEA                    	jmp .L_lambda_simple_env_loop_0155
 19614                                  .L_lambda_simple_env_end_0155:
 19615 0000E75C 5B                      	pop rbx
 19616 0000E75D BE00000000              	mov rsi, 0
 19617                                  .L_lambda_simple_params_loop_0155:	; copy params
 19618 0000E762 4883FE02                	cmp rsi, 2
 19619 0000E766 740E                    	je .L_lambda_simple_params_end_0155
 19620 0000E768 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19621 0000E76D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19622 0000E771 48FFC6                  	inc rsi
 19623 0000E774 EBEC                    	jmp .L_lambda_simple_params_loop_0155
 19624                                  .L_lambda_simple_params_end_0155:
 19625 0000E776 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19626 0000E779 4889C3                  	mov rbx, rax
 19627 0000E77C 58                      	pop rax
 19628 0000E77D C60004                  	mov byte [rax], T_closure
 19629 0000E780 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19630 0000E784 48C74009[91E70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0155
 19631 0000E78C E980000000              	jmp .L_lambda_simple_end_0155
 19632                                  .L_lambda_simple_code_0155:	; lambda-simple body
 19633 0000E791 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19634 0000E797 740B                    	je .L_lambda_simple_arity_check_ok_0155
 19635 0000E799 FF742410                	push qword [rsp + 8 * 2]
 19636 0000E79D 6A01                    	push 1
 19637 0000E79F E9DA450000              	jmp L_error_incorrect_arity_simple
 19638                                  .L_lambda_simple_arity_check_ok_0155:
 19639 0000E7A4 C8000000                	enter 0, 0
 19640                                  	; preparing a non-tail-call
 19641                                  	; preparing a non-tail-call
 19642 0000E7A8 488B4510                	mov rax, ENV
 19643 0000E7AC 488B00                  	mov rax, qword [rax + 8 * 0]
 19644 0000E7AF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 19645 0000E7B2 50                      	push rax
 19646 0000E7B3 6A01                    	push 1	; arg count
 19647 0000E7B5 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 19648 0000E7BD 803805                  	cmp byte [rax], T_undefined
 19649 0000E7C0 0F84D2440000            	je L_error_fvar_undefined
 19650 0000E7C6 803804                  	cmp byte [rax], T_closure
 19651 0000E7C9 0F854D450000            	jne L_error_non_closure
 19652 0000E7CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 19653 0000E7D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19654 0000E7D5 50                      	push rax
 19655 0000E7D6 488B4510                	mov rax, ENV
 19656 0000E7DA 488B00                  	mov rax, qword [rax + 8 * 0]
 19657 0000E7DD 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 19658 0000E7E1 50                      	push rax
 19659 0000E7E2 488B4520                	mov rax, PARAM(0)	; param str
 19660 0000E7E6 50                      	push rax
 19661 0000E7E7 6A03                    	push 3	; arg count
 19662 0000E7E9 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 19663 0000E7F1 803805                  	cmp byte [rax], T_undefined
 19664 0000E7F4 0F849E440000            	je L_error_fvar_undefined
 19665 0000E7FA 803804                  	cmp byte [rax], T_closure
 19666 0000E7FD 0F8519450000            	jne L_error_non_closure
 19667 0000E803 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19668 0000E806 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19669                                  
 19670 0000E809 488B4520                	mov rax, PARAM(0)	; param str
 19671 0000E80D C9                      	leave
 19672 0000E80E C21800                  	ret AND_KILL_FRAME(1)
 19673                                  .L_lambda_simple_end_0155:	; new closure is in rax
 19674 0000E811 803804                  	cmp byte [rax], T_closure
 19675 0000E814 0F8502450000            	jne L_error_non_closure
 19676 0000E81A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19677 0000E81D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19678                                  .L_if_end_010c:
 19679 0000E820 C9                      	leave
 19680 0000E821 C22000                  	ret AND_KILL_FRAME(2)
 19681                                  .L_lambda_simple_end_0154:	; new closure is in rax
 19682 0000E824 50                      	push rax
 19683 0000E825 488B4520                	mov rax, PARAM(0)	; param run
 19684 0000E829 8F00                    	pop qword [rax]
 19685 0000E82B 48B8-                   	mov rax, sob_void
 19685 0000E82D [0000000000000000] 
 19686                                  
 19687 0000E835 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19688 0000E83A E886450000              	call malloc
 19689 0000E83F 50                      	push rax
 19690 0000E840 BF08000000              	mov rdi, 8 * 1	; new rib
 19691 0000E845 E87B450000              	call malloc
 19692 0000E84A 50                      	push rax
 19693 0000E84B BF10000000              	mov rdi, 8 * 2	; extended env
 19694 0000E850 E870450000              	call malloc
 19695 0000E855 488B7D10                	mov rdi, ENV
 19696 0000E859 BE00000000              	mov rsi, 0
 19697 0000E85E BA01000000              	mov rdx, 1
 19698                                  .L_lambda_simple_env_loop_0156:	; ext_env[i + 1] <-- env[i]
 19699 0000E863 4883FE01                	cmp rsi, 1
 19700 0000E867 7410                    	je .L_lambda_simple_env_end_0156
 19701 0000E869 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19702 0000E86D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19703 0000E871 48FFC6                  	inc rsi
 19704 0000E874 48FFC2                  	inc rdx
 19705 0000E877 EBEA                    	jmp .L_lambda_simple_env_loop_0156
 19706                                  .L_lambda_simple_env_end_0156:
 19707 0000E879 5B                      	pop rbx
 19708 0000E87A BE00000000              	mov rsi, 0
 19709                                  .L_lambda_simple_params_loop_0156:	; copy params
 19710 0000E87F 4883FE01                	cmp rsi, 1
 19711 0000E883 740E                    	je .L_lambda_simple_params_end_0156
 19712 0000E885 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19713 0000E88A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19714 0000E88E 48FFC6                  	inc rsi
 19715 0000E891 EBEC                    	jmp .L_lambda_simple_params_loop_0156
 19716                                  .L_lambda_simple_params_end_0156:
 19717 0000E893 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19718 0000E896 4889C3                  	mov rbx, rax
 19719 0000E899 58                      	pop rax
 19720 0000E89A C60004                  	mov byte [rax], T_closure
 19721 0000E89D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19722 0000E8A1 48C74009[ABE80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0156
 19723 0000E8A9 EB49                    	jmp .L_lambda_simple_end_0156
 19724                                  .L_lambda_simple_code_0156:	; lambda-simple body
 19725 0000E8AB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19726 0000E8B1 740B                    	je .L_lambda_simple_arity_check_ok_0156
 19727 0000E8B3 FF742410                	push qword [rsp + 8 * 2]
 19728 0000E8B7 6A01                    	push 1
 19729 0000E8B9 E9C0440000              	jmp L_error_incorrect_arity_simple
 19730                                  .L_lambda_simple_arity_check_ok_0156:
 19731 0000E8BE C8000000                	enter 0, 0
 19732                                  	; preparing a non-tail-call
 19733 0000E8C2 48B8-                   	mov rax, L_constants + 2135
 19733 0000E8C4 [5708000000000000] 
 19734 0000E8CC 50                      	push rax
 19735 0000E8CD 488B4520                	mov rax, PARAM(0)	; param s
 19736 0000E8D1 50                      	push rax
 19737 0000E8D2 6A02                    	push 2	; arg count
 19738 0000E8D4 488B4510                	mov rax, ENV
 19739 0000E8D8 488B00                  	mov rax, qword [rax + 8 * 0]
 19740 0000E8DB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19741 0000E8DE 488B00                  	mov rax, qword [rax]
 19742 0000E8E1 803804                  	cmp byte [rax], T_closure
 19743 0000E8E4 0F8532440000            	jne L_error_non_closure
 19744 0000E8EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 19745 0000E8ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 19746 0000E8F0 C9                      	leave
 19747 0000E8F1 C21800                  	ret AND_KILL_FRAME(1)
 19748                                  .L_lambda_simple_end_0156:	; new closure is in rax
 19749 0000E8F4 C9                      	leave
 19750 0000E8F5 C21800                  	ret AND_KILL_FRAME(1)
 19751                                  .L_lambda_simple_end_0153:	; new closure is in rax
 19752 0000E8F8 803804                  	cmp byte [rax], T_closure
 19753 0000E8FB 0F851B440000            	jne L_error_non_closure
 19754 0000E901 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19755 0000E904 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19756 0000E907 48890425[03140000]      	mov qword [free_var_94], rax
 19757 0000E90F 48B8-                   	mov rax, sob_void
 19757 0000E911 [0000000000000000] 
 19758                                  
 19759 0000E919 4889C7                  	mov rdi, rax
 19760 0000E91C E8F9460000              	call print_sexpr_if_not_void
 19761 0000E921 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19762 0000E926 E89A440000              	call malloc
 19763 0000E92B 50                      	push rax
 19764 0000E92C BF00000000              	mov rdi, 8 * 0	; new rib
 19765 0000E931 E88F440000              	call malloc
 19766 0000E936 50                      	push rax
 19767 0000E937 BF08000000              	mov rdi, 8 * 1	; extended env
 19768 0000E93C E884440000              	call malloc
 19769 0000E941 488B7D10                	mov rdi, ENV
 19770 0000E945 BE00000000              	mov rsi, 0
 19771 0000E94A BA01000000              	mov rdx, 1
 19772                                  .L_lambda_opt_env_loop_002e:	; ext_env[i + 1] <-- env[i]
 19773 0000E94F 4883FE00                	cmp rsi, 0
 19774 0000E953 7410                    	je .L_lambda_opt_env_end_002e
 19775 0000E955 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19776 0000E959 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19777 0000E95D 48FFC6                  	inc rsi
 19778 0000E960 48FFC2                  	inc rdx
 19779 0000E963 EBEA                    	jmp .L_lambda_opt_env_loop_002e
 19780                                  .L_lambda_opt_env_end_002e:
 19781 0000E965 5B                      	pop rbx
 19782 0000E966 BE00000000              	mov rsi, 0
 19783                                  .L_lambda_opt_params_loop_002e:	; copy params
 19784 0000E96B 4883FE00                	cmp rsi, 0
 19785 0000E96F 740E                    	je .L_lambda_opt_params_end_002e
 19786 0000E971 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19787 0000E976 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19788 0000E97A 48FFC6                  	inc rsi
 19789 0000E97D EBEC                    	jmp .L_lambda_opt_params_loop_002e
 19790                                  .L_lambda_opt_params_end_002e:
 19791 0000E97F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19792 0000E982 4889C3                  	mov rbx, rax
 19793 0000E985 58                      	pop rax
 19794 0000E986 C60004                  	mov byte [rax], T_closure
 19795 0000E989 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19796 0000E98D 48C74009[9AE90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_002e
 19797 0000E995 E940010000              	jmp .L_lambda_opt_end_002e
 19798                                  .L_lambda_opt_code_002e:	; lambda-opt body
 19799 0000E99A 48837C241000            	cmp qword [rsp + 8 * 2], 0
 19800 0000E9A0 740D                    	je .L_lambda_opt_arity_check_exact_002e
 19801 0000E9A2 7F6F                    	jg .L_lambda_opt_arity_check_more_002e
 19802 0000E9A4 FF742410                	push qword [rsp + 8 * 2]
 19803 0000E9A8 6A00                    	push 0
 19804 0000E9AA E9E3430000              	jmp L_error_incorrect_arity_opt
 19805                                  .L_lambda_opt_arity_check_exact_002e:
 19806 0000E9AF 4883EC08                	sub rsp, 8
 19807 0000E9B3 488B442408              	mov rax, qword[rsp + 8 *1]
 19808 0000E9B8 48890424                	mov qword[rsp], rax  
 19809 0000E9BC 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 19810 0000E9C1 4889442408              	mov qword[rsp + 8 * 1], rax
 19811 0000E9C6 B801000000              	mov rax, 1
 19812 0000E9CB 4889442410              	mov qword[rsp + 8 *2], rax
 19813 0000E9D0 48B8-                   	mov rax, sob_nil
 19813 0000E9D2 [0100000000000000] 
 19814 0000E9DA 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 19815 0000E9DF C8000000                	enter 0, 0
 19816                                  	; preparing a non-tail-call
 19817 0000E9E3 488B4520                	mov rax, PARAM(0)	; param s
 19818 0000E9E7 50                      	push rax
 19819 0000E9E8 6A01                    	push 1	; arg count
 19820 0000E9EA 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 19821 0000E9F2 803805                  	cmp byte [rax], T_undefined
 19822 0000E9F5 0F849D420000            	je L_error_fvar_undefined
 19823 0000E9FB 803804                  	cmp byte [rax], T_closure
 19824 0000E9FE 0F8518430000            	jne L_error_non_closure
 19825 0000EA04 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19826 0000EA07 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19827 0000EA0A C9                      	leave
 19828 0000EA0B C21800                  	ret AND_KILL_FRAME(1)
 19829 0000EA0E E9C7000000              	jmp .L_lambda_opt_end_002e	; new closure is in rax
 19830                                  .L_lambda_opt_arity_check_more_002e:
 19831 0000EA13 488B442410              	mov rax, qword[rsp + 2 * 8]
 19832 0000EA18 4889C7                  	mov rdi, rax
 19833 0000EA1B 49B9-                   	mov r9, sob_nil
 19833 0000EA1D [0100000000000000] 
 19834 0000EA25 4C8B442410              	mov r8, qword[rsp+2*8]
 19835                                  .L_lambda_opt_stack_shrink_loop_002e:
 19836 0000EA2A 4983F800                	cmp r8, 0
 19837 0000EA2E 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_002e
 19838 0000EA30 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 19839 0000EA35 BF11000000              	mov rdi, 1+8+8	;for pair
 19840 0000EA3A E886430000              	call malloc	 ;to create the pair in the stack
 19841 0000EA3F C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 19842 0000EA42 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 19843 0000EA46 4C894809                 	mov qword[rax+1+8],r9
 19844 0000EA4A 4989C1                  	mov r9 , rax	 ; for the recursion 
 19845 0000EA4D 49FFC8                  	dec r8
 19846 0000EA50 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_002e
 19847                                  .L_lambda_opt_stack_shrink_loop_exit_002e:
 19848 0000EA52 488B442410              	mov rax, qword[rsp + 2 * 8]
 19849 0000EA57 BF01000000              	mov rdi, 1
 19850 0000EA5C 4829F8                  	sub rax, rdi
 19851 0000EA5F 4889C7                  	mov rdi, rax
 19852 0000EA62 486BC008                	imul rax,8
 19853 0000EA66 4801C4                  	add rsp, rax
 19854 0000EA69 4889E0                  	mov rax, rsp
 19855 0000EA6C 4989F8                  	mov r8, rdi
 19856 0000EA6F 4D6BC008                	imul r8, 8
 19857 0000EA73 4C29C0                  	sub rax, r8
 19858 0000EA76 4989C2                  	mov r10, rax	; holds the original ret in the stack
 19859 0000EA79 4983C218                	add r10, 8*3
 19860 0000EA7D 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 19861 0000EA81 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 19862 0000EA84 4D6BC008                	imul r8,8
 19863 0000EA88 4C01C0                  	add rax, r8
 19864 0000EA8B 4C8908                  	mov qword[rax] ,r9
 19865 0000EA8E 4983EA18                 	sub r10, 8*3
 19866 0000EA92 48C744241001000000      	mov qword [rsp+2*8], 1
 19867 0000EA9B 498B4208                	mov rax, qword[r10 + 1 * 8]
 19868 0000EA9F 4889442408              	mov qword[rsp + 1*8] ,rax
 19869 0000EAA4 498B02                  	mov rax, qword[r10]
 19870 0000EAA7 48890424                	mov qword[rsp], rax
 19871 0000EAAB C8000000                	enter 0, 0
 19872                                  	; preparing a non-tail-call
 19873 0000EAAF 488B4520                	mov rax, PARAM(0)	; param s
 19874 0000EAB3 50                      	push rax
 19875 0000EAB4 6A01                    	push 1	; arg count
 19876 0000EAB6 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 19877 0000EABE 803805                  	cmp byte [rax], T_undefined
 19878 0000EAC1 0F84D1410000            	je L_error_fvar_undefined
 19879 0000EAC7 803804                  	cmp byte [rax], T_closure
 19880 0000EACA 0F854C420000            	jne L_error_non_closure
 19881 0000EAD0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19882 0000EAD3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19883 0000EAD6 C9                      	leave
 19884 0000EAD7 C21800                  	ret AND_KILL_FRAME(1)
 19885                                  .L_lambda_opt_end_002e:	; new closure is in rax
 19886 0000EADA 48890425[11170000]      	mov qword [free_var_140], rax
 19887 0000EAE2 48B8-                   	mov rax, sob_void
 19887 0000EAE4 [0000000000000000] 
 19888                                  
 19889 0000EAEC 4889C7                  	mov rdi, rax
 19890 0000EAEF E826450000              	call print_sexpr_if_not_void
 19891                                  	; preparing a non-tail-call
 19892 0000EAF4 48B8-                   	mov rax, L_constants + 1993
 19892 0000EAF6 [C907000000000000] 
 19893 0000EAFE 50                      	push rax
 19894 0000EAFF 6A01                    	push 1	; arg count
 19895 0000EB01 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19896 0000EB06 E8BA420000              	call malloc
 19897 0000EB0B 50                      	push rax
 19898 0000EB0C BF00000000              	mov rdi, 8 * 0	; new rib
 19899 0000EB11 E8AF420000              	call malloc
 19900 0000EB16 50                      	push rax
 19901 0000EB17 BF08000000              	mov rdi, 8 * 1	; extended env
 19902 0000EB1C E8A4420000              	call malloc
 19903 0000EB21 488B7D10                	mov rdi, ENV
 19904 0000EB25 BE00000000              	mov rsi, 0
 19905 0000EB2A BA01000000              	mov rdx, 1
 19906                                  .L_lambda_simple_env_loop_0157:	; ext_env[i + 1] <-- env[i]
 19907 0000EB2F 4883FE00                	cmp rsi, 0
 19908 0000EB33 7410                    	je .L_lambda_simple_env_end_0157
 19909 0000EB35 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19910 0000EB39 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19911 0000EB3D 48FFC6                  	inc rsi
 19912 0000EB40 48FFC2                  	inc rdx
 19913 0000EB43 EBEA                    	jmp .L_lambda_simple_env_loop_0157
 19914                                  .L_lambda_simple_env_end_0157:
 19915 0000EB45 5B                      	pop rbx
 19916 0000EB46 BE00000000              	mov rsi, 0
 19917                                  .L_lambda_simple_params_loop_0157:	; copy params
 19918 0000EB4B 4883FE00                	cmp rsi, 0
 19919 0000EB4F 740E                    	je .L_lambda_simple_params_end_0157
 19920 0000EB51 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19921 0000EB56 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19922 0000EB5A 48FFC6                  	inc rsi
 19923 0000EB5D EBEC                    	jmp .L_lambda_simple_params_loop_0157
 19924                                  .L_lambda_simple_params_end_0157:
 19925 0000EB5F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19926 0000EB62 4889C3                  	mov rbx, rax
 19927 0000EB65 58                      	pop rax
 19928 0000EB66 C60004                  	mov byte [rax], T_closure
 19929 0000EB69 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19930 0000EB6D 48C74009[7AEB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0157
 19931 0000EB75 E99D020000              	jmp .L_lambda_simple_end_0157
 19932                                  .L_lambda_simple_code_0157:	; lambda-simple body
 19933 0000EB7A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19934 0000EB80 740B                    	je .L_lambda_simple_arity_check_ok_0157
 19935 0000EB82 FF742410                	push qword [rsp + 8 * 2]
 19936 0000EB86 6A01                    	push 1
 19937 0000EB88 E9F1410000              	jmp L_error_incorrect_arity_simple
 19938                                  .L_lambda_simple_arity_check_ok_0157:
 19939 0000EB8D C8000000                	enter 0, 0
 19940 0000EB91 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 19941 0000EB95 488903                  	mov qword [rbx], rax
 19942                                  
 19943 0000EB98 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19944 0000EB9D E823420000              	call malloc
 19945 0000EBA2 50                      	push rax
 19946 0000EBA3 BF08000000              	mov rdi, 8 * 1	; new rib
 19947 0000EBA8 E818420000              	call malloc
 19948 0000EBAD 50                      	push rax
 19949 0000EBAE BF10000000              	mov rdi, 8 * 2	; extended env
 19950 0000EBB3 E80D420000              	call malloc
 19951 0000EBB8 488B7D10                	mov rdi, ENV
 19952 0000EBBC BE00000000              	mov rsi, 0
 19953 0000EBC1 BA01000000              	mov rdx, 1
 19954                                  .L_lambda_simple_env_loop_0158:	; ext_env[i + 1] <-- env[i]
 19955 0000EBC6 4883FE01                	cmp rsi, 1
 19956 0000EBCA 7410                    	je .L_lambda_simple_env_end_0158
 19957 0000EBCC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19958 0000EBD0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19959 0000EBD4 48FFC6                  	inc rsi
 19960 0000EBD7 48FFC2                  	inc rdx
 19961 0000EBDA EBEA                    	jmp .L_lambda_simple_env_loop_0158
 19962                                  .L_lambda_simple_env_end_0158:
 19963 0000EBDC 5B                      	pop rbx
 19964 0000EBDD BE00000000              	mov rsi, 0
 19965                                  .L_lambda_simple_params_loop_0158:	; copy params
 19966 0000EBE2 4883FE01                	cmp rsi, 1
 19967 0000EBE6 740E                    	je .L_lambda_simple_params_end_0158
 19968 0000EBE8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19969 0000EBED 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19970 0000EBF1 48FFC6                  	inc rsi
 19971 0000EBF4 EBEC                    	jmp .L_lambda_simple_params_loop_0158
 19972                                  .L_lambda_simple_params_end_0158:
 19973 0000EBF6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19974 0000EBF9 4889C3                  	mov rbx, rax
 19975 0000EBFC 58                      	pop rax
 19976 0000EBFD C60004                  	mov byte [rax], T_closure
 19977 0000EC00 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19978 0000EC04 48C74009[11EC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0158
 19979 0000EC0C E90A010000              	jmp .L_lambda_simple_end_0158
 19980                                  .L_lambda_simple_code_0158:	; lambda-simple body
 19981 0000EC11 48837C241003            	cmp qword [rsp + 8 * 2], 3
 19982 0000EC17 740B                    	je .L_lambda_simple_arity_check_ok_0158
 19983 0000EC19 FF742410                	push qword [rsp + 8 * 2]
 19984 0000EC1D 6A03                    	push 3
 19985 0000EC1F E95A410000              	jmp L_error_incorrect_arity_simple
 19986                                  .L_lambda_simple_arity_check_ok_0158:
 19987 0000EC24 C8000000                	enter 0, 0
 19988                                  	; preparing a non-tail-call
 19989 0000EC28 488B4530                	mov rax, PARAM(2)	; param n
 19990 0000EC2C 50                      	push rax
 19991 0000EC2D 488B4528                	mov rax, PARAM(1)	; param i
 19992 0000EC31 50                      	push rax
 19993 0000EC32 6A02                    	push 2	; arg count
 19994 0000EC34 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 19995 0000EC3C 803805                  	cmp byte [rax], T_undefined
 19996 0000EC3F 0F8453400000            	je L_error_fvar_undefined
 19997 0000EC45 803804                  	cmp byte [rax], T_closure
 19998 0000EC48 0F85CE400000            	jne L_error_non_closure
 19999 0000EC4E FF7001                  	push SOB_CLOSURE_ENV(rax)
 20000 0000EC51 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20001 0000EC54 483D[02000000]          	cmp rax, sob_boolean_false
 20002 0000EC5A 0F84AD000000            	je .L_if_else_010d
 20003                                  	; preparing a non-tail-call
 20004                                  	; preparing a non-tail-call
 20005 0000EC60 488B4530                	mov rax, PARAM(2)	; param n
 20006 0000EC64 50                      	push rax
 20007                                  	; preparing a non-tail-call
 20008 0000EC65 48B8-                   	mov rax, L_constants + 2270
 20008 0000EC67 [DE08000000000000] 
 20009 0000EC6F 50                      	push rax
 20010 0000EC70 488B4528                	mov rax, PARAM(1)	; param i
 20011 0000EC74 50                      	push rax
 20012 0000EC75 6A02                    	push 2	; arg count
 20013 0000EC77 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 20014 0000EC7F 803805                  	cmp byte [rax], T_undefined
 20015 0000EC82 0F8410400000            	je L_error_fvar_undefined
 20016 0000EC88 803804                  	cmp byte [rax], T_closure
 20017 0000EC8B 0F858B400000            	jne L_error_non_closure
 20018 0000EC91 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20019 0000EC94 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20020 0000EC97 50                      	push rax
 20021 0000EC98 488B4520                	mov rax, PARAM(0)	; param str
 20022 0000EC9C 50                      	push rax
 20023 0000EC9D 6A03                    	push 3	; arg count
 20024 0000EC9F 488B4510                	mov rax, ENV
 20025 0000ECA3 488B00                  	mov rax, qword [rax + 8 * 0]
 20026 0000ECA6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20027 0000ECA9 488B00                  	mov rax, qword [rax]
 20028 0000ECAC 803804                  	cmp byte [rax], T_closure
 20029 0000ECAF 0F8567400000            	jne L_error_non_closure
 20030 0000ECB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20031 0000ECB8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20032 0000ECBB 50                      	push rax
 20033                                  	; preparing a non-tail-call
 20034 0000ECBC 488B4528                	mov rax, PARAM(1)	; param i
 20035 0000ECC0 50                      	push rax
 20036 0000ECC1 488B4520                	mov rax, PARAM(0)	; param str
 20037 0000ECC5 50                      	push rax
 20038 0000ECC6 6A02                    	push 2	; arg count
 20039 0000ECC8 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 20040 0000ECD0 803805                  	cmp byte [rax], T_undefined
 20041 0000ECD3 0F84BF3F0000            	je L_error_fvar_undefined
 20042 0000ECD9 803804                  	cmp byte [rax], T_closure
 20043 0000ECDC 0F853A400000            	jne L_error_non_closure
 20044 0000ECE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20045 0000ECE5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20046 0000ECE8 50                      	push rax
 20047 0000ECE9 6A02                    	push 2	; arg count
 20048 0000ECEB 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 20049 0000ECF3 803805                  	cmp byte [rax], T_undefined
 20050 0000ECF6 0F849C3F0000            	je L_error_fvar_undefined
 20051 0000ECFC 803804                  	cmp byte [rax], T_closure
 20052 0000ECFF 0F8517400000            	jne L_error_non_closure
 20053 0000ED05 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20054 0000ED08 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20055 0000ED0B EB0A                    	jmp .L_if_end_010d
 20056                                  .L_if_else_010d:
 20057 0000ED0D 48B8-                   	mov rax, L_constants + 1
 20057 0000ED0F [0100000000000000] 
 20058                                  .L_if_end_010d:
 20059 0000ED17 C9                      	leave
 20060 0000ED18 C22800                  	ret AND_KILL_FRAME(3)
 20061                                  .L_lambda_simple_end_0158:	; new closure is in rax
 20062 0000ED1B 50                      	push rax
 20063 0000ED1C 488B4520                	mov rax, PARAM(0)	; param run
 20064 0000ED20 8F00                    	pop qword [rax]
 20065 0000ED22 48B8-                   	mov rax, sob_void
 20065 0000ED24 [0000000000000000] 
 20066                                  
 20067 0000ED2C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20068 0000ED31 E88F400000              	call malloc
 20069 0000ED36 50                      	push rax
 20070 0000ED37 BF08000000              	mov rdi, 8 * 1	; new rib
 20071 0000ED3C E884400000              	call malloc
 20072 0000ED41 50                      	push rax
 20073 0000ED42 BF10000000              	mov rdi, 8 * 2	; extended env
 20074 0000ED47 E879400000              	call malloc
 20075 0000ED4C 488B7D10                	mov rdi, ENV
 20076 0000ED50 BE00000000              	mov rsi, 0
 20077 0000ED55 BA01000000              	mov rdx, 1
 20078                                  .L_lambda_simple_env_loop_0159:	; ext_env[i + 1] <-- env[i]
 20079 0000ED5A 4883FE01                	cmp rsi, 1
 20080 0000ED5E 7410                    	je .L_lambda_simple_env_end_0159
 20081 0000ED60 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20082 0000ED64 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20083 0000ED68 48FFC6                  	inc rsi
 20084 0000ED6B 48FFC2                  	inc rdx
 20085 0000ED6E EBEA                    	jmp .L_lambda_simple_env_loop_0159
 20086                                  .L_lambda_simple_env_end_0159:
 20087 0000ED70 5B                      	pop rbx
 20088 0000ED71 BE00000000              	mov rsi, 0
 20089                                  .L_lambda_simple_params_loop_0159:	; copy params
 20090 0000ED76 4883FE01                	cmp rsi, 1
 20091 0000ED7A 740E                    	je .L_lambda_simple_params_end_0159
 20092 0000ED7C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20093 0000ED81 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20094 0000ED85 48FFC6                  	inc rsi
 20095 0000ED88 EBEC                    	jmp .L_lambda_simple_params_loop_0159
 20096                                  .L_lambda_simple_params_end_0159:
 20097 0000ED8A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20098 0000ED8D 4889C3                  	mov rbx, rax
 20099 0000ED90 58                      	pop rax
 20100 0000ED91 C60004                  	mov byte [rax], T_closure
 20101 0000ED94 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20102 0000ED98 48C74009[A2ED0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0159
 20103 0000EDA0 EB71                    	jmp .L_lambda_simple_end_0159
 20104                                  .L_lambda_simple_code_0159:	; lambda-simple body
 20105 0000EDA2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20106 0000EDA8 740B                    	je .L_lambda_simple_arity_check_ok_0159
 20107 0000EDAA FF742410                	push qword [rsp + 8 * 2]
 20108 0000EDAE 6A01                    	push 1
 20109 0000EDB0 E9C93F0000              	jmp L_error_incorrect_arity_simple
 20110                                  .L_lambda_simple_arity_check_ok_0159:
 20111 0000EDB5 C8000000                	enter 0, 0
 20112                                  	; preparing a non-tail-call
 20113                                  	; preparing a non-tail-call
 20114 0000EDB9 488B4520                	mov rax, PARAM(0)	; param str
 20115 0000EDBD 50                      	push rax
 20116 0000EDBE 6A01                    	push 1	; arg count
 20117 0000EDC0 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 20118 0000EDC8 803805                  	cmp byte [rax], T_undefined
 20119 0000EDCB 0F84C73E0000            	je L_error_fvar_undefined
 20120 0000EDD1 803804                  	cmp byte [rax], T_closure
 20121 0000EDD4 0F85423F0000            	jne L_error_non_closure
 20122 0000EDDA FF7001                  	push SOB_CLOSURE_ENV(rax)
 20123 0000EDDD FF5009                  	call SOB_CLOSURE_CODE(rax)
 20124 0000EDE0 50                      	push rax
 20125 0000EDE1 48B8-                   	mov rax, L_constants + 2135
 20125 0000EDE3 [5708000000000000] 
 20126 0000EDEB 50                      	push rax
 20127 0000EDEC 488B4520                	mov rax, PARAM(0)	; param str
 20128 0000EDF0 50                      	push rax
 20129 0000EDF1 6A03                    	push 3	; arg count
 20130 0000EDF3 488B4510                	mov rax, ENV
 20131 0000EDF7 488B00                  	mov rax, qword [rax + 8 * 0]
 20132 0000EDFA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20133 0000EDFD 488B00                  	mov rax, qword [rax]
 20134 0000EE00 803804                  	cmp byte [rax], T_closure
 20135 0000EE03 0F85133F0000            	jne L_error_non_closure
 20136 0000EE09 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20137 0000EE0C FF5009                  	call SOB_CLOSURE_CODE(rax)
 20138 0000EE0F C9                      	leave
 20139 0000EE10 C21800                  	ret AND_KILL_FRAME(1)
 20140                                  .L_lambda_simple_end_0159:	; new closure is in rax
 20141 0000EE13 C9                      	leave
 20142 0000EE14 C21800                  	ret AND_KILL_FRAME(1)
 20143                                  .L_lambda_simple_end_0157:	; new closure is in rax
 20144 0000EE17 803804                  	cmp byte [rax], T_closure
 20145 0000EE1A 0F85FC3E0000            	jne L_error_non_closure
 20146 0000EE20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20147 0000EE23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20148 0000EE26 48890425[AC150000]      	mov qword [free_var_119], rax
 20149 0000EE2E 48B8-                   	mov rax, sob_void
 20149 0000EE30 [0000000000000000] 
 20150                                  
 20151 0000EE38 4889C7                  	mov rdi, rax
 20152 0000EE3B E8DA410000              	call print_sexpr_if_not_void
 20153                                  	; preparing a non-tail-call
 20154 0000EE40 48B8-                   	mov rax, L_constants + 1993
 20154 0000EE42 [C907000000000000] 
 20155 0000EE4A 50                      	push rax
 20156 0000EE4B 6A01                    	push 1	; arg count
 20157 0000EE4D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20158 0000EE52 E86E3F0000              	call malloc
 20159 0000EE57 50                      	push rax
 20160 0000EE58 BF00000000              	mov rdi, 8 * 0	; new rib
 20161 0000EE5D E8633F0000              	call malloc
 20162 0000EE62 50                      	push rax
 20163 0000EE63 BF08000000              	mov rdi, 8 * 1	; extended env
 20164 0000EE68 E8583F0000              	call malloc
 20165 0000EE6D 488B7D10                	mov rdi, ENV
 20166 0000EE71 BE00000000              	mov rsi, 0
 20167 0000EE76 BA01000000              	mov rdx, 1
 20168                                  .L_lambda_simple_env_loop_015a:	; ext_env[i + 1] <-- env[i]
 20169 0000EE7B 4883FE00                	cmp rsi, 0
 20170 0000EE7F 7410                    	je .L_lambda_simple_env_end_015a
 20171 0000EE81 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20172 0000EE85 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20173 0000EE89 48FFC6                  	inc rsi
 20174 0000EE8C 48FFC2                  	inc rdx
 20175 0000EE8F EBEA                    	jmp .L_lambda_simple_env_loop_015a
 20176                                  .L_lambda_simple_env_end_015a:
 20177 0000EE91 5B                      	pop rbx
 20178 0000EE92 BE00000000              	mov rsi, 0
 20179                                  .L_lambda_simple_params_loop_015a:	; copy params
 20180 0000EE97 4883FE00                	cmp rsi, 0
 20181 0000EE9B 740E                    	je .L_lambda_simple_params_end_015a
 20182 0000EE9D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20183 0000EEA2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20184 0000EEA6 48FFC6                  	inc rsi
 20185 0000EEA9 EBEC                    	jmp .L_lambda_simple_params_loop_015a
 20186                                  .L_lambda_simple_params_end_015a:
 20187 0000EEAB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20188 0000EEAE 4889C3                  	mov rbx, rax
 20189 0000EEB1 58                      	pop rax
 20190 0000EEB2 C60004                  	mov byte [rax], T_closure
 20191 0000EEB5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20192 0000EEB9 48C74009[C6EE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_015a
 20193 0000EEC1 E99D020000              	jmp .L_lambda_simple_end_015a
 20194                                  .L_lambda_simple_code_015a:	; lambda-simple body
 20195 0000EEC6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20196 0000EECC 740B                    	je .L_lambda_simple_arity_check_ok_015a
 20197 0000EECE FF742410                	push qword [rsp + 8 * 2]
 20198 0000EED2 6A01                    	push 1
 20199 0000EED4 E9A53E0000              	jmp L_error_incorrect_arity_simple
 20200                                  .L_lambda_simple_arity_check_ok_015a:
 20201 0000EED9 C8000000                	enter 0, 0
 20202 0000EEDD 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 20203 0000EEE1 488903                  	mov qword [rbx], rax
 20204                                  
 20205 0000EEE4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20206 0000EEE9 E8D73E0000              	call malloc
 20207 0000EEEE 50                      	push rax
 20208 0000EEEF BF08000000              	mov rdi, 8 * 1	; new rib
 20209 0000EEF4 E8CC3E0000              	call malloc
 20210 0000EEF9 50                      	push rax
 20211 0000EEFA BF10000000              	mov rdi, 8 * 2	; extended env
 20212 0000EEFF E8C13E0000              	call malloc
 20213 0000EF04 488B7D10                	mov rdi, ENV
 20214 0000EF08 BE00000000              	mov rsi, 0
 20215 0000EF0D BA01000000              	mov rdx, 1
 20216                                  .L_lambda_simple_env_loop_015b:	; ext_env[i + 1] <-- env[i]
 20217 0000EF12 4883FE01                	cmp rsi, 1
 20218 0000EF16 7410                    	je .L_lambda_simple_env_end_015b
 20219 0000EF18 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20220 0000EF1C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20221 0000EF20 48FFC6                  	inc rsi
 20222 0000EF23 48FFC2                  	inc rdx
 20223 0000EF26 EBEA                    	jmp .L_lambda_simple_env_loop_015b
 20224                                  .L_lambda_simple_env_end_015b:
 20225 0000EF28 5B                      	pop rbx
 20226 0000EF29 BE00000000              	mov rsi, 0
 20227                                  .L_lambda_simple_params_loop_015b:	; copy params
 20228 0000EF2E 4883FE01                	cmp rsi, 1
 20229 0000EF32 740E                    	je .L_lambda_simple_params_end_015b
 20230 0000EF34 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20231 0000EF39 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20232 0000EF3D 48FFC6                  	inc rsi
 20233 0000EF40 EBEC                    	jmp .L_lambda_simple_params_loop_015b
 20234                                  .L_lambda_simple_params_end_015b:
 20235 0000EF42 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20236 0000EF45 4889C3                  	mov rbx, rax
 20237 0000EF48 58                      	pop rax
 20238 0000EF49 C60004                  	mov byte [rax], T_closure
 20239 0000EF4C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20240 0000EF50 48C74009[5DEF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_015b
 20241 0000EF58 E90A010000              	jmp .L_lambda_simple_end_015b
 20242                                  .L_lambda_simple_code_015b:	; lambda-simple body
 20243 0000EF5D 48837C241003            	cmp qword [rsp + 8 * 2], 3
 20244 0000EF63 740B                    	je .L_lambda_simple_arity_check_ok_015b
 20245 0000EF65 FF742410                	push qword [rsp + 8 * 2]
 20246 0000EF69 6A03                    	push 3
 20247 0000EF6B E90E3E0000              	jmp L_error_incorrect_arity_simple
 20248                                  .L_lambda_simple_arity_check_ok_015b:
 20249 0000EF70 C8000000                	enter 0, 0
 20250                                  	; preparing a non-tail-call
 20251 0000EF74 488B4530                	mov rax, PARAM(2)	; param n
 20252 0000EF78 50                      	push rax
 20253 0000EF79 488B4528                	mov rax, PARAM(1)	; param i
 20254 0000EF7D 50                      	push rax
 20255 0000EF7E 6A02                    	push 2	; arg count
 20256 0000EF80 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 20257 0000EF88 803805                  	cmp byte [rax], T_undefined
 20258 0000EF8B 0F84073D0000            	je L_error_fvar_undefined
 20259 0000EF91 803804                  	cmp byte [rax], T_closure
 20260 0000EF94 0F85823D0000            	jne L_error_non_closure
 20261 0000EF9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 20262 0000EF9D FF5009                  	call SOB_CLOSURE_CODE(rax)
 20263 0000EFA0 483D[02000000]          	cmp rax, sob_boolean_false
 20264 0000EFA6 0F84AD000000            	je .L_if_else_010e
 20265                                  	; preparing a non-tail-call
 20266                                  	; preparing a non-tail-call
 20267 0000EFAC 488B4530                	mov rax, PARAM(2)	; param n
 20268 0000EFB0 50                      	push rax
 20269                                  	; preparing a non-tail-call
 20270 0000EFB1 48B8-                   	mov rax, L_constants + 2270
 20270 0000EFB3 [DE08000000000000] 
 20271 0000EFBB 50                      	push rax
 20272 0000EFBC 488B4528                	mov rax, PARAM(1)	; param i
 20273 0000EFC0 50                      	push rax
 20274 0000EFC1 6A02                    	push 2	; arg count
 20275 0000EFC3 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 20276 0000EFCB 803805                  	cmp byte [rax], T_undefined
 20277 0000EFCE 0F84C43C0000            	je L_error_fvar_undefined
 20278 0000EFD4 803804                  	cmp byte [rax], T_closure
 20279 0000EFD7 0F853F3D0000            	jne L_error_non_closure
 20280 0000EFDD FF7001                  	push SOB_CLOSURE_ENV(rax)
 20281 0000EFE0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20282 0000EFE3 50                      	push rax
 20283 0000EFE4 488B4520                	mov rax, PARAM(0)	; param v
 20284 0000EFE8 50                      	push rax
 20285 0000EFE9 6A03                    	push 3	; arg count
 20286 0000EFEB 488B4510                	mov rax, ENV
 20287 0000EFEF 488B00                  	mov rax, qword [rax + 8 * 0]
 20288 0000EFF2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20289 0000EFF5 488B00                  	mov rax, qword [rax]
 20290 0000EFF8 803804                  	cmp byte [rax], T_closure
 20291 0000EFFB 0F851B3D0000            	jne L_error_non_closure
 20292 0000F001 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20293 0000F004 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20294 0000F007 50                      	push rax
 20295                                  	; preparing a non-tail-call
 20296 0000F008 488B4528                	mov rax, PARAM(1)	; param i
 20297 0000F00C 50                      	push rax
 20298 0000F00D 488B4520                	mov rax, PARAM(0)	; param v
 20299 0000F011 50                      	push rax
 20300 0000F012 6A02                    	push 2	; arg count
 20301 0000F014 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 20302 0000F01C 803805                  	cmp byte [rax], T_undefined
 20303 0000F01F 0F84733C0000            	je L_error_fvar_undefined
 20304 0000F025 803804                  	cmp byte [rax], T_closure
 20305 0000F028 0F85EE3C0000            	jne L_error_non_closure
 20306 0000F02E FF7001                  	push SOB_CLOSURE_ENV(rax)
 20307 0000F031 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20308 0000F034 50                      	push rax
 20309 0000F035 6A02                    	push 2	; arg count
 20310 0000F037 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 20311 0000F03F 803805                  	cmp byte [rax], T_undefined
 20312 0000F042 0F84503C0000            	je L_error_fvar_undefined
 20313 0000F048 803804                  	cmp byte [rax], T_closure
 20314 0000F04B 0F85CB3C0000            	jne L_error_non_closure
 20315 0000F051 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20316 0000F054 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20317 0000F057 EB0A                    	jmp .L_if_end_010e
 20318                                  .L_if_else_010e:
 20319 0000F059 48B8-                   	mov rax, L_constants + 1
 20319 0000F05B [0100000000000000] 
 20320                                  .L_if_end_010e:
 20321 0000F063 C9                      	leave
 20322 0000F064 C22800                  	ret AND_KILL_FRAME(3)
 20323                                  .L_lambda_simple_end_015b:	; new closure is in rax
 20324 0000F067 50                      	push rax
 20325 0000F068 488B4520                	mov rax, PARAM(0)	; param run
 20326 0000F06C 8F00                    	pop qword [rax]
 20327 0000F06E 48B8-                   	mov rax, sob_void
 20327 0000F070 [0000000000000000] 
 20328                                  
 20329 0000F078 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20330 0000F07D E8433D0000              	call malloc
 20331 0000F082 50                      	push rax
 20332 0000F083 BF08000000              	mov rdi, 8 * 1	; new rib
 20333 0000F088 E8383D0000              	call malloc
 20334 0000F08D 50                      	push rax
 20335 0000F08E BF10000000              	mov rdi, 8 * 2	; extended env
 20336 0000F093 E82D3D0000              	call malloc
 20337 0000F098 488B7D10                	mov rdi, ENV
 20338 0000F09C BE00000000              	mov rsi, 0
 20339 0000F0A1 BA01000000              	mov rdx, 1
 20340                                  .L_lambda_simple_env_loop_015c:	; ext_env[i + 1] <-- env[i]
 20341 0000F0A6 4883FE01                	cmp rsi, 1
 20342 0000F0AA 7410                    	je .L_lambda_simple_env_end_015c
 20343 0000F0AC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20344 0000F0B0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20345 0000F0B4 48FFC6                  	inc rsi
 20346 0000F0B7 48FFC2                  	inc rdx
 20347 0000F0BA EBEA                    	jmp .L_lambda_simple_env_loop_015c
 20348                                  .L_lambda_simple_env_end_015c:
 20349 0000F0BC 5B                      	pop rbx
 20350 0000F0BD BE00000000              	mov rsi, 0
 20351                                  .L_lambda_simple_params_loop_015c:	; copy params
 20352 0000F0C2 4883FE01                	cmp rsi, 1
 20353 0000F0C6 740E                    	je .L_lambda_simple_params_end_015c
 20354 0000F0C8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20355 0000F0CD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20356 0000F0D1 48FFC6                  	inc rsi
 20357 0000F0D4 EBEC                    	jmp .L_lambda_simple_params_loop_015c
 20358                                  .L_lambda_simple_params_end_015c:
 20359 0000F0D6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20360 0000F0D9 4889C3                  	mov rbx, rax
 20361 0000F0DC 58                      	pop rax
 20362 0000F0DD C60004                  	mov byte [rax], T_closure
 20363 0000F0E0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20364 0000F0E4 48C74009[EEF00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_015c
 20365 0000F0EC EB71                    	jmp .L_lambda_simple_end_015c
 20366                                  .L_lambda_simple_code_015c:	; lambda-simple body
 20367 0000F0EE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20368 0000F0F4 740B                    	je .L_lambda_simple_arity_check_ok_015c
 20369 0000F0F6 FF742410                	push qword [rsp + 8 * 2]
 20370 0000F0FA 6A01                    	push 1
 20371 0000F0FC E97D3C0000              	jmp L_error_incorrect_arity_simple
 20372                                  .L_lambda_simple_arity_check_ok_015c:
 20373 0000F101 C8000000                	enter 0, 0
 20374                                  	; preparing a non-tail-call
 20375                                  	; preparing a non-tail-call
 20376 0000F105 488B4520                	mov rax, PARAM(0)	; param v
 20377 0000F109 50                      	push rax
 20378 0000F10A 6A01                    	push 1	; arg count
 20379 0000F10C 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 20380 0000F114 803805                  	cmp byte [rax], T_undefined
 20381 0000F117 0F847B3B0000            	je L_error_fvar_undefined
 20382 0000F11D 803804                  	cmp byte [rax], T_closure
 20383 0000F120 0F85F63B0000            	jne L_error_non_closure
 20384 0000F126 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20385 0000F129 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20386 0000F12C 50                      	push rax
 20387 0000F12D 48B8-                   	mov rax, L_constants + 2135
 20387 0000F12F [5708000000000000] 
 20388 0000F137 50                      	push rax
 20389 0000F138 488B4520                	mov rax, PARAM(0)	; param v
 20390 0000F13C 50                      	push rax
 20391 0000F13D 6A03                    	push 3	; arg count
 20392 0000F13F 488B4510                	mov rax, ENV
 20393 0000F143 488B00                  	mov rax, qword [rax + 8 * 0]
 20394 0000F146 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20395 0000F149 488B00                  	mov rax, qword [rax]
 20396 0000F14C 803804                  	cmp byte [rax], T_closure
 20397 0000F14F 0F85C73B0000            	jne L_error_non_closure
 20398 0000F155 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20399 0000F158 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20400 0000F15B C9                      	leave
 20401 0000F15C C21800                  	ret AND_KILL_FRAME(1)
 20402                                  .L_lambda_simple_end_015c:	; new closure is in rax
 20403 0000F15F C9                      	leave
 20404 0000F160 C21800                  	ret AND_KILL_FRAME(1)
 20405                                  .L_lambda_simple_end_015a:	; new closure is in rax
 20406 0000F163 803804                  	cmp byte [rax], T_closure
 20407 0000F166 0F85B03B0000            	jne L_error_non_closure
 20408 0000F16C FF7001                  	push SOB_CLOSURE_ENV(rax)
 20409 0000F16F FF5009                  	call SOB_CLOSURE_CODE(rax)
 20410 0000F172 48890425[22170000]      	mov qword [free_var_141], rax
 20411 0000F17A 48B8-                   	mov rax, sob_void
 20411 0000F17C [0000000000000000] 
 20412                                  
 20413 0000F184 4889C7                  	mov rdi, rax
 20414 0000F187 E88E3E0000              	call print_sexpr_if_not_void
 20415 0000F18C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20416 0000F191 E82F3C0000              	call malloc
 20417 0000F196 50                      	push rax
 20418 0000F197 BF00000000              	mov rdi, 8 * 0	; new rib
 20419 0000F19C E8243C0000              	call malloc
 20420 0000F1A1 50                      	push rax
 20421 0000F1A2 BF08000000              	mov rdi, 8 * 1	; extended env
 20422 0000F1A7 E8193C0000              	call malloc
 20423 0000F1AC 488B7D10                	mov rdi, ENV
 20424 0000F1B0 BE00000000              	mov rsi, 0
 20425 0000F1B5 BA01000000              	mov rdx, 1
 20426                                  .L_lambda_simple_env_loop_015d:	; ext_env[i + 1] <-- env[i]
 20427 0000F1BA 4883FE00                	cmp rsi, 0
 20428 0000F1BE 7410                    	je .L_lambda_simple_env_end_015d
 20429 0000F1C0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20430 0000F1C4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20431 0000F1C8 48FFC6                  	inc rsi
 20432 0000F1CB 48FFC2                  	inc rdx
 20433 0000F1CE EBEA                    	jmp .L_lambda_simple_env_loop_015d
 20434                                  .L_lambda_simple_env_end_015d:
 20435 0000F1D0 5B                      	pop rbx
 20436 0000F1D1 BE00000000              	mov rsi, 0
 20437                                  .L_lambda_simple_params_loop_015d:	; copy params
 20438 0000F1D6 4883FE00                	cmp rsi, 0
 20439 0000F1DA 740E                    	je .L_lambda_simple_params_end_015d
 20440 0000F1DC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20441 0000F1E1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20442 0000F1E5 48FFC6                  	inc rsi
 20443 0000F1E8 EBEC                    	jmp .L_lambda_simple_params_loop_015d
 20444                                  .L_lambda_simple_params_end_015d:
 20445 0000F1EA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20446 0000F1ED 4889C3                  	mov rbx, rax
 20447 0000F1F0 58                      	pop rax
 20448 0000F1F1 C60004                  	mov byte [rax], T_closure
 20449 0000F1F4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20450 0000F1F8 48C74009[02F20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_015d
 20451 0000F200 EB65                    	jmp .L_lambda_simple_end_015d
 20452                                  .L_lambda_simple_code_015d:	; lambda-simple body
 20453 0000F202 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20454 0000F208 740B                    	je .L_lambda_simple_arity_check_ok_015d
 20455 0000F20A FF742410                	push qword [rsp + 8 * 2]
 20456 0000F20E 6A01                    	push 1
 20457 0000F210 E9693B0000              	jmp L_error_incorrect_arity_simple
 20458                                  .L_lambda_simple_arity_check_ok_015d:
 20459 0000F215 C8000000                	enter 0, 0
 20460                                  	; preparing a non-tail-call
 20461 0000F219 488B4520                	mov rax, PARAM(0)	; param n
 20462 0000F21D 50                      	push rax
 20463                                  	; preparing a non-tail-call
 20464 0000F21E 6A00                    	push 0	; arg count
 20465 0000F220 488B0425[00170000]      	mov rax, qword [free_var_139]	; free var trng
 20466 0000F228 803805                  	cmp byte [rax], T_undefined
 20467 0000F22B 0F84673A0000            	je L_error_fvar_undefined
 20468 0000F231 803804                  	cmp byte [rax], T_closure
 20469 0000F234 0F85E23A0000            	jne L_error_non_closure
 20470 0000F23A FF7001                  	push SOB_CLOSURE_ENV(rax)
 20471 0000F23D FF5009                  	call SOB_CLOSURE_CODE(rax)
 20472 0000F240 50                      	push rax
 20473 0000F241 6A02                    	push 2	; arg count
 20474 0000F243 488B0425[8A150000]      	mov rax, qword [free_var_117]	; free var remainder
 20475 0000F24B 803805                  	cmp byte [rax], T_undefined
 20476 0000F24E 0F84443A0000            	je L_error_fvar_undefined
 20477 0000F254 803804                  	cmp byte [rax], T_closure
 20478 0000F257 0F85BF3A0000            	jne L_error_non_closure
 20479 0000F25D FF7001                  	push SOB_CLOSURE_ENV(rax)
 20480 0000F260 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20481 0000F263 C9                      	leave
 20482 0000F264 C21800                  	ret AND_KILL_FRAME(1)
 20483                                  .L_lambda_simple_end_015d:	; new closure is in rax
 20484 0000F267 48890425[46150000]      	mov qword [free_var_113], rax
 20485 0000F26F 48B8-                   	mov rax, sob_void
 20485 0000F271 [0000000000000000] 
 20486                                  
 20487 0000F279 4889C7                  	mov rdi, rax
 20488 0000F27C E8993D0000              	call print_sexpr_if_not_void
 20489 0000F281 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20490 0000F286 E83A3B0000              	call malloc
 20491 0000F28B 50                      	push rax
 20492 0000F28C BF00000000              	mov rdi, 8 * 0	; new rib
 20493 0000F291 E82F3B0000              	call malloc
 20494 0000F296 50                      	push rax
 20495 0000F297 BF08000000              	mov rdi, 8 * 1	; extended env
 20496 0000F29C E8243B0000              	call malloc
 20497 0000F2A1 488B7D10                	mov rdi, ENV
 20498 0000F2A5 BE00000000              	mov rsi, 0
 20499 0000F2AA BA01000000              	mov rdx, 1
 20500                                  .L_lambda_simple_env_loop_015e:	; ext_env[i + 1] <-- env[i]
 20501 0000F2AF 4883FE00                	cmp rsi, 0
 20502 0000F2B3 7410                    	je .L_lambda_simple_env_end_015e
 20503 0000F2B5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20504 0000F2B9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20505 0000F2BD 48FFC6                  	inc rsi
 20506 0000F2C0 48FFC2                  	inc rdx
 20507 0000F2C3 EBEA                    	jmp .L_lambda_simple_env_loop_015e
 20508                                  .L_lambda_simple_env_end_015e:
 20509 0000F2C5 5B                      	pop rbx
 20510 0000F2C6 BE00000000              	mov rsi, 0
 20511                                  .L_lambda_simple_params_loop_015e:	; copy params
 20512 0000F2CB 4883FE00                	cmp rsi, 0
 20513 0000F2CF 740E                    	je .L_lambda_simple_params_end_015e
 20514 0000F2D1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20515 0000F2D6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20516 0000F2DA 48FFC6                  	inc rsi
 20517 0000F2DD EBEC                    	jmp .L_lambda_simple_params_loop_015e
 20518                                  .L_lambda_simple_params_end_015e:
 20519 0000F2DF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20520 0000F2E2 4889C3                  	mov rbx, rax
 20521 0000F2E5 58                      	pop rax
 20522 0000F2E6 C60004                  	mov byte [rax], T_closure
 20523 0000F2E9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20524 0000F2ED 48C74009[F7F20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_015e
 20525 0000F2F5 EB4D                    	jmp .L_lambda_simple_end_015e
 20526                                  .L_lambda_simple_code_015e:	; lambda-simple body
 20527 0000F2F7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20528 0000F2FD 740B                    	je .L_lambda_simple_arity_check_ok_015e
 20529 0000F2FF FF742410                	push qword [rsp + 8 * 2]
 20530 0000F303 6A01                    	push 1
 20531 0000F305 E9743A0000              	jmp L_error_incorrect_arity_simple
 20532                                  .L_lambda_simple_arity_check_ok_015e:
 20533 0000F30A C8000000                	enter 0, 0
 20534                                  	; preparing a non-tail-call
 20535 0000F30E 488B4520                	mov rax, PARAM(0)	; param x
 20536 0000F312 50                      	push rax
 20537 0000F313 48B8-                   	mov rax, L_constants + 2135
 20537 0000F315 [5708000000000000] 
 20538 0000F31D 50                      	push rax
 20539 0000F31E 6A02                    	push 2	; arg count
 20540 0000F320 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 20541 0000F328 803805                  	cmp byte [rax], T_undefined
 20542 0000F32B 0F8467390000            	je L_error_fvar_undefined
 20543 0000F331 803804                  	cmp byte [rax], T_closure
 20544 0000F334 0F85E2390000            	jne L_error_non_closure
 20545 0000F33A FF7001                  	push SOB_CLOSURE_ENV(rax)
 20546 0000F33D FF5009                  	call SOB_CLOSURE_CODE(rax)
 20547 0000F340 C9                      	leave
 20548 0000F341 C21800                  	ret AND_KILL_FRAME(1)
 20549                                  .L_lambda_simple_end_015e:	; new closure is in rax
 20550 0000F344 48890425[35150000]      	mov qword [free_var_112], rax
 20551 0000F34C 48B8-                   	mov rax, sob_void
 20551 0000F34E [0000000000000000] 
 20552                                  
 20553 0000F356 4889C7                  	mov rdi, rax
 20554 0000F359 E8BC3C0000              	call print_sexpr_if_not_void
 20555 0000F35E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20556 0000F363 E85D3A0000              	call malloc
 20557 0000F368 50                      	push rax
 20558 0000F369 BF00000000              	mov rdi, 8 * 0	; new rib
 20559 0000F36E E8523A0000              	call malloc
 20560 0000F373 50                      	push rax
 20561 0000F374 BF08000000              	mov rdi, 8 * 1	; extended env
 20562 0000F379 E8473A0000              	call malloc
 20563 0000F37E 488B7D10                	mov rdi, ENV
 20564 0000F382 BE00000000              	mov rsi, 0
 20565 0000F387 BA01000000              	mov rdx, 1
 20566                                  .L_lambda_simple_env_loop_015f:	; ext_env[i + 1] <-- env[i]
 20567 0000F38C 4883FE00                	cmp rsi, 0
 20568 0000F390 7410                    	je .L_lambda_simple_env_end_015f
 20569 0000F392 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20570 0000F396 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20571 0000F39A 48FFC6                  	inc rsi
 20572 0000F39D 48FFC2                  	inc rdx
 20573 0000F3A0 EBEA                    	jmp .L_lambda_simple_env_loop_015f
 20574                                  .L_lambda_simple_env_end_015f:
 20575 0000F3A2 5B                      	pop rbx
 20576 0000F3A3 BE00000000              	mov rsi, 0
 20577                                  .L_lambda_simple_params_loop_015f:	; copy params
 20578 0000F3A8 4883FE00                	cmp rsi, 0
 20579 0000F3AC 740E                    	je .L_lambda_simple_params_end_015f
 20580 0000F3AE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20581 0000F3B3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20582 0000F3B7 48FFC6                  	inc rsi
 20583 0000F3BA EBEC                    	jmp .L_lambda_simple_params_loop_015f
 20584                                  .L_lambda_simple_params_end_015f:
 20585 0000F3BC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20586 0000F3BF 4889C3                  	mov rbx, rax
 20587 0000F3C2 58                      	pop rax
 20588 0000F3C3 C60004                  	mov byte [rax], T_closure
 20589 0000F3C6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20590 0000F3CA 48C74009[D4F30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_015f
 20591 0000F3D2 EB4D                    	jmp .L_lambda_simple_end_015f
 20592                                  .L_lambda_simple_code_015f:	; lambda-simple body
 20593 0000F3D4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20594 0000F3DA 740B                    	je .L_lambda_simple_arity_check_ok_015f
 20595 0000F3DC FF742410                	push qword [rsp + 8 * 2]
 20596 0000F3E0 6A01                    	push 1
 20597 0000F3E2 E997390000              	jmp L_error_incorrect_arity_simple
 20598                                  .L_lambda_simple_arity_check_ok_015f:
 20599 0000F3E7 C8000000                	enter 0, 0
 20600                                  	; preparing a non-tail-call
 20601 0000F3EB 48B8-                   	mov rax, L_constants + 2135
 20601 0000F3ED [5708000000000000] 
 20602 0000F3F5 50                      	push rax
 20603 0000F3F6 488B4520                	mov rax, PARAM(0)	; param x
 20604 0000F3FA 50                      	push rax
 20605 0000F3FB 6A02                    	push 2	; arg count
 20606 0000F3FD 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 20607 0000F405 803805                  	cmp byte [rax], T_undefined
 20608 0000F408 0F848A380000            	je L_error_fvar_undefined
 20609 0000F40E 803804                  	cmp byte [rax], T_closure
 20610 0000F411 0F8505390000            	jne L_error_non_closure
 20611 0000F417 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20612 0000F41A FF5009                  	call SOB_CLOSURE_CODE(rax)
 20613 0000F41D C9                      	leave
 20614 0000F41E C21800                  	ret AND_KILL_FRAME(1)
 20615                                  .L_lambda_simple_end_015f:	; new closure is in rax
 20616 0000F421 48890425[AD140000]      	mov qword [free_var_104], rax
 20617 0000F429 48B8-                   	mov rax, sob_void
 20617 0000F42B [0000000000000000] 
 20618                                  
 20619 0000F433 4889C7                  	mov rdi, rax
 20620 0000F436 E8DF3B0000              	call print_sexpr_if_not_void
 20621 0000F43B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20622 0000F440 E880390000              	call malloc
 20623 0000F445 50                      	push rax
 20624 0000F446 BF00000000              	mov rdi, 8 * 0	; new rib
 20625 0000F44B E875390000              	call malloc
 20626 0000F450 50                      	push rax
 20627 0000F451 BF08000000              	mov rdi, 8 * 1	; extended env
 20628 0000F456 E86A390000              	call malloc
 20629 0000F45B 488B7D10                	mov rdi, ENV
 20630 0000F45F BE00000000              	mov rsi, 0
 20631 0000F464 BA01000000              	mov rdx, 1
 20632                                  .L_lambda_simple_env_loop_0160:	; ext_env[i + 1] <-- env[i]
 20633 0000F469 4883FE00                	cmp rsi, 0
 20634 0000F46D 7410                    	je .L_lambda_simple_env_end_0160
 20635 0000F46F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20636 0000F473 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20637 0000F477 48FFC6                  	inc rsi
 20638 0000F47A 48FFC2                  	inc rdx
 20639 0000F47D EBEA                    	jmp .L_lambda_simple_env_loop_0160
 20640                                  .L_lambda_simple_env_end_0160:
 20641 0000F47F 5B                      	pop rbx
 20642 0000F480 BE00000000              	mov rsi, 0
 20643                                  .L_lambda_simple_params_loop_0160:	; copy params
 20644 0000F485 4883FE00                	cmp rsi, 0
 20645 0000F489 740E                    	je .L_lambda_simple_params_end_0160
 20646 0000F48B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20647 0000F490 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20648 0000F494 48FFC6                  	inc rsi
 20649 0000F497 EBEC                    	jmp .L_lambda_simple_params_loop_0160
 20650                                  .L_lambda_simple_params_end_0160:
 20651 0000F499 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20652 0000F49C 4889C3                  	mov rbx, rax
 20653 0000F49F 58                      	pop rax
 20654 0000F4A0 C60004                  	mov byte [rax], T_closure
 20655 0000F4A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20656 0000F4A7 48C74009[B1F40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0160
 20657 0000F4AF EB70                    	jmp .L_lambda_simple_end_0160
 20658                                  .L_lambda_simple_code_0160:	; lambda-simple body
 20659 0000F4B1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20660 0000F4B7 740B                    	je .L_lambda_simple_arity_check_ok_0160
 20661 0000F4B9 FF742410                	push qword [rsp + 8 * 2]
 20662 0000F4BD 6A01                    	push 1
 20663 0000F4BF E9BA380000              	jmp L_error_incorrect_arity_simple
 20664                                  .L_lambda_simple_arity_check_ok_0160:
 20665 0000F4C4 C8000000                	enter 0, 0
 20666                                  	; preparing a non-tail-call
 20667                                  	; preparing a non-tail-call
 20668 0000F4C8 48B8-                   	mov rax, L_constants + 3190
 20668 0000F4CA [760C000000000000] 
 20669 0000F4D2 50                      	push rax
 20670 0000F4D3 488B4520                	mov rax, PARAM(0)	; param n
 20671 0000F4D7 50                      	push rax
 20672 0000F4D8 6A02                    	push 2	; arg count
 20673 0000F4DA 488B0425[8A150000]      	mov rax, qword [free_var_117]	; free var remainder
 20674 0000F4E2 803805                  	cmp byte [rax], T_undefined
 20675 0000F4E5 0F84AD370000            	je L_error_fvar_undefined
 20676 0000F4EB 803804                  	cmp byte [rax], T_closure
 20677 0000F4EE 0F8528380000            	jne L_error_non_closure
 20678 0000F4F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20679 0000F4F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20680 0000F4FA 50                      	push rax
 20681 0000F4FB 6A01                    	push 1	; arg count
 20682 0000F4FD 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 20683 0000F505 803805                  	cmp byte [rax], T_undefined
 20684 0000F508 0F848A370000            	je L_error_fvar_undefined
 20685 0000F50E 803804                  	cmp byte [rax], T_closure
 20686 0000F511 0F8505380000            	jne L_error_non_closure
 20687 0000F517 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20688 0000F51A FF5009                  	call SOB_CLOSURE_CODE(rax)
 20689 0000F51D C9                      	leave
 20690 0000F51E C21800                  	ret AND_KILL_FRAME(1)
 20691                                  .L_lambda_simple_end_0160:	; new closure is in rax
 20692 0000F521 48890425[48130000]      	mov qword [free_var_83], rax
 20693 0000F529 48B8-                   	mov rax, sob_void
 20693 0000F52B [0000000000000000] 
 20694                                  
 20695 0000F533 4889C7                  	mov rdi, rax
 20696 0000F536 E8DF3A0000              	call print_sexpr_if_not_void
 20697 0000F53B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20698 0000F540 E880380000              	call malloc
 20699 0000F545 50                      	push rax
 20700 0000F546 BF00000000              	mov rdi, 8 * 0	; new rib
 20701 0000F54B E875380000              	call malloc
 20702 0000F550 50                      	push rax
 20703 0000F551 BF08000000              	mov rdi, 8 * 1	; extended env
 20704 0000F556 E86A380000              	call malloc
 20705 0000F55B 488B7D10                	mov rdi, ENV
 20706 0000F55F BE00000000              	mov rsi, 0
 20707 0000F564 BA01000000              	mov rdx, 1
 20708                                  .L_lambda_simple_env_loop_0161:	; ext_env[i + 1] <-- env[i]
 20709 0000F569 4883FE00                	cmp rsi, 0
 20710 0000F56D 7410                    	je .L_lambda_simple_env_end_0161
 20711 0000F56F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20712 0000F573 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20713 0000F577 48FFC6                  	inc rsi
 20714 0000F57A 48FFC2                  	inc rdx
 20715 0000F57D EBEA                    	jmp .L_lambda_simple_env_loop_0161
 20716                                  .L_lambda_simple_env_end_0161:
 20717 0000F57F 5B                      	pop rbx
 20718 0000F580 BE00000000              	mov rsi, 0
 20719                                  .L_lambda_simple_params_loop_0161:	; copy params
 20720 0000F585 4883FE00                	cmp rsi, 0
 20721 0000F589 740E                    	je .L_lambda_simple_params_end_0161
 20722 0000F58B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20723 0000F590 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20724 0000F594 48FFC6                  	inc rsi
 20725 0000F597 EBEC                    	jmp .L_lambda_simple_params_loop_0161
 20726                                  .L_lambda_simple_params_end_0161:
 20727 0000F599 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20728 0000F59C 4889C3                  	mov rbx, rax
 20729 0000F59F 58                      	pop rax
 20730 0000F5A0 C60004                  	mov byte [rax], T_closure
 20731 0000F5A3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20732 0000F5A7 48C74009[B1F50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0161
 20733 0000F5AF EB65                    	jmp .L_lambda_simple_end_0161
 20734                                  .L_lambda_simple_code_0161:	; lambda-simple body
 20735 0000F5B1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20736 0000F5B7 740B                    	je .L_lambda_simple_arity_check_ok_0161
 20737 0000F5B9 FF742410                	push qword [rsp + 8 * 2]
 20738 0000F5BD 6A01                    	push 1
 20739 0000F5BF E9BA370000              	jmp L_error_incorrect_arity_simple
 20740                                  .L_lambda_simple_arity_check_ok_0161:
 20741 0000F5C4 C8000000                	enter 0, 0
 20742                                  	; preparing a non-tail-call
 20743                                  	; preparing a non-tail-call
 20744 0000F5C8 488B4520                	mov rax, PARAM(0)	; param n
 20745 0000F5CC 50                      	push rax
 20746 0000F5CD 6A01                    	push 1	; arg count
 20747 0000F5CF 488B0425[48130000]      	mov rax, qword [free_var_83]	; free var even?
 20748 0000F5D7 803805                  	cmp byte [rax], T_undefined
 20749 0000F5DA 0F84B8360000            	je L_error_fvar_undefined
 20750 0000F5E0 803804                  	cmp byte [rax], T_closure
 20751 0000F5E3 0F8533370000            	jne L_error_non_closure
 20752 0000F5E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20753 0000F5EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 20754 0000F5EF 50                      	push rax
 20755 0000F5F0 6A01                    	push 1	; arg count
 20756 0000F5F2 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 20757 0000F5FA 803805                  	cmp byte [rax], T_undefined
 20758 0000F5FD 0F8495360000            	je L_error_fvar_undefined
 20759 0000F603 803804                  	cmp byte [rax], T_closure
 20760 0000F606 0F8510370000            	jne L_error_non_closure
 20761 0000F60C FF7001                  	push SOB_CLOSURE_ENV(rax)
 20762 0000F60F FF5009                  	call SOB_CLOSURE_CODE(rax)
 20763 0000F612 C9                      	leave
 20764 0000F613 C21800                  	ret AND_KILL_FRAME(1)
 20765                                  .L_lambda_simple_end_0161:	; new closure is in rax
 20766 0000F616 48890425[02150000]      	mov qword [free_var_109], rax
 20767 0000F61E 48B8-                   	mov rax, sob_void
 20767 0000F620 [0000000000000000] 
 20768                                  
 20769 0000F628 4889C7                  	mov rdi, rax
 20770 0000F62B E8EA390000              	call print_sexpr_if_not_void
 20771 0000F630 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20772 0000F635 E88B370000              	call malloc
 20773 0000F63A 50                      	push rax
 20774 0000F63B BF00000000              	mov rdi, 8 * 0	; new rib
 20775 0000F640 E880370000              	call malloc
 20776 0000F645 50                      	push rax
 20777 0000F646 BF08000000              	mov rdi, 8 * 1	; extended env
 20778 0000F64B E875370000              	call malloc
 20779 0000F650 488B7D10                	mov rdi, ENV
 20780 0000F654 BE00000000              	mov rsi, 0
 20781 0000F659 BA01000000              	mov rdx, 1
 20782                                  .L_lambda_simple_env_loop_0162:	; ext_env[i + 1] <-- env[i]
 20783 0000F65E 4883FE00                	cmp rsi, 0
 20784 0000F662 7410                    	je .L_lambda_simple_env_end_0162
 20785 0000F664 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20786 0000F668 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20787 0000F66C 48FFC6                  	inc rsi
 20788 0000F66F 48FFC2                  	inc rdx
 20789 0000F672 EBEA                    	jmp .L_lambda_simple_env_loop_0162
 20790                                  .L_lambda_simple_env_end_0162:
 20791 0000F674 5B                      	pop rbx
 20792 0000F675 BE00000000              	mov rsi, 0
 20793                                  .L_lambda_simple_params_loop_0162:	; copy params
 20794 0000F67A 4883FE00                	cmp rsi, 0
 20795 0000F67E 740E                    	je .L_lambda_simple_params_end_0162
 20796 0000F680 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20797 0000F685 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20798 0000F689 48FFC6                  	inc rsi
 20799 0000F68C EBEC                    	jmp .L_lambda_simple_params_loop_0162
 20800                                  .L_lambda_simple_params_end_0162:
 20801 0000F68E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20802 0000F691 4889C3                  	mov rbx, rax
 20803 0000F694 58                      	pop rax
 20804 0000F695 C60004                  	mov byte [rax], T_closure
 20805 0000F698 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20806 0000F69C 48C74009[A6F60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0162
 20807 0000F6A4 EB77                    	jmp .L_lambda_simple_end_0162
 20808                                  .L_lambda_simple_code_0162:	; lambda-simple body
 20809 0000F6A6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20810 0000F6AC 740B                    	je .L_lambda_simple_arity_check_ok_0162
 20811 0000F6AE FF742410                	push qword [rsp + 8 * 2]
 20812 0000F6B2 6A01                    	push 1
 20813 0000F6B4 E9C5360000              	jmp L_error_incorrect_arity_simple
 20814                                  .L_lambda_simple_arity_check_ok_0162:
 20815 0000F6B9 C8000000                	enter 0, 0
 20816                                  	; preparing a non-tail-call
 20817 0000F6BD 488B4520                	mov rax, PARAM(0)	; param x
 20818 0000F6C1 50                      	push rax
 20819 0000F6C2 6A01                    	push 1	; arg count
 20820 0000F6C4 488B0425[AD140000]      	mov rax, qword [free_var_104]	; free var negative?
 20821 0000F6CC 803805                  	cmp byte [rax], T_undefined
 20822 0000F6CF 0F84C3350000            	je L_error_fvar_undefined
 20823 0000F6D5 803804                  	cmp byte [rax], T_closure
 20824 0000F6D8 0F853E360000            	jne L_error_non_closure
 20825 0000F6DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 20826 0000F6E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20827 0000F6E4 483D[02000000]          	cmp rax, sob_boolean_false
 20828 0000F6EA 7429                    	je .L_if_else_010f
 20829                                  	; preparing a non-tail-call
 20830 0000F6EC 488B4520                	mov rax, PARAM(0)	; param x
 20831 0000F6F0 50                      	push rax
 20832 0000F6F1 6A01                    	push 1	; arg count
 20833 0000F6F3 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 20834 0000F6FB 803805                  	cmp byte [rax], T_undefined
 20835 0000F6FE 0F8494350000            	je L_error_fvar_undefined
 20836 0000F704 803804                  	cmp byte [rax], T_closure
 20837 0000F707 0F850F360000            	jne L_error_non_closure
 20838 0000F70D FF7001                  	push SOB_CLOSURE_ENV(rax)
 20839 0000F710 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20840 0000F713 EB04                    	jmp .L_if_end_010f
 20841                                  .L_if_else_010f:
 20842 0000F715 488B4520                	mov rax, PARAM(0)	; param x
 20843                                  .L_if_end_010f:
 20844 0000F719 C9                      	leave
 20845 0000F71A C21800                  	ret AND_KILL_FRAME(1)
 20846                                  .L_lambda_simple_end_0162:	; new closure is in rax
 20847 0000F71D 48890425[C30F0000]      	mov qword [free_var_30], rax
 20848 0000F725 48B8-                   	mov rax, sob_void
 20848 0000F727 [0000000000000000] 
 20849                                  
 20850 0000F72F 4889C7                  	mov rdi, rax
 20851 0000F732 E8E3380000              	call print_sexpr_if_not_void
 20852 0000F737 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20853 0000F73C E884360000              	call malloc
 20854 0000F741 50                      	push rax
 20855 0000F742 BF00000000              	mov rdi, 8 * 0	; new rib
 20856 0000F747 E879360000              	call malloc
 20857 0000F74C 50                      	push rax
 20858 0000F74D BF08000000              	mov rdi, 8 * 1	; extended env
 20859 0000F752 E86E360000              	call malloc
 20860 0000F757 488B7D10                	mov rdi, ENV
 20861 0000F75B BE00000000              	mov rsi, 0
 20862 0000F760 BA01000000              	mov rdx, 1
 20863                                  .L_lambda_simple_env_loop_0163:	; ext_env[i + 1] <-- env[i]
 20864 0000F765 4883FE00                	cmp rsi, 0
 20865 0000F769 7410                    	je .L_lambda_simple_env_end_0163
 20866 0000F76B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20867 0000F76F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20868 0000F773 48FFC6                  	inc rsi
 20869 0000F776 48FFC2                  	inc rdx
 20870 0000F779 EBEA                    	jmp .L_lambda_simple_env_loop_0163
 20871                                  .L_lambda_simple_env_end_0163:
 20872 0000F77B 5B                      	pop rbx
 20873 0000F77C BE00000000              	mov rsi, 0
 20874                                  .L_lambda_simple_params_loop_0163:	; copy params
 20875 0000F781 4883FE00                	cmp rsi, 0
 20876 0000F785 740E                    	je .L_lambda_simple_params_end_0163
 20877 0000F787 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20878 0000F78C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20879 0000F790 48FFC6                  	inc rsi
 20880 0000F793 EBEC                    	jmp .L_lambda_simple_params_loop_0163
 20881                                  .L_lambda_simple_params_end_0163:
 20882 0000F795 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20883 0000F798 4889C3                  	mov rbx, rax
 20884 0000F79B 58                      	pop rax
 20885 0000F79C C60004                  	mov byte [rax], T_closure
 20886 0000F79F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20887 0000F7A3 48C74009[B0F70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0163
 20888 0000F7AB E975050000              	jmp .L_lambda_simple_end_0163
 20889                                  .L_lambda_simple_code_0163:	; lambda-simple body
 20890 0000F7B0 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20891 0000F7B6 740B                    	je .L_lambda_simple_arity_check_ok_0163
 20892 0000F7B8 FF742410                	push qword [rsp + 8 * 2]
 20893 0000F7BC 6A02                    	push 2
 20894 0000F7BE E9BB350000              	jmp L_error_incorrect_arity_simple
 20895                                  .L_lambda_simple_arity_check_ok_0163:
 20896 0000F7C3 C8000000                	enter 0, 0
 20897                                  	; preparing a non-tail-call
 20898 0000F7C7 488B4520                	mov rax, PARAM(0)	; param e1
 20899 0000F7CB 50                      	push rax
 20900 0000F7CC 6A01                    	push 1	; arg count
 20901 0000F7CE 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 20902 0000F7D6 803805                  	cmp byte [rax], T_undefined
 20903 0000F7D9 0F84B9340000            	je L_error_fvar_undefined
 20904 0000F7DF 803804                  	cmp byte [rax], T_closure
 20905 0000F7E2 0F8534350000            	jne L_error_non_closure
 20906 0000F7E8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20907 0000F7EB FF5009                  	call SOB_CLOSURE_CODE(rax)
 20908 0000F7EE 483D[02000000]          	cmp rax, sob_boolean_false
 20909 0000F7F4 7429                    	je .L_if_else_0110
 20910                                  	; preparing a non-tail-call
 20911 0000F7F6 488B4528                	mov rax, PARAM(1)	; param e2
 20912 0000F7FA 50                      	push rax
 20913 0000F7FB 6A01                    	push 1	; arg count
 20914 0000F7FD 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 20915 0000F805 803805                  	cmp byte [rax], T_undefined
 20916 0000F808 0F848A340000            	je L_error_fvar_undefined
 20917 0000F80E 803804                  	cmp byte [rax], T_closure
 20918 0000F811 0F8505350000            	jne L_error_non_closure
 20919 0000F817 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20920 0000F81A FF5009                  	call SOB_CLOSURE_CODE(rax)
 20921 0000F81D EB0A                    	jmp .L_if_end_0110
 20922                                  .L_if_else_0110:
 20923 0000F81F 48B8-                   	mov rax, L_constants + 2
 20923 0000F821 [0200000000000000] 
 20924                                  .L_if_end_0110:
 20925 0000F829 483D[02000000]          	cmp rax, sob_boolean_false
 20926 0000F82F 0F84FD000000            	je .L_if_else_011c
 20927                                  	; preparing a non-tail-call
 20928                                  	; preparing a non-tail-call
 20929 0000F835 488B4528                	mov rax, PARAM(1)	; param e2
 20930 0000F839 50                      	push rax
 20931 0000F83A 6A01                    	push 1	; arg count
 20932 0000F83C 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 20933 0000F844 803805                  	cmp byte [rax], T_undefined
 20934 0000F847 0F844B340000            	je L_error_fvar_undefined
 20935 0000F84D 803804                  	cmp byte [rax], T_closure
 20936 0000F850 0F85C6340000            	jne L_error_non_closure
 20937 0000F856 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20938 0000F859 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20939 0000F85C 50                      	push rax
 20940                                  	; preparing a non-tail-call
 20941 0000F85D 488B4520                	mov rax, PARAM(0)	; param e1
 20942 0000F861 50                      	push rax
 20943 0000F862 6A01                    	push 1	; arg count
 20944 0000F864 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 20945 0000F86C 803805                  	cmp byte [rax], T_undefined
 20946 0000F86F 0F8423340000            	je L_error_fvar_undefined
 20947 0000F875 803804                  	cmp byte [rax], T_closure
 20948 0000F878 0F859E340000            	jne L_error_non_closure
 20949 0000F87E FF7001                  	push SOB_CLOSURE_ENV(rax)
 20950 0000F881 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20951 0000F884 50                      	push rax
 20952 0000F885 6A02                    	push 2	; arg count
 20953 0000F887 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 20954 0000F88F 803805                  	cmp byte [rax], T_undefined
 20955 0000F892 0F8400340000            	je L_error_fvar_undefined
 20956 0000F898 803804                  	cmp byte [rax], T_closure
 20957 0000F89B 0F857B340000            	jne L_error_non_closure
 20958 0000F8A1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20959 0000F8A4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20960 0000F8A7 483D[02000000]          	cmp rax, sob_boolean_false
 20961 0000F8AD 7474                    	je .L_if_else_0111
 20962                                  	; preparing a non-tail-call
 20963                                  	; preparing a non-tail-call
 20964 0000F8AF 488B4528                	mov rax, PARAM(1)	; param e2
 20965 0000F8B3 50                      	push rax
 20966 0000F8B4 6A01                    	push 1	; arg count
 20967 0000F8B6 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 20968 0000F8BE 803805                  	cmp byte [rax], T_undefined
 20969 0000F8C1 0F84D1330000            	je L_error_fvar_undefined
 20970 0000F8C7 803804                  	cmp byte [rax], T_closure
 20971 0000F8CA 0F854C340000            	jne L_error_non_closure
 20972 0000F8D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20973 0000F8D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20974 0000F8D6 50                      	push rax
 20975                                  	; preparing a non-tail-call
 20976 0000F8D7 488B4520                	mov rax, PARAM(0)	; param e1
 20977 0000F8DB 50                      	push rax
 20978 0000F8DC 6A01                    	push 1	; arg count
 20979 0000F8DE 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 20980 0000F8E6 803805                  	cmp byte [rax], T_undefined
 20981 0000F8E9 0F84A9330000            	je L_error_fvar_undefined
 20982 0000F8EF 803804                  	cmp byte [rax], T_closure
 20983 0000F8F2 0F8524340000            	jne L_error_non_closure
 20984 0000F8F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20985 0000F8FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 20986 0000F8FE 50                      	push rax
 20987 0000F8FF 6A02                    	push 2	; arg count
 20988 0000F901 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 20989 0000F909 803805                  	cmp byte [rax], T_undefined
 20990 0000F90C 0F8486330000            	je L_error_fvar_undefined
 20991 0000F912 803804                  	cmp byte [rax], T_closure
 20992 0000F915 0F8501340000            	jne L_error_non_closure
 20993 0000F91B FF7001                  	push SOB_CLOSURE_ENV(rax)
 20994 0000F91E FF5009                  	call SOB_CLOSURE_CODE(rax)
 20995 0000F921 EB0A                    	jmp .L_if_end_0111
 20996                                  .L_if_else_0111:
 20997 0000F923 48B8-                   	mov rax, L_constants + 2
 20997 0000F925 [0200000000000000] 
 20998                                  .L_if_end_0111:
 20999 0000F92D E9EF030000              	jmp .L_if_end_011c
 21000                                  .L_if_else_011c:
 21001                                  	; preparing a non-tail-call
 21002 0000F932 488B4520                	mov rax, PARAM(0)	; param e1
 21003 0000F936 50                      	push rax
 21004 0000F937 6A01                    	push 1	; arg count
 21005 0000F939 488B0425[99170000]      	mov rax, qword [free_var_148]	; free var vector?
 21006 0000F941 803805                  	cmp byte [rax], T_undefined
 21007 0000F944 0F844E330000            	je L_error_fvar_undefined
 21008 0000F94A 803804                  	cmp byte [rax], T_closure
 21009 0000F94D 0F85C9330000            	jne L_error_non_closure
 21010 0000F953 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21011 0000F956 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21012 0000F959 483D[02000000]          	cmp rax, sob_boolean_false
 21013 0000F95F 0F84AF000000            	je .L_if_else_0113
 21014                                  	; preparing a non-tail-call
 21015 0000F965 488B4528                	mov rax, PARAM(1)	; param e2
 21016 0000F969 50                      	push rax
 21017 0000F96A 6A01                    	push 1	; arg count
 21018 0000F96C 488B0425[99170000]      	mov rax, qword [free_var_148]	; free var vector?
 21019 0000F974 803805                  	cmp byte [rax], T_undefined
 21020 0000F977 0F841B330000            	je L_error_fvar_undefined
 21021 0000F97D 803804                  	cmp byte [rax], T_closure
 21022 0000F980 0F8596330000            	jne L_error_non_closure
 21023 0000F986 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21024 0000F989 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21025 0000F98C 483D[02000000]          	cmp rax, sob_boolean_false
 21026 0000F992 7474                    	je .L_if_else_0112
 21027                                  	; preparing a non-tail-call
 21028                                  	; preparing a non-tail-call
 21029 0000F994 488B4528                	mov rax, PARAM(1)	; param e2
 21030 0000F998 50                      	push rax
 21031 0000F999 6A01                    	push 1	; arg count
 21032 0000F99B 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 21033 0000F9A3 803805                  	cmp byte [rax], T_undefined
 21034 0000F9A6 0F84EC320000            	je L_error_fvar_undefined
 21035 0000F9AC 803804                  	cmp byte [rax], T_closure
 21036 0000F9AF 0F8567330000            	jne L_error_non_closure
 21037 0000F9B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21038 0000F9B8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21039 0000F9BB 50                      	push rax
 21040                                  	; preparing a non-tail-call
 21041 0000F9BC 488B4520                	mov rax, PARAM(0)	; param e1
 21042 0000F9C0 50                      	push rax
 21043 0000F9C1 6A01                    	push 1	; arg count
 21044 0000F9C3 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 21045 0000F9CB 803805                  	cmp byte [rax], T_undefined
 21046 0000F9CE 0F84C4320000            	je L_error_fvar_undefined
 21047 0000F9D4 803804                  	cmp byte [rax], T_closure
 21048 0000F9D7 0F853F330000            	jne L_error_non_closure
 21049 0000F9DD FF7001                  	push SOB_CLOSURE_ENV(rax)
 21050 0000F9E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21051 0000F9E3 50                      	push rax
 21052 0000F9E4 6A02                    	push 2	; arg count
 21053 0000F9E6 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 21054 0000F9EE 803805                  	cmp byte [rax], T_undefined
 21055 0000F9F1 0F84A1320000            	je L_error_fvar_undefined
 21056 0000F9F7 803804                  	cmp byte [rax], T_closure
 21057 0000F9FA 0F851C330000            	jne L_error_non_closure
 21058 0000FA00 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21059 0000FA03 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21060 0000FA06 EB0A                    	jmp .L_if_end_0112
 21061                                  .L_if_else_0112:
 21062 0000FA08 48B8-                   	mov rax, L_constants + 2
 21062 0000FA0A [0200000000000000] 
 21063                                  .L_if_end_0112:
 21064 0000FA12 EB0A                    	jmp .L_if_end_0113
 21065                                  .L_if_else_0113:
 21066 0000FA14 48B8-                   	mov rax, L_constants + 2
 21066 0000FA16 [0200000000000000] 
 21067                                  .L_if_end_0113:
 21068 0000FA1E 483D[02000000]          	cmp rax, sob_boolean_false
 21069 0000FA24 7477                    	je .L_if_else_011b
 21070                                  	; preparing a non-tail-call
 21071                                  	; preparing a non-tail-call
 21072 0000FA26 488B4528                	mov rax, PARAM(1)	; param e2
 21073 0000FA2A 50                      	push rax
 21074 0000FA2B 6A01                    	push 1	; arg count
 21075 0000FA2D 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 21076 0000FA35 803805                  	cmp byte [rax], T_undefined
 21077 0000FA38 0F845A320000            	je L_error_fvar_undefined
 21078 0000FA3E 803804                  	cmp byte [rax], T_closure
 21079 0000FA41 0F85D5320000            	jne L_error_non_closure
 21080 0000FA47 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21081 0000FA4A FF5009                  	call SOB_CLOSURE_CODE(rax)
 21082 0000FA4D 50                      	push rax
 21083                                  	; preparing a non-tail-call
 21084 0000FA4E 488B4520                	mov rax, PARAM(0)	; param e1
 21085 0000FA52 50                      	push rax
 21086 0000FA53 6A01                    	push 1	; arg count
 21087 0000FA55 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 21088 0000FA5D 803805                  	cmp byte [rax], T_undefined
 21089 0000FA60 0F8432320000            	je L_error_fvar_undefined
 21090 0000FA66 803804                  	cmp byte [rax], T_closure
 21091 0000FA69 0F85AD320000            	jne L_error_non_closure
 21092 0000FA6F FF7001                  	push SOB_CLOSURE_ENV(rax)
 21093 0000FA72 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21094 0000FA75 50                      	push rax
 21095 0000FA76 6A02                    	push 2	; arg count
 21096 0000FA78 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 21097 0000FA80 803805                  	cmp byte [rax], T_undefined
 21098 0000FA83 0F840F320000            	je L_error_fvar_undefined
 21099 0000FA89 803804                  	cmp byte [rax], T_closure
 21100 0000FA8C 0F858A320000            	jne L_error_non_closure
 21101 0000FA92 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21102 0000FA95 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21103 0000FA98 E984020000              	jmp .L_if_end_011b
 21104                                  .L_if_else_011b:
 21105                                  	; preparing a non-tail-call
 21106 0000FA9D 488B4520                	mov rax, PARAM(0)	; param e1
 21107 0000FAA1 50                      	push rax
 21108 0000FAA2 6A01                    	push 1	; arg count
 21109 0000FAA4 488B0425[EF160000]      	mov rax, qword [free_var_138]	; free var string?
 21110 0000FAAC 803805                  	cmp byte [rax], T_undefined
 21111 0000FAAF 0F84E3310000            	je L_error_fvar_undefined
 21112 0000FAB5 803804                  	cmp byte [rax], T_closure
 21113 0000FAB8 0F855E320000            	jne L_error_non_closure
 21114 0000FABE FF7001                  	push SOB_CLOSURE_ENV(rax)
 21115 0000FAC1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21116 0000FAC4 483D[02000000]          	cmp rax, sob_boolean_false
 21117 0000FACA 0F84AF000000            	je .L_if_else_0115
 21118                                  	; preparing a non-tail-call
 21119 0000FAD0 488B4528                	mov rax, PARAM(1)	; param e2
 21120 0000FAD4 50                      	push rax
 21121 0000FAD5 6A01                    	push 1	; arg count
 21122 0000FAD7 488B0425[EF160000]      	mov rax, qword [free_var_138]	; free var string?
 21123 0000FADF 803805                  	cmp byte [rax], T_undefined
 21124 0000FAE2 0F84B0310000            	je L_error_fvar_undefined
 21125 0000FAE8 803804                  	cmp byte [rax], T_closure
 21126 0000FAEB 0F852B320000            	jne L_error_non_closure
 21127 0000FAF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21128 0000FAF4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21129 0000FAF7 483D[02000000]          	cmp rax, sob_boolean_false
 21130 0000FAFD 7474                    	je .L_if_else_0114
 21131                                  	; preparing a non-tail-call
 21132                                  	; preparing a non-tail-call
 21133 0000FAFF 488B4528                	mov rax, PARAM(1)	; param e2
 21134 0000FB03 50                      	push rax
 21135 0000FB04 6A01                    	push 1	; arg count
 21136 0000FB06 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 21137 0000FB0E 803805                  	cmp byte [rax], T_undefined
 21138 0000FB11 0F8481310000            	je L_error_fvar_undefined
 21139 0000FB17 803804                  	cmp byte [rax], T_closure
 21140 0000FB1A 0F85FC310000            	jne L_error_non_closure
 21141 0000FB20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21142 0000FB23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21143 0000FB26 50                      	push rax
 21144                                  	; preparing a non-tail-call
 21145 0000FB27 488B4520                	mov rax, PARAM(0)	; param e1
 21146 0000FB2B 50                      	push rax
 21147 0000FB2C 6A01                    	push 1	; arg count
 21148 0000FB2E 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 21149 0000FB36 803805                  	cmp byte [rax], T_undefined
 21150 0000FB39 0F8459310000            	je L_error_fvar_undefined
 21151 0000FB3F 803804                  	cmp byte [rax], T_closure
 21152 0000FB42 0F85D4310000            	jne L_error_non_closure
 21153 0000FB48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21154 0000FB4B FF5009                  	call SOB_CLOSURE_CODE(rax)
 21155 0000FB4E 50                      	push rax
 21156 0000FB4F 6A02                    	push 2	; arg count
 21157 0000FB51 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 21158 0000FB59 803805                  	cmp byte [rax], T_undefined
 21159 0000FB5C 0F8436310000            	je L_error_fvar_undefined
 21160 0000FB62 803804                  	cmp byte [rax], T_closure
 21161 0000FB65 0F85B1310000            	jne L_error_non_closure
 21162 0000FB6B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21163 0000FB6E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21164 0000FB71 EB0A                    	jmp .L_if_end_0114
 21165                                  .L_if_else_0114:
 21166 0000FB73 48B8-                   	mov rax, L_constants + 2
 21166 0000FB75 [0200000000000000] 
 21167                                  .L_if_end_0114:
 21168 0000FB7D EB0A                    	jmp .L_if_end_0115
 21169                                  .L_if_else_0115:
 21170 0000FB7F 48B8-                   	mov rax, L_constants + 2
 21170 0000FB81 [0200000000000000] 
 21171                                  .L_if_end_0115:
 21172 0000FB89 483D[02000000]          	cmp rax, sob_boolean_false
 21173 0000FB8F 7431                    	je .L_if_else_011a
 21174                                  	; preparing a non-tail-call
 21175 0000FB91 488B4528                	mov rax, PARAM(1)	; param e2
 21176 0000FB95 50                      	push rax
 21177 0000FB96 488B4520                	mov rax, PARAM(0)	; param e1
 21178 0000FB9A 50                      	push rax
 21179 0000FB9B 6A02                    	push 2	; arg count
 21180 0000FB9D 488B0425[BC160000]      	mov rax, qword [free_var_135]	; free var string=?
 21181 0000FBA5 803805                  	cmp byte [rax], T_undefined
 21182 0000FBA8 0F84EA300000            	je L_error_fvar_undefined
 21183 0000FBAE 803804                  	cmp byte [rax], T_closure
 21184 0000FBB1 0F8565310000            	jne L_error_non_closure
 21185 0000FBB7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21186 0000FBBA FF5009                  	call SOB_CLOSURE_CODE(rax)
 21187 0000FBBD E95F010000              	jmp .L_if_end_011a
 21188                                  .L_if_else_011a:
 21189                                  	; preparing a non-tail-call
 21190 0000FBC2 488B4520                	mov rax, PARAM(0)	; param e1
 21191 0000FBC6 50                      	push rax
 21192 0000FBC7 6A01                    	push 1	; arg count
 21193 0000FBC9 488B0425[F1140000]      	mov rax, qword [free_var_108]	; free var number?
 21194 0000FBD1 803805                  	cmp byte [rax], T_undefined
 21195 0000FBD4 0F84BE300000            	je L_error_fvar_undefined
 21196 0000FBDA 803804                  	cmp byte [rax], T_closure
 21197 0000FBDD 0F8539310000            	jne L_error_non_closure
 21198 0000FBE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21199 0000FBE6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21200 0000FBE9 483D[02000000]          	cmp rax, sob_boolean_false
 21201 0000FBEF 7429                    	je .L_if_else_0116
 21202                                  	; preparing a non-tail-call
 21203 0000FBF1 488B4528                	mov rax, PARAM(1)	; param e2
 21204 0000FBF5 50                      	push rax
 21205 0000FBF6 6A01                    	push 1	; arg count
 21206 0000FBF8 488B0425[F1140000]      	mov rax, qword [free_var_108]	; free var number?
 21207 0000FC00 803805                  	cmp byte [rax], T_undefined
 21208 0000FC03 0F848F300000            	je L_error_fvar_undefined
 21209 0000FC09 803804                  	cmp byte [rax], T_closure
 21210 0000FC0C 0F850A310000            	jne L_error_non_closure
 21211 0000FC12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21212 0000FC15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21213 0000FC18 EB0A                    	jmp .L_if_end_0116
 21214                                  .L_if_else_0116:
 21215 0000FC1A 48B8-                   	mov rax, L_constants + 2
 21215 0000FC1C [0200000000000000] 
 21216                                  .L_if_end_0116:
 21217 0000FC24 483D[02000000]          	cmp rax, sob_boolean_false
 21218 0000FC2A 7431                    	je .L_if_else_0119
 21219                                  	; preparing a non-tail-call
 21220 0000FC2C 488B4528                	mov rax, PARAM(1)	; param e2
 21221 0000FC30 50                      	push rax
 21222 0000FC31 488B4520                	mov rax, PARAM(0)	; param e1
 21223 0000FC35 50                      	push rax
 21224 0000FC36 6A02                    	push 2	; arg count
 21225 0000FC38 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 21226 0000FC40 803805                  	cmp byte [rax], T_undefined
 21227 0000FC43 0F844F300000            	je L_error_fvar_undefined
 21228 0000FC49 803804                  	cmp byte [rax], T_closure
 21229 0000FC4C 0F85CA300000            	jne L_error_non_closure
 21230 0000FC52 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21231 0000FC55 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21232 0000FC58 E9C4000000              	jmp .L_if_end_0119
 21233                                  .L_if_else_0119:
 21234                                  	; preparing a non-tail-call
 21235 0000FC5D 488B4520                	mov rax, PARAM(0)	; param e1
 21236 0000FC61 50                      	push rax
 21237 0000FC62 6A01                    	push 1	; arg count
 21238 0000FC64 488B0425[F3120000]      	mov rax, qword [free_var_78]	; free var char?
 21239 0000FC6C 803805                  	cmp byte [rax], T_undefined
 21240 0000FC6F 0F8423300000            	je L_error_fvar_undefined
 21241 0000FC75 803804                  	cmp byte [rax], T_closure
 21242 0000FC78 0F859E300000            	jne L_error_non_closure
 21243 0000FC7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21244 0000FC81 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21245 0000FC84 483D[02000000]          	cmp rax, sob_boolean_false
 21246 0000FC8A 7429                    	je .L_if_else_0117
 21247                                  	; preparing a non-tail-call
 21248 0000FC8C 488B4528                	mov rax, PARAM(1)	; param e2
 21249 0000FC90 50                      	push rax
 21250 0000FC91 6A01                    	push 1	; arg count
 21251 0000FC93 488B0425[F3120000]      	mov rax, qword [free_var_78]	; free var char?
 21252 0000FC9B 803805                  	cmp byte [rax], T_undefined
 21253 0000FC9E 0F84F42F0000            	je L_error_fvar_undefined
 21254 0000FCA4 803804                  	cmp byte [rax], T_closure
 21255 0000FCA7 0F856F300000            	jne L_error_non_closure
 21256 0000FCAD FF7001                  	push SOB_CLOSURE_ENV(rax)
 21257 0000FCB0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21258 0000FCB3 EB0A                    	jmp .L_if_end_0117
 21259                                  .L_if_else_0117:
 21260 0000FCB5 48B8-                   	mov rax, L_constants + 2
 21260 0000FCB7 [0200000000000000] 
 21261                                  .L_if_end_0117:
 21262 0000FCBF 483D[02000000]          	cmp rax, sob_boolean_false
 21263 0000FCC5 742E                    	je .L_if_else_0118
 21264                                  	; preparing a non-tail-call
 21265 0000FCC7 488B4528                	mov rax, PARAM(1)	; param e2
 21266 0000FCCB 50                      	push rax
 21267 0000FCCC 488B4520                	mov rax, PARAM(0)	; param e1
 21268 0000FCD0 50                      	push rax
 21269 0000FCD1 6A02                    	push 2	; arg count
 21270 0000FCD3 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 21271 0000FCDB 803805                  	cmp byte [rax], T_undefined
 21272 0000FCDE 0F84B42F0000            	je L_error_fvar_undefined
 21273 0000FCE4 803804                  	cmp byte [rax], T_closure
 21274 0000FCE7 0F852F300000            	jne L_error_non_closure
 21275 0000FCED FF7001                  	push SOB_CLOSURE_ENV(rax)
 21276 0000FCF0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21277 0000FCF3 EB2C                    	jmp .L_if_end_0118
 21278                                  .L_if_else_0118:
 21279                                  	; preparing a non-tail-call
 21280 0000FCF5 488B4528                	mov rax, PARAM(1)	; param e2
 21281 0000FCF9 50                      	push rax
 21282 0000FCFA 488B4520                	mov rax, PARAM(0)	; param e1
 21283 0000FCFE 50                      	push rax
 21284 0000FCFF 6A02                    	push 2	; arg count
 21285 0000FD01 488B0425[15130000]      	mov rax, qword [free_var_80]	; free var eq?
 21286 0000FD09 803805                  	cmp byte [rax], T_undefined
 21287 0000FD0C 0F84862F0000            	je L_error_fvar_undefined
 21288 0000FD12 803804                  	cmp byte [rax], T_closure
 21289 0000FD15 0F8501300000            	jne L_error_non_closure
 21290 0000FD1B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21291 0000FD1E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21292                                  .L_if_end_0118:
 21293                                  .L_if_end_0119:
 21294                                  .L_if_end_011a:
 21295                                  .L_if_end_011b:
 21296                                  .L_if_end_011c:
 21297 0000FD21 C9                      	leave
 21298 0000FD22 C22000                  	ret AND_KILL_FRAME(2)
 21299                                  .L_lambda_simple_end_0163:	; new closure is in rax
 21300 0000FD25 48890425[26130000]      	mov qword [free_var_81], rax
 21301 0000FD2D 48B8-                   	mov rax, sob_void
 21301 0000FD2F [0000000000000000] 
 21302                                  
 21303 0000FD37 4889C7                  	mov rdi, rax
 21304 0000FD3A E8DB320000              	call print_sexpr_if_not_void
 21305 0000FD3F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21306 0000FD44 E87C300000              	call malloc
 21307 0000FD49 50                      	push rax
 21308 0000FD4A BF00000000              	mov rdi, 8 * 0	; new rib
 21309 0000FD4F E871300000              	call malloc
 21310 0000FD54 50                      	push rax
 21311 0000FD55 BF08000000              	mov rdi, 8 * 1	; extended env
 21312 0000FD5A E866300000              	call malloc
 21313 0000FD5F 488B7D10                	mov rdi, ENV
 21314 0000FD63 BE00000000              	mov rsi, 0
 21315 0000FD68 BA01000000              	mov rdx, 1
 21316                                  .L_lambda_simple_env_loop_0164:	; ext_env[i + 1] <-- env[i]
 21317 0000FD6D 4883FE00                	cmp rsi, 0
 21318 0000FD71 7410                    	je .L_lambda_simple_env_end_0164
 21319 0000FD73 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21320 0000FD77 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21321 0000FD7B 48FFC6                  	inc rsi
 21322 0000FD7E 48FFC2                  	inc rdx
 21323 0000FD81 EBEA                    	jmp .L_lambda_simple_env_loop_0164
 21324                                  .L_lambda_simple_env_end_0164:
 21325 0000FD83 5B                      	pop rbx
 21326 0000FD84 BE00000000              	mov rsi, 0
 21327                                  .L_lambda_simple_params_loop_0164:	; copy params
 21328 0000FD89 4883FE00                	cmp rsi, 0
 21329 0000FD8D 740E                    	je .L_lambda_simple_params_end_0164
 21330 0000FD8F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21331 0000FD94 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21332 0000FD98 48FFC6                  	inc rsi
 21333 0000FD9B EBEC                    	jmp .L_lambda_simple_params_loop_0164
 21334                                  .L_lambda_simple_params_end_0164:
 21335 0000FD9D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21336 0000FDA0 4889C3                  	mov rbx, rax
 21337 0000FDA3 58                      	pop rax
 21338 0000FDA4 C60004                  	mov byte [rax], T_closure
 21339 0000FDA7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21340 0000FDAB 48C74009[B8FD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0164
 21341 0000FDB3 E928010000              	jmp .L_lambda_simple_end_0164
 21342                                  .L_lambda_simple_code_0164:	; lambda-simple body
 21343 0000FDB8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21344 0000FDBE 740B                    	je .L_lambda_simple_arity_check_ok_0164
 21345 0000FDC0 FF742410                	push qword [rsp + 8 * 2]
 21346 0000FDC4 6A02                    	push 2
 21347 0000FDC6 E9B32F0000              	jmp L_error_incorrect_arity_simple
 21348                                  .L_lambda_simple_arity_check_ok_0164:
 21349 0000FDCB C8000000                	enter 0, 0
 21350                                  	; preparing a non-tail-call
 21351 0000FDCF 488B4528                	mov rax, PARAM(1)	; param s
 21352 0000FDD3 50                      	push rax
 21353 0000FDD4 6A01                    	push 1	; arg count
 21354 0000FDD6 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21355 0000FDDE 803805                  	cmp byte [rax], T_undefined
 21356 0000FDE1 0F84B12E0000            	je L_error_fvar_undefined
 21357 0000FDE7 803804                  	cmp byte [rax], T_closure
 21358 0000FDEA 0F852C2F0000            	jne L_error_non_closure
 21359 0000FDF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21360 0000FDF3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21361 0000FDF6 483D[02000000]          	cmp rax, sob_boolean_false
 21362 0000FDFC 740F                    	je .L_if_else_011e
 21363 0000FDFE 48B8-                   	mov rax, L_constants + 2
 21363 0000FE00 [0200000000000000] 
 21364 0000FE08 E9CF000000              	jmp .L_if_end_011e
 21365                                  .L_if_else_011e:
 21366                                  	; preparing a non-tail-call
 21367 0000FE0D 488B4520                	mov rax, PARAM(0)	; param a
 21368 0000FE11 50                      	push rax
 21369                                  	; preparing a non-tail-call
 21370 0000FE12 488B4528                	mov rax, PARAM(1)	; param s
 21371 0000FE16 50                      	push rax
 21372 0000FE17 6A01                    	push 1	; arg count
 21373 0000FE19 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
 21374 0000FE21 803805                  	cmp byte [rax], T_undefined
 21375 0000FE24 0F846E2E0000            	je L_error_fvar_undefined
 21376 0000FE2A 803804                  	cmp byte [rax], T_closure
 21377 0000FE2D 0F85E92E0000            	jne L_error_non_closure
 21378 0000FE33 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21379 0000FE36 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21380 0000FE39 50                      	push rax
 21381 0000FE3A 6A02                    	push 2	; arg count
 21382 0000FE3C 488B0425[15130000]      	mov rax, qword [free_var_80]	; free var eq?
 21383 0000FE44 803805                  	cmp byte [rax], T_undefined
 21384 0000FE47 0F844B2E0000            	je L_error_fvar_undefined
 21385 0000FE4D 803804                  	cmp byte [rax], T_closure
 21386 0000FE50 0F85C62E0000            	jne L_error_non_closure
 21387 0000FE56 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21388 0000FE59 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21389 0000FE5C 483D[02000000]          	cmp rax, sob_boolean_false
 21390 0000FE62 7429                    	je .L_if_else_011d
 21391                                  	; preparing a non-tail-call
 21392 0000FE64 488B4528                	mov rax, PARAM(1)	; param s
 21393 0000FE68 50                      	push rax
 21394 0000FE69 6A01                    	push 1	; arg count
 21395 0000FE6B 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21396 0000FE73 803805                  	cmp byte [rax], T_undefined
 21397 0000FE76 0F841C2E0000            	je L_error_fvar_undefined
 21398 0000FE7C 803804                  	cmp byte [rax], T_closure
 21399 0000FE7F 0F85972E0000            	jne L_error_non_closure
 21400 0000FE85 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21401 0000FE88 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21402 0000FE8B EB4F                    	jmp .L_if_end_011d
 21403                                  .L_if_else_011d:
 21404                                  	; preparing a non-tail-call
 21405                                  	; preparing a non-tail-call
 21406 0000FE8D 488B4528                	mov rax, PARAM(1)	; param s
 21407 0000FE91 50                      	push rax
 21408 0000FE92 6A01                    	push 1	; arg count
 21409 0000FE94 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21410 0000FE9C 803805                  	cmp byte [rax], T_undefined
 21411 0000FE9F 0F84F32D0000            	je L_error_fvar_undefined
 21412 0000FEA5 803804                  	cmp byte [rax], T_closure
 21413 0000FEA8 0F856E2E0000            	jne L_error_non_closure
 21414 0000FEAE FF7001                  	push SOB_CLOSURE_ENV(rax)
 21415 0000FEB1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21416 0000FEB4 50                      	push rax
 21417 0000FEB5 488B4520                	mov rax, PARAM(0)	; param a
 21418 0000FEB9 50                      	push rax
 21419 0000FEBA 6A02                    	push 2	; arg count
 21420 0000FEBC 488B0425[07100000]      	mov rax, qword [free_var_34]	; free var assoc
 21421 0000FEC4 803805                  	cmp byte [rax], T_undefined
 21422 0000FEC7 0F84CB2D0000            	je L_error_fvar_undefined
 21423 0000FECD 803804                  	cmp byte [rax], T_closure
 21424 0000FED0 0F85462E0000            	jne L_error_non_closure
 21425 0000FED6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21426 0000FED9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21427                                  .L_if_end_011d:
 21428                                  .L_if_end_011e:
 21429 0000FEDC C9                      	leave
 21430 0000FEDD C22000                  	ret AND_KILL_FRAME(2)
 21431                                  .L_lambda_simple_end_0164:	; new closure is in rax
 21432 0000FEE0 48890425[07100000]      	mov qword [free_var_34], rax
 21433 0000FEE8 48B8-                   	mov rax, sob_void
 21433 0000FEEA [0000000000000000] 
 21434                                  
 21435 0000FEF2 4889C7                  	mov rdi, rax
 21436 0000FEF5 E820310000              	call print_sexpr_if_not_void
 21437                                  	; preparing a non-tail-call
 21438 0000FEFA 48B8-                   	mov rax, L_constants + 1993
 21438 0000FEFC [C907000000000000] 
 21439 0000FF04 50                      	push rax
 21440 0000FF05 48B8-                   	mov rax, L_constants + 1993
 21440 0000FF07 [C907000000000000] 
 21441 0000FF0F 50                      	push rax
 21442 0000FF10 6A02                    	push 2	; arg count
 21443 0000FF12 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21444 0000FF17 E8A92E0000              	call malloc
 21445 0000FF1C 50                      	push rax
 21446 0000FF1D BF00000000              	mov rdi, 8 * 0	; new rib
 21447 0000FF22 E89E2E0000              	call malloc
 21448 0000FF27 50                      	push rax
 21449 0000FF28 BF08000000              	mov rdi, 8 * 1	; extended env
 21450 0000FF2D E8932E0000              	call malloc
 21451 0000FF32 488B7D10                	mov rdi, ENV
 21452 0000FF36 BE00000000              	mov rsi, 0
 21453 0000FF3B BA01000000              	mov rdx, 1
 21454                                  .L_lambda_simple_env_loop_0165:	; ext_env[i + 1] <-- env[i]
 21455 0000FF40 4883FE00                	cmp rsi, 0
 21456 0000FF44 7410                    	je .L_lambda_simple_env_end_0165
 21457 0000FF46 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21458 0000FF4A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21459 0000FF4E 48FFC6                  	inc rsi
 21460 0000FF51 48FFC2                  	inc rdx
 21461 0000FF54 EBEA                    	jmp .L_lambda_simple_env_loop_0165
 21462                                  .L_lambda_simple_env_end_0165:
 21463 0000FF56 5B                      	pop rbx
 21464 0000FF57 BE00000000              	mov rsi, 0
 21465                                  .L_lambda_simple_params_loop_0165:	; copy params
 21466 0000FF5C 4883FE00                	cmp rsi, 0
 21467 0000FF60 740E                    	je .L_lambda_simple_params_end_0165
 21468 0000FF62 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21469 0000FF67 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21470 0000FF6B 48FFC6                  	inc rsi
 21471 0000FF6E EBEC                    	jmp .L_lambda_simple_params_loop_0165
 21472                                  .L_lambda_simple_params_end_0165:
 21473 0000FF70 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21474 0000FF73 4889C3                  	mov rbx, rax
 21475 0000FF76 58                      	pop rax
 21476 0000FF77 C60004                  	mov byte [rax], T_closure
 21477 0000FF7A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21478 0000FF7E 48C74009[8BFF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0165
 21479 0000FF86 E96D070000              	jmp .L_lambda_simple_end_0165
 21480                                  .L_lambda_simple_code_0165:	; lambda-simple body
 21481 0000FF8B 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21482 0000FF91 740B                    	je .L_lambda_simple_arity_check_ok_0165
 21483 0000FF93 FF742410                	push qword [rsp + 8 * 2]
 21484 0000FF97 6A02                    	push 2
 21485 0000FF99 E9E02D0000              	jmp L_error_incorrect_arity_simple
 21486                                  .L_lambda_simple_arity_check_ok_0165:
 21487 0000FF9E C8000000                	enter 0, 0
 21488 0000FFA2 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 21489 0000FFA6 488903                  	mov qword [rbx], rax
 21490                                  
 21491 0000FFA9 488B5D28                	mov rbx, qword [rbp + 8 * (4 + 1)]
 21492 0000FFAD 488903                  	mov qword [rbx], rax
 21493                                  
 21494 0000FFB0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21495 0000FFB5 E80B2E0000              	call malloc
 21496 0000FFBA 50                      	push rax
 21497 0000FFBB BF10000000              	mov rdi, 8 * 2	; new rib
 21498 0000FFC0 E8002E0000              	call malloc
 21499 0000FFC5 50                      	push rax
 21500 0000FFC6 BF10000000              	mov rdi, 8 * 2	; extended env
 21501 0000FFCB E8F52D0000              	call malloc
 21502 0000FFD0 488B7D10                	mov rdi, ENV
 21503 0000FFD4 BE00000000              	mov rsi, 0
 21504 0000FFD9 BA01000000              	mov rdx, 1
 21505                                  .L_lambda_simple_env_loop_0166:	; ext_env[i + 1] <-- env[i]
 21506 0000FFDE 4883FE01                	cmp rsi, 1
 21507 0000FFE2 7410                    	je .L_lambda_simple_env_end_0166
 21508 0000FFE4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21509 0000FFE8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21510 0000FFEC 48FFC6                  	inc rsi
 21511 0000FFEF 48FFC2                  	inc rdx
 21512 0000FFF2 EBEA                    	jmp .L_lambda_simple_env_loop_0166
 21513                                  .L_lambda_simple_env_end_0166:
 21514 0000FFF4 5B                      	pop rbx
 21515 0000FFF5 BE00000000              	mov rsi, 0
 21516                                  .L_lambda_simple_params_loop_0166:	; copy params
 21517 0000FFFA 4883FE02                	cmp rsi, 2
 21518 0000FFFE 740E                    	je .L_lambda_simple_params_end_0166
 21519 00010000 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21520 00010005 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21521 00010009 48FFC6                  	inc rsi
 21522 0001000C EBEC                    	jmp .L_lambda_simple_params_loop_0166
 21523                                  .L_lambda_simple_params_end_0166:
 21524 0001000E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21525 00010011 4889C3                  	mov rbx, rax
 21526 00010014 58                      	pop rax
 21527 00010015 C60004                  	mov byte [rax], T_closure
 21528 00010018 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21529 0001001C 48C74009[29000100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0166
 21530 00010024 E9FB010000              	jmp .L_lambda_simple_end_0166
 21531                                  .L_lambda_simple_code_0166:	; lambda-simple body
 21532 00010029 48837C241003            	cmp qword [rsp + 8 * 2], 3
 21533 0001002F 740B                    	je .L_lambda_simple_arity_check_ok_0166
 21534 00010031 FF742410                	push qword [rsp + 8 * 2]
 21535 00010035 6A03                    	push 3
 21536 00010037 E9422D0000              	jmp L_error_incorrect_arity_simple
 21537                                  .L_lambda_simple_arity_check_ok_0166:
 21538 0001003C C8000000                	enter 0, 0
 21539                                  	; preparing a non-tail-call
 21540 00010040 488B4530                	mov rax, PARAM(2)	; param s
 21541 00010044 50                      	push rax
 21542 00010045 6A01                    	push 1	; arg count
 21543 00010047 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21544 0001004F 803805                  	cmp byte [rax], T_undefined
 21545 00010052 0F84402C0000            	je L_error_fvar_undefined
 21546 00010058 803804                  	cmp byte [rax], T_closure
 21547 0001005B 0F85BB2C0000            	jne L_error_non_closure
 21548 00010061 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21549 00010064 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21550 00010067 483D[02000000]          	cmp rax, sob_boolean_false
 21551 0001006D 7409                    	je .L_if_else_011f
 21552 0001006F 488B4520                	mov rax, PARAM(0)	; param target
 21553 00010073 E9A8010000              	jmp .L_if_end_011f
 21554                                  .L_if_else_011f:
 21555                                  	; preparing a non-tail-call
 21556                                  	; preparing a non-tail-call
 21557                                  	; preparing a non-tail-call
 21558                                  	; preparing a non-tail-call
 21559 00010078 488B4530                	mov rax, PARAM(2)	; param s
 21560 0001007C 50                      	push rax
 21561 0001007D 6A01                    	push 1	; arg count
 21562 0001007F 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21563 00010087 803805                  	cmp byte [rax], T_undefined
 21564 0001008A 0F84082C0000            	je L_error_fvar_undefined
 21565 00010090 803804                  	cmp byte [rax], T_closure
 21566 00010093 0F85832C0000            	jne L_error_non_closure
 21567 00010099 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21568 0001009C FF5009                  	call SOB_CLOSURE_CODE(rax)
 21569 0001009F 50                      	push rax
 21570 000100A0 6A01                    	push 1	; arg count
 21571 000100A2 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 21572 000100AA 803805                  	cmp byte [rax], T_undefined
 21573 000100AD 0F84E52B0000            	je L_error_fvar_undefined
 21574 000100B3 803804                  	cmp byte [rax], T_closure
 21575 000100B6 0F85602C0000            	jne L_error_non_closure
 21576 000100BC FF7001                  	push SOB_CLOSURE_ENV(rax)
 21577 000100BF FF5009                  	call SOB_CLOSURE_CODE(rax)
 21578 000100C2 50                      	push rax
 21579 000100C3 48B8-                   	mov rax, L_constants + 2135
 21579 000100C5 [5708000000000000] 
 21580 000100CD 50                      	push rax
 21581                                  	; preparing a non-tail-call
 21582 000100CE 488B4530                	mov rax, PARAM(2)	; param s
 21583 000100D2 50                      	push rax
 21584 000100D3 6A01                    	push 1	; arg count
 21585 000100D5 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21586 000100DD 803805                  	cmp byte [rax], T_undefined
 21587 000100E0 0F84B22B0000            	je L_error_fvar_undefined
 21588 000100E6 803804                  	cmp byte [rax], T_closure
 21589 000100E9 0F852D2C0000            	jne L_error_non_closure
 21590 000100EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 21591 000100F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21592 000100F5 50                      	push rax
 21593 000100F6 488B4528                	mov rax, PARAM(1)	; param i
 21594 000100FA 50                      	push rax
 21595 000100FB 488B4520                	mov rax, PARAM(0)	; param target
 21596 000100FF 50                      	push rax
 21597 00010100 6A05                    	push 5	; arg count
 21598 00010102 488B4510                	mov rax, ENV
 21599 00010106 488B00                  	mov rax, qword [rax + 8 * 0]
 21600 00010109 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 21601 0001010D 488B00                  	mov rax, qword [rax]
 21602 00010110 803804                  	cmp byte [rax], T_closure
 21603 00010113 0F85032C0000            	jne L_error_non_closure
 21604 00010119 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21605 0001011C FF5009                  	call SOB_CLOSURE_CODE(rax)
 21606 0001011F 50                      	push rax
 21607 00010120 6A01                    	push 1	; arg count
 21608 00010122 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21609 00010127 E8992C0000              	call malloc
 21610 0001012C 50                      	push rax
 21611 0001012D BF18000000              	mov rdi, 8 * 3	; new rib
 21612 00010132 E88E2C0000              	call malloc
 21613 00010137 50                      	push rax
 21614 00010138 BF18000000              	mov rdi, 8 * 3	; extended env
 21615 0001013D E8832C0000              	call malloc
 21616 00010142 488B7D10                	mov rdi, ENV
 21617 00010146 BE00000000              	mov rsi, 0
 21618 0001014B BA01000000              	mov rdx, 1
 21619                                  .L_lambda_simple_env_loop_0167:	; ext_env[i + 1] <-- env[i]
 21620 00010150 4883FE02                	cmp rsi, 2
 21621 00010154 7410                    	je .L_lambda_simple_env_end_0167
 21622 00010156 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21623 0001015A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21624 0001015E 48FFC6                  	inc rsi
 21625 00010161 48FFC2                  	inc rdx
 21626 00010164 EBEA                    	jmp .L_lambda_simple_env_loop_0167
 21627                                  .L_lambda_simple_env_end_0167:
 21628 00010166 5B                      	pop rbx
 21629 00010167 BE00000000              	mov rsi, 0
 21630                                  .L_lambda_simple_params_loop_0167:	; copy params
 21631 0001016C 4883FE03                	cmp rsi, 3
 21632 00010170 740E                    	je .L_lambda_simple_params_end_0167
 21633 00010172 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21634 00010177 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21635 0001017B 48FFC6                  	inc rsi
 21636 0001017E EBEC                    	jmp .L_lambda_simple_params_loop_0167
 21637                                  .L_lambda_simple_params_end_0167:
 21638 00010180 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21639 00010183 4889C3                  	mov rbx, rax
 21640 00010186 58                      	pop rax
 21641 00010187 C60004                  	mov byte [rax], T_closure
 21642 0001018A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21643 0001018E 48C74009[98010100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0167
 21644 00010196 EB79                    	jmp .L_lambda_simple_end_0167
 21645                                  .L_lambda_simple_code_0167:	; lambda-simple body
 21646 00010198 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21647 0001019E 740B                    	je .L_lambda_simple_arity_check_ok_0167
 21648 000101A0 FF742410                	push qword [rsp + 8 * 2]
 21649 000101A4 6A01                    	push 1
 21650 000101A6 E9D32B0000              	jmp L_error_incorrect_arity_simple
 21651                                  .L_lambda_simple_arity_check_ok_0167:
 21652 000101AB C8000000                	enter 0, 0
 21653                                  	; preparing a non-tail-call
 21654                                  	; preparing a non-tail-call
 21655 000101AF 488B4510                	mov rax, ENV
 21656 000101B3 488B00                  	mov rax, qword [rax + 8 * 0]
 21657 000101B6 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 21658 000101BA 50                      	push rax
 21659 000101BB 6A01                    	push 1	; arg count
 21660 000101BD 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21661 000101C5 803805                  	cmp byte [rax], T_undefined
 21662 000101C8 0F84CA2A0000            	je L_error_fvar_undefined
 21663 000101CE 803804                  	cmp byte [rax], T_closure
 21664 000101D1 0F85452B0000            	jne L_error_non_closure
 21665 000101D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21666 000101DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 21667 000101DD 50                      	push rax
 21668 000101DE 488B4520                	mov rax, PARAM(0)	; param i
 21669 000101E2 50                      	push rax
 21670 000101E3 488B4510                	mov rax, ENV
 21671 000101E7 488B00                  	mov rax, qword [rax + 8 * 0]
 21672 000101EA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 21673 000101ED 50                      	push rax
 21674 000101EE 6A03                    	push 3	; arg count
 21675 000101F0 488B4510                	mov rax, ENV
 21676 000101F4 488B4008                	mov rax, qword [rax + 8 * 1]
 21677 000101F8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21678 000101FB 488B00                  	mov rax, qword [rax]
 21679 000101FE 803804                  	cmp byte [rax], T_closure
 21680 00010201 0F85152B0000            	jne L_error_non_closure
 21681 00010207 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21682 0001020A FF5009                  	call SOB_CLOSURE_CODE(rax)
 21683 0001020D C9                      	leave
 21684 0001020E C21800                  	ret AND_KILL_FRAME(1)
 21685                                  .L_lambda_simple_end_0167:	; new closure is in rax
 21686 00010211 803804                  	cmp byte [rax], T_closure
 21687 00010214 0F85022B0000            	jne L_error_non_closure
 21688 0001021A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21689 0001021D FF5009                  	call SOB_CLOSURE_CODE(rax)
 21690                                  .L_if_end_011f:
 21691 00010220 C9                      	leave
 21692 00010221 C22800                  	ret AND_KILL_FRAME(3)
 21693                                  .L_lambda_simple_end_0166:	; new closure is in rax
 21694 00010224 50                      	push rax
 21695 00010225 488B4520                	mov rax, PARAM(0)	; param run
 21696 00010229 8F00                    	pop qword [rax]
 21697 0001022B 48B8-                   	mov rax, sob_void
 21697 0001022D [0000000000000000] 
 21698                                  
 21699 00010235 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21700 0001023A E8862B0000              	call malloc
 21701 0001023F 50                      	push rax
 21702 00010240 BF10000000              	mov rdi, 8 * 2	; new rib
 21703 00010245 E87B2B0000              	call malloc
 21704 0001024A 50                      	push rax
 21705 0001024B BF10000000              	mov rdi, 8 * 2	; extended env
 21706 00010250 E8702B0000              	call malloc
 21707 00010255 488B7D10                	mov rdi, ENV
 21708 00010259 BE00000000              	mov rsi, 0
 21709 0001025E BA01000000              	mov rdx, 1
 21710                                  .L_lambda_simple_env_loop_0168:	; ext_env[i + 1] <-- env[i]
 21711 00010263 4883FE01                	cmp rsi, 1
 21712 00010267 7410                    	je .L_lambda_simple_env_end_0168
 21713 00010269 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21714 0001026D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21715 00010271 48FFC6                  	inc rsi
 21716 00010274 48FFC2                  	inc rdx
 21717 00010277 EBEA                    	jmp .L_lambda_simple_env_loop_0168
 21718                                  .L_lambda_simple_env_end_0168:
 21719 00010279 5B                      	pop rbx
 21720 0001027A BE00000000              	mov rsi, 0
 21721                                  .L_lambda_simple_params_loop_0168:	; copy params
 21722 0001027F 4883FE02                	cmp rsi, 2
 21723 00010283 740E                    	je .L_lambda_simple_params_end_0168
 21724 00010285 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21725 0001028A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21726 0001028E 48FFC6                  	inc rsi
 21727 00010291 EBEC                    	jmp .L_lambda_simple_params_loop_0168
 21728                                  .L_lambda_simple_params_end_0168:
 21729 00010293 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21730 00010296 4889C3                  	mov rbx, rax
 21731 00010299 58                      	pop rax
 21732 0001029A C60004                  	mov byte [rax], T_closure
 21733 0001029D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21734 000102A1 48C74009[AE020100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0168
 21735 000102A9 E946010000              	jmp .L_lambda_simple_end_0168
 21736                                  .L_lambda_simple_code_0168:	; lambda-simple body
 21737 000102AE 48837C241005            	cmp qword [rsp + 8 * 2], 5
 21738 000102B4 740B                    	je .L_lambda_simple_arity_check_ok_0168
 21739 000102B6 FF742410                	push qword [rsp + 8 * 2]
 21740 000102BA 6A05                    	push 5
 21741 000102BC E9BD2A0000              	jmp L_error_incorrect_arity_simple
 21742                                  .L_lambda_simple_arity_check_ok_0168:
 21743 000102C1 C8000000                	enter 0, 0
 21744                                  	; preparing a non-tail-call
 21745 000102C5 488B4540                	mov rax, PARAM(4)	; param limit
 21746 000102C9 50                      	push rax
 21747 000102CA 488B4538                	mov rax, PARAM(3)	; param j
 21748 000102CE 50                      	push rax
 21749 000102CF 6A02                    	push 2	; arg count
 21750 000102D1 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 21751 000102D9 803805                  	cmp byte [rax], T_undefined
 21752 000102DC 0F84B6290000            	je L_error_fvar_undefined
 21753 000102E2 803804                  	cmp byte [rax], T_closure
 21754 000102E5 0F85312A0000            	jne L_error_non_closure
 21755 000102EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 21756 000102EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 21757 000102F1 483D[02000000]          	cmp rax, sob_boolean_false
 21758 000102F7 0F84EF000000            	je .L_if_else_0120
 21759                                  	; preparing a non-tail-call
 21760                                  	; preparing a non-tail-call
 21761 000102FD 488B4538                	mov rax, PARAM(3)	; param j
 21762 00010301 50                      	push rax
 21763 00010302 488B4530                	mov rax, PARAM(2)	; param str
 21764 00010306 50                      	push rax
 21765 00010307 6A02                    	push 2	; arg count
 21766 00010309 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 21767 00010311 803805                  	cmp byte [rax], T_undefined
 21768 00010314 0F847E290000            	je L_error_fvar_undefined
 21769 0001031A 803804                  	cmp byte [rax], T_closure
 21770 0001031D 0F85F9290000            	jne L_error_non_closure
 21771 00010323 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21772 00010326 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21773 00010329 50                      	push rax
 21774 0001032A 488B4528                	mov rax, PARAM(1)	; param i
 21775 0001032E 50                      	push rax
 21776 0001032F 488B4520                	mov rax, PARAM(0)	; param target
 21777 00010333 50                      	push rax
 21778 00010334 6A03                    	push 3	; arg count
 21779 00010336 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 21780 0001033E 803805                  	cmp byte [rax], T_undefined
 21781 00010341 0F8451290000            	je L_error_fvar_undefined
 21782 00010347 803804                  	cmp byte [rax], T_closure
 21783 0001034A 0F85CC290000            	jne L_error_non_closure
 21784 00010350 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21785 00010353 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21786                                  
 21787                                  	; preparing a non-tail-call
 21788 00010356 488B4540                	mov rax, PARAM(4)	; param limit
 21789 0001035A 50                      	push rax
 21790                                  	; preparing a non-tail-call
 21791 0001035B 48B8-                   	mov rax, L_constants + 2270
 21791 0001035D [DE08000000000000] 
 21792 00010365 50                      	push rax
 21793 00010366 488B4538                	mov rax, PARAM(3)	; param j
 21794 0001036A 50                      	push rax
 21795 0001036B 6A02                    	push 2	; arg count
 21796 0001036D 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 21797 00010375 803805                  	cmp byte [rax], T_undefined
 21798 00010378 0F841A290000            	je L_error_fvar_undefined
 21799 0001037E 803804                  	cmp byte [rax], T_closure
 21800 00010381 0F8595290000            	jne L_error_non_closure
 21801 00010387 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21802 0001038A FF5009                  	call SOB_CLOSURE_CODE(rax)
 21803 0001038D 50                      	push rax
 21804 0001038E 488B4530                	mov rax, PARAM(2)	; param str
 21805 00010392 50                      	push rax
 21806                                  	; preparing a non-tail-call
 21807 00010393 48B8-                   	mov rax, L_constants + 2270
 21807 00010395 [DE08000000000000] 
 21808 0001039D 50                      	push rax
 21809 0001039E 488B4528                	mov rax, PARAM(1)	; param i
 21810 000103A2 50                      	push rax
 21811 000103A3 6A02                    	push 2	; arg count
 21812 000103A5 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 21813 000103AD 803805                  	cmp byte [rax], T_undefined
 21814 000103B0 0F84E2280000            	je L_error_fvar_undefined
 21815 000103B6 803804                  	cmp byte [rax], T_closure
 21816 000103B9 0F855D290000            	jne L_error_non_closure
 21817 000103BF FF7001                  	push SOB_CLOSURE_ENV(rax)
 21818 000103C2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21819 000103C5 50                      	push rax
 21820 000103C6 488B4520                	mov rax, PARAM(0)	; param target
 21821 000103CA 50                      	push rax
 21822 000103CB 6A05                    	push 5	; arg count
 21823 000103CD 488B4510                	mov rax, ENV
 21824 000103D1 488B00                  	mov rax, qword [rax + 8 * 0]
 21825 000103D4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 21826 000103D8 488B00                  	mov rax, qword [rax]
 21827 000103DB 803804                  	cmp byte [rax], T_closure
 21828 000103DE 0F8538290000            	jne L_error_non_closure
 21829 000103E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21830 000103E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21831 000103EA EB04                    	jmp .L_if_end_0120
 21832                                  .L_if_else_0120:
 21833 000103EC 488B4528                	mov rax, PARAM(1)	; param i
 21834                                  .L_if_end_0120:
 21835 000103F0 C9                      	leave
 21836 000103F1 C23800                  	ret AND_KILL_FRAME(5)
 21837                                  .L_lambda_simple_end_0168:	; new closure is in rax
 21838 000103F4 50                      	push rax
 21839 000103F5 488B4528                	mov rax, PARAM(1)	; param add
 21840 000103F9 8F00                    	pop qword [rax]
 21841 000103FB 48B8-                   	mov rax, sob_void
 21841 000103FD [0000000000000000] 
 21842                                  
 21843 00010405 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21844 0001040A E8B6290000              	call malloc
 21845 0001040F 50                      	push rax
 21846 00010410 BF10000000              	mov rdi, 8 * 2	; new rib
 21847 00010415 E8AB290000              	call malloc
 21848 0001041A 50                      	push rax
 21849 0001041B BF10000000              	mov rdi, 8 * 2	; extended env
 21850 00010420 E8A0290000              	call malloc
 21851 00010425 488B7D10                	mov rdi, ENV
 21852 00010429 BE00000000              	mov rsi, 0
 21853 0001042E BA01000000              	mov rdx, 1
 21854                                  .L_lambda_opt_env_loop_002f:	; ext_env[i + 1] <-- env[i]
 21855 00010433 4883FE01                	cmp rsi, 1
 21856 00010437 7410                    	je .L_lambda_opt_env_end_002f
 21857 00010439 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21858 0001043D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21859 00010441 48FFC6                  	inc rsi
 21860 00010444 48FFC2                  	inc rdx
 21861 00010447 EBEA                    	jmp .L_lambda_opt_env_loop_002f
 21862                                  .L_lambda_opt_env_end_002f:
 21863 00010449 5B                      	pop rbx
 21864 0001044A BE00000000              	mov rsi, 0
 21865                                  .L_lambda_opt_params_loop_002f:	; copy params
 21866 0001044F 4883FE02                	cmp rsi, 2
 21867 00010453 740E                    	je .L_lambda_opt_params_end_002f
 21868 00010455 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21869 0001045A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21870 0001045E 48FFC6                  	inc rsi
 21871 00010461 EBEC                    	jmp .L_lambda_opt_params_loop_002f
 21872                                  .L_lambda_opt_params_end_002f:
 21873 00010463 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21874 00010466 4889C3                  	mov rbx, rax
 21875 00010469 58                      	pop rax
 21876 0001046A C60004                  	mov byte [rax], T_closure
 21877 0001046D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21878 00010471 48C74009[7E040100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_002f
 21879 00010479 E976020000              	jmp .L_lambda_opt_end_002f
 21880                                  .L_lambda_opt_code_002f:	; lambda-opt body
 21881 0001047E 48837C241000            	cmp qword [rsp + 8 * 2], 0
 21882 00010484 7411                    	je .L_lambda_opt_arity_check_exact_002f
 21883 00010486 0F8F08010000            	jg .L_lambda_opt_arity_check_more_002f
 21884 0001048C FF742410                	push qword [rsp + 8 * 2]
 21885 00010490 6A00                    	push 0
 21886 00010492 E9FB280000              	jmp L_error_incorrect_arity_opt
 21887                                  .L_lambda_opt_arity_check_exact_002f:
 21888 00010497 4883EC08                	sub rsp, 8
 21889 0001049B 488B442408              	mov rax, qword[rsp + 8 *1]
 21890 000104A0 48890424                	mov qword[rsp], rax  
 21891 000104A4 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 21892 000104A9 4889442408              	mov qword[rsp + 8 * 1], rax
 21893 000104AE B801000000              	mov rax, 1
 21894 000104B3 4889442410              	mov qword[rsp + 8 *2], rax
 21895 000104B8 48B8-                   	mov rax, sob_nil
 21895 000104BA [0100000000000000] 
 21896 000104C2 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 21897 000104C7 C8000000                	enter 0, 0
 21898                                  	; preparing a non-tail-call
 21899 000104CB 488B4520                	mov rax, PARAM(0)	; param strings
 21900 000104CF 50                      	push rax
 21901 000104D0 48B8-                   	mov rax, L_constants + 2135
 21901 000104D2 [5708000000000000] 
 21902 000104DA 50                      	push rax
 21903                                  	; preparing a non-tail-call
 21904                                  	; preparing a non-tail-call
 21905                                  	; preparing a non-tail-call
 21906 000104DB 488B4520                	mov rax, PARAM(0)	; param strings
 21907 000104DF 50                      	push rax
 21908 000104E0 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 21909 000104E8 803805                  	cmp byte [rax], T_undefined
 21910 000104EB 0F84A7270000            	je L_error_fvar_undefined
 21911 000104F1 50                      	push rax
 21912 000104F2 6A02                    	push 2	; arg count
 21913 000104F4 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 21914 000104FC 803805                  	cmp byte [rax], T_undefined
 21915 000104FF 0F8493270000            	je L_error_fvar_undefined
 21916 00010505 803804                  	cmp byte [rax], T_closure
 21917 00010508 0F850E280000            	jne L_error_non_closure
 21918 0001050E FF7001                  	push SOB_CLOSURE_ENV(rax)
 21919 00010511 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21920 00010514 50                      	push rax
 21921 00010515 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 21922 0001051D 803805                  	cmp byte [rax], T_undefined
 21923 00010520 0F8472270000            	je L_error_fvar_undefined
 21924 00010526 50                      	push rax
 21925 00010527 6A02                    	push 2	; arg count
 21926 00010529 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 21927 00010531 803805                  	cmp byte [rax], T_undefined
 21928 00010534 0F845E270000            	je L_error_fvar_undefined
 21929 0001053A 803804                  	cmp byte [rax], T_closure
 21930 0001053D 0F85D9270000            	jne L_error_non_closure
 21931 00010543 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21932 00010546 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21933 00010549 50                      	push rax
 21934 0001054A 6A01                    	push 1	; arg count
 21935 0001054C 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 21936 00010554 803805                  	cmp byte [rax], T_undefined
 21937 00010557 0F843B270000            	je L_error_fvar_undefined
 21938 0001055D 803804                  	cmp byte [rax], T_closure
 21939 00010560 0F85B6270000            	jne L_error_non_closure
 21940 00010566 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21941 00010569 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21942 0001056C 50                      	push rax
 21943 0001056D 6A03                    	push 3	; arg count
 21944 0001056F 488B4510                	mov rax, ENV
 21945 00010573 488B00                  	mov rax, qword [rax + 8 * 0]
 21946 00010576 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21947 00010579 488B00                  	mov rax, qword [rax]
 21948 0001057C 803804                  	cmp byte [rax], T_closure
 21949 0001057F 0F8597270000            	jne L_error_non_closure
 21950 00010585 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21951 00010588 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21952 0001058B C9                      	leave
 21953 0001058C C21800                  	ret AND_KILL_FRAME(1)
 21954 0001058F E960010000              	jmp .L_lambda_opt_end_002f	; new closure is in rax
 21955                                  .L_lambda_opt_arity_check_more_002f:
 21956 00010594 488B442410              	mov rax, qword[rsp + 2 * 8]
 21957 00010599 4889C7                  	mov rdi, rax
 21958 0001059C 49B9-                   	mov r9, sob_nil
 21958 0001059E [0100000000000000] 
 21959 000105A6 4C8B442410              	mov r8, qword[rsp+2*8]
 21960                                  .L_lambda_opt_stack_shrink_loop_002f:
 21961 000105AB 4983F800                	cmp r8, 0
 21962 000105AF 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_002f
 21963 000105B1 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 21964 000105B6 BF11000000              	mov rdi, 1+8+8	;for pair
 21965 000105BB E805280000              	call malloc	 ;to create the pair in the stack
 21966 000105C0 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 21967 000105C3 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 21968 000105C7 4C894809                 	mov qword[rax+1+8],r9
 21969 000105CB 4989C1                  	mov r9 , rax	 ; for the recursion 
 21970 000105CE 49FFC8                  	dec r8
 21971 000105D1 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_002f
 21972                                  .L_lambda_opt_stack_shrink_loop_exit_002f:
 21973 000105D3 488B442410              	mov rax, qword[rsp + 2 * 8]
 21974 000105D8 BF01000000              	mov rdi, 1
 21975 000105DD 4829F8                  	sub rax, rdi
 21976 000105E0 4889C7                  	mov rdi, rax
 21977 000105E3 486BC008                	imul rax,8
 21978 000105E7 4801C4                  	add rsp, rax
 21979 000105EA 4889E0                  	mov rax, rsp
 21980 000105ED 4989F8                  	mov r8, rdi
 21981 000105F0 4D6BC008                	imul r8, 8
 21982 000105F4 4C29C0                  	sub rax, r8
 21983 000105F7 4989C2                  	mov r10, rax	; holds the original ret in the stack
 21984 000105FA 4983C218                	add r10, 8*3
 21985 000105FE 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 21986 00010602 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 21987 00010605 4D6BC008                	imul r8,8
 21988 00010609 4C01C0                  	add rax, r8
 21989 0001060C 4C8908                  	mov qword[rax] ,r9
 21990 0001060F 4983EA18                 	sub r10, 8*3
 21991 00010613 48C744241001000000      	mov qword [rsp+2*8], 1
 21992 0001061C 498B4208                	mov rax, qword[r10 + 1 * 8]
 21993 00010620 4889442408              	mov qword[rsp + 1*8] ,rax
 21994 00010625 498B02                  	mov rax, qword[r10]
 21995 00010628 48890424                	mov qword[rsp], rax
 21996 0001062C C8000000                	enter 0, 0
 21997                                  	; preparing a non-tail-call
 21998 00010630 488B4520                	mov rax, PARAM(0)	; param strings
 21999 00010634 50                      	push rax
 22000 00010635 48B8-                   	mov rax, L_constants + 2135
 22000 00010637 [5708000000000000] 
 22001 0001063F 50                      	push rax
 22002                                  	; preparing a non-tail-call
 22003                                  	; preparing a non-tail-call
 22004                                  	; preparing a non-tail-call
 22005 00010640 488B4520                	mov rax, PARAM(0)	; param strings
 22006 00010644 50                      	push rax
 22007 00010645 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 22008 0001064D 803805                  	cmp byte [rax], T_undefined
 22009 00010650 0F8442260000            	je L_error_fvar_undefined
 22010 00010656 50                      	push rax
 22011 00010657 6A02                    	push 2	; arg count
 22012 00010659 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 22013 00010661 803805                  	cmp byte [rax], T_undefined
 22014 00010664 0F842E260000            	je L_error_fvar_undefined
 22015 0001066A 803804                  	cmp byte [rax], T_closure
 22016 0001066D 0F85A9260000            	jne L_error_non_closure
 22017 00010673 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22018 00010676 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22019 00010679 50                      	push rax
 22020 0001067A 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22021 00010682 803805                  	cmp byte [rax], T_undefined
 22022 00010685 0F840D260000            	je L_error_fvar_undefined
 22023 0001068B 50                      	push rax
 22024 0001068C 6A02                    	push 2	; arg count
 22025 0001068E 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 22026 00010696 803805                  	cmp byte [rax], T_undefined
 22027 00010699 0F84F9250000            	je L_error_fvar_undefined
 22028 0001069F 803804                  	cmp byte [rax], T_closure
 22029 000106A2 0F8574260000            	jne L_error_non_closure
 22030 000106A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22031 000106AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 22032 000106AE 50                      	push rax
 22033 000106AF 6A01                    	push 1	; arg count
 22034 000106B1 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 22035 000106B9 803805                  	cmp byte [rax], T_undefined
 22036 000106BC 0F84D6250000            	je L_error_fvar_undefined
 22037 000106C2 803804                  	cmp byte [rax], T_closure
 22038 000106C5 0F8551260000            	jne L_error_non_closure
 22039 000106CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 22040 000106CE FF5009                  	call SOB_CLOSURE_CODE(rax)
 22041 000106D1 50                      	push rax
 22042 000106D2 6A03                    	push 3	; arg count
 22043 000106D4 488B4510                	mov rax, ENV
 22044 000106D8 488B00                  	mov rax, qword [rax + 8 * 0]
 22045 000106DB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22046 000106DE 488B00                  	mov rax, qword [rax]
 22047 000106E1 803804                  	cmp byte [rax], T_closure
 22048 000106E4 0F8532260000            	jne L_error_non_closure
 22049 000106EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 22050 000106ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 22051 000106F0 C9                      	leave
 22052 000106F1 C21800                  	ret AND_KILL_FRAME(1)
 22053                                  .L_lambda_opt_end_002f:	; new closure is in rax
 22054 000106F4 C9                      	leave
 22055 000106F5 C22000                  	ret AND_KILL_FRAME(2)
 22056                                  .L_lambda_simple_end_0165:	; new closure is in rax
 22057 000106F8 803804                  	cmp byte [rax], T_closure
 22058 000106FB 0F851B260000            	jne L_error_non_closure
 22059 00010701 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22060 00010704 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22061 00010707 48890425[BD150000]      	mov qword [free_var_120], rax
 22062 0001070F 48B8-                   	mov rax, sob_void
 22062 00010711 [0000000000000000] 
 22063                                  
 22064 00010719 4889C7                  	mov rdi, rax
 22065 0001071C E8F9280000              	call print_sexpr_if_not_void
 22066                                  	; preparing a non-tail-call
 22067 00010721 48B8-                   	mov rax, L_constants + 1993
 22067 00010723 [C907000000000000] 
 22068 0001072B 50                      	push rax
 22069 0001072C 48B8-                   	mov rax, L_constants + 1993
 22069 0001072E [C907000000000000] 
 22070 00010736 50                      	push rax
 22071 00010737 6A02                    	push 2	; arg count
 22072 00010739 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22073 0001073E E882260000              	call malloc
 22074 00010743 50                      	push rax
 22075 00010744 BF00000000              	mov rdi, 8 * 0	; new rib
 22076 00010749 E877260000              	call malloc
 22077 0001074E 50                      	push rax
 22078 0001074F BF08000000              	mov rdi, 8 * 1	; extended env
 22079 00010754 E86C260000              	call malloc
 22080 00010759 488B7D10                	mov rdi, ENV
 22081 0001075D BE00000000              	mov rsi, 0
 22082 00010762 BA01000000              	mov rdx, 1
 22083                                  .L_lambda_simple_env_loop_0169:	; ext_env[i + 1] <-- env[i]
 22084 00010767 4883FE00                	cmp rsi, 0
 22085 0001076B 7410                    	je .L_lambda_simple_env_end_0169
 22086 0001076D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22087 00010771 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22088 00010775 48FFC6                  	inc rsi
 22089 00010778 48FFC2                  	inc rdx
 22090 0001077B EBEA                    	jmp .L_lambda_simple_env_loop_0169
 22091                                  .L_lambda_simple_env_end_0169:
 22092 0001077D 5B                      	pop rbx
 22093 0001077E BE00000000              	mov rsi, 0
 22094                                  .L_lambda_simple_params_loop_0169:	; copy params
 22095 00010783 4883FE00                	cmp rsi, 0
 22096 00010787 740E                    	je .L_lambda_simple_params_end_0169
 22097 00010789 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22098 0001078E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22099 00010792 48FFC6                  	inc rsi
 22100 00010795 EBEC                    	jmp .L_lambda_simple_params_loop_0169
 22101                                  .L_lambda_simple_params_end_0169:
 22102 00010797 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22103 0001079A 4889C3                  	mov rbx, rax
 22104 0001079D 58                      	pop rax
 22105 0001079E C60004                  	mov byte [rax], T_closure
 22106 000107A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22107 000107A5 48C74009[B2070100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0169
 22108 000107AD E96D070000              	jmp .L_lambda_simple_end_0169
 22109                                  .L_lambda_simple_code_0169:	; lambda-simple body
 22110 000107B2 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22111 000107B8 740B                    	je .L_lambda_simple_arity_check_ok_0169
 22112 000107BA FF742410                	push qword [rsp + 8 * 2]
 22113 000107BE 6A02                    	push 2
 22114 000107C0 E9B9250000              	jmp L_error_incorrect_arity_simple
 22115                                  .L_lambda_simple_arity_check_ok_0169:
 22116 000107C5 C8000000                	enter 0, 0
 22117 000107C9 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 22118 000107CD 488903                  	mov qword [rbx], rax
 22119                                  
 22120 000107D0 488B5D28                	mov rbx, qword [rbp + 8 * (4 + 1)]
 22121 000107D4 488903                  	mov qword [rbx], rax
 22122                                  
 22123 000107D7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22124 000107DC E8E4250000              	call malloc
 22125 000107E1 50                      	push rax
 22126 000107E2 BF10000000              	mov rdi, 8 * 2	; new rib
 22127 000107E7 E8D9250000              	call malloc
 22128 000107EC 50                      	push rax
 22129 000107ED BF10000000              	mov rdi, 8 * 2	; extended env
 22130 000107F2 E8CE250000              	call malloc
 22131 000107F7 488B7D10                	mov rdi, ENV
 22132 000107FB BE00000000              	mov rsi, 0
 22133 00010800 BA01000000              	mov rdx, 1
 22134                                  .L_lambda_simple_env_loop_016a:	; ext_env[i + 1] <-- env[i]
 22135 00010805 4883FE01                	cmp rsi, 1
 22136 00010809 7410                    	je .L_lambda_simple_env_end_016a
 22137 0001080B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22138 0001080F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22139 00010813 48FFC6                  	inc rsi
 22140 00010816 48FFC2                  	inc rdx
 22141 00010819 EBEA                    	jmp .L_lambda_simple_env_loop_016a
 22142                                  .L_lambda_simple_env_end_016a:
 22143 0001081B 5B                      	pop rbx
 22144 0001081C BE00000000              	mov rsi, 0
 22145                                  .L_lambda_simple_params_loop_016a:	; copy params
 22146 00010821 4883FE02                	cmp rsi, 2
 22147 00010825 740E                    	je .L_lambda_simple_params_end_016a
 22148 00010827 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22149 0001082C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22150 00010830 48FFC6                  	inc rsi
 22151 00010833 EBEC                    	jmp .L_lambda_simple_params_loop_016a
 22152                                  .L_lambda_simple_params_end_016a:
 22153 00010835 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22154 00010838 4889C3                  	mov rbx, rax
 22155 0001083B 58                      	pop rax
 22156 0001083C C60004                  	mov byte [rax], T_closure
 22157 0001083F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22158 00010843 48C74009[50080100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_016a
 22159 0001084B E9FB010000              	jmp .L_lambda_simple_end_016a
 22160                                  .L_lambda_simple_code_016a:	; lambda-simple body
 22161 00010850 48837C241003            	cmp qword [rsp + 8 * 2], 3
 22162 00010856 740B                    	je .L_lambda_simple_arity_check_ok_016a
 22163 00010858 FF742410                	push qword [rsp + 8 * 2]
 22164 0001085C 6A03                    	push 3
 22165 0001085E E91B250000              	jmp L_error_incorrect_arity_simple
 22166                                  .L_lambda_simple_arity_check_ok_016a:
 22167 00010863 C8000000                	enter 0, 0
 22168                                  	; preparing a non-tail-call
 22169 00010867 488B4530                	mov rax, PARAM(2)	; param s
 22170 0001086B 50                      	push rax
 22171 0001086C 6A01                    	push 1	; arg count
 22172 0001086E 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22173 00010876 803805                  	cmp byte [rax], T_undefined
 22174 00010879 0F8419240000            	je L_error_fvar_undefined
 22175 0001087F 803804                  	cmp byte [rax], T_closure
 22176 00010882 0F8594240000            	jne L_error_non_closure
 22177 00010888 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22178 0001088B FF5009                  	call SOB_CLOSURE_CODE(rax)
 22179 0001088E 483D[02000000]          	cmp rax, sob_boolean_false
 22180 00010894 7409                    	je .L_if_else_0121
 22181 00010896 488B4520                	mov rax, PARAM(0)	; param target
 22182 0001089A E9A8010000              	jmp .L_if_end_0121
 22183                                  .L_if_else_0121:
 22184                                  	; preparing a non-tail-call
 22185                                  	; preparing a non-tail-call
 22186                                  	; preparing a non-tail-call
 22187                                  	; preparing a non-tail-call
 22188 0001089F 488B4530                	mov rax, PARAM(2)	; param s
 22189 000108A3 50                      	push rax
 22190 000108A4 6A01                    	push 1	; arg count
 22191 000108A6 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 22192 000108AE 803805                  	cmp byte [rax], T_undefined
 22193 000108B1 0F84E1230000            	je L_error_fvar_undefined
 22194 000108B7 803804                  	cmp byte [rax], T_closure
 22195 000108BA 0F855C240000            	jne L_error_non_closure
 22196 000108C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22197 000108C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22198 000108C6 50                      	push rax
 22199 000108C7 6A01                    	push 1	; arg count
 22200 000108C9 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 22201 000108D1 803805                  	cmp byte [rax], T_undefined
 22202 000108D4 0F84BE230000            	je L_error_fvar_undefined
 22203 000108DA 803804                  	cmp byte [rax], T_closure
 22204 000108DD 0F8539240000            	jne L_error_non_closure
 22205 000108E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22206 000108E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22207 000108E9 50                      	push rax
 22208 000108EA 48B8-                   	mov rax, L_constants + 2135
 22208 000108EC [5708000000000000] 
 22209 000108F4 50                      	push rax
 22210                                  	; preparing a non-tail-call
 22211 000108F5 488B4530                	mov rax, PARAM(2)	; param s
 22212 000108F9 50                      	push rax
 22213 000108FA 6A01                    	push 1	; arg count
 22214 000108FC 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 22215 00010904 803805                  	cmp byte [rax], T_undefined
 22216 00010907 0F848B230000            	je L_error_fvar_undefined
 22217 0001090D 803804                  	cmp byte [rax], T_closure
 22218 00010910 0F8506240000            	jne L_error_non_closure
 22219 00010916 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22220 00010919 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22221 0001091C 50                      	push rax
 22222 0001091D 488B4528                	mov rax, PARAM(1)	; param i
 22223 00010921 50                      	push rax
 22224 00010922 488B4520                	mov rax, PARAM(0)	; param target
 22225 00010926 50                      	push rax
 22226 00010927 6A05                    	push 5	; arg count
 22227 00010929 488B4510                	mov rax, ENV
 22228 0001092D 488B00                  	mov rax, qword [rax + 8 * 0]
 22229 00010930 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 22230 00010934 488B00                  	mov rax, qword [rax]
 22231 00010937 803804                  	cmp byte [rax], T_closure
 22232 0001093A 0F85DC230000            	jne L_error_non_closure
 22233 00010940 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22234 00010943 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22235 00010946 50                      	push rax
 22236 00010947 6A01                    	push 1	; arg count
 22237 00010949 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22238 0001094E E872240000              	call malloc
 22239 00010953 50                      	push rax
 22240 00010954 BF18000000              	mov rdi, 8 * 3	; new rib
 22241 00010959 E867240000              	call malloc
 22242 0001095E 50                      	push rax
 22243 0001095F BF18000000              	mov rdi, 8 * 3	; extended env
 22244 00010964 E85C240000              	call malloc
 22245 00010969 488B7D10                	mov rdi, ENV
 22246 0001096D BE00000000              	mov rsi, 0
 22247 00010972 BA01000000              	mov rdx, 1
 22248                                  .L_lambda_simple_env_loop_016b:	; ext_env[i + 1] <-- env[i]
 22249 00010977 4883FE02                	cmp rsi, 2
 22250 0001097B 7410                    	je .L_lambda_simple_env_end_016b
 22251 0001097D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22252 00010981 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22253 00010985 48FFC6                  	inc rsi
 22254 00010988 48FFC2                  	inc rdx
 22255 0001098B EBEA                    	jmp .L_lambda_simple_env_loop_016b
 22256                                  .L_lambda_simple_env_end_016b:
 22257 0001098D 5B                      	pop rbx
 22258 0001098E BE00000000              	mov rsi, 0
 22259                                  .L_lambda_simple_params_loop_016b:	; copy params
 22260 00010993 4883FE03                	cmp rsi, 3
 22261 00010997 740E                    	je .L_lambda_simple_params_end_016b
 22262 00010999 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22263 0001099E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22264 000109A2 48FFC6                  	inc rsi
 22265 000109A5 EBEC                    	jmp .L_lambda_simple_params_loop_016b
 22266                                  .L_lambda_simple_params_end_016b:
 22267 000109A7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22268 000109AA 4889C3                  	mov rbx, rax
 22269 000109AD 58                      	pop rax
 22270 000109AE C60004                  	mov byte [rax], T_closure
 22271 000109B1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22272 000109B5 48C74009[BF090100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_016b
 22273 000109BD EB79                    	jmp .L_lambda_simple_end_016b
 22274                                  .L_lambda_simple_code_016b:	; lambda-simple body
 22275 000109BF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22276 000109C5 740B                    	je .L_lambda_simple_arity_check_ok_016b
 22277 000109C7 FF742410                	push qword [rsp + 8 * 2]
 22278 000109CB 6A01                    	push 1
 22279 000109CD E9AC230000              	jmp L_error_incorrect_arity_simple
 22280                                  .L_lambda_simple_arity_check_ok_016b:
 22281 000109D2 C8000000                	enter 0, 0
 22282                                  	; preparing a non-tail-call
 22283                                  	; preparing a non-tail-call
 22284 000109D6 488B4510                	mov rax, ENV
 22285 000109DA 488B00                  	mov rax, qword [rax + 8 * 0]
 22286 000109DD 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 22287 000109E1 50                      	push rax
 22288 000109E2 6A01                    	push 1	; arg count
 22289 000109E4 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 22290 000109EC 803805                  	cmp byte [rax], T_undefined
 22291 000109EF 0F84A3220000            	je L_error_fvar_undefined
 22292 000109F5 803804                  	cmp byte [rax], T_closure
 22293 000109F8 0F851E230000            	jne L_error_non_closure
 22294 000109FE FF7001                  	push SOB_CLOSURE_ENV(rax)
 22295 00010A01 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22296 00010A04 50                      	push rax
 22297 00010A05 488B4520                	mov rax, PARAM(0)	; param i
 22298 00010A09 50                      	push rax
 22299 00010A0A 488B4510                	mov rax, ENV
 22300 00010A0E 488B00                  	mov rax, qword [rax + 8 * 0]
 22301 00010A11 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 22302 00010A14 50                      	push rax
 22303 00010A15 6A03                    	push 3	; arg count
 22304 00010A17 488B4510                	mov rax, ENV
 22305 00010A1B 488B4008                	mov rax, qword [rax + 8 * 1]
 22306 00010A1F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22307 00010A22 488B00                  	mov rax, qword [rax]
 22308 00010A25 803804                  	cmp byte [rax], T_closure
 22309 00010A28 0F85EE220000            	jne L_error_non_closure
 22310 00010A2E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22311 00010A31 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22312 00010A34 C9                      	leave
 22313 00010A35 C21800                  	ret AND_KILL_FRAME(1)
 22314                                  .L_lambda_simple_end_016b:	; new closure is in rax
 22315 00010A38 803804                  	cmp byte [rax], T_closure
 22316 00010A3B 0F85DB220000            	jne L_error_non_closure
 22317 00010A41 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22318 00010A44 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22319                                  .L_if_end_0121:
 22320 00010A47 C9                      	leave
 22321 00010A48 C22800                  	ret AND_KILL_FRAME(3)
 22322                                  .L_lambda_simple_end_016a:	; new closure is in rax
 22323 00010A4B 50                      	push rax
 22324 00010A4C 488B4520                	mov rax, PARAM(0)	; param run
 22325 00010A50 8F00                    	pop qword [rax]
 22326 00010A52 48B8-                   	mov rax, sob_void
 22326 00010A54 [0000000000000000] 
 22327                                  
 22328 00010A5C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22329 00010A61 E85F230000              	call malloc
 22330 00010A66 50                      	push rax
 22331 00010A67 BF10000000              	mov rdi, 8 * 2	; new rib
 22332 00010A6C E854230000              	call malloc
 22333 00010A71 50                      	push rax
 22334 00010A72 BF10000000              	mov rdi, 8 * 2	; extended env
 22335 00010A77 E849230000              	call malloc
 22336 00010A7C 488B7D10                	mov rdi, ENV
 22337 00010A80 BE00000000              	mov rsi, 0
 22338 00010A85 BA01000000              	mov rdx, 1
 22339                                  .L_lambda_simple_env_loop_016c:	; ext_env[i + 1] <-- env[i]
 22340 00010A8A 4883FE01                	cmp rsi, 1
 22341 00010A8E 7410                    	je .L_lambda_simple_env_end_016c
 22342 00010A90 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22343 00010A94 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22344 00010A98 48FFC6                  	inc rsi
 22345 00010A9B 48FFC2                  	inc rdx
 22346 00010A9E EBEA                    	jmp .L_lambda_simple_env_loop_016c
 22347                                  .L_lambda_simple_env_end_016c:
 22348 00010AA0 5B                      	pop rbx
 22349 00010AA1 BE00000000              	mov rsi, 0
 22350                                  .L_lambda_simple_params_loop_016c:	; copy params
 22351 00010AA6 4883FE02                	cmp rsi, 2
 22352 00010AAA 740E                    	je .L_lambda_simple_params_end_016c
 22353 00010AAC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22354 00010AB1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22355 00010AB5 48FFC6                  	inc rsi
 22356 00010AB8 EBEC                    	jmp .L_lambda_simple_params_loop_016c
 22357                                  .L_lambda_simple_params_end_016c:
 22358 00010ABA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22359 00010ABD 4889C3                  	mov rbx, rax
 22360 00010AC0 58                      	pop rax
 22361 00010AC1 C60004                  	mov byte [rax], T_closure
 22362 00010AC4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22363 00010AC8 48C74009[D50A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_016c
 22364 00010AD0 E946010000              	jmp .L_lambda_simple_end_016c
 22365                                  .L_lambda_simple_code_016c:	; lambda-simple body
 22366 00010AD5 48837C241005            	cmp qword [rsp + 8 * 2], 5
 22367 00010ADB 740B                    	je .L_lambda_simple_arity_check_ok_016c
 22368 00010ADD FF742410                	push qword [rsp + 8 * 2]
 22369 00010AE1 6A05                    	push 5
 22370 00010AE3 E996220000              	jmp L_error_incorrect_arity_simple
 22371                                  .L_lambda_simple_arity_check_ok_016c:
 22372 00010AE8 C8000000                	enter 0, 0
 22373                                  	; preparing a non-tail-call
 22374 00010AEC 488B4540                	mov rax, PARAM(4)	; param limit
 22375 00010AF0 50                      	push rax
 22376 00010AF1 488B4538                	mov rax, PARAM(3)	; param j
 22377 00010AF5 50                      	push rax
 22378 00010AF6 6A02                    	push 2	; arg count
 22379 00010AF8 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 22380 00010B00 803805                  	cmp byte [rax], T_undefined
 22381 00010B03 0F848F210000            	je L_error_fvar_undefined
 22382 00010B09 803804                  	cmp byte [rax], T_closure
 22383 00010B0C 0F850A220000            	jne L_error_non_closure
 22384 00010B12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22385 00010B15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22386 00010B18 483D[02000000]          	cmp rax, sob_boolean_false
 22387 00010B1E 0F84EF000000            	je .L_if_else_0122
 22388                                  	; preparing a non-tail-call
 22389                                  	; preparing a non-tail-call
 22390 00010B24 488B4538                	mov rax, PARAM(3)	; param j
 22391 00010B28 50                      	push rax
 22392 00010B29 488B4530                	mov rax, PARAM(2)	; param vec
 22393 00010B2D 50                      	push rax
 22394 00010B2E 6A02                    	push 2	; arg count
 22395 00010B30 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 22396 00010B38 803805                  	cmp byte [rax], T_undefined
 22397 00010B3B 0F8457210000            	je L_error_fvar_undefined
 22398 00010B41 803804                  	cmp byte [rax], T_closure
 22399 00010B44 0F85D2210000            	jne L_error_non_closure
 22400 00010B4A FF7001                  	push SOB_CLOSURE_ENV(rax)
 22401 00010B4D FF5009                  	call SOB_CLOSURE_CODE(rax)
 22402 00010B50 50                      	push rax
 22403 00010B51 488B4528                	mov rax, PARAM(1)	; param i
 22404 00010B55 50                      	push rax
 22405 00010B56 488B4520                	mov rax, PARAM(0)	; param target
 22406 00010B5A 50                      	push rax
 22407 00010B5B 6A03                    	push 3	; arg count
 22408 00010B5D 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 22409 00010B65 803805                  	cmp byte [rax], T_undefined
 22410 00010B68 0F842A210000            	je L_error_fvar_undefined
 22411 00010B6E 803804                  	cmp byte [rax], T_closure
 22412 00010B71 0F85A5210000            	jne L_error_non_closure
 22413 00010B77 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22414 00010B7A FF5009                  	call SOB_CLOSURE_CODE(rax)
 22415                                  
 22416                                  	; preparing a non-tail-call
 22417 00010B7D 488B4540                	mov rax, PARAM(4)	; param limit
 22418 00010B81 50                      	push rax
 22419                                  	; preparing a non-tail-call
 22420 00010B82 48B8-                   	mov rax, L_constants + 2270
 22420 00010B84 [DE08000000000000] 
 22421 00010B8C 50                      	push rax
 22422 00010B8D 488B4538                	mov rax, PARAM(3)	; param j
 22423 00010B91 50                      	push rax
 22424 00010B92 6A02                    	push 2	; arg count
 22425 00010B94 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22426 00010B9C 803805                  	cmp byte [rax], T_undefined
 22427 00010B9F 0F84F3200000            	je L_error_fvar_undefined
 22428 00010BA5 803804                  	cmp byte [rax], T_closure
 22429 00010BA8 0F856E210000            	jne L_error_non_closure
 22430 00010BAE FF7001                  	push SOB_CLOSURE_ENV(rax)
 22431 00010BB1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22432 00010BB4 50                      	push rax
 22433 00010BB5 488B4530                	mov rax, PARAM(2)	; param vec
 22434 00010BB9 50                      	push rax
 22435                                  	; preparing a non-tail-call
 22436 00010BBA 48B8-                   	mov rax, L_constants + 2270
 22436 00010BBC [DE08000000000000] 
 22437 00010BC4 50                      	push rax
 22438 00010BC5 488B4528                	mov rax, PARAM(1)	; param i
 22439 00010BC9 50                      	push rax
 22440 00010BCA 6A02                    	push 2	; arg count
 22441 00010BCC 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22442 00010BD4 803805                  	cmp byte [rax], T_undefined
 22443 00010BD7 0F84BB200000            	je L_error_fvar_undefined
 22444 00010BDD 803804                  	cmp byte [rax], T_closure
 22445 00010BE0 0F8536210000            	jne L_error_non_closure
 22446 00010BE6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22447 00010BE9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22448 00010BEC 50                      	push rax
 22449 00010BED 488B4520                	mov rax, PARAM(0)	; param target
 22450 00010BF1 50                      	push rax
 22451 00010BF2 6A05                    	push 5	; arg count
 22452 00010BF4 488B4510                	mov rax, ENV
 22453 00010BF8 488B00                  	mov rax, qword [rax + 8 * 0]
 22454 00010BFB 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 22455 00010BFF 488B00                  	mov rax, qword [rax]
 22456 00010C02 803804                  	cmp byte [rax], T_closure
 22457 00010C05 0F8511210000            	jne L_error_non_closure
 22458 00010C0B FF7001                  	push SOB_CLOSURE_ENV(rax)
 22459 00010C0E FF5009                  	call SOB_CLOSURE_CODE(rax)
 22460 00010C11 EB04                    	jmp .L_if_end_0122
 22461                                  .L_if_else_0122:
 22462 00010C13 488B4528                	mov rax, PARAM(1)	; param i
 22463                                  .L_if_end_0122:
 22464 00010C17 C9                      	leave
 22465 00010C18 C23800                  	ret AND_KILL_FRAME(5)
 22466                                  .L_lambda_simple_end_016c:	; new closure is in rax
 22467 00010C1B 50                      	push rax
 22468 00010C1C 488B4528                	mov rax, PARAM(1)	; param add
 22469 00010C20 8F00                    	pop qword [rax]
 22470 00010C22 48B8-                   	mov rax, sob_void
 22470 00010C24 [0000000000000000] 
 22471                                  
 22472 00010C2C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22473 00010C31 E88F210000              	call malloc
 22474 00010C36 50                      	push rax
 22475 00010C37 BF10000000              	mov rdi, 8 * 2	; new rib
 22476 00010C3C E884210000              	call malloc
 22477 00010C41 50                      	push rax
 22478 00010C42 BF10000000              	mov rdi, 8 * 2	; extended env
 22479 00010C47 E879210000              	call malloc
 22480 00010C4C 488B7D10                	mov rdi, ENV
 22481 00010C50 BE00000000              	mov rsi, 0
 22482 00010C55 BA01000000              	mov rdx, 1
 22483                                  .L_lambda_opt_env_loop_0030:	; ext_env[i + 1] <-- env[i]
 22484 00010C5A 4883FE01                	cmp rsi, 1
 22485 00010C5E 7410                    	je .L_lambda_opt_env_end_0030
 22486 00010C60 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22487 00010C64 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22488 00010C68 48FFC6                  	inc rsi
 22489 00010C6B 48FFC2                  	inc rdx
 22490 00010C6E EBEA                    	jmp .L_lambda_opt_env_loop_0030
 22491                                  .L_lambda_opt_env_end_0030:
 22492 00010C70 5B                      	pop rbx
 22493 00010C71 BE00000000              	mov rsi, 0
 22494                                  .L_lambda_opt_params_loop_0030:	; copy params
 22495 00010C76 4883FE02                	cmp rsi, 2
 22496 00010C7A 740E                    	je .L_lambda_opt_params_end_0030
 22497 00010C7C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22498 00010C81 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22499 00010C85 48FFC6                  	inc rsi
 22500 00010C88 EBEC                    	jmp .L_lambda_opt_params_loop_0030
 22501                                  .L_lambda_opt_params_end_0030:
 22502 00010C8A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22503 00010C8D 4889C3                  	mov rbx, rax
 22504 00010C90 58                      	pop rax
 22505 00010C91 C60004                  	mov byte [rax], T_closure
 22506 00010C94 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22507 00010C98 48C74009[A50C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0030
 22508 00010CA0 E976020000              	jmp .L_lambda_opt_end_0030
 22509                                  .L_lambda_opt_code_0030:	; lambda-opt body
 22510 00010CA5 48837C241000            	cmp qword [rsp + 8 * 2], 0
 22511 00010CAB 7411                    	je .L_lambda_opt_arity_check_exact_0030
 22512 00010CAD 0F8F08010000            	jg .L_lambda_opt_arity_check_more_0030
 22513 00010CB3 FF742410                	push qword [rsp + 8 * 2]
 22514 00010CB7 6A00                    	push 0
 22515 00010CB9 E9D4200000              	jmp L_error_incorrect_arity_opt
 22516                                  .L_lambda_opt_arity_check_exact_0030:
 22517 00010CBE 4883EC08                	sub rsp, 8
 22518 00010CC2 488B442408              	mov rax, qword[rsp + 8 *1]
 22519 00010CC7 48890424                	mov qword[rsp], rax  
 22520 00010CCB 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 22521 00010CD0 4889442408              	mov qword[rsp + 8 * 1], rax
 22522 00010CD5 B801000000              	mov rax, 1
 22523 00010CDA 4889442410              	mov qword[rsp + 8 *2], rax
 22524 00010CDF 48B8-                   	mov rax, sob_nil
 22524 00010CE1 [0100000000000000] 
 22525 00010CE9 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 22526 00010CEE C8000000                	enter 0, 0
 22527                                  	; preparing a non-tail-call
 22528 00010CF2 488B4520                	mov rax, PARAM(0)	; param vectors
 22529 00010CF6 50                      	push rax
 22530 00010CF7 48B8-                   	mov rax, L_constants + 2135
 22530 00010CF9 [5708000000000000] 
 22531 00010D01 50                      	push rax
 22532                                  	; preparing a non-tail-call
 22533                                  	; preparing a non-tail-call
 22534                                  	; preparing a non-tail-call
 22535 00010D02 488B4520                	mov rax, PARAM(0)	; param vectors
 22536 00010D06 50                      	push rax
 22537 00010D07 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 22538 00010D0F 803805                  	cmp byte [rax], T_undefined
 22539 00010D12 0F84801F0000            	je L_error_fvar_undefined
 22540 00010D18 50                      	push rax
 22541 00010D19 6A02                    	push 2	; arg count
 22542 00010D1B 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 22543 00010D23 803805                  	cmp byte [rax], T_undefined
 22544 00010D26 0F846C1F0000            	je L_error_fvar_undefined
 22545 00010D2C 803804                  	cmp byte [rax], T_closure
 22546 00010D2F 0F85E71F0000            	jne L_error_non_closure
 22547 00010D35 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22548 00010D38 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22549 00010D3B 50                      	push rax
 22550 00010D3C 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22551 00010D44 803805                  	cmp byte [rax], T_undefined
 22552 00010D47 0F844B1F0000            	je L_error_fvar_undefined
 22553 00010D4D 50                      	push rax
 22554 00010D4E 6A02                    	push 2	; arg count
 22555 00010D50 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 22556 00010D58 803805                  	cmp byte [rax], T_undefined
 22557 00010D5B 0F84371F0000            	je L_error_fvar_undefined
 22558 00010D61 803804                  	cmp byte [rax], T_closure
 22559 00010D64 0F85B21F0000            	jne L_error_non_closure
 22560 00010D6A FF7001                  	push SOB_CLOSURE_ENV(rax)
 22561 00010D6D FF5009                  	call SOB_CLOSURE_CODE(rax)
 22562 00010D70 50                      	push rax
 22563 00010D71 6A01                    	push 1	; arg count
 22564 00010D73 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 22565 00010D7B 803805                  	cmp byte [rax], T_undefined
 22566 00010D7E 0F84141F0000            	je L_error_fvar_undefined
 22567 00010D84 803804                  	cmp byte [rax], T_closure
 22568 00010D87 0F858F1F0000            	jne L_error_non_closure
 22569 00010D8D FF7001                  	push SOB_CLOSURE_ENV(rax)
 22570 00010D90 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22571 00010D93 50                      	push rax
 22572 00010D94 6A03                    	push 3	; arg count
 22573 00010D96 488B4510                	mov rax, ENV
 22574 00010D9A 488B00                  	mov rax, qword [rax + 8 * 0]
 22575 00010D9D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22576 00010DA0 488B00                  	mov rax, qword [rax]
 22577 00010DA3 803804                  	cmp byte [rax], T_closure
 22578 00010DA6 0F85701F0000            	jne L_error_non_closure
 22579 00010DAC FF7001                  	push SOB_CLOSURE_ENV(rax)
 22580 00010DAF FF5009                  	call SOB_CLOSURE_CODE(rax)
 22581 00010DB2 C9                      	leave
 22582 00010DB3 C21800                  	ret AND_KILL_FRAME(1)
 22583 00010DB6 E960010000              	jmp .L_lambda_opt_end_0030	; new closure is in rax
 22584                                  .L_lambda_opt_arity_check_more_0030:
 22585 00010DBB 488B442410              	mov rax, qword[rsp + 2 * 8]
 22586 00010DC0 4889C7                  	mov rdi, rax
 22587 00010DC3 49B9-                   	mov r9, sob_nil
 22587 00010DC5 [0100000000000000] 
 22588 00010DCD 4C8B442410              	mov r8, qword[rsp+2*8]
 22589                                  .L_lambda_opt_stack_shrink_loop_0030:
 22590 00010DD2 4983F800                	cmp r8, 0
 22591 00010DD6 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0030
 22592 00010DD8 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 22593 00010DDD BF11000000              	mov rdi, 1+8+8	;for pair
 22594 00010DE2 E8DE1F0000              	call malloc	 ;to create the pair in the stack
 22595 00010DE7 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 22596 00010DEA 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 22597 00010DEE 4C894809                 	mov qword[rax+1+8],r9
 22598 00010DF2 4989C1                  	mov r9 , rax	 ; for the recursion 
 22599 00010DF5 49FFC8                  	dec r8
 22600 00010DF8 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0030
 22601                                  .L_lambda_opt_stack_shrink_loop_exit_0030:
 22602 00010DFA 488B442410              	mov rax, qword[rsp + 2 * 8]
 22603 00010DFF BF01000000              	mov rdi, 1
 22604 00010E04 4829F8                  	sub rax, rdi
 22605 00010E07 4889C7                  	mov rdi, rax
 22606 00010E0A 486BC008                	imul rax,8
 22607 00010E0E 4801C4                  	add rsp, rax
 22608 00010E11 4889E0                  	mov rax, rsp
 22609 00010E14 4989F8                  	mov r8, rdi
 22610 00010E17 4D6BC008                	imul r8, 8
 22611 00010E1B 4C29C0                  	sub rax, r8
 22612 00010E1E 4989C2                  	mov r10, rax	; holds the original ret in the stack
 22613 00010E21 4983C218                	add r10, 8*3
 22614 00010E25 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 22615 00010E29 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 22616 00010E2C 4D6BC008                	imul r8,8
 22617 00010E30 4C01C0                  	add rax, r8
 22618 00010E33 4C8908                  	mov qword[rax] ,r9
 22619 00010E36 4983EA18                 	sub r10, 8*3
 22620 00010E3A 48C744241001000000      	mov qword [rsp+2*8], 1
 22621 00010E43 498B4208                	mov rax, qword[r10 + 1 * 8]
 22622 00010E47 4889442408              	mov qword[rsp + 1*8] ,rax
 22623 00010E4C 498B02                  	mov rax, qword[r10]
 22624 00010E4F 48890424                	mov qword[rsp], rax
 22625 00010E53 C8000000                	enter 0, 0
 22626                                  	; preparing a non-tail-call
 22627 00010E57 488B4520                	mov rax, PARAM(0)	; param vectors
 22628 00010E5B 50                      	push rax
 22629 00010E5C 48B8-                   	mov rax, L_constants + 2135
 22629 00010E5E [5708000000000000] 
 22630 00010E66 50                      	push rax
 22631                                  	; preparing a non-tail-call
 22632                                  	; preparing a non-tail-call
 22633                                  	; preparing a non-tail-call
 22634 00010E67 488B4520                	mov rax, PARAM(0)	; param vectors
 22635 00010E6B 50                      	push rax
 22636 00010E6C 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 22637 00010E74 803805                  	cmp byte [rax], T_undefined
 22638 00010E77 0F841B1E0000            	je L_error_fvar_undefined
 22639 00010E7D 50                      	push rax
 22640 00010E7E 6A02                    	push 2	; arg count
 22641 00010E80 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 22642 00010E88 803805                  	cmp byte [rax], T_undefined
 22643 00010E8B 0F84071E0000            	je L_error_fvar_undefined
 22644 00010E91 803804                  	cmp byte [rax], T_closure
 22645 00010E94 0F85821E0000            	jne L_error_non_closure
 22646 00010E9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 22647 00010E9D FF5009                  	call SOB_CLOSURE_CODE(rax)
 22648 00010EA0 50                      	push rax
 22649 00010EA1 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22650 00010EA9 803805                  	cmp byte [rax], T_undefined
 22651 00010EAC 0F84E61D0000            	je L_error_fvar_undefined
 22652 00010EB2 50                      	push rax
 22653 00010EB3 6A02                    	push 2	; arg count
 22654 00010EB5 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 22655 00010EBD 803805                  	cmp byte [rax], T_undefined
 22656 00010EC0 0F84D21D0000            	je L_error_fvar_undefined
 22657 00010EC6 803804                  	cmp byte [rax], T_closure
 22658 00010EC9 0F854D1E0000            	jne L_error_non_closure
 22659 00010ECF FF7001                  	push SOB_CLOSURE_ENV(rax)
 22660 00010ED2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22661 00010ED5 50                      	push rax
 22662 00010ED6 6A01                    	push 1	; arg count
 22663 00010ED8 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 22664 00010EE0 803805                  	cmp byte [rax], T_undefined
 22665 00010EE3 0F84AF1D0000            	je L_error_fvar_undefined
 22666 00010EE9 803804                  	cmp byte [rax], T_closure
 22667 00010EEC 0F852A1E0000            	jne L_error_non_closure
 22668 00010EF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22669 00010EF5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22670 00010EF8 50                      	push rax
 22671 00010EF9 6A03                    	push 3	; arg count
 22672 00010EFB 488B4510                	mov rax, ENV
 22673 00010EFF 488B00                  	mov rax, qword [rax + 8 * 0]
 22674 00010F02 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22675 00010F05 488B00                  	mov rax, qword [rax]
 22676 00010F08 803804                  	cmp byte [rax], T_closure
 22677 00010F0B 0F850B1E0000            	jne L_error_non_closure
 22678 00010F11 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22679 00010F14 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22680 00010F17 C9                      	leave
 22681 00010F18 C21800                  	ret AND_KILL_FRAME(1)
 22682                                  .L_lambda_opt_end_0030:	; new closure is in rax
 22683 00010F1B C9                      	leave
 22684 00010F1C C22000                  	ret AND_KILL_FRAME(2)
 22685                                  .L_lambda_simple_end_0169:	; new closure is in rax
 22686 00010F1F 803804                  	cmp byte [rax], T_closure
 22687 00010F22 0F85F41D0000            	jne L_error_non_closure
 22688 00010F28 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22689 00010F2B FF5009                  	call SOB_CLOSURE_CODE(rax)
 22690 00010F2E 48890425[33170000]      	mov qword [free_var_142], rax
 22691 00010F36 48B8-                   	mov rax, sob_void
 22691 00010F38 [0000000000000000] 
 22692                                  
 22693 00010F40 4889C7                  	mov rdi, rax
 22694 00010F43 E8D2200000              	call print_sexpr_if_not_void
 22695 00010F48 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22696 00010F4D E8731E0000              	call malloc
 22697 00010F52 50                      	push rax
 22698 00010F53 BF00000000              	mov rdi, 8 * 0	; new rib
 22699 00010F58 E8681E0000              	call malloc
 22700 00010F5D 50                      	push rax
 22701 00010F5E BF08000000              	mov rdi, 8 * 1	; extended env
 22702 00010F63 E85D1E0000              	call malloc
 22703 00010F68 488B7D10                	mov rdi, ENV
 22704 00010F6C BE00000000              	mov rsi, 0
 22705 00010F71 BA01000000              	mov rdx, 1
 22706                                  .L_lambda_simple_env_loop_016d:	; ext_env[i + 1] <-- env[i]
 22707 00010F76 4883FE00                	cmp rsi, 0
 22708 00010F7A 7410                    	je .L_lambda_simple_env_end_016d
 22709 00010F7C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22710 00010F80 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22711 00010F84 48FFC6                  	inc rsi
 22712 00010F87 48FFC2                  	inc rdx
 22713 00010F8A EBEA                    	jmp .L_lambda_simple_env_loop_016d
 22714                                  .L_lambda_simple_env_end_016d:
 22715 00010F8C 5B                      	pop rbx
 22716 00010F8D BE00000000              	mov rsi, 0
 22717                                  .L_lambda_simple_params_loop_016d:	; copy params
 22718 00010F92 4883FE00                	cmp rsi, 0
 22719 00010F96 740E                    	je .L_lambda_simple_params_end_016d
 22720 00010F98 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22721 00010F9D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22722 00010FA1 48FFC6                  	inc rsi
 22723 00010FA4 EBEC                    	jmp .L_lambda_simple_params_loop_016d
 22724                                  .L_lambda_simple_params_end_016d:
 22725 00010FA6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22726 00010FA9 4889C3                  	mov rbx, rax
 22727 00010FAC 58                      	pop rax
 22728 00010FAD C60004                  	mov byte [rax], T_closure
 22729 00010FB0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22730 00010FB4 48C74009[C10F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_016d
 22731 00010FBC E988000000              	jmp .L_lambda_simple_end_016d
 22732                                  .L_lambda_simple_code_016d:	; lambda-simple body
 22733 00010FC1 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22734 00010FC7 740B                    	je .L_lambda_simple_arity_check_ok_016d
 22735 00010FC9 FF742410                	push qword [rsp + 8 * 2]
 22736 00010FCD 6A01                    	push 1
 22737 00010FCF E9AA1D0000              	jmp L_error_incorrect_arity_simple
 22738                                  .L_lambda_simple_arity_check_ok_016d:
 22739 00010FD4 C8000000                	enter 0, 0
 22740                                  	; preparing a non-tail-call
 22741                                  	; preparing a non-tail-call
 22742                                  	; preparing a non-tail-call
 22743 00010FD8 488B4520                	mov rax, PARAM(0)	; param str
 22744 00010FDC 50                      	push rax
 22745 00010FDD 6A01                    	push 1	; arg count
 22746 00010FDF 488B0425[AC150000]      	mov rax, qword [free_var_119]	; free var string->list
 22747 00010FE7 803805                  	cmp byte [rax], T_undefined
 22748 00010FEA 0F84A81C0000            	je L_error_fvar_undefined
 22749 00010FF0 803804                  	cmp byte [rax], T_closure
 22750 00010FF3 0F85231D0000            	jne L_error_non_closure
 22751 00010FF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22752 00010FFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 22753 00010FFF 50                      	push rax
 22754 00011000 6A01                    	push 1	; arg count
 22755 00011002 488B0425[9B150000]      	mov rax, qword [free_var_118]	; free var reverse
 22756 0001100A 803805                  	cmp byte [rax], T_undefined
 22757 0001100D 0F84851C0000            	je L_error_fvar_undefined
 22758 00011013 803804                  	cmp byte [rax], T_closure
 22759 00011016 0F85001D0000            	jne L_error_non_closure
 22760 0001101C FF7001                  	push SOB_CLOSURE_ENV(rax)
 22761 0001101F FF5009                  	call SOB_CLOSURE_CODE(rax)
 22762 00011022 50                      	push rax
 22763 00011023 6A01                    	push 1	; arg count
 22764 00011025 488B0425[03140000]      	mov rax, qword [free_var_94]	; free var list->string
 22765 0001102D 803805                  	cmp byte [rax], T_undefined
 22766 00011030 0F84621C0000            	je L_error_fvar_undefined
 22767 00011036 803804                  	cmp byte [rax], T_closure
 22768 00011039 0F85DD1C0000            	jne L_error_non_closure
 22769 0001103F FF7001                  	push SOB_CLOSURE_ENV(rax)
 22770 00011042 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22771 00011045 C9                      	leave
 22772 00011046 C21800                  	ret AND_KILL_FRAME(1)
 22773                                  .L_lambda_simple_end_016d:	; new closure is in rax
 22774 00011049 48890425[56160000]      	mov qword [free_var_129], rax
 22775 00011051 48B8-                   	mov rax, sob_void
 22775 00011053 [0000000000000000] 
 22776                                  
 22777 0001105B 4889C7                  	mov rdi, rax
 22778 0001105E E8B71F0000              	call print_sexpr_if_not_void
 22779 00011063 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22780 00011068 E8581D0000              	call malloc
 22781 0001106D 50                      	push rax
 22782 0001106E BF00000000              	mov rdi, 8 * 0	; new rib
 22783 00011073 E84D1D0000              	call malloc
 22784 00011078 50                      	push rax
 22785 00011079 BF08000000              	mov rdi, 8 * 1	; extended env
 22786 0001107E E8421D0000              	call malloc
 22787 00011083 488B7D10                	mov rdi, ENV
 22788 00011087 BE00000000              	mov rsi, 0
 22789 0001108C BA01000000              	mov rdx, 1
 22790                                  .L_lambda_simple_env_loop_016e:	; ext_env[i + 1] <-- env[i]
 22791 00011091 4883FE00                	cmp rsi, 0
 22792 00011095 7410                    	je .L_lambda_simple_env_end_016e
 22793 00011097 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22794 0001109B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22795 0001109F 48FFC6                  	inc rsi
 22796 000110A2 48FFC2                  	inc rdx
 22797 000110A5 EBEA                    	jmp .L_lambda_simple_env_loop_016e
 22798                                  .L_lambda_simple_env_end_016e:
 22799 000110A7 5B                      	pop rbx
 22800 000110A8 BE00000000              	mov rsi, 0
 22801                                  .L_lambda_simple_params_loop_016e:	; copy params
 22802 000110AD 4883FE00                	cmp rsi, 0
 22803 000110B1 740E                    	je .L_lambda_simple_params_end_016e
 22804 000110B3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22805 000110B8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22806 000110BC 48FFC6                  	inc rsi
 22807 000110BF EBEC                    	jmp .L_lambda_simple_params_loop_016e
 22808                                  .L_lambda_simple_params_end_016e:
 22809 000110C1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22810 000110C4 4889C3                  	mov rbx, rax
 22811 000110C7 58                      	pop rax
 22812 000110C8 C60004                  	mov byte [rax], T_closure
 22813 000110CB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22814 000110CF 48C74009[DC100100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_016e
 22815 000110D7 E988000000              	jmp .L_lambda_simple_end_016e
 22816                                  .L_lambda_simple_code_016e:	; lambda-simple body
 22817 000110DC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22818 000110E2 740B                    	je .L_lambda_simple_arity_check_ok_016e
 22819 000110E4 FF742410                	push qword [rsp + 8 * 2]
 22820 000110E8 6A01                    	push 1
 22821 000110EA E98F1C0000              	jmp L_error_incorrect_arity_simple
 22822                                  .L_lambda_simple_arity_check_ok_016e:
 22823 000110EF C8000000                	enter 0, 0
 22824                                  	; preparing a non-tail-call
 22825                                  	; preparing a non-tail-call
 22826                                  	; preparing a non-tail-call
 22827 000110F3 488B4520                	mov rax, PARAM(0)	; param vec
 22828 000110F7 50                      	push rax
 22829 000110F8 6A01                    	push 1	; arg count
 22830 000110FA 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 22831 00011102 803805                  	cmp byte [rax], T_undefined
 22832 00011105 0F848D1B0000            	je L_error_fvar_undefined
 22833 0001110B 803804                  	cmp byte [rax], T_closure
 22834 0001110E 0F85081C0000            	jne L_error_non_closure
 22835 00011114 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22836 00011117 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22837 0001111A 50                      	push rax
 22838 0001111B 6A01                    	push 1	; arg count
 22839 0001111D 488B0425[9B150000]      	mov rax, qword [free_var_118]	; free var reverse
 22840 00011125 803805                  	cmp byte [rax], T_undefined
 22841 00011128 0F846A1B0000            	je L_error_fvar_undefined
 22842 0001112E 803804                  	cmp byte [rax], T_closure
 22843 00011131 0F85E51B0000            	jne L_error_non_closure
 22844 00011137 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22845 0001113A FF5009                  	call SOB_CLOSURE_CODE(rax)
 22846 0001113D 50                      	push rax
 22847 0001113E 6A01                    	push 1	; arg count
 22848 00011140 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 22849 00011148 803805                  	cmp byte [rax], T_undefined
 22850 0001114B 0F84471B0000            	je L_error_fvar_undefined
 22851 00011151 803804                  	cmp byte [rax], T_closure
 22852 00011154 0F85C21B0000            	jne L_error_non_closure
 22853 0001115A FF7001                  	push SOB_CLOSURE_ENV(rax)
 22854 0001115D FF5009                  	call SOB_CLOSURE_CODE(rax)
 22855 00011160 C9                      	leave
 22856 00011161 C21800                  	ret AND_KILL_FRAME(1)
 22857                                  .L_lambda_simple_end_016e:	; new closure is in rax
 22858 00011164 48890425[66170000]      	mov qword [free_var_145], rax
 22859 0001116C 48B8-                   	mov rax, sob_void
 22859 0001116E [0000000000000000] 
 22860                                  
 22861 00011176 4889C7                  	mov rdi, rax
 22862 00011179 E89C1E0000              	call print_sexpr_if_not_void
 22863                                  	; preparing a non-tail-call
 22864 0001117E 48B8-                   	mov rax, L_constants + 1993
 22864 00011180 [C907000000000000] 
 22865 00011188 50                      	push rax
 22866 00011189 6A01                    	push 1	; arg count
 22867 0001118B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22868 00011190 E8301C0000              	call malloc
 22869 00011195 50                      	push rax
 22870 00011196 BF00000000              	mov rdi, 8 * 0	; new rib
 22871 0001119B E8251C0000              	call malloc
 22872 000111A0 50                      	push rax
 22873 000111A1 BF08000000              	mov rdi, 8 * 1	; extended env
 22874 000111A6 E81A1C0000              	call malloc
 22875 000111AB 488B7D10                	mov rdi, ENV
 22876 000111AF BE00000000              	mov rsi, 0
 22877 000111B4 BA01000000              	mov rdx, 1
 22878                                  .L_lambda_simple_env_loop_016f:	; ext_env[i + 1] <-- env[i]
 22879 000111B9 4883FE00                	cmp rsi, 0
 22880 000111BD 7410                    	je .L_lambda_simple_env_end_016f
 22881 000111BF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22882 000111C3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22883 000111C7 48FFC6                  	inc rsi
 22884 000111CA 48FFC2                  	inc rdx
 22885 000111CD EBEA                    	jmp .L_lambda_simple_env_loop_016f
 22886                                  .L_lambda_simple_env_end_016f:
 22887 000111CF 5B                      	pop rbx
 22888 000111D0 BE00000000              	mov rsi, 0
 22889                                  .L_lambda_simple_params_loop_016f:	; copy params
 22890 000111D5 4883FE00                	cmp rsi, 0
 22891 000111D9 740E                    	je .L_lambda_simple_params_end_016f
 22892 000111DB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22893 000111E0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22894 000111E4 48FFC6                  	inc rsi
 22895 000111E7 EBEC                    	jmp .L_lambda_simple_params_loop_016f
 22896                                  .L_lambda_simple_params_end_016f:
 22897 000111E9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22898 000111EC 4889C3                  	mov rbx, rax
 22899 000111EF 58                      	pop rax
 22900 000111F0 C60004                  	mov byte [rax], T_closure
 22901 000111F3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22902 000111F7 48C74009[04120100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_016f
 22903 000111FF E92A050000              	jmp .L_lambda_simple_end_016f
 22904                                  .L_lambda_simple_code_016f:	; lambda-simple body
 22905 00011204 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22906 0001120A 740B                    	je .L_lambda_simple_arity_check_ok_016f
 22907 0001120C FF742410                	push qword [rsp + 8 * 2]
 22908 00011210 6A01                    	push 1
 22909 00011212 E9671B0000              	jmp L_error_incorrect_arity_simple
 22910                                  .L_lambda_simple_arity_check_ok_016f:
 22911 00011217 C8000000                	enter 0, 0
 22912 0001121B 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 22913 0001121F 488903                  	mov qword [rbx], rax
 22914                                  
 22915 00011222 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22916 00011227 E8991B0000              	call malloc
 22917 0001122C 50                      	push rax
 22918 0001122D BF08000000              	mov rdi, 8 * 1	; new rib
 22919 00011232 E88E1B0000              	call malloc
 22920 00011237 50                      	push rax
 22921 00011238 BF10000000              	mov rdi, 8 * 2	; extended env
 22922 0001123D E8831B0000              	call malloc
 22923 00011242 488B7D10                	mov rdi, ENV
 22924 00011246 BE00000000              	mov rsi, 0
 22925 0001124B BA01000000              	mov rdx, 1
 22926                                  .L_lambda_simple_env_loop_0170:	; ext_env[i + 1] <-- env[i]
 22927 00011250 4883FE01                	cmp rsi, 1
 22928 00011254 7410                    	je .L_lambda_simple_env_end_0170
 22929 00011256 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22930 0001125A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22931 0001125E 48FFC6                  	inc rsi
 22932 00011261 48FFC2                  	inc rdx
 22933 00011264 EBEA                    	jmp .L_lambda_simple_env_loop_0170
 22934                                  .L_lambda_simple_env_end_0170:
 22935 00011266 5B                      	pop rbx
 22936 00011267 BE00000000              	mov rsi, 0
 22937                                  .L_lambda_simple_params_loop_0170:	; copy params
 22938 0001126C 4883FE01                	cmp rsi, 1
 22939 00011270 740E                    	je .L_lambda_simple_params_end_0170
 22940 00011272 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22941 00011277 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22942 0001127B 48FFC6                  	inc rsi
 22943 0001127E EBEC                    	jmp .L_lambda_simple_params_loop_0170
 22944                                  .L_lambda_simple_params_end_0170:
 22945 00011280 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22946 00011283 4889C3                  	mov rbx, rax
 22947 00011286 58                      	pop rax
 22948 00011287 C60004                  	mov byte [rax], T_closure
 22949 0001128A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22950 0001128E 48C74009[9B120100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0170
 22951 00011296 E97A020000              	jmp .L_lambda_simple_end_0170
 22952                                  .L_lambda_simple_code_0170:	; lambda-simple body
 22953 0001129B 48837C241003            	cmp qword [rsp + 8 * 2], 3
 22954 000112A1 740B                    	je .L_lambda_simple_arity_check_ok_0170
 22955 000112A3 FF742410                	push qword [rsp + 8 * 2]
 22956 000112A7 6A03                    	push 3
 22957 000112A9 E9D01A0000              	jmp L_error_incorrect_arity_simple
 22958                                  .L_lambda_simple_arity_check_ok_0170:
 22959 000112AE C8000000                	enter 0, 0
 22960                                  	; preparing a non-tail-call
 22961 000112B2 488B4530                	mov rax, PARAM(2)	; param j
 22962 000112B6 50                      	push rax
 22963 000112B7 488B4528                	mov rax, PARAM(1)	; param i
 22964 000112BB 50                      	push rax
 22965 000112BC 6A02                    	push 2	; arg count
 22966 000112BE 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 22967 000112C6 803805                  	cmp byte [rax], T_undefined
 22968 000112C9 0F84C9190000            	je L_error_fvar_undefined
 22969 000112CF 803804                  	cmp byte [rax], T_closure
 22970 000112D2 0F85441A0000            	jne L_error_non_closure
 22971 000112D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22972 000112DB FF5009                  	call SOB_CLOSURE_CODE(rax)
 22973 000112DE 483D[02000000]          	cmp rax, sob_boolean_false
 22974 000112E4 0F8423020000            	je .L_if_else_0123
 22975                                  	; preparing a non-tail-call
 22976                                  	; preparing a non-tail-call
 22977 000112EA 488B4528                	mov rax, PARAM(1)	; param i
 22978 000112EE 50                      	push rax
 22979 000112EF 488B4520                	mov rax, PARAM(0)	; param str
 22980 000112F3 50                      	push rax
 22981 000112F4 6A02                    	push 2	; arg count
 22982 000112F6 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 22983 000112FE 803805                  	cmp byte [rax], T_undefined
 22984 00011301 0F8491190000            	je L_error_fvar_undefined
 22985 00011307 803804                  	cmp byte [rax], T_closure
 22986 0001130A 0F850C1A0000            	jne L_error_non_closure
 22987 00011310 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22988 00011313 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22989 00011316 50                      	push rax
 22990 00011317 6A01                    	push 1	; arg count
 22991 00011319 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22992 0001131E E8A21A0000              	call malloc
 22993 00011323 50                      	push rax
 22994 00011324 BF18000000              	mov rdi, 8 * 3	; new rib
 22995 00011329 E8971A0000              	call malloc
 22996 0001132E 50                      	push rax
 22997 0001132F BF18000000              	mov rdi, 8 * 3	; extended env
 22998 00011334 E88C1A0000              	call malloc
 22999 00011339 488B7D10                	mov rdi, ENV
 23000 0001133D BE00000000              	mov rsi, 0
 23001 00011342 BA01000000              	mov rdx, 1
 23002                                  .L_lambda_simple_env_loop_0171:	; ext_env[i + 1] <-- env[i]
 23003 00011347 4883FE02                	cmp rsi, 2
 23004 0001134B 7410                    	je .L_lambda_simple_env_end_0171
 23005 0001134D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23006 00011351 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23007 00011355 48FFC6                  	inc rsi
 23008 00011358 48FFC2                  	inc rdx
 23009 0001135B EBEA                    	jmp .L_lambda_simple_env_loop_0171
 23010                                  .L_lambda_simple_env_end_0171:
 23011 0001135D 5B                      	pop rbx
 23012 0001135E BE00000000              	mov rsi, 0
 23013                                  .L_lambda_simple_params_loop_0171:	; copy params
 23014 00011363 4883FE03                	cmp rsi, 3
 23015 00011367 740E                    	je .L_lambda_simple_params_end_0171
 23016 00011369 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23017 0001136E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23018 00011372 48FFC6                  	inc rsi
 23019 00011375 EBEC                    	jmp .L_lambda_simple_params_loop_0171
 23020                                  .L_lambda_simple_params_end_0171:
 23021 00011377 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23022 0001137A 4889C3                  	mov rbx, rax
 23023 0001137D 58                      	pop rax
 23024 0001137E C60004                  	mov byte [rax], T_closure
 23025 00011381 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23026 00011385 48C74009[92130100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0171
 23027 0001138D E96A010000              	jmp .L_lambda_simple_end_0171
 23028                                  .L_lambda_simple_code_0171:	; lambda-simple body
 23029 00011392 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23030 00011398 740B                    	je .L_lambda_simple_arity_check_ok_0171
 23031 0001139A FF742410                	push qword [rsp + 8 * 2]
 23032 0001139E 6A01                    	push 1
 23033 000113A0 E9D9190000              	jmp L_error_incorrect_arity_simple
 23034                                  .L_lambda_simple_arity_check_ok_0171:
 23035 000113A5 C8000000                	enter 0, 0
 23036                                  	; preparing a non-tail-call
 23037                                  	; preparing a non-tail-call
 23038 000113A9 488B4510                	mov rax, ENV
 23039 000113AD 488B00                  	mov rax, qword [rax + 8 * 0]
 23040 000113B0 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 23041 000113B4 50                      	push rax
 23042 000113B5 488B4510                	mov rax, ENV
 23043 000113B9 488B00                  	mov rax, qword [rax + 8 * 0]
 23044 000113BC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 23045 000113BF 50                      	push rax
 23046 000113C0 6A02                    	push 2	; arg count
 23047 000113C2 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 23048 000113CA 803805                  	cmp byte [rax], T_undefined
 23049 000113CD 0F84C5180000            	je L_error_fvar_undefined
 23050 000113D3 803804                  	cmp byte [rax], T_closure
 23051 000113D6 0F8540190000            	jne L_error_non_closure
 23052 000113DC FF7001                  	push SOB_CLOSURE_ENV(rax)
 23053 000113DF FF5009                  	call SOB_CLOSURE_CODE(rax)
 23054 000113E2 50                      	push rax
 23055 000113E3 488B4510                	mov rax, ENV
 23056 000113E7 488B00                  	mov rax, qword [rax + 8 * 0]
 23057 000113EA 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 23058 000113EE 50                      	push rax
 23059 000113EF 488B4510                	mov rax, ENV
 23060 000113F3 488B00                  	mov rax, qword [rax + 8 * 0]
 23061 000113F6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 23062 000113F9 50                      	push rax
 23063 000113FA 6A03                    	push 3	; arg count
 23064 000113FC 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 23065 00011404 803805                  	cmp byte [rax], T_undefined
 23066 00011407 0F848B180000            	je L_error_fvar_undefined
 23067 0001140D 803804                  	cmp byte [rax], T_closure
 23068 00011410 0F8506190000            	jne L_error_non_closure
 23069 00011416 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23070 00011419 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23071                                  
 23072                                  	; preparing a non-tail-call
 23073 0001141C 488B4520                	mov rax, PARAM(0)	; param ch
 23074 00011420 50                      	push rax
 23075 00011421 488B4510                	mov rax, ENV
 23076 00011425 488B00                  	mov rax, qword [rax + 8 * 0]
 23077 00011428 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 23078 0001142C 50                      	push rax
 23079 0001142D 488B4510                	mov rax, ENV
 23080 00011431 488B00                  	mov rax, qword [rax + 8 * 0]
 23081 00011434 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 23082 00011437 50                      	push rax
 23083 00011438 6A03                    	push 3	; arg count
 23084 0001143A 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 23085 00011442 803805                  	cmp byte [rax], T_undefined
 23086 00011445 0F844D180000            	je L_error_fvar_undefined
 23087 0001144B 803804                  	cmp byte [rax], T_closure
 23088 0001144E 0F85C8180000            	jne L_error_non_closure
 23089 00011454 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23090 00011457 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23091                                  
 23092                                  	; preparing a non-tail-call
 23093                                  	; preparing a non-tail-call
 23094 0001145A 48B8-                   	mov rax, L_constants + 2270
 23094 0001145C [DE08000000000000] 
 23095 00011464 50                      	push rax
 23096 00011465 488B4510                	mov rax, ENV
 23097 00011469 488B00                  	mov rax, qword [rax + 8 * 0]
 23098 0001146C 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 23099 00011470 50                      	push rax
 23100 00011471 6A02                    	push 2	; arg count
 23101 00011473 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 23102 0001147B 803805                  	cmp byte [rax], T_undefined
 23103 0001147E 0F8414180000            	je L_error_fvar_undefined
 23104 00011484 803804                  	cmp byte [rax], T_closure
 23105 00011487 0F858F180000            	jne L_error_non_closure
 23106 0001148D FF7001                  	push SOB_CLOSURE_ENV(rax)
 23107 00011490 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23108 00011493 50                      	push rax
 23109                                  	; preparing a non-tail-call
 23110 00011494 48B8-                   	mov rax, L_constants + 2270
 23110 00011496 [DE08000000000000] 
 23111 0001149E 50                      	push rax
 23112 0001149F 488B4510                	mov rax, ENV
 23113 000114A3 488B00                  	mov rax, qword [rax + 8 * 0]
 23114 000114A6 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 23115 000114AA 50                      	push rax
 23116 000114AB 6A02                    	push 2	; arg count
 23117 000114AD 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 23118 000114B5 803805                  	cmp byte [rax], T_undefined
 23119 000114B8 0F84DA170000            	je L_error_fvar_undefined
 23120 000114BE 803804                  	cmp byte [rax], T_closure
 23121 000114C1 0F8555180000            	jne L_error_non_closure
 23122 000114C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23123 000114CA FF5009                  	call SOB_CLOSURE_CODE(rax)
 23124 000114CD 50                      	push rax
 23125 000114CE 488B4510                	mov rax, ENV
 23126 000114D2 488B00                  	mov rax, qword [rax + 8 * 0]
 23127 000114D5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 23128 000114D8 50                      	push rax
 23129 000114D9 6A03                    	push 3	; arg count
 23130 000114DB 488B4510                	mov rax, ENV
 23131 000114DF 488B4008                	mov rax, qword [rax + 8 * 1]
 23132 000114E3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23133 000114E6 488B00                  	mov rax, qword [rax]
 23134 000114E9 803804                  	cmp byte [rax], T_closure
 23135 000114EC 0F852A180000            	jne L_error_non_closure
 23136 000114F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23137 000114F5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23138 000114F8 C9                      	leave
 23139 000114F9 C21800                  	ret AND_KILL_FRAME(1)
 23140                                  .L_lambda_simple_end_0171:	; new closure is in rax
 23141 000114FC 803804                  	cmp byte [rax], T_closure
 23142 000114FF 0F8517180000            	jne L_error_non_closure
 23143 00011505 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23144 00011508 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23145 0001150B EB04                    	jmp .L_if_end_0123
 23146                                  .L_if_else_0123:
 23147 0001150D 488B4520                	mov rax, PARAM(0)	; param str
 23148                                  .L_if_end_0123:
 23149 00011511 C9                      	leave
 23150 00011512 C22800                  	ret AND_KILL_FRAME(3)
 23151                                  .L_lambda_simple_end_0170:	; new closure is in rax
 23152 00011515 50                      	push rax
 23153 00011516 488B4520                	mov rax, PARAM(0)	; param run
 23154 0001151A 8F00                    	pop qword [rax]
 23155 0001151C 48B8-                   	mov rax, sob_void
 23155 0001151E [0000000000000000] 
 23156                                  
 23157 00011526 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23158 0001152B E895180000              	call malloc
 23159 00011530 50                      	push rax
 23160 00011531 BF08000000              	mov rdi, 8 * 1	; new rib
 23161 00011536 E88A180000              	call malloc
 23162 0001153B 50                      	push rax
 23163 0001153C BF10000000              	mov rdi, 8 * 2	; extended env
 23164 00011541 E87F180000              	call malloc
 23165 00011546 488B7D10                	mov rdi, ENV
 23166 0001154A BE00000000              	mov rsi, 0
 23167 0001154F BA01000000              	mov rdx, 1
 23168                                  .L_lambda_simple_env_loop_0172:	; ext_env[i + 1] <-- env[i]
 23169 00011554 4883FE01                	cmp rsi, 1
 23170 00011558 7410                    	je .L_lambda_simple_env_end_0172
 23171 0001155A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23172 0001155E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23173 00011562 48FFC6                  	inc rsi
 23174 00011565 48FFC2                  	inc rdx
 23175 00011568 EBEA                    	jmp .L_lambda_simple_env_loop_0172
 23176                                  .L_lambda_simple_env_end_0172:
 23177 0001156A 5B                      	pop rbx
 23178 0001156B BE00000000              	mov rsi, 0
 23179                                  .L_lambda_simple_params_loop_0172:	; copy params
 23180 00011570 4883FE01                	cmp rsi, 1
 23181 00011574 740E                    	je .L_lambda_simple_params_end_0172
 23182 00011576 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23183 0001157B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23184 0001157F 48FFC6                  	inc rsi
 23185 00011582 EBEC                    	jmp .L_lambda_simple_params_loop_0172
 23186                                  .L_lambda_simple_params_end_0172:
 23187 00011584 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23188 00011587 4889C3                  	mov rbx, rax
 23189 0001158A 58                      	pop rax
 23190 0001158B C60004                  	mov byte [rax], T_closure
 23191 0001158E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23192 00011592 48C74009[9F150100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0172
 23193 0001159A E98B010000              	jmp .L_lambda_simple_end_0172
 23194                                  .L_lambda_simple_code_0172:	; lambda-simple body
 23195 0001159F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23196 000115A5 740B                    	je .L_lambda_simple_arity_check_ok_0172
 23197 000115A7 FF742410                	push qword [rsp + 8 * 2]
 23198 000115AB 6A01                    	push 1
 23199 000115AD E9CC170000              	jmp L_error_incorrect_arity_simple
 23200                                  .L_lambda_simple_arity_check_ok_0172:
 23201 000115B2 C8000000                	enter 0, 0
 23202                                  	; preparing a non-tail-call
 23203                                  	; preparing a non-tail-call
 23204 000115B6 488B4520                	mov rax, PARAM(0)	; param str
 23205 000115BA 50                      	push rax
 23206 000115BB 6A01                    	push 1	; arg count
 23207 000115BD 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 23208 000115C5 803805                  	cmp byte [rax], T_undefined
 23209 000115C8 0F84CA160000            	je L_error_fvar_undefined
 23210 000115CE 803804                  	cmp byte [rax], T_closure
 23211 000115D1 0F8545170000            	jne L_error_non_closure
 23212 000115D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23213 000115DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 23214 000115DD 50                      	push rax
 23215 000115DE 6A01                    	push 1	; arg count
 23216 000115E0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23217 000115E5 E8DB170000              	call malloc
 23218 000115EA 50                      	push rax
 23219 000115EB BF08000000              	mov rdi, 8 * 1	; new rib
 23220 000115F0 E8D0170000              	call malloc
 23221 000115F5 50                      	push rax
 23222 000115F6 BF18000000              	mov rdi, 8 * 3	; extended env
 23223 000115FB E8C5170000              	call malloc
 23224 00011600 488B7D10                	mov rdi, ENV
 23225 00011604 BE00000000              	mov rsi, 0
 23226 00011609 BA01000000              	mov rdx, 1
 23227                                  .L_lambda_simple_env_loop_0173:	; ext_env[i + 1] <-- env[i]
 23228 0001160E 4883FE02                	cmp rsi, 2
 23229 00011612 7410                    	je .L_lambda_simple_env_end_0173
 23230 00011614 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23231 00011618 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23232 0001161C 48FFC6                  	inc rsi
 23233 0001161F 48FFC2                  	inc rdx
 23234 00011622 EBEA                    	jmp .L_lambda_simple_env_loop_0173
 23235                                  .L_lambda_simple_env_end_0173:
 23236 00011624 5B                      	pop rbx
 23237 00011625 BE00000000              	mov rsi, 0
 23238                                  .L_lambda_simple_params_loop_0173:	; copy params
 23239 0001162A 4883FE01                	cmp rsi, 1
 23240 0001162E 740E                    	je .L_lambda_simple_params_end_0173
 23241 00011630 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23242 00011635 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23243 00011639 48FFC6                  	inc rsi
 23244 0001163C EBEC                    	jmp .L_lambda_simple_params_loop_0173
 23245                                  .L_lambda_simple_params_end_0173:
 23246 0001163E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23247 00011641 4889C3                  	mov rbx, rax
 23248 00011644 58                      	pop rax
 23249 00011645 C60004                  	mov byte [rax], T_closure
 23250 00011648 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23251 0001164C 48C74009[59160100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0173
 23252 00011654 E9BE000000              	jmp .L_lambda_simple_end_0173
 23253                                  .L_lambda_simple_code_0173:	; lambda-simple body
 23254 00011659 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23255 0001165F 740B                    	je .L_lambda_simple_arity_check_ok_0173
 23256 00011661 FF742410                	push qword [rsp + 8 * 2]
 23257 00011665 6A01                    	push 1
 23258 00011667 E912170000              	jmp L_error_incorrect_arity_simple
 23259                                  .L_lambda_simple_arity_check_ok_0173:
 23260 0001166C C8000000                	enter 0, 0
 23261                                  	; preparing a non-tail-call
 23262 00011670 488B4520                	mov rax, PARAM(0)	; param n
 23263 00011674 50                      	push rax
 23264 00011675 6A01                    	push 1	; arg count
 23265 00011677 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 23266 0001167F 803805                  	cmp byte [rax], T_undefined
 23267 00011682 0F8410160000            	je L_error_fvar_undefined
 23268 00011688 803804                  	cmp byte [rax], T_closure
 23269 0001168B 0F858B160000            	jne L_error_non_closure
 23270 00011691 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23271 00011694 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23272 00011697 483D[02000000]          	cmp rax, sob_boolean_false
 23273 0001169D 740C                    	je .L_if_else_0124
 23274 0001169F 488B4510                	mov rax, ENV
 23275 000116A3 488B00                  	mov rax, qword [rax + 8 * 0]
 23276 000116A6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 23277 000116A9 EB68                    	jmp .L_if_end_0124
 23278                                  .L_if_else_0124:
 23279                                  	; preparing a non-tail-call
 23280                                  	; preparing a non-tail-call
 23281 000116AB 48B8-                   	mov rax, L_constants + 2270
 23281 000116AD [DE08000000000000] 
 23282 000116B5 50                      	push rax
 23283 000116B6 488B4520                	mov rax, PARAM(0)	; param n
 23284 000116BA 50                      	push rax
 23285 000116BB 6A02                    	push 2	; arg count
 23286 000116BD 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 23287 000116C5 803805                  	cmp byte [rax], T_undefined
 23288 000116C8 0F84CA150000            	je L_error_fvar_undefined
 23289 000116CE 803804                  	cmp byte [rax], T_closure
 23290 000116D1 0F8545160000            	jne L_error_non_closure
 23291 000116D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23292 000116DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 23293 000116DD 50                      	push rax
 23294 000116DE 48B8-                   	mov rax, L_constants + 2135
 23294 000116E0 [5708000000000000] 
 23295 000116E8 50                      	push rax
 23296 000116E9 488B4510                	mov rax, ENV
 23297 000116ED 488B00                  	mov rax, qword [rax + 8 * 0]
 23298 000116F0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 23299 000116F3 50                      	push rax
 23300 000116F4 6A03                    	push 3	; arg count
 23301 000116F6 488B4510                	mov rax, ENV
 23302 000116FA 488B4008                	mov rax, qword [rax + 8 * 1]
 23303 000116FE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23304 00011701 488B00                  	mov rax, qword [rax]
 23305 00011704 803804                  	cmp byte [rax], T_closure
 23306 00011707 0F850F160000            	jne L_error_non_closure
 23307 0001170D FF7001                  	push SOB_CLOSURE_ENV(rax)
 23308 00011710 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23309                                  .L_if_end_0124:
 23310 00011713 C9                      	leave
 23311 00011714 C21800                  	ret AND_KILL_FRAME(1)
 23312                                  .L_lambda_simple_end_0173:	; new closure is in rax
 23313 00011717 803804                  	cmp byte [rax], T_closure
 23314 0001171A 0F85FC150000            	jne L_error_non_closure
 23315 00011720 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23316 00011723 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23317 00011726 C9                      	leave
 23318 00011727 C21800                  	ret AND_KILL_FRAME(1)
 23319                                  .L_lambda_simple_end_0172:	; new closure is in rax
 23320 0001172A C9                      	leave
 23321 0001172B C21800                  	ret AND_KILL_FRAME(1)
 23322                                  .L_lambda_simple_end_016f:	; new closure is in rax
 23323 0001172E 803804                  	cmp byte [rax], T_closure
 23324 00011731 0F85E5150000            	jne L_error_non_closure
 23325 00011737 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23326 0001173A FF5009                  	call SOB_CLOSURE_CODE(rax)
 23327 0001173D 48890425[67160000]      	mov qword [free_var_130], rax
 23328 00011745 48B8-                   	mov rax, sob_void
 23328 00011747 [0000000000000000] 
 23329                                  
 23330 0001174F 4889C7                  	mov rdi, rax
 23331 00011752 E8C3180000              	call print_sexpr_if_not_void
 23332                                  	; preparing a non-tail-call
 23333 00011757 48B8-                   	mov rax, L_constants + 1993
 23333 00011759 [C907000000000000] 
 23334 00011761 50                      	push rax
 23335 00011762 6A01                    	push 1	; arg count
 23336 00011764 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23337 00011769 E857160000              	call malloc
 23338 0001176E 50                      	push rax
 23339 0001176F BF00000000              	mov rdi, 8 * 0	; new rib
 23340 00011774 E84C160000              	call malloc
 23341 00011779 50                      	push rax
 23342 0001177A BF08000000              	mov rdi, 8 * 1	; extended env
 23343 0001177F E841160000              	call malloc
 23344 00011784 488B7D10                	mov rdi, ENV
 23345 00011788 BE00000000              	mov rsi, 0
 23346 0001178D BA01000000              	mov rdx, 1
 23347                                  .L_lambda_simple_env_loop_0174:	; ext_env[i + 1] <-- env[i]
 23348 00011792 4883FE00                	cmp rsi, 0
 23349 00011796 7410                    	je .L_lambda_simple_env_end_0174
 23350 00011798 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23351 0001179C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23352 000117A0 48FFC6                  	inc rsi
 23353 000117A3 48FFC2                  	inc rdx
 23354 000117A6 EBEA                    	jmp .L_lambda_simple_env_loop_0174
 23355                                  .L_lambda_simple_env_end_0174:
 23356 000117A8 5B                      	pop rbx
 23357 000117A9 BE00000000              	mov rsi, 0
 23358                                  .L_lambda_simple_params_loop_0174:	; copy params
 23359 000117AE 4883FE00                	cmp rsi, 0
 23360 000117B2 740E                    	je .L_lambda_simple_params_end_0174
 23361 000117B4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23362 000117B9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23363 000117BD 48FFC6                  	inc rsi
 23364 000117C0 EBEC                    	jmp .L_lambda_simple_params_loop_0174
 23365                                  .L_lambda_simple_params_end_0174:
 23366 000117C2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23367 000117C5 4889C3                  	mov rbx, rax
 23368 000117C8 58                      	pop rax
 23369 000117C9 C60004                  	mov byte [rax], T_closure
 23370 000117CC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23371 000117D0 48C74009[DD170100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0174
 23372 000117D8 E92A050000              	jmp .L_lambda_simple_end_0174
 23373                                  .L_lambda_simple_code_0174:	; lambda-simple body
 23374 000117DD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23375 000117E3 740B                    	je .L_lambda_simple_arity_check_ok_0174
 23376 000117E5 FF742410                	push qword [rsp + 8 * 2]
 23377 000117E9 6A01                    	push 1
 23378 000117EB E98E150000              	jmp L_error_incorrect_arity_simple
 23379                                  .L_lambda_simple_arity_check_ok_0174:
 23380 000117F0 C8000000                	enter 0, 0
 23381 000117F4 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 23382 000117F8 488903                  	mov qword [rbx], rax
 23383                                  
 23384 000117FB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23385 00011800 E8C0150000              	call malloc
 23386 00011805 50                      	push rax
 23387 00011806 BF08000000              	mov rdi, 8 * 1	; new rib
 23388 0001180B E8B5150000              	call malloc
 23389 00011810 50                      	push rax
 23390 00011811 BF10000000              	mov rdi, 8 * 2	; extended env
 23391 00011816 E8AA150000              	call malloc
 23392 0001181B 488B7D10                	mov rdi, ENV
 23393 0001181F BE00000000              	mov rsi, 0
 23394 00011824 BA01000000              	mov rdx, 1
 23395                                  .L_lambda_simple_env_loop_0175:	; ext_env[i + 1] <-- env[i]
 23396 00011829 4883FE01                	cmp rsi, 1
 23397 0001182D 7410                    	je .L_lambda_simple_env_end_0175
 23398 0001182F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23399 00011833 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23400 00011837 48FFC6                  	inc rsi
 23401 0001183A 48FFC2                  	inc rdx
 23402 0001183D EBEA                    	jmp .L_lambda_simple_env_loop_0175
 23403                                  .L_lambda_simple_env_end_0175:
 23404 0001183F 5B                      	pop rbx
 23405 00011840 BE00000000              	mov rsi, 0
 23406                                  .L_lambda_simple_params_loop_0175:	; copy params
 23407 00011845 4883FE01                	cmp rsi, 1
 23408 00011849 740E                    	je .L_lambda_simple_params_end_0175
 23409 0001184B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23410 00011850 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23411 00011854 48FFC6                  	inc rsi
 23412 00011857 EBEC                    	jmp .L_lambda_simple_params_loop_0175
 23413                                  .L_lambda_simple_params_end_0175:
 23414 00011859 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23415 0001185C 4889C3                  	mov rbx, rax
 23416 0001185F 58                      	pop rax
 23417 00011860 C60004                  	mov byte [rax], T_closure
 23418 00011863 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23419 00011867 48C74009[74180100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0175
 23420 0001186F E97A020000              	jmp .L_lambda_simple_end_0175
 23421                                  .L_lambda_simple_code_0175:	; lambda-simple body
 23422 00011874 48837C241003            	cmp qword [rsp + 8 * 2], 3
 23423 0001187A 740B                    	je .L_lambda_simple_arity_check_ok_0175
 23424 0001187C FF742410                	push qword [rsp + 8 * 2]
 23425 00011880 6A03                    	push 3
 23426 00011882 E9F7140000              	jmp L_error_incorrect_arity_simple
 23427                                  .L_lambda_simple_arity_check_ok_0175:
 23428 00011887 C8000000                	enter 0, 0
 23429                                  	; preparing a non-tail-call
 23430 0001188B 488B4530                	mov rax, PARAM(2)	; param j
 23431 0001188F 50                      	push rax
 23432 00011890 488B4528                	mov rax, PARAM(1)	; param i
 23433 00011894 50                      	push rax
 23434 00011895 6A02                    	push 2	; arg count
 23435 00011897 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23436 0001189F 803805                  	cmp byte [rax], T_undefined
 23437 000118A2 0F84F0130000            	je L_error_fvar_undefined
 23438 000118A8 803804                  	cmp byte [rax], T_closure
 23439 000118AB 0F856B140000            	jne L_error_non_closure
 23440 000118B1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23441 000118B4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23442 000118B7 483D[02000000]          	cmp rax, sob_boolean_false
 23443 000118BD 0F8423020000            	je .L_if_else_0125
 23444                                  	; preparing a non-tail-call
 23445                                  	; preparing a non-tail-call
 23446 000118C3 488B4528                	mov rax, PARAM(1)	; param i
 23447 000118C7 50                      	push rax
 23448 000118C8 488B4520                	mov rax, PARAM(0)	; param vec
 23449 000118CC 50                      	push rax
 23450 000118CD 6A02                    	push 2	; arg count
 23451 000118CF 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 23452 000118D7 803805                  	cmp byte [rax], T_undefined
 23453 000118DA 0F84B8130000            	je L_error_fvar_undefined
 23454 000118E0 803804                  	cmp byte [rax], T_closure
 23455 000118E3 0F8533140000            	jne L_error_non_closure
 23456 000118E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23457 000118EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 23458 000118EF 50                      	push rax
 23459 000118F0 6A01                    	push 1	; arg count
 23460 000118F2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23461 000118F7 E8C9140000              	call malloc
 23462 000118FC 50                      	push rax
 23463 000118FD BF18000000              	mov rdi, 8 * 3	; new rib
 23464 00011902 E8BE140000              	call malloc
 23465 00011907 50                      	push rax
 23466 00011908 BF18000000              	mov rdi, 8 * 3	; extended env
 23467 0001190D E8B3140000              	call malloc
 23468 00011912 488B7D10                	mov rdi, ENV
 23469 00011916 BE00000000              	mov rsi, 0
 23470 0001191B BA01000000              	mov rdx, 1
 23471                                  .L_lambda_simple_env_loop_0176:	; ext_env[i + 1] <-- env[i]
 23472 00011920 4883FE02                	cmp rsi, 2
 23473 00011924 7410                    	je .L_lambda_simple_env_end_0176
 23474 00011926 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23475 0001192A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23476 0001192E 48FFC6                  	inc rsi
 23477 00011931 48FFC2                  	inc rdx
 23478 00011934 EBEA                    	jmp .L_lambda_simple_env_loop_0176
 23479                                  .L_lambda_simple_env_end_0176:
 23480 00011936 5B                      	pop rbx
 23481 00011937 BE00000000              	mov rsi, 0
 23482                                  .L_lambda_simple_params_loop_0176:	; copy params
 23483 0001193C 4883FE03                	cmp rsi, 3
 23484 00011940 740E                    	je .L_lambda_simple_params_end_0176
 23485 00011942 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23486 00011947 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23487 0001194B 48FFC6                  	inc rsi
 23488 0001194E EBEC                    	jmp .L_lambda_simple_params_loop_0176
 23489                                  .L_lambda_simple_params_end_0176:
 23490 00011950 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23491 00011953 4889C3                  	mov rbx, rax
 23492 00011956 58                      	pop rax
 23493 00011957 C60004                  	mov byte [rax], T_closure
 23494 0001195A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23495 0001195E 48C74009[6B190100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0176
 23496 00011966 E96A010000              	jmp .L_lambda_simple_end_0176
 23497                                  .L_lambda_simple_code_0176:	; lambda-simple body
 23498 0001196B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23499 00011971 740B                    	je .L_lambda_simple_arity_check_ok_0176
 23500 00011973 FF742410                	push qword [rsp + 8 * 2]
 23501 00011977 6A01                    	push 1
 23502 00011979 E900140000              	jmp L_error_incorrect_arity_simple
 23503                                  .L_lambda_simple_arity_check_ok_0176:
 23504 0001197E C8000000                	enter 0, 0
 23505                                  	; preparing a non-tail-call
 23506                                  	; preparing a non-tail-call
 23507 00011982 488B4510                	mov rax, ENV
 23508 00011986 488B00                  	mov rax, qword [rax + 8 * 0]
 23509 00011989 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 23510 0001198D 50                      	push rax
 23511 0001198E 488B4510                	mov rax, ENV
 23512 00011992 488B00                  	mov rax, qword [rax + 8 * 0]
 23513 00011995 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 23514 00011998 50                      	push rax
 23515 00011999 6A02                    	push 2	; arg count
 23516 0001199B 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 23517 000119A3 803805                  	cmp byte [rax], T_undefined
 23518 000119A6 0F84EC120000            	je L_error_fvar_undefined
 23519 000119AC 803804                  	cmp byte [rax], T_closure
 23520 000119AF 0F8567130000            	jne L_error_non_closure
 23521 000119B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23522 000119B8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23523 000119BB 50                      	push rax
 23524 000119BC 488B4510                	mov rax, ENV
 23525 000119C0 488B00                  	mov rax, qword [rax + 8 * 0]
 23526 000119C3 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 23527 000119C7 50                      	push rax
 23528 000119C8 488B4510                	mov rax, ENV
 23529 000119CC 488B00                  	mov rax, qword [rax + 8 * 0]
 23530 000119CF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 23531 000119D2 50                      	push rax
 23532 000119D3 6A03                    	push 3	; arg count
 23533 000119D5 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 23534 000119DD 803805                  	cmp byte [rax], T_undefined
 23535 000119E0 0F84B2120000            	je L_error_fvar_undefined
 23536 000119E6 803804                  	cmp byte [rax], T_closure
 23537 000119E9 0F852D130000            	jne L_error_non_closure
 23538 000119EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 23539 000119F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23540                                  
 23541                                  	; preparing a non-tail-call
 23542 000119F5 488B4520                	mov rax, PARAM(0)	; param ch
 23543 000119F9 50                      	push rax
 23544 000119FA 488B4510                	mov rax, ENV
 23545 000119FE 488B00                  	mov rax, qword [rax + 8 * 0]
 23546 00011A01 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 23547 00011A05 50                      	push rax
 23548 00011A06 488B4510                	mov rax, ENV
 23549 00011A0A 488B00                  	mov rax, qword [rax + 8 * 0]
 23550 00011A0D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 23551 00011A10 50                      	push rax
 23552 00011A11 6A03                    	push 3	; arg count
 23553 00011A13 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 23554 00011A1B 803805                  	cmp byte [rax], T_undefined
 23555 00011A1E 0F8474120000            	je L_error_fvar_undefined
 23556 00011A24 803804                  	cmp byte [rax], T_closure
 23557 00011A27 0F85EF120000            	jne L_error_non_closure
 23558 00011A2D FF7001                  	push SOB_CLOSURE_ENV(rax)
 23559 00011A30 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23560                                  
 23561                                  	; preparing a non-tail-call
 23562                                  	; preparing a non-tail-call
 23563 00011A33 48B8-                   	mov rax, L_constants + 2270
 23563 00011A35 [DE08000000000000] 
 23564 00011A3D 50                      	push rax
 23565 00011A3E 488B4510                	mov rax, ENV
 23566 00011A42 488B00                  	mov rax, qword [rax + 8 * 0]
 23567 00011A45 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 23568 00011A49 50                      	push rax
 23569 00011A4A 6A02                    	push 2	; arg count
 23570 00011A4C 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 23571 00011A54 803805                  	cmp byte [rax], T_undefined
 23572 00011A57 0F843B120000            	je L_error_fvar_undefined
 23573 00011A5D 803804                  	cmp byte [rax], T_closure
 23574 00011A60 0F85B6120000            	jne L_error_non_closure
 23575 00011A66 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23576 00011A69 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23577 00011A6C 50                      	push rax
 23578                                  	; preparing a non-tail-call
 23579 00011A6D 48B8-                   	mov rax, L_constants + 2270
 23579 00011A6F [DE08000000000000] 
 23580 00011A77 50                      	push rax
 23581 00011A78 488B4510                	mov rax, ENV
 23582 00011A7C 488B00                  	mov rax, qword [rax + 8 * 0]
 23583 00011A7F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 23584 00011A83 50                      	push rax
 23585 00011A84 6A02                    	push 2	; arg count
 23586 00011A86 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 23587 00011A8E 803805                  	cmp byte [rax], T_undefined
 23588 00011A91 0F8401120000            	je L_error_fvar_undefined
 23589 00011A97 803804                  	cmp byte [rax], T_closure
 23590 00011A9A 0F857C120000            	jne L_error_non_closure
 23591 00011AA0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23592 00011AA3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23593 00011AA6 50                      	push rax
 23594 00011AA7 488B4510                	mov rax, ENV
 23595 00011AAB 488B00                  	mov rax, qword [rax + 8 * 0]
 23596 00011AAE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 23597 00011AB1 50                      	push rax
 23598 00011AB2 6A03                    	push 3	; arg count
 23599 00011AB4 488B4510                	mov rax, ENV
 23600 00011AB8 488B4008                	mov rax, qword [rax + 8 * 1]
 23601 00011ABC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23602 00011ABF 488B00                  	mov rax, qword [rax]
 23603 00011AC2 803804                  	cmp byte [rax], T_closure
 23604 00011AC5 0F8551120000            	jne L_error_non_closure
 23605 00011ACB FF7001                  	push SOB_CLOSURE_ENV(rax)
 23606 00011ACE FF5009                  	call SOB_CLOSURE_CODE(rax)
 23607 00011AD1 C9                      	leave
 23608 00011AD2 C21800                  	ret AND_KILL_FRAME(1)
 23609                                  .L_lambda_simple_end_0176:	; new closure is in rax
 23610 00011AD5 803804                  	cmp byte [rax], T_closure
 23611 00011AD8 0F853E120000            	jne L_error_non_closure
 23612 00011ADE FF7001                  	push SOB_CLOSURE_ENV(rax)
 23613 00011AE1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23614 00011AE4 EB04                    	jmp .L_if_end_0125
 23615                                  .L_if_else_0125:
 23616 00011AE6 488B4520                	mov rax, PARAM(0)	; param vec
 23617                                  .L_if_end_0125:
 23618 00011AEA C9                      	leave
 23619 00011AEB C22800                  	ret AND_KILL_FRAME(3)
 23620                                  .L_lambda_simple_end_0175:	; new closure is in rax
 23621 00011AEE 50                      	push rax
 23622 00011AEF 488B4520                	mov rax, PARAM(0)	; param run
 23623 00011AF3 8F00                    	pop qword [rax]
 23624 00011AF5 48B8-                   	mov rax, sob_void
 23624 00011AF7 [0000000000000000] 
 23625                                  
 23626 00011AFF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23627 00011B04 E8BC120000              	call malloc
 23628 00011B09 50                      	push rax
 23629 00011B0A BF08000000              	mov rdi, 8 * 1	; new rib
 23630 00011B0F E8B1120000              	call malloc
 23631 00011B14 50                      	push rax
 23632 00011B15 BF10000000              	mov rdi, 8 * 2	; extended env
 23633 00011B1A E8A6120000              	call malloc
 23634 00011B1F 488B7D10                	mov rdi, ENV
 23635 00011B23 BE00000000              	mov rsi, 0
 23636 00011B28 BA01000000              	mov rdx, 1
 23637                                  .L_lambda_simple_env_loop_0177:	; ext_env[i + 1] <-- env[i]
 23638 00011B2D 4883FE01                	cmp rsi, 1
 23639 00011B31 7410                    	je .L_lambda_simple_env_end_0177
 23640 00011B33 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23641 00011B37 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23642 00011B3B 48FFC6                  	inc rsi
 23643 00011B3E 48FFC2                  	inc rdx
 23644 00011B41 EBEA                    	jmp .L_lambda_simple_env_loop_0177
 23645                                  .L_lambda_simple_env_end_0177:
 23646 00011B43 5B                      	pop rbx
 23647 00011B44 BE00000000              	mov rsi, 0
 23648                                  .L_lambda_simple_params_loop_0177:	; copy params
 23649 00011B49 4883FE01                	cmp rsi, 1
 23650 00011B4D 740E                    	je .L_lambda_simple_params_end_0177
 23651 00011B4F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23652 00011B54 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23653 00011B58 48FFC6                  	inc rsi
 23654 00011B5B EBEC                    	jmp .L_lambda_simple_params_loop_0177
 23655                                  .L_lambda_simple_params_end_0177:
 23656 00011B5D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23657 00011B60 4889C3                  	mov rbx, rax
 23658 00011B63 58                      	pop rax
 23659 00011B64 C60004                  	mov byte [rax], T_closure
 23660 00011B67 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23661 00011B6B 48C74009[781B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0177
 23662 00011B73 E98B010000              	jmp .L_lambda_simple_end_0177
 23663                                  .L_lambda_simple_code_0177:	; lambda-simple body
 23664 00011B78 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23665 00011B7E 740B                    	je .L_lambda_simple_arity_check_ok_0177
 23666 00011B80 FF742410                	push qword [rsp + 8 * 2]
 23667 00011B84 6A01                    	push 1
 23668 00011B86 E9F3110000              	jmp L_error_incorrect_arity_simple
 23669                                  .L_lambda_simple_arity_check_ok_0177:
 23670 00011B8B C8000000                	enter 0, 0
 23671                                  	; preparing a non-tail-call
 23672                                  	; preparing a non-tail-call
 23673 00011B8F 488B4520                	mov rax, PARAM(0)	; param vec
 23674 00011B93 50                      	push rax
 23675 00011B94 6A01                    	push 1	; arg count
 23676 00011B96 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 23677 00011B9E 803805                  	cmp byte [rax], T_undefined
 23678 00011BA1 0F84F1100000            	je L_error_fvar_undefined
 23679 00011BA7 803804                  	cmp byte [rax], T_closure
 23680 00011BAA 0F856C110000            	jne L_error_non_closure
 23681 00011BB0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23682 00011BB3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23683 00011BB6 50                      	push rax
 23684 00011BB7 6A01                    	push 1	; arg count
 23685 00011BB9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23686 00011BBE E802120000              	call malloc
 23687 00011BC3 50                      	push rax
 23688 00011BC4 BF08000000              	mov rdi, 8 * 1	; new rib
 23689 00011BC9 E8F7110000              	call malloc
 23690 00011BCE 50                      	push rax
 23691 00011BCF BF18000000              	mov rdi, 8 * 3	; extended env
 23692 00011BD4 E8EC110000              	call malloc
 23693 00011BD9 488B7D10                	mov rdi, ENV
 23694 00011BDD BE00000000              	mov rsi, 0
 23695 00011BE2 BA01000000              	mov rdx, 1
 23696                                  .L_lambda_simple_env_loop_0178:	; ext_env[i + 1] <-- env[i]
 23697 00011BE7 4883FE02                	cmp rsi, 2
 23698 00011BEB 7410                    	je .L_lambda_simple_env_end_0178
 23699 00011BED 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23700 00011BF1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23701 00011BF5 48FFC6                  	inc rsi
 23702 00011BF8 48FFC2                  	inc rdx
 23703 00011BFB EBEA                    	jmp .L_lambda_simple_env_loop_0178
 23704                                  .L_lambda_simple_env_end_0178:
 23705 00011BFD 5B                      	pop rbx
 23706 00011BFE BE00000000              	mov rsi, 0
 23707                                  .L_lambda_simple_params_loop_0178:	; copy params
 23708 00011C03 4883FE01                	cmp rsi, 1
 23709 00011C07 740E                    	je .L_lambda_simple_params_end_0178
 23710 00011C09 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23711 00011C0E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23712 00011C12 48FFC6                  	inc rsi
 23713 00011C15 EBEC                    	jmp .L_lambda_simple_params_loop_0178
 23714                                  .L_lambda_simple_params_end_0178:
 23715 00011C17 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23716 00011C1A 4889C3                  	mov rbx, rax
 23717 00011C1D 58                      	pop rax
 23718 00011C1E C60004                  	mov byte [rax], T_closure
 23719 00011C21 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23720 00011C25 48C74009[321C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0178
 23721 00011C2D E9BE000000              	jmp .L_lambda_simple_end_0178
 23722                                  .L_lambda_simple_code_0178:	; lambda-simple body
 23723 00011C32 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23724 00011C38 740B                    	je .L_lambda_simple_arity_check_ok_0178
 23725 00011C3A FF742410                	push qword [rsp + 8 * 2]
 23726 00011C3E 6A01                    	push 1
 23727 00011C40 E939110000              	jmp L_error_incorrect_arity_simple
 23728                                  .L_lambda_simple_arity_check_ok_0178:
 23729 00011C45 C8000000                	enter 0, 0
 23730                                  	; preparing a non-tail-call
 23731 00011C49 488B4520                	mov rax, PARAM(0)	; param n
 23732 00011C4D 50                      	push rax
 23733 00011C4E 6A01                    	push 1	; arg count
 23734 00011C50 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 23735 00011C58 803805                  	cmp byte [rax], T_undefined
 23736 00011C5B 0F8437100000            	je L_error_fvar_undefined
 23737 00011C61 803804                  	cmp byte [rax], T_closure
 23738 00011C64 0F85B2100000            	jne L_error_non_closure
 23739 00011C6A FF7001                  	push SOB_CLOSURE_ENV(rax)
 23740 00011C6D FF5009                  	call SOB_CLOSURE_CODE(rax)
 23741 00011C70 483D[02000000]          	cmp rax, sob_boolean_false
 23742 00011C76 740C                    	je .L_if_else_0126
 23743 00011C78 488B4510                	mov rax, ENV
 23744 00011C7C 488B00                  	mov rax, qword [rax + 8 * 0]
 23745 00011C7F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 23746 00011C82 EB68                    	jmp .L_if_end_0126
 23747                                  .L_if_else_0126:
 23748                                  	; preparing a non-tail-call
 23749                                  	; preparing a non-tail-call
 23750 00011C84 48B8-                   	mov rax, L_constants + 2270
 23750 00011C86 [DE08000000000000] 
 23751 00011C8E 50                      	push rax
 23752 00011C8F 488B4520                	mov rax, PARAM(0)	; param n
 23753 00011C93 50                      	push rax
 23754 00011C94 6A02                    	push 2	; arg count
 23755 00011C96 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 23756 00011C9E 803805                  	cmp byte [rax], T_undefined
 23757 00011CA1 0F84F10F0000            	je L_error_fvar_undefined
 23758 00011CA7 803804                  	cmp byte [rax], T_closure
 23759 00011CAA 0F856C100000            	jne L_error_non_closure
 23760 00011CB0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23761 00011CB3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23762 00011CB6 50                      	push rax
 23763 00011CB7 48B8-                   	mov rax, L_constants + 2135
 23763 00011CB9 [5708000000000000] 
 23764 00011CC1 50                      	push rax
 23765 00011CC2 488B4510                	mov rax, ENV
 23766 00011CC6 488B00                  	mov rax, qword [rax + 8 * 0]
 23767 00011CC9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 23768 00011CCC 50                      	push rax
 23769 00011CCD 6A03                    	push 3	; arg count
 23770 00011CCF 488B4510                	mov rax, ENV
 23771 00011CD3 488B4008                	mov rax, qword [rax + 8 * 1]
 23772 00011CD7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23773 00011CDA 488B00                  	mov rax, qword [rax]
 23774 00011CDD 803804                  	cmp byte [rax], T_closure
 23775 00011CE0 0F8536100000            	jne L_error_non_closure
 23776 00011CE6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23777 00011CE9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23778                                  .L_if_end_0126:
 23779 00011CEC C9                      	leave
 23780 00011CED C21800                  	ret AND_KILL_FRAME(1)
 23781                                  .L_lambda_simple_end_0178:	; new closure is in rax
 23782 00011CF0 803804                  	cmp byte [rax], T_closure
 23783 00011CF3 0F8523100000            	jne L_error_non_closure
 23784 00011CF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23785 00011CFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 23786 00011CFF C9                      	leave
 23787 00011D00 C21800                  	ret AND_KILL_FRAME(1)
 23788                                  .L_lambda_simple_end_0177:	; new closure is in rax
 23789 00011D03 C9                      	leave
 23790 00011D04 C21800                  	ret AND_KILL_FRAME(1)
 23791                                  .L_lambda_simple_end_0174:	; new closure is in rax
 23792 00011D07 803804                  	cmp byte [rax], T_closure
 23793 00011D0A 0F850C100000            	jne L_error_non_closure
 23794 00011D10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23795 00011D13 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23796 00011D16 48890425[77170000]      	mov qword [free_var_146], rax
 23797 00011D1E 48B8-                   	mov rax, sob_void
 23797 00011D20 [0000000000000000] 
 23798                                  
 23799 00011D28 4889C7                  	mov rdi, rax
 23800 00011D2B E8EA120000              	call print_sexpr_if_not_void
 23801 00011D30 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23802 00011D35 E88B100000              	call malloc
 23803 00011D3A 50                      	push rax
 23804 00011D3B BF00000000              	mov rdi, 8 * 0	; new rib
 23805 00011D40 E880100000              	call malloc
 23806 00011D45 50                      	push rax
 23807 00011D46 BF08000000              	mov rdi, 8 * 1	; extended env
 23808 00011D4B E875100000              	call malloc
 23809 00011D50 488B7D10                	mov rdi, ENV
 23810 00011D54 BE00000000              	mov rsi, 0
 23811 00011D59 BA01000000              	mov rdx, 1
 23812                                  .L_lambda_simple_env_loop_0179:	; ext_env[i + 1] <-- env[i]
 23813 00011D5E 4883FE00                	cmp rsi, 0
 23814 00011D62 7410                    	je .L_lambda_simple_env_end_0179
 23815 00011D64 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23816 00011D68 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23817 00011D6C 48FFC6                  	inc rsi
 23818 00011D6F 48FFC2                  	inc rdx
 23819 00011D72 EBEA                    	jmp .L_lambda_simple_env_loop_0179
 23820                                  .L_lambda_simple_env_end_0179:
 23821 00011D74 5B                      	pop rbx
 23822 00011D75 BE00000000              	mov rsi, 0
 23823                                  .L_lambda_simple_params_loop_0179:	; copy params
 23824 00011D7A 4883FE00                	cmp rsi, 0
 23825 00011D7E 740E                    	je .L_lambda_simple_params_end_0179
 23826 00011D80 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23827 00011D85 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23828 00011D89 48FFC6                  	inc rsi
 23829 00011D8C EBEC                    	jmp .L_lambda_simple_params_loop_0179
 23830                                  .L_lambda_simple_params_end_0179:
 23831 00011D8E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23832 00011D91 4889C3                  	mov rbx, rax
 23833 00011D94 58                      	pop rax
 23834 00011D95 C60004                  	mov byte [rax], T_closure
 23835 00011D98 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23836 00011D9C 48C74009[A91D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0179
 23837 00011DA4 E97C020000              	jmp .L_lambda_simple_end_0179
 23838                                  .L_lambda_simple_code_0179:	; lambda-simple body
 23839 00011DA9 48837C241002            	cmp qword [rsp + 8 * 2], 2
 23840 00011DAF 740B                    	je .L_lambda_simple_arity_check_ok_0179
 23841 00011DB1 FF742410                	push qword [rsp + 8 * 2]
 23842 00011DB5 6A02                    	push 2
 23843 00011DB7 E9C20F0000              	jmp L_error_incorrect_arity_simple
 23844                                  .L_lambda_simple_arity_check_ok_0179:
 23845 00011DBC C8000000                	enter 0, 0
 23846                                  	; preparing a non-tail-call
 23847 00011DC0 48B8-                   	mov rax, L_constants + 1993
 23847 00011DC2 [C907000000000000] 
 23848 00011DCA 50                      	push rax
 23849 00011DCB 6A01                    	push 1	; arg count
 23850 00011DCD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23851 00011DD2 E8EE0F0000              	call malloc
 23852 00011DD7 50                      	push rax
 23853 00011DD8 BF10000000              	mov rdi, 8 * 2	; new rib
 23854 00011DDD E8E30F0000              	call malloc
 23855 00011DE2 50                      	push rax
 23856 00011DE3 BF10000000              	mov rdi, 8 * 2	; extended env
 23857 00011DE8 E8D80F0000              	call malloc
 23858 00011DED 488B7D10                	mov rdi, ENV
 23859 00011DF1 BE00000000              	mov rsi, 0
 23860 00011DF6 BA01000000              	mov rdx, 1
 23861                                  .L_lambda_simple_env_loop_017a:	; ext_env[i + 1] <-- env[i]
 23862 00011DFB 4883FE01                	cmp rsi, 1
 23863 00011DFF 7410                    	je .L_lambda_simple_env_end_017a
 23864 00011E01 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23865 00011E05 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23866 00011E09 48FFC6                  	inc rsi
 23867 00011E0C 48FFC2                  	inc rdx
 23868 00011E0F EBEA                    	jmp .L_lambda_simple_env_loop_017a
 23869                                  .L_lambda_simple_env_end_017a:
 23870 00011E11 5B                      	pop rbx
 23871 00011E12 BE00000000              	mov rsi, 0
 23872                                  .L_lambda_simple_params_loop_017a:	; copy params
 23873 00011E17 4883FE02                	cmp rsi, 2
 23874 00011E1B 740E                    	je .L_lambda_simple_params_end_017a
 23875 00011E1D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23876 00011E22 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23877 00011E26 48FFC6                  	inc rsi
 23878 00011E29 EBEC                    	jmp .L_lambda_simple_params_loop_017a
 23879                                  .L_lambda_simple_params_end_017a:
 23880 00011E2B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23881 00011E2E 4889C3                  	mov rbx, rax
 23882 00011E31 58                      	pop rax
 23883 00011E32 C60004                  	mov byte [rax], T_closure
 23884 00011E35 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23885 00011E39 48C74009[461E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017a
 23886 00011E41 E9CC010000              	jmp .L_lambda_simple_end_017a
 23887                                  .L_lambda_simple_code_017a:	; lambda-simple body
 23888 00011E46 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23889 00011E4C 740B                    	je .L_lambda_simple_arity_check_ok_017a
 23890 00011E4E FF742410                	push qword [rsp + 8 * 2]
 23891 00011E52 6A01                    	push 1
 23892 00011E54 E9250F0000              	jmp L_error_incorrect_arity_simple
 23893                                  .L_lambda_simple_arity_check_ok_017a:
 23894 00011E59 C8000000                	enter 0, 0
 23895 00011E5D 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 23896 00011E61 488903                  	mov qword [rbx], rax
 23897                                  
 23898 00011E64 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23899 00011E69 E8570F0000              	call malloc
 23900 00011E6E 50                      	push rax
 23901 00011E6F BF08000000              	mov rdi, 8 * 1	; new rib
 23902 00011E74 E84C0F0000              	call malloc
 23903 00011E79 50                      	push rax
 23904 00011E7A BF18000000              	mov rdi, 8 * 3	; extended env
 23905 00011E7F E8410F0000              	call malloc
 23906 00011E84 488B7D10                	mov rdi, ENV
 23907 00011E88 BE00000000              	mov rsi, 0
 23908 00011E8D BA01000000              	mov rdx, 1
 23909                                  .L_lambda_simple_env_loop_017b:	; ext_env[i + 1] <-- env[i]
 23910 00011E92 4883FE02                	cmp rsi, 2
 23911 00011E96 7410                    	je .L_lambda_simple_env_end_017b
 23912 00011E98 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23913 00011E9C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23914 00011EA0 48FFC6                  	inc rsi
 23915 00011EA3 48FFC2                  	inc rdx
 23916 00011EA6 EBEA                    	jmp .L_lambda_simple_env_loop_017b
 23917                                  .L_lambda_simple_env_end_017b:
 23918 00011EA8 5B                      	pop rbx
 23919 00011EA9 BE00000000              	mov rsi, 0
 23920                                  .L_lambda_simple_params_loop_017b:	; copy params
 23921 00011EAE 4883FE01                	cmp rsi, 1
 23922 00011EB2 740E                    	je .L_lambda_simple_params_end_017b
 23923 00011EB4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23924 00011EB9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23925 00011EBD 48FFC6                  	inc rsi
 23926 00011EC0 EBEC                    	jmp .L_lambda_simple_params_loop_017b
 23927                                  .L_lambda_simple_params_end_017b:
 23928 00011EC2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23929 00011EC5 4889C3                  	mov rbx, rax
 23930 00011EC8 58                      	pop rax
 23931 00011EC9 C60004                  	mov byte [rax], T_closure
 23932 00011ECC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23933 00011ED0 48C74009[DD1E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017b
 23934 00011ED8 E9FD000000              	jmp .L_lambda_simple_end_017b
 23935                                  .L_lambda_simple_code_017b:	; lambda-simple body
 23936 00011EDD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23937 00011EE3 740B                    	je .L_lambda_simple_arity_check_ok_017b
 23938 00011EE5 FF742410                	push qword [rsp + 8 * 2]
 23939 00011EE9 6A01                    	push 1
 23940 00011EEB E98E0E0000              	jmp L_error_incorrect_arity_simple
 23941                                  .L_lambda_simple_arity_check_ok_017b:
 23942 00011EF0 C8000000                	enter 0, 0
 23943                                  	; preparing a non-tail-call
 23944 00011EF4 488B4510                	mov rax, ENV
 23945 00011EF8 488B4008                	mov rax, qword [rax + 8 * 1]
 23946 00011EFC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 23947 00011EFF 50                      	push rax
 23948 00011F00 488B4520                	mov rax, PARAM(0)	; param i
 23949 00011F04 50                      	push rax
 23950 00011F05 6A02                    	push 2	; arg count
 23951 00011F07 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23952 00011F0F 803805                  	cmp byte [rax], T_undefined
 23953 00011F12 0F84800D0000            	je L_error_fvar_undefined
 23954 00011F18 803804                  	cmp byte [rax], T_closure
 23955 00011F1B 0F85FB0D0000            	jne L_error_non_closure
 23956 00011F21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23957 00011F24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23958 00011F27 483D[02000000]          	cmp rax, sob_boolean_false
 23959 00011F2D 0F8499000000            	je .L_if_else_0127
 23960                                  	; preparing a non-tail-call
 23961                                  	; preparing a non-tail-call
 23962                                  	; preparing a non-tail-call
 23963 00011F33 48B8-                   	mov rax, L_constants + 2270
 23963 00011F35 [DE08000000000000] 
 23964 00011F3D 50                      	push rax
 23965 00011F3E 488B4520                	mov rax, PARAM(0)	; param i
 23966 00011F42 50                      	push rax
 23967 00011F43 6A02                    	push 2	; arg count
 23968 00011F45 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 23969 00011F4D 803805                  	cmp byte [rax], T_undefined
 23970 00011F50 0F84420D0000            	je L_error_fvar_undefined
 23971 00011F56 803804                  	cmp byte [rax], T_closure
 23972 00011F59 0F85BD0D0000            	jne L_error_non_closure
 23973 00011F5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 23974 00011F62 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23975 00011F65 50                      	push rax
 23976 00011F66 6A01                    	push 1	; arg count
 23977 00011F68 488B4510                	mov rax, ENV
 23978 00011F6C 488B00                  	mov rax, qword [rax + 8 * 0]
 23979 00011F6F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23980 00011F72 488B00                  	mov rax, qword [rax]
 23981 00011F75 803804                  	cmp byte [rax], T_closure
 23982 00011F78 0F859E0D0000            	jne L_error_non_closure
 23983 00011F7E FF7001                  	push SOB_CLOSURE_ENV(rax)
 23984 00011F81 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23985 00011F84 50                      	push rax
 23986                                  	; preparing a non-tail-call
 23987 00011F85 488B4520                	mov rax, PARAM(0)	; param i
 23988 00011F89 50                      	push rax
 23989 00011F8A 6A01                    	push 1	; arg count
 23990 00011F8C 488B4510                	mov rax, ENV
 23991 00011F90 488B4008                	mov rax, qword [rax + 8 * 1]
 23992 00011F94 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 23993 00011F98 803804                  	cmp byte [rax], T_closure
 23994 00011F9B 0F857B0D0000            	jne L_error_non_closure
 23995 00011FA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23996 00011FA4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23997 00011FA7 50                      	push rax
 23998 00011FA8 6A02                    	push 2	; arg count
 23999 00011FAA 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 24000 00011FB2 803805                  	cmp byte [rax], T_undefined
 24001 00011FB5 0F84DD0C0000            	je L_error_fvar_undefined
 24002 00011FBB 803804                  	cmp byte [rax], T_closure
 24003 00011FBE 0F85580D0000            	jne L_error_non_closure
 24004 00011FC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24005 00011FC7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24006 00011FCA EB0A                    	jmp .L_if_end_0127
 24007                                  .L_if_else_0127:
 24008 00011FCC 48B8-                   	mov rax, L_constants + 1
 24008 00011FCE [0100000000000000] 
 24009                                  .L_if_end_0127:
 24010 00011FD6 C9                      	leave
 24011 00011FD7 C21800                  	ret AND_KILL_FRAME(1)
 24012                                  .L_lambda_simple_end_017b:	; new closure is in rax
 24013 00011FDA 50                      	push rax
 24014 00011FDB 488B4520                	mov rax, PARAM(0)	; param run
 24015 00011FDF 8F00                    	pop qword [rax]
 24016 00011FE1 48B8-                   	mov rax, sob_void
 24016 00011FE3 [0000000000000000] 
 24017                                  
 24018                                  	; preparing a non-tail-call
 24019 00011FEB 48B8-                   	mov rax, L_constants + 2135
 24019 00011FED [5708000000000000] 
 24020 00011FF5 50                      	push rax
 24021 00011FF6 6A01                    	push 1	; arg count
 24022 00011FF8 488B4520                	mov rax, PARAM(0)	; param run
 24023 00011FFC 488B00                  	mov rax, qword [rax]
 24024 00011FFF 803804                  	cmp byte [rax], T_closure
 24025 00012002 0F85140D0000            	jne L_error_non_closure
 24026 00012008 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24027 0001200B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24028 0001200E C9                      	leave
 24029 0001200F C21800                  	ret AND_KILL_FRAME(1)
 24030                                  .L_lambda_simple_end_017a:	; new closure is in rax
 24031 00012012 803804                  	cmp byte [rax], T_closure
 24032 00012015 0F85010D0000            	jne L_error_non_closure
 24033 0001201B FF7001                  	push SOB_CLOSURE_ENV(rax)
 24034 0001201E FF5009                  	call SOB_CLOSURE_CODE(rax)
 24035 00012021 C9                      	leave
 24036 00012022 C22000                  	ret AND_KILL_FRAME(2)
 24037                                  .L_lambda_simple_end_0179:	; new closure is in rax
 24038 00012025 48890425[47140000]      	mov qword [free_var_98], rax
 24039 0001202D 48B8-                   	mov rax, sob_void
 24039 0001202F [0000000000000000] 
 24040                                  
 24041 00012037 4889C7                  	mov rdi, rax
 24042 0001203A E8DB0F0000              	call print_sexpr_if_not_void
 24043 0001203F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24044 00012044 E87C0D0000              	call malloc
 24045 00012049 50                      	push rax
 24046 0001204A BF00000000              	mov rdi, 8 * 0	; new rib
 24047 0001204F E8710D0000              	call malloc
 24048 00012054 50                      	push rax
 24049 00012055 BF08000000              	mov rdi, 8 * 1	; extended env
 24050 0001205A E8660D0000              	call malloc
 24051 0001205F 488B7D10                	mov rdi, ENV
 24052 00012063 BE00000000              	mov rsi, 0
 24053 00012068 BA01000000              	mov rdx, 1
 24054                                  .L_lambda_simple_env_loop_017c:	; ext_env[i + 1] <-- env[i]
 24055 0001206D 4883FE00                	cmp rsi, 0
 24056 00012071 7410                    	je .L_lambda_simple_env_end_017c
 24057 00012073 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24058 00012077 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24059 0001207B 48FFC6                  	inc rsi
 24060 0001207E 48FFC2                  	inc rdx
 24061 00012081 EBEA                    	jmp .L_lambda_simple_env_loop_017c
 24062                                  .L_lambda_simple_env_end_017c:
 24063 00012083 5B                      	pop rbx
 24064 00012084 BE00000000              	mov rsi, 0
 24065                                  .L_lambda_simple_params_loop_017c:	; copy params
 24066 00012089 4883FE00                	cmp rsi, 0
 24067 0001208D 740E                    	je .L_lambda_simple_params_end_017c
 24068 0001208F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24069 00012094 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24070 00012098 48FFC6                  	inc rsi
 24071 0001209B EBEC                    	jmp .L_lambda_simple_params_loop_017c
 24072                                  .L_lambda_simple_params_end_017c:
 24073 0001209D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24074 000120A0 4889C3                  	mov rbx, rax
 24075 000120A3 58                      	pop rax
 24076 000120A4 C60004                  	mov byte [rax], T_closure
 24077 000120A7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24078 000120AB 48C74009[B8200100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017c
 24079 000120B3 E95A030000              	jmp .L_lambda_simple_end_017c
 24080                                  .L_lambda_simple_code_017c:	; lambda-simple body
 24081 000120B8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24082 000120BE 740B                    	je .L_lambda_simple_arity_check_ok_017c
 24083 000120C0 FF742410                	push qword [rsp + 8 * 2]
 24084 000120C4 6A02                    	push 2
 24085 000120C6 E9B30C0000              	jmp L_error_incorrect_arity_simple
 24086                                  .L_lambda_simple_arity_check_ok_017c:
 24087 000120CB C8000000                	enter 0, 0
 24088                                  	; preparing a non-tail-call
 24089                                  	; preparing a non-tail-call
 24090 000120CF 488B4520                	mov rax, PARAM(0)	; param n
 24091 000120D3 50                      	push rax
 24092 000120D4 6A01                    	push 1	; arg count
 24093 000120D6 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 24094 000120DE 803805                  	cmp byte [rax], T_undefined
 24095 000120E1 0F84B10B0000            	je L_error_fvar_undefined
 24096 000120E7 803804                  	cmp byte [rax], T_closure
 24097 000120EA 0F852C0C0000            	jne L_error_non_closure
 24098 000120F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24099 000120F3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24100 000120F6 50                      	push rax
 24101 000120F7 6A01                    	push 1	; arg count
 24102 000120F9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24103 000120FE E8C20C0000              	call malloc
 24104 00012103 50                      	push rax
 24105 00012104 BF10000000              	mov rdi, 8 * 2	; new rib
 24106 00012109 E8B70C0000              	call malloc
 24107 0001210E 50                      	push rax
 24108 0001210F BF10000000              	mov rdi, 8 * 2	; extended env
 24109 00012114 E8AC0C0000              	call malloc
 24110 00012119 488B7D10                	mov rdi, ENV
 24111 0001211D BE00000000              	mov rsi, 0
 24112 00012122 BA01000000              	mov rdx, 1
 24113                                  .L_lambda_simple_env_loop_017d:	; ext_env[i + 1] <-- env[i]
 24114 00012127 4883FE01                	cmp rsi, 1
 24115 0001212B 7410                    	je .L_lambda_simple_env_end_017d
 24116 0001212D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24117 00012131 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24118 00012135 48FFC6                  	inc rsi
 24119 00012138 48FFC2                  	inc rdx
 24120 0001213B EBEA                    	jmp .L_lambda_simple_env_loop_017d
 24121                                  .L_lambda_simple_env_end_017d:
 24122 0001213D 5B                      	pop rbx
 24123 0001213E BE00000000              	mov rsi, 0
 24124                                  .L_lambda_simple_params_loop_017d:	; copy params
 24125 00012143 4883FE02                	cmp rsi, 2
 24126 00012147 740E                    	je .L_lambda_simple_params_end_017d
 24127 00012149 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24128 0001214E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24129 00012152 48FFC6                  	inc rsi
 24130 00012155 EBEC                    	jmp .L_lambda_simple_params_loop_017d
 24131                                  .L_lambda_simple_params_end_017d:
 24132 00012157 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24133 0001215A 4889C3                  	mov rbx, rax
 24134 0001215D 58                      	pop rax
 24135 0001215E C60004                  	mov byte [rax], T_closure
 24136 00012161 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24137 00012165 48C74009[72210100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017d
 24138 0001216D E98D020000              	jmp .L_lambda_simple_end_017d
 24139                                  .L_lambda_simple_code_017d:	; lambda-simple body
 24140 00012172 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24141 00012178 740B                    	je .L_lambda_simple_arity_check_ok_017d
 24142 0001217A FF742410                	push qword [rsp + 8 * 2]
 24143 0001217E 6A01                    	push 1
 24144 00012180 E9F90B0000              	jmp L_error_incorrect_arity_simple
 24145                                  .L_lambda_simple_arity_check_ok_017d:
 24146 00012185 C8000000                	enter 0, 0
 24147                                  	; preparing a non-tail-call
 24148 00012189 48B8-                   	mov rax, L_constants + 1993
 24148 0001218B [C907000000000000] 
 24149 00012193 50                      	push rax
 24150 00012194 6A01                    	push 1	; arg count
 24151 00012196 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24152 0001219B E8250C0000              	call malloc
 24153 000121A0 50                      	push rax
 24154 000121A1 BF08000000              	mov rdi, 8 * 1	; new rib
 24155 000121A6 E81A0C0000              	call malloc
 24156 000121AB 50                      	push rax
 24157 000121AC BF18000000              	mov rdi, 8 * 3	; extended env
 24158 000121B1 E80F0C0000              	call malloc
 24159 000121B6 488B7D10                	mov rdi, ENV
 24160 000121BA BE00000000              	mov rsi, 0
 24161 000121BF BA01000000              	mov rdx, 1
 24162                                  .L_lambda_simple_env_loop_017e:	; ext_env[i + 1] <-- env[i]
 24163 000121C4 4883FE02                	cmp rsi, 2
 24164 000121C8 7410                    	je .L_lambda_simple_env_end_017e
 24165 000121CA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24166 000121CE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24167 000121D2 48FFC6                  	inc rsi
 24168 000121D5 48FFC2                  	inc rdx
 24169 000121D8 EBEA                    	jmp .L_lambda_simple_env_loop_017e
 24170                                  .L_lambda_simple_env_end_017e:
 24171 000121DA 5B                      	pop rbx
 24172 000121DB BE00000000              	mov rsi, 0
 24173                                  .L_lambda_simple_params_loop_017e:	; copy params
 24174 000121E0 4883FE01                	cmp rsi, 1
 24175 000121E4 740E                    	je .L_lambda_simple_params_end_017e
 24176 000121E6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24177 000121EB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24178 000121EF 48FFC6                  	inc rsi
 24179 000121F2 EBEC                    	jmp .L_lambda_simple_params_loop_017e
 24180                                  .L_lambda_simple_params_end_017e:
 24181 000121F4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24182 000121F7 4889C3                  	mov rbx, rax
 24183 000121FA 58                      	pop rax
 24184 000121FB C60004                  	mov byte [rax], T_closure
 24185 000121FE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24186 00012202 48C74009[0F220100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017e
 24187 0001220A E9DD010000              	jmp .L_lambda_simple_end_017e
 24188                                  .L_lambda_simple_code_017e:	; lambda-simple body
 24189 0001220F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24190 00012215 740B                    	je .L_lambda_simple_arity_check_ok_017e
 24191 00012217 FF742410                	push qword [rsp + 8 * 2]
 24192 0001221B 6A01                    	push 1
 24193 0001221D E95C0B0000              	jmp L_error_incorrect_arity_simple
 24194                                  .L_lambda_simple_arity_check_ok_017e:
 24195 00012222 C8000000                	enter 0, 0
 24196 00012226 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 24197 0001222A 488903                  	mov qword [rbx], rax
 24198                                  
 24199 0001222D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24200 00012232 E88E0B0000              	call malloc
 24201 00012237 50                      	push rax
 24202 00012238 BF08000000              	mov rdi, 8 * 1	; new rib
 24203 0001223D E8830B0000              	call malloc
 24204 00012242 50                      	push rax
 24205 00012243 BF20000000              	mov rdi, 8 * 4	; extended env
 24206 00012248 E8780B0000              	call malloc
 24207 0001224D 488B7D10                	mov rdi, ENV
 24208 00012251 BE00000000              	mov rsi, 0
 24209 00012256 BA01000000              	mov rdx, 1
 24210                                  .L_lambda_simple_env_loop_017f:	; ext_env[i + 1] <-- env[i]
 24211 0001225B 4883FE03                	cmp rsi, 3
 24212 0001225F 7410                    	je .L_lambda_simple_env_end_017f
 24213 00012261 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24214 00012265 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24215 00012269 48FFC6                  	inc rsi
 24216 0001226C 48FFC2                  	inc rdx
 24217 0001226F EBEA                    	jmp .L_lambda_simple_env_loop_017f
 24218                                  .L_lambda_simple_env_end_017f:
 24219 00012271 5B                      	pop rbx
 24220 00012272 BE00000000              	mov rsi, 0
 24221                                  .L_lambda_simple_params_loop_017f:	; copy params
 24222 00012277 4883FE01                	cmp rsi, 1
 24223 0001227B 740E                    	je .L_lambda_simple_params_end_017f
 24224 0001227D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24225 00012282 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24226 00012286 48FFC6                  	inc rsi
 24227 00012289 EBEC                    	jmp .L_lambda_simple_params_loop_017f
 24228                                  .L_lambda_simple_params_end_017f:
 24229 0001228B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24230 0001228E 4889C3                  	mov rbx, rax
 24231 00012291 58                      	pop rax
 24232 00012292 C60004                  	mov byte [rax], T_closure
 24233 00012295 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24234 00012299 48C74009[A6220100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_017f
 24235 000122A1 E90E010000              	jmp .L_lambda_simple_end_017f
 24236                                  .L_lambda_simple_code_017f:	; lambda-simple body
 24237 000122A6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24238 000122AC 740B                    	je .L_lambda_simple_arity_check_ok_017f
 24239 000122AE FF742410                	push qword [rsp + 8 * 2]
 24240 000122B2 6A01                    	push 1
 24241 000122B4 E9C50A0000              	jmp L_error_incorrect_arity_simple
 24242                                  .L_lambda_simple_arity_check_ok_017f:
 24243 000122B9 C8000000                	enter 0, 0
 24244                                  	; preparing a non-tail-call
 24245 000122BD 488B4510                	mov rax, ENV
 24246 000122C1 488B4010                	mov rax, qword [rax + 8 * 2]
 24247 000122C5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 24248 000122C8 50                      	push rax
 24249 000122C9 488B4520                	mov rax, PARAM(0)	; param i
 24250 000122CD 50                      	push rax
 24251 000122CE 6A02                    	push 2	; arg count
 24252 000122D0 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 24253 000122D8 803805                  	cmp byte [rax], T_undefined
 24254 000122DB 0F84B7090000            	je L_error_fvar_undefined
 24255 000122E1 803804                  	cmp byte [rax], T_closure
 24256 000122E4 0F85320A0000            	jne L_error_non_closure
 24257 000122EA FF7001                  	push SOB_CLOSURE_ENV(rax)
 24258 000122ED FF5009                  	call SOB_CLOSURE_CODE(rax)
 24259 000122F0 483D[02000000]          	cmp rax, sob_boolean_false
 24260 000122F6 0F84A9000000            	je .L_if_else_0128
 24261                                  	; preparing a non-tail-call
 24262                                  	; preparing a non-tail-call
 24263 000122FC 488B4520                	mov rax, PARAM(0)	; param i
 24264 00012300 50                      	push rax
 24265 00012301 6A01                    	push 1	; arg count
 24266 00012303 488B4510                	mov rax, ENV
 24267 00012307 488B4010                	mov rax, qword [rax + 8 * 2]
 24268 0001230B 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 24269 0001230F 803804                  	cmp byte [rax], T_closure
 24270 00012312 0F85040A0000            	jne L_error_non_closure
 24271 00012318 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24272 0001231B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24273 0001231E 50                      	push rax
 24274 0001231F 488B4520                	mov rax, PARAM(0)	; param i
 24275 00012323 50                      	push rax
 24276 00012324 488B4510                	mov rax, ENV
 24277 00012328 488B4008                	mov rax, qword [rax + 8 * 1]
 24278 0001232C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 24279 0001232F 50                      	push rax
 24280 00012330 6A03                    	push 3	; arg count
 24281 00012332 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 24282 0001233A 803805                  	cmp byte [rax], T_undefined
 24283 0001233D 0F8455090000            	je L_error_fvar_undefined
 24284 00012343 803804                  	cmp byte [rax], T_closure
 24285 00012346 0F85D0090000            	jne L_error_non_closure
 24286 0001234C FF7001                  	push SOB_CLOSURE_ENV(rax)
 24287 0001234F FF5009                  	call SOB_CLOSURE_CODE(rax)
 24288                                  
 24289                                  	; preparing a non-tail-call
 24290                                  	; preparing a non-tail-call
 24291 00012352 48B8-                   	mov rax, L_constants + 2270
 24291 00012354 [DE08000000000000] 
 24292 0001235C 50                      	push rax
 24293 0001235D 488B4520                	mov rax, PARAM(0)	; param i
 24294 00012361 50                      	push rax
 24295 00012362 6A02                    	push 2	; arg count
 24296 00012364 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 24297 0001236C 803805                  	cmp byte [rax], T_undefined
 24298 0001236F 0F8423090000            	je L_error_fvar_undefined
 24299 00012375 803804                  	cmp byte [rax], T_closure
 24300 00012378 0F859E090000            	jne L_error_non_closure
 24301 0001237E FF7001                  	push SOB_CLOSURE_ENV(rax)
 24302 00012381 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24303 00012384 50                      	push rax
 24304 00012385 6A01                    	push 1	; arg count
 24305 00012387 488B4510                	mov rax, ENV
 24306 0001238B 488B00                  	mov rax, qword [rax + 8 * 0]
 24307 0001238E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 24308 00012391 488B00                  	mov rax, qword [rax]
 24309 00012394 803804                  	cmp byte [rax], T_closure
 24310 00012397 0F857F090000            	jne L_error_non_closure
 24311 0001239D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24312 000123A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24313 000123A3 EB0B                    	jmp .L_if_end_0128
 24314                                  .L_if_else_0128:
 24315 000123A5 488B4510                	mov rax, ENV
 24316 000123A9 488B4008                	mov rax, qword [rax + 8 * 1]
 24317 000123AD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 24318                                  .L_if_end_0128:
 24319 000123B0 C9                      	leave
 24320 000123B1 C21800                  	ret AND_KILL_FRAME(1)
 24321                                  .L_lambda_simple_end_017f:	; new closure is in rax
 24322 000123B4 50                      	push rax
 24323 000123B5 488B4520                	mov rax, PARAM(0)	; param run
 24324 000123B9 8F00                    	pop qword [rax]
 24325 000123BB 48B8-                   	mov rax, sob_void
 24325 000123BD [0000000000000000] 
 24326                                  
 24327                                  	; preparing a non-tail-call
 24328 000123C5 48B8-                   	mov rax, L_constants + 2135
 24328 000123C7 [5708000000000000] 
 24329 000123CF 50                      	push rax
 24330 000123D0 6A01                    	push 1	; arg count
 24331 000123D2 488B4520                	mov rax, PARAM(0)	; param run
 24332 000123D6 488B00                  	mov rax, qword [rax]
 24333 000123D9 803804                  	cmp byte [rax], T_closure
 24334 000123DC 0F853A090000            	jne L_error_non_closure
 24335 000123E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24336 000123E5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24337 000123E8 C9                      	leave
 24338 000123E9 C21800                  	ret AND_KILL_FRAME(1)
 24339                                  .L_lambda_simple_end_017e:	; new closure is in rax
 24340 000123EC 803804                  	cmp byte [rax], T_closure
 24341 000123EF 0F8527090000            	jne L_error_non_closure
 24342 000123F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24343 000123F8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24344 000123FB C9                      	leave
 24345 000123FC C21800                  	ret AND_KILL_FRAME(1)
 24346                                  .L_lambda_simple_end_017d:	; new closure is in rax
 24347 000123FF 803804                  	cmp byte [rax], T_closure
 24348 00012402 0F8514090000            	jne L_error_non_closure
 24349 00012408 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24350 0001240B FF5009                  	call SOB_CLOSURE_CODE(rax)
 24351 0001240E C9                      	leave
 24352 0001240F C22000                  	ret AND_KILL_FRAME(2)
 24353                                  .L_lambda_simple_end_017c:	; new closure is in rax
 24354 00012412 48890425[69140000]      	mov qword [free_var_100], rax
 24355 0001241A 48B8-                   	mov rax, sob_void
 24355 0001241C [0000000000000000] 
 24356                                  
 24357 00012424 4889C7                  	mov rdi, rax
 24358 00012427 E8EE0B0000              	call print_sexpr_if_not_void
 24359 0001242C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24360 00012431 E88F090000              	call malloc
 24361 00012436 50                      	push rax
 24362 00012437 BF00000000              	mov rdi, 8 * 0	; new rib
 24363 0001243C E884090000              	call malloc
 24364 00012441 50                      	push rax
 24365 00012442 BF08000000              	mov rdi, 8 * 1	; extended env
 24366 00012447 E879090000              	call malloc
 24367 0001244C 488B7D10                	mov rdi, ENV
 24368 00012450 BE00000000              	mov rsi, 0
 24369 00012455 BA01000000              	mov rdx, 1
 24370                                  .L_lambda_simple_env_loop_0180:	; ext_env[i + 1] <-- env[i]
 24371 0001245A 4883FE00                	cmp rsi, 0
 24372 0001245E 7410                    	je .L_lambda_simple_env_end_0180
 24373 00012460 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24374 00012464 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24375 00012468 48FFC6                  	inc rsi
 24376 0001246B 48FFC2                  	inc rdx
 24377 0001246E EBEA                    	jmp .L_lambda_simple_env_loop_0180
 24378                                  .L_lambda_simple_env_end_0180:
 24379 00012470 5B                      	pop rbx
 24380 00012471 BE00000000              	mov rsi, 0
 24381                                  .L_lambda_simple_params_loop_0180:	; copy params
 24382 00012476 4883FE00                	cmp rsi, 0
 24383 0001247A 740E                    	je .L_lambda_simple_params_end_0180
 24384 0001247C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24385 00012481 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24386 00012485 48FFC6                  	inc rsi
 24387 00012488 EBEC                    	jmp .L_lambda_simple_params_loop_0180
 24388                                  .L_lambda_simple_params_end_0180:
 24389 0001248A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24390 0001248D 4889C3                  	mov rbx, rax
 24391 00012490 58                      	pop rax
 24392 00012491 C60004                  	mov byte [rax], T_closure
 24393 00012494 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24394 00012498 48C74009[A5240100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0180
 24395 000124A0 E95A030000              	jmp .L_lambda_simple_end_0180
 24396                                  .L_lambda_simple_code_0180:	; lambda-simple body
 24397 000124A5 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24398 000124AB 740B                    	je .L_lambda_simple_arity_check_ok_0180
 24399 000124AD FF742410                	push qword [rsp + 8 * 2]
 24400 000124B1 6A02                    	push 2
 24401 000124B3 E9C6080000              	jmp L_error_incorrect_arity_simple
 24402                                  .L_lambda_simple_arity_check_ok_0180:
 24403 000124B8 C8000000                	enter 0, 0
 24404                                  	; preparing a non-tail-call
 24405                                  	; preparing a non-tail-call
 24406 000124BC 488B4520                	mov rax, PARAM(0)	; param n
 24407 000124C0 50                      	push rax
 24408 000124C1 6A01                    	push 1	; arg count
 24409 000124C3 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 24410 000124CB 803805                  	cmp byte [rax], T_undefined
 24411 000124CE 0F84C4070000            	je L_error_fvar_undefined
 24412 000124D4 803804                  	cmp byte [rax], T_closure
 24413 000124D7 0F853F080000            	jne L_error_non_closure
 24414 000124DD FF7001                  	push SOB_CLOSURE_ENV(rax)
 24415 000124E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24416 000124E3 50                      	push rax
 24417 000124E4 6A01                    	push 1	; arg count
 24418 000124E6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24419 000124EB E8D5080000              	call malloc
 24420 000124F0 50                      	push rax
 24421 000124F1 BF10000000              	mov rdi, 8 * 2	; new rib
 24422 000124F6 E8CA080000              	call malloc
 24423 000124FB 50                      	push rax
 24424 000124FC BF10000000              	mov rdi, 8 * 2	; extended env
 24425 00012501 E8BF080000              	call malloc
 24426 00012506 488B7D10                	mov rdi, ENV
 24427 0001250A BE00000000              	mov rsi, 0
 24428 0001250F BA01000000              	mov rdx, 1
 24429                                  .L_lambda_simple_env_loop_0181:	; ext_env[i + 1] <-- env[i]
 24430 00012514 4883FE01                	cmp rsi, 1
 24431 00012518 7410                    	je .L_lambda_simple_env_end_0181
 24432 0001251A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24433 0001251E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24434 00012522 48FFC6                  	inc rsi
 24435 00012525 48FFC2                  	inc rdx
 24436 00012528 EBEA                    	jmp .L_lambda_simple_env_loop_0181
 24437                                  .L_lambda_simple_env_end_0181:
 24438 0001252A 5B                      	pop rbx
 24439 0001252B BE00000000              	mov rsi, 0
 24440                                  .L_lambda_simple_params_loop_0181:	; copy params
 24441 00012530 4883FE02                	cmp rsi, 2
 24442 00012534 740E                    	je .L_lambda_simple_params_end_0181
 24443 00012536 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24444 0001253B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24445 0001253F 48FFC6                  	inc rsi
 24446 00012542 EBEC                    	jmp .L_lambda_simple_params_loop_0181
 24447                                  .L_lambda_simple_params_end_0181:
 24448 00012544 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24449 00012547 4889C3                  	mov rbx, rax
 24450 0001254A 58                      	pop rax
 24451 0001254B C60004                  	mov byte [rax], T_closure
 24452 0001254E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24453 00012552 48C74009[5F250100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0181
 24454 0001255A E98D020000              	jmp .L_lambda_simple_end_0181
 24455                                  .L_lambda_simple_code_0181:	; lambda-simple body
 24456 0001255F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24457 00012565 740B                    	je .L_lambda_simple_arity_check_ok_0181
 24458 00012567 FF742410                	push qword [rsp + 8 * 2]
 24459 0001256B 6A01                    	push 1
 24460 0001256D E90C080000              	jmp L_error_incorrect_arity_simple
 24461                                  .L_lambda_simple_arity_check_ok_0181:
 24462 00012572 C8000000                	enter 0, 0
 24463                                  	; preparing a non-tail-call
 24464 00012576 48B8-                   	mov rax, L_constants + 1993
 24464 00012578 [C907000000000000] 
 24465 00012580 50                      	push rax
 24466 00012581 6A01                    	push 1	; arg count
 24467 00012583 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24468 00012588 E838080000              	call malloc
 24469 0001258D 50                      	push rax
 24470 0001258E BF08000000              	mov rdi, 8 * 1	; new rib
 24471 00012593 E82D080000              	call malloc
 24472 00012598 50                      	push rax
 24473 00012599 BF18000000              	mov rdi, 8 * 3	; extended env
 24474 0001259E E822080000              	call malloc
 24475 000125A3 488B7D10                	mov rdi, ENV
 24476 000125A7 BE00000000              	mov rsi, 0
 24477 000125AC BA01000000              	mov rdx, 1
 24478                                  .L_lambda_simple_env_loop_0182:	; ext_env[i + 1] <-- env[i]
 24479 000125B1 4883FE02                	cmp rsi, 2
 24480 000125B5 7410                    	je .L_lambda_simple_env_end_0182
 24481 000125B7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24482 000125BB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24483 000125BF 48FFC6                  	inc rsi
 24484 000125C2 48FFC2                  	inc rdx
 24485 000125C5 EBEA                    	jmp .L_lambda_simple_env_loop_0182
 24486                                  .L_lambda_simple_env_end_0182:
 24487 000125C7 5B                      	pop rbx
 24488 000125C8 BE00000000              	mov rsi, 0
 24489                                  .L_lambda_simple_params_loop_0182:	; copy params
 24490 000125CD 4883FE01                	cmp rsi, 1
 24491 000125D1 740E                    	je .L_lambda_simple_params_end_0182
 24492 000125D3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24493 000125D8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24494 000125DC 48FFC6                  	inc rsi
 24495 000125DF EBEC                    	jmp .L_lambda_simple_params_loop_0182
 24496                                  .L_lambda_simple_params_end_0182:
 24497 000125E1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24498 000125E4 4889C3                  	mov rbx, rax
 24499 000125E7 58                      	pop rax
 24500 000125E8 C60004                  	mov byte [rax], T_closure
 24501 000125EB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24502 000125EF 48C74009[FC250100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0182
 24503 000125F7 E9DD010000              	jmp .L_lambda_simple_end_0182
 24504                                  .L_lambda_simple_code_0182:	; lambda-simple body
 24505 000125FC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24506 00012602 740B                    	je .L_lambda_simple_arity_check_ok_0182
 24507 00012604 FF742410                	push qword [rsp + 8 * 2]
 24508 00012608 6A01                    	push 1
 24509 0001260A E96F070000              	jmp L_error_incorrect_arity_simple
 24510                                  .L_lambda_simple_arity_check_ok_0182:
 24511 0001260F C8000000                	enter 0, 0
 24512 00012613 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 24513 00012617 488903                  	mov qword [rbx], rax
 24514                                  
 24515 0001261A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24516 0001261F E8A1070000              	call malloc
 24517 00012624 50                      	push rax
 24518 00012625 BF08000000              	mov rdi, 8 * 1	; new rib
 24519 0001262A E896070000              	call malloc
 24520 0001262F 50                      	push rax
 24521 00012630 BF20000000              	mov rdi, 8 * 4	; extended env
 24522 00012635 E88B070000              	call malloc
 24523 0001263A 488B7D10                	mov rdi, ENV
 24524 0001263E BE00000000              	mov rsi, 0
 24525 00012643 BA01000000              	mov rdx, 1
 24526                                  .L_lambda_simple_env_loop_0183:	; ext_env[i + 1] <-- env[i]
 24527 00012648 4883FE03                	cmp rsi, 3
 24528 0001264C 7410                    	je .L_lambda_simple_env_end_0183
 24529 0001264E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24530 00012652 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24531 00012656 48FFC6                  	inc rsi
 24532 00012659 48FFC2                  	inc rdx
 24533 0001265C EBEA                    	jmp .L_lambda_simple_env_loop_0183
 24534                                  .L_lambda_simple_env_end_0183:
 24535 0001265E 5B                      	pop rbx
 24536 0001265F BE00000000              	mov rsi, 0
 24537                                  .L_lambda_simple_params_loop_0183:	; copy params
 24538 00012664 4883FE01                	cmp rsi, 1
 24539 00012668 740E                    	je .L_lambda_simple_params_end_0183
 24540 0001266A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24541 0001266F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24542 00012673 48FFC6                  	inc rsi
 24543 00012676 EBEC                    	jmp .L_lambda_simple_params_loop_0183
 24544                                  .L_lambda_simple_params_end_0183:
 24545 00012678 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24546 0001267B 4889C3                  	mov rbx, rax
 24547 0001267E 58                      	pop rax
 24548 0001267F C60004                  	mov byte [rax], T_closure
 24549 00012682 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24550 00012686 48C74009[93260100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0183
 24551 0001268E E90E010000              	jmp .L_lambda_simple_end_0183
 24552                                  .L_lambda_simple_code_0183:	; lambda-simple body
 24553 00012693 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24554 00012699 740B                    	je .L_lambda_simple_arity_check_ok_0183
 24555 0001269B FF742410                	push qword [rsp + 8 * 2]
 24556 0001269F 6A01                    	push 1
 24557 000126A1 E9D8060000              	jmp L_error_incorrect_arity_simple
 24558                                  .L_lambda_simple_arity_check_ok_0183:
 24559 000126A6 C8000000                	enter 0, 0
 24560                                  	; preparing a non-tail-call
 24561 000126AA 488B4510                	mov rax, ENV
 24562 000126AE 488B4010                	mov rax, qword [rax + 8 * 2]
 24563 000126B2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 24564 000126B5 50                      	push rax
 24565 000126B6 488B4520                	mov rax, PARAM(0)	; param i
 24566 000126BA 50                      	push rax
 24567 000126BB 6A02                    	push 2	; arg count
 24568 000126BD 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 24569 000126C5 803805                  	cmp byte [rax], T_undefined
 24570 000126C8 0F84CA050000            	je L_error_fvar_undefined
 24571 000126CE 803804                  	cmp byte [rax], T_closure
 24572 000126D1 0F8545060000            	jne L_error_non_closure
 24573 000126D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24574 000126DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 24575 000126DD 483D[02000000]          	cmp rax, sob_boolean_false
 24576 000126E3 0F84A9000000            	je .L_if_else_0129
 24577                                  	; preparing a non-tail-call
 24578                                  	; preparing a non-tail-call
 24579 000126E9 488B4520                	mov rax, PARAM(0)	; param i
 24580 000126ED 50                      	push rax
 24581 000126EE 6A01                    	push 1	; arg count
 24582 000126F0 488B4510                	mov rax, ENV
 24583 000126F4 488B4010                	mov rax, qword [rax + 8 * 2]
 24584 000126F8 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 24585 000126FC 803804                  	cmp byte [rax], T_closure
 24586 000126FF 0F8517060000            	jne L_error_non_closure
 24587 00012705 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24588 00012708 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24589 0001270B 50                      	push rax
 24590 0001270C 488B4520                	mov rax, PARAM(0)	; param i
 24591 00012710 50                      	push rax
 24592 00012711 488B4510                	mov rax, ENV
 24593 00012715 488B4008                	mov rax, qword [rax + 8 * 1]
 24594 00012719 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 24595 0001271C 50                      	push rax
 24596 0001271D 6A03                    	push 3	; arg count
 24597 0001271F 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 24598 00012727 803805                  	cmp byte [rax], T_undefined
 24599 0001272A 0F8468050000            	je L_error_fvar_undefined
 24600 00012730 803804                  	cmp byte [rax], T_closure
 24601 00012733 0F85E3050000            	jne L_error_non_closure
 24602 00012739 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24603 0001273C FF5009                  	call SOB_CLOSURE_CODE(rax)
 24604                                  
 24605                                  	; preparing a non-tail-call
 24606                                  	; preparing a non-tail-call
 24607 0001273F 48B8-                   	mov rax, L_constants + 2270
 24607 00012741 [DE08000000000000] 
 24608 00012749 50                      	push rax
 24609 0001274A 488B4520                	mov rax, PARAM(0)	; param i
 24610 0001274E 50                      	push rax
 24611 0001274F 6A02                    	push 2	; arg count
 24612 00012751 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 24613 00012759 803805                  	cmp byte [rax], T_undefined
 24614 0001275C 0F8436050000            	je L_error_fvar_undefined
 24615 00012762 803804                  	cmp byte [rax], T_closure
 24616 00012765 0F85B1050000            	jne L_error_non_closure
 24617 0001276B FF7001                  	push SOB_CLOSURE_ENV(rax)
 24618 0001276E FF5009                  	call SOB_CLOSURE_CODE(rax)
 24619 00012771 50                      	push rax
 24620 00012772 6A01                    	push 1	; arg count
 24621 00012774 488B4510                	mov rax, ENV
 24622 00012778 488B00                  	mov rax, qword [rax + 8 * 0]
 24623 0001277B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 24624 0001277E 488B00                  	mov rax, qword [rax]
 24625 00012781 803804                  	cmp byte [rax], T_closure
 24626 00012784 0F8592050000            	jne L_error_non_closure
 24627 0001278A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24628 0001278D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24629 00012790 EB0B                    	jmp .L_if_end_0129
 24630                                  .L_if_else_0129:
 24631 00012792 488B4510                	mov rax, ENV
 24632 00012796 488B4008                	mov rax, qword [rax + 8 * 1]
 24633 0001279A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 24634                                  .L_if_end_0129:
 24635 0001279D C9                      	leave
 24636 0001279E C21800                  	ret AND_KILL_FRAME(1)
 24637                                  .L_lambda_simple_end_0183:	; new closure is in rax
 24638 000127A1 50                      	push rax
 24639 000127A2 488B4520                	mov rax, PARAM(0)	; param run
 24640 000127A6 8F00                    	pop qword [rax]
 24641 000127A8 48B8-                   	mov rax, sob_void
 24641 000127AA [0000000000000000] 
 24642                                  
 24643                                  	; preparing a non-tail-call
 24644 000127B2 48B8-                   	mov rax, L_constants + 2135
 24644 000127B4 [5708000000000000] 
 24645 000127BC 50                      	push rax
 24646 000127BD 6A01                    	push 1	; arg count
 24647 000127BF 488B4520                	mov rax, PARAM(0)	; param run
 24648 000127C3 488B00                  	mov rax, qword [rax]
 24649 000127C6 803804                  	cmp byte [rax], T_closure
 24650 000127C9 0F854D050000            	jne L_error_non_closure
 24651 000127CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 24652 000127D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24653 000127D5 C9                      	leave
 24654 000127D6 C21800                  	ret AND_KILL_FRAME(1)
 24655                                  .L_lambda_simple_end_0182:	; new closure is in rax
 24656 000127D9 803804                  	cmp byte [rax], T_closure
 24657 000127DC 0F853A050000            	jne L_error_non_closure
 24658 000127E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24659 000127E5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24660 000127E8 C9                      	leave
 24661 000127E9 C21800                  	ret AND_KILL_FRAME(1)
 24662                                  .L_lambda_simple_end_0181:	; new closure is in rax
 24663 000127EC 803804                  	cmp byte [rax], T_closure
 24664 000127EF 0F8527050000            	jne L_error_non_closure
 24665 000127F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24666 000127F8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24667 000127FB C9                      	leave
 24668 000127FC C22000                  	ret AND_KILL_FRAME(2)
 24669                                  .L_lambda_simple_end_0180:	; new closure is in rax
 24670 000127FF 48890425[8B140000]      	mov qword [free_var_102], rax
 24671 00012807 48B8-                   	mov rax, sob_void
 24671 00012809 [0000000000000000] 
 24672                                  
 24673 00012811 4889C7                  	mov rdi, rax
 24674 00012814 E801080000              	call print_sexpr_if_not_void
 24675 00012819 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24676 0001281E E8A2050000              	call malloc
 24677 00012823 50                      	push rax
 24678 00012824 BF00000000              	mov rdi, 8 * 0	; new rib
 24679 00012829 E897050000              	call malloc
 24680 0001282E 50                      	push rax
 24681 0001282F BF08000000              	mov rdi, 8 * 1	; extended env
 24682 00012834 E88C050000              	call malloc
 24683 00012839 488B7D10                	mov rdi, ENV
 24684 0001283D BE00000000              	mov rsi, 0
 24685 00012842 BA01000000              	mov rdx, 1
 24686                                  .L_lambda_simple_env_loop_0184:	; ext_env[i + 1] <-- env[i]
 24687 00012847 4883FE00                	cmp rsi, 0
 24688 0001284B 7410                    	je .L_lambda_simple_env_end_0184
 24689 0001284D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24690 00012851 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24691 00012855 48FFC6                  	inc rsi
 24692 00012858 48FFC2                  	inc rdx
 24693 0001285B EBEA                    	jmp .L_lambda_simple_env_loop_0184
 24694                                  .L_lambda_simple_env_end_0184:
 24695 0001285D 5B                      	pop rbx
 24696 0001285E BE00000000              	mov rsi, 0
 24697                                  .L_lambda_simple_params_loop_0184:	; copy params
 24698 00012863 4883FE00                	cmp rsi, 0
 24699 00012867 740E                    	je .L_lambda_simple_params_end_0184
 24700 00012869 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24701 0001286E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24702 00012872 48FFC6                  	inc rsi
 24703 00012875 EBEC                    	jmp .L_lambda_simple_params_loop_0184
 24704                                  .L_lambda_simple_params_end_0184:
 24705 00012877 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24706 0001287A 4889C3                  	mov rbx, rax
 24707 0001287D 58                      	pop rax
 24708 0001287E C60004                  	mov byte [rax], T_closure
 24709 00012881 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24710 00012885 48C74009[92280100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0184
 24711 0001288D E9ED010000              	jmp .L_lambda_simple_end_0184
 24712                                  .L_lambda_simple_code_0184:	; lambda-simple body
 24713 00012892 48837C241003            	cmp qword [rsp + 8 * 2], 3
 24714 00012898 740B                    	je .L_lambda_simple_arity_check_ok_0184
 24715 0001289A FF742410                	push qword [rsp + 8 * 2]
 24716 0001289E 6A03                    	push 3
 24717 000128A0 E9D9040000              	jmp L_error_incorrect_arity_simple
 24718                                  .L_lambda_simple_arity_check_ok_0184:
 24719 000128A5 C8000000                	enter 0, 0
 24720                                  	; preparing a non-tail-call
 24721 000128A9 488B4530                	mov rax, PARAM(2)	; param n
 24722 000128AD 50                      	push rax
 24723 000128AE 6A01                    	push 1	; arg count
 24724 000128B0 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 24725 000128B8 803805                  	cmp byte [rax], T_undefined
 24726 000128BB 0F84D7030000            	je L_error_fvar_undefined
 24727 000128C1 803804                  	cmp byte [rax], T_closure
 24728 000128C4 0F8552040000            	jne L_error_non_closure
 24729 000128CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 24730 000128CD FF5009                  	call SOB_CLOSURE_CODE(rax)
 24731 000128D0 483D[02000000]          	cmp rax, sob_boolean_false
 24732 000128D6 740F                    	je .L_if_else_012c
 24733 000128D8 48B8-                   	mov rax, L_constants + 3485
 24733 000128DA [9D0D000000000000] 
 24734 000128E2 E994010000              	jmp .L_if_end_012c
 24735                                  .L_if_else_012c:
 24736                                  	; preparing a non-tail-call
 24737 000128E7 488B4528                	mov rax, PARAM(1)	; param b
 24738 000128EB 50                      	push rax
 24739 000128EC 488B4520                	mov rax, PARAM(0)	; param a
 24740 000128F0 50                      	push rax
 24741 000128F1 6A02                    	push 2	; arg count
 24742 000128F3 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 24743 000128FB 803805                  	cmp byte [rax], T_undefined
 24744 000128FE 0F8494030000            	je L_error_fvar_undefined
 24745 00012904 803804                  	cmp byte [rax], T_closure
 24746 00012907 0F850F040000            	jne L_error_non_closure
 24747 0001290D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24748 00012910 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24749 00012913 483D[02000000]          	cmp rax, sob_boolean_false
 24750 00012919 0F848C000000            	je .L_if_else_012b
 24751                                  	; preparing a non-tail-call
 24752                                  	; preparing a non-tail-call
 24753 0001291F 488B4530                	mov rax, PARAM(2)	; param n
 24754 00012923 50                      	push rax
 24755                                  	; preparing a non-tail-call
 24756 00012924 488B4520                	mov rax, PARAM(0)	; param a
 24757 00012928 50                      	push rax
 24758 00012929 488B4528                	mov rax, PARAM(1)	; param b
 24759 0001292D 50                      	push rax
 24760 0001292E 6A02                    	push 2	; arg count
 24761 00012930 488B0425[F80D0000]      	mov rax, qword [free_var_3]	; free var /
 24762 00012938 803805                  	cmp byte [rax], T_undefined
 24763 0001293B 0F8457030000            	je L_error_fvar_undefined
 24764 00012941 803804                  	cmp byte [rax], T_closure
 24765 00012944 0F85D2030000            	jne L_error_non_closure
 24766 0001294A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24767 0001294D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24768 00012950 50                      	push rax
 24769 00012951 488B4520                	mov rax, PARAM(0)	; param a
 24770 00012955 50                      	push rax
 24771 00012956 6A03                    	push 3	; arg count
 24772 00012958 488B0425[36140000]      	mov rax, qword [free_var_97]	; free var logarithm
 24773 00012960 803805                  	cmp byte [rax], T_undefined
 24774 00012963 0F842F030000            	je L_error_fvar_undefined
 24775 00012969 803804                  	cmp byte [rax], T_closure
 24776 0001296C 0F85AA030000            	jne L_error_non_closure
 24777 00012972 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24778 00012975 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24779 00012978 50                      	push rax
 24780 00012979 48B8-                   	mov rax, L_constants + 3485
 24780 0001297B [9D0D000000000000] 
 24781 00012983 50                      	push rax
 24782 00012984 6A02                    	push 2	; arg count
 24783 00012986 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 24784 0001298E 803805                  	cmp byte [rax], T_undefined
 24785 00012991 0F8401030000            	je L_error_fvar_undefined
 24786 00012997 803804                  	cmp byte [rax], T_closure
 24787 0001299A 0F857C030000            	jne L_error_non_closure
 24788 000129A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24789 000129A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24790 000129A6 E9D0000000              	jmp .L_if_end_012b
 24791                                  .L_if_else_012b:
 24792                                  	; preparing a non-tail-call
 24793 000129AB 488B4528                	mov rax, PARAM(1)	; param b
 24794 000129AF 50                      	push rax
 24795 000129B0 488B4520                	mov rax, PARAM(0)	; param a
 24796 000129B4 50                      	push rax
 24797 000129B5 6A02                    	push 2	; arg count
 24798 000129B7 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 24799 000129BF 803805                  	cmp byte [rax], T_undefined
 24800 000129C2 0F84D0020000            	je L_error_fvar_undefined
 24801 000129C8 803804                  	cmp byte [rax], T_closure
 24802 000129CB 0F854B030000            	jne L_error_non_closure
 24803 000129D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24804 000129D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24805 000129D7 483D[02000000]          	cmp rax, sob_boolean_false
 24806 000129DD 740F                    	je .L_if_else_012a
 24807 000129DF 48B8-                   	mov rax, L_constants + 3485
 24807 000129E1 [9D0D000000000000] 
 24808 000129E9 E98D000000              	jmp .L_if_end_012a
 24809                                  .L_if_else_012a:
 24810                                  	; preparing a non-tail-call
 24811                                  	; preparing a non-tail-call
 24812                                  	; preparing a non-tail-call
 24813 000129EE 48B8-                   	mov rax, L_constants + 2270
 24813 000129F0 [DE08000000000000] 
 24814 000129F8 50                      	push rax
 24815 000129F9 488B4530                	mov rax, PARAM(2)	; param n
 24816 000129FD 50                      	push rax
 24817 000129FE 6A02                    	push 2	; arg count
 24818 00012A00 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 24819 00012A08 803805                  	cmp byte [rax], T_undefined
 24820 00012A0B 0F8487020000            	je L_error_fvar_undefined
 24821 00012A11 803804                  	cmp byte [rax], T_closure
 24822 00012A14 0F8502030000            	jne L_error_non_closure
 24823 00012A1A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24824 00012A1D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24825 00012A20 50                      	push rax
 24826 00012A21 488B4520                	mov rax, PARAM(0)	; param a
 24827 00012A25 50                      	push rax
 24828 00012A26 488B4528                	mov rax, PARAM(1)	; param b
 24829 00012A2A 50                      	push rax
 24830 00012A2B 6A03                    	push 3	; arg count
 24831 00012A2D 488B0425[36140000]      	mov rax, qword [free_var_97]	; free var logarithm
 24832 00012A35 803805                  	cmp byte [rax], T_undefined
 24833 00012A38 0F845A020000            	je L_error_fvar_undefined
 24834 00012A3E 803804                  	cmp byte [rax], T_closure
 24835 00012A41 0F85D5020000            	jne L_error_non_closure
 24836 00012A47 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24837 00012A4A FF5009                  	call SOB_CLOSURE_CODE(rax)
 24838 00012A4D 50                      	push rax
 24839 00012A4E 48B8-                   	mov rax, L_constants + 3485
 24839 00012A50 [9D0D000000000000] 
 24840 00012A58 50                      	push rax
 24841 00012A59 6A02                    	push 2	; arg count
 24842 00012A5B 488B0425[F80D0000]      	mov rax, qword [free_var_3]	; free var /
 24843 00012A63 803805                  	cmp byte [rax], T_undefined
 24844 00012A66 0F842C020000            	je L_error_fvar_undefined
 24845 00012A6C 803804                  	cmp byte [rax], T_closure
 24846 00012A6F 0F85A7020000            	jne L_error_non_closure
 24847 00012A75 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24848 00012A78 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24849                                  .L_if_end_012a:
 24850                                  .L_if_end_012b:
 24851                                  .L_if_end_012c:
 24852 00012A7B C9                      	leave
 24853 00012A7C C22800                  	ret AND_KILL_FRAME(3)
 24854                                  .L_lambda_simple_end_0184:	; new closure is in rax
 24855 00012A7F 48890425[36140000]      	mov qword [free_var_97], rax
 24856 00012A87 48B8-                   	mov rax, sob_void
 24856 00012A89 [0000000000000000] 
 24857                                  
 24858 00012A91 4889C7                  	mov rdi, rax
 24859 00012A94 E881050000              	call print_sexpr_if_not_void
 24860 00012A99 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24861 00012A9E E822030000              	call malloc
 24862 00012AA3 50                      	push rax
 24863 00012AA4 BF00000000              	mov rdi, 8 * 0	; new rib
 24864 00012AA9 E817030000              	call malloc
 24865 00012AAE 50                      	push rax
 24866 00012AAF BF08000000              	mov rdi, 8 * 1	; extended env
 24867 00012AB4 E80C030000              	call malloc
 24868 00012AB9 488B7D10                	mov rdi, ENV
 24869 00012ABD BE00000000              	mov rsi, 0
 24870 00012AC2 BA01000000              	mov rdx, 1
 24871                                  .L_lambda_simple_env_loop_0185:	; ext_env[i + 1] <-- env[i]
 24872 00012AC7 4883FE00                	cmp rsi, 0
 24873 00012ACB 7410                    	je .L_lambda_simple_env_end_0185
 24874 00012ACD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24875 00012AD1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24876 00012AD5 48FFC6                  	inc rsi
 24877 00012AD8 48FFC2                  	inc rdx
 24878 00012ADB EBEA                    	jmp .L_lambda_simple_env_loop_0185
 24879                                  .L_lambda_simple_env_end_0185:
 24880 00012ADD 5B                      	pop rbx
 24881 00012ADE BE00000000              	mov rsi, 0
 24882                                  .L_lambda_simple_params_loop_0185:	; copy params
 24883 00012AE3 4883FE00                	cmp rsi, 0
 24884 00012AE7 740E                    	je .L_lambda_simple_params_end_0185
 24885 00012AE9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24886 00012AEE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24887 00012AF2 48FFC6                  	inc rsi
 24888 00012AF5 EBEC                    	jmp .L_lambda_simple_params_loop_0185
 24889                                  .L_lambda_simple_params_end_0185:
 24890 00012AF7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24891 00012AFA 4889C3                  	mov rbx, rax
 24892 00012AFD 58                      	pop rax
 24893 00012AFE C60004                  	mov byte [rax], T_closure
 24894 00012B01 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24895 00012B05 48C74009[0F2B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0185
 24896 00012B0D EB48                    	jmp .L_lambda_simple_end_0185
 24897                                  .L_lambda_simple_code_0185:	; lambda-simple body
 24898 00012B0F 48837C241000            	cmp qword [rsp + 8 * 2], 0
 24899 00012B15 740B                    	je .L_lambda_simple_arity_check_ok_0185
 24900 00012B17 FF742410                	push qword [rsp + 8 * 2]
 24901 00012B1B 6A00                    	push 0
 24902 00012B1D E95C020000              	jmp L_error_incorrect_arity_simple
 24903                                  .L_lambda_simple_arity_check_ok_0185:
 24904 00012B22 C8000000                	enter 0, 0
 24905                                  	; preparing a non-tail-call
 24906 00012B26 48B8-                   	mov rax, L_constants + 3510
 24906 00012B28 [B60D000000000000] 
 24907 00012B30 50                      	push rax
 24908 00012B31 6A01                    	push 1	; arg count
 24909 00012B33 488B0425[BB170000]      	mov rax, qword [free_var_150]	; free var write-char
 24910 00012B3B 803805                  	cmp byte [rax], T_undefined
 24911 00012B3E 0F8454010000            	je L_error_fvar_undefined
 24912 00012B44 803804                  	cmp byte [rax], T_closure
 24913 00012B47 0F85CF010000            	jne L_error_non_closure
 24914 00012B4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24915 00012B50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24916 00012B53 C9                      	leave
 24917 00012B54 C21000                  	ret AND_KILL_FRAME(0)
 24918                                  .L_lambda_simple_end_0185:	; new closure is in rax
 24919 00012B57 48890425[BE140000]      	mov qword [free_var_105], rax
 24920 00012B5F 48B8-                   	mov rax, sob_void
 24920 00012B61 [0000000000000000] 
 24921                                  
 24922 00012B69 4889C7                  	mov rdi, rax
 24923 00012B6C E8A9040000              	call print_sexpr_if_not_void
 24924 00012B71 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24925 00012B76 E84A020000              	call malloc
 24926 00012B7B 50                      	push rax
 24927 00012B7C BF00000000              	mov rdi, 8 * 0	; new rib
 24928 00012B81 E83F020000              	call malloc
 24929 00012B86 50                      	push rax
 24930 00012B87 BF08000000              	mov rdi, 8 * 1	; extended env
 24931 00012B8C E834020000              	call malloc
 24932 00012B91 488B7D10                	mov rdi, ENV
 24933 00012B95 BE00000000              	mov rsi, 0
 24934 00012B9A BA01000000              	mov rdx, 1
 24935                                  .L_lambda_simple_env_loop_0186:	; ext_env[i + 1] <-- env[i]
 24936 00012B9F 4883FE00                	cmp rsi, 0
 24937 00012BA3 7410                    	je .L_lambda_simple_env_end_0186
 24938 00012BA5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24939 00012BA9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24940 00012BAD 48FFC6                  	inc rsi
 24941 00012BB0 48FFC2                  	inc rdx
 24942 00012BB3 EBEA                    	jmp .L_lambda_simple_env_loop_0186
 24943                                  .L_lambda_simple_env_end_0186:
 24944 00012BB5 5B                      	pop rbx
 24945 00012BB6 BE00000000              	mov rsi, 0
 24946                                  .L_lambda_simple_params_loop_0186:	; copy params
 24947 00012BBB 4883FE00                	cmp rsi, 0
 24948 00012BBF 740E                    	je .L_lambda_simple_params_end_0186
 24949 00012BC1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24950 00012BC6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24951 00012BCA 48FFC6                  	inc rsi
 24952 00012BCD EBEC                    	jmp .L_lambda_simple_params_loop_0186
 24953                                  .L_lambda_simple_params_end_0186:
 24954 00012BCF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24955 00012BD2 4889C3                  	mov rbx, rax
 24956 00012BD5 58                      	pop rax
 24957 00012BD6 C60004                  	mov byte [rax], T_closure
 24958 00012BD9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24959 00012BDD 48C74009[E72B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0186
 24960 00012BE5 EB25                    	jmp .L_lambda_simple_end_0186
 24961                                  .L_lambda_simple_code_0186:	; lambda-simple body
 24962 00012BE7 48837C241000            	cmp qword [rsp + 8 * 2], 0
 24963 00012BED 740B                    	je .L_lambda_simple_arity_check_ok_0186
 24964 00012BEF FF742410                	push qword [rsp + 8 * 2]
 24965 00012BF3 6A00                    	push 0
 24966 00012BF5 E984010000              	jmp L_error_incorrect_arity_simple
 24967                                  .L_lambda_simple_arity_check_ok_0186:
 24968 00012BFA C8000000                	enter 0, 0
 24969 00012BFE 48B8-                   	mov rax, L_constants + 0
 24969 00012C00 [0000000000000000] 
 24970 00012C08 C9                      	leave
 24971 00012C09 C21000                  	ret AND_KILL_FRAME(0)
 24972                                  .L_lambda_simple_end_0186:	; new closure is in rax
 24973 00012C0C 48890425[AA170000]      	mov qword [free_var_149], rax
 24974 00012C14 48B8-                   	mov rax, sob_void
 24974 00012C16 [0000000000000000] 
 24975                                  
 24976 00012C1E 4889C7                  	mov rdi, rax
 24977 00012C21 E8F4030000              	call print_sexpr_if_not_void
 24978                                  	; preparing a non-tail-call
 24979 00012C26 48B8-                   	mov rax, L_constants + 3190
 24979 00012C28 [760C000000000000] 
 24980 00012C30 50                      	push rax
 24981 00012C31 48B8-                   	mov rax, L_constants + 2270
 24981 00012C33 [DE08000000000000] 
 24982 00012C3B 50                      	push rax
 24983 00012C3C 6A02                    	push 2	; arg count
 24984 00012C3E 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 24985 00012C46 803805                  	cmp byte [rax], T_undefined
 24986 00012C49 744D                    	je L_error_fvar_undefined
 24987 00012C4B 803804                  	cmp byte [rax], T_closure
 24988 00012C4E 0F85C8000000            	jne L_error_non_closure
 24989 00012C54 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24990 00012C57 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24991                                  Lend:
 24992 00012C5A 4889C7                  	mov rdi, rax
 24993 00012C5D E8B8030000              	call print_sexpr_if_not_void
 24994                                  
 24995 00012C62 48BF-                           mov rdi, fmt_memory_usage
 24995 00012C64 [7518000000000000] 
 24996 00012C6C 488B3425[FB180000]              mov rsi, qword [top_of_memory]
 24997 00012C74 4881EE[00000000]                sub rsi, memory
 24998 00012C7B B800000000                      mov rax, 0
 24999                                          ENTER
    44 00012C80 C8000000            <1>  enter 0, 0
    45 00012C84 4883E4F0            <1>  and rsp, ~15
 25000 00012C88 E8(00000000)                    call printf
 25001                                          LEAVE
    49 00012C8D C9                  <1>  leave
 25002 00012C8E B800000000                      mov rax, 0
 25003 00012C93 E8(00000000)                    call exit
 25004                                  
 25005                                  L_error_fvar_undefined:
 25006 00012C98 50                              push rax
 25007 00012C99 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
 25008 00012CA1 48BE-                           mov rsi, fmt_undefined_free_var_1
 25008 00012CA3 [DD17000000000000] 
 25009 00012CAB B800000000                      mov rax, 0
 25010                                          ENTER
    44 00012CB0 C8000000            <1>  enter 0, 0
    45 00012CB4 4883E4F0            <1>  and rsp, ~15
 25011 00012CB8 E8(00000000)                    call fprintf
 25012                                          LEAVE
    49 00012CBD C9                  <1>  leave
 25013 00012CBE 58                              pop rax
 25014 00012CBF 488B4001                        mov rax, qword [rax + 1] ; string
 25015 00012CC3 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 25016 00012CC7 BE01000000                      mov rsi, 1               ; sizeof(char)
 25017 00012CCC 488B5001                        mov rdx, qword [rax + 1] ; string-length
 25018 00012CD0 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
 25019 00012CD8 B800000000                      mov rax, 0
 25020                                          ENTER
    44 00012CDD C8000000            <1>  enter 0, 0
    45 00012CE1 4883E4F0            <1>  and rsp, ~15
 25021 00012CE5 E8(00000000)                    call fwrite
 25022                                          LEAVE
    49 00012CEA C9                  <1>  leave
 25023 00012CEB 488B3C25[00000000]              mov rdi, [stderr]       ; destination
 25024 00012CF3 48BE-                           mov rsi, fmt_undefined_free_var_2
 25024 00012CF5 [F417000000000000] 
 25025 00012CFD B800000000                      mov rax, 0
 25026                                          ENTER
    44 00012D02 C8000000            <1>  enter 0, 0
    45 00012D06 4883E4F0            <1>  and rsp, ~15
 25027 00012D0A E8(00000000)                    call fprintf
 25028                                          LEAVE
    49 00012D0F C9                  <1>  leave
 25029 00012D10 48C7C0F6FFFFFF                  mov rax, -10
 25030 00012D17 E8(00000000)                    call exit
 25031                                  
 25032                                  L_error_non_closure:
 25033 00012D1C 488B3C25[00000000]              mov rdi, qword [stderr]
 25034 00012D24 48BE-                           mov rsi, fmt_non_closure
 25034 00012D26 [AB18000000000000] 
 25035 00012D2E B800000000                      mov rax, 0
 25036                                          ENTER
    44 00012D33 C8000000            <1>  enter 0, 0
    45 00012D37 4883E4F0            <1>  and rsp, ~15
 25037 00012D3B E8(00000000)                    call fprintf
 25038                                          LEAVE
    49 00012D40 C9                  <1>  leave
 25039 00012D41 48C7C0FEFFFFFF                  mov rax, -2
 25040 00012D48 E8(00000000)                    call exit
 25041                                  
 25042                                  L_error_improper_list:
 25043 00012D4D 488B3C25[00000000]      	mov rdi, qword [stderr]
 25044 00012D55 48BE-                   	mov rsi, fmt_error_improper_list
 25044 00012D57 [D318000000000000] 
 25045 00012D5F B800000000              	mov rax, 0
 25046                                          ENTER
    44 00012D64 C8000000            <1>  enter 0, 0
    45 00012D68 4883E4F0            <1>  and rsp, ~15
 25047 00012D6C E8(00000000)            	call fprintf
 25048                                          LEAVE
    49 00012D71 C9                  <1>  leave
 25049 00012D72 48C7C0F9FFFFFF          	mov rax, -7
 25050 00012D79 E8(00000000)            	call exit
 25051                                  
 25052                                  L_error_incorrect_arity_simple:
 25053 00012D7E 488B3C25[00000000]              mov rdi, qword [stderr]
 25054 00012D86 48BE-                           mov rsi, fmt_incorrect_arity_simple
 25054 00012D88 [1618000000000000] 
 25055 00012D90 EB12                            jmp L_error_incorrect_arity_common
 25056                                  L_error_incorrect_arity_opt:
 25057 00012D92 488B3C25[00000000]              mov rdi, qword [stderr]
 25058 00012D9A 48BE-                           mov rsi, fmt_incorrect_arity_opt
 25058 00012D9C [4118000000000000] 
 25059                                  L_error_incorrect_arity_common:
 25060 00012DA4 5A                              pop rdx
 25061 00012DA5 59                              pop rcx
 25062 00012DA6 B800000000                      mov rax, 0
 25063                                          ENTER
    44 00012DAB C8000000            <1>  enter 0, 0
    45 00012DAF 4883E4F0            <1>  and rsp, ~15
 25064 00012DB3 E8(00000000)                    call fprintf
 25065                                          LEAVE
    49 00012DB8 C9                  <1>  leave
 25066 00012DB9 48C7C0FAFFFFFF                  mov rax, -6
 25067 00012DC0 E8(00000000)                    call exit
 25068                                  
 25069                                  section .data
 25070                                  fmt_undefined_free_var_1:
 25071 000017DD 212121205468652066-             db `!!! The free variable \0`
 25071 000017E6 726565207661726961-
 25071 000017EF 626C652000         
 25072                                  fmt_undefined_free_var_2:
 25073 000017F4 207761732075736564-             db ` was used before it was defined.\n\0`
 25073 000017FD 206265666F72652069-
 25073 00001806 742077617320646566-
 25073 0000180F 696E65642E0A00     
 25074                                  fmt_incorrect_arity_simple:
 25075 00001816 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 25075 0000181F 74656420256C642061-
 25075 00001828 7267756D656E74732C-
 25075 00001831 206275742067697665-
 25075 0000183A 6E20256C640A00     
 25076                                  fmt_incorrect_arity_opt:
 25077 00001841 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 25077 0000184A 746564206174206C65-
 25077 00001853 61737420256C642061-
 25077 0000185C 7267756D656E74732C-
 25077 00001865 206275742067697665-
 25077 0000186E 6E20256C640A00     
 25078                                  fmt_memory_usage:
 25079 00001875 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 25079 0000187E 20256C642062797465-
 25079 00001887 73206F662064796E61-
 25079 00001890 6D6963616C6C792D61-
 25079 00001899 6C6C6F636174656420-
 25079 000018A2 6D656D6F72790A0A00 
 25080                                  fmt_non_closure:
 25081 000018AB 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 25081 000018B4 7074696E6720746F20-
 25081 000018BD 6170706C792061206E-
 25081 000018C6 6F6E2D636C6F737572-
 25081 000018CF 65210A00           
 25082                                  fmt_error_improper_list:
 25083 000018D3 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 25083 000018DC 7267756D656E742069-
 25083 000018E5 73206E6F7420612070-
 25083 000018EE 726F706572206C6973-
 25083 000018F7 74210A00           
 25084                                  
 25085                                  section .bss
 25086                                  memory:
 25087 00000000 <res 40000000h>         	resb gbytes(1)
 25088                                  
 25089                                  section .data
 25090                                  top_of_memory:
 25091 000018FB [0000000000000000]              dq memory
 25092                                  
 25093                                  section .text
 25094                                  malloc:
 25095 00012DC5 488B0425[FB180000]              mov rax, qword [top_of_memory]
 25096 00012DCD 48013C25[FB180000]              add qword [top_of_memory], rdi
 25097 00012DD5 C3                              ret
 25098                                  
 25099                                  L_code_ptr_return:
 25100 00012DD6 48837C241002            	cmp qword [rsp + 8*2], 2
 25101 00012DDC 0F85CA1C0000            	jne L_error_arg_count_2
 25102 00012DE2 488B4C2418              	mov rcx, qword [rsp + 8*3]
 25103                                  	assert_integer(rcx)
    53 00012DE7 803911              <1>  cmp byte [%1], %2
    54 00012DEA 0F855B1D0000        <1>  jne L_error_incorrect_type
 25104 00012DF0 488B4901                	mov rcx, qword [rcx + 1]
 25105 00012DF4 4883F900                	cmp rcx, 0
 25106 00012DF8 0F8CE21B0000            	jl L_error_integer_range
 25107 00012DFE 488B442420              	mov rax, qword [rsp + 8*4]
 25108                                  .L0:
 25109 00012E03 4883F900                        cmp rcx, 0
 25110 00012E07 7409                            je .L1
 25111 00012E09 488B6D00                	mov rbp, qword [rbp]
 25112 00012E0D 48FFC9                  	dec rcx
 25113 00012E10 7FF1                    	jg .L0
 25114                                  .L1:
 25115 00012E12 4889EC                  	mov rsp, rbp
 25116 00012E15 5D                      	pop rbp
 25117 00012E16 5B                              pop rbx
 25118 00012E17 488B4C2408                      mov rcx, qword [rsp + 8*1]
 25119 00012E1C 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
 25120 00012E21 FFE3                    	jmp rbx
 25121                                  
 25122                                  L_code_ptr_make_list:
 25123 00012E23 C8000000                	enter 0, 0
 25124 00012E27 48837D1801                      cmp COUNT, 1
 25125 00012E2C 740C                            je .L0
 25126 00012E2E 48837D1802                      cmp COUNT, 2
 25127 00012E33 7411                            je .L1
 25128 00012E35 E9A71C0000                      jmp L_error_arg_count_12
 25129                                  .L0:
 25130 00012E3A 49B9-                           mov r9, sob_void
 25130 00012E3C [0000000000000000] 
 25131 00012E44 EB04                            jmp .L2
 25132                                  .L1:
 25133 00012E46 4C8B4D28                        mov r9, PARAM(1)
 25134                                  .L2:
 25135 00012E4A 488B4D20                        mov rcx, PARAM(0)
 25136                                          assert_integer(rcx)
    53 00012E4E 803911              <1>  cmp byte [%1], %2
    54 00012E51 0F85F41C0000        <1>  jne L_error_incorrect_type
 25137 00012E57 488B4901                        mov rcx, qword [rcx + 1]
 25138 00012E5B 4883F900                        cmp rcx, 0
 25139 00012E5F 0F8CAC1B0000                    jl L_error_arg_negative
 25140 00012E65 49B8-                           mov r8, sob_nil
 25140 00012E67 [0100000000000000] 
 25141                                  .L3:
 25142 00012E6F 4883F900                        cmp rcx, 0
 25143 00012E73 7E1D                            jle .L4
 25144 00012E75 BF11000000                      mov rdi, 1 + 8 + 8
 25145 00012E7A E846FFFFFF                      call malloc
 25146 00012E7F C60021                          mov byte [rax], T_pair
 25147 00012E82 4C894801                        mov qword [rax + 1], r9
 25148 00012E86 4C894009                        mov qword [rax + 1 + 8], r8
 25149 00012E8A 4989C0                          mov r8, rax
 25150 00012E8D 48FFC9                          dec rcx
 25151 00012E90 EBDD                            jmp .L3
 25152                                  .L4:
 25153 00012E92 4C89C0                          mov rax, r8
 25154 00012E95 48837D1802                      cmp COUNT, 2
 25155 00012E9A 7404                            je .L5
 25156 00012E9C C9                              leave
 25157 00012E9D C21800                          ret AND_KILL_FRAME(1)
 25158                                  .L5:
 25159 00012EA0 C9                      	leave
 25160 00012EA1 C22000                  	ret AND_KILL_FRAME(2)
 25161                                  
 25162                                  L_code_ptr_is_primitive:
 25163 00012EA4 C8000000                	enter 0, 0
 25164 00012EA8 48837D1801              	cmp COUNT, 1
 25165 00012EAD 0F85C41B0000            	jne L_error_arg_count_1
 25166 00012EB3 488B4520                	mov rax, PARAM(0)
 25167                                  	assert_closure(rax)
    53 00012EB7 803804              <1>  cmp byte [%1], %2
    54 00012EBA 0F858B1C0000        <1>  jne L_error_incorrect_type
 25168 00012EC0 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
 25169 00012EC5 750C                    	jne .L_false
 25170 00012EC7 48B8-                   	mov rax, sob_boolean_true
 25170 00012EC9 [0300000000000000] 
 25171 00012ED1 EB0A                    	jmp .L_end
 25172                                  .L_false:
 25173 00012ED3 48B8-                   	mov rax, sob_boolean_false
 25173 00012ED5 [0200000000000000] 
 25174                                  .L_end:
 25175 00012EDD C9                      	leave
 25176 00012EDE C21800                  	ret AND_KILL_FRAME(1)
 25177                                  
 25178                                  L_code_ptr_length:
 25179 00012EE1 C8000000                	enter 0, 0
 25180 00012EE5 48837D1801              	cmp COUNT, 1
 25181 00012EEA 0F85871B0000            	jne L_error_arg_count_1
 25182 00012EF0 488B5D20                	mov rbx, PARAM(0)
 25183 00012EF4 BF00000000              	mov rdi, 0
 25184                                  .L:
 25185 00012EF9 803B01                  	cmp byte [rbx], T_nil
 25186 00012EFC 7412                    	je .L_end
 25187                                  	assert_pair(rbx)
    53 00012EFE 803B21              <1>  cmp byte [%1], %2
    54 00012F01 0F85441C0000        <1>  jne L_error_incorrect_type
 25188 00012F07 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
 25189 00012F0B 48FFC7                  	inc rdi
 25190 00012F0E EBE9                    	jmp .L
 25191                                  .L_end:
 25192 00012F10 E8B11A0000              	call make_integer
 25193 00012F15 C9                      	leave
 25194 00012F16 C21800                  	ret AND_KILL_FRAME(1)
 25195                                  
 25196                                  L_code_ptr_break:
 25197 00012F19 48837C241000                    cmp qword [rsp + 8 * 2], 0
 25198 00012F1F 0F851D1B0000                    jne L_error_arg_count_0
 25199 00012F25 CC                              int3
 25200 00012F26 48B8-                           mov rax, sob_void
 25200 00012F28 [0000000000000000] 
 25201 00012F30 C21000                          ret AND_KILL_FRAME(0)        
 25202                                  
 25203                                  L_code_ptr_frame:
 25204 00012F33 C8000000                        enter 0, 0
 25205 00012F37 48837D1800                      cmp COUNT, 0
 25206 00012F3C 0F85001B0000                    jne L_error_arg_count_0
 25207                                  
 25208 00012F42 48BF-                           mov rdi, fmt_frame
 25208 00012F44 [0319000000000000] 
 25209 00012F4C 488B7500                        mov rsi, qword [rbp]    ; old rbp
 25210 00012F50 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
 25211 00012F54 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
 25212 00012F58 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
 25213 00012F5C 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
 25214 00012F60 6A00                            push 0
 25215 00012F62 4151                            push r9
 25216 00012F64 4150                            push r8                   ; we'll use it when printing the params
 25217 00012F66 B800000000                      mov rax, 0
 25218                                          
 25219                                          ENTER
    44 00012F6B C8000000            <1>  enter 0, 0
    45 00012F6F 4883E4F0            <1>  and rsp, ~15
 25220 00012F73 E8(00000000)                    call printf
 25221                                          LEAVE
    49 00012F78 C9                  <1>  leave
 25222                                  
 25223                                  .L:
 25224 00012F79 488B0C24                        mov rcx, qword [rsp]
 25225 00012F7D 4883F900                        cmp rcx, 0
 25226 00012F81 7467                            je .L_out
 25227 00012F83 48BF-                           mov rdi, fmt_frame_param_prefix
 25227 00012F85 [3C19000000000000] 
 25228 00012F8D 488B742410                      mov rsi, qword [rsp + 8*2]
 25229 00012F92 B800000000                      mov rax, 0
 25230                                          
 25231                                          ENTER
    44 00012F97 C8000000            <1>  enter 0, 0
    45 00012F9B 4883E4F0            <1>  and rsp, ~15
 25232 00012F9F E8(00000000)                    call printf
 25233                                          LEAVE
    49 00012FA4 C9                  <1>  leave
 25234                                  
 25235 00012FA5 488B0C24                        mov rcx, qword [rsp]
 25236 00012FA9 48FFC9                          dec rcx
 25237 00012FAC 48890C24                        mov qword [rsp], rcx    ; dec arg count
 25238 00012FB0 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
 25239 00012FB5 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
 25240 00012FBA 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
 25241 00012FBE 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
 25242 00012FC3 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
 25243 00012FC6 E87B000000                      call print_sexpr
 25244 00012FCB 48BF-                           mov rdi, fmt_newline
 25244 00012FCD [6819000000000000] 
 25245 00012FD5 B800000000                      mov rax, 0
 25246                                          ENTER
    44 00012FDA C8000000            <1>  enter 0, 0
    45 00012FDE 4883E4F0            <1>  and rsp, ~15
 25247 00012FE2 E8(00000000)                    call printf
 25248                                          LEAVE
    49 00012FE7 C9                  <1>  leave
 25249 00012FE8 EB8F                            jmp .L
 25250                                  .L_out:
 25251 00012FEA 48BF-                           mov rdi, fmt_frame_continue
 25251 00012FEC [4D19000000000000] 
 25252 00012FF4 B800000000                      mov rax, 0
 25253                                          ENTER
    44 00012FF9 C8000000            <1>  enter 0, 0
    45 00012FFD 4883E4F0            <1>  and rsp, ~15
 25254 00013001 E8(00000000)                    call printf
 25255 00013006 E8(00000000)                    call getchar
 25256                                          LEAVE
    49 0001300B C9                  <1>  leave
 25257                                          
 25258 0001300C 48B8-                           mov rax, sob_void
 25258 0001300E [0000000000000000] 
 25259 00013016 C9                              leave
 25260 00013017 C21000                          ret AND_KILL_FRAME(0)
 25261                                          
 25262                                  print_sexpr_if_not_void:
 25263 0001301A 4881FF[00000000]        	cmp rdi, sob_void
 25264 00013021 7422                    	je .done
 25265 00013023 E81E000000              	call print_sexpr
 25266 00013028 48BF-                   	mov rdi, fmt_newline
 25266 0001302A [6819000000000000] 
 25267 00013032 B800000000              	mov rax, 0
 25268                                  	ENTER
    44 00013037 C8000000            <1>  enter 0, 0
    45 0001303B 4883E4F0            <1>  and rsp, ~15
 25269 0001303F E8(00000000)            	call printf
 25270                                  	LEAVE
    49 00013044 C9                  <1>  leave
 25271                                  .done:
 25272 00013045 C3                      	ret
 25273                                  
 25274                                  section .data
 25275                                  fmt_frame:
 25276 00001903 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
 25276 0000190C 207265742061646472-
 25276 00001915 203D2025703B206C65-
 25276 0000191E 7820656E76203D2025-
 25276 00001927 703B20706172616D20-
 25276 00001930 636F756E74203D2025-
 25276 00001939 640A00             
 25277                                  fmt_frame_param_prefix:
 25278 0000193C 3D3D5B706172616D20-             db `==[param %d]==> \0`
 25278 00001945 25645D3D3D3E2000   
 25279                                  fmt_frame_continue:
 25280 0000194D 486974203C456E7465-             db `Hit <Enter> to continue...\0`
 25280 00001956 723E20746F20636F6E-
 25280 0000195F 74696E75652E2E2E00 
 25281                                  fmt_newline:
 25282 00001968 0A00                    	db `\n\0`
 25283                                  fmt_void:
 25284 0000196A 233C766F69643E00        	db `#<void>\0`
 25285                                  fmt_nil:
 25286 00001972 282900                  	db `()\0`
 25287                                  fmt_boolean_false:
 25288 00001975 236600                  	db `#f\0`
 25289                                  fmt_boolean_true:
 25290 00001978 237400                  	db `#t\0`
 25291                                  fmt_char_backslash:
 25292 0000197B 235C5C00                	db `#\\\\\0`
 25293                                  fmt_char_dquote:
 25294 0000197F 235C2200                	db `#\\"\0`
 25295                                  fmt_char_simple:
 25296 00001983 235C256300              	db `#\\%c\0`
 25297                                  fmt_char_null:
 25298 00001988 235C6E756C00            	db `#\\nul\0`
 25299                                  fmt_char_bell:
 25300 0000198E 235C62656C6C00          	db `#\\bell\0`
 25301                                  fmt_char_backspace:
 25302 00001995 235C6261636B737061-     	db `#\\backspace\0`
 25302 0000199E 636500             
 25303                                  fmt_char_tab:
 25304 000019A1 235C74616200            	db `#\\tab\0`
 25305                                  fmt_char_newline:
 25306 000019A7 235C6E65776C696E65-     	db `#\\newline\0`
 25306 000019B0 00                 
 25307                                  fmt_char_formfeed:
 25308 000019B1 235C7061676500          	db `#\\page\0`
 25309                                  fmt_char_return:
 25310 000019B8 235C72657475726E00      	db `#\\return\0`
 25311                                  fmt_char_escape:
 25312 000019C1 235C65736300            	db `#\\esc\0`
 25313                                  fmt_char_space:
 25314 000019C7 235C737061636500        	db `#\\space\0`
 25315                                  fmt_char_hex:
 25316 000019CF 235C782530325800        	db `#\\x%02X\0`
 25317                                  fmt_gensym:
 25318 000019D7 47256C6400                      db `G%ld\0`
 25319                                  fmt_closure:
 25320 000019DC 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 25320 000019E5 206174203078253038-
 25320 000019EE 5820656E763D307825-
 25320 000019F7 30385820636F64653D-
 25320 00001A00 3078253038583E00   
 25321                                  fmt_lparen:
 25322 00001A08 2800                    	db `(\0`
 25323                                  fmt_dotted_pair:
 25324 00001A0A 202E2000                	db ` . \0`
 25325                                  fmt_rparen:
 25326 00001A0E 2900                    	db `)\0`
 25327                                  fmt_space:
 25328 00001A10 2000                    	db ` \0`
 25329                                  fmt_empty_vector:
 25330 00001A12 23282900                	db `#()\0`
 25331                                  fmt_vector:
 25332 00001A16 232800                  	db `#(\0`
 25333                                  fmt_real:
 25334 00001A19 256600                  	db `%f\0`
 25335                                  fmt_fraction:
 25336 00001A1C 256C642F256C6400        	db `%ld/%ld\0`
 25337                                  fmt_zero:
 25338 00001A24 3000                    	db `0\0`
 25339                                  fmt_int:
 25340 00001A26 256C6400                	db `%ld\0`
 25341                                  fmt_unknown_scheme_object_error:
 25342 00001A2A 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
 25342 00001A33 6F723A20556E6B6E6F-
 25342 00001A3C 776E20536368656D65-
 25342 00001A45 2D6F626A6563742028-
 25342 00001A4E 525454492030782530-
 25342 00001A57 32582920           
 25343 00001A5B 617420616464726573-     	db `at address 0x%08X\n\n\0`
 25343 00001A64 73203078253038580A-
 25343 00001A6D 0A00               
 25344                                  fmt_dquote:
 25345 00001A6F 2200                    	db `\"\0`
 25346                                  fmt_string_char:
 25347 00001A71 256300                          db `%c\0`
 25348                                  fmt_string_char_7:
 25349 00001A74 5C6100                          db `\\a\0`
 25350                                  fmt_string_char_8:
 25351 00001A77 5C6200                          db `\\b\0`
 25352                                  fmt_string_char_9:
 25353 00001A7A 5C7400                          db `\\t\0`
 25354                                  fmt_string_char_10:
 25355 00001A7D 5C6E00                          db `\\n\0`
 25356                                  fmt_string_char_11:
 25357 00001A80 5C7600                          db `\\v\0`
 25358                                  fmt_string_char_12:
 25359 00001A83 5C6600                          db `\\f\0`
 25360                                  fmt_string_char_13:
 25361 00001A86 5C7200                          db `\\r\0`
 25362                                  fmt_string_char_34:
 25363 00001A89 5C2200                          db `\\"\0`
 25364                                  fmt_string_char_92:
 25365 00001A8C 5C5C00                          db `\\\\\0`
 25366                                  fmt_string_char_hex:
 25367 00001A8F 5C7825583B00                    db `\\x%X;\0`
 25368                                  
 25369                                  section .text
 25370                                  
 25371                                  print_sexpr:
 25372 00013046 C8000000                	enter 0, 0
 25373 0001304A 8A07                    	mov al, byte [rdi]
 25374 0001304C 3C00                    	cmp al, T_void
 25375 0001304E 7465                    	je .Lvoid
 25376 00013050 3C01                    	cmp al, T_nil
 25377 00013052 7470                    	je .Lnil
 25378 00013054 3C09                    	cmp al, T_boolean_false
 25379 00013056 747B                    	je .Lboolean_false
 25380 00013058 3C0A                    	cmp al, T_boolean_true
 25381 0001305A 0F8482000000            	je .Lboolean_true
 25382 00013060 3C02                    	cmp al, T_char
 25383 00013062 0F8489000000            	je .Lchar
 25384 00013068 3C41                    	cmp al, T_interned_symbol
 25385 0001306A 0F84CB010000            	je .Linterned_symbol
 25386 00013070 3C42                            cmp al, T_uninterned_symbol
 25387 00013072 0F84EF010000                    je .Luninterned_symbol
 25388 00013078 3C21                    	cmp al, T_pair
 25389 0001307A 0F84FA010000            	je .Lpair
 25390 00013080 3C22                    	cmp al, T_vector
 25391 00013082 0F84C3020000            	je .Lvector
 25392 00013088 3C04                    	cmp al, T_closure
 25393 0001308A 0F8491010000            	je .Lclosure
 25394 00013090 3C13                    	cmp al, T_real
 25395 00013092 0F8454030000            	je .Lreal
 25396 00013098 3C12                    	cmp al, T_fraction
 25397 0001309A 0F847A030000            	je .Lfraction
 25398 000130A0 3C11                    	cmp al, T_integer
 25399 000130A2 0F84B3030000            	je .Linteger
 25400 000130A8 3C03                    	cmp al, T_string
 25401 000130AA 0F84BE030000            	je .Lstring
 25402                                  
 25403 000130B0 E9F6040000              	jmp .Lunknown_sexpr_type
 25404                                  
 25405                                  .Lvoid:
 25406 000130B5 48BF-                   	mov rdi, fmt_void
 25406 000130B7 [6A19000000000000] 
 25407 000130BF E91A050000              	jmp .Lemit
 25408                                  
 25409                                  .Lnil:
 25410 000130C4 48BF-                   	mov rdi, fmt_nil
 25410 000130C6 [7219000000000000] 
 25411 000130CE E90B050000              	jmp .Lemit
 25412                                  
 25413                                  .Lboolean_false:
 25414 000130D3 48BF-                   	mov rdi, fmt_boolean_false
 25414 000130D5 [7519000000000000] 
 25415 000130DD E9FC040000              	jmp .Lemit
 25416                                  
 25417                                  .Lboolean_true:
 25418 000130E2 48BF-                   	mov rdi, fmt_boolean_true
 25418 000130E4 [7819000000000000] 
 25419 000130EC E9ED040000              	jmp .Lemit
 25420                                  
 25421                                  .Lchar:
 25422 000130F1 8A4701                  	mov al, byte [rdi + 1]
 25423 000130F4 3C20                    	cmp al, ' '
 25424 000130F6 7E28                    	jle .Lchar_whitespace
 25425 000130F8 3C5C                    	cmp al, 92 		; backslash
 25426 000130FA 0F847C000000            	je .Lchar_backslash
 25427 00013100 3C22                    	cmp al, '"'
 25428 00013102 0F8483000000            	je .Lchar_dquote
 25429 00013108 4825FF000000            	and rax, 255
 25430 0001310E 48BF-                   	mov rdi, fmt_char_simple
 25430 00013110 [8319000000000000] 
 25431 00013118 4889C6                  	mov rsi, rax
 25432 0001311B E9BE040000              	jmp .Lemit
 25433                                  
 25434                                  .Lchar_whitespace:
 25435 00013120 3C00                    	cmp al, 0
 25436 00013122 7476                    	je .Lchar_null
 25437 00013124 3C07                    	cmp al, 7
 25438 00013126 0F847D000000            	je .Lchar_bell
 25439 0001312C 3C08                    	cmp al, 8
 25440 0001312E 0F8484000000            	je .Lchar_backspace
 25441 00013134 3C09                    	cmp al, 9
 25442 00013136 0F848B000000            	je .Lchar_tab
 25443 0001313C 3C0A                    	cmp al, 10
 25444 0001313E 0F8492000000            	je .Lchar_newline
 25445 00013144 3C0C                    	cmp al, 12
 25446 00013146 0F8499000000            	je .Lchar_formfeed
 25447 0001314C 3C0D                    	cmp al, 13
 25448 0001314E 0F84A0000000            	je .Lchar_return
 25449 00013154 3C1B                    	cmp al, 27
 25450 00013156 0F84A7000000            	je .Lchar_escape
 25451 0001315C 4825FF000000            	and rax, 255
 25452 00013162 3C20                    	cmp al, ' '
 25453 00013164 0F84A8000000            	je .Lchar_space
 25454 0001316A 48BF-                   	mov rdi, fmt_char_hex
 25454 0001316C [CF19000000000000] 
 25455 00013174 4889C6                  	mov rsi, rax
 25456 00013177 E962040000              	jmp .Lemit	
 25457                                  
 25458                                  .Lchar_backslash:
 25459 0001317C 48BF-                   	mov rdi, fmt_char_backslash
 25459 0001317E [7B19000000000000] 
 25460 00013186 E953040000              	jmp .Lemit
 25461                                  
 25462                                  .Lchar_dquote:
 25463 0001318B 48BF-                   	mov rdi, fmt_char_dquote
 25463 0001318D [7F19000000000000] 
 25464 00013195 E944040000              	jmp .Lemit
 25465                                  
 25466                                  .Lchar_null:
 25467 0001319A 48BF-                   	mov rdi, fmt_char_null
 25467 0001319C [8819000000000000] 
 25468 000131A4 E935040000              	jmp .Lemit
 25469                                  
 25470                                  .Lchar_bell:
 25471 000131A9 48BF-                   	mov rdi, fmt_char_bell
 25471 000131AB [8E19000000000000] 
 25472 000131B3 E926040000              	jmp .Lemit
 25473                                  
 25474                                  .Lchar_backspace:
 25475 000131B8 48BF-                   	mov rdi, fmt_char_backspace
 25475 000131BA [9519000000000000] 
 25476 000131C2 E917040000              	jmp .Lemit
 25477                                  
 25478                                  .Lchar_tab:
 25479 000131C7 48BF-                   	mov rdi, fmt_char_tab
 25479 000131C9 [A119000000000000] 
 25480 000131D1 E908040000              	jmp .Lemit
 25481                                  
 25482                                  .Lchar_newline:
 25483 000131D6 48BF-                   	mov rdi, fmt_char_newline
 25483 000131D8 [A719000000000000] 
 25484 000131E0 E9F9030000              	jmp .Lemit
 25485                                  
 25486                                  .Lchar_formfeed:
 25487 000131E5 48BF-                   	mov rdi, fmt_char_formfeed
 25487 000131E7 [B119000000000000] 
 25488 000131EF E9EA030000              	jmp .Lemit
 25489                                  
 25490                                  .Lchar_return:
 25491 000131F4 48BF-                   	mov rdi, fmt_char_return
 25491 000131F6 [B819000000000000] 
 25492 000131FE E9DB030000              	jmp .Lemit
 25493                                  
 25494                                  .Lchar_escape:
 25495 00013203 48BF-                   	mov rdi, fmt_char_escape
 25495 00013205 [C119000000000000] 
 25496 0001320D E9CC030000              	jmp .Lemit
 25497                                  
 25498                                  .Lchar_space:
 25499 00013212 48BF-                   	mov rdi, fmt_char_space
 25499 00013214 [C719000000000000] 
 25500 0001321C E9BD030000              	jmp .Lemit
 25501                                  
 25502                                  .Lclosure:
 25503 00013221 4889FE                  	mov rsi, qword rdi
 25504 00013224 48BF-                   	mov rdi, fmt_closure
 25504 00013226 [DC19000000000000] 
 25505 0001322E 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 25506 00013232 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 25507 00013236 E9A3030000              	jmp .Lemit
 25508                                  
 25509                                  .Linterned_symbol:
 25510 0001323B 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 25511 0001323F BE01000000              	mov rsi, 1		 ; size = 1 byte
 25512 00013244 488B5701                	mov rdx, qword [rdi + 1] ; length
 25513 00013248 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 25514 0001324C 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 25515                                  	ENTER
    44 00013254 C8000000            <1>  enter 0, 0
    45 00013258 4883E4F0            <1>  and rsp, ~15
 25516 0001325C E8(00000000)            	call fwrite
 25517                                  	LEAVE
    49 00013261 C9                  <1>  leave
 25518 00013262 E98C030000              	jmp .Lend
 25519                                  
 25520                                  .Luninterned_symbol:
 25521 00013267 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
 25522 0001326B 48BF-                           mov rdi, fmt_gensym
 25522 0001326D [D719000000000000] 
 25523 00013275 E964030000                      jmp .Lemit
 25524                                  	
 25525                                  .Lpair:
 25526 0001327A 57                      	push rdi
 25527 0001327B 48BF-                   	mov rdi, fmt_lparen
 25527 0001327D [081A000000000000] 
 25528 00013285 B800000000              	mov rax, 0
 25529                                          ENTER
    44 0001328A C8000000            <1>  enter 0, 0
    45 0001328E 4883E4F0            <1>  and rsp, ~15
 25530 00013292 E8(00000000)            	call printf
 25531                                          LEAVE
    49 00013297 C9                  <1>  leave
 25532 00013298 488B3C24                	mov rdi, qword [rsp] 	; pair
 25533 0001329C 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 25534 000132A0 E8A1FDFFFF              	call print_sexpr
 25535 000132A5 5F                      	pop rdi 		; pair
 25536 000132A6 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 25537                                  .Lcdr:
 25538 000132AA 8A07                    	mov al, byte [rdi]
 25539 000132AC 3C01                    	cmp al, T_nil
 25540 000132AE 7447                    	je .Lcdr_nil
 25541 000132B0 3C21                    	cmp al, T_pair
 25542 000132B2 7462                    	je .Lcdr_pair
 25543 000132B4 57                      	push rdi
 25544 000132B5 48BF-                   	mov rdi, fmt_dotted_pair
 25544 000132B7 [0A1A000000000000] 
 25545 000132BF B800000000              	mov rax, 0
 25546                                          ENTER
    44 000132C4 C8000000            <1>  enter 0, 0
    45 000132C8 4883E4F0            <1>  and rsp, ~15
 25547 000132CC E8(00000000)            	call printf
 25548                                          LEAVE
    49 000132D1 C9                  <1>  leave
 25549 000132D2 5F                      	pop rdi
 25550 000132D3 E86EFDFFFF              	call print_sexpr
 25551 000132D8 48BF-                   	mov rdi, fmt_rparen
 25551 000132DA [0E1A000000000000] 
 25552 000132E2 B800000000              	mov rax, 0
 25553                                          ENTER
    44 000132E7 C8000000            <1>  enter 0, 0
    45 000132EB 4883E4F0            <1>  and rsp, ~15
 25554 000132EF E8(00000000)            	call printf
 25555                                          LEAVE
    49 000132F4 C9                  <1>  leave
 25556 000132F5 C9                      	leave
 25557 000132F6 C3                      	ret
 25558                                  
 25559                                  .Lcdr_nil:
 25560 000132F7 48BF-                   	mov rdi, fmt_rparen
 25560 000132F9 [0E1A000000000000] 
 25561 00013301 B800000000              	mov rax, 0
 25562                                          ENTER
    44 00013306 C8000000            <1>  enter 0, 0
    45 0001330A 4883E4F0            <1>  and rsp, ~15
 25563 0001330E E8(00000000)            	call printf
 25564                                          LEAVE
    49 00013313 C9                  <1>  leave
 25565 00013314 C9                      	leave
 25566 00013315 C3                      	ret
 25567                                  
 25568                                  .Lcdr_pair:
 25569 00013316 57                      	push rdi
 25570 00013317 48BF-                   	mov rdi, fmt_space
 25570 00013319 [101A000000000000] 
 25571 00013321 B800000000              	mov rax, 0
 25572                                          ENTER
    44 00013326 C8000000            <1>  enter 0, 0
    45 0001332A 4883E4F0            <1>  and rsp, ~15
 25573 0001332E E8(00000000)            	call printf
 25574                                          LEAVE
    49 00013333 C9                  <1>  leave
 25575 00013334 488B3C24                	mov rdi, qword [rsp]
 25576 00013338 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 25577 0001333C E805FDFFFF              	call print_sexpr
 25578 00013341 5F                      	pop rdi
 25579 00013342 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 25580 00013346 E95FFFFFFF              	jmp .Lcdr
 25581                                  
 25582                                  .Lvector:
 25583 0001334B 488B4701                	mov rax, qword [rdi + 1] ; length
 25584 0001334F 4883F800                	cmp rax, 0
 25585 00013353 0F8484000000            	je .Lvector_empty
 25586 00013359 57                      	push rdi
 25587 0001335A 48BF-                   	mov rdi, fmt_vector
 25587 0001335C [161A000000000000] 
 25588 00013364 B800000000              	mov rax, 0
 25589                                          ENTER
    44 00013369 C8000000            <1>  enter 0, 0
    45 0001336D 4883E4F0            <1>  and rsp, ~15
 25590 00013371 E8(00000000)            	call printf
 25591                                          LEAVE
    49 00013376 C9                  <1>  leave
 25592 00013377 488B3C24                	mov rdi, qword [rsp]
 25593 0001337B FF7701                  	push qword [rdi + 1]
 25594 0001337E 6A01                    	push 1
 25595 00013380 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 25596 00013384 E8BDFCFFFF              	call print_sexpr
 25597                                  .Lvector_loop:
 25598                                  	; [rsp] index
 25599                                  	; [rsp + 8*1] limit
 25600                                  	; [rsp + 8*2] vector
 25601 00013389 488B0424                	mov rax, qword [rsp]
 25602 0001338D 483B442408              	cmp rax, qword [rsp + 8*1]
 25603 00013392 7436                    	je .Lvector_end
 25604 00013394 48BF-                   	mov rdi, fmt_space
 25604 00013396 [101A000000000000] 
 25605 0001339E B800000000              	mov rax, 0
 25606                                          ENTER
    44 000133A3 C8000000            <1>  enter 0, 0
    45 000133A7 4883E4F0            <1>  and rsp, ~15
 25607 000133AB E8(00000000)            	call printf
 25608                                          LEAVE
    49 000133B0 C9                  <1>  leave
 25609 000133B1 488B0424                	mov rax, qword [rsp]
 25610 000133B5 488B5C2410              	mov rbx, qword [rsp + 8*2]
 25611 000133BA 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 25612 000133BF E882FCFFFF              	call print_sexpr
 25613 000133C4 48FF0424                	inc qword [rsp]
 25614 000133C8 EBBF                    	jmp .Lvector_loop
 25615                                  
 25616                                  .Lvector_end:
 25617 000133CA 4883C418                	add rsp, 8*3
 25618 000133CE 48BF-                   	mov rdi, fmt_rparen
 25618 000133D0 [0E1A000000000000] 
 25619 000133D8 E901020000              	jmp .Lemit	
 25620                                  
 25621                                  .Lvector_empty:
 25622 000133DD 48BF-                   	mov rdi, fmt_empty_vector
 25622 000133DF [121A000000000000] 
 25623 000133E7 E9F2010000              	jmp .Lemit
 25624                                  
 25625                                  .Lreal:
 25626 000133EC FF7701                  	push qword [rdi + 1]
 25627 000133EF F20F100424              	movsd xmm0, qword [rsp]
 25628 000133F4 4883C408                	add rsp, 8*1
 25629 000133F8 48BF-                   	mov rdi, fmt_real
 25629 000133FA [191A000000000000] 
 25630 00013402 B801000000              	mov rax, 1
 25631                                  	ENTER
    44 00013407 C8000000            <1>  enter 0, 0
    45 0001340B 4883E4F0            <1>  and rsp, ~15
 25632 0001340F E8(00000000)            	call printf
 25633                                  	LEAVE
    49 00013414 C9                  <1>  leave
 25634 00013415 E9D9010000              	jmp .Lend
 25635                                  
 25636                                  .Lfraction:
 25637 0001341A 488B7701                	mov rsi, qword [rdi + 1]
 25638 0001341E 488B5709                	mov rdx, qword [rdi + 1 + 8]
 25639 00013422 4883FE00                	cmp rsi, 0
 25640 00013426 7415                    	je .Lrat_zero
 25641 00013428 4883FA01                	cmp rdx, 1
 25642 0001342C 741E                    	je .Lrat_int
 25643 0001342E 48BF-                   	mov rdi, fmt_fraction
 25643 00013430 [1C1A000000000000] 
 25644 00013438 E9A1010000              	jmp .Lemit
 25645                                  
 25646                                  .Lrat_zero:
 25647 0001343D 48BF-                   	mov rdi, fmt_zero
 25647 0001343F [241A000000000000] 
 25648 00013447 E992010000              	jmp .Lemit
 25649                                  
 25650                                  .Lrat_int:
 25651 0001344C 48BF-                   	mov rdi, fmt_int
 25651 0001344E [261A000000000000] 
 25652 00013456 E983010000              	jmp .Lemit
 25653                                  
 25654                                  .Linteger:
 25655 0001345B 488B7701                	mov rsi, qword [rdi + 1]
 25656 0001345F 48BF-                   	mov rdi, fmt_int
 25656 00013461 [261A000000000000] 
 25657 00013469 E970010000              	jmp .Lemit
 25658                                  
 25659                                  .Lstring:
 25660 0001346E 488D4709                	lea rax, [rdi + 1 + 8]
 25661 00013472 50                      	push rax
 25662 00013473 FF7701                  	push qword [rdi + 1]
 25663 00013476 48BF-                   	mov rdi, fmt_dquote
 25663 00013478 [6F1A000000000000] 
 25664 00013480 B800000000              	mov rax, 0
 25665                                  	ENTER
    44 00013485 C8000000            <1>  enter 0, 0
    45 00013489 4883E4F0            <1>  and rsp, ~15
 25666 0001348D E8(00000000)            	call printf
 25667                                  	LEAVE
    49 00013492 C9                  <1>  leave
 25668                                  .Lstring_loop:
 25669                                  	; qword [rsp]: limit
 25670                                  	; qword [rsp + 8*1]: char *
 25671 00013493 48833C2400              	cmp qword [rsp], 0
 25672 00013498 0F84FD000000            	je .Lstring_end
 25673 0001349E 488B442408              	mov rax, qword [rsp + 8*1]
 25674 000134A3 8A00                    	mov al, byte [rax]
 25675 000134A5 4825FF000000            	and rax, 255
 25676 000134AB 3C07                    	cmp al, 7
 25677 000134AD 7468                            je .Lstring_char_7
 25678 000134AF 3C08                            cmp al, 8
 25679 000134B1 7470                            je .Lstring_char_8
 25680 000134B3 3C09                            cmp al, 9
 25681 000134B5 7478                            je .Lstring_char_9
 25682 000134B7 3C0A                            cmp al, 10
 25683 000134B9 0F847C000000                    je .Lstring_char_10
 25684 000134BF 3C0B                            cmp al, 11
 25685 000134C1 0F8480000000                    je .Lstring_char_11
 25686 000134C7 3C0C                            cmp al, 12
 25687 000134C9 0F8484000000                    je .Lstring_char_12
 25688 000134CF 3C0D                            cmp al, 13
 25689 000134D1 0F8488000000                    je .Lstring_char_13
 25690 000134D7 3C22                            cmp al, 34
 25691 000134D9 0F848C000000                    je .Lstring_char_34
 25692 000134DF 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 25694 000134E1 3C20                            cmp al, ' '
 25695 000134E3 0F8CA0000000                    jl .Lstring_char_hex
 25696 000134E9 48BF-                           mov rdi, fmt_string_char
 25696 000134EB [711A000000000000] 
 25697 000134F3 4889C6                          mov rsi, rax
 25698                                  .Lstring_char_emit:
 25699 000134F6 B800000000                      mov rax, 0
 25700                                          ENTER
    44 000134FB C8000000            <1>  enter 0, 0
    45 000134FF 4883E4F0            <1>  and rsp, ~15
 25701 00013503 E8(00000000)                    call printf
 25702                                          LEAVE
    49 00013508 C9                  <1>  leave
 25703 00013509 48FF0C24                        dec qword [rsp]
 25704 0001350D 48FF442408                      inc qword [rsp + 8*1]
 25705 00013512 E97CFFFFFF                      jmp .Lstring_loop
 25706                                  
 25707                                  .Lstring_char_7:
 25708 00013517 48BF-                           mov rdi, fmt_string_char_7
 25708 00013519 [741A000000000000] 
 25709 00013521 EBD3                            jmp .Lstring_char_emit
 25710                                  
 25711                                  .Lstring_char_8:
 25712 00013523 48BF-                           mov rdi, fmt_string_char_8
 25712 00013525 [771A000000000000] 
 25713 0001352D EBC7                            jmp .Lstring_char_emit
 25714                                          
 25715                                  .Lstring_char_9:
 25716 0001352F 48BF-                           mov rdi, fmt_string_char_9
 25716 00013531 [7A1A000000000000] 
 25717 00013539 EBBB                            jmp .Lstring_char_emit
 25718                                  
 25719                                  .Lstring_char_10:
 25720 0001353B 48BF-                           mov rdi, fmt_string_char_10
 25720 0001353D [7D1A000000000000] 
 25721 00013545 EBAF                            jmp .Lstring_char_emit
 25722                                  
 25723                                  .Lstring_char_11:
 25724 00013547 48BF-                           mov rdi, fmt_string_char_11
 25724 00013549 [801A000000000000] 
 25725 00013551 EBA3                            jmp .Lstring_char_emit
 25726                                  
 25727                                  .Lstring_char_12:
 25728 00013553 48BF-                           mov rdi, fmt_string_char_12
 25728 00013555 [831A000000000000] 
 25729 0001355D EB97                            jmp .Lstring_char_emit
 25730                                  
 25731                                  .Lstring_char_13:
 25732 0001355F 48BF-                           mov rdi, fmt_string_char_13
 25732 00013561 [861A000000000000] 
 25733 00013569 EB8B                            jmp .Lstring_char_emit
 25734                                  
 25735                                  .Lstring_char_34:
 25736 0001356B 48BF-                           mov rdi, fmt_string_char_34
 25736 0001356D [891A000000000000] 
 25737 00013575 E97CFFFFFF                      jmp .Lstring_char_emit
 25738                                  
 25739                                  .Lstring_char_92:
 25740 0001357A 48BF-                           mov rdi, fmt_string_char_92
 25740 0001357C [8C1A000000000000] 
 25741 00013584 E96DFFFFFF                      jmp .Lstring_char_emit
 25742                                  
 25743                                  .Lstring_char_hex:
 25744 00013589 48BF-                           mov rdi, fmt_string_char_hex
 25744 0001358B [8F1A000000000000] 
 25745 00013593 4889C6                          mov rsi, rax
 25746 00013596 E95BFFFFFF                      jmp .Lstring_char_emit        
 25747                                  
 25748                                  .Lstring_end:
 25749 0001359B 4883C410                	add rsp, 8 * 2
 25750 0001359F 48BF-                   	mov rdi, fmt_dquote
 25750 000135A1 [6F1A000000000000] 
 25751 000135A9 EB33                    	jmp .Lemit
 25752                                  
 25753                                  .Lunknown_sexpr_type:
 25754 000135AB 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
 25754 000135AD [2A1A000000000000] 
 25755 000135B5 4825FF000000            	and rax, 255
 25756 000135BB 4889C2                  	mov rdx, rax
 25757 000135BE 4889F9                  	mov rcx, rdi
 25758 000135C1 488B3C25[00000000]      	mov rdi, qword [stderr]
 25759 000135C9 B800000000              	mov rax, 0
 25760                                          ENTER
    44 000135CE C8000000            <1>  enter 0, 0
    45 000135D2 4883E4F0            <1>  and rsp, ~15
 25761 000135D6 E8(00000000)            	call fprintf
 25762                                          LEAVE
    49 000135DB C9                  <1>  leave
 25763 000135DC C9                              leave
 25764 000135DD C3                              ret
 25765                                  
 25766                                  .Lemit:
 25767 000135DE B800000000              	mov rax, 0
 25768                                          ENTER
    44 000135E3 C8000000            <1>  enter 0, 0
    45 000135E7 4883E4F0            <1>  and rsp, ~15
 25769 000135EB E8(00000000)            	call printf
 25770                                          LEAVE
    49 000135F0 C9                  <1>  leave
 25771 000135F1 EB00                    	jmp .Lend
 25772                                  
 25773                                  .Lend:
 25774                                  	LEAVE
    49 000135F3 C9                  <1>  leave
 25775 000135F4 C3                      	ret
 25776                                  
 25777                                  ;;; rdi: address of free variable
 25778                                  ;;; rsi: address of code-pointer
 25779                                  bind_primitive:
 25780 000135F5 C8000000                        enter 0, 0
 25781 000135F9 57                              push rdi
 25782 000135FA BF11000000                      mov rdi, (1 + 8 + 8)
 25783 000135FF E8C1F7FFFF                      call malloc
 25784 00013604 5F                              pop rdi
 25785 00013605 C60004                          mov byte [rax], T_closure
 25786 00013608 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 25787 00013610 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 25788 00013614 488907                          mov qword [rdi], rax
 25789 00013617 48B8-                           mov rax, sob_void
 25789 00013619 [0000000000000000] 
 25790 00013621 C9                              leave
 25791 00013622 C3                              ret
 25792                                  
 25793                                  L_code_ptr_ash:
 25794 00013623 C8000000                        enter 0, 0
 25795 00013627 48837D1802                      cmp COUNT, 2
 25796 0001362C 0F857A140000                    jne L_error_arg_count_2
 25797 00013632 488B7D20                        mov rdi, PARAM(0)
 25798                                          assert_integer(rdi)
    53 00013636 803F11              <1>  cmp byte [%1], %2
    54 00013639 0F850C150000        <1>  jne L_error_incorrect_type
 25799 0001363F 488B4D28                        mov rcx, PARAM(1)
 25800                                          assert_integer(rcx)
    53 00013643 803911              <1>  cmp byte [%1], %2
    54 00013646 0F85FF140000        <1>  jne L_error_incorrect_type
 25801 0001364C 488B7F01                        mov rdi, qword [rdi + 1]
 25802 00013650 488B4901                        mov rcx, qword [rcx + 1]
 25803 00013654 4883F900                        cmp rcx, 0
 25804 00013658 7C0F                            jl .L_negative
 25805                                  .L_loop_positive:
 25806 0001365A 4883F900                        cmp rcx, 0
 25807 0001365E 741B                            je .L_exit
 25808 00013660 48D3E7                          sal rdi, cl
 25809 00013663 48C1E908                        shr rcx, 8
 25810 00013667 EBF1                            jmp .L_loop_positive
 25811                                  .L_negative:
 25812 00013669 48F7D9                          neg rcx
 25813                                  .L_loop_negative:
 25814 0001366C 4883F900                        cmp rcx, 0
 25815 00013670 7409                            je .L_exit
 25816 00013672 48D3FF                          sar rdi, cl
 25817 00013675 48C1E908                        shr rcx, 8
 25818 00013679 EBF1                            jmp .L_loop_negative
 25819                                  .L_exit:
 25820 0001367B E846130000                      call make_integer
 25821 00013680 C9                              leave
 25822 00013681 C22000                          ret AND_KILL_FRAME(2)
 25823                                  
 25824                                  L_code_ptr_logand:
 25825 00013684 C8000000                        enter 0, 0
 25826 00013688 48837D1802                      cmp COUNT, 2
 25827 0001368D 0F8519140000                    jne L_error_arg_count_2
 25828 00013693 4C8B4520                        mov r8, PARAM(0)
 25829                                          assert_integer(r8)
    53 00013697 41803811            <1>  cmp byte [%1], %2
    54 0001369B 0F85AA140000        <1>  jne L_error_incorrect_type
 25830 000136A1 4C8B4D28                        mov r9, PARAM(1)
 25831                                          assert_integer(r9)
    53 000136A5 41803911            <1>  cmp byte [%1], %2
    54 000136A9 0F859C140000        <1>  jne L_error_incorrect_type
 25832 000136AF 498B7801                        mov rdi, qword [r8 + 1]
 25833 000136B3 49237901                        and rdi, qword [r9 + 1]
 25834 000136B7 E80A130000                      call make_integer
 25835 000136BC C9                              leave
 25836 000136BD C22000                          ret AND_KILL_FRAME(2)
 25837                                  
 25838                                  L_code_ptr_logor:
 25839 000136C0 C8000000                        enter 0, 0
 25840 000136C4 48837D1802                      cmp COUNT, 2
 25841 000136C9 0F85DD130000                    jne L_error_arg_count_2
 25842 000136CF 4C8B4520                        mov r8, PARAM(0)
 25843                                          assert_integer(r8)
    53 000136D3 41803811            <1>  cmp byte [%1], %2
    54 000136D7 0F856E140000        <1>  jne L_error_incorrect_type
 25844 000136DD 4C8B4D28                        mov r9, PARAM(1)
 25845                                          assert_integer(r9)
    53 000136E1 41803911            <1>  cmp byte [%1], %2
    54 000136E5 0F8560140000        <1>  jne L_error_incorrect_type
 25846 000136EB 498B7801                        mov rdi, qword [r8 + 1]
 25847 000136EF 490B7901                        or rdi, qword [r9 + 1]
 25848 000136F3 E8CE120000                      call make_integer
 25849 000136F8 C9                              leave
 25850 000136F9 C22000                          ret AND_KILL_FRAME(2)
 25851                                  
 25852                                  L_code_ptr_logxor:
 25853 000136FC C8000000                        enter 0, 0
 25854 00013700 48837D1802                      cmp COUNT, 2
 25855 00013705 0F85A1130000                    jne L_error_arg_count_2
 25856 0001370B 4C8B4520                        mov r8, PARAM(0)
 25857                                          assert_integer(r8)
    53 0001370F 41803811            <1>  cmp byte [%1], %2
    54 00013713 0F8532140000        <1>  jne L_error_incorrect_type
 25858 00013719 4C8B4D28                        mov r9, PARAM(1)
 25859                                          assert_integer(r9)
    53 0001371D 41803911            <1>  cmp byte [%1], %2
    54 00013721 0F8524140000        <1>  jne L_error_incorrect_type
 25860 00013727 498B7801                        mov rdi, qword [r8 + 1]
 25861 0001372B 49337901                        xor rdi, qword [r9 + 1]
 25862 0001372F E892120000                      call make_integer
 25863                                          LEAVE
    49 00013734 C9                  <1>  leave
 25864 00013735 C22000                          ret AND_KILL_FRAME(2)
 25865                                  
 25866                                  L_code_ptr_lognot:
 25867 00013738 C8000000                        enter 0, 0
 25868 0001373C 48837D1801                      cmp COUNT, 1
 25869 00013741 0F8530130000                    jne L_error_arg_count_1
 25870 00013747 4C8B4520                        mov r8, PARAM(0)
 25871                                          assert_integer(r8)
    53 0001374B 41803811            <1>  cmp byte [%1], %2
    54 0001374F 0F85F6130000        <1>  jne L_error_incorrect_type
 25872 00013755 498B7801                        mov rdi, qword [r8 + 1]
 25873 00013759 48F7D7                          not rdi
 25874 0001375C E865120000                      call make_integer
 25875 00013761 C9                              leave
 25876 00013762 C21800                          ret AND_KILL_FRAME(1)
 25877                                  
 25878                                  L_code_ptr_bin_apply:
 25879                                          ;assuming we have 2 params - f and list to apply f on it
 25880 00013765 48837D1802                      cmp COUNT, 2
 25881 0001376A 0F8C3C130000                    jl L_error_arg_count_2    ; f and list
 25882 00013770 4C8B4500                        mov r8, qword[rbp]      ;backup rbp
 25883                                          
 25884 00013774 4C8B4D08                        mov r9, qword[rbp +8]   ;backup ret addr
 25885 00013778 4C8B7D28                        mov r15, PARAM(1)         ;get list
 25886 0001377C 488B4520                        mov rax, PARAM(0)         ;get f
 25887                                          ; Count elements in the list
 25888 00013780 41BA00000000                    mov r10, 0                ;counter
 25889 00013786 4D89FB                          mov r11, r15 ; Is the list pointer
 25890                                         
 25891                                          
 25892                                  .count_loop:
 25893 00013789 41803B01                        cmp byte [r11], T_nil ;checking if we done, it's a proper list
 25894 0001378D 7409                            je .write_over_frame
 25895 0001378F 49FFC2                          inc r10                   ; Increment list element count
 25896 00013792 4D8B5B09                        mov r11, SOB_PAIR_CDR(r11) ;getting the next element in s if error might be here
 25897 00013796 EBF1                            jmp .count_loop
 25898                                  
 25899                                          ;r10 list length
 25900                                  
 25901                                  .write_over_frame:
 25902 00013798 4D89D3                          mov r11, r10 ;
 25903 0001379B 4983EB02                        sub r11, 2 ;how much to increase rbp for list argumetns
 25904 0001379F 49C1E303                        shl r11, 3 ;multiply by 8
 25905 000137A3 4C29DD                          sub rbp, r11 ;making space for list arguemtns
 25906                                  
 25907                                  .mov_env_rbp:
 25908 000137A6 4C894500                        mov qword[rbp], r8 ;restore old rbp
 25909 000137AA 4C894D08                        mov qword[rbp + 8], r9 ;restore old ret addr
 25910                                          mov qword[rbp + 8*2], SOB_CLOSURE_ENV(rax) ;save the env in the new frame
 25910          ******************       error: invalid combination of opcode and operands
 25911 000137AE 4C895518                        mov qword[rbp+ 8*3], r10 ;save the number of params in the new frame
 25912 000137B2 41BB00000000                    mov r11, 0;
 25913                                          ;r10 is the originl list length
 25914                                  .copy_list_arguments:
 25915 000137B8 4D39D3                          cmp r11, r10 ;reached to the end of the list
 25916 000137BB 740F                            je .done_copy_list_arguments;
 25917 000137BD 4D8B6701                        mov r12, SOB_PAIR_CAR(r15) ;get the car of the list
 25918 000137C1 4E8964DD20                      mov qword PARAM(r11), r12 ;copy the car to the new frame
 25919 000137C6 4D8B7F09                        mov r15, SOB_PAIR_CDR(r15) ;get the cdr of the list
 25920 000137CA EBEC                            jmp .copy_list_arguments
 25921                                          ;;;rsp now points to the old ret?
 25922                                          ;;;rbp now points to the older rbp?
 25923                                  .done_copy_list_arguments:
 25924 000137CC FF6009                          jmp SOB_CLOSURE_CODE(rax) ;jump to the code of the closure
 25925                                  
 25926                                  
 25927                                  L_code_ptr_is_null:
 25928 000137CF C8000000                        enter 0, 0
 25929 000137D3 48837D1801                      cmp COUNT, 1
 25930 000137D8 0F8599120000                    jne L_error_arg_count_1
 25931 000137DE 488B4520                        mov rax, PARAM(0)
 25932 000137E2 803801                          cmp byte [rax], T_nil
 25933 000137E5 750C                            jne .L_false
 25934 000137E7 48B8-                           mov rax, sob_boolean_true
 25934 000137E9 [0300000000000000] 
 25935 000137F1 EB0A                            jmp .L_end
 25936                                  .L_false:
 25937 000137F3 48B8-                           mov rax, sob_boolean_false
 25937 000137F5 [0200000000000000] 
 25938                                  .L_end:
 25939 000137FD C9                              leave
 25940 000137FE C21800                          ret AND_KILL_FRAME(1)
 25941                                  
 25942                                  L_code_ptr_is_pair:
 25943 00013801 C8000000                        enter 0, 0
 25944 00013805 48837D1801                      cmp COUNT, 1
 25945 0001380A 0F8567120000                    jne L_error_arg_count_1
 25946 00013810 488B4520                        mov rax, PARAM(0)
 25947 00013814 803821                          cmp byte [rax], T_pair
 25948 00013817 750C                            jne .L_false
 25949 00013819 48B8-                           mov rax, sob_boolean_true
 25949 0001381B [0300000000000000] 
 25950 00013823 EB0A                            jmp .L_end
 25951                                  .L_false:
 25952 00013825 48B8-                           mov rax, sob_boolean_false
 25952 00013827 [0200000000000000] 
 25953                                  .L_end:
 25954 0001382F C9                              leave
 25955 00013830 C21800                          ret AND_KILL_FRAME(1)
 25956                                          
 25957                                  L_code_ptr_is_void:
 25958 00013833 C8000000                        enter 0, 0
 25959 00013837 48837D1801                      cmp COUNT, 1
 25960 0001383C 0F8535120000                    jne L_error_arg_count_1
 25961 00013842 488B4520                        mov rax, PARAM(0)
 25962 00013846 803800                          cmp byte [rax], T_void
 25963 00013849 750C                            jne .L_false
 25964 0001384B 48B8-                           mov rax, sob_boolean_true
 25964 0001384D [0300000000000000] 
 25965 00013855 EB0A                            jmp .L_end
 25966                                  .L_false:
 25967 00013857 48B8-                           mov rax, sob_boolean_false
 25967 00013859 [0200000000000000] 
 25968                                  .L_end:
 25969 00013861 C9                              leave
 25970 00013862 C21800                          ret AND_KILL_FRAME(1)
 25971                                  
 25972                                  L_code_ptr_is_char:
 25973 00013865 C8000000                        enter 0, 0
 25974 00013869 48837D1801                      cmp COUNT, 1
 25975 0001386E 0F8503120000                    jne L_error_arg_count_1
 25976 00013874 488B4520                        mov rax, PARAM(0)
 25977 00013878 803802                          cmp byte [rax], T_char
 25978 0001387B 750C                            jne .L_false
 25979 0001387D 48B8-                           mov rax, sob_boolean_true
 25979 0001387F [0300000000000000] 
 25980 00013887 EB0A                            jmp .L_end
 25981                                  .L_false:
 25982 00013889 48B8-                           mov rax, sob_boolean_false
 25982 0001388B [0200000000000000] 
 25983                                  .L_end:
 25984 00013893 C9                              leave
 25985 00013894 C21800                          ret AND_KILL_FRAME(1)
 25986                                  
 25987                                  L_code_ptr_is_string:
 25988 00013897 C8000000                        enter 0, 0
 25989 0001389B 48837D1801                      cmp COUNT, 1
 25990 000138A0 0F85D1110000                    jne L_error_arg_count_1
 25991 000138A6 488B4520                        mov rax, PARAM(0)
 25992 000138AA 803803                          cmp byte [rax], T_string
 25993 000138AD 750C                            jne .L_false
 25994 000138AF 48B8-                           mov rax, sob_boolean_true
 25994 000138B1 [0300000000000000] 
 25995 000138B9 EB0A                            jmp .L_end
 25996                                  .L_false:
 25997 000138BB 48B8-                           mov rax, sob_boolean_false
 25997 000138BD [0200000000000000] 
 25998                                  .L_end:
 25999 000138C5 C9                              leave
 26000 000138C6 C21800                          ret AND_KILL_FRAME(1)
 26001                                  
 26002                                  L_code_ptr_is_symbol:
 26003 000138C9 C8000000                        enter 0, 0
 26004 000138CD 48837D1801                      cmp COUNT, 1
 26005 000138D2 0F859F110000                    jne L_error_arg_count_1
 26006 000138D8 4C8B4520                        mov r8, PARAM(0)
 26007 000138DC 41802040                        and byte [r8], T_symbol
 26008 000138E0 740C                            jz .L_false
 26009 000138E2 48B8-                           mov rax, sob_boolean_true
 26009 000138E4 [0300000000000000] 
 26010 000138EC EB0A                            jmp .L_exit
 26011                                  .L_false:
 26012 000138EE 48B8-                           mov rax, sob_boolean_false
 26012 000138F0 [0200000000000000] 
 26013                                  .L_exit:
 26014 000138F8 C9                              leave
 26015 000138F9 C21800                          ret AND_KILL_FRAME(1)
 26016                                  
 26017                                  L_code_ptr_is_uninterned_symbol:
 26018 000138FC C8000000                        enter 0, 0
 26019 00013900 48837D1801                      cmp COUNT, 1
 26020 00013905 0F856C110000                    jne L_error_arg_count_1
 26021 0001390B 4C8B4520                        mov r8, PARAM(0)
 26022 0001390F 41803842                        cmp byte [r8], T_uninterned_symbol
 26023 00013913 750C                            jne .L_false
 26024 00013915 48B8-                           mov rax, sob_boolean_true
 26024 00013917 [0300000000000000] 
 26025 0001391F EB0A                            jmp .L_exit
 26026                                  .L_false:
 26027 00013921 48B8-                           mov rax, sob_boolean_false
 26027 00013923 [0200000000000000] 
 26028                                  .L_exit:
 26029 0001392B C9                              leave
 26030 0001392C C21800                          ret AND_KILL_FRAME(1)
 26031                                  
 26032                                  L_code_ptr_is_interned_symbol:
 26033 0001392F C8000000                        enter 0, 0
 26034 00013933 48837D1801                      cmp COUNT, 1
 26035 00013938 0F8539110000                    jne L_error_arg_count_1
 26036 0001393E 488B4520                        mov rax, PARAM(0)
 26037 00013942 803841                          cmp byte [rax], T_interned_symbol
 26038 00013945 750C                            jne .L_false
 26039 00013947 48B8-                           mov rax, sob_boolean_true
 26039 00013949 [0300000000000000] 
 26040 00013951 EB0A                            jmp .L_end
 26041                                  .L_false:
 26042 00013953 48B8-                           mov rax, sob_boolean_false
 26042 00013955 [0200000000000000] 
 26043                                  .L_end:
 26044 0001395D C9                              leave
 26045 0001395E C21800                          ret AND_KILL_FRAME(1)
 26046                                  
 26047                                  L_code_ptr_gensym:
 26048 00013961 C8000000                        enter 0, 0
 26049 00013965 48837D1800                      cmp COUNT, 0
 26050 0001396A 0F85D2100000                    jne L_error_arg_count_0
 26051 00013970 48FF0425[951A0000]              inc qword [gensym_count]
 26052 00013978 BF09000000                      mov rdi, (1 + 8)
 26053 0001397D E843F4FFFF                      call malloc
 26054 00013982 C60042                          mov byte [rax], T_uninterned_symbol
 26055 00013985 488B0C25[951A0000]              mov rcx, qword [gensym_count]
 26056 0001398D 48894801                        mov qword [rax + 1], rcx
 26057 00013991 C9                              leave
 26058 00013992 C21000                          ret AND_KILL_FRAME(0)
 26059                                  
 26060                                  L_code_ptr_is_vector:
 26061 00013995 C8000000                        enter 0, 0
 26062 00013999 48837D1801                      cmp COUNT, 1
 26063 0001399E 0F85D3100000                    jne L_error_arg_count_1
 26064 000139A4 488B4520                        mov rax, PARAM(0)
 26065 000139A8 803822                          cmp byte [rax], T_vector
 26066 000139AB 750C                            jne .L_false
 26067 000139AD 48B8-                           mov rax, sob_boolean_true
 26067 000139AF [0300000000000000] 
 26068 000139B7 EB0A                            jmp .L_end
 26069                                  .L_false:
 26070 000139B9 48B8-                           mov rax, sob_boolean_false
 26070 000139BB [0200000000000000] 
 26071                                  .L_end:
 26072 000139C3 C9                              leave
 26073 000139C4 C21800                          ret AND_KILL_FRAME(1)
 26074                                  
 26075                                  L_code_ptr_is_closure:
 26076 000139C7 C8000000                        enter 0, 0
 26077 000139CB 48837D1801                      cmp COUNT, 1
 26078 000139D0 0F85A1100000                    jne L_error_arg_count_1
 26079 000139D6 488B4520                        mov rax, PARAM(0)
 26080 000139DA 803804                          cmp byte [rax], T_closure
 26081 000139DD 750C                            jne .L_false
 26082 000139DF 48B8-                           mov rax, sob_boolean_true
 26082 000139E1 [0300000000000000] 
 26083 000139E9 EB0A                            jmp .L_end
 26084                                  .L_false:
 26085 000139EB 48B8-                           mov rax, sob_boolean_false
 26085 000139ED [0200000000000000] 
 26086                                  .L_end:
 26087 000139F5 C9                              leave
 26088 000139F6 C21800                          ret AND_KILL_FRAME(1)
 26089                                  
 26090                                  L_code_ptr_is_real:
 26091 000139F9 C8000000                        enter 0, 0
 26092 000139FD 48837D1801                      cmp COUNT, 1
 26093 00013A02 0F856F100000                    jne L_error_arg_count_1
 26094 00013A08 488B4520                        mov rax, PARAM(0)
 26095 00013A0C 803813                          cmp byte [rax], T_real
 26096 00013A0F 750C                            jne .L_false
 26097 00013A11 48B8-                           mov rax, sob_boolean_true
 26097 00013A13 [0300000000000000] 
 26098 00013A1B EB0A                            jmp .L_end
 26099                                  .L_false:
 26100 00013A1D 48B8-                           mov rax, sob_boolean_false
 26100 00013A1F [0200000000000000] 
 26101                                  .L_end:
 26102 00013A27 C9                              leave
 26103 00013A28 C21800                          ret AND_KILL_FRAME(1)
 26104                                  
 26105                                  L_code_ptr_is_fraction:
 26106 00013A2B C8000000                        enter 0, 0
 26107 00013A2F 48837D1801                      cmp COUNT, 1
 26108 00013A34 0F853D100000                    jne L_error_arg_count_1
 26109 00013A3A 488B4520                        mov rax, PARAM(0)
 26110 00013A3E 803812                          cmp byte [rax], T_fraction
 26111 00013A41 750C                            jne .L_false
 26112 00013A43 48B8-                           mov rax, sob_boolean_true
 26112 00013A45 [0300000000000000] 
 26113 00013A4D EB0A                            jmp .L_end
 26114                                  .L_false:
 26115 00013A4F 48B8-                           mov rax, sob_boolean_false
 26115 00013A51 [0200000000000000] 
 26116                                  .L_end:
 26117 00013A59 C9                              leave
 26118 00013A5A C21800                          ret AND_KILL_FRAME(1)
 26119                                  
 26120                                  L_code_ptr_is_boolean:
 26121 00013A5D C8000000                        enter 0, 0
 26122 00013A61 48837D1801                      cmp COUNT, 1
 26123 00013A66 0F850B100000                    jne L_error_arg_count_1
 26124 00013A6C 488B4520                        mov rax, PARAM(0)
 26125 00013A70 8A18                            mov bl, byte [rax]
 26126 00013A72 80E308                          and bl, T_boolean
 26127 00013A75 740C                            je .L_false
 26128 00013A77 48B8-                           mov rax, sob_boolean_true
 26128 00013A79 [0300000000000000] 
 26129 00013A81 EB0A                            jmp .L_end
 26130                                  .L_false:
 26131 00013A83 48B8-                           mov rax, sob_boolean_false
 26131 00013A85 [0200000000000000] 
 26132                                  .L_end:
 26133 00013A8D C9                              leave
 26134 00013A8E C21800                          ret AND_KILL_FRAME(1)
 26135                                          
 26136                                  L_code_ptr_is_boolean_false:
 26137 00013A91 C8000000                        enter 0, 0
 26138 00013A95 48837D1801                      cmp COUNT, 1
 26139 00013A9A 0F85D70F0000                    jne L_error_arg_count_1
 26140 00013AA0 488B4520                        mov rax, PARAM(0)
 26141 00013AA4 8A18                            mov bl, byte [rax]
 26142 00013AA6 80FB09                          cmp bl, T_boolean_false
 26143 00013AA9 750C                            jne .L_false
 26144 00013AAB 48B8-                           mov rax, sob_boolean_true
 26144 00013AAD [0300000000000000] 
 26145 00013AB5 EB0A                            jmp .L_end
 26146                                  .L_false:
 26147 00013AB7 48B8-                           mov rax, sob_boolean_false
 26147 00013AB9 [0200000000000000] 
 26148                                  .L_end:
 26149 00013AC1 C9                              leave
 26150 00013AC2 C21800                          ret AND_KILL_FRAME(1)
 26151                                  
 26152                                  L_code_ptr_is_boolean_true:
 26153 00013AC5 C8000000                        enter 0, 0
 26154 00013AC9 48837D1801                      cmp COUNT, 1
 26155 00013ACE 0F85A30F0000                    jne L_error_arg_count_1
 26156 00013AD4 488B4520                        mov rax, PARAM(0)
 26157 00013AD8 8A18                            mov bl, byte [rax]
 26158 00013ADA 80FB0A                          cmp bl, T_boolean_true
 26159 00013ADD 750C                            jne .L_false
 26160 00013ADF 48B8-                           mov rax, sob_boolean_true
 26160 00013AE1 [0300000000000000] 
 26161 00013AE9 EB0A                            jmp .L_end
 26162                                  .L_false:
 26163 00013AEB 48B8-                           mov rax, sob_boolean_false
 26163 00013AED [0200000000000000] 
 26164                                  .L_end:
 26165 00013AF5 C9                              leave
 26166 00013AF6 C21800                          ret AND_KILL_FRAME(1)
 26167                                  
 26168                                  L_code_ptr_is_number:
 26169 00013AF9 C8000000                        enter 0, 0
 26170 00013AFD 48837D1801                      cmp COUNT, 1
 26171 00013B02 0F856F0F0000                    jne L_error_arg_count_1
 26172 00013B08 488B4520                        mov rax, PARAM(0)
 26173 00013B0C 8A18                            mov bl, byte [rax]
 26174 00013B0E 80E310                          and bl, T_number
 26175 00013B11 740C                            jz .L_false
 26176 00013B13 48B8-                           mov rax, sob_boolean_true
 26176 00013B15 [0300000000000000] 
 26177 00013B1D EB0A                            jmp .L_end
 26178                                  .L_false:
 26179 00013B1F 48B8-                           mov rax, sob_boolean_false
 26179 00013B21 [0200000000000000] 
 26180                                  .L_end:
 26181 00013B29 C9                              leave
 26182 00013B2A C21800                          ret AND_KILL_FRAME(1)
 26183                                          
 26184                                  L_code_ptr_is_collection:
 26185 00013B2D C8000000                        enter 0, 0
 26186 00013B31 48837D1801                      cmp COUNT, 1
 26187 00013B36 0F853B0F0000                    jne L_error_arg_count_1
 26188 00013B3C 488B4520                        mov rax, PARAM(0)
 26189 00013B40 8A18                            mov bl, byte [rax]
 26190 00013B42 80E320                          and bl, T_collection
 26191 00013B45 740C                            je .L_false
 26192 00013B47 48B8-                           mov rax, sob_boolean_true
 26192 00013B49 [0300000000000000] 
 26193 00013B51 EB0A                            jmp .L_end
 26194                                  .L_false:
 26195 00013B53 48B8-                           mov rax, sob_boolean_false
 26195 00013B55 [0200000000000000] 
 26196                                  .L_end:
 26197 00013B5D C9                              leave
 26198 00013B5E C21800                          ret AND_KILL_FRAME(1)
 26199                                  
 26200                                  L_code_ptr_cons:
 26201 00013B61 C8000000                        enter 0, 0
 26202 00013B65 48837D1802                      cmp COUNT, 2
 26203 00013B6A 0F853C0F0000                    jne L_error_arg_count_2
 26204 00013B70 BF11000000                      mov rdi, (1 + 8 + 8)
 26205 00013B75 E84BF2FFFF                      call malloc
 26206 00013B7A C60021                          mov byte [rax], T_pair
 26207 00013B7D 488B5D20                        mov rbx, PARAM(0)
 26208 00013B81 48895801                        mov SOB_PAIR_CAR(rax), rbx
 26209 00013B85 488B5D28                        mov rbx, PARAM(1)
 26210 00013B89 48895809                        mov SOB_PAIR_CDR(rax), rbx
 26211 00013B8D C9                              leave
 26212 00013B8E C22000                          ret AND_KILL_FRAME(2)
 26213                                  
 26214                                  L_code_ptr_display_sexpr:
 26215 00013B91 C8000000                        enter 0, 0
 26216 00013B95 48837D1801                      cmp COUNT, 1
 26217 00013B9A 0F85D70E0000                    jne L_error_arg_count_1
 26218 00013BA0 488B7D20                        mov rdi, PARAM(0)
 26219 00013BA4 E89DF4FFFF                      call print_sexpr
 26220 00013BA9 48B8-                           mov rax, sob_void
 26220 00013BAB [0000000000000000] 
 26221 00013BB3 C9                              leave
 26222 00013BB4 C21800                          ret AND_KILL_FRAME(1)
 26223                                  
 26224                                  L_code_ptr_write_char:
 26225 00013BB7 C8000000                        enter 0, 0
 26226 00013BBB 48837D1801                      cmp COUNT, 1
 26227 00013BC0 0F85B10E0000                    jne L_error_arg_count_1
 26228 00013BC6 488B4520                        mov rax, PARAM(0)
 26229                                          assert_char(rax)
    53 00013BCA 803802              <1>  cmp byte [%1], %2
    54 00013BCD 0F85780F0000        <1>  jne L_error_incorrect_type
 26230 00013BD3 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 26231 00013BD6 4825FF000000                    and rax, 255
 26232 00013BDC 48BF-                           mov rdi, fmt_char
 26232 00013BDE [9D1A000000000000] 
 26233 00013BE6 4889C6                          mov rsi, rax
 26234 00013BE9 B800000000                      mov rax, 0
 26235                                          ENTER
    44 00013BEE C8000000            <1>  enter 0, 0
    45 00013BF2 4883E4F0            <1>  and rsp, ~15
 26236 00013BF6 E8(00000000)                    call printf
 26237                                          LEAVE
    49 00013BFB C9                  <1>  leave
 26238 00013BFC 48B8-                           mov rax, sob_void
 26238 00013BFE [0000000000000000] 
 26239 00013C06 C9                              leave
 26240 00013C07 C21800                          ret AND_KILL_FRAME(1)
 26241                                  
 26242                                  L_code_ptr_car:
 26243 00013C0A C8000000                        enter 0, 0
 26244 00013C0E 48837D1801                      cmp COUNT, 1
 26245 00013C13 0F855E0E0000                    jne L_error_arg_count_1
 26246 00013C19 488B4520                        mov rax, PARAM(0)
 26247                                          assert_pair(rax)
    53 00013C1D 803821              <1>  cmp byte [%1], %2
    54 00013C20 0F85250F0000        <1>  jne L_error_incorrect_type
 26248 00013C26 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 26249 00013C2A C9                              leave
 26250 00013C2B C21800                          ret AND_KILL_FRAME(1)
 26251                                          
 26252                                  L_code_ptr_cdr:
 26253 00013C2E C8000000                        enter 0, 0
 26254 00013C32 48837D1801                      cmp COUNT, 1
 26255 00013C37 0F853A0E0000                    jne L_error_arg_count_1
 26256 00013C3D 488B4520                        mov rax, PARAM(0)
 26257                                          assert_pair(rax)
    53 00013C41 803821              <1>  cmp byte [%1], %2
    54 00013C44 0F85010F0000        <1>  jne L_error_incorrect_type
 26258 00013C4A 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 26259 00013C4E C9                              leave
 26260 00013C4F C21800                          ret AND_KILL_FRAME(1)
 26261                                          
 26262                                  L_code_ptr_string_length:
 26263 00013C52 C8000000                        enter 0, 0
 26264 00013C56 48837D1801                      cmp COUNT, 1
 26265 00013C5B 0F85160E0000                    jne L_error_arg_count_1
 26266 00013C61 488B4520                        mov rax, PARAM(0)
 26267                                          assert_string(rax)
    53 00013C65 803803              <1>  cmp byte [%1], %2
    54 00013C68 0F85DD0E0000        <1>  jne L_error_incorrect_type
 26268 00013C6E 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 26269 00013C72 E84F0D0000                      call make_integer
 26270 00013C77 C9                              leave
 26271 00013C78 C21800                          ret AND_KILL_FRAME(1)
 26272                                  
 26273                                  L_code_ptr_vector_length:
 26274 00013C7B C8000000                        enter 0, 0
 26275 00013C7F 48837D1801                      cmp COUNT, 1
 26276 00013C84 0F85ED0D0000                    jne L_error_arg_count_1
 26277 00013C8A 488B4520                        mov rax, PARAM(0)
 26278                                          assert_vector(rax)
    53 00013C8E 803822              <1>  cmp byte [%1], %2
    54 00013C91 0F85B40E0000        <1>  jne L_error_incorrect_type
 26279 00013C97 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 26280 00013C9B E8260D0000                      call make_integer
 26281 00013CA0 C9                              leave
 26282 00013CA1 C21800                          ret AND_KILL_FRAME(1)
 26283                                  
 26284                                  L_code_ptr_real_to_integer:
 26285 00013CA4 C8000000                        enter 0, 0
 26286 00013CA8 48837D1801                      cmp COUNT, 1
 26287 00013CAD 0F85C40D0000                    jne L_error_arg_count_1
 26288 00013CB3 488B5D20                        mov rbx, PARAM(0)
 26289                                          assert_real(rbx)
    53 00013CB7 803B13              <1>  cmp byte [%1], %2
    54 00013CBA 0F858B0E0000        <1>  jne L_error_incorrect_type
 26290 00013CC0 F20F104301                      movsd xmm0, qword [rbx + 1]
 26291 00013CC5 F2480F2CF8                      cvttsd2si rdi, xmm0
 26292 00013CCA E8F70C0000                      call make_integer
 26293 00013CCF C9                              leave
 26294 00013CD0 C21800                          ret AND_KILL_FRAME(1)
 26295                                  
 26296                                  L_code_ptr_exit:
 26297 00013CD3 C8000000                        enter 0, 0
 26298 00013CD7 48837D1800                      cmp COUNT, 0
 26299 00013CDC 0F85600D0000                    jne L_error_arg_count_0
 26300 00013CE2 B800000000                      mov rax, 0
 26301 00013CE7 E8(00000000)                    call exit
 26302                                  
 26303                                  L_code_ptr_integer_to_real:
 26304 00013CEC C8000000                        enter 0, 0
 26305 00013CF0 48837D1801                      cmp COUNT, 1
 26306 00013CF5 0F857C0D0000                    jne L_error_arg_count_1
 26307 00013CFB 488B4520                        mov rax, PARAM(0)
 26308                                          assert_integer(rax)
    53 00013CFF 803811              <1>  cmp byte [%1], %2
    54 00013D02 0F85430E0000        <1>  jne L_error_incorrect_type
 26309 00013D08 FF7001                          push qword [rax + 1]
 26310 00013D0B F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 26311 00013D11 E8980C0000                      call make_real
 26312 00013D16 C9                              leave
 26313 00013D17 C21800                          ret AND_KILL_FRAME(1)
 26314                                  
 26315                                  L_code_ptr_fraction_to_real:
 26316 00013D1A C8000000                        enter 0, 0
 26317 00013D1E 48837D1801                      cmp COUNT, 1
 26318 00013D23 0F854E0D0000                    jne L_error_arg_count_1
 26319 00013D29 488B4520                        mov rax, PARAM(0)
 26320                                          assert_fraction(rax)
    53 00013D2D 803812              <1>  cmp byte [%1], %2
    54 00013D30 0F85150E0000        <1>  jne L_error_incorrect_type
 26321 00013D36 FF7001                          push qword [rax + 1]
 26322 00013D39 F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 26323 00013D3F FF7009                          push qword [rax + 1 + 8]
 26324 00013D42 F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 26325 00013D48 F20F5EC1                        divsd xmm0, xmm1
 26326 00013D4C E85D0C0000                      call make_real
 26327 00013D51 C9                              leave
 26328 00013D52 C21800                          ret AND_KILL_FRAME(1)
 26329                                  
 26330                                  L_code_ptr_char_to_integer:
 26331 00013D55 C8000000                        enter 0, 0
 26332 00013D59 48837D1801                      cmp COUNT, 1
 26333 00013D5E 0F85130D0000                    jne L_error_arg_count_1
 26334 00013D64 488B4520                        mov rax, PARAM(0)
 26335                                          assert_char(rax)
    53 00013D68 803802              <1>  cmp byte [%1], %2
    54 00013D6B 0F85DA0D0000        <1>  jne L_error_incorrect_type
 26336 00013D71 8A4001                          mov al, byte [rax + 1]
 26337 00013D74 4825FF000000                    and rax, 255
 26338 00013D7A 4889C7                          mov rdi, rax
 26339 00013D7D E8440C0000                      call make_integer
 26340 00013D82 C9                              leave
 26341 00013D83 C21800                          ret AND_KILL_FRAME(1)
 26342                                  
 26343                                  L_code_ptr_integer_to_fraction:
 26344 00013D86 C8000000                        enter 0, 0
 26345 00013D8A 48837D1801                      cmp COUNT, 1
 26346 00013D8F 0F85E20C0000                    jne L_error_arg_count_1
 26347 00013D95 4C8B4520                        mov r8, PARAM(0)
 26348                                          assert_integer(r8)
    53 00013D99 41803811            <1>  cmp byte [%1], %2
    54 00013D9D 0F85A80D0000        <1>  jne L_error_incorrect_type
 26349 00013DA3 BF11000000                      mov rdi, (1 + 8 + 8)
 26350 00013DA8 E818F0FFFF                      call malloc
 26351 00013DAD 498B5801                        mov rbx, qword [r8 + 1]
 26352 00013DB1 C60012                          mov byte [rax], T_fraction
 26353 00013DB4 48895801                        mov qword [rax + 1], rbx
 26354 00013DB8 48C7400901000000                mov qword [rax + 1 + 8], 1
 26355 00013DC0 C9                              leave
 26356 00013DC1 C21800                          ret AND_KILL_FRAME(1)
 26357                                  
 26358                                  L_code_ptr_integer_to_char:
 26359 00013DC4 C8000000                        enter 0, 0
 26360 00013DC8 48837D1801                      cmp COUNT, 1
 26361 00013DCD 0F85A40C0000                    jne L_error_arg_count_1
 26362 00013DD3 488B4520                        mov rax, PARAM(0)
 26363                                          assert_integer(rax)
    53 00013DD7 803811              <1>  cmp byte [%1], %2
    54 00013DDA 0F856B0D0000        <1>  jne L_error_incorrect_type
 26364 00013DE0 488B5801                        mov rbx, qword [rax + 1]
 26365 00013DE4 4883FB00                        cmp rbx, 0
 26366 00013DE8 0F8EF20B0000                    jle L_error_integer_range
 26367 00013DEE 4881FB00010000                  cmp rbx, 256
 26368 00013DF5 0F8DE50B0000                    jge L_error_integer_range
 26369 00013DFB BF02000000                      mov rdi, (1 + 1)
 26370 00013E00 E8C0EFFFFF                      call malloc
 26371 00013E05 C60002                          mov byte [rax], T_char
 26372 00013E08 885801                          mov byte [rax + 1], bl
 26373 00013E0B C9                              leave
 26374 00013E0C C21800                          ret AND_KILL_FRAME(1)
 26375                                  
 26376                                  L_code_ptr_trng:
 26377 00013E0F C8000000                        enter 0, 0
 26378 00013E13 48837D1800                      cmp COUNT, 0
 26379 00013E18 0F85240C0000                    jne L_error_arg_count_0
 26380 00013E1E 480FC7F7                        rdrand rdi
 26381 00013E22 48D1EF                          shr rdi, 1
 26382 00013E25 E89C0B0000                      call make_integer
 26383 00013E2A C9                              leave
 26384 00013E2B C21000                          ret AND_KILL_FRAME(0)
 26385                                  
 26386                                  L_code_ptr_is_zero:
 26387 00013E2E C8000000                        enter 0, 0
 26388 00013E32 48837D1801                      cmp COUNT, 1
 26389 00013E37 0F853A0C0000                    jne L_error_arg_count_1
 26390 00013E3D 488B4520                        mov rax, PARAM(0)
 26391 00013E41 803811                          cmp byte [rax], T_integer
 26392 00013E44 740F                            je .L_integer
 26393 00013E46 803812                          cmp byte [rax], T_fraction
 26394 00013E49 7413                            je .L_fraction
 26395 00013E4B 803813                          cmp byte [rax], T_real
 26396 00013E4E 7417                            je .L_real
 26397 00013E50 E9F60C0000                      jmp L_error_incorrect_type
 26398                                  .L_integer:
 26399 00013E55 4883780100                      cmp qword [rax + 1], 0
 26400 00013E5A 7429                            je .L_zero
 26401 00013E5C EB1B                            jmp .L_not_zero
 26402                                  .L_fraction:
 26403 00013E5E 4883780100                      cmp qword [rax + 1], 0
 26404 00013E63 7420                            je .L_zero
 26405 00013E65 EB12                            jmp .L_not_zero
 26406                                  .L_real:
 26407 00013E67 660FEFC0                        pxor xmm0, xmm0
 26408 00013E6B FF7001                          push qword [rax + 1]
 26409 00013E6E F20F100C24                      movsd xmm1, qword [rsp]
 26410 00013E73 660F2EC1                        ucomisd xmm0, xmm1
 26411 00013E77 740C                            je .L_zero
 26412                                  .L_not_zero:
 26413 00013E79 48B8-                           mov rax, sob_boolean_false
 26413 00013E7B [0200000000000000] 
 26414 00013E83 EB0A                            jmp .L_end
 26415                                  .L_zero:
 26416 00013E85 48B8-                           mov rax, sob_boolean_true
 26416 00013E87 [0300000000000000] 
 26417                                  .L_end:
 26418 00013E8F C9                              leave
 26419 00013E90 C21800                          ret AND_KILL_FRAME(1)
 26420                                  
 26421                                  L_code_ptr_is_integer:
 26422 00013E93 C8000000                        enter 0, 0
 26423 00013E97 48837D1801                      cmp COUNT, 1
 26424 00013E9C 0F85D50B0000                    jne L_error_arg_count_1
 26425 00013EA2 488B4520                        mov rax, PARAM(0)
 26426 00013EA6 803811                          cmp byte [rax], T_integer
 26427 00013EA9 750C                            jne .L_false
 26428 00013EAB 48B8-                           mov rax, sob_boolean_true
 26428 00013EAD [0300000000000000] 
 26429 00013EB5 EB0A                            jmp .L_exit
 26430                                  .L_false:
 26431 00013EB7 48B8-                           mov rax, sob_boolean_false
 26431 00013EB9 [0200000000000000] 
 26432                                  .L_exit:
 26433 00013EC1 C9                              leave
 26434 00013EC2 C21800                          ret AND_KILL_FRAME(1)
 26435                                  
 26436                                  L_code_ptr_raw_bin_add_rr:
 26437 00013EC5 C8000000                        enter 0, 0
 26438 00013EC9 48837D1802                      cmp COUNT, 2
 26439 00013ECE 0F85D80B0000                    jne L_error_arg_count_2
 26440 00013ED4 488B5D20                        mov rbx, PARAM(0)
 26441                                          assert_real(rbx)
    53 00013ED8 803B13              <1>  cmp byte [%1], %2
    54 00013EDB 0F856A0C0000        <1>  jne L_error_incorrect_type
 26442 00013EE1 488B4D28                        mov rcx, PARAM(1)
 26443                                          assert_real(rcx)
    53 00013EE5 803913              <1>  cmp byte [%1], %2
    54 00013EE8 0F855D0C0000        <1>  jne L_error_incorrect_type
 26444 00013EEE F20F104301                      movsd xmm0, qword [rbx + 1]
 26445 00013EF3 F20F104901                      movsd xmm1, qword [rcx + 1]
 26446 00013EF8 F20F58C1                        addsd xmm0, xmm1
 26447 00013EFC E8AD0A0000                      call make_real
 26448 00013F01 C9                              leave
 26449 00013F02 C22000                          ret AND_KILL_FRAME(2)
 26450                                  
 26451                                  L_code_ptr_raw_bin_sub_rr:
 26452 00013F05 C8000000                        enter 0, 0
 26453 00013F09 48837D1802                      cmp COUNT, 2
 26454 00013F0E 0F85980B0000                    jne L_error_arg_count_2
 26455 00013F14 488B5D20                        mov rbx, PARAM(0)
 26456                                          assert_real(rbx)
    53 00013F18 803B13              <1>  cmp byte [%1], %2
    54 00013F1B 0F852A0C0000        <1>  jne L_error_incorrect_type
 26457 00013F21 488B4D28                        mov rcx, PARAM(1)
 26458                                          assert_real(rcx)
    53 00013F25 803913              <1>  cmp byte [%1], %2
    54 00013F28 0F851D0C0000        <1>  jne L_error_incorrect_type
 26459 00013F2E F20F104301                      movsd xmm0, qword [rbx + 1]
 26460 00013F33 F20F104901                      movsd xmm1, qword [rcx + 1]
 26461 00013F38 F20F5CC1                        subsd xmm0, xmm1
 26462 00013F3C E86D0A0000                      call make_real
 26463 00013F41 C9                              leave
 26464 00013F42 C22000                          ret AND_KILL_FRAME(2)
 26465                                  
 26466                                  L_code_ptr_raw_bin_mul_rr:
 26467 00013F45 C8000000                        enter 0, 0
 26468 00013F49 48837D1802                      cmp COUNT, 2
 26469 00013F4E 0F85580B0000                    jne L_error_arg_count_2
 26470 00013F54 488B5D20                        mov rbx, PARAM(0)
 26471                                          assert_real(rbx)
    53 00013F58 803B13              <1>  cmp byte [%1], %2
    54 00013F5B 0F85EA0B0000        <1>  jne L_error_incorrect_type
 26472 00013F61 488B4D28                        mov rcx, PARAM(1)
 26473                                          assert_real(rcx)
    53 00013F65 803913              <1>  cmp byte [%1], %2
    54 00013F68 0F85DD0B0000        <1>  jne L_error_incorrect_type
 26474 00013F6E F20F104301                      movsd xmm0, qword [rbx + 1]
 26475 00013F73 F20F104901                      movsd xmm1, qword [rcx + 1]
 26476 00013F78 F20F59C1                        mulsd xmm0, xmm1
 26477 00013F7C E82D0A0000                      call make_real
 26478 00013F81 C9                              leave
 26479 00013F82 C22000                          ret AND_KILL_FRAME(2)
 26480                                  
 26481                                  L_code_ptr_raw_bin_div_rr:
 26482 00013F85 C8000000                        enter 0, 0
 26483 00013F89 48837D1802                      cmp COUNT, 2
 26484 00013F8E 0F85180B0000                    jne L_error_arg_count_2
 26485 00013F94 488B5D20                        mov rbx, PARAM(0)
 26486                                          assert_real(rbx)
    53 00013F98 803B13              <1>  cmp byte [%1], %2
    54 00013F9B 0F85AA0B0000        <1>  jne L_error_incorrect_type
 26487 00013FA1 488B4D28                        mov rcx, PARAM(1)
 26488                                          assert_real(rcx)
    53 00013FA5 803913              <1>  cmp byte [%1], %2
    54 00013FA8 0F859D0B0000        <1>  jne L_error_incorrect_type
 26489 00013FAE F20F104301                      movsd xmm0, qword [rbx + 1]
 26490 00013FB3 F20F104901                      movsd xmm1, qword [rcx + 1]
 26491 00013FB8 660FEFD2                        pxor xmm2, xmm2
 26492 00013FBC 660F2ECA                        ucomisd xmm1, xmm2
 26493 00013FC0 0F84B60B0000                    je L_error_division_by_zero
 26494 00013FC6 F20F5EC1                        divsd xmm0, xmm1
 26495 00013FCA E8DF090000                      call make_real
 26496 00013FCF C9                              leave
 26497 00013FD0 C22000                          ret AND_KILL_FRAME(2)
 26498                                  
 26499                                  L_code_ptr_raw_bin_add_zz:
 26500 00013FD3 C8000000                	enter 0, 0
 26501 00013FD7 48837D1802              	cmp COUNT, 2
 26502 00013FDC 0F85CA0A0000            	jne L_error_arg_count_2
 26503 00013FE2 4C8B4520                	mov r8, PARAM(0)
 26504                                  	assert_integer(r8)
    53 00013FE6 41803811            <1>  cmp byte [%1], %2
    54 00013FEA 0F855B0B0000        <1>  jne L_error_incorrect_type
 26505 00013FF0 4C8B4D28                	mov r9, PARAM(1)
 26506                                  	assert_integer(r9)
    53 00013FF4 41803911            <1>  cmp byte [%1], %2
    54 00013FF8 0F854D0B0000        <1>  jne L_error_incorrect_type
 26507 00013FFE 498B7801                	mov rdi, qword [r8 + 1]
 26508 00014002 49037901                	add rdi, qword [r9 + 1]
 26509 00014006 E8BB090000              	call make_integer
 26510 0001400B C9                      	leave
 26511 0001400C C22000                  	ret AND_KILL_FRAME(2)
 26512                                  
 26513                                  L_code_ptr_raw_bin_add_qq:
 26514 0001400F C8000000                        enter 0, 0
 26515 00014013 48837D1802                      cmp COUNT, 2
 26516 00014018 0F858E0A0000                    jne L_error_arg_count_2
 26517 0001401E 4C8B4520                        mov r8, PARAM(0)
 26518                                          assert_fraction(r8)
    53 00014022 41803812            <1>  cmp byte [%1], %2
    54 00014026 0F851F0B0000        <1>  jne L_error_incorrect_type
 26519 0001402C 4C8B4D28                        mov r9, PARAM(1)
 26520                                          assert_fraction(r9)
    53 00014030 41803912            <1>  cmp byte [%1], %2
    54 00014034 0F85110B0000        <1>  jne L_error_incorrect_type
 26521 0001403A 498B4001                        mov rax, qword [r8 + 1] ; num1
 26522 0001403E 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 26523 00014042 4899                            cqo
 26524 00014044 48F7EB                          imul rbx
 26525 00014047 4889C6                          mov rsi, rax
 26526 0001404A 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 26527 0001404E 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 26528 00014052 4899                            cqo
 26529 00014054 48F7EB                          imul rbx
 26530 00014057 4801C6                          add rsi, rax
 26531 0001405A 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 26532 0001405E 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 26533 00014062 4899                            cqo
 26534 00014064 48F7EB                          imul rbx
 26535 00014067 4889C7                          mov rdi, rax
 26536 0001406A E8DE010000                      call normalize_fraction
 26537 0001406F C9                              leave
 26538 00014070 C22000                          ret AND_KILL_FRAME(2)
 26539                                  
 26540                                  L_code_ptr_raw_bin_sub_zz:
 26541 00014073 C8000000                	enter 0, 0
 26542 00014077 48837D1802              	cmp COUNT, 2
 26543 0001407C 0F852A0A0000            	jne L_error_arg_count_2
 26544 00014082 4C8B4520                	mov r8, PARAM(0)
 26545                                  	assert_integer(r8)
    53 00014086 41803811            <1>  cmp byte [%1], %2
    54 0001408A 0F85BB0A0000        <1>  jne L_error_incorrect_type
 26546 00014090 4C8B4D28                	mov r9, PARAM(1)
 26547                                  	assert_integer(r9)
    53 00014094 41803911            <1>  cmp byte [%1], %2
    54 00014098 0F85AD0A0000        <1>  jne L_error_incorrect_type
 26548 0001409E 498B7801                	mov rdi, qword [r8 + 1]
 26549 000140A2 492B7901                	sub rdi, qword [r9 + 1]
 26550 000140A6 E81B090000              	call make_integer
 26551 000140AB C9                      	leave
 26552 000140AC C22000                  	ret AND_KILL_FRAME(2)
 26553                                  
 26554                                  L_code_ptr_raw_bin_sub_qq:
 26555 000140AF C8000000                        enter 0, 0
 26556 000140B3 48837D1802                      cmp COUNT, 2
 26557 000140B8 0F85EE090000                    jne L_error_arg_count_2
 26558 000140BE 4C8B4520                        mov r8, PARAM(0)
 26559                                          assert_fraction(r8)
    53 000140C2 41803812            <1>  cmp byte [%1], %2
    54 000140C6 0F857F0A0000        <1>  jne L_error_incorrect_type
 26560 000140CC 4C8B4D28                        mov r9, PARAM(1)
 26561                                          assert_fraction(r9)
    53 000140D0 41803912            <1>  cmp byte [%1], %2
    54 000140D4 0F85710A0000        <1>  jne L_error_incorrect_type
 26562 000140DA 498B4001                        mov rax, qword [r8 + 1] ; num1
 26563 000140DE 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 26564 000140E2 4899                            cqo
 26565 000140E4 48F7EB                          imul rbx
 26566 000140E7 4889C6                          mov rsi, rax
 26567 000140EA 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 26568 000140EE 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 26569 000140F2 4899                            cqo
 26570 000140F4 48F7EB                          imul rbx
 26571 000140F7 4829C6                          sub rsi, rax
 26572 000140FA 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 26573 000140FE 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 26574 00014102 4899                            cqo
 26575 00014104 48F7EB                          imul rbx
 26576 00014107 4889C7                          mov rdi, rax
 26577 0001410A E83E010000                      call normalize_fraction
 26578 0001410F C9                              leave
 26579 00014110 C22000                          ret AND_KILL_FRAME(2)
 26580                                  
 26581                                  L_code_ptr_raw_bin_mul_zz:
 26582 00014113 C8000000                	enter 0, 0
 26583 00014117 48837D1802              	cmp COUNT, 2
 26584 0001411C 0F858A090000            	jne L_error_arg_count_2
 26585 00014122 4C8B4520                	mov r8, PARAM(0)
 26586                                  	assert_integer(r8)
    53 00014126 41803811            <1>  cmp byte [%1], %2
    54 0001412A 0F851B0A0000        <1>  jne L_error_incorrect_type
 26587 00014130 4C8B4D28                	mov r9, PARAM(1)
 26588                                  	assert_integer(r9)
    53 00014134 41803911            <1>  cmp byte [%1], %2
    54 00014138 0F850D0A0000        <1>  jne L_error_incorrect_type
 26589 0001413E 4899                    	cqo
 26590 00014140 498B4001                	mov rax, qword [r8 + 1]
 26591 00014144 49F76101                	mul qword [r9 + 1]
 26592 00014148 4889C7                  	mov rdi, rax
 26593 0001414B E876080000              	call make_integer
 26594 00014150 C9                      	leave
 26595 00014151 C22000                  	ret AND_KILL_FRAME(2)
 26596                                  
 26597                                  L_code_ptr_raw_bin_mul_qq:
 26598 00014154 C8000000                        enter 0, 0
 26599 00014158 48837D1802                      cmp COUNT, 2
 26600 0001415D 0F8549090000                    jne L_error_arg_count_2
 26601 00014163 4C8B4520                        mov r8, PARAM(0)
 26602                                          assert_fraction(r8)
    53 00014167 41803812            <1>  cmp byte [%1], %2
    54 0001416B 0F85DA090000        <1>  jne L_error_incorrect_type
 26603 00014171 4C8B4D28                        mov r9, PARAM(1)
 26604                                          assert_fraction(r9)
    53 00014175 41803912            <1>  cmp byte [%1], %2
    54 00014179 0F85CC090000        <1>  jne L_error_incorrect_type
 26605 0001417F 498B4001                        mov rax, qword [r8 + 1] ; num1
 26606 00014183 498B5901                        mov rbx, qword [r9 + 1] ; num2
 26607 00014187 4899                            cqo
 26608 00014189 48F7EB                          imul rbx
 26609 0001418C 4889C6                          mov rsi, rax
 26610 0001418F 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 26611 00014193 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 26612 00014197 4899                            cqo
 26613 00014199 48F7EB                          imul rbx
 26614 0001419C 4889C7                          mov rdi, rax
 26615 0001419F E8A9000000                      call normalize_fraction
 26616 000141A4 C9                              leave
 26617 000141A5 C22000                          ret AND_KILL_FRAME(2)
 26618                                          
 26619                                  L_code_ptr_raw_bin_div_zz:
 26620 000141A8 C8000000                	enter 0, 0
 26621 000141AC 48837D1802              	cmp COUNT, 2
 26622 000141B1 0F85F5080000            	jne L_error_arg_count_2
 26623 000141B7 4C8B4520                	mov r8, PARAM(0)
 26624                                  	assert_integer(r8)
    53 000141BB 41803811            <1>  cmp byte [%1], %2
    54 000141BF 0F8586090000        <1>  jne L_error_incorrect_type
 26625 000141C5 4C8B4D28                	mov r9, PARAM(1)
 26626                                  	assert_integer(r9)
    53 000141C9 41803911            <1>  cmp byte [%1], %2
    54 000141CD 0F8578090000        <1>  jne L_error_incorrect_type
 26627 000141D3 498B7901                	mov rdi, qword [r9 + 1]
 26628 000141D7 4883FF00                	cmp rdi, 0
 26629 000141DB 0F849B090000            	je L_error_division_by_zero
 26630 000141E1 498B7001                	mov rsi, qword [r8 + 1]
 26631 000141E5 E863000000              	call normalize_fraction
 26632 000141EA C9                      	leave
 26633 000141EB C22000                  	ret AND_KILL_FRAME(2)
 26634                                  
 26635                                  L_code_ptr_raw_bin_div_qq:
 26636 000141EE C8000000                        enter 0, 0
 26637 000141F2 48837D1802                      cmp COUNT, 2
 26638 000141F7 0F85AF080000                    jne L_error_arg_count_2
 26639 000141FD 4C8B4520                        mov r8, PARAM(0)
 26640                                          assert_fraction(r8)
    53 00014201 41803812            <1>  cmp byte [%1], %2
    54 00014205 0F8540090000        <1>  jne L_error_incorrect_type
 26641 0001420B 4C8B4D28                        mov r9, PARAM(1)
 26642                                          assert_fraction(r9)
    53 0001420F 41803912            <1>  cmp byte [%1], %2
    54 00014213 0F8532090000        <1>  jne L_error_incorrect_type
 26643 00014219 4983790100                      cmp qword [r9 + 1], 0
 26644 0001421E 0F8458090000                    je L_error_division_by_zero
 26645 00014224 498B4001                        mov rax, qword [r8 + 1] ; num1
 26646 00014228 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 26647 0001422C 4899                            cqo
 26648 0001422E 48F7EB                          imul rbx
 26649 00014231 4889C6                          mov rsi, rax
 26650 00014234 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 26651 00014238 498B5901                        mov rbx, qword [r9 + 1] ; num2
 26652 0001423C 4899                            cqo
 26653 0001423E 48F7EB                          imul rbx
 26654 00014241 4889C7                          mov rdi, rax
 26655 00014244 E804000000                      call normalize_fraction
 26656 00014249 C9                              leave
 26657 0001424A C22000                          ret AND_KILL_FRAME(2)
 26658                                          
 26659                                  normalize_fraction:
 26660 0001424D 56                              push rsi
 26661 0001424E 57                              push rdi
 26662 0001424F E859000000                      call gcd
 26663 00014254 4889C3                          mov rbx, rax
 26664 00014257 58                              pop rax
 26665 00014258 4899                            cqo
 26666 0001425A 48F7FB                          idiv rbx
 26667 0001425D 4989C0                          mov r8, rax
 26668 00014260 58                              pop rax
 26669 00014261 4899                            cqo
 26670 00014263 48F7FB                          idiv rbx
 26671 00014266 4989C1                          mov r9, rax
 26672 00014269 4983F900                        cmp r9, 0
 26673 0001426D 741C                            je .L_zero
 26674 0001426F 4983F801                        cmp r8, 1
 26675 00014273 7421                            je .L_int
 26676 00014275 BF11000000                      mov rdi, (1 + 8 + 8)
 26677 0001427A E846EBFFFF                      call malloc
 26678 0001427F C60012                          mov byte [rax], T_fraction
 26679 00014282 4C894801                        mov qword [rax + 1], r9
 26680 00014286 4C894009                        mov qword [rax + 1 + 8], r8
 26681 0001428A C3                              ret
 26682                                  .L_zero:
 26683 0001428B BF00000000                      mov rdi, 0
 26684 00014290 E831070000                      call make_integer
 26685 00014295 C3                              ret
 26686                                  .L_int:
 26687 00014296 4C89CF                          mov rdi, r9
 26688 00014299 E828070000                      call make_integer
 26689 0001429E C3                              ret
 26690                                  
 26691                                  iabs:
 26692 0001429F 4889F8                          mov rax, rdi
 26693 000142A2 4883F800                        cmp rax, 0
 26694 000142A6 7C01                            jl .Lneg
 26695 000142A8 C3                              ret
 26696                                  .Lneg:
 26697 000142A9 48F7D8                          neg rax
 26698 000142AC C3                              ret
 26699                                  
 26700                                  gcd:
 26701 000142AD E8EDFFFFFF                      call iabs
 26702 000142B2 4889C3                          mov rbx, rax
 26703 000142B5 4889F7                          mov rdi, rsi
 26704 000142B8 E8E2FFFFFF                      call iabs
 26705 000142BD 4883F800                        cmp rax, 0
 26706 000142C1 7502                            jne .L0
 26707 000142C3 4893                            xchg rax, rbx
 26708                                  .L0:
 26709 000142C5 4883FB00                        cmp rbx, 0
 26710 000142C9 740C                            je .L1
 26711 000142CB 4899                            cqo
 26712 000142CD 48F7F3                          div rbx
 26713 000142D0 4889D0                          mov rax, rdx
 26714 000142D3 4893                            xchg rax, rbx
 26715 000142D5 EBEE                            jmp .L0
 26716                                  .L1:
 26717 000142D7 C3                              ret
 26718                                  
 26719                                  L_code_ptr_error:
 26720 000142D8 C8000000                        enter 0, 0
 26721 000142DC 48837D1802                      cmp COUNT, 2
 26722 000142E1 0F85C5070000                    jne L_error_arg_count_2
 26723 000142E7 488B7520                        mov rsi, PARAM(0)
 26724                                          assert_interned_symbol(rsi)
    53 000142EB 803E41              <1>  cmp byte [%1], %2
    54 000142EE 0F8557080000        <1>  jne L_error_incorrect_type
 26725 000142F4 488B7528                        mov rsi, PARAM(1)
 26726                                          assert_string(rsi)
    53 000142F8 803E03              <1>  cmp byte [%1], %2
    54 000142FB 0F854A080000        <1>  jne L_error_incorrect_type
 26727 00014301 48BF-                           mov rdi, fmt_scheme_error_part_1
 26727 00014303 [FB1B000000000000] 
 26728 0001430B B800000000                      mov rax, 0
 26729                                          ENTER
    44 00014310 C8000000            <1>  enter 0, 0
    45 00014314 4883E4F0            <1>  and rsp, ~15
 26730 00014318 E8(00000000)                    call printf
 26731                                          LEAVE
    49 0001431D C9                  <1>  leave
 26732 0001431E 488B7D20                        mov rdi, PARAM(0)
 26733 00014322 E81FEDFFFF                      call print_sexpr
 26734 00014327 48BF-                           mov rdi, fmt_scheme_error_part_2
 26734 00014329 [0F1C000000000000] 
 26735 00014331 B800000000                      mov rax, 0
 26736                                          ENTER
    44 00014336 C8000000            <1>  enter 0, 0
    45 0001433A 4883E4F0            <1>  and rsp, ~15
 26737 0001433E E8(00000000)                    call printf
 26738                                          LEAVE
    49 00014343 C9                  <1>  leave
 26739 00014344 488B4528                        mov rax, PARAM(1)       ; sob_string
 26740 00014348 BE01000000                      mov rsi, 1              ; size = 1 byte
 26741 0001434D 488B5001                        mov rdx, qword [rax + 1] ; length
 26742 00014351 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 26743 00014355 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 26744                                  	ENTER
    44 0001435D C8000000            <1>  enter 0, 0
    45 00014361 4883E4F0            <1>  and rsp, ~15
 26745 00014365 E8(00000000)                    call fwrite
 26746                                  	LEAVE
    49 0001436A C9                  <1>  leave
 26747 0001436B 48BF-                           mov rdi, fmt_scheme_error_part_3
 26747 0001436D [511C000000000000] 
 26748 00014375 B800000000                      mov rax, 0
 26749                                          ENTER
    44 0001437A C8000000            <1>  enter 0, 0
    45 0001437E 4883E4F0            <1>  and rsp, ~15
 26750 00014382 E8(00000000)                    call printf
 26751                                          LEAVE
    49 00014387 C9                  <1>  leave
 26752 00014388 48C7C0F7FFFFFF                  mov rax, -9
 26753 0001438F E8(00000000)                    call exit
 26754                                  
 26755                                  L_code_ptr_raw_less_than_rr:
 26756 00014394 C8000000                        enter 0, 0
 26757 00014398 48837D1802                      cmp COUNT, 2
 26758 0001439D 0F8509070000                    jne L_error_arg_count_2
 26759 000143A3 488B7520                        mov rsi, PARAM(0)
 26760                                          assert_real(rsi)
    53 000143A7 803E13              <1>  cmp byte [%1], %2
    54 000143AA 0F859B070000        <1>  jne L_error_incorrect_type
 26761 000143B0 488B7D28                        mov rdi, PARAM(1)
 26762                                          assert_real(rdi)
    53 000143B4 803F13              <1>  cmp byte [%1], %2
    54 000143B7 0F858E070000        <1>  jne L_error_incorrect_type
 26763 000143BD F20F104601                      movsd xmm0, qword [rsi + 1]
 26764 000143C2 F20F104F01                      movsd xmm1, qword [rdi + 1]
 26765 000143C7 660F2FC1                        comisd xmm0, xmm1
 26766 000143CB 730C                            jae .L_false
 26767 000143CD 48B8-                           mov rax, sob_boolean_true
 26767 000143CF [0300000000000000] 
 26768 000143D7 EB0A                            jmp .L_exit
 26769                                  .L_false:
 26770 000143D9 48B8-                           mov rax, sob_boolean_false
 26770 000143DB [0200000000000000] 
 26771                                  .L_exit:
 26772 000143E3 C9                              leave
 26773 000143E4 C22000                          ret AND_KILL_FRAME(2)
 26774                                          
 26775                                  L_code_ptr_raw_less_than_zz:
 26776 000143E7 C8000000                	enter 0, 0
 26777 000143EB 48837D1802              	cmp COUNT, 2
 26778 000143F0 0F85B6060000            	jne L_error_arg_count_2
 26779 000143F6 4C8B4520                	mov r8, PARAM(0)
 26780                                  	assert_integer(r8)
    53 000143FA 41803811            <1>  cmp byte [%1], %2
    54 000143FE 0F8547070000        <1>  jne L_error_incorrect_type
 26781 00014404 4C8B4D28                	mov r9, PARAM(1)
 26782                                  	assert_integer(r9)
    53 00014408 41803911            <1>  cmp byte [%1], %2
    54 0001440C 0F8539070000        <1>  jne L_error_incorrect_type
 26783 00014412 498B7801                	mov rdi, qword [r8 + 1]
 26784 00014416 493B7901                	cmp rdi, qword [r9 + 1]
 26785 0001441A 7D0C                    	jge .L_false
 26786 0001441C 48B8-                   	mov rax, sob_boolean_true
 26786 0001441E [0300000000000000] 
 26787 00014426 EB0A                    	jmp .L_exit
 26788                                  .L_false:
 26789 00014428 48B8-                   	mov rax, sob_boolean_false
 26789 0001442A [0200000000000000] 
 26790                                  .L_exit:
 26791 00014432 C9                      	leave
 26792 00014433 C22000                  	ret AND_KILL_FRAME(2)
 26793                                  
 26794                                  L_code_ptr_raw_less_than_qq:
 26795 00014436 C8000000                        enter 0, 0
 26796 0001443A 48837D1802                      cmp COUNT, 2
 26797 0001443F 0F8567060000                    jne L_error_arg_count_2
 26798 00014445 488B7520                        mov rsi, PARAM(0)
 26799                                          assert_fraction(rsi)
    53 00014449 803E12              <1>  cmp byte [%1], %2
    54 0001444C 0F85F9060000        <1>  jne L_error_incorrect_type
 26800 00014452 488B7D28                        mov rdi, PARAM(1)
 26801                                          assert_fraction(rdi)
    53 00014456 803F12              <1>  cmp byte [%1], %2
    54 00014459 0F85EC060000        <1>  jne L_error_incorrect_type
 26802 0001445F 488B4601                        mov rax, qword [rsi + 1] ; num1
 26803 00014463 4899                            cqo
 26804 00014465 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 26805 00014469 4889C1                          mov rcx, rax
 26806 0001446C 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 26807 00014470 4899                            cqo
 26808 00014472 48F76F01                        imul qword [rdi + 1]          ; num2
 26809 00014476 4829C1                          sub rcx, rax
 26810 00014479 7D0C                            jge .L_false
 26811 0001447B 48B8-                           mov rax, sob_boolean_true
 26811 0001447D [0300000000000000] 
 26812 00014485 EB0A                            jmp .L_exit
 26813                                  .L_false:
 26814 00014487 48B8-                           mov rax, sob_boolean_false
 26814 00014489 [0200000000000000] 
 26815                                  .L_exit:
 26816 00014491 C9                              leave
 26817 00014492 C22000                          ret AND_KILL_FRAME(2)
 26818                                  
 26819                                  L_code_ptr_raw_equal_rr:
 26820 00014495 C8000000                        enter 0, 0
 26821 00014499 48837D1802                      cmp COUNT, 2
 26822 0001449E 0F8508060000                    jne L_error_arg_count_2
 26823 000144A4 488B7520                        mov rsi, PARAM(0)
 26824                                          assert_real(rsi)
    53 000144A8 803E13              <1>  cmp byte [%1], %2
    54 000144AB 0F859A060000        <1>  jne L_error_incorrect_type
 26825 000144B1 488B7D28                        mov rdi, PARAM(1)
 26826                                          assert_real(rdi)
    53 000144B5 803F13              <1>  cmp byte [%1], %2
    54 000144B8 0F858D060000        <1>  jne L_error_incorrect_type
 26827 000144BE F20F104601                      movsd xmm0, qword [rsi + 1]
 26828 000144C3 F20F104F01                      movsd xmm1, qword [rdi + 1]
 26829 000144C8 660F2FC1                        comisd xmm0, xmm1
 26830 000144CC 750C                            jne .L_false
 26831 000144CE 48B8-                           mov rax, sob_boolean_true
 26831 000144D0 [0300000000000000] 
 26832 000144D8 EB0A                            jmp .L_exit
 26833                                  .L_false:
 26834 000144DA 48B8-                           mov rax, sob_boolean_false
 26834 000144DC [0200000000000000] 
 26835                                  .L_exit:
 26836 000144E4 C9                              leave
 26837 000144E5 C22000                          ret AND_KILL_FRAME(2)
 26838                                          
 26839                                  L_code_ptr_raw_equal_zz:
 26840 000144E8 C8000000                	enter 0, 0
 26841 000144EC 48837D1802              	cmp COUNT, 2
 26842 000144F1 0F85B5050000            	jne L_error_arg_count_2
 26843 000144F7 4C8B4520                	mov r8, PARAM(0)
 26844                                  	assert_integer(r8)
    53 000144FB 41803811            <1>  cmp byte [%1], %2
    54 000144FF 0F8546060000        <1>  jne L_error_incorrect_type
 26845 00014505 4C8B4D28                	mov r9, PARAM(1)
 26846                                  	assert_integer(r9)
    53 00014509 41803911            <1>  cmp byte [%1], %2
    54 0001450D 0F8538060000        <1>  jne L_error_incorrect_type
 26847 00014513 498B7801                	mov rdi, qword [r8 + 1]
 26848 00014517 493B7901                	cmp rdi, qword [r9 + 1]
 26849 0001451B 750C                    	jne .L_false
 26850 0001451D 48B8-                   	mov rax, sob_boolean_true
 26850 0001451F [0300000000000000] 
 26851 00014527 EB0A                    	jmp .L_exit
 26852                                  .L_false:
 26853 00014529 48B8-                   	mov rax, sob_boolean_false
 26853 0001452B [0200000000000000] 
 26854                                  .L_exit:
 26855 00014533 C9                      	leave
 26856 00014534 C22000                  	ret AND_KILL_FRAME(2)
 26857                                  
 26858                                  L_code_ptr_raw_equal_qq:
 26859 00014537 C8000000                        enter 0, 0
 26860 0001453B 48837D1802                      cmp COUNT, 2
 26861 00014540 0F8566050000                    jne L_error_arg_count_2
 26862 00014546 488B7520                        mov rsi, PARAM(0)
 26863                                          assert_fraction(rsi)
    53 0001454A 803E12              <1>  cmp byte [%1], %2
    54 0001454D 0F85F8050000        <1>  jne L_error_incorrect_type
 26864 00014553 488B7D28                        mov rdi, PARAM(1)
 26865                                          assert_fraction(rdi)
    53 00014557 803F12              <1>  cmp byte [%1], %2
    54 0001455A 0F85EB050000        <1>  jne L_error_incorrect_type
 26866 00014560 488B4601                        mov rax, qword [rsi + 1] ; num1
 26867 00014564 4899                            cqo
 26868 00014566 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 26869 0001456A 4889C1                          mov rcx, rax
 26870 0001456D 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 26871 00014571 4899                            cqo
 26872 00014573 48F76F01                        imul qword [rdi + 1]          ; num2
 26873 00014577 4829C1                          sub rcx, rax
 26874 0001457A 750C                            jne .L_false
 26875 0001457C 48B8-                           mov rax, sob_boolean_true
 26875 0001457E [0300000000000000] 
 26876 00014586 EB0A                            jmp .L_exit
 26877                                  .L_false:
 26878 00014588 48B8-                           mov rax, sob_boolean_false
 26878 0001458A [0200000000000000] 
 26879                                  .L_exit:
 26880 00014592 C9                              leave
 26881 00014593 C22000                          ret AND_KILL_FRAME(2)
 26882                                  
 26883                                  L_code_ptr_quotient:
 26884 00014596 C8000000                        enter 0, 0
 26885 0001459A 48837D1802                      cmp COUNT, 2
 26886 0001459F 0F8507050000                    jne L_error_arg_count_2
 26887 000145A5 488B7520                        mov rsi, PARAM(0)
 26888                                          assert_integer(rsi)
    53 000145A9 803E11              <1>  cmp byte [%1], %2
    54 000145AC 0F8599050000        <1>  jne L_error_incorrect_type
 26889 000145B2 488B7D28                        mov rdi, PARAM(1)
 26890                                          assert_integer(rdi)
    53 000145B6 803F11              <1>  cmp byte [%1], %2
    54 000145B9 0F858C050000        <1>  jne L_error_incorrect_type
 26891 000145BF 488B4601                        mov rax, qword [rsi + 1]
 26892 000145C3 488B5F01                        mov rbx, qword [rdi + 1]
 26893 000145C7 4883FB00                        cmp rbx, 0
 26894 000145CB 0F84AB050000                    je L_error_division_by_zero
 26895 000145D1 4899                            cqo
 26896 000145D3 48F7FB                          idiv rbx
 26897 000145D6 4889C7                          mov rdi, rax
 26898 000145D9 E8E8030000                      call make_integer
 26899 000145DE C9                              leave
 26900 000145DF C22000                          ret AND_KILL_FRAME(2)
 26901                                          
 26902                                  L_code_ptr_remainder:
 26903 000145E2 C8000000                        enter 0, 0
 26904 000145E6 48837D1802                      cmp COUNT, 2
 26905 000145EB 0F85BB040000                    jne L_error_arg_count_2
 26906 000145F1 488B7520                        mov rsi, PARAM(0)
 26907                                          assert_integer(rsi)
    53 000145F5 803E11              <1>  cmp byte [%1], %2
    54 000145F8 0F854D050000        <1>  jne L_error_incorrect_type
 26908 000145FE 488B7D28                        mov rdi, PARAM(1)
 26909                                          assert_integer(rdi)
    53 00014602 803F11              <1>  cmp byte [%1], %2
    54 00014605 0F8540050000        <1>  jne L_error_incorrect_type
 26910 0001460B 488B4601                        mov rax, qword [rsi + 1]
 26911 0001460F 488B5F01                        mov rbx, qword [rdi + 1]
 26912 00014613 4883FB00                        cmp rbx, 0
 26913 00014617 0F845F050000                    je L_error_division_by_zero
 26914 0001461D 4899                            cqo
 26915 0001461F 48F7FB                          idiv rbx
 26916 00014622 4889D7                          mov rdi, rdx
 26917 00014625 E89C030000                      call make_integer
 26918 0001462A C9                              leave
 26919 0001462B C22000                          ret AND_KILL_FRAME(2)
 26920                                  
 26921                                  L_code_ptr_set_car:
 26922 0001462E C8000000                        enter 0, 0
 26923 00014632 48837D1802                      cmp COUNT, 2
 26924 00014637 0F856F040000                    jne L_error_arg_count_2
 26925 0001463D 488B4520                        mov rax, PARAM(0)
 26926                                          assert_pair(rax)
    53 00014641 803821              <1>  cmp byte [%1], %2
    54 00014644 0F8501050000        <1>  jne L_error_incorrect_type
 26927 0001464A 488B5D28                        mov rbx, PARAM(1)
 26928 0001464E 48895801                        mov SOB_PAIR_CAR(rax), rbx
 26929 00014652 48B8-                           mov rax, sob_void
 26929 00014654 [0000000000000000] 
 26930 0001465C C9                              leave
 26931 0001465D C22000                          ret AND_KILL_FRAME(2)
 26932                                  
 26933                                  L_code_ptr_set_cdr:
 26934 00014660 C8000000                        enter 0, 0
 26935 00014664 48837D1802                      cmp COUNT, 2
 26936 00014669 0F853D040000                    jne L_error_arg_count_2
 26937 0001466F 488B4520                        mov rax, PARAM(0)
 26938                                          assert_pair(rax)
    53 00014673 803821              <1>  cmp byte [%1], %2
    54 00014676 0F85CF040000        <1>  jne L_error_incorrect_type
 26939 0001467C 488B5D28                        mov rbx, PARAM(1)
 26940 00014680 48895809                        mov SOB_PAIR_CDR(rax), rbx
 26941 00014684 48B8-                           mov rax, sob_void
 26941 00014686 [0000000000000000] 
 26942 0001468E C9                              leave
 26943 0001468F C22000                          ret AND_KILL_FRAME(2)
 26944                                  
 26945                                  L_code_ptr_string_ref:
 26946 00014692 C8000000                        enter 0, 0
 26947 00014696 48837D1802                      cmp COUNT, 2
 26948 0001469B 0F850B040000                    jne L_error_arg_count_2
 26949 000146A1 488B7D20                        mov rdi, PARAM(0)
 26950                                          assert_string(rdi)
    53 000146A5 803F03              <1>  cmp byte [%1], %2
    54 000146A8 0F859D040000        <1>  jne L_error_incorrect_type
 26951 000146AE 488B7528                        mov rsi, PARAM(1)
 26952                                          assert_integer(rsi)
    53 000146B2 803E11              <1>  cmp byte [%1], %2
    54 000146B5 0F8590040000        <1>  jne L_error_incorrect_type
 26953 000146BB 488B5701                        mov rdx, qword [rdi + 1]
 26954 000146BF 488B4E01                        mov rcx, qword [rsi + 1]
 26955 000146C3 4839D1                          cmp rcx, rdx
 26956 000146C6 0F8D14030000                    jge L_error_integer_range
 26957 000146CC 4883F900                        cmp rcx, 0
 26958 000146D0 0F8C0A030000                    jl L_error_integer_range
 26959 000146D6 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 26960 000146DA BF02000000                      mov rdi, 2
 26961 000146DF E8E1E6FFFF                      call malloc
 26962 000146E4 C60002                          mov byte [rax], T_char
 26963 000146E7 885801                          mov byte [rax + 1], bl
 26964 000146EA C9                              leave
 26965 000146EB C22000                          ret AND_KILL_FRAME(2)
 26966                                  
 26967                                  L_code_ptr_vector_ref:
 26968 000146EE C8000000                        enter 0, 0
 26969 000146F2 48837D1802                      cmp COUNT, 2
 26970 000146F7 0F85AF030000                    jne L_error_arg_count_2
 26971 000146FD 488B7D20                        mov rdi, PARAM(0)
 26972                                          assert_vector(rdi)
    53 00014701 803F22              <1>  cmp byte [%1], %2
    54 00014704 0F8541040000        <1>  jne L_error_incorrect_type
 26973 0001470A 488B7528                        mov rsi, PARAM(1)
 26974                                          assert_integer(rsi)
    53 0001470E 803E11              <1>  cmp byte [%1], %2
    54 00014711 0F8534040000        <1>  jne L_error_incorrect_type
 26975 00014717 488B5701                        mov rdx, qword [rdi + 1]
 26976 0001471B 488B4E01                        mov rcx, qword [rsi + 1]
 26977 0001471F 4839D1                          cmp rcx, rdx
 26978 00014722 0F8DB8020000                    jge L_error_integer_range
 26979 00014728 4883F900                        cmp rcx, 0
 26980 0001472C 0F8CAE020000                    jl L_error_integer_range
 26981 00014732 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 26982 00014737 C9                              leave
 26983 00014738 C22000                          ret AND_KILL_FRAME(2)
 26984                                  
 26985                                  L_code_ptr_vector_set:
 26986 0001473B C8000000                        enter 0, 0
 26987 0001473F 48837D1803                      cmp COUNT, 3
 26988 00014744 0F85CC030000                    jne L_error_arg_count_3
 26989 0001474A 488B7D20                        mov rdi, PARAM(0)
 26990                                          assert_vector(rdi)
    53 0001474E 803F22              <1>  cmp byte [%1], %2
    54 00014751 0F85F4030000        <1>  jne L_error_incorrect_type
 26991 00014757 488B7528                        mov rsi, PARAM(1)
 26992                                          assert_integer(rsi)
    53 0001475B 803E11              <1>  cmp byte [%1], %2
    54 0001475E 0F85E7030000        <1>  jne L_error_incorrect_type
 26993 00014764 488B5701                        mov rdx, qword [rdi + 1]
 26994 00014768 488B4E01                        mov rcx, qword [rsi + 1]
 26995 0001476C 4839D1                          cmp rcx, rdx
 26996 0001476F 0F8D6B020000                    jge L_error_integer_range
 26997 00014775 4883F900                        cmp rcx, 0
 26998 00014779 0F8C61020000                    jl L_error_integer_range
 26999 0001477F 488B4530                        mov rax, PARAM(2)
 27000 00014783 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 27001 00014788 48B8-                           mov rax, sob_void
 27001 0001478A [0000000000000000] 
 27002 00014792 C9                              leave
 27003 00014793 C22800                          ret AND_KILL_FRAME(3)
 27004                                  
 27005                                  L_code_ptr_string_set:
 27006 00014796 C8000000                        enter 0, 0
 27007 0001479A 48837D1803                      cmp COUNT, 3
 27008 0001479F 0F8571030000                    jne L_error_arg_count_3
 27009 000147A5 488B7D20                        mov rdi, PARAM(0)
 27010                                          assert_string(rdi)
    53 000147A9 803F03              <1>  cmp byte [%1], %2
    54 000147AC 0F8599030000        <1>  jne L_error_incorrect_type
 27011 000147B2 488B7528                        mov rsi, PARAM(1)
 27012                                          assert_integer(rsi)
    53 000147B6 803E11              <1>  cmp byte [%1], %2
    54 000147B9 0F858C030000        <1>  jne L_error_incorrect_type
 27013 000147BF 488B5701                        mov rdx, qword [rdi + 1]
 27014 000147C3 488B4E01                        mov rcx, qword [rsi + 1]
 27015 000147C7 4839D1                          cmp rcx, rdx
 27016 000147CA 0F8D10020000                    jge L_error_integer_range
 27017 000147D0 4883F900                        cmp rcx, 0
 27018 000147D4 0F8C06020000                    jl L_error_integer_range
 27019 000147DA 488B4530                        mov rax, PARAM(2)
 27020                                          assert_char(rax)
    53 000147DE 803802              <1>  cmp byte [%1], %2
    54 000147E1 0F8564030000        <1>  jne L_error_incorrect_type
 27021 000147E7 8A4001                          mov al, byte [rax + 1]
 27022 000147EA 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 27023 000147EE 48B8-                           mov rax, sob_void
 27023 000147F0 [0000000000000000] 
 27024 000147F8 C9                              leave
 27025 000147F9 C22800                          ret AND_KILL_FRAME(3)
 27026                                  
 27027                                  L_code_ptr_make_vector:
 27028 000147FC C8000000                        enter 0, 0
 27029 00014800 48837D1802                      cmp COUNT, 2
 27030 00014805 0F85A1020000                    jne L_error_arg_count_2
 27031 0001480B 488B4D20                        mov rcx, PARAM(0)
 27032                                          assert_integer(rcx)
    53 0001480F 803911              <1>  cmp byte [%1], %2
    54 00014812 0F8533030000        <1>  jne L_error_incorrect_type
 27033 00014818 488B4901                        mov rcx, qword [rcx + 1]
 27034 0001481C 4883F900                        cmp rcx, 0
 27035 00014820 0F8CBA010000                    jl L_error_integer_range
 27036 00014826 488B5528                        mov rdx, PARAM(1)
 27037 0001482A 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 27038 00014832 E88EE5FFFF                      call malloc
 27039 00014837 C60022                          mov byte [rax], T_vector
 27040 0001483A 48894801                        mov qword [rax + 1], rcx
 27041 0001483E 41B800000000                    mov r8, 0
 27042                                  .L0:
 27043 00014844 4939C8                          cmp r8, rcx
 27044 00014847 740A                            je .L1
 27045 00014849 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 27046 0001484E 49FFC0                          inc r8
 27047 00014851 EBF1                            jmp .L0
 27048                                  .L1:
 27049 00014853 C9                              leave
 27050 00014854 C22000                          ret AND_KILL_FRAME(2)
 27051                                          
 27052                                  L_code_ptr_make_string:
 27053 00014857 C8000000                        enter 0, 0
 27054 0001485B 48837D1802                      cmp COUNT, 2
 27055 00014860 0F8546020000                    jne L_error_arg_count_2
 27056 00014866 488B4D20                        mov rcx, PARAM(0)
 27057                                          assert_integer(rcx)
    53 0001486A 803911              <1>  cmp byte [%1], %2
    54 0001486D 0F85D8020000        <1>  jne L_error_incorrect_type
 27058 00014873 488B4901                        mov rcx, qword [rcx + 1]
 27059 00014877 4883F900                        cmp rcx, 0
 27060 0001487B 0F8C5F010000                    jl L_error_integer_range
 27061 00014881 488B5528                        mov rdx, PARAM(1)
 27062                                          assert_char(rdx)
    53 00014885 803A02              <1>  cmp byte [%1], %2
    54 00014888 0F85BD020000        <1>  jne L_error_incorrect_type
 27063 0001488E 8A5201                          mov dl, byte [rdx + 1]
 27064 00014891 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 27065 00014895 E82BE5FFFF                      call malloc
 27066 0001489A C60003                          mov byte [rax], T_string
 27067 0001489D 48894801                        mov qword [rax + 1], rcx
 27068 000148A1 41B800000000                    mov r8, 0
 27069                                  .L0:
 27070 000148A7 4939C8                          cmp r8, rcx
 27071 000148AA 740A                            je .L1
 27072 000148AC 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 27073 000148B1 49FFC0                          inc r8
 27074 000148B4 EBF1                            jmp .L0
 27075                                  .L1:
 27076 000148B6 C9                              leave
 27077 000148B7 C22000                          ret AND_KILL_FRAME(2)
 27078                                  
 27079                                  L_code_ptr_numerator:
 27080 000148BA C8000000                        enter 0, 0
 27081 000148BE 48837D1801                      cmp COUNT, 1
 27082 000148C3 0F85AE010000                    jne L_error_arg_count_1
 27083 000148C9 488B4520                        mov rax, PARAM(0)
 27084                                          assert_fraction(rax)
    53 000148CD 803812              <1>  cmp byte [%1], %2
    54 000148D0 0F8575020000        <1>  jne L_error_incorrect_type
 27085 000148D6 488B7801                        mov rdi, qword [rax + 1]
 27086 000148DA E8E7000000                      call make_integer
 27087 000148DF C9                              leave
 27088 000148E0 C21800                          ret AND_KILL_FRAME(1)
 27089                                          
 27090                                  L_code_ptr_denominator:
 27091 000148E3 C8000000                        enter 0, 0
 27092 000148E7 48837D1801                      cmp COUNT, 1
 27093 000148EC 0F8585010000                    jne L_error_arg_count_1
 27094 000148F2 488B4520                        mov rax, PARAM(0)
 27095                                          assert_fraction(rax)
    53 000148F6 803812              <1>  cmp byte [%1], %2
    54 000148F9 0F854C020000        <1>  jne L_error_incorrect_type
 27096 000148FF 488B7809                        mov rdi, qword [rax + 1 + 8]
 27097 00014903 E8BE000000                      call make_integer
 27098 00014908 C9                              leave
 27099 00014909 C21800                          ret AND_KILL_FRAME(1)
 27100                                  
 27101                                  L_code_ptr_is_eq:
 27102 0001490C C8000000                	enter 0, 0
 27103 00014910 48837D1802              	cmp COUNT, 2
 27104 00014915 0F8591010000            	jne L_error_arg_count_2
 27105 0001491B 488B7D20                	mov rdi, PARAM(0)
 27106 0001491F 488B7528                	mov rsi, PARAM(1)
 27107 00014923 4839F7                  	cmp rdi, rsi
 27108 00014926 746C                    	je .L_eq_true
 27109 00014928 8A17                    	mov dl, byte [rdi]
 27110 0001492A 3A16                    	cmp dl, byte [rsi]
 27111 0001492C 7572                    	jne .L_eq_false
 27112 0001492E 80FA02                  	cmp dl, T_char
 27113 00014931 7459                    	je .L_char
 27114 00014933 80FA41                  	cmp dl, T_interned_symbol
 27115 00014936 7440                    	je .L_interned_symbol
 27116 00014938 80FA42                          cmp dl, T_uninterned_symbol
 27117 0001493B 7443                            je .L_uninterned_symbol
 27118 0001493D 80FA13                  	cmp dl, T_real
 27119 00014940 742E                    	je .L_real
 27120 00014942 80FA12                  	cmp dl, T_fraction
 27121 00014945 7413                    	je .L_fraction
 27122 00014947 80FA11                          cmp dl, T_integer
 27123 0001494A 7402                            je .L_integer
 27124 0001494C EB52                    	jmp .L_eq_false
 27125                                  .L_integer:
 27126 0001494E 488B4601                        mov rax, qword [rsi + 1]
 27127 00014952 483B4701                        cmp rax, qword [rdi + 1]
 27128 00014956 7548                            jne .L_eq_false
 27129 00014958 EB3A                            jmp .L_eq_true
 27130                                  .L_fraction:
 27131 0001495A 488B4601                	mov rax, qword [rsi + 1]
 27132 0001495E 483B4701                	cmp rax, qword [rdi + 1]
 27133 00014962 753C                    	jne .L_eq_false
 27134 00014964 488B4609                	mov rax, qword [rsi + 1 + 8]
 27135 00014968 483B4709                	cmp rax, qword [rdi + 1 + 8]
 27136 0001496C 7532                    	jne .L_eq_false
 27137 0001496E EB24                    	jmp .L_eq_true
 27138                                  .L_real:
 27139 00014970 488B4601                	mov rax, qword [rsi + 1]
 27140 00014974 483B4701                	cmp rax, qword [rdi + 1]
 27141                                  .L_interned_symbol:
 27142                                  	; never reached, because interned_symbols are static!
 27143                                  	; but I'm keeping it in case, I'll ever change
 27144                                  	; the implementation
 27145 00014978 488B4601                	mov rax, qword [rsi + 1]
 27146 0001497C 483B4701                	cmp rax, qword [rdi + 1]
 27147                                  .L_uninterned_symbol:
 27148 00014980 4C8B4701                        mov r8, qword [rdi + 1]
 27149 00014984 4C3B4601                        cmp r8, qword [rsi + 1]
 27150 00014988 7516                            jne .L_eq_false
 27151 0001498A EB08                            jmp .L_eq_true
 27152                                  .L_char:
 27153 0001498C 8A5E01                  	mov bl, byte [rsi + 1]
 27154 0001498F 3A5F01                  	cmp bl, byte [rdi + 1]
 27155 00014992 750C                    	jne .L_eq_false
 27156                                  .L_eq_true:
 27157 00014994 48B8-                   	mov rax, sob_boolean_true
 27157 00014996 [0300000000000000] 
 27158 0001499E EB0A                    	jmp .L_eq_exit
 27159                                  .L_eq_false:
 27160 000149A0 48B8-                   	mov rax, sob_boolean_false
 27160 000149A2 [0200000000000000] 
 27161                                  .L_eq_exit:
 27162 000149AA C9                      	leave
 27163 000149AB C22000                  	ret AND_KILL_FRAME(2)
 27164                                  
 27165                                  make_real:
 27166 000149AE C8000000                        enter 0, 0
 27167 000149B2 BF09000000                      mov rdi, (1 + 8)
 27168 000149B7 E809E4FFFF                      call malloc
 27169 000149BC C60013                          mov byte [rax], T_real
 27170 000149BF F20F114001                      movsd qword [rax + 1], xmm0
 27171 000149C4 C9                              leave 
 27172 000149C5 C3                              ret
 27173                                          
 27174                                  make_integer:
 27175 000149C6 C8000000                        enter 0, 0
 27176 000149CA 4889FE                          mov rsi, rdi
 27177 000149CD BF09000000                      mov rdi, (1 + 8)
 27178 000149D2 E8EEE3FFFF                      call malloc
 27179 000149D7 C60011                          mov byte [rax], T_integer
 27180 000149DA 48897001                        mov qword [rax + 1], rsi
 27181 000149DE C9                              leave
 27182 000149DF C3                              ret
 27183                                          
 27184                                  L_error_integer_range:
 27185 000149E0 488B3C25[00000000]              mov rdi, qword [stderr]
 27186 000149E8 48BE-                           mov rsi, fmt_integer_range
 27186 000149EA [C81B000000000000] 
 27187 000149F2 B800000000                      mov rax, 0
 27188                                          ENTER
    44 000149F7 C8000000            <1>  enter 0, 0
    45 000149FB 4883E4F0            <1>  and rsp, ~15
 27189 000149FF E8(00000000)                    call fprintf
 27190                                          LEAVE
    49 00014A04 C9                  <1>  leave
 27191 00014A05 48C7C0FBFFFFFF                  mov rax, -5
 27192 00014A0C E8(00000000)                    call exit
 27193                                  
 27194                                  L_error_arg_negative:
 27195 00014A11 488B3C25[00000000]              mov rdi, qword [stderr]
 27196 00014A19 48BE-                           mov rsi, fmt_arg_negative
 27196 00014A1B [A01A000000000000] 
 27197 00014A23 B800000000                      mov rax, 0
 27198                                          ENTER
    44 00014A28 C8000000            <1>  enter 0, 0
    45 00014A2C 4883E4F0            <1>  and rsp, ~15
 27199 00014A30 E8(00000000)                    call fprintf
 27200                                          LEAVE
    49 00014A35 C9                  <1>  leave
 27201 00014A36 48C7C0FDFFFFFF                  mov rax, -3
 27202 00014A3D E8(00000000)                    call exit
 27203                                  
 27204                                  L_error_arg_count_0:
 27205 00014A42 488B3C25[00000000]              mov rdi, qword [stderr]
 27206 00014A4A 48BE-                           mov rsi, fmt_arg_count_0
 27206 00014A4C [C61A000000000000] 
 27207 00014A54 488B5518                        mov rdx, COUNT
 27208 00014A58 B800000000                      mov rax, 0
 27209                                          ENTER
    44 00014A5D C8000000            <1>  enter 0, 0
    45 00014A61 4883E4F0            <1>  and rsp, ~15
 27210 00014A65 E8(00000000)                    call fprintf
 27211                                          LEAVE
    49 00014A6A C9                  <1>  leave
 27212 00014A6B 48C7C0FDFFFFFF                  mov rax, -3
 27213 00014A72 E8(00000000)                    call exit
 27214                                  
 27215                                  L_error_arg_count_1:
 27216 00014A77 488B3C25[00000000]              mov rdi, qword [stderr]
 27217 00014A7F 48BE-                           mov rsi, fmt_arg_count_1
 27217 00014A81 [EE1A000000000000] 
 27218 00014A89 488B5518                        mov rdx, COUNT
 27219 00014A8D B800000000                      mov rax, 0
 27220                                          ENTER
    44 00014A92 C8000000            <1>  enter 0, 0
    45 00014A96 4883E4F0            <1>  and rsp, ~15
 27221 00014A9A E8(00000000)                    call fprintf
 27222                                          LEAVE
    49 00014A9F C9                  <1>  leave
 27223 00014AA0 48C7C0FDFFFFFF                  mov rax, -3
 27224 00014AA7 E8(00000000)                    call exit
 27225                                  
 27226                                  L_error_arg_count_2:
 27227 00014AAC 488B3C25[00000000]              mov rdi, qword [stderr]
 27228 00014AB4 48BE-                           mov rsi, fmt_arg_count_2
 27228 00014AB6 [541B000000000000] 
 27229 00014ABE 488B5518                        mov rdx, COUNT
 27230 00014AC2 B800000000                      mov rax, 0
 27231                                          ENTER
    44 00014AC7 C8000000            <1>  enter 0, 0
    45 00014ACB 4883E4F0            <1>  and rsp, ~15
 27232 00014ACF E8(00000000)                    call fprintf
 27233                                          LEAVE
    49 00014AD4 C9                  <1>  leave
 27234 00014AD5 48C7C0FDFFFFFF                  mov rax, -3
 27235 00014ADC E8(00000000)                    call exit
 27236                                  
 27237                                  L_error_arg_count_12:
 27238 00014AE1 488B3C25[00000000]              mov rdi, qword [stderr]
 27239 00014AE9 48BE-                           mov rsi, fmt_arg_count_12
 27239 00014AEB [141B000000000000] 
 27240 00014AF3 488B5518                        mov rdx, COUNT
 27241 00014AF7 B800000000                      mov rax, 0
 27242                                          ENTER
    44 00014AFC C8000000            <1>  enter 0, 0
    45 00014B00 4883E4F0            <1>  and rsp, ~15
 27243 00014B04 E8(00000000)                    call fprintf
 27244                                          LEAVE
    49 00014B09 C9                  <1>  leave
 27245 00014B0A 48C7C0FDFFFFFF                  mov rax, -3
 27246 00014B11 E8(00000000)                    call exit
 27247                                  
 27248                                  L_error_arg_count_3:
 27249 00014B16 488B3C25[00000000]              mov rdi, qword [stderr]
 27250 00014B1E 48BE-                           mov rsi, fmt_arg_count_3
 27250 00014B20 [7B1B000000000000] 
 27251 00014B28 488B5518                        mov rdx, COUNT
 27252 00014B2C B800000000                      mov rax, 0
 27253                                          ENTER
    44 00014B31 C8000000            <1>  enter 0, 0
    45 00014B35 4883E4F0            <1>  and rsp, ~15
 27254 00014B39 E8(00000000)                    call fprintf
 27255                                          LEAVE
    49 00014B3E C9                  <1>  leave
 27256 00014B3F 48C7C0FDFFFFFF                  mov rax, -3
 27257 00014B46 E8(00000000)                    call exit
 27258                                          
 27259                                  L_error_incorrect_type:
 27260 00014B4B 488B3C25[00000000]              mov rdi, qword [stderr]
 27261 00014B53 48BE-                           mov rsi, fmt_type
 27261 00014B55 [A41B000000000000] 
 27262 00014B5D B800000000                      mov rax, 0
 27263                                          ENTER
    44 00014B62 C8000000            <1>  enter 0, 0
    45 00014B66 4883E4F0            <1>  and rsp, ~15
 27264 00014B6A E8(00000000)                    call fprintf
 27265                                          LEAVE
    49 00014B6F C9                  <1>  leave
 27266 00014B70 48C7C0FCFFFFFF                  mov rax, -4
 27267 00014B77 E8(00000000)                    call exit
 27268                                  
 27269                                  L_error_division_by_zero:
 27270 00014B7C 488B3C25[00000000]              mov rdi, qword [stderr]
 27271 00014B84 48BE-                           mov rsi, fmt_division_by_zero
 27271 00014B86 [E51B000000000000] 
 27272 00014B8E B800000000                      mov rax, 0
 27273                                          ENTER
    44 00014B93 C8000000            <1>  enter 0, 0
    45 00014B97 4883E4F0            <1>  and rsp, ~15
 27274 00014B9B E8(00000000)                    call fprintf
 27275                                          LEAVE
    49 00014BA0 C9                  <1>  leave
 27276 00014BA1 48C7C0F8FFFFFF                  mov rax, -8
 27277 00014BA8 E8(00000000)                    call exit
 27278                                  
 27279                                  section .data
 27280                                  gensym_count:
 27281 00001A95 0000000000000000                dq 0
 27282                                  fmt_char:
 27283 00001A9D 256300                          db `%c\0`
 27284                                  fmt_arg_negative:
 27285 00001AA0 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 27285 00001AA9 7267756D656E742063-
 27285 00001AB2 616E6E6F7420626520-
 27285 00001ABB 6E656761746976652E-
 27285 00001AC4 0A00               
 27286                                  fmt_arg_count_0:
 27287 00001AC6 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 27287 00001ACF 74696E67207A65726F-
 27287 00001AD8 20617267756D656E74-
 27287 00001AE1 732E20466F756E6420-
 27287 00001AEA 25640A00           
 27288                                  fmt_arg_count_1:
 27289 00001AEE 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 27289 00001AF7 74696E67206F6E6520-
 27289 00001B00 617267756D656E742E-
 27289 00001B09 20466F756E64202564-
 27289 00001B12 0A00               
 27290                                  fmt_arg_count_12:
 27291 00001B14 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 27291 00001B1D 74696E67206F6E6520-
 27291 00001B26 726571756972656420-
 27291 00001B2F 616E64206F6E65206F-
 27291 00001B38 7074696F6E616C2061-
 27291 00001B41 7267756D656E742E20-
 27291 00001B4A 466F756E642025640A-
 27291 00001B53 00                 
 27292                                  fmt_arg_count_2:
 27293 00001B54 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 27293 00001B5D 74696E672074776F20-
 27293 00001B66 617267756D656E7473-
 27293 00001B6F 2E20466F756E642025-
 27293 00001B78 640A00             
 27294                                  fmt_arg_count_3:
 27295 00001B7B 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 27295 00001B84 74696E672074687265-
 27295 00001B8D 6520617267756D656E-
 27295 00001B96 74732E20466F756E64-
 27295 00001B9F 2025640A00         
 27296                                  fmt_type:
 27297 00001BA4 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 27297 00001BAD 696F6E207061737365-
 27297 00001BB6 6420696E636F727265-
 27297 00001BBF 637420747970650A00 
 27298                                  fmt_integer_range:
 27299 00001BC8 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 27299 00001BD1 7265637420696E7465-
 27299 00001BDA 6765722072616E6765-
 27299 00001BE3 0A00               
 27300                                  fmt_division_by_zero:
 27301 00001BE5 212121204469766973-             db `!!! Division by zero\n\0`
 27301 00001BEE 696F6E206279207A65-
 27301 00001BF7 726F0A00           
 27302                                  fmt_scheme_error_part_1:
 27303 00001BFB 0A2121212054686520-             db `\n!!! The procedure \0`
 27303 00001C04 70726F636564757265-
 27303 00001C0D 2000               
 27304                                  fmt_scheme_error_part_2:
 27305 00001C0F 2061736B656420746F-             db ` asked to terminate the program\n`
 27305 00001C18 207465726D696E6174-
 27305 00001C21 65207468652070726F-
 27305 00001C2A 6772616D0A         
 27306 00001C2F 202020207769746820-             db `    with the following message:\n\n\0`
 27306 00001C38 74686520666F6C6C6F-
 27306 00001C41 77696E67206D657373-
 27306 00001C4A 6167653A0A0A00     
 27307                                  fmt_scheme_error_part_3:
 27308 00001C51 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 27308 00001C5A 210A0A00           
