     1                                  ;;; prologue-1.asm
     2                                  ;;; The first part of the standard prologue for compiled programs
     3                                  ;;;
     4                                  ;;; Programmer: Mayer Goldberg, 2023
     5                                  
     6                                  %define T_void 				0
     7                                  %define T_nil 				1
     8                                  %define T_char 				2
     9                                  %define T_string 			3
    10                                  %define T_closure 			4
    11                                  %define T_undefined			5
    12                                  %define T_boolean 			8
    13                                  %define T_boolean_false 		(T_boolean | 1)
    14                                  %define T_boolean_true 			(T_boolean | 2)
    15                                  %define T_number 			16
    16                                  %define T_integer			(T_number | 1)
    17                                  %define T_fraction 			(T_number | 2)
    18                                  %define T_real 				(T_number | 3)
    19                                  %define T_collection 			32
    20                                  %define T_pair 				(T_collection | 1)
    21                                  %define T_vector 			(T_collection | 2)
    22                                  %define T_symbol 			64
    23                                  %define T_interned_symbol		(T_symbol | 1)
    24                                  %define T_uninterned_symbol		(T_symbol | 2)
    25                                  
    26                                  %define SOB_CHAR_VALUE(reg) 		byte [reg + 1]
    27                                  %define SOB_PAIR_CAR(reg)		qword [reg + 1]
    28                                  %define SOB_PAIR_CDR(reg)		qword [reg + 1 + 8]
    29                                  %define SOB_STRING_LENGTH(reg)		qword [reg + 1]
    30                                  %define SOB_VECTOR_LENGTH(reg)		qword [reg + 1]
    31                                  %define SOB_CLOSURE_ENV(reg)		qword [reg + 1]
    32                                  %define SOB_CLOSURE_CODE(reg)		qword [reg + 1 + 8]
    33                                  
    34                                  %define OLD_RBP 			qword [rbp]
    35                                  %define RET_ADDR 			qword [rbp + 8 * 1]
    36                                  %define ENV 				qword [rbp + 8 * 2]
    37                                  %define COUNT 				qword [rbp + 8 * 3]
    38                                  %define PARAM(n) 			qword [rbp + 8 * (4 + n)]
    39                                  %define AND_KILL_FRAME(n)		(8 * (2 + n))
    40                                  
    41                                  %define MAGIC				496351
    42                                  
    43                                  %macro ENTER 0
    44                                  	enter 0, 0
    45                                  	and rsp, ~15
    46                                  %endmacro
    47                                  
    48                                  %macro LEAVE 0
    49                                  	leave
    50                                  %endmacro
    51                                  
    52                                  %macro assert_type 2
    53                                          cmp byte [%1], %2
    54                                          jne L_error_incorrect_type
    55                                  %endmacro
    56                                  
    57                                  %define assert_void(reg)		assert_type reg, T_void
    58                                  %define assert_nil(reg)			assert_type reg, T_nil
    59                                  %define assert_char(reg)		assert_type reg, T_char
    60                                  %define assert_string(reg)		assert_type reg, T_string
    61                                  %define assert_symbol(reg)		assert_type reg, T_symbol
    62                                  %define assert_interned_symbol(reg)	assert_type reg, T_interned_symbol
    63                                  %define assert_uninterned_symbol(reg)	assert_type reg, T_uninterned_symbol
    64                                  %define assert_closure(reg)		assert_type reg, T_closure
    65                                  %define assert_boolean(reg)		assert_type reg, T_boolean
    66                                  %define assert_integer(reg)		assert_type reg, T_integer
    67                                  %define assert_fraction(reg)		assert_type reg, T_fraction
    68                                  %define assert_real(reg)		assert_type reg, T_real
    69                                  %define assert_pair(reg)		assert_type reg, T_pair
    70                                  %define assert_vector(reg)		assert_type reg, T_vector
    71                                  
    72                                  %define sob_void			(L_constants + 0)
    73                                  %define sob_nil				(L_constants + 1)
    74                                  %define sob_boolean_false		(L_constants + 2)
    75                                  %define sob_boolean_true		(L_constants + 3)
    76                                  %define sob_char_nul			(L_constants + 4)
    77                                  
    78                                  %define bytes(n)			(n)
    79                                  %define kbytes(n) 			(bytes(n) << 10)
    80                                  %define mbytes(n) 			(kbytes(n) << 10)
    81                                  %define gbytes(n) 			(mbytes(n) << 10)
    82                                  
    83                                  section .data
    84                                  L_constants:
    85                                  	; L_constants + 0:
    86 00000000 00                      	db T_void
    87                                  	; L_constants + 1:
    88 00000001 01                      	db T_nil
    89                                  	; L_constants + 2:
    90 00000002 09                      	db T_boolean_false
    91                                  	; L_constants + 3:
    92 00000003 0A                      	db T_boolean_true
    93                                  	; L_constants + 4:
    94 00000004 0200                    	db T_char, 0x00	; #\nul
    95                                  	; L_constants + 6:
    96 00000006 03                      	db T_string	; "null?"
    97 00000007 0500000000000000        	dq 5
    98 0000000F 6E756C6C3F              	db 0x6E, 0x75, 0x6C, 0x6C, 0x3F
    99                                  	; L_constants + 20:
   100 00000014 03                      	db T_string	; "pair?"
   101 00000015 0500000000000000        	dq 5
   102 0000001D 706169723F              	db 0x70, 0x61, 0x69, 0x72, 0x3F
   103                                  	; L_constants + 34:
   104 00000022 03                      	db T_string	; "void?"
   105 00000023 0500000000000000        	dq 5
   106 0000002B 766F69643F              	db 0x76, 0x6F, 0x69, 0x64, 0x3F
   107                                  	; L_constants + 48:
   108 00000030 03                      	db T_string	; "char?"
   109 00000031 0500000000000000        	dq 5
   110 00000039 636861723F              	db 0x63, 0x68, 0x61, 0x72, 0x3F
   111                                  	; L_constants + 62:
   112 0000003E 03                      	db T_string	; "string?"
   113 0000003F 0700000000000000        	dq 7
   114 00000047 737472696E673F          	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3F
   115                                  	; L_constants + 78:
   116 0000004E 03                      	db T_string	; "interned-symbol?"
   117 0000004F 1000000000000000        	dq 16
   118 00000057 696E7465726E6564        	db 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E, 0x65, 0x64
   119 0000005F 2D73796D626F6C3F        	db 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   120                                  	; L_constants + 103:
   121 00000067 03                      	db T_string	; "vector?"
   122 00000068 0700000000000000        	dq 7
   123 00000070 766563746F723F          	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x3F
   124                                  	; L_constants + 119:
   125 00000077 03                      	db T_string	; "procedure?"
   126 00000078 0A00000000000000        	dq 10
   127 00000080 70726F6365647572        	db 0x70, 0x72, 0x6F, 0x63, 0x65, 0x64, 0x75, 0x72
   128 00000088 653F                    	db 0x65, 0x3F
   129                                  	; L_constants + 138:
   130 0000008A 03                      	db T_string	; "real?"
   131 0000008B 0500000000000000        	dq 5
   132 00000093 7265616C3F              	db 0x72, 0x65, 0x61, 0x6C, 0x3F
   133                                  	; L_constants + 152:
   134 00000098 03                      	db T_string	; "fraction?"
   135 00000099 0900000000000000        	dq 9
   136 000000A1 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   137 000000A9 3F                      	db 0x3F
   138                                  	; L_constants + 170:
   139 000000AA 03                      	db T_string	; "boolean?"
   140 000000AB 0800000000000000        	dq 8
   141 000000B3 626F6F6C65616E3F        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x3F
   142                                  	; L_constants + 187:
   143 000000BB 03                      	db T_string	; "number?"
   144 000000BC 0700000000000000        	dq 7
   145 000000C4 6E756D6265723F          	db 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x3F
   146                                  	; L_constants + 203:
   147 000000CB 03                      	db T_string	; "collection?"
   148 000000CC 0B00000000000000        	dq 11
   149 000000D4 636F6C6C65637469        	db 0x63, 0x6F, 0x6C, 0x6C, 0x65, 0x63, 0x74, 0x69
   150 000000DC 6F6E3F                  	db 0x6F, 0x6E, 0x3F
   151                                  	; L_constants + 223:
   152 000000DF 03                      	db T_string	; "cons"
   153 000000E0 0400000000000000        	dq 4
   154 000000E8 636F6E73                	db 0x63, 0x6F, 0x6E, 0x73
   155                                  	; L_constants + 236:
   156 000000EC 03                      	db T_string	; "display-sexpr"
   157 000000ED 0D00000000000000        	dq 13
   158 000000F5 646973706C61792D        	db 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79, 0x2D
   159 000000FD 7365787072              	db 0x73, 0x65, 0x78, 0x70, 0x72
   160                                  	; L_constants + 258:
   161 00000102 03                      	db T_string	; "write-char"
   162 00000103 0A00000000000000        	dq 10
   163 0000010B 77726974652D6368        	db 0x77, 0x72, 0x69, 0x74, 0x65, 0x2D, 0x63, 0x68
   164 00000113 6172                    	db 0x61, 0x72
   165                                  	; L_constants + 277:
   166 00000115 03                      	db T_string	; "car"
   167 00000116 0300000000000000        	dq 3
   168 0000011E 636172                  	db 0x63, 0x61, 0x72
   169                                  	; L_constants + 289:
   170 00000121 03                      	db T_string	; "cdr"
   171 00000122 0300000000000000        	dq 3
   172 0000012A 636472                  	db 0x63, 0x64, 0x72
   173                                  	; L_constants + 301:
   174 0000012D 03                      	db T_string	; "string-length"
   175 0000012E 0D00000000000000        	dq 13
   176 00000136 737472696E672D6C        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x6C
   177 0000013E 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   178                                  	; L_constants + 323:
   179 00000143 03                      	db T_string	; "vector-length"
   180 00000144 0D00000000000000        	dq 13
   181 0000014C 766563746F722D6C        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x6C
   182 00000154 656E677468              	db 0x65, 0x6E, 0x67, 0x74, 0x68
   183                                  	; L_constants + 345:
   184 00000159 03                      	db T_string	; "real->integer"
   185 0000015A 0D00000000000000        	dq 13
   186 00000162 7265616C2D3E696E        	db 0x72, 0x65, 0x61, 0x6C, 0x2D, 0x3E, 0x69, 0x6E
   187 0000016A 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   188                                  	; L_constants + 367:
   189 0000016F 03                      	db T_string	; "exit"
   190 00000170 0400000000000000        	dq 4
   191 00000178 65786974                	db 0x65, 0x78, 0x69, 0x74
   192                                  	; L_constants + 380:
   193 0000017C 03                      	db T_string	; "integer->real"
   194 0000017D 0D00000000000000        	dq 13
   195 00000185 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   196 0000018D 3E7265616C              	db 0x3E, 0x72, 0x65, 0x61, 0x6C
   197                                  	; L_constants + 402:
   198 00000192 03                      	db T_string	; "fraction->real"
   199 00000193 0E00000000000000        	dq 14
   200 0000019B 6672616374696F6E        	db 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F, 0x6E
   201 000001A3 2D3E7265616C            	db 0x2D, 0x3E, 0x72, 0x65, 0x61, 0x6C
   202                                  	; L_constants + 425:
   203 000001A9 03                      	db T_string	; "char->integer"
   204 000001AA 0D00000000000000        	dq 13
   205 000001B2 636861722D3E696E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x3E, 0x69, 0x6E
   206 000001BA 7465676572              	db 0x74, 0x65, 0x67, 0x65, 0x72
   207                                  	; L_constants + 447:
   208 000001BF 03                      	db T_string	; "integer->char"
   209 000001C0 0D00000000000000        	dq 13
   210 000001C8 696E74656765722D        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2D
   211 000001D0 3E63686172              	db 0x3E, 0x63, 0x68, 0x61, 0x72
   212                                  	; L_constants + 469:
   213 000001D5 03                      	db T_string	; "trng"
   214 000001D6 0400000000000000        	dq 4
   215 000001DE 74726E67                	db 0x74, 0x72, 0x6E, 0x67
   216                                  	; L_constants + 482:
   217 000001E2 03                      	db T_string	; "zero?"
   218 000001E3 0500000000000000        	dq 5
   219 000001EB 7A65726F3F              	db 0x7A, 0x65, 0x72, 0x6F, 0x3F
   220                                  	; L_constants + 496:
   221 000001F0 03                      	db T_string	; "integer?"
   222 000001F1 0800000000000000        	dq 8
   223 000001F9 696E74656765723F        	db 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x3F
   224                                  	; L_constants + 513:
   225 00000201 03                      	db T_string	; "__bin-apply"
   226 00000202 0B00000000000000        	dq 11
   227 0000020A 5F5F62696E2D6170        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x70
   228 00000212 706C79                  	db 0x70, 0x6C, 0x79
   229                                  	; L_constants + 533:
   230 00000215 03                      	db T_string	; "__bin-add-rr"
   231 00000216 0C00000000000000        	dq 12
   232 0000021E 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   233 00000226 642D7272                	db 0x64, 0x2D, 0x72, 0x72
   234                                  	; L_constants + 554:
   235 0000022A 03                      	db T_string	; "__bin-sub-rr"
   236 0000022B 0C00000000000000        	dq 12
   237 00000233 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   238 0000023B 622D7272                	db 0x62, 0x2D, 0x72, 0x72
   239                                  	; L_constants + 575:
   240 0000023F 03                      	db T_string	; "__bin-mul-rr"
   241 00000240 0C00000000000000        	dq 12
   242 00000248 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   243 00000250 6C2D7272                	db 0x6C, 0x2D, 0x72, 0x72
   244                                  	; L_constants + 596:
   245 00000254 03                      	db T_string	; "__bin-div-rr"
   246 00000255 0C00000000000000        	dq 12
   247 0000025D 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   248 00000265 762D7272                	db 0x76, 0x2D, 0x72, 0x72
   249                                  	; L_constants + 617:
   250 00000269 03                      	db T_string	; "__bin-add-qq"
   251 0000026A 0C00000000000000        	dq 12
   252 00000272 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   253 0000027A 642D7171                	db 0x64, 0x2D, 0x71, 0x71
   254                                  	; L_constants + 638:
   255 0000027E 03                      	db T_string	; "__bin-sub-qq"
   256 0000027F 0C00000000000000        	dq 12
   257 00000287 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   258 0000028F 622D7171                	db 0x62, 0x2D, 0x71, 0x71
   259                                  	; L_constants + 659:
   260 00000293 03                      	db T_string	; "__bin-mul-qq"
   261 00000294 0C00000000000000        	dq 12
   262 0000029C 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   263 000002A4 6C2D7171                	db 0x6C, 0x2D, 0x71, 0x71
   264                                  	; L_constants + 680:
   265 000002A8 03                      	db T_string	; "__bin-div-qq"
   266 000002A9 0C00000000000000        	dq 12
   267 000002B1 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   268 000002B9 762D7171                	db 0x76, 0x2D, 0x71, 0x71
   269                                  	; L_constants + 701:
   270 000002BD 03                      	db T_string	; "__bin-add-zz"
   271 000002BE 0C00000000000000        	dq 12
   272 000002C6 5F5F62696E2D6164        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x61, 0x64
   273 000002CE 642D7A7A                	db 0x64, 0x2D, 0x7A, 0x7A
   274                                  	; L_constants + 722:
   275 000002D2 03                      	db T_string	; "__bin-sub-zz"
   276 000002D3 0C00000000000000        	dq 12
   277 000002DB 5F5F62696E2D7375        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x73, 0x75
   278 000002E3 622D7A7A                	db 0x62, 0x2D, 0x7A, 0x7A
   279                                  	; L_constants + 743:
   280 000002E7 03                      	db T_string	; "__bin-mul-zz"
   281 000002E8 0C00000000000000        	dq 12
   282 000002F0 5F5F62696E2D6D75        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6D, 0x75
   283 000002F8 6C2D7A7A                	db 0x6C, 0x2D, 0x7A, 0x7A
   284                                  	; L_constants + 764:
   285 000002FC 03                      	db T_string	; "__bin-div-zz"
   286 000002FD 0C00000000000000        	dq 12
   287 00000305 5F5F62696E2D6469        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x64, 0x69
   288 0000030D 762D7A7A                	db 0x76, 0x2D, 0x7A, 0x7A
   289                                  	; L_constants + 785:
   290 00000311 03                      	db T_string	; "error"
   291 00000312 0500000000000000        	dq 5
   292 0000031A 6572726F72              	db 0x65, 0x72, 0x72, 0x6F, 0x72
   293                                  	; L_constants + 799:
   294 0000031F 03                      	db T_string	; "__bin-less-than-rr"
   295 00000320 1200000000000000        	dq 18
   296 00000328 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   297 00000330 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   298 00000338 7272                    	db 0x72, 0x72
   299                                  	; L_constants + 826:
   300 0000033A 03                      	db T_string	; "__bin-less-than-qq"
   301 0000033B 1200000000000000        	dq 18
   302 00000343 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   303 0000034B 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   304 00000353 7171                    	db 0x71, 0x71
   305                                  	; L_constants + 853:
   306 00000355 03                      	db T_string	; "__bin-less-than-zz"
   307 00000356 1200000000000000        	dq 18
   308 0000035E 5F5F62696E2D6C65        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x6C, 0x65
   309 00000366 73732D7468616E2D        	db 0x73, 0x73, 0x2D, 0x74, 0x68, 0x61, 0x6E, 0x2D
   310 0000036E 7A7A                    	db 0x7A, 0x7A
   311                                  	; L_constants + 880:
   312 00000370 03                      	db T_string	; "__bin-equal-rr"
   313 00000371 0E00000000000000        	dq 14
   314 00000379 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   315 00000381 75616C2D7272            	db 0x75, 0x61, 0x6C, 0x2D, 0x72, 0x72
   316                                  	; L_constants + 903:
   317 00000387 03                      	db T_string	; "__bin-equal-qq"
   318 00000388 0E00000000000000        	dq 14
   319 00000390 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   320 00000398 75616C2D7171            	db 0x75, 0x61, 0x6C, 0x2D, 0x71, 0x71
   321                                  	; L_constants + 926:
   322 0000039E 03                      	db T_string	; "__bin-equal-zz"
   323 0000039F 0E00000000000000        	dq 14
   324 000003A7 5F5F62696E2D6571        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x2D, 0x65, 0x71
   325 000003AF 75616C2D7A7A            	db 0x75, 0x61, 0x6C, 0x2D, 0x7A, 0x7A
   326                                  	; L_constants + 949:
   327 000003B5 03                      	db T_string	; "quotient"
   328 000003B6 0800000000000000        	dq 8
   329 000003BE 71756F7469656E74        	db 0x71, 0x75, 0x6F, 0x74, 0x69, 0x65, 0x6E, 0x74
   330                                  	; L_constants + 966:
   331 000003C6 03                      	db T_string	; "remainder"
   332 000003C7 0900000000000000        	dq 9
   333 000003CF 72656D61696E6465        	db 0x72, 0x65, 0x6D, 0x61, 0x69, 0x6E, 0x64, 0x65
   334 000003D7 72                      	db 0x72
   335                                  	; L_constants + 984:
   336 000003D8 03                      	db T_string	; "set-car!"
   337 000003D9 0800000000000000        	dq 8
   338 000003E1 7365742D63617221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x61, 0x72, 0x21
   339                                  	; L_constants + 1001:
   340 000003E9 03                      	db T_string	; "set-cdr!"
   341 000003EA 0800000000000000        	dq 8
   342 000003F2 7365742D63647221        	db 0x73, 0x65, 0x74, 0x2D, 0x63, 0x64, 0x72, 0x21
   343                                  	; L_constants + 1018:
   344 000003FA 03                      	db T_string	; "string-ref"
   345 000003FB 0A00000000000000        	dq 10
   346 00000403 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   347 0000040B 6566                    	db 0x65, 0x66
   348                                  	; L_constants + 1037:
   349 0000040D 03                      	db T_string	; "vector-ref"
   350 0000040E 0A00000000000000        	dq 10
   351 00000416 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   352 0000041E 6566                    	db 0x65, 0x66
   353                                  	; L_constants + 1056:
   354 00000420 03                      	db T_string	; "vector-set!"
   355 00000421 0B00000000000000        	dq 11
   356 00000429 766563746F722D73        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x73
   357 00000431 657421                  	db 0x65, 0x74, 0x21
   358                                  	; L_constants + 1076:
   359 00000434 03                      	db T_string	; "string-set!"
   360 00000435 0B00000000000000        	dq 11
   361 0000043D 737472696E672D73        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x73
   362 00000445 657421                  	db 0x65, 0x74, 0x21
   363                                  	; L_constants + 1096:
   364 00000448 03                      	db T_string	; "make-vector"
   365 00000449 0B00000000000000        	dq 11
   366 00000451 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   367 00000459 746F72                  	db 0x74, 0x6F, 0x72
   368                                  	; L_constants + 1116:
   369 0000045C 03                      	db T_string	; "make-string"
   370 0000045D 0B00000000000000        	dq 11
   371 00000465 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   372 0000046D 696E67                  	db 0x69, 0x6E, 0x67
   373                                  	; L_constants + 1136:
   374 00000470 03                      	db T_string	; "numerator"
   375 00000471 0900000000000000        	dq 9
   376 00000479 6E756D657261746F        	db 0x6E, 0x75, 0x6D, 0x65, 0x72, 0x61, 0x74, 0x6F
   377 00000481 72                      	db 0x72
   378                                  	; L_constants + 1154:
   379 00000482 03                      	db T_string	; "denominator"
   380 00000483 0B00000000000000        	dq 11
   381 0000048B 64656E6F6D696E61        	db 0x64, 0x65, 0x6E, 0x6F, 0x6D, 0x69, 0x6E, 0x61
   382 00000493 746F72                  	db 0x74, 0x6F, 0x72
   383                                  	; L_constants + 1174:
   384 00000496 03                      	db T_string	; "eq?"
   385 00000497 0300000000000000        	dq 3
   386 0000049F 65713F                  	db 0x65, 0x71, 0x3F
   387                                  	; L_constants + 1186:
   388 000004A2 03                      	db T_string	; "__integer-to-fracti...
   389 000004A3 1500000000000000        	dq 21
   390 000004AB 5F5F696E74656765        	db 0x5F, 0x5F, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65
   391 000004B3 722D746F2D667261        	db 0x72, 0x2D, 0x74, 0x6F, 0x2D, 0x66, 0x72, 0x61
   392 000004BB 6374696F6E              	db 0x63, 0x74, 0x69, 0x6F, 0x6E
   393                                  	; L_constants + 1216:
   394 000004C0 03                      	db T_string	; "logand"
   395 000004C1 0600000000000000        	dq 6
   396 000004C9 6C6F67616E64            	db 0x6C, 0x6F, 0x67, 0x61, 0x6E, 0x64
   397                                  	; L_constants + 1231:
   398 000004CF 03                      	db T_string	; "logor"
   399 000004D0 0500000000000000        	dq 5
   400 000004D8 6C6F676F72              	db 0x6C, 0x6F, 0x67, 0x6F, 0x72
   401                                  	; L_constants + 1245:
   402 000004DD 03                      	db T_string	; "logxor"
   403 000004DE 0600000000000000        	dq 6
   404 000004E6 6C6F67786F72            	db 0x6C, 0x6F, 0x67, 0x78, 0x6F, 0x72
   405                                  	; L_constants + 1260:
   406 000004EC 03                      	db T_string	; "lognot"
   407 000004ED 0600000000000000        	dq 6
   408 000004F5 6C6F676E6F74            	db 0x6C, 0x6F, 0x67, 0x6E, 0x6F, 0x74
   409                                  	; L_constants + 1275:
   410 000004FB 03                      	db T_string	; "ash"
   411 000004FC 0300000000000000        	dq 3
   412 00000504 617368                  	db 0x61, 0x73, 0x68
   413                                  	; L_constants + 1287:
   414 00000507 03                      	db T_string	; "symbol?"
   415 00000508 0700000000000000        	dq 7
   416 00000510 73796D626F6C3F          	db 0x73, 0x79, 0x6D, 0x62, 0x6F, 0x6C, 0x3F
   417                                  	; L_constants + 1303:
   418 00000517 03                      	db T_string	; "uninterned-symbol?"
   419 00000518 1200000000000000        	dq 18
   420 00000520 756E696E7465726E        	db 0x75, 0x6E, 0x69, 0x6E, 0x74, 0x65, 0x72, 0x6E
   421 00000528 65642D73796D626F        	db 0x65, 0x64, 0x2D, 0x73, 0x79, 0x6D, 0x62, 0x6F
   422 00000530 6C3F                    	db 0x6C, 0x3F
   423                                  	; L_constants + 1330:
   424 00000532 03                      	db T_string	; "gensym?"
   425 00000533 0700000000000000        	dq 7
   426 0000053B 67656E73796D3F          	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D, 0x3F
   427                                  	; L_constants + 1346:
   428 00000542 03                      	db T_string	; "gensym"
   429 00000543 0600000000000000        	dq 6
   430 0000054B 67656E73796D            	db 0x67, 0x65, 0x6E, 0x73, 0x79, 0x6D
   431                                  	; L_constants + 1361:
   432 00000551 03                      	db T_string	; "frame"
   433 00000552 0500000000000000        	dq 5
   434 0000055A 6672616D65              	db 0x66, 0x72, 0x61, 0x6D, 0x65
   435                                  	; L_constants + 1375:
   436 0000055F 03                      	db T_string	; "break"
   437 00000560 0500000000000000        	dq 5
   438 00000568 627265616B              	db 0x62, 0x72, 0x65, 0x61, 0x6B
   439                                  	; L_constants + 1389:
   440 0000056D 03                      	db T_string	; "boolean-false?"
   441 0000056E 0E00000000000000        	dq 14
   442 00000576 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   443 0000057E 66616C73653F            	db 0x66, 0x61, 0x6C, 0x73, 0x65, 0x3F
   444                                  	; L_constants + 1412:
   445 00000584 03                      	db T_string	; "boolean-true?"
   446 00000585 0D00000000000000        	dq 13
   447 0000058D 626F6F6C65616E2D        	db 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0x2D
   448 00000595 747275653F              	db 0x74, 0x72, 0x75, 0x65, 0x3F
   449                                  	; L_constants + 1434:
   450 0000059A 03                      	db T_string	; "primitive?"
   451 0000059B 0A00000000000000        	dq 10
   452 000005A3 7072696D69746976        	db 0x70, 0x72, 0x69, 0x6D, 0x69, 0x74, 0x69, 0x76
   453 000005AB 653F                    	db 0x65, 0x3F
   454                                  	; L_constants + 1453:
   455 000005AD 03                      	db T_string	; "length"
   456 000005AE 0600000000000000        	dq 6
   457 000005B6 6C656E677468            	db 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68
   458                                  	; L_constants + 1468:
   459 000005BC 03                      	db T_string	; "make-list"
   460 000005BD 0900000000000000        	dq 9
   461 000005C5 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   462 000005CD 74                      	db 0x74
   463                                  	; L_constants + 1486:
   464 000005CE 03                      	db T_string	; "return"
   465 000005CF 0600000000000000        	dq 6
   466 000005D7 72657475726E            	db 0x72, 0x65, 0x74, 0x75, 0x72, 0x6E
   467                                  	; L_constants + 1501:
   468 000005DD 03                      	db T_string	; "caar"
   469 000005DE 0400000000000000        	dq 4
   470 000005E6 63616172                	db 0x63, 0x61, 0x61, 0x72
   471                                  	; L_constants + 1514:
   472 000005EA 03                      	db T_string	; "cadr"
   473 000005EB 0400000000000000        	dq 4
   474 000005F3 63616472                	db 0x63, 0x61, 0x64, 0x72
   475                                  	; L_constants + 1527:
   476 000005F7 03                      	db T_string	; "cdar"
   477 000005F8 0400000000000000        	dq 4
   478 00000600 63646172                	db 0x63, 0x64, 0x61, 0x72
   479                                  	; L_constants + 1540:
   480 00000604 03                      	db T_string	; "cddr"
   481 00000605 0400000000000000        	dq 4
   482 0000060D 63646472                	db 0x63, 0x64, 0x64, 0x72
   483                                  	; L_constants + 1553:
   484 00000611 03                      	db T_string	; "caaar"
   485 00000612 0500000000000000        	dq 5
   486 0000061A 6361616172              	db 0x63, 0x61, 0x61, 0x61, 0x72
   487                                  	; L_constants + 1567:
   488 0000061F 03                      	db T_string	; "caadr"
   489 00000620 0500000000000000        	dq 5
   490 00000628 6361616472              	db 0x63, 0x61, 0x61, 0x64, 0x72
   491                                  	; L_constants + 1581:
   492 0000062D 03                      	db T_string	; "cadar"
   493 0000062E 0500000000000000        	dq 5
   494 00000636 6361646172              	db 0x63, 0x61, 0x64, 0x61, 0x72
   495                                  	; L_constants + 1595:
   496 0000063B 03                      	db T_string	; "caddr"
   497 0000063C 0500000000000000        	dq 5
   498 00000644 6361646472              	db 0x63, 0x61, 0x64, 0x64, 0x72
   499                                  	; L_constants + 1609:
   500 00000649 03                      	db T_string	; "cdaar"
   501 0000064A 0500000000000000        	dq 5
   502 00000652 6364616172              	db 0x63, 0x64, 0x61, 0x61, 0x72
   503                                  	; L_constants + 1623:
   504 00000657 03                      	db T_string	; "cdadr"
   505 00000658 0500000000000000        	dq 5
   506 00000660 6364616472              	db 0x63, 0x64, 0x61, 0x64, 0x72
   507                                  	; L_constants + 1637:
   508 00000665 03                      	db T_string	; "cddar"
   509 00000666 0500000000000000        	dq 5
   510 0000066E 6364646172              	db 0x63, 0x64, 0x64, 0x61, 0x72
   511                                  	; L_constants + 1651:
   512 00000673 03                      	db T_string	; "cdddr"
   513 00000674 0500000000000000        	dq 5
   514 0000067C 6364646472              	db 0x63, 0x64, 0x64, 0x64, 0x72
   515                                  	; L_constants + 1665:
   516 00000681 03                      	db T_string	; "caaaar"
   517 00000682 0600000000000000        	dq 6
   518 0000068A 636161616172            	db 0x63, 0x61, 0x61, 0x61, 0x61, 0x72
   519                                  	; L_constants + 1680:
   520 00000690 03                      	db T_string	; "caaadr"
   521 00000691 0600000000000000        	dq 6
   522 00000699 636161616472            	db 0x63, 0x61, 0x61, 0x61, 0x64, 0x72
   523                                  	; L_constants + 1695:
   524 0000069F 03                      	db T_string	; "caadar"
   525 000006A0 0600000000000000        	dq 6
   526 000006A8 636161646172            	db 0x63, 0x61, 0x61, 0x64, 0x61, 0x72
   527                                  	; L_constants + 1710:
   528 000006AE 03                      	db T_string	; "caaddr"
   529 000006AF 0600000000000000        	dq 6
   530 000006B7 636161646472            	db 0x63, 0x61, 0x61, 0x64, 0x64, 0x72
   531                                  	; L_constants + 1725:
   532 000006BD 03                      	db T_string	; "cadaar"
   533 000006BE 0600000000000000        	dq 6
   534 000006C6 636164616172            	db 0x63, 0x61, 0x64, 0x61, 0x61, 0x72
   535                                  	; L_constants + 1740:
   536 000006CC 03                      	db T_string	; "cadadr"
   537 000006CD 0600000000000000        	dq 6
   538 000006D5 636164616472            	db 0x63, 0x61, 0x64, 0x61, 0x64, 0x72
   539                                  	; L_constants + 1755:
   540 000006DB 03                      	db T_string	; "caddar"
   541 000006DC 0600000000000000        	dq 6
   542 000006E4 636164646172            	db 0x63, 0x61, 0x64, 0x64, 0x61, 0x72
   543                                  	; L_constants + 1770:
   544 000006EA 03                      	db T_string	; "cadddr"
   545 000006EB 0600000000000000        	dq 6
   546 000006F3 636164646472            	db 0x63, 0x61, 0x64, 0x64, 0x64, 0x72
   547                                  	; L_constants + 1785:
   548 000006F9 03                      	db T_string	; "cdaaar"
   549 000006FA 0600000000000000        	dq 6
   550 00000702 636461616172            	db 0x63, 0x64, 0x61, 0x61, 0x61, 0x72
   551                                  	; L_constants + 1800:
   552 00000708 03                      	db T_string	; "cdaadr"
   553 00000709 0600000000000000        	dq 6
   554 00000711 636461616472            	db 0x63, 0x64, 0x61, 0x61, 0x64, 0x72
   555                                  	; L_constants + 1815:
   556 00000717 03                      	db T_string	; "cdadar"
   557 00000718 0600000000000000        	dq 6
   558 00000720 636461646172            	db 0x63, 0x64, 0x61, 0x64, 0x61, 0x72
   559                                  	; L_constants + 1830:
   560 00000726 03                      	db T_string	; "cdaddr"
   561 00000727 0600000000000000        	dq 6
   562 0000072F 636461646472            	db 0x63, 0x64, 0x61, 0x64, 0x64, 0x72
   563                                  	; L_constants + 1845:
   564 00000735 03                      	db T_string	; "cddaar"
   565 00000736 0600000000000000        	dq 6
   566 0000073E 636464616172            	db 0x63, 0x64, 0x64, 0x61, 0x61, 0x72
   567                                  	; L_constants + 1860:
   568 00000744 03                      	db T_string	; "cddadr"
   569 00000745 0600000000000000        	dq 6
   570 0000074D 636464616472            	db 0x63, 0x64, 0x64, 0x61, 0x64, 0x72
   571                                  	; L_constants + 1875:
   572 00000753 03                      	db T_string	; "cdddar"
   573 00000754 0600000000000000        	dq 6
   574 0000075C 636464646172            	db 0x63, 0x64, 0x64, 0x64, 0x61, 0x72
   575                                  	; L_constants + 1890:
   576 00000762 03                      	db T_string	; "cddddr"
   577 00000763 0600000000000000        	dq 6
   578 0000076B 636464646472            	db 0x63, 0x64, 0x64, 0x64, 0x64, 0x72
   579                                  	; L_constants + 1905:
   580 00000771 03                      	db T_string	; "list?"
   581 00000772 0500000000000000        	dq 5
   582 0000077A 6C6973743F              	db 0x6C, 0x69, 0x73, 0x74, 0x3F
   583                                  	; L_constants + 1919:
   584 0000077F 03                      	db T_string	; "list"
   585 00000780 0400000000000000        	dq 4
   586 00000788 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   587                                  	; L_constants + 1932:
   588 0000078C 03                      	db T_string	; "not"
   589 0000078D 0300000000000000        	dq 3
   590 00000795 6E6F74                  	db 0x6E, 0x6F, 0x74
   591                                  	; L_constants + 1944:
   592 00000798 03                      	db T_string	; "rational?"
   593 00000799 0900000000000000        	dq 9
   594 000007A1 726174696F6E616C        	db 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x61, 0x6C
   595 000007A9 3F                      	db 0x3F
   596                                  	; L_constants + 1962:
   597 000007AA 03                      	db T_string	; "list*"
   598 000007AB 0500000000000000        	dq 5
   599 000007B3 6C6973742A              	db 0x6C, 0x69, 0x73, 0x74, 0x2A
   600                                  	; L_constants + 1976:
   601 000007B8 03                      	db T_string	; "whatever"
   602 000007B9 0800000000000000        	dq 8
   603 000007C1 7768617465766572        	db 0x77, 0x68, 0x61, 0x74, 0x65, 0x76, 0x65, 0x72
   604                                  	; L_constants + 1993:
   605 000007C9 41                      	db T_interned_symbol	; whatever
   606 000007CA [B807000000000000]      	dq L_constants + 1976
   607                                  	; L_constants + 2002:
   608 000007D2 03                      	db T_string	; "apply"
   609 000007D3 0500000000000000        	dq 5
   610 000007DB 6170706C79              	db 0x61, 0x70, 0x70, 0x6C, 0x79
   611                                  	; L_constants + 2016:
   612 000007E0 03                      	db T_string	; "ormap"
   613 000007E1 0500000000000000        	dq 5
   614 000007E9 6F726D6170              	db 0x6F, 0x72, 0x6D, 0x61, 0x70
   615                                  	; L_constants + 2030:
   616 000007EE 03                      	db T_string	; "map"
   617 000007EF 0300000000000000        	dq 3
   618 000007F7 6D6170                  	db 0x6D, 0x61, 0x70
   619                                  	; L_constants + 2042:
   620 000007FA 03                      	db T_string	; "andmap"
   621 000007FB 0600000000000000        	dq 6
   622 00000803 616E646D6170            	db 0x61, 0x6E, 0x64, 0x6D, 0x61, 0x70
   623                                  	; L_constants + 2057:
   624 00000809 03                      	db T_string	; "reverse"
   625 0000080A 0700000000000000        	dq 7
   626 00000812 72657665727365          	db 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   627                                  	; L_constants + 2073:
   628 00000819 03                      	db T_string	; "fold-left"
   629 0000081A 0900000000000000        	dq 9
   630 00000822 666F6C642D6C6566        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x6C, 0x65, 0x66
   631 0000082A 74                      	db 0x74
   632                                  	; L_constants + 2091:
   633 0000082B 03                      	db T_string	; "append"
   634 0000082C 0600000000000000        	dq 6
   635 00000834 617070656E64            	db 0x61, 0x70, 0x70, 0x65, 0x6E, 0x64
   636                                  	; L_constants + 2106:
   637 0000083A 03                      	db T_string	; "fold-right"
   638 0000083B 0A00000000000000        	dq 10
   639 00000843 666F6C642D726967        	db 0x66, 0x6F, 0x6C, 0x64, 0x2D, 0x72, 0x69, 0x67
   640 0000084B 6874                    	db 0x68, 0x74
   641                                  	; L_constants + 2125:
   642 0000084D 03                      	db T_string	; "+"
   643 0000084E 0100000000000000        	dq 1
   644 00000856 2B                      	db 0x2B
   645                                  	; L_constants + 2135:
   646 00000857 11                      	db T_integer	; 0
   647 00000858 0000000000000000        	dq 0
   648                                  	; L_constants + 2144:
   649 00000860 03                      	db T_string	; "__bin_integer_to_fr...
   650 00000861 1900000000000000        	dq 25
   651 00000869 5F5F62696E5F696E        	db 0x5F, 0x5F, 0x62, 0x69, 0x6E, 0x5F, 0x69, 0x6E
   652 00000871 74656765725F746F        	db 0x74, 0x65, 0x67, 0x65, 0x72, 0x5F, 0x74, 0x6F
   653 00000879 5F6672616374696F        	db 0x5F, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6F
   654 00000881 6E                      	db 0x6E
   655                                  	; L_constants + 2178:
   656 00000882 41                      	db T_interned_symbol	; +
   657 00000883 [4D08000000000000]      	dq L_constants + 2125
   658                                  	; L_constants + 2187:
   659 0000088B 03                      	db T_string	; "all arguments need ...
   660 0000088C 2000000000000000        	dq 32
   661 00000894 616C6C2061726775        	db 0x61, 0x6C, 0x6C, 0x20, 0x61, 0x72, 0x67, 0x75
   662 0000089C 6D656E7473206E65        	db 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x20, 0x6E, 0x65
   663 000008A4 656420746F206265        	db 0x65, 0x64, 0x20, 0x74, 0x6F, 0x20, 0x62, 0x65
   664 000008AC 206E756D62657273        	db 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x73
   665                                  	; L_constants + 2228:
   666 000008B4 03                      	db T_string	; "-"
   667 000008B5 0100000000000000        	dq 1
   668 000008BD 2D                      	db 0x2D
   669                                  	; L_constants + 2238:
   670 000008BE 03                      	db T_string	; "real"
   671 000008BF 0400000000000000        	dq 4
   672 000008C7 7265616C                	db 0x72, 0x65, 0x61, 0x6C
   673                                  	; L_constants + 2251:
   674 000008CB 41                      	db T_interned_symbol	; -
   675 000008CC [B408000000000000]      	dq L_constants + 2228
   676                                  	; L_constants + 2260:
   677 000008D4 03                      	db T_string	; "*"
   678 000008D5 0100000000000000        	dq 1
   679 000008DD 2A                      	db 0x2A
   680                                  	; L_constants + 2270:
   681 000008DE 11                      	db T_integer	; 1
   682 000008DF 0100000000000000        	dq 1
   683                                  	; L_constants + 2279:
   684 000008E7 41                      	db T_interned_symbol	; *
   685 000008E8 [D408000000000000]      	dq L_constants + 2260
   686                                  	; L_constants + 2288:
   687 000008F0 03                      	db T_string	; "/"
   688 000008F1 0100000000000000        	dq 1
   689 000008F9 2F                      	db 0x2F
   690                                  	; L_constants + 2298:
   691 000008FA 41                      	db T_interned_symbol	; /
   692 000008FB [F008000000000000]      	dq L_constants + 2288
   693                                  	; L_constants + 2307:
   694 00000903 03                      	db T_string	; "fact"
   695 00000904 0400000000000000        	dq 4
   696 0000090C 66616374                	db 0x66, 0x61, 0x63, 0x74
   697                                  	; L_constants + 2320:
   698 00000910 03                      	db T_string	; "<"
   699 00000911 0100000000000000        	dq 1
   700 00000919 3C                      	db 0x3C
   701                                  	; L_constants + 2330:
   702 0000091A 03                      	db T_string	; "<="
   703 0000091B 0200000000000000        	dq 2
   704 00000923 3C3D                    	db 0x3C, 0x3D
   705                                  	; L_constants + 2341:
   706 00000925 03                      	db T_string	; ">"
   707 00000926 0100000000000000        	dq 1
   708 0000092E 3E                      	db 0x3E
   709                                  	; L_constants + 2351:
   710 0000092F 03                      	db T_string	; ">="
   711 00000930 0200000000000000        	dq 2
   712 00000938 3E3D                    	db 0x3E, 0x3D
   713                                  	; L_constants + 2362:
   714 0000093A 03                      	db T_string	; "="
   715 0000093B 0100000000000000        	dq 1
   716 00000943 3D                      	db 0x3D
   717                                  	; L_constants + 2372:
   718 00000944 03                      	db T_string	; "generic-comparator"
   719 00000945 1200000000000000        	dq 18
   720 0000094D 67656E657269632D        	db 0x67, 0x65, 0x6E, 0x65, 0x72, 0x69, 0x63, 0x2D
   721 00000955 636F6D7061726174        	db 0x63, 0x6F, 0x6D, 0x70, 0x61, 0x72, 0x61, 0x74
   722 0000095D 6F72                    	db 0x6F, 0x72
   723                                  	; L_constants + 2399:
   724 0000095F 41                      	db T_interned_symbol	; generic-comparator
   725 00000960 [4409000000000000]      	dq L_constants + 2372
   726                                  	; L_constants + 2408:
   727 00000968 03                      	db T_string	; "all the arguments m...
   728 00000969 2100000000000000        	dq 33
   729 00000971 616C6C2074686520        	db 0x61, 0x6C, 0x6C, 0x20, 0x74, 0x68, 0x65, 0x20
   730 00000979 617267756D656E74        	db 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74
   731 00000981 73206D7573742062        	db 0x73, 0x20, 0x6D, 0x75, 0x73, 0x74, 0x20, 0x62
   732 00000989 65206E756D626572        	db 0x65, 0x20, 0x6E, 0x75, 0x6D, 0x62, 0x65, 0x72
   733 00000991 73                      	db 0x73
   734                                  	; L_constants + 2450:
   735 00000992 03                      	db T_string	; "char<?"
   736 00000993 0600000000000000        	dq 6
   737 0000099B 636861723C3F            	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3F
   738                                  	; L_constants + 2465:
   739 000009A1 03                      	db T_string	; "char<=?"
   740 000009A2 0700000000000000        	dq 7
   741 000009AA 636861723C3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3C, 0x3D, 0x3F
   742                                  	; L_constants + 2481:
   743 000009B1 03                      	db T_string	; "char=?"
   744 000009B2 0600000000000000        	dq 6
   745 000009BA 636861723D3F            	db 0x63, 0x68, 0x61, 0x72, 0x3D, 0x3F
   746                                  	; L_constants + 2496:
   747 000009C0 03                      	db T_string	; "char>?"
   748 000009C1 0600000000000000        	dq 6
   749 000009C9 636861723E3F            	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3F
   750                                  	; L_constants + 2511:
   751 000009CF 03                      	db T_string	; "char>=?"
   752 000009D0 0700000000000000        	dq 7
   753 000009D8 636861723E3D3F          	db 0x63, 0x68, 0x61, 0x72, 0x3E, 0x3D, 0x3F
   754                                  	; L_constants + 2527:
   755 000009DF 03                      	db T_string	; "char-downcase"
   756 000009E0 0D00000000000000        	dq 13
   757 000009E8 636861722D646F77        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x64, 0x6F, 0x77
   758 000009F0 6E63617365              	db 0x6E, 0x63, 0x61, 0x73, 0x65
   759                                  	; L_constants + 2549:
   760 000009F5 03                      	db T_string	; "char-upcase"
   761 000009F6 0B00000000000000        	dq 11
   762 000009FE 636861722D757063        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x75, 0x70, 0x63
   763 00000A06 617365                  	db 0x61, 0x73, 0x65
   764                                  	; L_constants + 2569:
   765 00000A09 0241                    	db T_char, 0x41	; #\A
   766                                  	; L_constants + 2571:
   767 00000A0B 025A                    	db T_char, 0x5A	; #\Z
   768                                  	; L_constants + 2573:
   769 00000A0D 0261                    	db T_char, 0x61	; #\a
   770                                  	; L_constants + 2575:
   771 00000A0F 027A                    	db T_char, 0x7A	; #\z
   772                                  	; L_constants + 2577:
   773 00000A11 03                      	db T_string	; "char-ci<?"
   774 00000A12 0900000000000000        	dq 9
   775 00000A1A 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   776 00000A22 3F                      	db 0x3F
   777                                  	; L_constants + 2595:
   778 00000A23 03                      	db T_string	; "char-ci<=?"
   779 00000A24 0A00000000000000        	dq 10
   780 00000A2C 636861722D63693C        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3C
   781 00000A34 3D3F                    	db 0x3D, 0x3F
   782                                  	; L_constants + 2614:
   783 00000A36 03                      	db T_string	; "char-ci=?"
   784 00000A37 0900000000000000        	dq 9
   785 00000A3F 636861722D63693D        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3D
   786 00000A47 3F                      	db 0x3F
   787                                  	; L_constants + 2632:
   788 00000A48 03                      	db T_string	; "char-ci>?"
   789 00000A49 0900000000000000        	dq 9
   790 00000A51 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   791 00000A59 3F                      	db 0x3F
   792                                  	; L_constants + 2650:
   793 00000A5A 03                      	db T_string	; "char-ci>=?"
   794 00000A5B 0A00000000000000        	dq 10
   795 00000A63 636861722D63693E        	db 0x63, 0x68, 0x61, 0x72, 0x2D, 0x63, 0x69, 0x3E
   796 00000A6B 3D3F                    	db 0x3D, 0x3F
   797                                  	; L_constants + 2669:
   798 00000A6D 03                      	db T_string	; "string-downcase"
   799 00000A6E 0F00000000000000        	dq 15
   800 00000A76 737472696E672D64        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x64
   801 00000A7E 6F776E63617365          	db 0x6F, 0x77, 0x6E, 0x63, 0x61, 0x73, 0x65
   802                                  	; L_constants + 2693:
   803 00000A85 03                      	db T_string	; "string-upcase"
   804 00000A86 0D00000000000000        	dq 13
   805 00000A8E 737472696E672D75        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x75
   806 00000A96 7063617365              	db 0x70, 0x63, 0x61, 0x73, 0x65
   807                                  	; L_constants + 2715:
   808 00000A9B 03                      	db T_string	; "list->string"
   809 00000A9C 0C00000000000000        	dq 12
   810 00000AA4 6C6973742D3E7374        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x73, 0x74
   811 00000AAC 72696E67                	db 0x72, 0x69, 0x6E, 0x67
   812                                  	; L_constants + 2736:
   813 00000AB0 03                      	db T_string	; "string->list"
   814 00000AB1 0C00000000000000        	dq 12
   815 00000AB9 737472696E672D3E        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x3E
   816 00000AC1 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   817                                  	; L_constants + 2757:
   818 00000AC5 03                      	db T_string	; "string<?"
   819 00000AC6 0800000000000000        	dq 8
   820 00000ACE 737472696E673C3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3F
   821                                  	; L_constants + 2774:
   822 00000AD6 03                      	db T_string	; "string<=?"
   823 00000AD7 0900000000000000        	dq 9
   824 00000ADF 737472696E673C3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3C, 0x3D
   825 00000AE7 3F                      	db 0x3F
   826                                  	; L_constants + 2792:
   827 00000AE8 03                      	db T_string	; "string=?"
   828 00000AE9 0800000000000000        	dq 8
   829 00000AF1 737472696E673D3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3D, 0x3F
   830                                  	; L_constants + 2809:
   831 00000AF9 03                      	db T_string	; "string>=?"
   832 00000AFA 0900000000000000        	dq 9
   833 00000B02 737472696E673E3D        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3D
   834 00000B0A 3F                      	db 0x3F
   835                                  	; L_constants + 2827:
   836 00000B0B 03                      	db T_string	; "string>?"
   837 00000B0C 0800000000000000        	dq 8
   838 00000B14 737472696E673E3F        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x3E, 0x3F
   839                                  	; L_constants + 2844:
   840 00000B1C 03                      	db T_string	; "string-ci<?"
   841 00000B1D 0B00000000000000        	dq 11
   842 00000B25 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   843 00000B2D 693C3F                  	db 0x69, 0x3C, 0x3F
   844                                  	; L_constants + 2864:
   845 00000B30 03                      	db T_string	; "string-ci<=?"
   846 00000B31 0C00000000000000        	dq 12
   847 00000B39 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   848 00000B41 693C3D3F                	db 0x69, 0x3C, 0x3D, 0x3F
   849                                  	; L_constants + 2885:
   850 00000B45 03                      	db T_string	; "string-ci=?"
   851 00000B46 0B00000000000000        	dq 11
   852 00000B4E 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   853 00000B56 693D3F                  	db 0x69, 0x3D, 0x3F
   854                                  	; L_constants + 2905:
   855 00000B59 03                      	db T_string	; "string-ci>=?"
   856 00000B5A 0C00000000000000        	dq 12
   857 00000B62 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   858 00000B6A 693E3D3F                	db 0x69, 0x3E, 0x3D, 0x3F
   859                                  	; L_constants + 2926:
   860 00000B6E 03                      	db T_string	; "string-ci>?"
   861 00000B6F 0B00000000000000        	dq 11
   862 00000B77 737472696E672D63        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x63
   863 00000B7F 693E3F                  	db 0x69, 0x3E, 0x3F
   864                                  	; L_constants + 2946:
   865 00000B82 41                      	db T_interned_symbol	; make-vector
   866 00000B83 [4804000000000000]      	dq L_constants + 1096
   867                                  	; L_constants + 2955:
   868 00000B8B 03                      	db T_string	; "Usage: (make-vector...
   869 00000B8C 2B00000000000000        	dq 43
   870 00000B94 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   871 00000B9C 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   872 00000BA4 746F722073697A65        	db 0x74, 0x6F, 0x72, 0x20, 0x73, 0x69, 0x7A, 0x65
   873 00000BAC 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   874 00000BB4 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   875 00000BBC 6C7429                  	db 0x6C, 0x74, 0x29
   876                                  	; L_constants + 3007:
   877 00000BBF 41                      	db T_interned_symbol	; make-string
   878 00000BC0 [5C04000000000000]      	dq L_constants + 1116
   879                                  	; L_constants + 3016:
   880 00000BC8 03                      	db T_string	; "Usage: (make-string...
   881 00000BC9 2B00000000000000        	dq 43
   882 00000BD1 55736167653A2028        	db 0x55, 0x73, 0x61, 0x67, 0x65, 0x3A, 0x20, 0x28
   883 00000BD9 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   884 00000BE1 696E672073697A65        	db 0x69, 0x6E, 0x67, 0x20, 0x73, 0x69, 0x7A, 0x65
   885 00000BE9 203F6F7074696F6E        	db 0x20, 0x3F, 0x6F, 0x70, 0x74, 0x69, 0x6F, 0x6E
   886 00000BF1 616C2D6465666175        	db 0x61, 0x6C, 0x2D, 0x64, 0x65, 0x66, 0x61, 0x75
   887 00000BF9 6C7429                  	db 0x6C, 0x74, 0x29
   888                                  	; L_constants + 3068:
   889 00000BFC 03                      	db T_string	; "list->vector"
   890 00000BFD 0C00000000000000        	dq 12
   891 00000C05 6C6973742D3E7665        	db 0x6C, 0x69, 0x73, 0x74, 0x2D, 0x3E, 0x76, 0x65
   892 00000C0D 63746F72                	db 0x63, 0x74, 0x6F, 0x72
   893                                  	; L_constants + 3089:
   894 00000C11 03                      	db T_string	; "vector"
   895 00000C12 0600000000000000        	dq 6
   896 00000C1A 766563746F72            	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72
   897                                  	; L_constants + 3104:
   898 00000C20 03                      	db T_string	; "vector->list"
   899 00000C21 0C00000000000000        	dq 12
   900 00000C29 766563746F722D3E        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x3E
   901 00000C31 6C697374                	db 0x6C, 0x69, 0x73, 0x74
   902                                  	; L_constants + 3125:
   903 00000C35 03                      	db T_string	; "random"
   904 00000C36 0600000000000000        	dq 6
   905 00000C3E 72616E646F6D            	db 0x72, 0x61, 0x6E, 0x64, 0x6F, 0x6D
   906                                  	; L_constants + 3140:
   907 00000C44 03                      	db T_string	; "positive?"
   908 00000C45 0900000000000000        	dq 9
   909 00000C4D 706F736974697665        	db 0x70, 0x6F, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65
   910 00000C55 3F                      	db 0x3F
   911                                  	; L_constants + 3158:
   912 00000C56 03                      	db T_string	; "negative?"
   913 00000C57 0900000000000000        	dq 9
   914 00000C5F 6E65676174697665        	db 0x6E, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65
   915 00000C67 3F                      	db 0x3F
   916                                  	; L_constants + 3176:
   917 00000C68 03                      	db T_string	; "even?"
   918 00000C69 0500000000000000        	dq 5
   919 00000C71 6576656E3F              	db 0x65, 0x76, 0x65, 0x6E, 0x3F
   920                                  	; L_constants + 3190:
   921 00000C76 11                      	db T_integer	; 2
   922 00000C77 0200000000000000        	dq 2
   923                                  	; L_constants + 3199:
   924 00000C7F 03                      	db T_string	; "odd?"
   925 00000C80 0400000000000000        	dq 4
   926 00000C88 6F64643F                	db 0x6F, 0x64, 0x64, 0x3F
   927                                  	; L_constants + 3212:
   928 00000C8C 03                      	db T_string	; "abs"
   929 00000C8D 0300000000000000        	dq 3
   930 00000C95 616273                  	db 0x61, 0x62, 0x73
   931                                  	; L_constants + 3224:
   932 00000C98 03                      	db T_string	; "equal?"
   933 00000C99 0600000000000000        	dq 6
   934 00000CA1 657175616C3F            	db 0x65, 0x71, 0x75, 0x61, 0x6C, 0x3F
   935                                  	; L_constants + 3239:
   936 00000CA7 03                      	db T_string	; "assoc"
   937 00000CA8 0500000000000000        	dq 5
   938 00000CB0 6173736F63              	db 0x61, 0x73, 0x73, 0x6F, 0x63
   939                                  	; L_constants + 3253:
   940 00000CB5 03                      	db T_string	; "string-append"
   941 00000CB6 0D00000000000000        	dq 13
   942 00000CBE 737472696E672D61        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x61
   943 00000CC6 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   944                                  	; L_constants + 3275:
   945 00000CCB 03                      	db T_string	; "vector-append"
   946 00000CCC 0D00000000000000        	dq 13
   947 00000CD4 766563746F722D61        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x61
   948 00000CDC 7070656E64              	db 0x70, 0x70, 0x65, 0x6E, 0x64
   949                                  	; L_constants + 3297:
   950 00000CE1 03                      	db T_string	; "string-reverse"
   951 00000CE2 0E00000000000000        	dq 14
   952 00000CEA 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   953 00000CF2 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   954                                  	; L_constants + 3320:
   955 00000CF8 03                      	db T_string	; "vector-reverse"
   956 00000CF9 0E00000000000000        	dq 14
   957 00000D01 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   958 00000D09 657665727365            	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65
   959                                  	; L_constants + 3343:
   960 00000D0F 03                      	db T_string	; "string-reverse!"
   961 00000D10 0F00000000000000        	dq 15
   962 00000D18 737472696E672D72        	db 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2D, 0x72
   963 00000D20 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   964                                  	; L_constants + 3367:
   965 00000D27 03                      	db T_string	; "vector-reverse!"
   966 00000D28 0F00000000000000        	dq 15
   967 00000D30 766563746F722D72        	db 0x76, 0x65, 0x63, 0x74, 0x6F, 0x72, 0x2D, 0x72
   968 00000D38 65766572736521          	db 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x21
   969                                  	; L_constants + 3391:
   970 00000D3F 03                      	db T_string	; "make-list-thunk"
   971 00000D40 0F00000000000000        	dq 15
   972 00000D48 6D616B652D6C6973        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x6C, 0x69, 0x73
   973 00000D50 742D7468756E6B          	db 0x74, 0x2D, 0x74, 0x68, 0x75, 0x6E, 0x6B
   974                                  	; L_constants + 3415:
   975 00000D57 03                      	db T_string	; "make-string-thunk"
   976 00000D58 1100000000000000        	dq 17
   977 00000D60 6D616B652D737472        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x73, 0x74, 0x72
   978 00000D68 696E672D7468756E        	db 0x69, 0x6E, 0x67, 0x2D, 0x74, 0x68, 0x75, 0x6E
   979 00000D70 6B                      	db 0x6B
   980                                  	; L_constants + 3441:
   981 00000D71 03                      	db T_string	; "make-vector-thunk"
   982 00000D72 1100000000000000        	dq 17
   983 00000D7A 6D616B652D766563        	db 0x6D, 0x61, 0x6B, 0x65, 0x2D, 0x76, 0x65, 0x63
   984 00000D82 746F722D7468756E        	db 0x74, 0x6F, 0x72, 0x2D, 0x74, 0x68, 0x75, 0x6E
   985 00000D8A 6B                      	db 0x6B
   986                                  	; L_constants + 3467:
   987 00000D8B 03                      	db T_string	; "logarithm"
   988 00000D8C 0900000000000000        	dq 9
   989 00000D94 6C6F676172697468        	db 0x6C, 0x6F, 0x67, 0x61, 0x72, 0x69, 0x74, 0x68
   990 00000D9C 6D                      	db 0x6D
   991                                  	; L_constants + 3485:
   992 00000D9D 13                      	db T_real	; 1.000000
   993 00000D9E 000000000000F03F        	dq 1.000000
   994                                  	; L_constants + 3494:
   995 00000DA6 03                      	db T_string	; "newline"
   996 00000DA7 0700000000000000        	dq 7
   997 00000DAF 6E65776C696E65          	db 0x6E, 0x65, 0x77, 0x6C, 0x69, 0x6E, 0x65
   998                                  	; L_constants + 3510:
   999 00000DB6 020A                    	db T_char, 0x0A	; #\newline
  1000                                  	; L_constants + 3512:
  1001 00000DB8 03                      	db T_string	; "void"
  1002 00000DB9 0400000000000000        	dq 4
  1003 00000DC1 766F6964                	db 0x76, 0x6F, 0x69, 0x64
  1004                                  free_var_0:	; location of *
  1005 00000DC5 [CD0D000000000000]      	dq .undefined_object
  1006                                  .undefined_object:
  1007 00000DCD 05                      	db T_undefined
  1008 00000DCE [D408000000000000]      	dq L_constants + 2260
  1009                                  
  1010                                  free_var_1:	; location of +
  1011 00000DD6 [DE0D000000000000]      	dq .undefined_object
  1012                                  .undefined_object:
  1013 00000DDE 05                      	db T_undefined
  1014 00000DDF [4D08000000000000]      	dq L_constants + 2125
  1015                                  
  1016                                  free_var_2:	; location of -
  1017 00000DE7 [EF0D000000000000]      	dq .undefined_object
  1018                                  .undefined_object:
  1019 00000DEF 05                      	db T_undefined
  1020 00000DF0 [B408000000000000]      	dq L_constants + 2228
  1021                                  
  1022                                  free_var_3:	; location of /
  1023 00000DF8 [000E000000000000]      	dq .undefined_object
  1024                                  .undefined_object:
  1025 00000E00 05                      	db T_undefined
  1026 00000E01 [F008000000000000]      	dq L_constants + 2288
  1027                                  
  1028                                  free_var_4:	; location of <
  1029 00000E09 [110E000000000000]      	dq .undefined_object
  1030                                  .undefined_object:
  1031 00000E11 05                      	db T_undefined
  1032 00000E12 [1009000000000000]      	dq L_constants + 2320
  1033                                  
  1034                                  free_var_5:	; location of <=
  1035 00000E1A [220E000000000000]      	dq .undefined_object
  1036                                  .undefined_object:
  1037 00000E22 05                      	db T_undefined
  1038 00000E23 [1A09000000000000]      	dq L_constants + 2330
  1039                                  
  1040                                  free_var_6:	; location of =
  1041 00000E2B [330E000000000000]      	dq .undefined_object
  1042                                  .undefined_object:
  1043 00000E33 05                      	db T_undefined
  1044 00000E34 [3A09000000000000]      	dq L_constants + 2362
  1045                                  
  1046                                  free_var_7:	; location of >
  1047 00000E3C [440E000000000000]      	dq .undefined_object
  1048                                  .undefined_object:
  1049 00000E44 05                      	db T_undefined
  1050 00000E45 [2509000000000000]      	dq L_constants + 2341
  1051                                  
  1052                                  free_var_8:	; location of >=
  1053 00000E4D [550E000000000000]      	dq .undefined_object
  1054                                  .undefined_object:
  1055 00000E55 05                      	db T_undefined
  1056 00000E56 [2F09000000000000]      	dq L_constants + 2351
  1057                                  
  1058                                  free_var_9:	; location of __bin-add-qq
  1059 00000E5E [660E000000000000]      	dq .undefined_object
  1060                                  .undefined_object:
  1061 00000E66 05                      	db T_undefined
  1062 00000E67 [6902000000000000]      	dq L_constants + 617
  1063                                  
  1064                                  free_var_10:	; location of __bin-add-rr
  1065 00000E6F [770E000000000000]      	dq .undefined_object
  1066                                  .undefined_object:
  1067 00000E77 05                      	db T_undefined
  1068 00000E78 [1502000000000000]      	dq L_constants + 533
  1069                                  
  1070                                  free_var_11:	; location of __bin-add-zz
  1071 00000E80 [880E000000000000]      	dq .undefined_object
  1072                                  .undefined_object:
  1073 00000E88 05                      	db T_undefined
  1074 00000E89 [BD02000000000000]      	dq L_constants + 701
  1075                                  
  1076                                  free_var_12:	; location of __bin-apply
  1077 00000E91 [990E000000000000]      	dq .undefined_object
  1078                                  .undefined_object:
  1079 00000E99 05                      	db T_undefined
  1080 00000E9A [0102000000000000]      	dq L_constants + 513
  1081                                  
  1082                                  free_var_13:	; location of __bin-div-qq
  1083 00000EA2 [AA0E000000000000]      	dq .undefined_object
  1084                                  .undefined_object:
  1085 00000EAA 05                      	db T_undefined
  1086 00000EAB [A802000000000000]      	dq L_constants + 680
  1087                                  
  1088                                  free_var_14:	; location of __bin-div-rr
  1089 00000EB3 [BB0E000000000000]      	dq .undefined_object
  1090                                  .undefined_object:
  1091 00000EBB 05                      	db T_undefined
  1092 00000EBC [5402000000000000]      	dq L_constants + 596
  1093                                  
  1094                                  free_var_15:	; location of __bin-div-zz
  1095 00000EC4 [CC0E000000000000]      	dq .undefined_object
  1096                                  .undefined_object:
  1097 00000ECC 05                      	db T_undefined
  1098 00000ECD [FC02000000000000]      	dq L_constants + 764
  1099                                  
  1100                                  free_var_16:	; location of __bin-equal-qq
  1101 00000ED5 [DD0E000000000000]      	dq .undefined_object
  1102                                  .undefined_object:
  1103 00000EDD 05                      	db T_undefined
  1104 00000EDE [8703000000000000]      	dq L_constants + 903
  1105                                  
  1106                                  free_var_17:	; location of __bin-equal-rr
  1107 00000EE6 [EE0E000000000000]      	dq .undefined_object
  1108                                  .undefined_object:
  1109 00000EEE 05                      	db T_undefined
  1110 00000EEF [7003000000000000]      	dq L_constants + 880
  1111                                  
  1112                                  free_var_18:	; location of __bin-equal-zz
  1113 00000EF7 [FF0E000000000000]      	dq .undefined_object
  1114                                  .undefined_object:
  1115 00000EFF 05                      	db T_undefined
  1116 00000F00 [9E03000000000000]      	dq L_constants + 926
  1117                                  
  1118                                  free_var_19:	; location of __bin-less-than-qq
  1119 00000F08 [100F000000000000]      	dq .undefined_object
  1120                                  .undefined_object:
  1121 00000F10 05                      	db T_undefined
  1122 00000F11 [3A03000000000000]      	dq L_constants + 826
  1123                                  
  1124                                  free_var_20:	; location of __bin-less-than-rr
  1125 00000F19 [210F000000000000]      	dq .undefined_object
  1126                                  .undefined_object:
  1127 00000F21 05                      	db T_undefined
  1128 00000F22 [1F03000000000000]      	dq L_constants + 799
  1129                                  
  1130                                  free_var_21:	; location of __bin-less-than-zz
  1131 00000F2A [320F000000000000]      	dq .undefined_object
  1132                                  .undefined_object:
  1133 00000F32 05                      	db T_undefined
  1134 00000F33 [5503000000000000]      	dq L_constants + 853
  1135                                  
  1136                                  free_var_22:	; location of __bin-mul-qq
  1137 00000F3B [430F000000000000]      	dq .undefined_object
  1138                                  .undefined_object:
  1139 00000F43 05                      	db T_undefined
  1140 00000F44 [9302000000000000]      	dq L_constants + 659
  1141                                  
  1142                                  free_var_23:	; location of __bin-mul-rr
  1143 00000F4C [540F000000000000]      	dq .undefined_object
  1144                                  .undefined_object:
  1145 00000F54 05                      	db T_undefined
  1146 00000F55 [3F02000000000000]      	dq L_constants + 575
  1147                                  
  1148                                  free_var_24:	; location of __bin-mul-zz
  1149 00000F5D [650F000000000000]      	dq .undefined_object
  1150                                  .undefined_object:
  1151 00000F65 05                      	db T_undefined
  1152 00000F66 [E702000000000000]      	dq L_constants + 743
  1153                                  
  1154                                  free_var_25:	; location of __bin-sub-qq
  1155 00000F6E [760F000000000000]      	dq .undefined_object
  1156                                  .undefined_object:
  1157 00000F76 05                      	db T_undefined
  1158 00000F77 [7E02000000000000]      	dq L_constants + 638
  1159                                  
  1160                                  free_var_26:	; location of __bin-sub-rr
  1161 00000F7F [870F000000000000]      	dq .undefined_object
  1162                                  .undefined_object:
  1163 00000F87 05                      	db T_undefined
  1164 00000F88 [2A02000000000000]      	dq L_constants + 554
  1165                                  
  1166                                  free_var_27:	; location of __bin-sub-zz
  1167 00000F90 [980F000000000000]      	dq .undefined_object
  1168                                  .undefined_object:
  1169 00000F98 05                      	db T_undefined
  1170 00000F99 [D202000000000000]      	dq L_constants + 722
  1171                                  
  1172                                  free_var_28:	; location of __bin_integer_to_fraction
  1173 00000FA1 [A90F000000000000]      	dq .undefined_object
  1174                                  .undefined_object:
  1175 00000FA9 05                      	db T_undefined
  1176 00000FAA [6008000000000000]      	dq L_constants + 2144
  1177                                  
  1178                                  free_var_29:	; location of __integer-to-fraction
  1179 00000FB2 [BA0F000000000000]      	dq .undefined_object
  1180                                  .undefined_object:
  1181 00000FBA 05                      	db T_undefined
  1182 00000FBB [A204000000000000]      	dq L_constants + 1186
  1183                                  
  1184                                  free_var_30:	; location of abs
  1185 00000FC3 [CB0F000000000000]      	dq .undefined_object
  1186                                  .undefined_object:
  1187 00000FCB 05                      	db T_undefined
  1188 00000FCC [8C0C000000000000]      	dq L_constants + 3212
  1189                                  
  1190                                  free_var_31:	; location of andmap
  1191 00000FD4 [DC0F000000000000]      	dq .undefined_object
  1192                                  .undefined_object:
  1193 00000FDC 05                      	db T_undefined
  1194 00000FDD [FA07000000000000]      	dq L_constants + 2042
  1195                                  
  1196                                  free_var_32:	; location of append
  1197 00000FE5 [ED0F000000000000]      	dq .undefined_object
  1198                                  .undefined_object:
  1199 00000FED 05                      	db T_undefined
  1200 00000FEE [2B08000000000000]      	dq L_constants + 2091
  1201                                  
  1202                                  free_var_33:	; location of apply
  1203 00000FF6 [FE0F000000000000]      	dq .undefined_object
  1204                                  .undefined_object:
  1205 00000FFE 05                      	db T_undefined
  1206 00000FFF [D207000000000000]      	dq L_constants + 2002
  1207                                  
  1208                                  free_var_34:	; location of assoc
  1209 00001007 [0F10000000000000]      	dq .undefined_object
  1210                                  .undefined_object:
  1211 0000100F 05                      	db T_undefined
  1212 00001010 [A70C000000000000]      	dq L_constants + 3239
  1213                                  
  1214                                  free_var_35:	; location of caaaar
  1215 00001018 [2010000000000000]      	dq .undefined_object
  1216                                  .undefined_object:
  1217 00001020 05                      	db T_undefined
  1218 00001021 [8106000000000000]      	dq L_constants + 1665
  1219                                  
  1220                                  free_var_36:	; location of caaadr
  1221 00001029 [3110000000000000]      	dq .undefined_object
  1222                                  .undefined_object:
  1223 00001031 05                      	db T_undefined
  1224 00001032 [9006000000000000]      	dq L_constants + 1680
  1225                                  
  1226                                  free_var_37:	; location of caaar
  1227 0000103A [4210000000000000]      	dq .undefined_object
  1228                                  .undefined_object:
  1229 00001042 05                      	db T_undefined
  1230 00001043 [1106000000000000]      	dq L_constants + 1553
  1231                                  
  1232                                  free_var_38:	; location of caadar
  1233 0000104B [5310000000000000]      	dq .undefined_object
  1234                                  .undefined_object:
  1235 00001053 05                      	db T_undefined
  1236 00001054 [9F06000000000000]      	dq L_constants + 1695
  1237                                  
  1238                                  free_var_39:	; location of caaddr
  1239 0000105C [6410000000000000]      	dq .undefined_object
  1240                                  .undefined_object:
  1241 00001064 05                      	db T_undefined
  1242 00001065 [AE06000000000000]      	dq L_constants + 1710
  1243                                  
  1244                                  free_var_40:	; location of caadr
  1245 0000106D [7510000000000000]      	dq .undefined_object
  1246                                  .undefined_object:
  1247 00001075 05                      	db T_undefined
  1248 00001076 [1F06000000000000]      	dq L_constants + 1567
  1249                                  
  1250                                  free_var_41:	; location of caar
  1251 0000107E [8610000000000000]      	dq .undefined_object
  1252                                  .undefined_object:
  1253 00001086 05                      	db T_undefined
  1254 00001087 [DD05000000000000]      	dq L_constants + 1501
  1255                                  
  1256                                  free_var_42:	; location of cadaar
  1257 0000108F [9710000000000000]      	dq .undefined_object
  1258                                  .undefined_object:
  1259 00001097 05                      	db T_undefined
  1260 00001098 [BD06000000000000]      	dq L_constants + 1725
  1261                                  
  1262                                  free_var_43:	; location of cadadr
  1263 000010A0 [A810000000000000]      	dq .undefined_object
  1264                                  .undefined_object:
  1265 000010A8 05                      	db T_undefined
  1266 000010A9 [CC06000000000000]      	dq L_constants + 1740
  1267                                  
  1268                                  free_var_44:	; location of cadar
  1269 000010B1 [B910000000000000]      	dq .undefined_object
  1270                                  .undefined_object:
  1271 000010B9 05                      	db T_undefined
  1272 000010BA [2D06000000000000]      	dq L_constants + 1581
  1273                                  
  1274                                  free_var_45:	; location of caddar
  1275 000010C2 [CA10000000000000]      	dq .undefined_object
  1276                                  .undefined_object:
  1277 000010CA 05                      	db T_undefined
  1278 000010CB [DB06000000000000]      	dq L_constants + 1755
  1279                                  
  1280                                  free_var_46:	; location of cadddr
  1281 000010D3 [DB10000000000000]      	dq .undefined_object
  1282                                  .undefined_object:
  1283 000010DB 05                      	db T_undefined
  1284 000010DC [EA06000000000000]      	dq L_constants + 1770
  1285                                  
  1286                                  free_var_47:	; location of caddr
  1287 000010E4 [EC10000000000000]      	dq .undefined_object
  1288                                  .undefined_object:
  1289 000010EC 05                      	db T_undefined
  1290 000010ED [3B06000000000000]      	dq L_constants + 1595
  1291                                  
  1292                                  free_var_48:	; location of cadr
  1293 000010F5 [FD10000000000000]      	dq .undefined_object
  1294                                  .undefined_object:
  1295 000010FD 05                      	db T_undefined
  1296 000010FE [EA05000000000000]      	dq L_constants + 1514
  1297                                  
  1298                                  free_var_49:	; location of car
  1299 00001106 [0E11000000000000]      	dq .undefined_object
  1300                                  .undefined_object:
  1301 0000110E 05                      	db T_undefined
  1302 0000110F [1501000000000000]      	dq L_constants + 277
  1303                                  
  1304                                  free_var_50:	; location of cdaaar
  1305 00001117 [1F11000000000000]      	dq .undefined_object
  1306                                  .undefined_object:
  1307 0000111F 05                      	db T_undefined
  1308 00001120 [F906000000000000]      	dq L_constants + 1785
  1309                                  
  1310                                  free_var_51:	; location of cdaadr
  1311 00001128 [3011000000000000]      	dq .undefined_object
  1312                                  .undefined_object:
  1313 00001130 05                      	db T_undefined
  1314 00001131 [0807000000000000]      	dq L_constants + 1800
  1315                                  
  1316                                  free_var_52:	; location of cdaar
  1317 00001139 [4111000000000000]      	dq .undefined_object
  1318                                  .undefined_object:
  1319 00001141 05                      	db T_undefined
  1320 00001142 [4906000000000000]      	dq L_constants + 1609
  1321                                  
  1322                                  free_var_53:	; location of cdadar
  1323 0000114A [5211000000000000]      	dq .undefined_object
  1324                                  .undefined_object:
  1325 00001152 05                      	db T_undefined
  1326 00001153 [1707000000000000]      	dq L_constants + 1815
  1327                                  
  1328                                  free_var_54:	; location of cdaddr
  1329 0000115B [6311000000000000]      	dq .undefined_object
  1330                                  .undefined_object:
  1331 00001163 05                      	db T_undefined
  1332 00001164 [2607000000000000]      	dq L_constants + 1830
  1333                                  
  1334                                  free_var_55:	; location of cdadr
  1335 0000116C [7411000000000000]      	dq .undefined_object
  1336                                  .undefined_object:
  1337 00001174 05                      	db T_undefined
  1338 00001175 [5706000000000000]      	dq L_constants + 1623
  1339                                  
  1340                                  free_var_56:	; location of cdar
  1341 0000117D [8511000000000000]      	dq .undefined_object
  1342                                  .undefined_object:
  1343 00001185 05                      	db T_undefined
  1344 00001186 [F705000000000000]      	dq L_constants + 1527
  1345                                  
  1346                                  free_var_57:	; location of cddaar
  1347 0000118E [9611000000000000]      	dq .undefined_object
  1348                                  .undefined_object:
  1349 00001196 05                      	db T_undefined
  1350 00001197 [3507000000000000]      	dq L_constants + 1845
  1351                                  
  1352                                  free_var_58:	; location of cddadr
  1353 0000119F [A711000000000000]      	dq .undefined_object
  1354                                  .undefined_object:
  1355 000011A7 05                      	db T_undefined
  1356 000011A8 [4407000000000000]      	dq L_constants + 1860
  1357                                  
  1358                                  free_var_59:	; location of cddar
  1359 000011B0 [B811000000000000]      	dq .undefined_object
  1360                                  .undefined_object:
  1361 000011B8 05                      	db T_undefined
  1362 000011B9 [6506000000000000]      	dq L_constants + 1637
  1363                                  
  1364                                  free_var_60:	; location of cdddar
  1365 000011C1 [C911000000000000]      	dq .undefined_object
  1366                                  .undefined_object:
  1367 000011C9 05                      	db T_undefined
  1368 000011CA [5307000000000000]      	dq L_constants + 1875
  1369                                  
  1370                                  free_var_61:	; location of cddddr
  1371 000011D2 [DA11000000000000]      	dq .undefined_object
  1372                                  .undefined_object:
  1373 000011DA 05                      	db T_undefined
  1374 000011DB [6207000000000000]      	dq L_constants + 1890
  1375                                  
  1376                                  free_var_62:	; location of cdddr
  1377 000011E3 [EB11000000000000]      	dq .undefined_object
  1378                                  .undefined_object:
  1379 000011EB 05                      	db T_undefined
  1380 000011EC [7306000000000000]      	dq L_constants + 1651
  1381                                  
  1382                                  free_var_63:	; location of cddr
  1383 000011F4 [FC11000000000000]      	dq .undefined_object
  1384                                  .undefined_object:
  1385 000011FC 05                      	db T_undefined
  1386 000011FD [0406000000000000]      	dq L_constants + 1540
  1387                                  
  1388                                  free_var_64:	; location of cdr
  1389 00001205 [0D12000000000000]      	dq .undefined_object
  1390                                  .undefined_object:
  1391 0000120D 05                      	db T_undefined
  1392 0000120E [2101000000000000]      	dq L_constants + 289
  1393                                  
  1394                                  free_var_65:	; location of char->integer
  1395 00001216 [1E12000000000000]      	dq .undefined_object
  1396                                  .undefined_object:
  1397 0000121E 05                      	db T_undefined
  1398 0000121F [A901000000000000]      	dq L_constants + 425
  1399                                  
  1400                                  free_var_66:	; location of char-ci<=?
  1401 00001227 [2F12000000000000]      	dq .undefined_object
  1402                                  .undefined_object:
  1403 0000122F 05                      	db T_undefined
  1404 00001230 [230A000000000000]      	dq L_constants + 2595
  1405                                  
  1406                                  free_var_67:	; location of char-ci<?
  1407 00001238 [4012000000000000]      	dq .undefined_object
  1408                                  .undefined_object:
  1409 00001240 05                      	db T_undefined
  1410 00001241 [110A000000000000]      	dq L_constants + 2577
  1411                                  
  1412                                  free_var_68:	; location of char-ci=?
  1413 00001249 [5112000000000000]      	dq .undefined_object
  1414                                  .undefined_object:
  1415 00001251 05                      	db T_undefined
  1416 00001252 [360A000000000000]      	dq L_constants + 2614
  1417                                  
  1418                                  free_var_69:	; location of char-ci>=?
  1419 0000125A [6212000000000000]      	dq .undefined_object
  1420                                  .undefined_object:
  1421 00001262 05                      	db T_undefined
  1422 00001263 [5A0A000000000000]      	dq L_constants + 2650
  1423                                  
  1424                                  free_var_70:	; location of char-ci>?
  1425 0000126B [7312000000000000]      	dq .undefined_object
  1426                                  .undefined_object:
  1427 00001273 05                      	db T_undefined
  1428 00001274 [480A000000000000]      	dq L_constants + 2632
  1429                                  
  1430                                  free_var_71:	; location of char-downcase
  1431 0000127C [8412000000000000]      	dq .undefined_object
  1432                                  .undefined_object:
  1433 00001284 05                      	db T_undefined
  1434 00001285 [DF09000000000000]      	dq L_constants + 2527
  1435                                  
  1436                                  free_var_72:	; location of char-upcase
  1437 0000128D [9512000000000000]      	dq .undefined_object
  1438                                  .undefined_object:
  1439 00001295 05                      	db T_undefined
  1440 00001296 [F509000000000000]      	dq L_constants + 2549
  1441                                  
  1442                                  free_var_73:	; location of char<=?
  1443 0000129E [A612000000000000]      	dq .undefined_object
  1444                                  .undefined_object:
  1445 000012A6 05                      	db T_undefined
  1446 000012A7 [A109000000000000]      	dq L_constants + 2465
  1447                                  
  1448                                  free_var_74:	; location of char<?
  1449 000012AF [B712000000000000]      	dq .undefined_object
  1450                                  .undefined_object:
  1451 000012B7 05                      	db T_undefined
  1452 000012B8 [9209000000000000]      	dq L_constants + 2450
  1453                                  
  1454                                  free_var_75:	; location of char=?
  1455 000012C0 [C812000000000000]      	dq .undefined_object
  1456                                  .undefined_object:
  1457 000012C8 05                      	db T_undefined
  1458 000012C9 [B109000000000000]      	dq L_constants + 2481
  1459                                  
  1460                                  free_var_76:	; location of char>=?
  1461 000012D1 [D912000000000000]      	dq .undefined_object
  1462                                  .undefined_object:
  1463 000012D9 05                      	db T_undefined
  1464 000012DA [CF09000000000000]      	dq L_constants + 2511
  1465                                  
  1466                                  free_var_77:	; location of char>?
  1467 000012E2 [EA12000000000000]      	dq .undefined_object
  1468                                  .undefined_object:
  1469 000012EA 05                      	db T_undefined
  1470 000012EB [C009000000000000]      	dq L_constants + 2496
  1471                                  
  1472                                  free_var_78:	; location of char?
  1473 000012F3 [FB12000000000000]      	dq .undefined_object
  1474                                  .undefined_object:
  1475 000012FB 05                      	db T_undefined
  1476 000012FC [3000000000000000]      	dq L_constants + 48
  1477                                  
  1478                                  free_var_79:	; location of cons
  1479 00001304 [0C13000000000000]      	dq .undefined_object
  1480                                  .undefined_object:
  1481 0000130C 05                      	db T_undefined
  1482 0000130D [DF00000000000000]      	dq L_constants + 223
  1483                                  
  1484                                  free_var_80:	; location of eq?
  1485 00001315 [1D13000000000000]      	dq .undefined_object
  1486                                  .undefined_object:
  1487 0000131D 05                      	db T_undefined
  1488 0000131E [9604000000000000]      	dq L_constants + 1174
  1489                                  
  1490                                  free_var_81:	; location of equal?
  1491 00001326 [2E13000000000000]      	dq .undefined_object
  1492                                  .undefined_object:
  1493 0000132E 05                      	db T_undefined
  1494 0000132F [980C000000000000]      	dq L_constants + 3224
  1495                                  
  1496                                  free_var_82:	; location of error
  1497 00001337 [3F13000000000000]      	dq .undefined_object
  1498                                  .undefined_object:
  1499 0000133F 05                      	db T_undefined
  1500 00001340 [1103000000000000]      	dq L_constants + 785
  1501                                  
  1502                                  free_var_83:	; location of even?
  1503 00001348 [5013000000000000]      	dq .undefined_object
  1504                                  .undefined_object:
  1505 00001350 05                      	db T_undefined
  1506 00001351 [680C000000000000]      	dq L_constants + 3176
  1507                                  
  1508                                  free_var_84:	; location of fact
  1509 00001359 [6113000000000000]      	dq .undefined_object
  1510                                  .undefined_object:
  1511 00001361 05                      	db T_undefined
  1512 00001362 [0309000000000000]      	dq L_constants + 2307
  1513                                  
  1514                                  free_var_85:	; location of fold-left
  1515 0000136A [7213000000000000]      	dq .undefined_object
  1516                                  .undefined_object:
  1517 00001372 05                      	db T_undefined
  1518 00001373 [1908000000000000]      	dq L_constants + 2073
  1519                                  
  1520                                  free_var_86:	; location of fold-right
  1521 0000137B [8313000000000000]      	dq .undefined_object
  1522                                  .undefined_object:
  1523 00001383 05                      	db T_undefined
  1524 00001384 [3A08000000000000]      	dq L_constants + 2106
  1525                                  
  1526                                  free_var_87:	; location of fraction->real
  1527 0000138C [9413000000000000]      	dq .undefined_object
  1528                                  .undefined_object:
  1529 00001394 05                      	db T_undefined
  1530 00001395 [9201000000000000]      	dq L_constants + 402
  1531                                  
  1532                                  free_var_88:	; location of fraction?
  1533 0000139D [A513000000000000]      	dq .undefined_object
  1534                                  .undefined_object:
  1535 000013A5 05                      	db T_undefined
  1536 000013A6 [9800000000000000]      	dq L_constants + 152
  1537                                  
  1538                                  free_var_89:	; location of integer->char
  1539 000013AE [B613000000000000]      	dq .undefined_object
  1540                                  .undefined_object:
  1541 000013B6 05                      	db T_undefined
  1542 000013B7 [BF01000000000000]      	dq L_constants + 447
  1543                                  
  1544                                  free_var_90:	; location of integer->real
  1545 000013BF [C713000000000000]      	dq .undefined_object
  1546                                  .undefined_object:
  1547 000013C7 05                      	db T_undefined
  1548 000013C8 [7C01000000000000]      	dq L_constants + 380
  1549                                  
  1550                                  free_var_91:	; location of integer?
  1551 000013D0 [D813000000000000]      	dq .undefined_object
  1552                                  .undefined_object:
  1553 000013D8 05                      	db T_undefined
  1554 000013D9 [F001000000000000]      	dq L_constants + 496
  1555                                  
  1556                                  free_var_92:	; location of list
  1557 000013E1 [E913000000000000]      	dq .undefined_object
  1558                                  .undefined_object:
  1559 000013E9 05                      	db T_undefined
  1560 000013EA [7F07000000000000]      	dq L_constants + 1919
  1561                                  
  1562                                  free_var_93:	; location of list*
  1563 000013F2 [FA13000000000000]      	dq .undefined_object
  1564                                  .undefined_object:
  1565 000013FA 05                      	db T_undefined
  1566 000013FB [AA07000000000000]      	dq L_constants + 1962
  1567                                  
  1568                                  free_var_94:	; location of list->string
  1569 00001403 [0B14000000000000]      	dq .undefined_object
  1570                                  .undefined_object:
  1571 0000140B 05                      	db T_undefined
  1572 0000140C [9B0A000000000000]      	dq L_constants + 2715
  1573                                  
  1574                                  free_var_95:	; location of list->vector
  1575 00001414 [1C14000000000000]      	dq .undefined_object
  1576                                  .undefined_object:
  1577 0000141C 05                      	db T_undefined
  1578 0000141D [FC0B000000000000]      	dq L_constants + 3068
  1579                                  
  1580                                  free_var_96:	; location of list?
  1581 00001425 [2D14000000000000]      	dq .undefined_object
  1582                                  .undefined_object:
  1583 0000142D 05                      	db T_undefined
  1584 0000142E [7107000000000000]      	dq L_constants + 1905
  1585                                  
  1586                                  free_var_97:	; location of logarithm
  1587 00001436 [3E14000000000000]      	dq .undefined_object
  1588                                  .undefined_object:
  1589 0000143E 05                      	db T_undefined
  1590 0000143F [8B0D000000000000]      	dq L_constants + 3467
  1591                                  
  1592                                  free_var_98:	; location of make-list-thunk
  1593 00001447 [4F14000000000000]      	dq .undefined_object
  1594                                  .undefined_object:
  1595 0000144F 05                      	db T_undefined
  1596 00001450 [3F0D000000000000]      	dq L_constants + 3391
  1597                                  
  1598                                  free_var_99:	; location of make-string
  1599 00001458 [6014000000000000]      	dq .undefined_object
  1600                                  .undefined_object:
  1601 00001460 05                      	db T_undefined
  1602 00001461 [5C04000000000000]      	dq L_constants + 1116
  1603                                  
  1604                                  free_var_100:	; location of make-string-thunk
  1605 00001469 [7114000000000000]      	dq .undefined_object
  1606                                  .undefined_object:
  1607 00001471 05                      	db T_undefined
  1608 00001472 [570D000000000000]      	dq L_constants + 3415
  1609                                  
  1610                                  free_var_101:	; location of make-vector
  1611 0000147A [8214000000000000]      	dq .undefined_object
  1612                                  .undefined_object:
  1613 00001482 05                      	db T_undefined
  1614 00001483 [4804000000000000]      	dq L_constants + 1096
  1615                                  
  1616                                  free_var_102:	; location of make-vector-thunk
  1617 0000148B [9314000000000000]      	dq .undefined_object
  1618                                  .undefined_object:
  1619 00001493 05                      	db T_undefined
  1620 00001494 [710D000000000000]      	dq L_constants + 3441
  1621                                  
  1622                                  free_var_103:	; location of map
  1623 0000149C [A414000000000000]      	dq .undefined_object
  1624                                  .undefined_object:
  1625 000014A4 05                      	db T_undefined
  1626 000014A5 [EE07000000000000]      	dq L_constants + 2030
  1627                                  
  1628                                  free_var_104:	; location of negative?
  1629 000014AD [B514000000000000]      	dq .undefined_object
  1630                                  .undefined_object:
  1631 000014B5 05                      	db T_undefined
  1632 000014B6 [560C000000000000]      	dq L_constants + 3158
  1633                                  
  1634                                  free_var_105:	; location of newline
  1635 000014BE [C614000000000000]      	dq .undefined_object
  1636                                  .undefined_object:
  1637 000014C6 05                      	db T_undefined
  1638 000014C7 [A60D000000000000]      	dq L_constants + 3494
  1639                                  
  1640                                  free_var_106:	; location of not
  1641 000014CF [D714000000000000]      	dq .undefined_object
  1642                                  .undefined_object:
  1643 000014D7 05                      	db T_undefined
  1644 000014D8 [8C07000000000000]      	dq L_constants + 1932
  1645                                  
  1646                                  free_var_107:	; location of null?
  1647 000014E0 [E814000000000000]      	dq .undefined_object
  1648                                  .undefined_object:
  1649 000014E8 05                      	db T_undefined
  1650 000014E9 [0600000000000000]      	dq L_constants + 6
  1651                                  
  1652                                  free_var_108:	; location of number?
  1653 000014F1 [F914000000000000]      	dq .undefined_object
  1654                                  .undefined_object:
  1655 000014F9 05                      	db T_undefined
  1656 000014FA [BB00000000000000]      	dq L_constants + 187
  1657                                  
  1658                                  free_var_109:	; location of odd?
  1659 00001502 [0A15000000000000]      	dq .undefined_object
  1660                                  .undefined_object:
  1661 0000150A 05                      	db T_undefined
  1662 0000150B [7F0C000000000000]      	dq L_constants + 3199
  1663                                  
  1664                                  free_var_110:	; location of ormap
  1665 00001513 [1B15000000000000]      	dq .undefined_object
  1666                                  .undefined_object:
  1667 0000151B 05                      	db T_undefined
  1668 0000151C [E007000000000000]      	dq L_constants + 2016
  1669                                  
  1670                                  free_var_111:	; location of pair?
  1671 00001524 [2C15000000000000]      	dq .undefined_object
  1672                                  .undefined_object:
  1673 0000152C 05                      	db T_undefined
  1674 0000152D [1400000000000000]      	dq L_constants + 20
  1675                                  
  1676                                  free_var_112:	; location of positive?
  1677 00001535 [3D15000000000000]      	dq .undefined_object
  1678                                  .undefined_object:
  1679 0000153D 05                      	db T_undefined
  1680 0000153E [440C000000000000]      	dq L_constants + 3140
  1681                                  
  1682                                  free_var_113:	; location of random
  1683 00001546 [4E15000000000000]      	dq .undefined_object
  1684                                  .undefined_object:
  1685 0000154E 05                      	db T_undefined
  1686 0000154F [350C000000000000]      	dq L_constants + 3125
  1687                                  
  1688                                  free_var_114:	; location of rational?
  1689 00001557 [5F15000000000000]      	dq .undefined_object
  1690                                  .undefined_object:
  1691 0000155F 05                      	db T_undefined
  1692 00001560 [9807000000000000]      	dq L_constants + 1944
  1693                                  
  1694                                  free_var_115:	; location of real
  1695 00001568 [7015000000000000]      	dq .undefined_object
  1696                                  .undefined_object:
  1697 00001570 05                      	db T_undefined
  1698 00001571 [BE08000000000000]      	dq L_constants + 2238
  1699                                  
  1700                                  free_var_116:	; location of real?
  1701 00001579 [8115000000000000]      	dq .undefined_object
  1702                                  .undefined_object:
  1703 00001581 05                      	db T_undefined
  1704 00001582 [8A00000000000000]      	dq L_constants + 138
  1705                                  
  1706                                  free_var_117:	; location of remainder
  1707 0000158A [9215000000000000]      	dq .undefined_object
  1708                                  .undefined_object:
  1709 00001592 05                      	db T_undefined
  1710 00001593 [C603000000000000]      	dq L_constants + 966
  1711                                  
  1712                                  free_var_118:	; location of reverse
  1713 0000159B [A315000000000000]      	dq .undefined_object
  1714                                  .undefined_object:
  1715 000015A3 05                      	db T_undefined
  1716 000015A4 [0908000000000000]      	dq L_constants + 2057
  1717                                  
  1718                                  free_var_119:	; location of string->list
  1719 000015AC [B415000000000000]      	dq .undefined_object
  1720                                  .undefined_object:
  1721 000015B4 05                      	db T_undefined
  1722 000015B5 [B00A000000000000]      	dq L_constants + 2736
  1723                                  
  1724                                  free_var_120:	; location of string-append
  1725 000015BD [C515000000000000]      	dq .undefined_object
  1726                                  .undefined_object:
  1727 000015C5 05                      	db T_undefined
  1728 000015C6 [B50C000000000000]      	dq L_constants + 3253
  1729                                  
  1730                                  free_var_121:	; location of string-ci<=?
  1731 000015CE [D615000000000000]      	dq .undefined_object
  1732                                  .undefined_object:
  1733 000015D6 05                      	db T_undefined
  1734 000015D7 [300B000000000000]      	dq L_constants + 2864
  1735                                  
  1736                                  free_var_122:	; location of string-ci<?
  1737 000015DF [E715000000000000]      	dq .undefined_object
  1738                                  .undefined_object:
  1739 000015E7 05                      	db T_undefined
  1740 000015E8 [1C0B000000000000]      	dq L_constants + 2844
  1741                                  
  1742                                  free_var_123:	; location of string-ci=?
  1743 000015F0 [F815000000000000]      	dq .undefined_object
  1744                                  .undefined_object:
  1745 000015F8 05                      	db T_undefined
  1746 000015F9 [450B000000000000]      	dq L_constants + 2885
  1747                                  
  1748                                  free_var_124:	; location of string-ci>=?
  1749 00001601 [0916000000000000]      	dq .undefined_object
  1750                                  .undefined_object:
  1751 00001609 05                      	db T_undefined
  1752 0000160A [590B000000000000]      	dq L_constants + 2905
  1753                                  
  1754                                  free_var_125:	; location of string-ci>?
  1755 00001612 [1A16000000000000]      	dq .undefined_object
  1756                                  .undefined_object:
  1757 0000161A 05                      	db T_undefined
  1758 0000161B [6E0B000000000000]      	dq L_constants + 2926
  1759                                  
  1760                                  free_var_126:	; location of string-downcase
  1761 00001623 [2B16000000000000]      	dq .undefined_object
  1762                                  .undefined_object:
  1763 0000162B 05                      	db T_undefined
  1764 0000162C [6D0A000000000000]      	dq L_constants + 2669
  1765                                  
  1766                                  free_var_127:	; location of string-length
  1767 00001634 [3C16000000000000]      	dq .undefined_object
  1768                                  .undefined_object:
  1769 0000163C 05                      	db T_undefined
  1770 0000163D [2D01000000000000]      	dq L_constants + 301
  1771                                  
  1772                                  free_var_128:	; location of string-ref
  1773 00001645 [4D16000000000000]      	dq .undefined_object
  1774                                  .undefined_object:
  1775 0000164D 05                      	db T_undefined
  1776 0000164E [FA03000000000000]      	dq L_constants + 1018
  1777                                  
  1778                                  free_var_129:	; location of string-reverse
  1779 00001656 [5E16000000000000]      	dq .undefined_object
  1780                                  .undefined_object:
  1781 0000165E 05                      	db T_undefined
  1782 0000165F [E10C000000000000]      	dq L_constants + 3297
  1783                                  
  1784                                  free_var_130:	; location of string-reverse!
  1785 00001667 [6F16000000000000]      	dq .undefined_object
  1786                                  .undefined_object:
  1787 0000166F 05                      	db T_undefined
  1788 00001670 [0F0D000000000000]      	dq L_constants + 3343
  1789                                  
  1790                                  free_var_131:	; location of string-set!
  1791 00001678 [8016000000000000]      	dq .undefined_object
  1792                                  .undefined_object:
  1793 00001680 05                      	db T_undefined
  1794 00001681 [3404000000000000]      	dq L_constants + 1076
  1795                                  
  1796                                  free_var_132:	; location of string-upcase
  1797 00001689 [9116000000000000]      	dq .undefined_object
  1798                                  .undefined_object:
  1799 00001691 05                      	db T_undefined
  1800 00001692 [850A000000000000]      	dq L_constants + 2693
  1801                                  
  1802                                  free_var_133:	; location of string<=?
  1803 0000169A [A216000000000000]      	dq .undefined_object
  1804                                  .undefined_object:
  1805 000016A2 05                      	db T_undefined
  1806 000016A3 [D60A000000000000]      	dq L_constants + 2774
  1807                                  
  1808                                  free_var_134:	; location of string<?
  1809 000016AB [B316000000000000]      	dq .undefined_object
  1810                                  .undefined_object:
  1811 000016B3 05                      	db T_undefined
  1812 000016B4 [C50A000000000000]      	dq L_constants + 2757
  1813                                  
  1814                                  free_var_135:	; location of string=?
  1815 000016BC [C416000000000000]      	dq .undefined_object
  1816                                  .undefined_object:
  1817 000016C4 05                      	db T_undefined
  1818 000016C5 [E80A000000000000]      	dq L_constants + 2792
  1819                                  
  1820                                  free_var_136:	; location of string>=?
  1821 000016CD [D516000000000000]      	dq .undefined_object
  1822                                  .undefined_object:
  1823 000016D5 05                      	db T_undefined
  1824 000016D6 [F90A000000000000]      	dq L_constants + 2809
  1825                                  
  1826                                  free_var_137:	; location of string>?
  1827 000016DE [E616000000000000]      	dq .undefined_object
  1828                                  .undefined_object:
  1829 000016E6 05                      	db T_undefined
  1830 000016E7 [0B0B000000000000]      	dq L_constants + 2827
  1831                                  
  1832                                  free_var_138:	; location of string?
  1833 000016EF [F716000000000000]      	dq .undefined_object
  1834                                  .undefined_object:
  1835 000016F7 05                      	db T_undefined
  1836 000016F8 [3E00000000000000]      	dq L_constants + 62
  1837                                  
  1838                                  free_var_139:	; location of trng
  1839 00001700 [0817000000000000]      	dq .undefined_object
  1840                                  .undefined_object:
  1841 00001708 05                      	db T_undefined
  1842 00001709 [D501000000000000]      	dq L_constants + 469
  1843                                  
  1844                                  free_var_140:	; location of vector
  1845 00001711 [1917000000000000]      	dq .undefined_object
  1846                                  .undefined_object:
  1847 00001719 05                      	db T_undefined
  1848 0000171A [110C000000000000]      	dq L_constants + 3089
  1849                                  
  1850                                  free_var_141:	; location of vector->list
  1851 00001722 [2A17000000000000]      	dq .undefined_object
  1852                                  .undefined_object:
  1853 0000172A 05                      	db T_undefined
  1854 0000172B [200C000000000000]      	dq L_constants + 3104
  1855                                  
  1856                                  free_var_142:	; location of vector-append
  1857 00001733 [3B17000000000000]      	dq .undefined_object
  1858                                  .undefined_object:
  1859 0000173B 05                      	db T_undefined
  1860 0000173C [CB0C000000000000]      	dq L_constants + 3275
  1861                                  
  1862                                  free_var_143:	; location of vector-length
  1863 00001744 [4C17000000000000]      	dq .undefined_object
  1864                                  .undefined_object:
  1865 0000174C 05                      	db T_undefined
  1866 0000174D [4301000000000000]      	dq L_constants + 323
  1867                                  
  1868                                  free_var_144:	; location of vector-ref
  1869 00001755 [5D17000000000000]      	dq .undefined_object
  1870                                  .undefined_object:
  1871 0000175D 05                      	db T_undefined
  1872 0000175E [0D04000000000000]      	dq L_constants + 1037
  1873                                  
  1874                                  free_var_145:	; location of vector-reverse
  1875 00001766 [6E17000000000000]      	dq .undefined_object
  1876                                  .undefined_object:
  1877 0000176E 05                      	db T_undefined
  1878 0000176F [F80C000000000000]      	dq L_constants + 3320
  1879                                  
  1880                                  free_var_146:	; location of vector-reverse!
  1881 00001777 [7F17000000000000]      	dq .undefined_object
  1882                                  .undefined_object:
  1883 0000177F 05                      	db T_undefined
  1884 00001780 [270D000000000000]      	dq L_constants + 3367
  1885                                  
  1886                                  free_var_147:	; location of vector-set!
  1887 00001788 [9017000000000000]      	dq .undefined_object
  1888                                  .undefined_object:
  1889 00001790 05                      	db T_undefined
  1890 00001791 [2004000000000000]      	dq L_constants + 1056
  1891                                  
  1892                                  free_var_148:	; location of vector?
  1893 00001799 [A117000000000000]      	dq .undefined_object
  1894                                  .undefined_object:
  1895 000017A1 05                      	db T_undefined
  1896 000017A2 [6700000000000000]      	dq L_constants + 103
  1897                                  
  1898                                  free_var_149:	; location of void
  1899 000017AA [B217000000000000]      	dq .undefined_object
  1900                                  .undefined_object:
  1901 000017B2 05                      	db T_undefined
  1902 000017B3 [B80D000000000000]      	dq L_constants + 3512
  1903                                  
  1904                                  free_var_150:	; location of write-char
  1905 000017BB [C317000000000000]      	dq .undefined_object
  1906                                  .undefined_object:
  1907 000017C3 05                      	db T_undefined
  1908 000017C4 [0201000000000000]      	dq L_constants + 258
  1909                                  
  1910                                  free_var_151:	; location of zero?
  1911 000017CC [D417000000000000]      	dq .undefined_object
  1912                                  .undefined_object:
  1913 000017D4 05                      	db T_undefined
  1914 000017D5 [E201000000000000]      	dq L_constants + 482
  1915                                  
  1916                                  
  1917                                  extern printf, fprintf, stdout, stderr, fwrite, exit, putchar, getchar
  1918                                  global main
  1919                                  section .text
  1920                                  main:
  1921 00000000 C8000000                        enter 0, 0
  1922 00000004 6A00                            push 0
  1923 00000006 6A00                            push 0
  1924 00000008 68[66690100]                    push Lend
  1925 0000000D C8000000                        enter 0, 0
  1926                                  	; building closure for null?
  1927 00000011 48BF-                   	mov rdi, free_var_107
  1927 00000013 [E014000000000000] 
  1928 0000001B 48BE-                   	mov rsi, L_code_ptr_is_null
  1928 0000001D [3075010000000000] 
  1929 00000025 E8D7720100              	call bind_primitive
  1930                                  
  1931                                  	; building closure for pair?
  1932 0000002A 48BF-                   	mov rdi, free_var_111
  1932 0000002C [2415000000000000] 
  1933 00000034 48BE-                   	mov rsi, L_code_ptr_is_pair
  1933 00000036 [6275010000000000] 
  1934 0000003E E8BE720100              	call bind_primitive
  1935                                  
  1936                                  	; building closure for char?
  1937 00000043 48BF-                   	mov rdi, free_var_78
  1937 00000045 [F312000000000000] 
  1938 0000004D 48BE-                   	mov rsi, L_code_ptr_is_char
  1938 0000004F [C675010000000000] 
  1939 00000057 E8A5720100              	call bind_primitive
  1940                                  
  1941                                  	; building closure for string?
  1942 0000005C 48BF-                   	mov rdi, free_var_138
  1942 0000005E [EF16000000000000] 
  1943 00000066 48BE-                   	mov rsi, L_code_ptr_is_string
  1943 00000068 [F875010000000000] 
  1944 00000070 E88C720100              	call bind_primitive
  1945                                  
  1946                                  	; building closure for vector?
  1947 00000075 48BF-                   	mov rdi, free_var_148
  1947 00000077 [9917000000000000] 
  1948 0000007F 48BE-                   	mov rsi, L_code_ptr_is_vector
  1948 00000081 [F676010000000000] 
  1949 00000089 E873720100              	call bind_primitive
  1950                                  
  1951                                  	; building closure for real?
  1952 0000008E 48BF-                   	mov rdi, free_var_116
  1952 00000090 [7915000000000000] 
  1953 00000098 48BE-                   	mov rsi, L_code_ptr_is_real
  1953 0000009A [5A77010000000000] 
  1954 000000A2 E85A720100              	call bind_primitive
  1955                                  
  1956                                  	; building closure for fraction?
  1957 000000A7 48BF-                   	mov rdi, free_var_88
  1957 000000A9 [9D13000000000000] 
  1958 000000B1 48BE-                   	mov rsi, L_code_ptr_is_fraction
  1958 000000B3 [8C77010000000000] 
  1959 000000BB E841720100              	call bind_primitive
  1960                                  
  1961                                  	; building closure for number?
  1962 000000C0 48BF-                   	mov rdi, free_var_108
  1962 000000C2 [F114000000000000] 
  1963 000000CA 48BE-                   	mov rsi, L_code_ptr_is_number
  1963 000000CC [5A78010000000000] 
  1964 000000D4 E828720100              	call bind_primitive
  1965                                  
  1966                                  	; building closure for cons
  1967 000000D9 48BF-                   	mov rdi, free_var_79
  1967 000000DB [0413000000000000] 
  1968 000000E3 48BE-                   	mov rsi, L_code_ptr_cons
  1968 000000E5 [C278010000000000] 
  1969 000000ED E80F720100              	call bind_primitive
  1970                                  
  1971                                  	; building closure for write-char
  1972 000000F2 48BF-                   	mov rdi, free_var_150
  1972 000000F4 [BB17000000000000] 
  1973 000000FC 48BE-                   	mov rsi, L_code_ptr_write_char
  1973 000000FE [1879010000000000] 
  1974 00000106 E8F6710100              	call bind_primitive
  1975                                  
  1976                                  	; building closure for car
  1977 0000010B 48BF-                   	mov rdi, free_var_49
  1977 0000010D [0611000000000000] 
  1978 00000115 48BE-                   	mov rsi, L_code_ptr_car
  1978 00000117 [6B79010000000000] 
  1979 0000011F E8DD710100              	call bind_primitive
  1980                                  
  1981                                  	; building closure for cdr
  1982 00000124 48BF-                   	mov rdi, free_var_64
  1982 00000126 [0512000000000000] 
  1983 0000012E 48BE-                   	mov rsi, L_code_ptr_cdr
  1983 00000130 [8F79010000000000] 
  1984 00000138 E8C4710100              	call bind_primitive
  1985                                  
  1986                                  	; building closure for string-length
  1987 0000013D 48BF-                   	mov rdi, free_var_127
  1987 0000013F [3416000000000000] 
  1988 00000147 48BE-                   	mov rsi, L_code_ptr_string_length
  1988 00000149 [B379010000000000] 
  1989 00000151 E8AB710100              	call bind_primitive
  1990                                  
  1991                                  	; building closure for vector-length
  1992 00000156 48BF-                   	mov rdi, free_var_143
  1992 00000158 [4417000000000000] 
  1993 00000160 48BE-                   	mov rsi, L_code_ptr_vector_length
  1993 00000162 [DC79010000000000] 
  1994 0000016A E892710100              	call bind_primitive
  1995                                  
  1996                                  	; building closure for integer->real
  1997 0000016F 48BF-                   	mov rdi, free_var_90
  1997 00000171 [BF13000000000000] 
  1998 00000179 48BE-                   	mov rsi, L_code_ptr_integer_to_real
  1998 0000017B [4D7A010000000000] 
  1999 00000183 E879710100              	call bind_primitive
  2000                                  
  2001                                  	; building closure for fraction->real
  2002 00000188 48BF-                   	mov rdi, free_var_87
  2002 0000018A [8C13000000000000] 
  2003 00000192 48BE-                   	mov rsi, L_code_ptr_fraction_to_real
  2003 00000194 [7B7A010000000000] 
  2004 0000019C E860710100              	call bind_primitive
  2005                                  
  2006                                  	; building closure for char->integer
  2007 000001A1 48BF-                   	mov rdi, free_var_65
  2007 000001A3 [1612000000000000] 
  2008 000001AB 48BE-                   	mov rsi, L_code_ptr_char_to_integer
  2008 000001AD [B67A010000000000] 
  2009 000001B5 E847710100              	call bind_primitive
  2010                                  
  2011                                  	; building closure for integer->char
  2012 000001BA 48BF-                   	mov rdi, free_var_89
  2012 000001BC [AE13000000000000] 
  2013 000001C4 48BE-                   	mov rsi, L_code_ptr_integer_to_char
  2013 000001C6 [257B010000000000] 
  2014 000001CE E82E710100              	call bind_primitive
  2015                                  
  2016                                  	; building closure for trng
  2017 000001D3 48BF-                   	mov rdi, free_var_139
  2017 000001D5 [0017000000000000] 
  2018 000001DD 48BE-                   	mov rsi, L_code_ptr_trng
  2018 000001DF [707B010000000000] 
  2019 000001E7 E815710100              	call bind_primitive
  2020                                  
  2021                                  	; building closure for zero?
  2022 000001EC 48BF-                   	mov rdi, free_var_151
  2022 000001EE [CC17000000000000] 
  2023 000001F6 48BE-                   	mov rsi, L_code_ptr_is_zero
  2023 000001F8 [8F7B010000000000] 
  2024 00000200 E8FC700100              	call bind_primitive
  2025                                  
  2026                                  	; building closure for integer?
  2027 00000205 48BF-                   	mov rdi, free_var_91
  2027 00000207 [D013000000000000] 
  2028 0000020F 48BE-                   	mov rsi, L_code_ptr_is_integer
  2028 00000211 [F47B010000000000] 
  2029 00000219 E8E3700100              	call bind_primitive
  2030                                  
  2031                                  	; building closure for __bin-apply
  2032 0000021E 48BF-                   	mov rdi, free_var_12
  2032 00000220 [910E000000000000] 
  2033 00000228 48BE-                   	mov rsi, L_code_ptr_bin_apply
  2033 0000022A [7174010000000000] 
  2034 00000232 E8CA700100              	call bind_primitive
  2035                                  
  2036                                  	; building closure for __bin-add-rr
  2037 00000237 48BF-                   	mov rdi, free_var_10
  2037 00000239 [6F0E000000000000] 
  2038 00000241 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_rr
  2038 00000243 [267C010000000000] 
  2039 0000024B E8B1700100              	call bind_primitive
  2040                                  
  2041                                  	; building closure for __bin-sub-rr
  2042 00000250 48BF-                   	mov rdi, free_var_26
  2042 00000252 [7F0F000000000000] 
  2043 0000025A 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_rr
  2043 0000025C [667C010000000000] 
  2044 00000264 E898700100              	call bind_primitive
  2045                                  
  2046                                  	; building closure for __bin-mul-rr
  2047 00000269 48BF-                   	mov rdi, free_var_23
  2047 0000026B [4C0F000000000000] 
  2048 00000273 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_rr
  2048 00000275 [A67C010000000000] 
  2049 0000027D E87F700100              	call bind_primitive
  2050                                  
  2051                                  	; building closure for __bin-div-rr
  2052 00000282 48BF-                   	mov rdi, free_var_14
  2052 00000284 [B30E000000000000] 
  2053 0000028C 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_rr
  2053 0000028E [E67C010000000000] 
  2054 00000296 E866700100              	call bind_primitive
  2055                                  
  2056                                  	; building closure for __bin-add-qq
  2057 0000029B 48BF-                   	mov rdi, free_var_9
  2057 0000029D [5E0E000000000000] 
  2058 000002A5 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_qq
  2058 000002A7 [707D010000000000] 
  2059 000002AF E84D700100              	call bind_primitive
  2060                                  
  2061                                  	; building closure for __bin-sub-qq
  2062 000002B4 48BF-                   	mov rdi, free_var_25
  2062 000002B6 [6E0F000000000000] 
  2063 000002BE 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_qq
  2063 000002C0 [107E010000000000] 
  2064 000002C8 E834700100              	call bind_primitive
  2065                                  
  2066                                  	; building closure for __bin-mul-qq
  2067 000002CD 48BF-                   	mov rdi, free_var_22
  2067 000002CF [3B0F000000000000] 
  2068 000002D7 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_qq
  2068 000002D9 [B57E010000000000] 
  2069 000002E1 E81B700100              	call bind_primitive
  2070                                  
  2071                                  	; building closure for __bin-div-qq
  2072 000002E6 48BF-                   	mov rdi, free_var_13
  2072 000002E8 [A20E000000000000] 
  2073 000002F0 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_qq
  2073 000002F2 [4F7F010000000000] 
  2074 000002FA E802700100              	call bind_primitive
  2075                                  
  2076                                  	; building closure for __bin-add-zz
  2077 000002FF 48BF-                   	mov rdi, free_var_11
  2077 00000301 [800E000000000000] 
  2078 00000309 48BE-                   	mov rsi, L_code_ptr_raw_bin_add_zz
  2078 0000030B [347D010000000000] 
  2079 00000313 E8E96F0100              	call bind_primitive
  2080                                  
  2081                                  	; building closure for __bin-sub-zz
  2082 00000318 48BF-                   	mov rdi, free_var_27
  2082 0000031A [900F000000000000] 
  2083 00000322 48BE-                   	mov rsi, L_code_ptr_raw_bin_sub_zz
  2083 00000324 [D47D010000000000] 
  2084 0000032C E8D06F0100              	call bind_primitive
  2085                                  
  2086                                  	; building closure for __bin-mul-zz
  2087 00000331 48BF-                   	mov rdi, free_var_24
  2087 00000333 [5D0F000000000000] 
  2088 0000033B 48BE-                   	mov rsi, L_code_ptr_raw_bin_mul_zz
  2088 0000033D [747E010000000000] 
  2089 00000345 E8B76F0100              	call bind_primitive
  2090                                  
  2091                                  	; building closure for __bin-div-zz
  2092 0000034A 48BF-                   	mov rdi, free_var_15
  2092 0000034C [C40E000000000000] 
  2093 00000354 48BE-                   	mov rsi, L_code_ptr_raw_bin_div_zz
  2093 00000356 [097F010000000000] 
  2094 0000035E E89E6F0100              	call bind_primitive
  2095                                  
  2096                                  	; building closure for error
  2097 00000363 48BF-                   	mov rdi, free_var_82
  2097 00000365 [3713000000000000] 
  2098 0000036D 48BE-                   	mov rsi, L_code_ptr_error
  2098 0000036F [3980010000000000] 
  2099 00000377 E8856F0100              	call bind_primitive
  2100                                  
  2101                                  	; building closure for __bin-less-than-rr
  2102 0000037C 48BF-                   	mov rdi, free_var_20
  2102 0000037E [190F000000000000] 
  2103 00000386 48BE-                   	mov rsi, L_code_ptr_raw_less_than_rr
  2103 00000388 [F580010000000000] 
  2104 00000390 E86C6F0100              	call bind_primitive
  2105                                  
  2106                                  	; building closure for __bin-less-than-qq
  2107 00000395 48BF-                   	mov rdi, free_var_19
  2107 00000397 [080F000000000000] 
  2108 0000039F 48BE-                   	mov rsi, L_code_ptr_raw_less_than_qq
  2108 000003A1 [9781010000000000] 
  2109 000003A9 E8536F0100              	call bind_primitive
  2110                                  
  2111                                  	; building closure for __bin-less-than-zz
  2112 000003AE 48BF-                   	mov rdi, free_var_21
  2112 000003B0 [2A0F000000000000] 
  2113 000003B8 48BE-                   	mov rsi, L_code_ptr_raw_less_than_zz
  2113 000003BA [4881010000000000] 
  2114 000003C2 E83A6F0100              	call bind_primitive
  2115                                  
  2116                                  	; building closure for __bin-equal-rr
  2117 000003C7 48BF-                   	mov rdi, free_var_17
  2117 000003C9 [E60E000000000000] 
  2118 000003D1 48BE-                   	mov rsi, L_code_ptr_raw_equal_rr
  2118 000003D3 [F681010000000000] 
  2119 000003DB E8216F0100              	call bind_primitive
  2120                                  
  2121                                  	; building closure for __bin-equal-qq
  2122 000003E0 48BF-                   	mov rdi, free_var_16
  2122 000003E2 [D50E000000000000] 
  2123 000003EA 48BE-                   	mov rsi, L_code_ptr_raw_equal_qq
  2123 000003EC [9882010000000000] 
  2124 000003F4 E8086F0100              	call bind_primitive
  2125                                  
  2126                                  	; building closure for __bin-equal-zz
  2127 000003F9 48BF-                   	mov rdi, free_var_18
  2127 000003FB [F70E000000000000] 
  2128 00000403 48BE-                   	mov rsi, L_code_ptr_raw_equal_zz
  2128 00000405 [4982010000000000] 
  2129 0000040D E8EF6E0100              	call bind_primitive
  2130                                  
  2131                                  	; building closure for remainder
  2132 00000412 48BF-                   	mov rdi, free_var_117
  2132 00000414 [8A15000000000000] 
  2133 0000041C 48BE-                   	mov rsi, L_code_ptr_remainder
  2133 0000041E [4383010000000000] 
  2134 00000426 E8D66E0100              	call bind_primitive
  2135                                  
  2136                                  	; building closure for string-ref
  2137 0000042B 48BF-                   	mov rdi, free_var_128
  2137 0000042D [4516000000000000] 
  2138 00000435 48BE-                   	mov rsi, L_code_ptr_string_ref
  2138 00000437 [F383010000000000] 
  2139 0000043F E8BD6E0100              	call bind_primitive
  2140                                  
  2141                                  	; building closure for vector-ref
  2142 00000444 48BF-                   	mov rdi, free_var_144
  2142 00000446 [5517000000000000] 
  2143 0000044E 48BE-                   	mov rsi, L_code_ptr_vector_ref
  2143 00000450 [4F84010000000000] 
  2144 00000458 E8A46E0100              	call bind_primitive
  2145                                  
  2146                                  	; building closure for vector-set!
  2147 0000045D 48BF-                   	mov rdi, free_var_147
  2147 0000045F [8817000000000000] 
  2148 00000467 48BE-                   	mov rsi, L_code_ptr_vector_set
  2148 00000469 [9C84010000000000] 
  2149 00000471 E88B6E0100              	call bind_primitive
  2150                                  
  2151                                  	; building closure for string-set!
  2152 00000476 48BF-                   	mov rdi, free_var_131
  2152 00000478 [7816000000000000] 
  2153 00000480 48BE-                   	mov rsi, L_code_ptr_string_set
  2153 00000482 [F784010000000000] 
  2154 0000048A E8726E0100              	call bind_primitive
  2155                                  
  2156                                  	; building closure for make-vector
  2157 0000048F 48BF-                   	mov rdi, free_var_101
  2157 00000491 [7A14000000000000] 
  2158 00000499 48BE-                   	mov rsi, L_code_ptr_make_vector
  2158 0000049B [5D85010000000000] 
  2159 000004A3 E8596E0100              	call bind_primitive
  2160                                  
  2161                                  	; building closure for make-string
  2162 000004A8 48BF-                   	mov rdi, free_var_99
  2162 000004AA [5814000000000000] 
  2163 000004B2 48BE-                   	mov rsi, L_code_ptr_make_string
  2163 000004B4 [B885010000000000] 
  2164 000004BC E8406E0100              	call bind_primitive
  2165                                  
  2166                                  	; building closure for eq?
  2167 000004C1 48BF-                   	mov rdi, free_var_80
  2167 000004C3 [1513000000000000] 
  2168 000004CB 48BE-                   	mov rsi, L_code_ptr_is_eq
  2168 000004CD [6D86010000000000] 
  2169 000004D5 E8276E0100              	call bind_primitive
  2170                                  
  2171                                  	; building closure for __integer-to-fraction
  2172 000004DA 48BF-                   	mov rdi, free_var_29
  2172 000004DC [B20F000000000000] 
  2173 000004E4 48BE-                   	mov rsi, L_code_ptr_integer_to_fraction
  2173 000004E6 [E77A010000000000] 
  2174 000004EE E80E6E0100              	call bind_primitive
  2175                                  
  2176 000004F3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2177 000004F8 E8D4650100              	call malloc
  2178 000004FD 50                      	push rax
  2179 000004FE BF00000000              	mov rdi, 8 * 0	; new rib
  2180 00000503 E8C9650100              	call malloc
  2181 00000508 50                      	push rax
  2182 00000509 BF08000000              	mov rdi, 8 * 1	; extended env
  2183 0000050E E8BE650100              	call malloc
  2184 00000513 488B7D10                	mov rdi, ENV
  2185 00000517 BE00000000              	mov rsi, 0
  2186 0000051C BA01000000              	mov rdx, 1
  2187                                  .L_lambda_simple_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  2188 00000521 4883FE00                	cmp rsi, 0
  2189 00000525 7410                    	je .L_lambda_simple_env_end_0001
  2190 00000527 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2191 0000052B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2192 0000052F 48FFC6                  	inc rsi
  2193 00000532 48FFC2                  	inc rdx
  2194 00000535 EBEA                    	jmp .L_lambda_simple_env_loop_0001
  2195                                  .L_lambda_simple_env_end_0001:
  2196 00000537 5B                      	pop rbx
  2197 00000538 BE00000000              	mov rsi, 0
  2198                                  .L_lambda_simple_params_loop_0001:	; copy params
  2199 0000053D 4883FE00                	cmp rsi, 0
  2200 00000541 740E                    	je .L_lambda_simple_params_end_0001
  2201 00000543 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2202 00000548 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2203 0000054C 48FFC6                  	inc rsi
  2204 0000054F EBEC                    	jmp .L_lambda_simple_params_loop_0001
  2205                                  .L_lambda_simple_params_end_0001:
  2206 00000551 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2207 00000554 4889C3                  	mov rbx, rax
  2208 00000557 58                      	pop rax
  2209 00000558 C60004                  	mov byte [rax], T_closure
  2210 0000055B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2211 0000055F 48C74009[6C050000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0001
  2212 00000567 E99C000000              	jmp .L_lambda_simple_end_0001
  2213                                  .L_lambda_simple_code_0001:	; lambda-simple body
  2214 0000056C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2215 00000572 740B                    	je .L_lambda_simple_arity_check_ok_0001
  2216 00000574 FF742410                	push qword [rsp + 8 * 2]
  2217 00000578 6A01                    	push 1
  2218 0000057A E90B650100              	jmp L_error_incorrect_arity_simple
  2219                                  .L_lambda_simple_arity_check_ok_0001:
  2220 0000057F C8000000                	enter 0, 0
  2221                                  	; preparing a tail-call
  2222                                  	; preparing a non-tail-call
  2223 00000583 488B4520                	mov rax, PARAM(0)	; param x
  2224 00000587 50                      	push rax
  2225 00000588 6A01                    	push 1	; arg count
  2226 0000058A 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2227 00000592 803805                  	cmp byte [rax], T_undefined
  2228 00000595 0F8409640100            	je L_error_fvar_undefined
  2229 0000059B 803804                  	cmp byte [rax], T_closure
  2230 0000059E 0F8584640100            	jne L_error_non_closure
  2231 000005A4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2232 000005A7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2233 000005AA 50                      	push rax
  2234 000005AB 6A01                    	push 1	; arg count
  2235 000005AD 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2236 000005B5 803805                  	cmp byte [rax], T_undefined
  2237 000005B8 0F84E6630100            	je L_error_fvar_undefined
  2238 000005BE 803804                  	cmp byte [rax], T_closure
  2239 000005C1 0F8561640100            	jne L_error_non_closure
  2240 000005C7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2241 000005CA FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  2242 000005CD FF7500                  	push qword[rbp]
  2243 000005D0 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  2244 000005D5 48895D10                	mov qword[rbp + 8*2],rbx
  2245 000005D9 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  2246 000005E1 BF00000000              	mov rdi,0
  2247 000005E6 EB00                    	jmp .L_tc_recycle_frame_loop_0001
  2248                                  .L_tc_recycle_frame_loop_0001:
  2249 000005E8 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  2250 000005EC 740F                    	je .L_tc_recycle_frame_done_0001
  2251 000005EE 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  2252 000005F3 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  2253 000005F8 48FFC7                  	inc rdi
  2254 000005FB EBEB                    	jmp .L_tc_recycle_frame_loop_0001
  2255                                  .L_tc_recycle_frame_done_0001:
  2256 000005FD 4889EC                  	mov rsp, rbp	; point to last argument
  2257 00000600 5D                      	pop rbp
  2258 00000601 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2259 00000604 C9                      	leave
  2260 00000605 C21800                  	ret AND_KILL_FRAME(1)
  2261                                  .L_lambda_simple_end_0001:	; new closure is in rax
  2262 00000608 48890425[7E100000]      	mov qword [free_var_41], rax
  2263 00000610 48B8-                   	mov rax, sob_void
  2263 00000612 [0000000000000000] 
  2264                                  
  2265 0000061A 4889C7                  	mov rdi, rax
  2266 0000061D E804670100              	call print_sexpr_if_not_void
  2267 00000622 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2268 00000627 E8A5640100              	call malloc
  2269 0000062C 50                      	push rax
  2270 0000062D BF00000000              	mov rdi, 8 * 0	; new rib
  2271 00000632 E89A640100              	call malloc
  2272 00000637 50                      	push rax
  2273 00000638 BF08000000              	mov rdi, 8 * 1	; extended env
  2274 0000063D E88F640100              	call malloc
  2275 00000642 488B7D10                	mov rdi, ENV
  2276 00000646 BE00000000              	mov rsi, 0
  2277 0000064B BA01000000              	mov rdx, 1
  2278                                  .L_lambda_simple_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  2279 00000650 4883FE00                	cmp rsi, 0
  2280 00000654 7410                    	je .L_lambda_simple_env_end_0002
  2281 00000656 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2282 0000065A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2283 0000065E 48FFC6                  	inc rsi
  2284 00000661 48FFC2                  	inc rdx
  2285 00000664 EBEA                    	jmp .L_lambda_simple_env_loop_0002
  2286                                  .L_lambda_simple_env_end_0002:
  2287 00000666 5B                      	pop rbx
  2288 00000667 BE00000000              	mov rsi, 0
  2289                                  .L_lambda_simple_params_loop_0002:	; copy params
  2290 0000066C 4883FE00                	cmp rsi, 0
  2291 00000670 740E                    	je .L_lambda_simple_params_end_0002
  2292 00000672 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2293 00000677 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2294 0000067B 48FFC6                  	inc rsi
  2295 0000067E EBEC                    	jmp .L_lambda_simple_params_loop_0002
  2296                                  .L_lambda_simple_params_end_0002:
  2297 00000680 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2298 00000683 4889C3                  	mov rbx, rax
  2299 00000686 58                      	pop rax
  2300 00000687 C60004                  	mov byte [rax], T_closure
  2301 0000068A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2302 0000068E 48C74009[9B060000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0002
  2303 00000696 E99C000000              	jmp .L_lambda_simple_end_0002
  2304                                  .L_lambda_simple_code_0002:	; lambda-simple body
  2305 0000069B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2306 000006A1 740B                    	je .L_lambda_simple_arity_check_ok_0002
  2307 000006A3 FF742410                	push qword [rsp + 8 * 2]
  2308 000006A7 6A01                    	push 1
  2309 000006A9 E9DC630100              	jmp L_error_incorrect_arity_simple
  2310                                  .L_lambda_simple_arity_check_ok_0002:
  2311 000006AE C8000000                	enter 0, 0
  2312                                  	; preparing a tail-call
  2313                                  	; preparing a non-tail-call
  2314 000006B2 488B4520                	mov rax, PARAM(0)	; param x
  2315 000006B6 50                      	push rax
  2316 000006B7 6A01                    	push 1	; arg count
  2317 000006B9 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2318 000006C1 803805                  	cmp byte [rax], T_undefined
  2319 000006C4 0F84DA620100            	je L_error_fvar_undefined
  2320 000006CA 803804                  	cmp byte [rax], T_closure
  2321 000006CD 0F8555630100            	jne L_error_non_closure
  2322 000006D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2323 000006D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2324 000006D9 50                      	push rax
  2325 000006DA 6A01                    	push 1	; arg count
  2326 000006DC 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2327 000006E4 803805                  	cmp byte [rax], T_undefined
  2328 000006E7 0F84B7620100            	je L_error_fvar_undefined
  2329 000006ED 803804                  	cmp byte [rax], T_closure
  2330 000006F0 0F8532630100            	jne L_error_non_closure
  2331 000006F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2332 000006F9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  2333 000006FC FF7500                  	push qword[rbp]
  2334 000006FF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  2335 00000704 48895D10                	mov qword[rbp + 8*2],rbx
  2336 00000708 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  2337 00000710 BF00000000              	mov rdi,0
  2338 00000715 EB00                    	jmp .L_tc_recycle_frame_loop_0002
  2339                                  .L_tc_recycle_frame_loop_0002:
  2340 00000717 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  2341 0000071B 740F                    	je .L_tc_recycle_frame_done_0002
  2342 0000071D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  2343 00000722 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  2344 00000727 48FFC7                  	inc rdi
  2345 0000072A EBEB                    	jmp .L_tc_recycle_frame_loop_0002
  2346                                  .L_tc_recycle_frame_done_0002:
  2347 0000072C 4889EC                  	mov rsp, rbp	; point to last argument
  2348 0000072F 5D                      	pop rbp
  2349 00000730 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2350 00000733 C9                      	leave
  2351 00000734 C21800                  	ret AND_KILL_FRAME(1)
  2352                                  .L_lambda_simple_end_0002:	; new closure is in rax
  2353 00000737 48890425[F5100000]      	mov qword [free_var_48], rax
  2354 0000073F 48B8-                   	mov rax, sob_void
  2354 00000741 [0000000000000000] 
  2355                                  
  2356 00000749 4889C7                  	mov rdi, rax
  2357 0000074C E8D5650100              	call print_sexpr_if_not_void
  2358 00000751 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2359 00000756 E876630100              	call malloc
  2360 0000075B 50                      	push rax
  2361 0000075C BF00000000              	mov rdi, 8 * 0	; new rib
  2362 00000761 E86B630100              	call malloc
  2363 00000766 50                      	push rax
  2364 00000767 BF08000000              	mov rdi, 8 * 1	; extended env
  2365 0000076C E860630100              	call malloc
  2366 00000771 488B7D10                	mov rdi, ENV
  2367 00000775 BE00000000              	mov rsi, 0
  2368 0000077A BA01000000              	mov rdx, 1
  2369                                  .L_lambda_simple_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  2370 0000077F 4883FE00                	cmp rsi, 0
  2371 00000783 7410                    	je .L_lambda_simple_env_end_0003
  2372 00000785 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2373 00000789 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2374 0000078D 48FFC6                  	inc rsi
  2375 00000790 48FFC2                  	inc rdx
  2376 00000793 EBEA                    	jmp .L_lambda_simple_env_loop_0003
  2377                                  .L_lambda_simple_env_end_0003:
  2378 00000795 5B                      	pop rbx
  2379 00000796 BE00000000              	mov rsi, 0
  2380                                  .L_lambda_simple_params_loop_0003:	; copy params
  2381 0000079B 4883FE00                	cmp rsi, 0
  2382 0000079F 740E                    	je .L_lambda_simple_params_end_0003
  2383 000007A1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2384 000007A6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2385 000007AA 48FFC6                  	inc rsi
  2386 000007AD EBEC                    	jmp .L_lambda_simple_params_loop_0003
  2387                                  .L_lambda_simple_params_end_0003:
  2388 000007AF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2389 000007B2 4889C3                  	mov rbx, rax
  2390 000007B5 58                      	pop rax
  2391 000007B6 C60004                  	mov byte [rax], T_closure
  2392 000007B9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2393 000007BD 48C74009[CA070000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0003
  2394 000007C5 E99C000000              	jmp .L_lambda_simple_end_0003
  2395                                  .L_lambda_simple_code_0003:	; lambda-simple body
  2396 000007CA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2397 000007D0 740B                    	je .L_lambda_simple_arity_check_ok_0003
  2398 000007D2 FF742410                	push qword [rsp + 8 * 2]
  2399 000007D6 6A01                    	push 1
  2400 000007D8 E9AD620100              	jmp L_error_incorrect_arity_simple
  2401                                  .L_lambda_simple_arity_check_ok_0003:
  2402 000007DD C8000000                	enter 0, 0
  2403                                  	; preparing a tail-call
  2404                                  	; preparing a non-tail-call
  2405 000007E1 488B4520                	mov rax, PARAM(0)	; param x
  2406 000007E5 50                      	push rax
  2407 000007E6 6A01                    	push 1	; arg count
  2408 000007E8 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2409 000007F0 803805                  	cmp byte [rax], T_undefined
  2410 000007F3 0F84AB610100            	je L_error_fvar_undefined
  2411 000007F9 803804                  	cmp byte [rax], T_closure
  2412 000007FC 0F8526620100            	jne L_error_non_closure
  2413 00000802 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2414 00000805 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2415 00000808 50                      	push rax
  2416 00000809 6A01                    	push 1	; arg count
  2417 0000080B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2418 00000813 803805                  	cmp byte [rax], T_undefined
  2419 00000816 0F8488610100            	je L_error_fvar_undefined
  2420 0000081C 803804                  	cmp byte [rax], T_closure
  2421 0000081F 0F8503620100            	jne L_error_non_closure
  2422 00000825 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2423 00000828 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  2424 0000082B FF7500                  	push qword[rbp]
  2425 0000082E 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  2426 00000833 48895D10                	mov qword[rbp + 8*2],rbx
  2427 00000837 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  2428 0000083F BF00000000              	mov rdi,0
  2429 00000844 EB00                    	jmp .L_tc_recycle_frame_loop_0003
  2430                                  .L_tc_recycle_frame_loop_0003:
  2431 00000846 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  2432 0000084A 740F                    	je .L_tc_recycle_frame_done_0003
  2433 0000084C 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  2434 00000851 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  2435 00000856 48FFC7                  	inc rdi
  2436 00000859 EBEB                    	jmp .L_tc_recycle_frame_loop_0003
  2437                                  .L_tc_recycle_frame_done_0003:
  2438 0000085B 4889EC                  	mov rsp, rbp	; point to last argument
  2439 0000085E 5D                      	pop rbp
  2440 0000085F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2441 00000862 C9                      	leave
  2442 00000863 C21800                  	ret AND_KILL_FRAME(1)
  2443                                  .L_lambda_simple_end_0003:	; new closure is in rax
  2444 00000866 48890425[7D110000]      	mov qword [free_var_56], rax
  2445 0000086E 48B8-                   	mov rax, sob_void
  2445 00000870 [0000000000000000] 
  2446                                  
  2447 00000878 4889C7                  	mov rdi, rax
  2448 0000087B E8A6640100              	call print_sexpr_if_not_void
  2449 00000880 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2450 00000885 E847620100              	call malloc
  2451 0000088A 50                      	push rax
  2452 0000088B BF00000000              	mov rdi, 8 * 0	; new rib
  2453 00000890 E83C620100              	call malloc
  2454 00000895 50                      	push rax
  2455 00000896 BF08000000              	mov rdi, 8 * 1	; extended env
  2456 0000089B E831620100              	call malloc
  2457 000008A0 488B7D10                	mov rdi, ENV
  2458 000008A4 BE00000000              	mov rsi, 0
  2459 000008A9 BA01000000              	mov rdx, 1
  2460                                  .L_lambda_simple_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  2461 000008AE 4883FE00                	cmp rsi, 0
  2462 000008B2 7410                    	je .L_lambda_simple_env_end_0004
  2463 000008B4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2464 000008B8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2465 000008BC 48FFC6                  	inc rsi
  2466 000008BF 48FFC2                  	inc rdx
  2467 000008C2 EBEA                    	jmp .L_lambda_simple_env_loop_0004
  2468                                  .L_lambda_simple_env_end_0004:
  2469 000008C4 5B                      	pop rbx
  2470 000008C5 BE00000000              	mov rsi, 0
  2471                                  .L_lambda_simple_params_loop_0004:	; copy params
  2472 000008CA 4883FE00                	cmp rsi, 0
  2473 000008CE 740E                    	je .L_lambda_simple_params_end_0004
  2474 000008D0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2475 000008D5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2476 000008D9 48FFC6                  	inc rsi
  2477 000008DC EBEC                    	jmp .L_lambda_simple_params_loop_0004
  2478                                  .L_lambda_simple_params_end_0004:
  2479 000008DE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2480 000008E1 4889C3                  	mov rbx, rax
  2481 000008E4 58                      	pop rax
  2482 000008E5 C60004                  	mov byte [rax], T_closure
  2483 000008E8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2484 000008EC 48C74009[F9080000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0004
  2485 000008F4 E99C000000              	jmp .L_lambda_simple_end_0004
  2486                                  .L_lambda_simple_code_0004:	; lambda-simple body
  2487 000008F9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2488 000008FF 740B                    	je .L_lambda_simple_arity_check_ok_0004
  2489 00000901 FF742410                	push qword [rsp + 8 * 2]
  2490 00000905 6A01                    	push 1
  2491 00000907 E97E610100              	jmp L_error_incorrect_arity_simple
  2492                                  .L_lambda_simple_arity_check_ok_0004:
  2493 0000090C C8000000                	enter 0, 0
  2494                                  	; preparing a tail-call
  2495                                  	; preparing a non-tail-call
  2496 00000910 488B4520                	mov rax, PARAM(0)	; param x
  2497 00000914 50                      	push rax
  2498 00000915 6A01                    	push 1	; arg count
  2499 00000917 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2500 0000091F 803805                  	cmp byte [rax], T_undefined
  2501 00000922 0F847C600100            	je L_error_fvar_undefined
  2502 00000928 803804                  	cmp byte [rax], T_closure
  2503 0000092B 0F85F7600100            	jne L_error_non_closure
  2504 00000931 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2505 00000934 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2506 00000937 50                      	push rax
  2507 00000938 6A01                    	push 1	; arg count
  2508 0000093A 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2509 00000942 803805                  	cmp byte [rax], T_undefined
  2510 00000945 0F8459600100            	je L_error_fvar_undefined
  2511 0000094B 803804                  	cmp byte [rax], T_closure
  2512 0000094E 0F85D4600100            	jne L_error_non_closure
  2513 00000954 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2514 00000957 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  2515 0000095A FF7500                  	push qword[rbp]
  2516 0000095D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  2517 00000962 48895D10                	mov qword[rbp + 8*2],rbx
  2518 00000966 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  2519 0000096E BF00000000              	mov rdi,0
  2520 00000973 EB00                    	jmp .L_tc_recycle_frame_loop_0004
  2521                                  .L_tc_recycle_frame_loop_0004:
  2522 00000975 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  2523 00000979 740F                    	je .L_tc_recycle_frame_done_0004
  2524 0000097B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  2525 00000980 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  2526 00000985 48FFC7                  	inc rdi
  2527 00000988 EBEB                    	jmp .L_tc_recycle_frame_loop_0004
  2528                                  .L_tc_recycle_frame_done_0004:
  2529 0000098A 4889EC                  	mov rsp, rbp	; point to last argument
  2530 0000098D 5D                      	pop rbp
  2531 0000098E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2532 00000991 C9                      	leave
  2533 00000992 C21800                  	ret AND_KILL_FRAME(1)
  2534                                  .L_lambda_simple_end_0004:	; new closure is in rax
  2535 00000995 48890425[F4110000]      	mov qword [free_var_63], rax
  2536 0000099D 48B8-                   	mov rax, sob_void
  2536 0000099F [0000000000000000] 
  2537                                  
  2538 000009A7 4889C7                  	mov rdi, rax
  2539 000009AA E877630100              	call print_sexpr_if_not_void
  2540 000009AF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2541 000009B4 E818610100              	call malloc
  2542 000009B9 50                      	push rax
  2543 000009BA BF00000000              	mov rdi, 8 * 0	; new rib
  2544 000009BF E80D610100              	call malloc
  2545 000009C4 50                      	push rax
  2546 000009C5 BF08000000              	mov rdi, 8 * 1	; extended env
  2547 000009CA E802610100              	call malloc
  2548 000009CF 488B7D10                	mov rdi, ENV
  2549 000009D3 BE00000000              	mov rsi, 0
  2550 000009D8 BA01000000              	mov rdx, 1
  2551                                  .L_lambda_simple_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  2552 000009DD 4883FE00                	cmp rsi, 0
  2553 000009E1 7410                    	je .L_lambda_simple_env_end_0005
  2554 000009E3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2555 000009E7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2556 000009EB 48FFC6                  	inc rsi
  2557 000009EE 48FFC2                  	inc rdx
  2558 000009F1 EBEA                    	jmp .L_lambda_simple_env_loop_0005
  2559                                  .L_lambda_simple_env_end_0005:
  2560 000009F3 5B                      	pop rbx
  2561 000009F4 BE00000000              	mov rsi, 0
  2562                                  .L_lambda_simple_params_loop_0005:	; copy params
  2563 000009F9 4883FE00                	cmp rsi, 0
  2564 000009FD 740E                    	je .L_lambda_simple_params_end_0005
  2565 000009FF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2566 00000A04 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2567 00000A08 48FFC6                  	inc rsi
  2568 00000A0B EBEC                    	jmp .L_lambda_simple_params_loop_0005
  2569                                  .L_lambda_simple_params_end_0005:
  2570 00000A0D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2571 00000A10 4889C3                  	mov rbx, rax
  2572 00000A13 58                      	pop rax
  2573 00000A14 C60004                  	mov byte [rax], T_closure
  2574 00000A17 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2575 00000A1B 48C74009[280A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0005
  2576 00000A23 E99C000000              	jmp .L_lambda_simple_end_0005
  2577                                  .L_lambda_simple_code_0005:	; lambda-simple body
  2578 00000A28 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2579 00000A2E 740B                    	je .L_lambda_simple_arity_check_ok_0005
  2580 00000A30 FF742410                	push qword [rsp + 8 * 2]
  2581 00000A34 6A01                    	push 1
  2582 00000A36 E94F600100              	jmp L_error_incorrect_arity_simple
  2583                                  .L_lambda_simple_arity_check_ok_0005:
  2584 00000A3B C8000000                	enter 0, 0
  2585                                  	; preparing a tail-call
  2586                                  	; preparing a non-tail-call
  2587 00000A3F 488B4520                	mov rax, PARAM(0)	; param x
  2588 00000A43 50                      	push rax
  2589 00000A44 6A01                    	push 1	; arg count
  2590 00000A46 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  2591 00000A4E 803805                  	cmp byte [rax], T_undefined
  2592 00000A51 0F844D5F0100            	je L_error_fvar_undefined
  2593 00000A57 803804                  	cmp byte [rax], T_closure
  2594 00000A5A 0F85C85F0100            	jne L_error_non_closure
  2595 00000A60 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2596 00000A63 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2597 00000A66 50                      	push rax
  2598 00000A67 6A01                    	push 1	; arg count
  2599 00000A69 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2600 00000A71 803805                  	cmp byte [rax], T_undefined
  2601 00000A74 0F842A5F0100            	je L_error_fvar_undefined
  2602 00000A7A 803804                  	cmp byte [rax], T_closure
  2603 00000A7D 0F85A55F0100            	jne L_error_non_closure
  2604 00000A83 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2605 00000A86 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  2606 00000A89 FF7500                  	push qword[rbp]
  2607 00000A8C 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  2608 00000A91 48895D10                	mov qword[rbp + 8*2],rbx
  2609 00000A95 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  2610 00000A9D BF00000000              	mov rdi,0
  2611 00000AA2 EB00                    	jmp .L_tc_recycle_frame_loop_0005
  2612                                  .L_tc_recycle_frame_loop_0005:
  2613 00000AA4 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  2614 00000AA8 740F                    	je .L_tc_recycle_frame_done_0005
  2615 00000AAA 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  2616 00000AAF 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  2617 00000AB4 48FFC7                  	inc rdi
  2618 00000AB7 EBEB                    	jmp .L_tc_recycle_frame_loop_0005
  2619                                  .L_tc_recycle_frame_done_0005:
  2620 00000AB9 4889EC                  	mov rsp, rbp	; point to last argument
  2621 00000ABC 5D                      	pop rbp
  2622 00000ABD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2623 00000AC0 C9                      	leave
  2624 00000AC1 C21800                  	ret AND_KILL_FRAME(1)
  2625                                  .L_lambda_simple_end_0005:	; new closure is in rax
  2626 00000AC4 48890425[3A100000]      	mov qword [free_var_37], rax
  2627 00000ACC 48B8-                   	mov rax, sob_void
  2627 00000ACE [0000000000000000] 
  2628                                  
  2629 00000AD6 4889C7                  	mov rdi, rax
  2630 00000AD9 E848620100              	call print_sexpr_if_not_void
  2631 00000ADE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2632 00000AE3 E8E95F0100              	call malloc
  2633 00000AE8 50                      	push rax
  2634 00000AE9 BF00000000              	mov rdi, 8 * 0	; new rib
  2635 00000AEE E8DE5F0100              	call malloc
  2636 00000AF3 50                      	push rax
  2637 00000AF4 BF08000000              	mov rdi, 8 * 1	; extended env
  2638 00000AF9 E8D35F0100              	call malloc
  2639 00000AFE 488B7D10                	mov rdi, ENV
  2640 00000B02 BE00000000              	mov rsi, 0
  2641 00000B07 BA01000000              	mov rdx, 1
  2642                                  .L_lambda_simple_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  2643 00000B0C 4883FE00                	cmp rsi, 0
  2644 00000B10 7410                    	je .L_lambda_simple_env_end_0006
  2645 00000B12 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2646 00000B16 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2647 00000B1A 48FFC6                  	inc rsi
  2648 00000B1D 48FFC2                  	inc rdx
  2649 00000B20 EBEA                    	jmp .L_lambda_simple_env_loop_0006
  2650                                  .L_lambda_simple_env_end_0006:
  2651 00000B22 5B                      	pop rbx
  2652 00000B23 BE00000000              	mov rsi, 0
  2653                                  .L_lambda_simple_params_loop_0006:	; copy params
  2654 00000B28 4883FE00                	cmp rsi, 0
  2655 00000B2C 740E                    	je .L_lambda_simple_params_end_0006
  2656 00000B2E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2657 00000B33 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2658 00000B37 48FFC6                  	inc rsi
  2659 00000B3A EBEC                    	jmp .L_lambda_simple_params_loop_0006
  2660                                  .L_lambda_simple_params_end_0006:
  2661 00000B3C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2662 00000B3F 4889C3                  	mov rbx, rax
  2663 00000B42 58                      	pop rax
  2664 00000B43 C60004                  	mov byte [rax], T_closure
  2665 00000B46 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2666 00000B4A 48C74009[570B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0006
  2667 00000B52 E99C000000              	jmp .L_lambda_simple_end_0006
  2668                                  .L_lambda_simple_code_0006:	; lambda-simple body
  2669 00000B57 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2670 00000B5D 740B                    	je .L_lambda_simple_arity_check_ok_0006
  2671 00000B5F FF742410                	push qword [rsp + 8 * 2]
  2672 00000B63 6A01                    	push 1
  2673 00000B65 E9205F0100              	jmp L_error_incorrect_arity_simple
  2674                                  .L_lambda_simple_arity_check_ok_0006:
  2675 00000B6A C8000000                	enter 0, 0
  2676                                  	; preparing a tail-call
  2677                                  	; preparing a non-tail-call
  2678 00000B6E 488B4520                	mov rax, PARAM(0)	; param x
  2679 00000B72 50                      	push rax
  2680 00000B73 6A01                    	push 1	; arg count
  2681 00000B75 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  2682 00000B7D 803805                  	cmp byte [rax], T_undefined
  2683 00000B80 0F841E5E0100            	je L_error_fvar_undefined
  2684 00000B86 803804                  	cmp byte [rax], T_closure
  2685 00000B89 0F85995E0100            	jne L_error_non_closure
  2686 00000B8F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2687 00000B92 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2688 00000B95 50                      	push rax
  2689 00000B96 6A01                    	push 1	; arg count
  2690 00000B98 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2691 00000BA0 803805                  	cmp byte [rax], T_undefined
  2692 00000BA3 0F84FB5D0100            	je L_error_fvar_undefined
  2693 00000BA9 803804                  	cmp byte [rax], T_closure
  2694 00000BAC 0F85765E0100            	jne L_error_non_closure
  2695 00000BB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2696 00000BB5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  2697 00000BB8 FF7500                  	push qword[rbp]
  2698 00000BBB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  2699 00000BC0 48895D10                	mov qword[rbp + 8*2],rbx
  2700 00000BC4 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  2701 00000BCC BF00000000              	mov rdi,0
  2702 00000BD1 EB00                    	jmp .L_tc_recycle_frame_loop_0006
  2703                                  .L_tc_recycle_frame_loop_0006:
  2704 00000BD3 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  2705 00000BD7 740F                    	je .L_tc_recycle_frame_done_0006
  2706 00000BD9 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  2707 00000BDE 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  2708 00000BE3 48FFC7                  	inc rdi
  2709 00000BE6 EBEB                    	jmp .L_tc_recycle_frame_loop_0006
  2710                                  .L_tc_recycle_frame_done_0006:
  2711 00000BE8 4889EC                  	mov rsp, rbp	; point to last argument
  2712 00000BEB 5D                      	pop rbp
  2713 00000BEC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2714 00000BEF C9                      	leave
  2715 00000BF0 C21800                  	ret AND_KILL_FRAME(1)
  2716                                  .L_lambda_simple_end_0006:	; new closure is in rax
  2717 00000BF3 48890425[6D100000]      	mov qword [free_var_40], rax
  2718 00000BFB 48B8-                   	mov rax, sob_void
  2718 00000BFD [0000000000000000] 
  2719                                  
  2720 00000C05 4889C7                  	mov rdi, rax
  2721 00000C08 E819610100              	call print_sexpr_if_not_void
  2722 00000C0D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2723 00000C12 E8BA5E0100              	call malloc
  2724 00000C17 50                      	push rax
  2725 00000C18 BF00000000              	mov rdi, 8 * 0	; new rib
  2726 00000C1D E8AF5E0100              	call malloc
  2727 00000C22 50                      	push rax
  2728 00000C23 BF08000000              	mov rdi, 8 * 1	; extended env
  2729 00000C28 E8A45E0100              	call malloc
  2730 00000C2D 488B7D10                	mov rdi, ENV
  2731 00000C31 BE00000000              	mov rsi, 0
  2732 00000C36 BA01000000              	mov rdx, 1
  2733                                  .L_lambda_simple_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  2734 00000C3B 4883FE00                	cmp rsi, 0
  2735 00000C3F 7410                    	je .L_lambda_simple_env_end_0007
  2736 00000C41 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2737 00000C45 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2738 00000C49 48FFC6                  	inc rsi
  2739 00000C4C 48FFC2                  	inc rdx
  2740 00000C4F EBEA                    	jmp .L_lambda_simple_env_loop_0007
  2741                                  .L_lambda_simple_env_end_0007:
  2742 00000C51 5B                      	pop rbx
  2743 00000C52 BE00000000              	mov rsi, 0
  2744                                  .L_lambda_simple_params_loop_0007:	; copy params
  2745 00000C57 4883FE00                	cmp rsi, 0
  2746 00000C5B 740E                    	je .L_lambda_simple_params_end_0007
  2747 00000C5D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2748 00000C62 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2749 00000C66 48FFC6                  	inc rsi
  2750 00000C69 EBEC                    	jmp .L_lambda_simple_params_loop_0007
  2751                                  .L_lambda_simple_params_end_0007:
  2752 00000C6B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2753 00000C6E 4889C3                  	mov rbx, rax
  2754 00000C71 58                      	pop rax
  2755 00000C72 C60004                  	mov byte [rax], T_closure
  2756 00000C75 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2757 00000C79 48C74009[860C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0007
  2758 00000C81 E99C000000              	jmp .L_lambda_simple_end_0007
  2759                                  .L_lambda_simple_code_0007:	; lambda-simple body
  2760 00000C86 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2761 00000C8C 740B                    	je .L_lambda_simple_arity_check_ok_0007
  2762 00000C8E FF742410                	push qword [rsp + 8 * 2]
  2763 00000C92 6A01                    	push 1
  2764 00000C94 E9F15D0100              	jmp L_error_incorrect_arity_simple
  2765                                  .L_lambda_simple_arity_check_ok_0007:
  2766 00000C99 C8000000                	enter 0, 0
  2767                                  	; preparing a tail-call
  2768                                  	; preparing a non-tail-call
  2769 00000C9D 488B4520                	mov rax, PARAM(0)	; param x
  2770 00000CA1 50                      	push rax
  2771 00000CA2 6A01                    	push 1	; arg count
  2772 00000CA4 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  2773 00000CAC 803805                  	cmp byte [rax], T_undefined
  2774 00000CAF 0F84EF5C0100            	je L_error_fvar_undefined
  2775 00000CB5 803804                  	cmp byte [rax], T_closure
  2776 00000CB8 0F856A5D0100            	jne L_error_non_closure
  2777 00000CBE FF7001                  	push SOB_CLOSURE_ENV(rax)
  2778 00000CC1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2779 00000CC4 50                      	push rax
  2780 00000CC5 6A01                    	push 1	; arg count
  2781 00000CC7 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2782 00000CCF 803805                  	cmp byte [rax], T_undefined
  2783 00000CD2 0F84CC5C0100            	je L_error_fvar_undefined
  2784 00000CD8 803804                  	cmp byte [rax], T_closure
  2785 00000CDB 0F85475D0100            	jne L_error_non_closure
  2786 00000CE1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2787 00000CE4 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  2788 00000CE7 FF7500                  	push qword[rbp]
  2789 00000CEA 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  2790 00000CEF 48895D10                	mov qword[rbp + 8*2],rbx
  2791 00000CF3 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  2792 00000CFB BF00000000              	mov rdi,0
  2793 00000D00 EB00                    	jmp .L_tc_recycle_frame_loop_0007
  2794                                  .L_tc_recycle_frame_loop_0007:
  2795 00000D02 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  2796 00000D06 740F                    	je .L_tc_recycle_frame_done_0007
  2797 00000D08 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  2798 00000D0D 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  2799 00000D12 48FFC7                  	inc rdi
  2800 00000D15 EBEB                    	jmp .L_tc_recycle_frame_loop_0007
  2801                                  .L_tc_recycle_frame_done_0007:
  2802 00000D17 4889EC                  	mov rsp, rbp	; point to last argument
  2803 00000D1A 5D                      	pop rbp
  2804 00000D1B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2805 00000D1E C9                      	leave
  2806 00000D1F C21800                  	ret AND_KILL_FRAME(1)
  2807                                  .L_lambda_simple_end_0007:	; new closure is in rax
  2808 00000D22 48890425[B1100000]      	mov qword [free_var_44], rax
  2809 00000D2A 48B8-                   	mov rax, sob_void
  2809 00000D2C [0000000000000000] 
  2810                                  
  2811 00000D34 4889C7                  	mov rdi, rax
  2812 00000D37 E8EA5F0100              	call print_sexpr_if_not_void
  2813 00000D3C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2814 00000D41 E88B5D0100              	call malloc
  2815 00000D46 50                      	push rax
  2816 00000D47 BF00000000              	mov rdi, 8 * 0	; new rib
  2817 00000D4C E8805D0100              	call malloc
  2818 00000D51 50                      	push rax
  2819 00000D52 BF08000000              	mov rdi, 8 * 1	; extended env
  2820 00000D57 E8755D0100              	call malloc
  2821 00000D5C 488B7D10                	mov rdi, ENV
  2822 00000D60 BE00000000              	mov rsi, 0
  2823 00000D65 BA01000000              	mov rdx, 1
  2824                                  .L_lambda_simple_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  2825 00000D6A 4883FE00                	cmp rsi, 0
  2826 00000D6E 7410                    	je .L_lambda_simple_env_end_0008
  2827 00000D70 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2828 00000D74 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2829 00000D78 48FFC6                  	inc rsi
  2830 00000D7B 48FFC2                  	inc rdx
  2831 00000D7E EBEA                    	jmp .L_lambda_simple_env_loop_0008
  2832                                  .L_lambda_simple_env_end_0008:
  2833 00000D80 5B                      	pop rbx
  2834 00000D81 BE00000000              	mov rsi, 0
  2835                                  .L_lambda_simple_params_loop_0008:	; copy params
  2836 00000D86 4883FE00                	cmp rsi, 0
  2837 00000D8A 740E                    	je .L_lambda_simple_params_end_0008
  2838 00000D8C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2839 00000D91 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2840 00000D95 48FFC6                  	inc rsi
  2841 00000D98 EBEC                    	jmp .L_lambda_simple_params_loop_0008
  2842                                  .L_lambda_simple_params_end_0008:
  2843 00000D9A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2844 00000D9D 4889C3                  	mov rbx, rax
  2845 00000DA0 58                      	pop rax
  2846 00000DA1 C60004                  	mov byte [rax], T_closure
  2847 00000DA4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2848 00000DA8 48C74009[B50D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0008
  2849 00000DB0 E99C000000              	jmp .L_lambda_simple_end_0008
  2850                                  .L_lambda_simple_code_0008:	; lambda-simple body
  2851 00000DB5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2852 00000DBB 740B                    	je .L_lambda_simple_arity_check_ok_0008
  2853 00000DBD FF742410                	push qword [rsp + 8 * 2]
  2854 00000DC1 6A01                    	push 1
  2855 00000DC3 E9C25C0100              	jmp L_error_incorrect_arity_simple
  2856                                  .L_lambda_simple_arity_check_ok_0008:
  2857 00000DC8 C8000000                	enter 0, 0
  2858                                  	; preparing a tail-call
  2859                                  	; preparing a non-tail-call
  2860 00000DCC 488B4520                	mov rax, PARAM(0)	; param x
  2861 00000DD0 50                      	push rax
  2862 00000DD1 6A01                    	push 1	; arg count
  2863 00000DD3 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  2864 00000DDB 803805                  	cmp byte [rax], T_undefined
  2865 00000DDE 0F84C05B0100            	je L_error_fvar_undefined
  2866 00000DE4 803804                  	cmp byte [rax], T_closure
  2867 00000DE7 0F853B5C0100            	jne L_error_non_closure
  2868 00000DED FF7001                  	push SOB_CLOSURE_ENV(rax)
  2869 00000DF0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  2870 00000DF3 50                      	push rax
  2871 00000DF4 6A01                    	push 1	; arg count
  2872 00000DF6 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  2873 00000DFE 803805                  	cmp byte [rax], T_undefined
  2874 00000E01 0F849D5B0100            	je L_error_fvar_undefined
  2875 00000E07 803804                  	cmp byte [rax], T_closure
  2876 00000E0A 0F85185C0100            	jne L_error_non_closure
  2877 00000E10 FF7001                  	push SOB_CLOSURE_ENV(rax)
  2878 00000E13 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  2879 00000E16 FF7500                  	push qword[rbp]
  2880 00000E19 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  2881 00000E1E 48895D10                	mov qword[rbp + 8*2],rbx
  2882 00000E22 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  2883 00000E2A BF00000000              	mov rdi,0
  2884 00000E2F EB00                    	jmp .L_tc_recycle_frame_loop_0008
  2885                                  .L_tc_recycle_frame_loop_0008:
  2886 00000E31 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  2887 00000E35 740F                    	je .L_tc_recycle_frame_done_0008
  2888 00000E37 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  2889 00000E3C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  2890 00000E41 48FFC7                  	inc rdi
  2891 00000E44 EBEB                    	jmp .L_tc_recycle_frame_loop_0008
  2892                                  .L_tc_recycle_frame_done_0008:
  2893 00000E46 4889EC                  	mov rsp, rbp	; point to last argument
  2894 00000E49 5D                      	pop rbp
  2895 00000E4A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2896 00000E4D C9                      	leave
  2897 00000E4E C21800                  	ret AND_KILL_FRAME(1)
  2898                                  .L_lambda_simple_end_0008:	; new closure is in rax
  2899 00000E51 48890425[E4100000]      	mov qword [free_var_47], rax
  2900 00000E59 48B8-                   	mov rax, sob_void
  2900 00000E5B [0000000000000000] 
  2901                                  
  2902 00000E63 4889C7                  	mov rdi, rax
  2903 00000E66 E8BB5E0100              	call print_sexpr_if_not_void
  2904 00000E6B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2905 00000E70 E85C5C0100              	call malloc
  2906 00000E75 50                      	push rax
  2907 00000E76 BF00000000              	mov rdi, 8 * 0	; new rib
  2908 00000E7B E8515C0100              	call malloc
  2909 00000E80 50                      	push rax
  2910 00000E81 BF08000000              	mov rdi, 8 * 1	; extended env
  2911 00000E86 E8465C0100              	call malloc
  2912 00000E8B 488B7D10                	mov rdi, ENV
  2913 00000E8F BE00000000              	mov rsi, 0
  2914 00000E94 BA01000000              	mov rdx, 1
  2915                                  .L_lambda_simple_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  2916 00000E99 4883FE00                	cmp rsi, 0
  2917 00000E9D 7410                    	je .L_lambda_simple_env_end_0009
  2918 00000E9F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  2919 00000EA3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  2920 00000EA7 48FFC6                  	inc rsi
  2921 00000EAA 48FFC2                  	inc rdx
  2922 00000EAD EBEA                    	jmp .L_lambda_simple_env_loop_0009
  2923                                  .L_lambda_simple_env_end_0009:
  2924 00000EAF 5B                      	pop rbx
  2925 00000EB0 BE00000000              	mov rsi, 0
  2926                                  .L_lambda_simple_params_loop_0009:	; copy params
  2927 00000EB5 4883FE00                	cmp rsi, 0
  2928 00000EB9 740E                    	je .L_lambda_simple_params_end_0009
  2929 00000EBB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  2930 00000EC0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  2931 00000EC4 48FFC6                  	inc rsi
  2932 00000EC7 EBEC                    	jmp .L_lambda_simple_params_loop_0009
  2933                                  .L_lambda_simple_params_end_0009:
  2934 00000EC9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  2935 00000ECC 4889C3                  	mov rbx, rax
  2936 00000ECF 58                      	pop rax
  2937 00000ED0 C60004                  	mov byte [rax], T_closure
  2938 00000ED3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  2939 00000ED7 48C74009[E40E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0009
  2940 00000EDF E99C000000              	jmp .L_lambda_simple_end_0009
  2941                                  .L_lambda_simple_code_0009:	; lambda-simple body
  2942 00000EE4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  2943 00000EEA 740B                    	je .L_lambda_simple_arity_check_ok_0009
  2944 00000EEC FF742410                	push qword [rsp + 8 * 2]
  2945 00000EF0 6A01                    	push 1
  2946 00000EF2 E9935B0100              	jmp L_error_incorrect_arity_simple
  2947                                  .L_lambda_simple_arity_check_ok_0009:
  2948 00000EF7 C8000000                	enter 0, 0
  2949                                  	; preparing a tail-call
  2950                                  	; preparing a non-tail-call
  2951 00000EFB 488B4520                	mov rax, PARAM(0)	; param x
  2952 00000EFF 50                      	push rax
  2953 00000F00 6A01                    	push 1	; arg count
  2954 00000F02 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  2955 00000F0A 803805                  	cmp byte [rax], T_undefined
  2956 00000F0D 0F84915A0100            	je L_error_fvar_undefined
  2957 00000F13 803804                  	cmp byte [rax], T_closure
  2958 00000F16 0F850C5B0100            	jne L_error_non_closure
  2959 00000F1C FF7001                  	push SOB_CLOSURE_ENV(rax)
  2960 00000F1F FF5009                  	call SOB_CLOSURE_CODE(rax)
  2961 00000F22 50                      	push rax
  2962 00000F23 6A01                    	push 1	; arg count
  2963 00000F25 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  2964 00000F2D 803805                  	cmp byte [rax], T_undefined
  2965 00000F30 0F846E5A0100            	je L_error_fvar_undefined
  2966 00000F36 803804                  	cmp byte [rax], T_closure
  2967 00000F39 0F85E95A0100            	jne L_error_non_closure
  2968 00000F3F FF7001                  	push SOB_CLOSURE_ENV(rax)
  2969 00000F42 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  2970 00000F45 FF7500                  	push qword[rbp]
  2971 00000F48 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  2972 00000F4D 48895D10                	mov qword[rbp + 8*2],rbx
  2973 00000F51 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  2974 00000F59 BF00000000              	mov rdi,0
  2975 00000F5E EB00                    	jmp .L_tc_recycle_frame_loop_0009
  2976                                  .L_tc_recycle_frame_loop_0009:
  2977 00000F60 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  2978 00000F64 740F                    	je .L_tc_recycle_frame_done_0009
  2979 00000F66 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  2980 00000F6B 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  2981 00000F70 48FFC7                  	inc rdi
  2982 00000F73 EBEB                    	jmp .L_tc_recycle_frame_loop_0009
  2983                                  .L_tc_recycle_frame_done_0009:
  2984 00000F75 4889EC                  	mov rsp, rbp	; point to last argument
  2985 00000F78 5D                      	pop rbp
  2986 00000F79 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  2987 00000F7C C9                      	leave
  2988 00000F7D C21800                  	ret AND_KILL_FRAME(1)
  2989                                  .L_lambda_simple_end_0009:	; new closure is in rax
  2990 00000F80 48890425[39110000]      	mov qword [free_var_52], rax
  2991 00000F88 48B8-                   	mov rax, sob_void
  2991 00000F8A [0000000000000000] 
  2992                                  
  2993 00000F92 4889C7                  	mov rdi, rax
  2994 00000F95 E88C5D0100              	call print_sexpr_if_not_void
  2995 00000F9A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  2996 00000F9F E82D5B0100              	call malloc
  2997 00000FA4 50                      	push rax
  2998 00000FA5 BF00000000              	mov rdi, 8 * 0	; new rib
  2999 00000FAA E8225B0100              	call malloc
  3000 00000FAF 50                      	push rax
  3001 00000FB0 BF08000000              	mov rdi, 8 * 1	; extended env
  3002 00000FB5 E8175B0100              	call malloc
  3003 00000FBA 488B7D10                	mov rdi, ENV
  3004 00000FBE BE00000000              	mov rsi, 0
  3005 00000FC3 BA01000000              	mov rdx, 1
  3006                                  .L_lambda_simple_env_loop_000a:	; ext_env[i + 1] <-- env[i]
  3007 00000FC8 4883FE00                	cmp rsi, 0
  3008 00000FCC 7410                    	je .L_lambda_simple_env_end_000a
  3009 00000FCE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3010 00000FD2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3011 00000FD6 48FFC6                  	inc rsi
  3012 00000FD9 48FFC2                  	inc rdx
  3013 00000FDC EBEA                    	jmp .L_lambda_simple_env_loop_000a
  3014                                  .L_lambda_simple_env_end_000a:
  3015 00000FDE 5B                      	pop rbx
  3016 00000FDF BE00000000              	mov rsi, 0
  3017                                  .L_lambda_simple_params_loop_000a:	; copy params
  3018 00000FE4 4883FE00                	cmp rsi, 0
  3019 00000FE8 740E                    	je .L_lambda_simple_params_end_000a
  3020 00000FEA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3021 00000FEF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3022 00000FF3 48FFC6                  	inc rsi
  3023 00000FF6 EBEC                    	jmp .L_lambda_simple_params_loop_000a
  3024                                  .L_lambda_simple_params_end_000a:
  3025 00000FF8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3026 00000FFB 4889C3                  	mov rbx, rax
  3027 00000FFE 58                      	pop rax
  3028 00000FFF C60004                  	mov byte [rax], T_closure
  3029 00001002 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3030 00001006 48C74009[13100000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000a
  3031 0000100E E99C000000              	jmp .L_lambda_simple_end_000a
  3032                                  .L_lambda_simple_code_000a:	; lambda-simple body
  3033 00001013 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3034 00001019 740B                    	je .L_lambda_simple_arity_check_ok_000a
  3035 0000101B FF742410                	push qword [rsp + 8 * 2]
  3036 0000101F 6A01                    	push 1
  3037 00001021 E9645A0100              	jmp L_error_incorrect_arity_simple
  3038                                  .L_lambda_simple_arity_check_ok_000a:
  3039 00001026 C8000000                	enter 0, 0
  3040                                  	; preparing a tail-call
  3041                                  	; preparing a non-tail-call
  3042 0000102A 488B4520                	mov rax, PARAM(0)	; param x
  3043 0000102E 50                      	push rax
  3044 0000102F 6A01                    	push 1	; arg count
  3045 00001031 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3046 00001039 803805                  	cmp byte [rax], T_undefined
  3047 0000103C 0F8462590100            	je L_error_fvar_undefined
  3048 00001042 803804                  	cmp byte [rax], T_closure
  3049 00001045 0F85DD590100            	jne L_error_non_closure
  3050 0000104B FF7001                  	push SOB_CLOSURE_ENV(rax)
  3051 0000104E FF5009                  	call SOB_CLOSURE_CODE(rax)
  3052 00001051 50                      	push rax
  3053 00001052 6A01                    	push 1	; arg count
  3054 00001054 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3055 0000105C 803805                  	cmp byte [rax], T_undefined
  3056 0000105F 0F843F590100            	je L_error_fvar_undefined
  3057 00001065 803804                  	cmp byte [rax], T_closure
  3058 00001068 0F85BA590100            	jne L_error_non_closure
  3059 0000106E FF7001                  	push SOB_CLOSURE_ENV(rax)
  3060 00001071 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  3061 00001074 FF7500                  	push qword[rbp]
  3062 00001077 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  3063 0000107C 48895D10                	mov qword[rbp + 8*2],rbx
  3064 00001080 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  3065 00001088 BF00000000              	mov rdi,0
  3066 0000108D EB00                    	jmp .L_tc_recycle_frame_loop_000a
  3067                                  .L_tc_recycle_frame_loop_000a:
  3068 0000108F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  3069 00001093 740F                    	je .L_tc_recycle_frame_done_000a
  3070 00001095 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  3071 0000109A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  3072 0000109F 48FFC7                  	inc rdi
  3073 000010A2 EBEB                    	jmp .L_tc_recycle_frame_loop_000a
  3074                                  .L_tc_recycle_frame_done_000a:
  3075 000010A4 4889EC                  	mov rsp, rbp	; point to last argument
  3076 000010A7 5D                      	pop rbp
  3077 000010A8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3078 000010AB C9                      	leave
  3079 000010AC C21800                  	ret AND_KILL_FRAME(1)
  3080                                  .L_lambda_simple_end_000a:	; new closure is in rax
  3081 000010AF 48890425[6C110000]      	mov qword [free_var_55], rax
  3082 000010B7 48B8-                   	mov rax, sob_void
  3082 000010B9 [0000000000000000] 
  3083                                  
  3084 000010C1 4889C7                  	mov rdi, rax
  3085 000010C4 E85D5C0100              	call print_sexpr_if_not_void
  3086 000010C9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3087 000010CE E8FE590100              	call malloc
  3088 000010D3 50                      	push rax
  3089 000010D4 BF00000000              	mov rdi, 8 * 0	; new rib
  3090 000010D9 E8F3590100              	call malloc
  3091 000010DE 50                      	push rax
  3092 000010DF BF08000000              	mov rdi, 8 * 1	; extended env
  3093 000010E4 E8E8590100              	call malloc
  3094 000010E9 488B7D10                	mov rdi, ENV
  3095 000010ED BE00000000              	mov rsi, 0
  3096 000010F2 BA01000000              	mov rdx, 1
  3097                                  .L_lambda_simple_env_loop_000b:	; ext_env[i + 1] <-- env[i]
  3098 000010F7 4883FE00                	cmp rsi, 0
  3099 000010FB 7410                    	je .L_lambda_simple_env_end_000b
  3100 000010FD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3101 00001101 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3102 00001105 48FFC6                  	inc rsi
  3103 00001108 48FFC2                  	inc rdx
  3104 0000110B EBEA                    	jmp .L_lambda_simple_env_loop_000b
  3105                                  .L_lambda_simple_env_end_000b:
  3106 0000110D 5B                      	pop rbx
  3107 0000110E BE00000000              	mov rsi, 0
  3108                                  .L_lambda_simple_params_loop_000b:	; copy params
  3109 00001113 4883FE00                	cmp rsi, 0
  3110 00001117 740E                    	je .L_lambda_simple_params_end_000b
  3111 00001119 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3112 0000111E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3113 00001122 48FFC6                  	inc rsi
  3114 00001125 EBEC                    	jmp .L_lambda_simple_params_loop_000b
  3115                                  .L_lambda_simple_params_end_000b:
  3116 00001127 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3117 0000112A 4889C3                  	mov rbx, rax
  3118 0000112D 58                      	pop rax
  3119 0000112E C60004                  	mov byte [rax], T_closure
  3120 00001131 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3121 00001135 48C74009[42110000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000b
  3122 0000113D E99C000000              	jmp .L_lambda_simple_end_000b
  3123                                  .L_lambda_simple_code_000b:	; lambda-simple body
  3124 00001142 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3125 00001148 740B                    	je .L_lambda_simple_arity_check_ok_000b
  3126 0000114A FF742410                	push qword [rsp + 8 * 2]
  3127 0000114E 6A01                    	push 1
  3128 00001150 E935590100              	jmp L_error_incorrect_arity_simple
  3129                                  .L_lambda_simple_arity_check_ok_000b:
  3130 00001155 C8000000                	enter 0, 0
  3131                                  	; preparing a tail-call
  3132                                  	; preparing a non-tail-call
  3133 00001159 488B4520                	mov rax, PARAM(0)	; param x
  3134 0000115D 50                      	push rax
  3135 0000115E 6A01                    	push 1	; arg count
  3136 00001160 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3137 00001168 803805                  	cmp byte [rax], T_undefined
  3138 0000116B 0F8433580100            	je L_error_fvar_undefined
  3139 00001171 803804                  	cmp byte [rax], T_closure
  3140 00001174 0F85AE580100            	jne L_error_non_closure
  3141 0000117A FF7001                  	push SOB_CLOSURE_ENV(rax)
  3142 0000117D FF5009                  	call SOB_CLOSURE_CODE(rax)
  3143 00001180 50                      	push rax
  3144 00001181 6A01                    	push 1	; arg count
  3145 00001183 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3146 0000118B 803805                  	cmp byte [rax], T_undefined
  3147 0000118E 0F8410580100            	je L_error_fvar_undefined
  3148 00001194 803804                  	cmp byte [rax], T_closure
  3149 00001197 0F858B580100            	jne L_error_non_closure
  3150 0000119D FF7001                  	push SOB_CLOSURE_ENV(rax)
  3151 000011A0 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  3152 000011A3 FF7500                  	push qword[rbp]
  3153 000011A6 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  3154 000011AB 48895D10                	mov qword[rbp + 8*2],rbx
  3155 000011AF 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  3156 000011B7 BF00000000              	mov rdi,0
  3157 000011BC EB00                    	jmp .L_tc_recycle_frame_loop_000b
  3158                                  .L_tc_recycle_frame_loop_000b:
  3159 000011BE 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  3160 000011C2 740F                    	je .L_tc_recycle_frame_done_000b
  3161 000011C4 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  3162 000011C9 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  3163 000011CE 48FFC7                  	inc rdi
  3164 000011D1 EBEB                    	jmp .L_tc_recycle_frame_loop_000b
  3165                                  .L_tc_recycle_frame_done_000b:
  3166 000011D3 4889EC                  	mov rsp, rbp	; point to last argument
  3167 000011D6 5D                      	pop rbp
  3168 000011D7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3169 000011DA C9                      	leave
  3170 000011DB C21800                  	ret AND_KILL_FRAME(1)
  3171                                  .L_lambda_simple_end_000b:	; new closure is in rax
  3172 000011DE 48890425[B0110000]      	mov qword [free_var_59], rax
  3173 000011E6 48B8-                   	mov rax, sob_void
  3173 000011E8 [0000000000000000] 
  3174                                  
  3175 000011F0 4889C7                  	mov rdi, rax
  3176 000011F3 E82E5B0100              	call print_sexpr_if_not_void
  3177 000011F8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3178 000011FD E8CF580100              	call malloc
  3179 00001202 50                      	push rax
  3180 00001203 BF00000000              	mov rdi, 8 * 0	; new rib
  3181 00001208 E8C4580100              	call malloc
  3182 0000120D 50                      	push rax
  3183 0000120E BF08000000              	mov rdi, 8 * 1	; extended env
  3184 00001213 E8B9580100              	call malloc
  3185 00001218 488B7D10                	mov rdi, ENV
  3186 0000121C BE00000000              	mov rsi, 0
  3187 00001221 BA01000000              	mov rdx, 1
  3188                                  .L_lambda_simple_env_loop_000c:	; ext_env[i + 1] <-- env[i]
  3189 00001226 4883FE00                	cmp rsi, 0
  3190 0000122A 7410                    	je .L_lambda_simple_env_end_000c
  3191 0000122C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3192 00001230 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3193 00001234 48FFC6                  	inc rsi
  3194 00001237 48FFC2                  	inc rdx
  3195 0000123A EBEA                    	jmp .L_lambda_simple_env_loop_000c
  3196                                  .L_lambda_simple_env_end_000c:
  3197 0000123C 5B                      	pop rbx
  3198 0000123D BE00000000              	mov rsi, 0
  3199                                  .L_lambda_simple_params_loop_000c:	; copy params
  3200 00001242 4883FE00                	cmp rsi, 0
  3201 00001246 740E                    	je .L_lambda_simple_params_end_000c
  3202 00001248 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3203 0000124D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3204 00001251 48FFC6                  	inc rsi
  3205 00001254 EBEC                    	jmp .L_lambda_simple_params_loop_000c
  3206                                  .L_lambda_simple_params_end_000c:
  3207 00001256 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3208 00001259 4889C3                  	mov rbx, rax
  3209 0000125C 58                      	pop rax
  3210 0000125D C60004                  	mov byte [rax], T_closure
  3211 00001260 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3212 00001264 48C74009[71120000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000c
  3213 0000126C E99C000000              	jmp .L_lambda_simple_end_000c
  3214                                  .L_lambda_simple_code_000c:	; lambda-simple body
  3215 00001271 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3216 00001277 740B                    	je .L_lambda_simple_arity_check_ok_000c
  3217 00001279 FF742410                	push qword [rsp + 8 * 2]
  3218 0000127D 6A01                    	push 1
  3219 0000127F E906580100              	jmp L_error_incorrect_arity_simple
  3220                                  .L_lambda_simple_arity_check_ok_000c:
  3221 00001284 C8000000                	enter 0, 0
  3222                                  	; preparing a tail-call
  3223                                  	; preparing a non-tail-call
  3224 00001288 488B4520                	mov rax, PARAM(0)	; param x
  3225 0000128C 50                      	push rax
  3226 0000128D 6A01                    	push 1	; arg count
  3227 0000128F 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3228 00001297 803805                  	cmp byte [rax], T_undefined
  3229 0000129A 0F8404570100            	je L_error_fvar_undefined
  3230 000012A0 803804                  	cmp byte [rax], T_closure
  3231 000012A3 0F857F570100            	jne L_error_non_closure
  3232 000012A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3233 000012AC FF5009                  	call SOB_CLOSURE_CODE(rax)
  3234 000012AF 50                      	push rax
  3235 000012B0 6A01                    	push 1	; arg count
  3236 000012B2 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  3237 000012BA 803805                  	cmp byte [rax], T_undefined
  3238 000012BD 0F84E1560100            	je L_error_fvar_undefined
  3239 000012C3 803804                  	cmp byte [rax], T_closure
  3240 000012C6 0F855C570100            	jne L_error_non_closure
  3241 000012CC FF7001                  	push SOB_CLOSURE_ENV(rax)
  3242 000012CF FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  3243 000012D2 FF7500                  	push qword[rbp]
  3244 000012D5 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  3245 000012DA 48895D10                	mov qword[rbp + 8*2],rbx
  3246 000012DE 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  3247 000012E6 BF00000000              	mov rdi,0
  3248 000012EB EB00                    	jmp .L_tc_recycle_frame_loop_000c
  3249                                  .L_tc_recycle_frame_loop_000c:
  3250 000012ED 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  3251 000012F1 740F                    	je .L_tc_recycle_frame_done_000c
  3252 000012F3 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  3253 000012F8 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  3254 000012FD 48FFC7                  	inc rdi
  3255 00001300 EBEB                    	jmp .L_tc_recycle_frame_loop_000c
  3256                                  .L_tc_recycle_frame_done_000c:
  3257 00001302 4889EC                  	mov rsp, rbp	; point to last argument
  3258 00001305 5D                      	pop rbp
  3259 00001306 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3260 00001309 C9                      	leave
  3261 0000130A C21800                  	ret AND_KILL_FRAME(1)
  3262                                  .L_lambda_simple_end_000c:	; new closure is in rax
  3263 0000130D 48890425[E3110000]      	mov qword [free_var_62], rax
  3264 00001315 48B8-                   	mov rax, sob_void
  3264 00001317 [0000000000000000] 
  3265                                  
  3266 0000131F 4889C7                  	mov rdi, rax
  3267 00001322 E8FF590100              	call print_sexpr_if_not_void
  3268 00001327 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3269 0000132C E8A0570100              	call malloc
  3270 00001331 50                      	push rax
  3271 00001332 BF00000000              	mov rdi, 8 * 0	; new rib
  3272 00001337 E895570100              	call malloc
  3273 0000133C 50                      	push rax
  3274 0000133D BF08000000              	mov rdi, 8 * 1	; extended env
  3275 00001342 E88A570100              	call malloc
  3276 00001347 488B7D10                	mov rdi, ENV
  3277 0000134B BE00000000              	mov rsi, 0
  3278 00001350 BA01000000              	mov rdx, 1
  3279                                  .L_lambda_simple_env_loop_000d:	; ext_env[i + 1] <-- env[i]
  3280 00001355 4883FE00                	cmp rsi, 0
  3281 00001359 7410                    	je .L_lambda_simple_env_end_000d
  3282 0000135B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3283 0000135F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3284 00001363 48FFC6                  	inc rsi
  3285 00001366 48FFC2                  	inc rdx
  3286 00001369 EBEA                    	jmp .L_lambda_simple_env_loop_000d
  3287                                  .L_lambda_simple_env_end_000d:
  3288 0000136B 5B                      	pop rbx
  3289 0000136C BE00000000              	mov rsi, 0
  3290                                  .L_lambda_simple_params_loop_000d:	; copy params
  3291 00001371 4883FE00                	cmp rsi, 0
  3292 00001375 740E                    	je .L_lambda_simple_params_end_000d
  3293 00001377 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3294 0000137C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3295 00001380 48FFC6                  	inc rsi
  3296 00001383 EBEC                    	jmp .L_lambda_simple_params_loop_000d
  3297                                  .L_lambda_simple_params_end_000d:
  3298 00001385 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3299 00001388 4889C3                  	mov rbx, rax
  3300 0000138B 58                      	pop rax
  3301 0000138C C60004                  	mov byte [rax], T_closure
  3302 0000138F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3303 00001393 48C74009[A0130000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000d
  3304 0000139B E99C000000              	jmp .L_lambda_simple_end_000d
  3305                                  .L_lambda_simple_code_000d:	; lambda-simple body
  3306 000013A0 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3307 000013A6 740B                    	je .L_lambda_simple_arity_check_ok_000d
  3308 000013A8 FF742410                	push qword [rsp + 8 * 2]
  3309 000013AC 6A01                    	push 1
  3310 000013AE E9D7560100              	jmp L_error_incorrect_arity_simple
  3311                                  .L_lambda_simple_arity_check_ok_000d:
  3312 000013B3 C8000000                	enter 0, 0
  3313                                  	; preparing a tail-call
  3314                                  	; preparing a non-tail-call
  3315 000013B7 488B4520                	mov rax, PARAM(0)	; param x
  3316 000013BB 50                      	push rax
  3317 000013BC 6A01                    	push 1	; arg count
  3318 000013BE 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3319 000013C6 803805                  	cmp byte [rax], T_undefined
  3320 000013C9 0F84D5550100            	je L_error_fvar_undefined
  3321 000013CF 803804                  	cmp byte [rax], T_closure
  3322 000013D2 0F8550560100            	jne L_error_non_closure
  3323 000013D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3324 000013DB FF5009                  	call SOB_CLOSURE_CODE(rax)
  3325 000013DE 50                      	push rax
  3326 000013DF 6A01                    	push 1	; arg count
  3327 000013E1 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3328 000013E9 803805                  	cmp byte [rax], T_undefined
  3329 000013EC 0F84B2550100            	je L_error_fvar_undefined
  3330 000013F2 803804                  	cmp byte [rax], T_closure
  3331 000013F5 0F852D560100            	jne L_error_non_closure
  3332 000013FB FF7001                  	push SOB_CLOSURE_ENV(rax)
  3333 000013FE FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  3334 00001401 FF7500                  	push qword[rbp]
  3335 00001404 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  3336 00001409 48895D10                	mov qword[rbp + 8*2],rbx
  3337 0000140D 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  3338 00001415 BF00000000              	mov rdi,0
  3339 0000141A EB00                    	jmp .L_tc_recycle_frame_loop_000d
  3340                                  .L_tc_recycle_frame_loop_000d:
  3341 0000141C 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  3342 00001420 740F                    	je .L_tc_recycle_frame_done_000d
  3343 00001422 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  3344 00001427 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  3345 0000142C 48FFC7                  	inc rdi
  3346 0000142F EBEB                    	jmp .L_tc_recycle_frame_loop_000d
  3347                                  .L_tc_recycle_frame_done_000d:
  3348 00001431 4889EC                  	mov rsp, rbp	; point to last argument
  3349 00001434 5D                      	pop rbp
  3350 00001435 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3351 00001438 C9                      	leave
  3352 00001439 C21800                  	ret AND_KILL_FRAME(1)
  3353                                  .L_lambda_simple_end_000d:	; new closure is in rax
  3354 0000143C 48890425[18100000]      	mov qword [free_var_35], rax
  3355 00001444 48B8-                   	mov rax, sob_void
  3355 00001446 [0000000000000000] 
  3356                                  
  3357 0000144E 4889C7                  	mov rdi, rax
  3358 00001451 E8D0580100              	call print_sexpr_if_not_void
  3359 00001456 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3360 0000145B E871560100              	call malloc
  3361 00001460 50                      	push rax
  3362 00001461 BF00000000              	mov rdi, 8 * 0	; new rib
  3363 00001466 E866560100              	call malloc
  3364 0000146B 50                      	push rax
  3365 0000146C BF08000000              	mov rdi, 8 * 1	; extended env
  3366 00001471 E85B560100              	call malloc
  3367 00001476 488B7D10                	mov rdi, ENV
  3368 0000147A BE00000000              	mov rsi, 0
  3369 0000147F BA01000000              	mov rdx, 1
  3370                                  .L_lambda_simple_env_loop_000e:	; ext_env[i + 1] <-- env[i]
  3371 00001484 4883FE00                	cmp rsi, 0
  3372 00001488 7410                    	je .L_lambda_simple_env_end_000e
  3373 0000148A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3374 0000148E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3375 00001492 48FFC6                  	inc rsi
  3376 00001495 48FFC2                  	inc rdx
  3377 00001498 EBEA                    	jmp .L_lambda_simple_env_loop_000e
  3378                                  .L_lambda_simple_env_end_000e:
  3379 0000149A 5B                      	pop rbx
  3380 0000149B BE00000000              	mov rsi, 0
  3381                                  .L_lambda_simple_params_loop_000e:	; copy params
  3382 000014A0 4883FE00                	cmp rsi, 0
  3383 000014A4 740E                    	je .L_lambda_simple_params_end_000e
  3384 000014A6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3385 000014AB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3386 000014AF 48FFC6                  	inc rsi
  3387 000014B2 EBEC                    	jmp .L_lambda_simple_params_loop_000e
  3388                                  .L_lambda_simple_params_end_000e:
  3389 000014B4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3390 000014B7 4889C3                  	mov rbx, rax
  3391 000014BA 58                      	pop rax
  3392 000014BB C60004                  	mov byte [rax], T_closure
  3393 000014BE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3394 000014C2 48C74009[CF140000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000e
  3395 000014CA E99C000000              	jmp .L_lambda_simple_end_000e
  3396                                  .L_lambda_simple_code_000e:	; lambda-simple body
  3397 000014CF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3398 000014D5 740B                    	je .L_lambda_simple_arity_check_ok_000e
  3399 000014D7 FF742410                	push qword [rsp + 8 * 2]
  3400 000014DB 6A01                    	push 1
  3401 000014DD E9A8550100              	jmp L_error_incorrect_arity_simple
  3402                                  .L_lambda_simple_arity_check_ok_000e:
  3403 000014E2 C8000000                	enter 0, 0
  3404                                  	; preparing a tail-call
  3405                                  	; preparing a non-tail-call
  3406 000014E6 488B4520                	mov rax, PARAM(0)	; param x
  3407 000014EA 50                      	push rax
  3408 000014EB 6A01                    	push 1	; arg count
  3409 000014ED 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3410 000014F5 803805                  	cmp byte [rax], T_undefined
  3411 000014F8 0F84A6540100            	je L_error_fvar_undefined
  3412 000014FE 803804                  	cmp byte [rax], T_closure
  3413 00001501 0F8521550100            	jne L_error_non_closure
  3414 00001507 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3415 0000150A FF5009                  	call SOB_CLOSURE_CODE(rax)
  3416 0000150D 50                      	push rax
  3417 0000150E 6A01                    	push 1	; arg count
  3418 00001510 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3419 00001518 803805                  	cmp byte [rax], T_undefined
  3420 0000151B 0F8483540100            	je L_error_fvar_undefined
  3421 00001521 803804                  	cmp byte [rax], T_closure
  3422 00001524 0F85FE540100            	jne L_error_non_closure
  3423 0000152A FF7001                  	push SOB_CLOSURE_ENV(rax)
  3424 0000152D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  3425 00001530 FF7500                  	push qword[rbp]
  3426 00001533 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  3427 00001538 48895D10                	mov qword[rbp + 8*2],rbx
  3428 0000153C 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  3429 00001544 BF00000000              	mov rdi,0
  3430 00001549 EB00                    	jmp .L_tc_recycle_frame_loop_000e
  3431                                  .L_tc_recycle_frame_loop_000e:
  3432 0000154B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  3433 0000154F 740F                    	je .L_tc_recycle_frame_done_000e
  3434 00001551 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  3435 00001556 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  3436 0000155B 48FFC7                  	inc rdi
  3437 0000155E EBEB                    	jmp .L_tc_recycle_frame_loop_000e
  3438                                  .L_tc_recycle_frame_done_000e:
  3439 00001560 4889EC                  	mov rsp, rbp	; point to last argument
  3440 00001563 5D                      	pop rbp
  3441 00001564 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3442 00001567 C9                      	leave
  3443 00001568 C21800                  	ret AND_KILL_FRAME(1)
  3444                                  .L_lambda_simple_end_000e:	; new closure is in rax
  3445 0000156B 48890425[29100000]      	mov qword [free_var_36], rax
  3446 00001573 48B8-                   	mov rax, sob_void
  3446 00001575 [0000000000000000] 
  3447                                  
  3448 0000157D 4889C7                  	mov rdi, rax
  3449 00001580 E8A1570100              	call print_sexpr_if_not_void
  3450 00001585 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3451 0000158A E842550100              	call malloc
  3452 0000158F 50                      	push rax
  3453 00001590 BF00000000              	mov rdi, 8 * 0	; new rib
  3454 00001595 E837550100              	call malloc
  3455 0000159A 50                      	push rax
  3456 0000159B BF08000000              	mov rdi, 8 * 1	; extended env
  3457 000015A0 E82C550100              	call malloc
  3458 000015A5 488B7D10                	mov rdi, ENV
  3459 000015A9 BE00000000              	mov rsi, 0
  3460 000015AE BA01000000              	mov rdx, 1
  3461                                  .L_lambda_simple_env_loop_000f:	; ext_env[i + 1] <-- env[i]
  3462 000015B3 4883FE00                	cmp rsi, 0
  3463 000015B7 7410                    	je .L_lambda_simple_env_end_000f
  3464 000015B9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3465 000015BD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3466 000015C1 48FFC6                  	inc rsi
  3467 000015C4 48FFC2                  	inc rdx
  3468 000015C7 EBEA                    	jmp .L_lambda_simple_env_loop_000f
  3469                                  .L_lambda_simple_env_end_000f:
  3470 000015C9 5B                      	pop rbx
  3471 000015CA BE00000000              	mov rsi, 0
  3472                                  .L_lambda_simple_params_loop_000f:	; copy params
  3473 000015CF 4883FE00                	cmp rsi, 0
  3474 000015D3 740E                    	je .L_lambda_simple_params_end_000f
  3475 000015D5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3476 000015DA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3477 000015DE 48FFC6                  	inc rsi
  3478 000015E1 EBEC                    	jmp .L_lambda_simple_params_loop_000f
  3479                                  .L_lambda_simple_params_end_000f:
  3480 000015E3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3481 000015E6 4889C3                  	mov rbx, rax
  3482 000015E9 58                      	pop rax
  3483 000015EA C60004                  	mov byte [rax], T_closure
  3484 000015ED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3485 000015F1 48C74009[FE150000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_000f
  3486 000015F9 E99C000000              	jmp .L_lambda_simple_end_000f
  3487                                  .L_lambda_simple_code_000f:	; lambda-simple body
  3488 000015FE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3489 00001604 740B                    	je .L_lambda_simple_arity_check_ok_000f
  3490 00001606 FF742410                	push qword [rsp + 8 * 2]
  3491 0000160A 6A01                    	push 1
  3492 0000160C E979540100              	jmp L_error_incorrect_arity_simple
  3493                                  .L_lambda_simple_arity_check_ok_000f:
  3494 00001611 C8000000                	enter 0, 0
  3495                                  	; preparing a tail-call
  3496                                  	; preparing a non-tail-call
  3497 00001615 488B4520                	mov rax, PARAM(0)	; param x
  3498 00001619 50                      	push rax
  3499 0000161A 6A01                    	push 1	; arg count
  3500 0000161C 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3501 00001624 803805                  	cmp byte [rax], T_undefined
  3502 00001627 0F8477530100            	je L_error_fvar_undefined
  3503 0000162D 803804                  	cmp byte [rax], T_closure
  3504 00001630 0F85F2530100            	jne L_error_non_closure
  3505 00001636 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3506 00001639 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3507 0000163C 50                      	push rax
  3508 0000163D 6A01                    	push 1	; arg count
  3509 0000163F 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3510 00001647 803805                  	cmp byte [rax], T_undefined
  3511 0000164A 0F8454530100            	je L_error_fvar_undefined
  3512 00001650 803804                  	cmp byte [rax], T_closure
  3513 00001653 0F85CF530100            	jne L_error_non_closure
  3514 00001659 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3515 0000165C FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  3516 0000165F FF7500                  	push qword[rbp]
  3517 00001662 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  3518 00001667 48895D10                	mov qword[rbp + 8*2],rbx
  3519 0000166B 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  3520 00001673 BF00000000              	mov rdi,0
  3521 00001678 EB00                    	jmp .L_tc_recycle_frame_loop_000f
  3522                                  .L_tc_recycle_frame_loop_000f:
  3523 0000167A 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  3524 0000167E 740F                    	je .L_tc_recycle_frame_done_000f
  3525 00001680 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  3526 00001685 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  3527 0000168A 48FFC7                  	inc rdi
  3528 0000168D EBEB                    	jmp .L_tc_recycle_frame_loop_000f
  3529                                  .L_tc_recycle_frame_done_000f:
  3530 0000168F 4889EC                  	mov rsp, rbp	; point to last argument
  3531 00001692 5D                      	pop rbp
  3532 00001693 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3533 00001696 C9                      	leave
  3534 00001697 C21800                  	ret AND_KILL_FRAME(1)
  3535                                  .L_lambda_simple_end_000f:	; new closure is in rax
  3536 0000169A 48890425[4B100000]      	mov qword [free_var_38], rax
  3537 000016A2 48B8-                   	mov rax, sob_void
  3537 000016A4 [0000000000000000] 
  3538                                  
  3539 000016AC 4889C7                  	mov rdi, rax
  3540 000016AF E872560100              	call print_sexpr_if_not_void
  3541 000016B4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3542 000016B9 E813540100              	call malloc
  3543 000016BE 50                      	push rax
  3544 000016BF BF00000000              	mov rdi, 8 * 0	; new rib
  3545 000016C4 E808540100              	call malloc
  3546 000016C9 50                      	push rax
  3547 000016CA BF08000000              	mov rdi, 8 * 1	; extended env
  3548 000016CF E8FD530100              	call malloc
  3549 000016D4 488B7D10                	mov rdi, ENV
  3550 000016D8 BE00000000              	mov rsi, 0
  3551 000016DD BA01000000              	mov rdx, 1
  3552                                  .L_lambda_simple_env_loop_0010:	; ext_env[i + 1] <-- env[i]
  3553 000016E2 4883FE00                	cmp rsi, 0
  3554 000016E6 7410                    	je .L_lambda_simple_env_end_0010
  3555 000016E8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3556 000016EC 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3557 000016F0 48FFC6                  	inc rsi
  3558 000016F3 48FFC2                  	inc rdx
  3559 000016F6 EBEA                    	jmp .L_lambda_simple_env_loop_0010
  3560                                  .L_lambda_simple_env_end_0010:
  3561 000016F8 5B                      	pop rbx
  3562 000016F9 BE00000000              	mov rsi, 0
  3563                                  .L_lambda_simple_params_loop_0010:	; copy params
  3564 000016FE 4883FE00                	cmp rsi, 0
  3565 00001702 740E                    	je .L_lambda_simple_params_end_0010
  3566 00001704 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3567 00001709 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3568 0000170D 48FFC6                  	inc rsi
  3569 00001710 EBEC                    	jmp .L_lambda_simple_params_loop_0010
  3570                                  .L_lambda_simple_params_end_0010:
  3571 00001712 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3572 00001715 4889C3                  	mov rbx, rax
  3573 00001718 58                      	pop rax
  3574 00001719 C60004                  	mov byte [rax], T_closure
  3575 0000171C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3576 00001720 48C74009[2D170000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0010
  3577 00001728 E99C000000              	jmp .L_lambda_simple_end_0010
  3578                                  .L_lambda_simple_code_0010:	; lambda-simple body
  3579 0000172D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3580 00001733 740B                    	je .L_lambda_simple_arity_check_ok_0010
  3581 00001735 FF742410                	push qword [rsp + 8 * 2]
  3582 00001739 6A01                    	push 1
  3583 0000173B E94A530100              	jmp L_error_incorrect_arity_simple
  3584                                  .L_lambda_simple_arity_check_ok_0010:
  3585 00001740 C8000000                	enter 0, 0
  3586                                  	; preparing a tail-call
  3587                                  	; preparing a non-tail-call
  3588 00001744 488B4520                	mov rax, PARAM(0)	; param x
  3589 00001748 50                      	push rax
  3590 00001749 6A01                    	push 1	; arg count
  3591 0000174B 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3592 00001753 803805                  	cmp byte [rax], T_undefined
  3593 00001756 0F8448520100            	je L_error_fvar_undefined
  3594 0000175C 803804                  	cmp byte [rax], T_closure
  3595 0000175F 0F85C3520100            	jne L_error_non_closure
  3596 00001765 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3597 00001768 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3598 0000176B 50                      	push rax
  3599 0000176C 6A01                    	push 1	; arg count
  3600 0000176E 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3601 00001776 803805                  	cmp byte [rax], T_undefined
  3602 00001779 0F8425520100            	je L_error_fvar_undefined
  3603 0000177F 803804                  	cmp byte [rax], T_closure
  3604 00001782 0F85A0520100            	jne L_error_non_closure
  3605 00001788 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3606 0000178B FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  3607 0000178E FF7500                  	push qword[rbp]
  3608 00001791 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  3609 00001796 48895D10                	mov qword[rbp + 8*2],rbx
  3610 0000179A 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  3611 000017A2 BF00000000              	mov rdi,0
  3612 000017A7 EB00                    	jmp .L_tc_recycle_frame_loop_0010
  3613                                  .L_tc_recycle_frame_loop_0010:
  3614 000017A9 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  3615 000017AD 740F                    	je .L_tc_recycle_frame_done_0010
  3616 000017AF 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  3617 000017B4 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  3618 000017B9 48FFC7                  	inc rdi
  3619 000017BC EBEB                    	jmp .L_tc_recycle_frame_loop_0010
  3620                                  .L_tc_recycle_frame_done_0010:
  3621 000017BE 4889EC                  	mov rsp, rbp	; point to last argument
  3622 000017C1 5D                      	pop rbp
  3623 000017C2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3624 000017C5 C9                      	leave
  3625 000017C6 C21800                  	ret AND_KILL_FRAME(1)
  3626                                  .L_lambda_simple_end_0010:	; new closure is in rax
  3627 000017C9 48890425[5C100000]      	mov qword [free_var_39], rax
  3628 000017D1 48B8-                   	mov rax, sob_void
  3628 000017D3 [0000000000000000] 
  3629                                  
  3630 000017DB 4889C7                  	mov rdi, rax
  3631 000017DE E843550100              	call print_sexpr_if_not_void
  3632 000017E3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3633 000017E8 E8E4520100              	call malloc
  3634 000017ED 50                      	push rax
  3635 000017EE BF00000000              	mov rdi, 8 * 0	; new rib
  3636 000017F3 E8D9520100              	call malloc
  3637 000017F8 50                      	push rax
  3638 000017F9 BF08000000              	mov rdi, 8 * 1	; extended env
  3639 000017FE E8CE520100              	call malloc
  3640 00001803 488B7D10                	mov rdi, ENV
  3641 00001807 BE00000000              	mov rsi, 0
  3642 0000180C BA01000000              	mov rdx, 1
  3643                                  .L_lambda_simple_env_loop_0011:	; ext_env[i + 1] <-- env[i]
  3644 00001811 4883FE00                	cmp rsi, 0
  3645 00001815 7410                    	je .L_lambda_simple_env_end_0011
  3646 00001817 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3647 0000181B 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3648 0000181F 48FFC6                  	inc rsi
  3649 00001822 48FFC2                  	inc rdx
  3650 00001825 EBEA                    	jmp .L_lambda_simple_env_loop_0011
  3651                                  .L_lambda_simple_env_end_0011:
  3652 00001827 5B                      	pop rbx
  3653 00001828 BE00000000              	mov rsi, 0
  3654                                  .L_lambda_simple_params_loop_0011:	; copy params
  3655 0000182D 4883FE00                	cmp rsi, 0
  3656 00001831 740E                    	je .L_lambda_simple_params_end_0011
  3657 00001833 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3658 00001838 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3659 0000183C 48FFC6                  	inc rsi
  3660 0000183F EBEC                    	jmp .L_lambda_simple_params_loop_0011
  3661                                  .L_lambda_simple_params_end_0011:
  3662 00001841 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3663 00001844 4889C3                  	mov rbx, rax
  3664 00001847 58                      	pop rax
  3665 00001848 C60004                  	mov byte [rax], T_closure
  3666 0000184B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3667 0000184F 48C74009[5C180000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0011
  3668 00001857 E99C000000              	jmp .L_lambda_simple_end_0011
  3669                                  .L_lambda_simple_code_0011:	; lambda-simple body
  3670 0000185C 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3671 00001862 740B                    	je .L_lambda_simple_arity_check_ok_0011
  3672 00001864 FF742410                	push qword [rsp + 8 * 2]
  3673 00001868 6A01                    	push 1
  3674 0000186A E91B520100              	jmp L_error_incorrect_arity_simple
  3675                                  .L_lambda_simple_arity_check_ok_0011:
  3676 0000186F C8000000                	enter 0, 0
  3677                                  	; preparing a tail-call
  3678                                  	; preparing a non-tail-call
  3679 00001873 488B4520                	mov rax, PARAM(0)	; param x
  3680 00001877 50                      	push rax
  3681 00001878 6A01                    	push 1	; arg count
  3682 0000187A 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  3683 00001882 803805                  	cmp byte [rax], T_undefined
  3684 00001885 0F8419510100            	je L_error_fvar_undefined
  3685 0000188B 803804                  	cmp byte [rax], T_closure
  3686 0000188E 0F8594510100            	jne L_error_non_closure
  3687 00001894 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3688 00001897 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3689 0000189A 50                      	push rax
  3690 0000189B 6A01                    	push 1	; arg count
  3691 0000189D 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3692 000018A5 803805                  	cmp byte [rax], T_undefined
  3693 000018A8 0F84F6500100            	je L_error_fvar_undefined
  3694 000018AE 803804                  	cmp byte [rax], T_closure
  3695 000018B1 0F8571510100            	jne L_error_non_closure
  3696 000018B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3697 000018BA FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  3698 000018BD FF7500                  	push qword[rbp]
  3699 000018C0 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  3700 000018C5 48895D10                	mov qword[rbp + 8*2],rbx
  3701 000018C9 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  3702 000018D1 BF00000000              	mov rdi,0
  3703 000018D6 EB00                    	jmp .L_tc_recycle_frame_loop_0011
  3704                                  .L_tc_recycle_frame_loop_0011:
  3705 000018D8 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  3706 000018DC 740F                    	je .L_tc_recycle_frame_done_0011
  3707 000018DE 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  3708 000018E3 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  3709 000018E8 48FFC7                  	inc rdi
  3710 000018EB EBEB                    	jmp .L_tc_recycle_frame_loop_0011
  3711                                  .L_tc_recycle_frame_done_0011:
  3712 000018ED 4889EC                  	mov rsp, rbp	; point to last argument
  3713 000018F0 5D                      	pop rbp
  3714 000018F1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3715 000018F4 C9                      	leave
  3716 000018F5 C21800                  	ret AND_KILL_FRAME(1)
  3717                                  .L_lambda_simple_end_0011:	; new closure is in rax
  3718 000018F8 48890425[8F100000]      	mov qword [free_var_42], rax
  3719 00001900 48B8-                   	mov rax, sob_void
  3719 00001902 [0000000000000000] 
  3720                                  
  3721 0000190A 4889C7                  	mov rdi, rax
  3722 0000190D E814540100              	call print_sexpr_if_not_void
  3723 00001912 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3724 00001917 E8B5510100              	call malloc
  3725 0000191C 50                      	push rax
  3726 0000191D BF00000000              	mov rdi, 8 * 0	; new rib
  3727 00001922 E8AA510100              	call malloc
  3728 00001927 50                      	push rax
  3729 00001928 BF08000000              	mov rdi, 8 * 1	; extended env
  3730 0000192D E89F510100              	call malloc
  3731 00001932 488B7D10                	mov rdi, ENV
  3732 00001936 BE00000000              	mov rsi, 0
  3733 0000193B BA01000000              	mov rdx, 1
  3734                                  .L_lambda_simple_env_loop_0012:	; ext_env[i + 1] <-- env[i]
  3735 00001940 4883FE00                	cmp rsi, 0
  3736 00001944 7410                    	je .L_lambda_simple_env_end_0012
  3737 00001946 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3738 0000194A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3739 0000194E 48FFC6                  	inc rsi
  3740 00001951 48FFC2                  	inc rdx
  3741 00001954 EBEA                    	jmp .L_lambda_simple_env_loop_0012
  3742                                  .L_lambda_simple_env_end_0012:
  3743 00001956 5B                      	pop rbx
  3744 00001957 BE00000000              	mov rsi, 0
  3745                                  .L_lambda_simple_params_loop_0012:	; copy params
  3746 0000195C 4883FE00                	cmp rsi, 0
  3747 00001960 740E                    	je .L_lambda_simple_params_end_0012
  3748 00001962 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3749 00001967 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3750 0000196B 48FFC6                  	inc rsi
  3751 0000196E EBEC                    	jmp .L_lambda_simple_params_loop_0012
  3752                                  .L_lambda_simple_params_end_0012:
  3753 00001970 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3754 00001973 4889C3                  	mov rbx, rax
  3755 00001976 58                      	pop rax
  3756 00001977 C60004                  	mov byte [rax], T_closure
  3757 0000197A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3758 0000197E 48C74009[8B190000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0012
  3759 00001986 E99C000000              	jmp .L_lambda_simple_end_0012
  3760                                  .L_lambda_simple_code_0012:	; lambda-simple body
  3761 0000198B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3762 00001991 740B                    	je .L_lambda_simple_arity_check_ok_0012
  3763 00001993 FF742410                	push qword [rsp + 8 * 2]
  3764 00001997 6A01                    	push 1
  3765 00001999 E9EC500100              	jmp L_error_incorrect_arity_simple
  3766                                  .L_lambda_simple_arity_check_ok_0012:
  3767 0000199E C8000000                	enter 0, 0
  3768                                  	; preparing a tail-call
  3769                                  	; preparing a non-tail-call
  3770 000019A2 488B4520                	mov rax, PARAM(0)	; param x
  3771 000019A6 50                      	push rax
  3772 000019A7 6A01                    	push 1	; arg count
  3773 000019A9 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3774 000019B1 803805                  	cmp byte [rax], T_undefined
  3775 000019B4 0F84EA4F0100            	je L_error_fvar_undefined
  3776 000019BA 803804                  	cmp byte [rax], T_closure
  3777 000019BD 0F8565500100            	jne L_error_non_closure
  3778 000019C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3779 000019C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3780 000019C9 50                      	push rax
  3781 000019CA 6A01                    	push 1	; arg count
  3782 000019CC 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3783 000019D4 803805                  	cmp byte [rax], T_undefined
  3784 000019D7 0F84C74F0100            	je L_error_fvar_undefined
  3785 000019DD 803804                  	cmp byte [rax], T_closure
  3786 000019E0 0F8542500100            	jne L_error_non_closure
  3787 000019E6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3788 000019E9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  3789 000019EC FF7500                  	push qword[rbp]
  3790 000019EF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  3791 000019F4 48895D10                	mov qword[rbp + 8*2],rbx
  3792 000019F8 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  3793 00001A00 BF00000000              	mov rdi,0
  3794 00001A05 EB00                    	jmp .L_tc_recycle_frame_loop_0012
  3795                                  .L_tc_recycle_frame_loop_0012:
  3796 00001A07 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  3797 00001A0B 740F                    	je .L_tc_recycle_frame_done_0012
  3798 00001A0D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  3799 00001A12 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  3800 00001A17 48FFC7                  	inc rdi
  3801 00001A1A EBEB                    	jmp .L_tc_recycle_frame_loop_0012
  3802                                  .L_tc_recycle_frame_done_0012:
  3803 00001A1C 4889EC                  	mov rsp, rbp	; point to last argument
  3804 00001A1F 5D                      	pop rbp
  3805 00001A20 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3806 00001A23 C9                      	leave
  3807 00001A24 C21800                  	ret AND_KILL_FRAME(1)
  3808                                  .L_lambda_simple_end_0012:	; new closure is in rax
  3809 00001A27 48890425[A0100000]      	mov qword [free_var_43], rax
  3810 00001A2F 48B8-                   	mov rax, sob_void
  3810 00001A31 [0000000000000000] 
  3811                                  
  3812 00001A39 4889C7                  	mov rdi, rax
  3813 00001A3C E8E5520100              	call print_sexpr_if_not_void
  3814 00001A41 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3815 00001A46 E886500100              	call malloc
  3816 00001A4B 50                      	push rax
  3817 00001A4C BF00000000              	mov rdi, 8 * 0	; new rib
  3818 00001A51 E87B500100              	call malloc
  3819 00001A56 50                      	push rax
  3820 00001A57 BF08000000              	mov rdi, 8 * 1	; extended env
  3821 00001A5C E870500100              	call malloc
  3822 00001A61 488B7D10                	mov rdi, ENV
  3823 00001A65 BE00000000              	mov rsi, 0
  3824 00001A6A BA01000000              	mov rdx, 1
  3825                                  .L_lambda_simple_env_loop_0013:	; ext_env[i + 1] <-- env[i]
  3826 00001A6F 4883FE00                	cmp rsi, 0
  3827 00001A73 7410                    	je .L_lambda_simple_env_end_0013
  3828 00001A75 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3829 00001A79 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3830 00001A7D 48FFC6                  	inc rsi
  3831 00001A80 48FFC2                  	inc rdx
  3832 00001A83 EBEA                    	jmp .L_lambda_simple_env_loop_0013
  3833                                  .L_lambda_simple_env_end_0013:
  3834 00001A85 5B                      	pop rbx
  3835 00001A86 BE00000000              	mov rsi, 0
  3836                                  .L_lambda_simple_params_loop_0013:	; copy params
  3837 00001A8B 4883FE00                	cmp rsi, 0
  3838 00001A8F 740E                    	je .L_lambda_simple_params_end_0013
  3839 00001A91 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3840 00001A96 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3841 00001A9A 48FFC6                  	inc rsi
  3842 00001A9D EBEC                    	jmp .L_lambda_simple_params_loop_0013
  3843                                  .L_lambda_simple_params_end_0013:
  3844 00001A9F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3845 00001AA2 4889C3                  	mov rbx, rax
  3846 00001AA5 58                      	pop rax
  3847 00001AA6 C60004                  	mov byte [rax], T_closure
  3848 00001AA9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3849 00001AAD 48C74009[BA1A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0013
  3850 00001AB5 E99C000000              	jmp .L_lambda_simple_end_0013
  3851                                  .L_lambda_simple_code_0013:	; lambda-simple body
  3852 00001ABA 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3853 00001AC0 740B                    	je .L_lambda_simple_arity_check_ok_0013
  3854 00001AC2 FF742410                	push qword [rsp + 8 * 2]
  3855 00001AC6 6A01                    	push 1
  3856 00001AC8 E9BD4F0100              	jmp L_error_incorrect_arity_simple
  3857                                  .L_lambda_simple_arity_check_ok_0013:
  3858 00001ACD C8000000                	enter 0, 0
  3859                                  	; preparing a tail-call
  3860                                  	; preparing a non-tail-call
  3861 00001AD1 488B4520                	mov rax, PARAM(0)	; param x
  3862 00001AD5 50                      	push rax
  3863 00001AD6 6A01                    	push 1	; arg count
  3864 00001AD8 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  3865 00001AE0 803805                  	cmp byte [rax], T_undefined
  3866 00001AE3 0F84BB4E0100            	je L_error_fvar_undefined
  3867 00001AE9 803804                  	cmp byte [rax], T_closure
  3868 00001AEC 0F85364F0100            	jne L_error_non_closure
  3869 00001AF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3870 00001AF5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3871 00001AF8 50                      	push rax
  3872 00001AF9 6A01                    	push 1	; arg count
  3873 00001AFB 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3874 00001B03 803805                  	cmp byte [rax], T_undefined
  3875 00001B06 0F84984E0100            	je L_error_fvar_undefined
  3876 00001B0C 803804                  	cmp byte [rax], T_closure
  3877 00001B0F 0F85134F0100            	jne L_error_non_closure
  3878 00001B15 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3879 00001B18 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  3880 00001B1B FF7500                  	push qword[rbp]
  3881 00001B1E 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  3882 00001B23 48895D10                	mov qword[rbp + 8*2],rbx
  3883 00001B27 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  3884 00001B2F BF00000000              	mov rdi,0
  3885 00001B34 EB00                    	jmp .L_tc_recycle_frame_loop_0013
  3886                                  .L_tc_recycle_frame_loop_0013:
  3887 00001B36 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  3888 00001B3A 740F                    	je .L_tc_recycle_frame_done_0013
  3889 00001B3C 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  3890 00001B41 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  3891 00001B46 48FFC7                  	inc rdi
  3892 00001B49 EBEB                    	jmp .L_tc_recycle_frame_loop_0013
  3893                                  .L_tc_recycle_frame_done_0013:
  3894 00001B4B 4889EC                  	mov rsp, rbp	; point to last argument
  3895 00001B4E 5D                      	pop rbp
  3896 00001B4F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3897 00001B52 C9                      	leave
  3898 00001B53 C21800                  	ret AND_KILL_FRAME(1)
  3899                                  .L_lambda_simple_end_0013:	; new closure is in rax
  3900 00001B56 48890425[C2100000]      	mov qword [free_var_45], rax
  3901 00001B5E 48B8-                   	mov rax, sob_void
  3901 00001B60 [0000000000000000] 
  3902                                  
  3903 00001B68 4889C7                  	mov rdi, rax
  3904 00001B6B E8B6510100              	call print_sexpr_if_not_void
  3905 00001B70 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3906 00001B75 E8574F0100              	call malloc
  3907 00001B7A 50                      	push rax
  3908 00001B7B BF00000000              	mov rdi, 8 * 0	; new rib
  3909 00001B80 E84C4F0100              	call malloc
  3910 00001B85 50                      	push rax
  3911 00001B86 BF08000000              	mov rdi, 8 * 1	; extended env
  3912 00001B8B E8414F0100              	call malloc
  3913 00001B90 488B7D10                	mov rdi, ENV
  3914 00001B94 BE00000000              	mov rsi, 0
  3915 00001B99 BA01000000              	mov rdx, 1
  3916                                  .L_lambda_simple_env_loop_0014:	; ext_env[i + 1] <-- env[i]
  3917 00001B9E 4883FE00                	cmp rsi, 0
  3918 00001BA2 7410                    	je .L_lambda_simple_env_end_0014
  3919 00001BA4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  3920 00001BA8 48890CD0                	mov qword [rax + 8 * rdx], rcx
  3921 00001BAC 48FFC6                  	inc rsi
  3922 00001BAF 48FFC2                  	inc rdx
  3923 00001BB2 EBEA                    	jmp .L_lambda_simple_env_loop_0014
  3924                                  .L_lambda_simple_env_end_0014:
  3925 00001BB4 5B                      	pop rbx
  3926 00001BB5 BE00000000              	mov rsi, 0
  3927                                  .L_lambda_simple_params_loop_0014:	; copy params
  3928 00001BBA 4883FE00                	cmp rsi, 0
  3929 00001BBE 740E                    	je .L_lambda_simple_params_end_0014
  3930 00001BC0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  3931 00001BC5 488914F3                	mov qword [rbx + 8 * rsi], rdx
  3932 00001BC9 48FFC6                  	inc rsi
  3933 00001BCC EBEC                    	jmp .L_lambda_simple_params_loop_0014
  3934                                  .L_lambda_simple_params_end_0014:
  3935 00001BCE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  3936 00001BD1 4889C3                  	mov rbx, rax
  3937 00001BD4 58                      	pop rax
  3938 00001BD5 C60004                  	mov byte [rax], T_closure
  3939 00001BD8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  3940 00001BDC 48C74009[E91B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0014
  3941 00001BE4 E99C000000              	jmp .L_lambda_simple_end_0014
  3942                                  .L_lambda_simple_code_0014:	; lambda-simple body
  3943 00001BE9 48837C241001            	cmp qword [rsp + 8 * 2], 1
  3944 00001BEF 740B                    	je .L_lambda_simple_arity_check_ok_0014
  3945 00001BF1 FF742410                	push qword [rsp + 8 * 2]
  3946 00001BF5 6A01                    	push 1
  3947 00001BF7 E98E4E0100              	jmp L_error_incorrect_arity_simple
  3948                                  .L_lambda_simple_arity_check_ok_0014:
  3949 00001BFC C8000000                	enter 0, 0
  3950                                  	; preparing a tail-call
  3951                                  	; preparing a non-tail-call
  3952 00001C00 488B4520                	mov rax, PARAM(0)	; param x
  3953 00001C04 50                      	push rax
  3954 00001C05 6A01                    	push 1	; arg count
  3955 00001C07 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  3956 00001C0F 803805                  	cmp byte [rax], T_undefined
  3957 00001C12 0F848C4D0100            	je L_error_fvar_undefined
  3958 00001C18 803804                  	cmp byte [rax], T_closure
  3959 00001C1B 0F85074E0100            	jne L_error_non_closure
  3960 00001C21 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3961 00001C24 FF5009                  	call SOB_CLOSURE_CODE(rax)
  3962 00001C27 50                      	push rax
  3963 00001C28 6A01                    	push 1	; arg count
  3964 00001C2A 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  3965 00001C32 803805                  	cmp byte [rax], T_undefined
  3966 00001C35 0F84694D0100            	je L_error_fvar_undefined
  3967 00001C3B 803804                  	cmp byte [rax], T_closure
  3968 00001C3E 0F85E44D0100            	jne L_error_non_closure
  3969 00001C44 FF7001                  	push SOB_CLOSURE_ENV(rax)
  3970 00001C47 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  3971 00001C4A FF7500                  	push qword[rbp]
  3972 00001C4D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  3973 00001C52 48895D10                	mov qword[rbp + 8*2],rbx
  3974 00001C56 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  3975 00001C5E BF00000000              	mov rdi,0
  3976 00001C63 EB00                    	jmp .L_tc_recycle_frame_loop_0014
  3977                                  .L_tc_recycle_frame_loop_0014:
  3978 00001C65 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  3979 00001C69 740F                    	je .L_tc_recycle_frame_done_0014
  3980 00001C6B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  3981 00001C70 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  3982 00001C75 48FFC7                  	inc rdi
  3983 00001C78 EBEB                    	jmp .L_tc_recycle_frame_loop_0014
  3984                                  .L_tc_recycle_frame_done_0014:
  3985 00001C7A 4889EC                  	mov rsp, rbp	; point to last argument
  3986 00001C7D 5D                      	pop rbp
  3987 00001C7E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  3988 00001C81 C9                      	leave
  3989 00001C82 C21800                  	ret AND_KILL_FRAME(1)
  3990                                  .L_lambda_simple_end_0014:	; new closure is in rax
  3991 00001C85 48890425[D3100000]      	mov qword [free_var_46], rax
  3992 00001C8D 48B8-                   	mov rax, sob_void
  3992 00001C8F [0000000000000000] 
  3993                                  
  3994 00001C97 4889C7                  	mov rdi, rax
  3995 00001C9A E887500100              	call print_sexpr_if_not_void
  3996 00001C9F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  3997 00001CA4 E8284E0100              	call malloc
  3998 00001CA9 50                      	push rax
  3999 00001CAA BF00000000              	mov rdi, 8 * 0	; new rib
  4000 00001CAF E81D4E0100              	call malloc
  4001 00001CB4 50                      	push rax
  4002 00001CB5 BF08000000              	mov rdi, 8 * 1	; extended env
  4003 00001CBA E8124E0100              	call malloc
  4004 00001CBF 488B7D10                	mov rdi, ENV
  4005 00001CC3 BE00000000              	mov rsi, 0
  4006 00001CC8 BA01000000              	mov rdx, 1
  4007                                  .L_lambda_simple_env_loop_0015:	; ext_env[i + 1] <-- env[i]
  4008 00001CCD 4883FE00                	cmp rsi, 0
  4009 00001CD1 7410                    	je .L_lambda_simple_env_end_0015
  4010 00001CD3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4011 00001CD7 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4012 00001CDB 48FFC6                  	inc rsi
  4013 00001CDE 48FFC2                  	inc rdx
  4014 00001CE1 EBEA                    	jmp .L_lambda_simple_env_loop_0015
  4015                                  .L_lambda_simple_env_end_0015:
  4016 00001CE3 5B                      	pop rbx
  4017 00001CE4 BE00000000              	mov rsi, 0
  4018                                  .L_lambda_simple_params_loop_0015:	; copy params
  4019 00001CE9 4883FE00                	cmp rsi, 0
  4020 00001CED 740E                    	je .L_lambda_simple_params_end_0015
  4021 00001CEF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4022 00001CF4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4023 00001CF8 48FFC6                  	inc rsi
  4024 00001CFB EBEC                    	jmp .L_lambda_simple_params_loop_0015
  4025                                  .L_lambda_simple_params_end_0015:
  4026 00001CFD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4027 00001D00 4889C3                  	mov rbx, rax
  4028 00001D03 58                      	pop rax
  4029 00001D04 C60004                  	mov byte [rax], T_closure
  4030 00001D07 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4031 00001D0B 48C74009[181D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0015
  4032 00001D13 E99C000000              	jmp .L_lambda_simple_end_0015
  4033                                  .L_lambda_simple_code_0015:	; lambda-simple body
  4034 00001D18 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4035 00001D1E 740B                    	je .L_lambda_simple_arity_check_ok_0015
  4036 00001D20 FF742410                	push qword [rsp + 8 * 2]
  4037 00001D24 6A01                    	push 1
  4038 00001D26 E95F4D0100              	jmp L_error_incorrect_arity_simple
  4039                                  .L_lambda_simple_arity_check_ok_0015:
  4040 00001D2B C8000000                	enter 0, 0
  4041                                  	; preparing a tail-call
  4042                                  	; preparing a non-tail-call
  4043 00001D2F 488B4520                	mov rax, PARAM(0)	; param x
  4044 00001D33 50                      	push rax
  4045 00001D34 6A01                    	push 1	; arg count
  4046 00001D36 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  4047 00001D3E 803805                  	cmp byte [rax], T_undefined
  4048 00001D41 0F845D4C0100            	je L_error_fvar_undefined
  4049 00001D47 803804                  	cmp byte [rax], T_closure
  4050 00001D4A 0F85D84C0100            	jne L_error_non_closure
  4051 00001D50 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4052 00001D53 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4053 00001D56 50                      	push rax
  4054 00001D57 6A01                    	push 1	; arg count
  4055 00001D59 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4056 00001D61 803805                  	cmp byte [rax], T_undefined
  4057 00001D64 0F843A4C0100            	je L_error_fvar_undefined
  4058 00001D6A 803804                  	cmp byte [rax], T_closure
  4059 00001D6D 0F85B54C0100            	jne L_error_non_closure
  4060 00001D73 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4061 00001D76 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  4062 00001D79 FF7500                  	push qword[rbp]
  4063 00001D7C 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  4064 00001D81 48895D10                	mov qword[rbp + 8*2],rbx
  4065 00001D85 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  4066 00001D8D BF00000000              	mov rdi,0
  4067 00001D92 EB00                    	jmp .L_tc_recycle_frame_loop_0015
  4068                                  .L_tc_recycle_frame_loop_0015:
  4069 00001D94 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  4070 00001D98 740F                    	je .L_tc_recycle_frame_done_0015
  4071 00001D9A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  4072 00001D9F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  4073 00001DA4 48FFC7                  	inc rdi
  4074 00001DA7 EBEB                    	jmp .L_tc_recycle_frame_loop_0015
  4075                                  .L_tc_recycle_frame_done_0015:
  4076 00001DA9 4889EC                  	mov rsp, rbp	; point to last argument
  4077 00001DAC 5D                      	pop rbp
  4078 00001DAD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4079 00001DB0 C9                      	leave
  4080 00001DB1 C21800                  	ret AND_KILL_FRAME(1)
  4081                                  .L_lambda_simple_end_0015:	; new closure is in rax
  4082 00001DB4 48890425[17110000]      	mov qword [free_var_50], rax
  4083 00001DBC 48B8-                   	mov rax, sob_void
  4083 00001DBE [0000000000000000] 
  4084                                  
  4085 00001DC6 4889C7                  	mov rdi, rax
  4086 00001DC9 E8584F0100              	call print_sexpr_if_not_void
  4087 00001DCE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4088 00001DD3 E8F94C0100              	call malloc
  4089 00001DD8 50                      	push rax
  4090 00001DD9 BF00000000              	mov rdi, 8 * 0	; new rib
  4091 00001DDE E8EE4C0100              	call malloc
  4092 00001DE3 50                      	push rax
  4093 00001DE4 BF08000000              	mov rdi, 8 * 1	; extended env
  4094 00001DE9 E8E34C0100              	call malloc
  4095 00001DEE 488B7D10                	mov rdi, ENV
  4096 00001DF2 BE00000000              	mov rsi, 0
  4097 00001DF7 BA01000000              	mov rdx, 1
  4098                                  .L_lambda_simple_env_loop_0016:	; ext_env[i + 1] <-- env[i]
  4099 00001DFC 4883FE00                	cmp rsi, 0
  4100 00001E00 7410                    	je .L_lambda_simple_env_end_0016
  4101 00001E02 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4102 00001E06 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4103 00001E0A 48FFC6                  	inc rsi
  4104 00001E0D 48FFC2                  	inc rdx
  4105 00001E10 EBEA                    	jmp .L_lambda_simple_env_loop_0016
  4106                                  .L_lambda_simple_env_end_0016:
  4107 00001E12 5B                      	pop rbx
  4108 00001E13 BE00000000              	mov rsi, 0
  4109                                  .L_lambda_simple_params_loop_0016:	; copy params
  4110 00001E18 4883FE00                	cmp rsi, 0
  4111 00001E1C 740E                    	je .L_lambda_simple_params_end_0016
  4112 00001E1E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4113 00001E23 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4114 00001E27 48FFC6                  	inc rsi
  4115 00001E2A EBEC                    	jmp .L_lambda_simple_params_loop_0016
  4116                                  .L_lambda_simple_params_end_0016:
  4117 00001E2C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4118 00001E2F 4889C3                  	mov rbx, rax
  4119 00001E32 58                      	pop rax
  4120 00001E33 C60004                  	mov byte [rax], T_closure
  4121 00001E36 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4122 00001E3A 48C74009[471E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0016
  4123 00001E42 E99C000000              	jmp .L_lambda_simple_end_0016
  4124                                  .L_lambda_simple_code_0016:	; lambda-simple body
  4125 00001E47 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4126 00001E4D 740B                    	je .L_lambda_simple_arity_check_ok_0016
  4127 00001E4F FF742410                	push qword [rsp + 8 * 2]
  4128 00001E53 6A01                    	push 1
  4129 00001E55 E9304C0100              	jmp L_error_incorrect_arity_simple
  4130                                  .L_lambda_simple_arity_check_ok_0016:
  4131 00001E5A C8000000                	enter 0, 0
  4132                                  	; preparing a tail-call
  4133                                  	; preparing a non-tail-call
  4134 00001E5E 488B4520                	mov rax, PARAM(0)	; param x
  4135 00001E62 50                      	push rax
  4136 00001E63 6A01                    	push 1	; arg count
  4137 00001E65 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4138 00001E6D 803805                  	cmp byte [rax], T_undefined
  4139 00001E70 0F842E4B0100            	je L_error_fvar_undefined
  4140 00001E76 803804                  	cmp byte [rax], T_closure
  4141 00001E79 0F85A94B0100            	jne L_error_non_closure
  4142 00001E7F FF7001                  	push SOB_CLOSURE_ENV(rax)
  4143 00001E82 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4144 00001E85 50                      	push rax
  4145 00001E86 6A01                    	push 1	; arg count
  4146 00001E88 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4147 00001E90 803805                  	cmp byte [rax], T_undefined
  4148 00001E93 0F840B4B0100            	je L_error_fvar_undefined
  4149 00001E99 803804                  	cmp byte [rax], T_closure
  4150 00001E9C 0F85864B0100            	jne L_error_non_closure
  4151 00001EA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4152 00001EA5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  4153 00001EA8 FF7500                  	push qword[rbp]
  4154 00001EAB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  4155 00001EB0 48895D10                	mov qword[rbp + 8*2],rbx
  4156 00001EB4 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  4157 00001EBC BF00000000              	mov rdi,0
  4158 00001EC1 EB00                    	jmp .L_tc_recycle_frame_loop_0016
  4159                                  .L_tc_recycle_frame_loop_0016:
  4160 00001EC3 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  4161 00001EC7 740F                    	je .L_tc_recycle_frame_done_0016
  4162 00001EC9 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  4163 00001ECE 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  4164 00001ED3 48FFC7                  	inc rdi
  4165 00001ED6 EBEB                    	jmp .L_tc_recycle_frame_loop_0016
  4166                                  .L_tc_recycle_frame_done_0016:
  4167 00001ED8 4889EC                  	mov rsp, rbp	; point to last argument
  4168 00001EDB 5D                      	pop rbp
  4169 00001EDC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4170 00001EDF C9                      	leave
  4171 00001EE0 C21800                  	ret AND_KILL_FRAME(1)
  4172                                  .L_lambda_simple_end_0016:	; new closure is in rax
  4173 00001EE3 48890425[28110000]      	mov qword [free_var_51], rax
  4174 00001EEB 48B8-                   	mov rax, sob_void
  4174 00001EED [0000000000000000] 
  4175                                  
  4176 00001EF5 4889C7                  	mov rdi, rax
  4177 00001EF8 E8294E0100              	call print_sexpr_if_not_void
  4178 00001EFD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4179 00001F02 E8CA4B0100              	call malloc
  4180 00001F07 50                      	push rax
  4181 00001F08 BF00000000              	mov rdi, 8 * 0	; new rib
  4182 00001F0D E8BF4B0100              	call malloc
  4183 00001F12 50                      	push rax
  4184 00001F13 BF08000000              	mov rdi, 8 * 1	; extended env
  4185 00001F18 E8B44B0100              	call malloc
  4186 00001F1D 488B7D10                	mov rdi, ENV
  4187 00001F21 BE00000000              	mov rsi, 0
  4188 00001F26 BA01000000              	mov rdx, 1
  4189                                  .L_lambda_simple_env_loop_0017:	; ext_env[i + 1] <-- env[i]
  4190 00001F2B 4883FE00                	cmp rsi, 0
  4191 00001F2F 7410                    	je .L_lambda_simple_env_end_0017
  4192 00001F31 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4193 00001F35 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4194 00001F39 48FFC6                  	inc rsi
  4195 00001F3C 48FFC2                  	inc rdx
  4196 00001F3F EBEA                    	jmp .L_lambda_simple_env_loop_0017
  4197                                  .L_lambda_simple_env_end_0017:
  4198 00001F41 5B                      	pop rbx
  4199 00001F42 BE00000000              	mov rsi, 0
  4200                                  .L_lambda_simple_params_loop_0017:	; copy params
  4201 00001F47 4883FE00                	cmp rsi, 0
  4202 00001F4B 740E                    	je .L_lambda_simple_params_end_0017
  4203 00001F4D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4204 00001F52 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4205 00001F56 48FFC6                  	inc rsi
  4206 00001F59 EBEC                    	jmp .L_lambda_simple_params_loop_0017
  4207                                  .L_lambda_simple_params_end_0017:
  4208 00001F5B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4209 00001F5E 4889C3                  	mov rbx, rax
  4210 00001F61 58                      	pop rax
  4211 00001F62 C60004                  	mov byte [rax], T_closure
  4212 00001F65 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4213 00001F69 48C74009[761F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0017
  4214 00001F71 E99C000000              	jmp .L_lambda_simple_end_0017
  4215                                  .L_lambda_simple_code_0017:	; lambda-simple body
  4216 00001F76 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4217 00001F7C 740B                    	je .L_lambda_simple_arity_check_ok_0017
  4218 00001F7E FF742410                	push qword [rsp + 8 * 2]
  4219 00001F82 6A01                    	push 1
  4220 00001F84 E9014B0100              	jmp L_error_incorrect_arity_simple
  4221                                  .L_lambda_simple_arity_check_ok_0017:
  4222 00001F89 C8000000                	enter 0, 0
  4223                                  	; preparing a tail-call
  4224                                  	; preparing a non-tail-call
  4225 00001F8D 488B4520                	mov rax, PARAM(0)	; param x
  4226 00001F91 50                      	push rax
  4227 00001F92 6A01                    	push 1	; arg count
  4228 00001F94 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4229 00001F9C 803805                  	cmp byte [rax], T_undefined
  4230 00001F9F 0F84FF490100            	je L_error_fvar_undefined
  4231 00001FA5 803804                  	cmp byte [rax], T_closure
  4232 00001FA8 0F857A4A0100            	jne L_error_non_closure
  4233 00001FAE FF7001                  	push SOB_CLOSURE_ENV(rax)
  4234 00001FB1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4235 00001FB4 50                      	push rax
  4236 00001FB5 6A01                    	push 1	; arg count
  4237 00001FB7 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4238 00001FBF 803805                  	cmp byte [rax], T_undefined
  4239 00001FC2 0F84DC490100            	je L_error_fvar_undefined
  4240 00001FC8 803804                  	cmp byte [rax], T_closure
  4241 00001FCB 0F85574A0100            	jne L_error_non_closure
  4242 00001FD1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4243 00001FD4 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  4244 00001FD7 FF7500                  	push qword[rbp]
  4245 00001FDA 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  4246 00001FDF 48895D10                	mov qword[rbp + 8*2],rbx
  4247 00001FE3 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  4248 00001FEB BF00000000              	mov rdi,0
  4249 00001FF0 EB00                    	jmp .L_tc_recycle_frame_loop_0017
  4250                                  .L_tc_recycle_frame_loop_0017:
  4251 00001FF2 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  4252 00001FF6 740F                    	je .L_tc_recycle_frame_done_0017
  4253 00001FF8 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  4254 00001FFD 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  4255 00002002 48FFC7                  	inc rdi
  4256 00002005 EBEB                    	jmp .L_tc_recycle_frame_loop_0017
  4257                                  .L_tc_recycle_frame_done_0017:
  4258 00002007 4889EC                  	mov rsp, rbp	; point to last argument
  4259 0000200A 5D                      	pop rbp
  4260 0000200B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4261 0000200E C9                      	leave
  4262 0000200F C21800                  	ret AND_KILL_FRAME(1)
  4263                                  .L_lambda_simple_end_0017:	; new closure is in rax
  4264 00002012 48890425[4A110000]      	mov qword [free_var_53], rax
  4265 0000201A 48B8-                   	mov rax, sob_void
  4265 0000201C [0000000000000000] 
  4266                                  
  4267 00002024 4889C7                  	mov rdi, rax
  4268 00002027 E8FA4C0100              	call print_sexpr_if_not_void
  4269 0000202C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4270 00002031 E89B4A0100              	call malloc
  4271 00002036 50                      	push rax
  4272 00002037 BF00000000              	mov rdi, 8 * 0	; new rib
  4273 0000203C E8904A0100              	call malloc
  4274 00002041 50                      	push rax
  4275 00002042 BF08000000              	mov rdi, 8 * 1	; extended env
  4276 00002047 E8854A0100              	call malloc
  4277 0000204C 488B7D10                	mov rdi, ENV
  4278 00002050 BE00000000              	mov rsi, 0
  4279 00002055 BA01000000              	mov rdx, 1
  4280                                  .L_lambda_simple_env_loop_0018:	; ext_env[i + 1] <-- env[i]
  4281 0000205A 4883FE00                	cmp rsi, 0
  4282 0000205E 7410                    	je .L_lambda_simple_env_end_0018
  4283 00002060 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4284 00002064 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4285 00002068 48FFC6                  	inc rsi
  4286 0000206B 48FFC2                  	inc rdx
  4287 0000206E EBEA                    	jmp .L_lambda_simple_env_loop_0018
  4288                                  .L_lambda_simple_env_end_0018:
  4289 00002070 5B                      	pop rbx
  4290 00002071 BE00000000              	mov rsi, 0
  4291                                  .L_lambda_simple_params_loop_0018:	; copy params
  4292 00002076 4883FE00                	cmp rsi, 0
  4293 0000207A 740E                    	je .L_lambda_simple_params_end_0018
  4294 0000207C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4295 00002081 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4296 00002085 48FFC6                  	inc rsi
  4297 00002088 EBEC                    	jmp .L_lambda_simple_params_loop_0018
  4298                                  .L_lambda_simple_params_end_0018:
  4299 0000208A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4300 0000208D 4889C3                  	mov rbx, rax
  4301 00002090 58                      	pop rax
  4302 00002091 C60004                  	mov byte [rax], T_closure
  4303 00002094 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4304 00002098 48C74009[A5200000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0018
  4305 000020A0 E99C000000              	jmp .L_lambda_simple_end_0018
  4306                                  .L_lambda_simple_code_0018:	; lambda-simple body
  4307 000020A5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4308 000020AB 740B                    	je .L_lambda_simple_arity_check_ok_0018
  4309 000020AD FF742410                	push qword [rsp + 8 * 2]
  4310 000020B1 6A01                    	push 1
  4311 000020B3 E9D2490100              	jmp L_error_incorrect_arity_simple
  4312                                  .L_lambda_simple_arity_check_ok_0018:
  4313 000020B8 C8000000                	enter 0, 0
  4314                                  	; preparing a tail-call
  4315                                  	; preparing a non-tail-call
  4316 000020BC 488B4520                	mov rax, PARAM(0)	; param x
  4317 000020C0 50                      	push rax
  4318 000020C1 6A01                    	push 1	; arg count
  4319 000020C3 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4320 000020CB 803805                  	cmp byte [rax], T_undefined
  4321 000020CE 0F84D0480100            	je L_error_fvar_undefined
  4322 000020D4 803804                  	cmp byte [rax], T_closure
  4323 000020D7 0F854B490100            	jne L_error_non_closure
  4324 000020DD FF7001                  	push SOB_CLOSURE_ENV(rax)
  4325 000020E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4326 000020E3 50                      	push rax
  4327 000020E4 6A01                    	push 1	; arg count
  4328 000020E6 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4329 000020EE 803805                  	cmp byte [rax], T_undefined
  4330 000020F1 0F84AD480100            	je L_error_fvar_undefined
  4331 000020F7 803804                  	cmp byte [rax], T_closure
  4332 000020FA 0F8528490100            	jne L_error_non_closure
  4333 00002100 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4334 00002103 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  4335 00002106 FF7500                  	push qword[rbp]
  4336 00002109 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  4337 0000210E 48895D10                	mov qword[rbp + 8*2],rbx
  4338 00002112 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  4339 0000211A BF00000000              	mov rdi,0
  4340 0000211F EB00                    	jmp .L_tc_recycle_frame_loop_0018
  4341                                  .L_tc_recycle_frame_loop_0018:
  4342 00002121 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  4343 00002125 740F                    	je .L_tc_recycle_frame_done_0018
  4344 00002127 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  4345 0000212C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  4346 00002131 48FFC7                  	inc rdi
  4347 00002134 EBEB                    	jmp .L_tc_recycle_frame_loop_0018
  4348                                  .L_tc_recycle_frame_done_0018:
  4349 00002136 4889EC                  	mov rsp, rbp	; point to last argument
  4350 00002139 5D                      	pop rbp
  4351 0000213A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4352 0000213D C9                      	leave
  4353 0000213E C21800                  	ret AND_KILL_FRAME(1)
  4354                                  .L_lambda_simple_end_0018:	; new closure is in rax
  4355 00002141 48890425[5B110000]      	mov qword [free_var_54], rax
  4356 00002149 48B8-                   	mov rax, sob_void
  4356 0000214B [0000000000000000] 
  4357                                  
  4358 00002153 4889C7                  	mov rdi, rax
  4359 00002156 E8CB4B0100              	call print_sexpr_if_not_void
  4360 0000215B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4361 00002160 E86C490100              	call malloc
  4362 00002165 50                      	push rax
  4363 00002166 BF00000000              	mov rdi, 8 * 0	; new rib
  4364 0000216B E861490100              	call malloc
  4365 00002170 50                      	push rax
  4366 00002171 BF08000000              	mov rdi, 8 * 1	; extended env
  4367 00002176 E856490100              	call malloc
  4368 0000217B 488B7D10                	mov rdi, ENV
  4369 0000217F BE00000000              	mov rsi, 0
  4370 00002184 BA01000000              	mov rdx, 1
  4371                                  .L_lambda_simple_env_loop_0019:	; ext_env[i + 1] <-- env[i]
  4372 00002189 4883FE00                	cmp rsi, 0
  4373 0000218D 7410                    	je .L_lambda_simple_env_end_0019
  4374 0000218F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4375 00002193 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4376 00002197 48FFC6                  	inc rsi
  4377 0000219A 48FFC2                  	inc rdx
  4378 0000219D EBEA                    	jmp .L_lambda_simple_env_loop_0019
  4379                                  .L_lambda_simple_env_end_0019:
  4380 0000219F 5B                      	pop rbx
  4381 000021A0 BE00000000              	mov rsi, 0
  4382                                  .L_lambda_simple_params_loop_0019:	; copy params
  4383 000021A5 4883FE00                	cmp rsi, 0
  4384 000021A9 740E                    	je .L_lambda_simple_params_end_0019
  4385 000021AB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4386 000021B0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4387 000021B4 48FFC6                  	inc rsi
  4388 000021B7 EBEC                    	jmp .L_lambda_simple_params_loop_0019
  4389                                  .L_lambda_simple_params_end_0019:
  4390 000021B9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4391 000021BC 4889C3                  	mov rbx, rax
  4392 000021BF 58                      	pop rax
  4393 000021C0 C60004                  	mov byte [rax], T_closure
  4394 000021C3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4395 000021C7 48C74009[D4210000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0019
  4396 000021CF E99C000000              	jmp .L_lambda_simple_end_0019
  4397                                  .L_lambda_simple_code_0019:	; lambda-simple body
  4398 000021D4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4399 000021DA 740B                    	je .L_lambda_simple_arity_check_ok_0019
  4400 000021DC FF742410                	push qword [rsp + 8 * 2]
  4401 000021E0 6A01                    	push 1
  4402 000021E2 E9A3480100              	jmp L_error_incorrect_arity_simple
  4403                                  .L_lambda_simple_arity_check_ok_0019:
  4404 000021E7 C8000000                	enter 0, 0
  4405                                  	; preparing a tail-call
  4406                                  	; preparing a non-tail-call
  4407 000021EB 488B4520                	mov rax, PARAM(0)	; param x
  4408 000021EF 50                      	push rax
  4409 000021F0 6A01                    	push 1	; arg count
  4410 000021F2 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
  4411 000021FA 803805                  	cmp byte [rax], T_undefined
  4412 000021FD 0F84A1470100            	je L_error_fvar_undefined
  4413 00002203 803804                  	cmp byte [rax], T_closure
  4414 00002206 0F851C480100            	jne L_error_non_closure
  4415 0000220C FF7001                  	push SOB_CLOSURE_ENV(rax)
  4416 0000220F FF5009                  	call SOB_CLOSURE_CODE(rax)
  4417 00002212 50                      	push rax
  4418 00002213 6A01                    	push 1	; arg count
  4419 00002215 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4420 0000221D 803805                  	cmp byte [rax], T_undefined
  4421 00002220 0F847E470100            	je L_error_fvar_undefined
  4422 00002226 803804                  	cmp byte [rax], T_closure
  4423 00002229 0F85F9470100            	jne L_error_non_closure
  4424 0000222F FF7001                  	push SOB_CLOSURE_ENV(rax)
  4425 00002232 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  4426 00002235 FF7500                  	push qword[rbp]
  4427 00002238 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  4428 0000223D 48895D10                	mov qword[rbp + 8*2],rbx
  4429 00002241 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  4430 00002249 BF00000000              	mov rdi,0
  4431 0000224E EB00                    	jmp .L_tc_recycle_frame_loop_0019
  4432                                  .L_tc_recycle_frame_loop_0019:
  4433 00002250 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  4434 00002254 740F                    	je .L_tc_recycle_frame_done_0019
  4435 00002256 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  4436 0000225B 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  4437 00002260 48FFC7                  	inc rdi
  4438 00002263 EBEB                    	jmp .L_tc_recycle_frame_loop_0019
  4439                                  .L_tc_recycle_frame_done_0019:
  4440 00002265 4889EC                  	mov rsp, rbp	; point to last argument
  4441 00002268 5D                      	pop rbp
  4442 00002269 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4443 0000226C C9                      	leave
  4444 0000226D C21800                  	ret AND_KILL_FRAME(1)
  4445                                  .L_lambda_simple_end_0019:	; new closure is in rax
  4446 00002270 48890425[8E110000]      	mov qword [free_var_57], rax
  4447 00002278 48B8-                   	mov rax, sob_void
  4447 0000227A [0000000000000000] 
  4448                                  
  4449 00002282 4889C7                  	mov rdi, rax
  4450 00002285 E89C4A0100              	call print_sexpr_if_not_void
  4451 0000228A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4452 0000228F E83D480100              	call malloc
  4453 00002294 50                      	push rax
  4454 00002295 BF00000000              	mov rdi, 8 * 0	; new rib
  4455 0000229A E832480100              	call malloc
  4456 0000229F 50                      	push rax
  4457 000022A0 BF08000000              	mov rdi, 8 * 1	; extended env
  4458 000022A5 E827480100              	call malloc
  4459 000022AA 488B7D10                	mov rdi, ENV
  4460 000022AE BE00000000              	mov rsi, 0
  4461 000022B3 BA01000000              	mov rdx, 1
  4462                                  .L_lambda_simple_env_loop_001a:	; ext_env[i + 1] <-- env[i]
  4463 000022B8 4883FE00                	cmp rsi, 0
  4464 000022BC 7410                    	je .L_lambda_simple_env_end_001a
  4465 000022BE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4466 000022C2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4467 000022C6 48FFC6                  	inc rsi
  4468 000022C9 48FFC2                  	inc rdx
  4469 000022CC EBEA                    	jmp .L_lambda_simple_env_loop_001a
  4470                                  .L_lambda_simple_env_end_001a:
  4471 000022CE 5B                      	pop rbx
  4472 000022CF BE00000000              	mov rsi, 0
  4473                                  .L_lambda_simple_params_loop_001a:	; copy params
  4474 000022D4 4883FE00                	cmp rsi, 0
  4475 000022D8 740E                    	je .L_lambda_simple_params_end_001a
  4476 000022DA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4477 000022DF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4478 000022E3 48FFC6                  	inc rsi
  4479 000022E6 EBEC                    	jmp .L_lambda_simple_params_loop_001a
  4480                                  .L_lambda_simple_params_end_001a:
  4481 000022E8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4482 000022EB 4889C3                  	mov rbx, rax
  4483 000022EE 58                      	pop rax
  4484 000022EF C60004                  	mov byte [rax], T_closure
  4485 000022F2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4486 000022F6 48C74009[03230000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001a
  4487 000022FE E99C000000              	jmp .L_lambda_simple_end_001a
  4488                                  .L_lambda_simple_code_001a:	; lambda-simple body
  4489 00002303 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4490 00002309 740B                    	je .L_lambda_simple_arity_check_ok_001a
  4491 0000230B FF742410                	push qword [rsp + 8 * 2]
  4492 0000230F 6A01                    	push 1
  4493 00002311 E974470100              	jmp L_error_incorrect_arity_simple
  4494                                  .L_lambda_simple_arity_check_ok_001a:
  4495 00002316 C8000000                	enter 0, 0
  4496                                  	; preparing a tail-call
  4497                                  	; preparing a non-tail-call
  4498 0000231A 488B4520                	mov rax, PARAM(0)	; param x
  4499 0000231E 50                      	push rax
  4500 0000231F 6A01                    	push 1	; arg count
  4501 00002321 488B0425[F5100000]      	mov rax, qword [free_var_48]	; free var cadr
  4502 00002329 803805                  	cmp byte [rax], T_undefined
  4503 0000232C 0F8472460100            	je L_error_fvar_undefined
  4504 00002332 803804                  	cmp byte [rax], T_closure
  4505 00002335 0F85ED460100            	jne L_error_non_closure
  4506 0000233B FF7001                  	push SOB_CLOSURE_ENV(rax)
  4507 0000233E FF5009                  	call SOB_CLOSURE_CODE(rax)
  4508 00002341 50                      	push rax
  4509 00002342 6A01                    	push 1	; arg count
  4510 00002344 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4511 0000234C 803805                  	cmp byte [rax], T_undefined
  4512 0000234F 0F844F460100            	je L_error_fvar_undefined
  4513 00002355 803804                  	cmp byte [rax], T_closure
  4514 00002358 0F85CA460100            	jne L_error_non_closure
  4515 0000235E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4516 00002361 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  4517 00002364 FF7500                  	push qword[rbp]
  4518 00002367 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  4519 0000236C 48895D10                	mov qword[rbp + 8*2],rbx
  4520 00002370 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  4521 00002378 BF00000000              	mov rdi,0
  4522 0000237D EB00                    	jmp .L_tc_recycle_frame_loop_001a
  4523                                  .L_tc_recycle_frame_loop_001a:
  4524 0000237F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  4525 00002383 740F                    	je .L_tc_recycle_frame_done_001a
  4526 00002385 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  4527 0000238A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  4528 0000238F 48FFC7                  	inc rdi
  4529 00002392 EBEB                    	jmp .L_tc_recycle_frame_loop_001a
  4530                                  .L_tc_recycle_frame_done_001a:
  4531 00002394 4889EC                  	mov rsp, rbp	; point to last argument
  4532 00002397 5D                      	pop rbp
  4533 00002398 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4534 0000239B C9                      	leave
  4535 0000239C C21800                  	ret AND_KILL_FRAME(1)
  4536                                  .L_lambda_simple_end_001a:	; new closure is in rax
  4537 0000239F 48890425[9F110000]      	mov qword [free_var_58], rax
  4538 000023A7 48B8-                   	mov rax, sob_void
  4538 000023A9 [0000000000000000] 
  4539                                  
  4540 000023B1 4889C7                  	mov rdi, rax
  4541 000023B4 E86D490100              	call print_sexpr_if_not_void
  4542 000023B9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4543 000023BE E80E470100              	call malloc
  4544 000023C3 50                      	push rax
  4545 000023C4 BF00000000              	mov rdi, 8 * 0	; new rib
  4546 000023C9 E803470100              	call malloc
  4547 000023CE 50                      	push rax
  4548 000023CF BF08000000              	mov rdi, 8 * 1	; extended env
  4549 000023D4 E8F8460100              	call malloc
  4550 000023D9 488B7D10                	mov rdi, ENV
  4551 000023DD BE00000000              	mov rsi, 0
  4552 000023E2 BA01000000              	mov rdx, 1
  4553                                  .L_lambda_simple_env_loop_001b:	; ext_env[i + 1] <-- env[i]
  4554 000023E7 4883FE00                	cmp rsi, 0
  4555 000023EB 7410                    	je .L_lambda_simple_env_end_001b
  4556 000023ED 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4557 000023F1 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4558 000023F5 48FFC6                  	inc rsi
  4559 000023F8 48FFC2                  	inc rdx
  4560 000023FB EBEA                    	jmp .L_lambda_simple_env_loop_001b
  4561                                  .L_lambda_simple_env_end_001b:
  4562 000023FD 5B                      	pop rbx
  4563 000023FE BE00000000              	mov rsi, 0
  4564                                  .L_lambda_simple_params_loop_001b:	; copy params
  4565 00002403 4883FE00                	cmp rsi, 0
  4566 00002407 740E                    	je .L_lambda_simple_params_end_001b
  4567 00002409 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4568 0000240E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4569 00002412 48FFC6                  	inc rsi
  4570 00002415 EBEC                    	jmp .L_lambda_simple_params_loop_001b
  4571                                  .L_lambda_simple_params_end_001b:
  4572 00002417 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4573 0000241A 4889C3                  	mov rbx, rax
  4574 0000241D 58                      	pop rax
  4575 0000241E C60004                  	mov byte [rax], T_closure
  4576 00002421 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4577 00002425 48C74009[32240000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001b
  4578 0000242D E99C000000              	jmp .L_lambda_simple_end_001b
  4579                                  .L_lambda_simple_code_001b:	; lambda-simple body
  4580 00002432 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4581 00002438 740B                    	je .L_lambda_simple_arity_check_ok_001b
  4582 0000243A FF742410                	push qword [rsp + 8 * 2]
  4583 0000243E 6A01                    	push 1
  4584 00002440 E945460100              	jmp L_error_incorrect_arity_simple
  4585                                  .L_lambda_simple_arity_check_ok_001b:
  4586 00002445 C8000000                	enter 0, 0
  4587                                  	; preparing a tail-call
  4588                                  	; preparing a non-tail-call
  4589 00002449 488B4520                	mov rax, PARAM(0)	; param x
  4590 0000244D 50                      	push rax
  4591 0000244E 6A01                    	push 1	; arg count
  4592 00002450 488B0425[7D110000]      	mov rax, qword [free_var_56]	; free var cdar
  4593 00002458 803805                  	cmp byte [rax], T_undefined
  4594 0000245B 0F8443450100            	je L_error_fvar_undefined
  4595 00002461 803804                  	cmp byte [rax], T_closure
  4596 00002464 0F85BE450100            	jne L_error_non_closure
  4597 0000246A FF7001                  	push SOB_CLOSURE_ENV(rax)
  4598 0000246D FF5009                  	call SOB_CLOSURE_CODE(rax)
  4599 00002470 50                      	push rax
  4600 00002471 6A01                    	push 1	; arg count
  4601 00002473 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4602 0000247B 803805                  	cmp byte [rax], T_undefined
  4603 0000247E 0F8420450100            	je L_error_fvar_undefined
  4604 00002484 803804                  	cmp byte [rax], T_closure
  4605 00002487 0F859B450100            	jne L_error_non_closure
  4606 0000248D FF7001                  	push SOB_CLOSURE_ENV(rax)
  4607 00002490 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  4608 00002493 FF7500                  	push qword[rbp]
  4609 00002496 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  4610 0000249B 48895D10                	mov qword[rbp + 8*2],rbx
  4611 0000249F 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  4612 000024A7 BF00000000              	mov rdi,0
  4613 000024AC EB00                    	jmp .L_tc_recycle_frame_loop_001b
  4614                                  .L_tc_recycle_frame_loop_001b:
  4615 000024AE 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  4616 000024B2 740F                    	je .L_tc_recycle_frame_done_001b
  4617 000024B4 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  4618 000024B9 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  4619 000024BE 48FFC7                  	inc rdi
  4620 000024C1 EBEB                    	jmp .L_tc_recycle_frame_loop_001b
  4621                                  .L_tc_recycle_frame_done_001b:
  4622 000024C3 4889EC                  	mov rsp, rbp	; point to last argument
  4623 000024C6 5D                      	pop rbp
  4624 000024C7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4625 000024CA C9                      	leave
  4626 000024CB C21800                  	ret AND_KILL_FRAME(1)
  4627                                  .L_lambda_simple_end_001b:	; new closure is in rax
  4628 000024CE 48890425[C1110000]      	mov qword [free_var_60], rax
  4629 000024D6 48B8-                   	mov rax, sob_void
  4629 000024D8 [0000000000000000] 
  4630                                  
  4631 000024E0 4889C7                  	mov rdi, rax
  4632 000024E3 E83E480100              	call print_sexpr_if_not_void
  4633 000024E8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4634 000024ED E8DF450100              	call malloc
  4635 000024F2 50                      	push rax
  4636 000024F3 BF00000000              	mov rdi, 8 * 0	; new rib
  4637 000024F8 E8D4450100              	call malloc
  4638 000024FD 50                      	push rax
  4639 000024FE BF08000000              	mov rdi, 8 * 1	; extended env
  4640 00002503 E8C9450100              	call malloc
  4641 00002508 488B7D10                	mov rdi, ENV
  4642 0000250C BE00000000              	mov rsi, 0
  4643 00002511 BA01000000              	mov rdx, 1
  4644                                  .L_lambda_simple_env_loop_001c:	; ext_env[i + 1] <-- env[i]
  4645 00002516 4883FE00                	cmp rsi, 0
  4646 0000251A 7410                    	je .L_lambda_simple_env_end_001c
  4647 0000251C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4648 00002520 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4649 00002524 48FFC6                  	inc rsi
  4650 00002527 48FFC2                  	inc rdx
  4651 0000252A EBEA                    	jmp .L_lambda_simple_env_loop_001c
  4652                                  .L_lambda_simple_env_end_001c:
  4653 0000252C 5B                      	pop rbx
  4654 0000252D BE00000000              	mov rsi, 0
  4655                                  .L_lambda_simple_params_loop_001c:	; copy params
  4656 00002532 4883FE00                	cmp rsi, 0
  4657 00002536 740E                    	je .L_lambda_simple_params_end_001c
  4658 00002538 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4659 0000253D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4660 00002541 48FFC6                  	inc rsi
  4661 00002544 EBEC                    	jmp .L_lambda_simple_params_loop_001c
  4662                                  .L_lambda_simple_params_end_001c:
  4663 00002546 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4664 00002549 4889C3                  	mov rbx, rax
  4665 0000254C 58                      	pop rax
  4666 0000254D C60004                  	mov byte [rax], T_closure
  4667 00002550 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4668 00002554 48C74009[61250000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001c
  4669 0000255C E99C000000              	jmp .L_lambda_simple_end_001c
  4670                                  .L_lambda_simple_code_001c:	; lambda-simple body
  4671 00002561 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4672 00002567 740B                    	je .L_lambda_simple_arity_check_ok_001c
  4673 00002569 FF742410                	push qword [rsp + 8 * 2]
  4674 0000256D 6A01                    	push 1
  4675 0000256F E916450100              	jmp L_error_incorrect_arity_simple
  4676                                  .L_lambda_simple_arity_check_ok_001c:
  4677 00002574 C8000000                	enter 0, 0
  4678                                  	; preparing a tail-call
  4679                                  	; preparing a non-tail-call
  4680 00002578 488B4520                	mov rax, PARAM(0)	; param x
  4681 0000257C 50                      	push rax
  4682 0000257D 6A01                    	push 1	; arg count
  4683 0000257F 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4684 00002587 803805                  	cmp byte [rax], T_undefined
  4685 0000258A 0F8414440100            	je L_error_fvar_undefined
  4686 00002590 803804                  	cmp byte [rax], T_closure
  4687 00002593 0F858F440100            	jne L_error_non_closure
  4688 00002599 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4689 0000259C FF5009                  	call SOB_CLOSURE_CODE(rax)
  4690 0000259F 50                      	push rax
  4691 000025A0 6A01                    	push 1	; arg count
  4692 000025A2 488B0425[F4110000]      	mov rax, qword [free_var_63]	; free var cddr
  4693 000025AA 803805                  	cmp byte [rax], T_undefined
  4694 000025AD 0F84F1430100            	je L_error_fvar_undefined
  4695 000025B3 803804                  	cmp byte [rax], T_closure
  4696 000025B6 0F856C440100            	jne L_error_non_closure
  4697 000025BC FF7001                  	push SOB_CLOSURE_ENV(rax)
  4698 000025BF FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  4699 000025C2 FF7500                  	push qword[rbp]
  4700 000025C5 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  4701 000025CA 48895D10                	mov qword[rbp + 8*2],rbx
  4702 000025CE 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  4703 000025D6 BF00000000              	mov rdi,0
  4704 000025DB EB00                    	jmp .L_tc_recycle_frame_loop_001c
  4705                                  .L_tc_recycle_frame_loop_001c:
  4706 000025DD 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  4707 000025E1 740F                    	je .L_tc_recycle_frame_done_001c
  4708 000025E3 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  4709 000025E8 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  4710 000025ED 48FFC7                  	inc rdi
  4711 000025F0 EBEB                    	jmp .L_tc_recycle_frame_loop_001c
  4712                                  .L_tc_recycle_frame_done_001c:
  4713 000025F2 4889EC                  	mov rsp, rbp	; point to last argument
  4714 000025F5 5D                      	pop rbp
  4715 000025F6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4716 000025F9 C9                      	leave
  4717 000025FA C21800                  	ret AND_KILL_FRAME(1)
  4718                                  .L_lambda_simple_end_001c:	; new closure is in rax
  4719 000025FD 48890425[D2110000]      	mov qword [free_var_61], rax
  4720 00002605 48B8-                   	mov rax, sob_void
  4720 00002607 [0000000000000000] 
  4721                                  
  4722 0000260F 4889C7                  	mov rdi, rax
  4723 00002612 E80F470100              	call print_sexpr_if_not_void
  4724 00002617 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4725 0000261C E8B0440100              	call malloc
  4726 00002621 50                      	push rax
  4727 00002622 BF00000000              	mov rdi, 8 * 0	; new rib
  4728 00002627 E8A5440100              	call malloc
  4729 0000262C 50                      	push rax
  4730 0000262D BF08000000              	mov rdi, 8 * 1	; extended env
  4731 00002632 E89A440100              	call malloc
  4732 00002637 488B7D10                	mov rdi, ENV
  4733 0000263B BE00000000              	mov rsi, 0
  4734 00002640 BA01000000              	mov rdx, 1
  4735                                  .L_lambda_simple_env_loop_001d:	; ext_env[i + 1] <-- env[i]
  4736 00002645 4883FE00                	cmp rsi, 0
  4737 00002649 7410                    	je .L_lambda_simple_env_end_001d
  4738 0000264B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4739 0000264F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4740 00002653 48FFC6                  	inc rsi
  4741 00002656 48FFC2                  	inc rdx
  4742 00002659 EBEA                    	jmp .L_lambda_simple_env_loop_001d
  4743                                  .L_lambda_simple_env_end_001d:
  4744 0000265B 5B                      	pop rbx
  4745 0000265C BE00000000              	mov rsi, 0
  4746                                  .L_lambda_simple_params_loop_001d:	; copy params
  4747 00002661 4883FE00                	cmp rsi, 0
  4748 00002665 740E                    	je .L_lambda_simple_params_end_001d
  4749 00002667 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4750 0000266C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4751 00002670 48FFC6                  	inc rsi
  4752 00002673 EBEC                    	jmp .L_lambda_simple_params_loop_001d
  4753                                  .L_lambda_simple_params_end_001d:
  4754 00002675 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4755 00002678 4889C3                  	mov rbx, rax
  4756 0000267B 58                      	pop rax
  4757 0000267C C60004                  	mov byte [rax], T_closure
  4758 0000267F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4759 00002683 48C74009[90260000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001d
  4760 0000268B E90E010000              	jmp .L_lambda_simple_end_001d
  4761                                  .L_lambda_simple_code_001d:	; lambda-simple body
  4762 00002690 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4763 00002696 740B                    	je .L_lambda_simple_arity_check_ok_001d
  4764 00002698 FF742410                	push qword [rsp + 8 * 2]
  4765 0000269C 6A01                    	push 1
  4766 0000269E E9E7430100              	jmp L_error_incorrect_arity_simple
  4767                                  .L_lambda_simple_arity_check_ok_001d:
  4768 000026A3 C8000000                	enter 0, 0
  4769                                  	; preparing a non-tail-call
  4770 000026A7 488B4520                	mov rax, PARAM(0)	; param e
  4771 000026AB 50                      	push rax
  4772 000026AC 6A01                    	push 1	; arg count
  4773 000026AE 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  4774 000026B6 803805                  	cmp byte [rax], T_undefined
  4775 000026B9 0F84E5420100            	je L_error_fvar_undefined
  4776 000026BF 803804                  	cmp byte [rax], T_closure
  4777 000026C2 0F8560430100            	jne L_error_non_closure
  4778 000026C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4779 000026CB FF5009                  	call SOB_CLOSURE_CODE(rax)
  4780 000026CE 483D[02000000]          	cmp rax, sob_boolean_false
  4781 000026D4 0F85C0000000            	jne .L_or_end_0001
  4782                                  	; preparing a non-tail-call
  4783 000026DA 488B4520                	mov rax, PARAM(0)	; param e
  4784 000026DE 50                      	push rax
  4785 000026DF 6A01                    	push 1	; arg count
  4786 000026E1 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  4787 000026E9 803805                  	cmp byte [rax], T_undefined
  4788 000026EC 0F84B2420100            	je L_error_fvar_undefined
  4789 000026F2 803804                  	cmp byte [rax], T_closure
  4790 000026F5 0F852D430100            	jne L_error_non_closure
  4791 000026FB FF7001                  	push SOB_CLOSURE_ENV(rax)
  4792 000026FE FF5009                  	call SOB_CLOSURE_CODE(rax)
  4793 00002701 483D[02000000]          	cmp rax, sob_boolean_false
  4794 00002707 0F8483000000            	je .L_if_else_0001
  4795                                  	; preparing a tail-call
  4796                                  	; preparing a non-tail-call
  4797 0000270D 488B4520                	mov rax, PARAM(0)	; param e
  4798 00002711 50                      	push rax
  4799 00002712 6A01                    	push 1	; arg count
  4800 00002714 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  4801 0000271C 803805                  	cmp byte [rax], T_undefined
  4802 0000271F 0F847F420100            	je L_error_fvar_undefined
  4803 00002725 803804                  	cmp byte [rax], T_closure
  4804 00002728 0F85FA420100            	jne L_error_non_closure
  4805 0000272E FF7001                  	push SOB_CLOSURE_ENV(rax)
  4806 00002731 FF5009                  	call SOB_CLOSURE_CODE(rax)
  4807 00002734 50                      	push rax
  4808 00002735 6A01                    	push 1	; arg count
  4809 00002737 488B0425[25140000]      	mov rax, qword [free_var_96]	; free var list?
  4810 0000273F 803805                  	cmp byte [rax], T_undefined
  4811 00002742 0F845C420100            	je L_error_fvar_undefined
  4812 00002748 803804                  	cmp byte [rax], T_closure
  4813 0000274B 0F85D7420100            	jne L_error_non_closure
  4814 00002751 FF7001                  	push SOB_CLOSURE_ENV(rax)
  4815 00002754 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  4816 00002757 FF7500                  	push qword[rbp]
  4817 0000275A 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  4818 0000275F 48895D10                	mov qword[rbp + 8*2],rbx
  4819 00002763 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  4820 0000276B BF00000000              	mov rdi,0
  4821 00002770 EB00                    	jmp .L_tc_recycle_frame_loop_001d
  4822                                  .L_tc_recycle_frame_loop_001d:
  4823 00002772 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  4824 00002776 740F                    	je .L_tc_recycle_frame_done_001d
  4825 00002778 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  4826 0000277D 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  4827 00002782 48FFC7                  	inc rdi
  4828 00002785 EBEB                    	jmp .L_tc_recycle_frame_loop_001d
  4829                                  .L_tc_recycle_frame_done_001d:
  4830 00002787 4889EC                  	mov rsp, rbp	; point to last argument
  4831 0000278A 5D                      	pop rbp
  4832 0000278B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  4833 0000278E EB0A                    	jmp .L_if_end_0001
  4834                                  .L_if_else_0001:
  4835 00002790 48B8-                   	mov rax, L_constants + 2
  4835 00002792 [0200000000000000] 
  4836                                  .L_if_end_0001:
  4837                                  .L_or_end_0001:
  4838 0000279A C9                      	leave
  4839 0000279B C21800                  	ret AND_KILL_FRAME(1)
  4840                                  .L_lambda_simple_end_001d:	; new closure is in rax
  4841 0000279E 48890425[25140000]      	mov qword [free_var_96], rax
  4842 000027A6 48B8-                   	mov rax, sob_void
  4842 000027A8 [0000000000000000] 
  4843                                  
  4844 000027B0 4889C7                  	mov rdi, rax
  4845 000027B3 E86E450100              	call print_sexpr_if_not_void
  4846 000027B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4847 000027BD E80F430100              	call malloc
  4848 000027C2 50                      	push rax
  4849 000027C3 BF00000000              	mov rdi, 8 * 0	; new rib
  4850 000027C8 E804430100              	call malloc
  4851 000027CD 50                      	push rax
  4852 000027CE BF08000000              	mov rdi, 8 * 1	; extended env
  4853 000027D3 E8F9420100              	call malloc
  4854 000027D8 488B7D10                	mov rdi, ENV
  4855 000027DC BE00000000              	mov rsi, 0
  4856 000027E1 BA01000000              	mov rdx, 1
  4857                                  .L_lambda_opt_env_loop_0001:	; ext_env[i + 1] <-- env[i]
  4858 000027E6 4883FE00                	cmp rsi, 0
  4859 000027EA 7410                    	je .L_lambda_opt_env_end_0001
  4860 000027EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4861 000027F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4862 000027F4 48FFC6                  	inc rsi
  4863 000027F7 48FFC2                  	inc rdx
  4864 000027FA EBEA                    	jmp .L_lambda_opt_env_loop_0001
  4865                                  .L_lambda_opt_env_end_0001:
  4866 000027FC 5B                      	pop rbx
  4867 000027FD BE00000000              	mov rsi, 0
  4868                                  .L_lambda_opt_params_loop_0001:	; copy params
  4869 00002802 4883FE00                	cmp rsi, 0
  4870 00002806 740E                    	je .L_lambda_opt_params_end_0001
  4871 00002808 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4872 0000280D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4873 00002811 48FFC6                  	inc rsi
  4874 00002814 EBEC                    	jmp .L_lambda_opt_params_loop_0001
  4875                                  .L_lambda_opt_params_end_0001:
  4876 00002816 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4877 00002819 4889C3                  	mov rbx, rax
  4878 0000281C 58                      	pop rax
  4879 0000281D C60004                  	mov byte [rax], T_closure
  4880 00002820 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4881 00002824 48C74009[31280000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0001
  4882 0000282C E9FA000000              	jmp .L_lambda_opt_end_0001
  4883                                  .L_lambda_opt_code_0001:	; lambda-opt body
  4884 00002831 48837C241000            	cmp qword [rsp + 8 * 2], 0
  4885 00002837 740D                    	je .L_lambda_opt_arity_check_exact_0001
  4886 00002839 7F4C                    	jg .L_lambda_opt_arity_check_more_0001
  4887 0000283B FF742410                	push qword [rsp + 8 * 2]
  4888 0000283F 6A00                    	push 0
  4889 00002841 E958420100              	jmp L_error_incorrect_arity_opt
  4890                                  .L_lambda_opt_arity_check_exact_0001:
  4891 00002846 4883EC08                	sub rsp, 8
  4892 0000284A 488B442408              	mov rax, qword[rsp + 8 *1]
  4893 0000284F 48890424                	mov qword[rsp], rax  
  4894 00002853 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  4895 00002858 4889442408              	mov qword[rsp + 8 * 1], rax
  4896 0000285D B801000000              	mov rax, 1
  4897 00002862 4889442410              	mov qword[rsp + 8 *2], rax
  4898 00002867 48B8-                   	mov rax, sob_nil
  4898 00002869 [0100000000000000] 
  4899 00002871 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  4900 00002876 C8000000                	enter 0, 0
  4901 0000287A 488B4520                	mov rax, PARAM(0)	; param args
  4902 0000287E C9                      	leave
  4903 0000287F C21800                  	ret AND_KILL_FRAME(1)
  4904 00002882 E9A4000000              	jmp .L_lambda_opt_end_0001	; new closure is in rax
  4905                                  .L_lambda_opt_arity_check_more_0001:
  4906 00002887 488B442410              	mov rax, qword[rsp + 2 * 8]
  4907 0000288C 4889C7                  	mov rdi, rax
  4908 0000288F 49B9-                   	mov r9, sob_nil
  4908 00002891 [0100000000000000] 
  4909 00002899 4C8B442410              	mov r8, qword[rsp+2*8]
  4910                                  .L_lambda_opt_stack_shrink_loop_0001:
  4911 0000289E 4983F800                	cmp r8, 0
  4912 000028A2 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0001
  4913 000028A4 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  4914 000028A9 BF11000000              	mov rdi, 1+8+8	;for pair
  4915 000028AE E81E420100              	call malloc	 ;to create the pair in the stack
  4916 000028B3 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  4917 000028B6 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  4918 000028BA 4C894809                 	mov qword[rax+1+8],r9
  4919 000028BE 4989C1                  	mov r9 , rax	 ; for the recursion 
  4920 000028C1 49FFC8                  	dec r8
  4921 000028C4 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0001
  4922                                  .L_lambda_opt_stack_shrink_loop_exit_0001:
  4923 000028C6 488B442410              	mov rax, qword[rsp + 2 * 8]
  4924 000028CB BF01000000              	mov rdi, 1
  4925 000028D0 4829F8                  	sub rax, rdi
  4926 000028D3 4889C7                  	mov rdi, rax
  4927 000028D6 486BC008                	imul rax,8
  4928 000028DA 4801C4                  	add rsp, rax
  4929 000028DD 4889E0                  	mov rax, rsp
  4930 000028E0 4989F8                  	mov r8, rdi
  4931 000028E3 4D6BC008                	imul r8, 8
  4932 000028E7 4C29C0                  	sub rax, r8
  4933 000028EA 4989C2                  	mov r10, rax	; holds the original ret in the stack
  4934 000028ED 4983C218                	add r10, 8*3
  4935 000028F1 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  4936 000028F5 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  4937 000028F8 4D6BC008                	imul r8,8
  4938 000028FC 4C01C0                  	add rax, r8
  4939 000028FF 4C8908                  	mov qword[rax] ,r9
  4940 00002902 4983EA18                 	sub r10, 8*3
  4941 00002906 48C744241001000000      	mov qword [rsp+2*8], 1
  4942 0000290F 498B4208                	mov rax, qword[r10 + 1 * 8]
  4943 00002913 4889442408              	mov qword[rsp + 1*8] ,rax
  4944 00002918 498B02                  	mov rax, qword[r10]
  4945 0000291B 48890424                	mov qword[rsp], rax
  4946 0000291F C8000000                	enter 0, 0
  4947 00002923 488B4520                	mov rax, PARAM(0)	; param args
  4948 00002927 C9                      	leave
  4949 00002928 C21800                  	ret AND_KILL_FRAME(1)
  4950                                  .L_lambda_opt_end_0001:	; new closure is in rax
  4951 0000292B 48890425[E1130000]      	mov qword [free_var_92], rax
  4952 00002933 48B8-                   	mov rax, sob_void
  4952 00002935 [0000000000000000] 
  4953                                  
  4954 0000293D 4889C7                  	mov rdi, rax
  4955 00002940 E8E1430100              	call print_sexpr_if_not_void
  4956 00002945 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  4957 0000294A E882410100              	call malloc
  4958 0000294F 50                      	push rax
  4959 00002950 BF00000000              	mov rdi, 8 * 0	; new rib
  4960 00002955 E877410100              	call malloc
  4961 0000295A 50                      	push rax
  4962 0000295B BF08000000              	mov rdi, 8 * 1	; extended env
  4963 00002960 E86C410100              	call malloc
  4964 00002965 488B7D10                	mov rdi, ENV
  4965 00002969 BE00000000              	mov rsi, 0
  4966 0000296E BA01000000              	mov rdx, 1
  4967                                  .L_lambda_simple_env_loop_001e:	; ext_env[i + 1] <-- env[i]
  4968 00002973 4883FE00                	cmp rsi, 0
  4969 00002977 7410                    	je .L_lambda_simple_env_end_001e
  4970 00002979 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  4971 0000297D 48890CD0                	mov qword [rax + 8 * rdx], rcx
  4972 00002981 48FFC6                  	inc rsi
  4973 00002984 48FFC2                  	inc rdx
  4974 00002987 EBEA                    	jmp .L_lambda_simple_env_loop_001e
  4975                                  .L_lambda_simple_env_end_001e:
  4976 00002989 5B                      	pop rbx
  4977 0000298A BE00000000              	mov rsi, 0
  4978                                  .L_lambda_simple_params_loop_001e:	; copy params
  4979 0000298F 4883FE00                	cmp rsi, 0
  4980 00002993 740E                    	je .L_lambda_simple_params_end_001e
  4981 00002995 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  4982 0000299A 488914F3                	mov qword [rbx + 8 * rsi], rdx
  4983 0000299E 48FFC6                  	inc rsi
  4984 000029A1 EBEC                    	jmp .L_lambda_simple_params_loop_001e
  4985                                  .L_lambda_simple_params_end_001e:
  4986 000029A3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  4987 000029A6 4889C3                  	mov rbx, rax
  4988 000029A9 58                      	pop rax
  4989 000029AA C60004                  	mov byte [rax], T_closure
  4990 000029AD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  4991 000029B1 48C74009[BB290000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001e
  4992 000029B9 EB3D                    	jmp .L_lambda_simple_end_001e
  4993                                  .L_lambda_simple_code_001e:	; lambda-simple body
  4994 000029BB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  4995 000029C1 740B                    	je .L_lambda_simple_arity_check_ok_001e
  4996 000029C3 FF742410                	push qword [rsp + 8 * 2]
  4997 000029C7 6A01                    	push 1
  4998 000029C9 E9BC400100              	jmp L_error_incorrect_arity_simple
  4999                                  .L_lambda_simple_arity_check_ok_001e:
  5000 000029CE C8000000                	enter 0, 0
  5001 000029D2 488B4520                	mov rax, PARAM(0)	; param x
  5002 000029D6 483D[02000000]          	cmp rax, sob_boolean_false
  5003 000029DC 740C                    	je .L_if_else_0002
  5004 000029DE 48B8-                   	mov rax, L_constants + 2
  5004 000029E0 [0200000000000000] 
  5005 000029E8 EB0A                    	jmp .L_if_end_0002
  5006                                  .L_if_else_0002:
  5007 000029EA 48B8-                   	mov rax, L_constants + 3
  5007 000029EC [0300000000000000] 
  5008                                  .L_if_end_0002:
  5009 000029F4 C9                      	leave
  5010 000029F5 C21800                  	ret AND_KILL_FRAME(1)
  5011                                  .L_lambda_simple_end_001e:	; new closure is in rax
  5012 000029F8 48890425[CF140000]      	mov qword [free_var_106], rax
  5013 00002A00 48B8-                   	mov rax, sob_void
  5013 00002A02 [0000000000000000] 
  5014                                  
  5015 00002A0A 4889C7                  	mov rdi, rax
  5016 00002A0D E814430100              	call print_sexpr_if_not_void
  5017 00002A12 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5018 00002A17 E8B5400100              	call malloc
  5019 00002A1C 50                      	push rax
  5020 00002A1D BF00000000              	mov rdi, 8 * 0	; new rib
  5021 00002A22 E8AA400100              	call malloc
  5022 00002A27 50                      	push rax
  5023 00002A28 BF08000000              	mov rdi, 8 * 1	; extended env
  5024 00002A2D E89F400100              	call malloc
  5025 00002A32 488B7D10                	mov rdi, ENV
  5026 00002A36 BE00000000              	mov rsi, 0
  5027 00002A3B BA01000000              	mov rdx, 1
  5028                                  .L_lambda_simple_env_loop_001f:	; ext_env[i + 1] <-- env[i]
  5029 00002A40 4883FE00                	cmp rsi, 0
  5030 00002A44 7410                    	je .L_lambda_simple_env_end_001f
  5031 00002A46 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5032 00002A4A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5033 00002A4E 48FFC6                  	inc rsi
  5034 00002A51 48FFC2                  	inc rdx
  5035 00002A54 EBEA                    	jmp .L_lambda_simple_env_loop_001f
  5036                                  .L_lambda_simple_env_end_001f:
  5037 00002A56 5B                      	pop rbx
  5038 00002A57 BE00000000              	mov rsi, 0
  5039                                  .L_lambda_simple_params_loop_001f:	; copy params
  5040 00002A5C 4883FE00                	cmp rsi, 0
  5041 00002A60 740E                    	je .L_lambda_simple_params_end_001f
  5042 00002A62 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5043 00002A67 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5044 00002A6B 48FFC6                  	inc rsi
  5045 00002A6E EBEC                    	jmp .L_lambda_simple_params_loop_001f
  5046                                  .L_lambda_simple_params_end_001f:
  5047 00002A70 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5048 00002A73 4889C3                  	mov rbx, rax
  5049 00002A76 58                      	pop rax
  5050 00002A77 C60004                  	mov byte [rax], T_closure
  5051 00002A7A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5052 00002A7E 48C74009[8B2A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_001f
  5053 00002A86 E9A8000000              	jmp .L_lambda_simple_end_001f
  5054                                  .L_lambda_simple_code_001f:	; lambda-simple body
  5055 00002A8B 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5056 00002A91 740B                    	je .L_lambda_simple_arity_check_ok_001f
  5057 00002A93 FF742410                	push qword [rsp + 8 * 2]
  5058 00002A97 6A01                    	push 1
  5059 00002A99 E9EC3F0100              	jmp L_error_incorrect_arity_simple
  5060                                  .L_lambda_simple_arity_check_ok_001f:
  5061 00002A9E C8000000                	enter 0, 0
  5062                                  	; preparing a non-tail-call
  5063 00002AA2 488B4520                	mov rax, PARAM(0)	; param q
  5064 00002AA6 50                      	push rax
  5065 00002AA7 6A01                    	push 1	; arg count
  5066 00002AA9 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  5067 00002AB1 803805                  	cmp byte [rax], T_undefined
  5068 00002AB4 0F84EA3E0100            	je L_error_fvar_undefined
  5069 00002ABA 803804                  	cmp byte [rax], T_closure
  5070 00002ABD 0F85653F0100            	jne L_error_non_closure
  5071 00002AC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5072 00002AC6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5073 00002AC9 483D[02000000]          	cmp rax, sob_boolean_false
  5074 00002ACF 755E                    	jne .L_or_end_0002
  5075                                  	; preparing a tail-call
  5076 00002AD1 488B4520                	mov rax, PARAM(0)	; param q
  5077 00002AD5 50                      	push rax
  5078 00002AD6 6A01                    	push 1	; arg count
  5079 00002AD8 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  5080 00002AE0 803805                  	cmp byte [rax], T_undefined
  5081 00002AE3 0F84BB3E0100            	je L_error_fvar_undefined
  5082 00002AE9 803804                  	cmp byte [rax], T_closure
  5083 00002AEC 0F85363F0100            	jne L_error_non_closure
  5084 00002AF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5085 00002AF5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  5086 00002AF8 FF7500                  	push qword[rbp]
  5087 00002AFB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  5088 00002B00 48895D10                	mov qword[rbp + 8*2],rbx
  5089 00002B04 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  5090 00002B0C BF00000000              	mov rdi,0
  5091 00002B11 EB00                    	jmp .L_tc_recycle_frame_loop_001e
  5092                                  .L_tc_recycle_frame_loop_001e:
  5093 00002B13 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  5094 00002B17 740F                    	je .L_tc_recycle_frame_done_001e
  5095 00002B19 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  5096 00002B1E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  5097 00002B23 48FFC7                  	inc rdi
  5098 00002B26 EBEB                    	jmp .L_tc_recycle_frame_loop_001e
  5099                                  .L_tc_recycle_frame_done_001e:
  5100 00002B28 4889EC                  	mov rsp, rbp	; point to last argument
  5101 00002B2B 5D                      	pop rbp
  5102 00002B2C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5103                                  .L_or_end_0002:
  5104 00002B2F C9                      	leave
  5105 00002B30 C21800                  	ret AND_KILL_FRAME(1)
  5106                                  .L_lambda_simple_end_001f:	; new closure is in rax
  5107 00002B33 48890425[57150000]      	mov qword [free_var_114], rax
  5108 00002B3B 48B8-                   	mov rax, sob_void
  5108 00002B3D [0000000000000000] 
  5109                                  
  5110 00002B45 4889C7                  	mov rdi, rax
  5111 00002B48 E8D9410100              	call print_sexpr_if_not_void
  5112                                  	; preparing a non-tail-call
  5113 00002B4D 48B8-                   	mov rax, L_constants + 1993
  5113 00002B4F [C907000000000000] 
  5114 00002B57 50                      	push rax
  5115 00002B58 6A01                    	push 1	; arg count
  5116 00002B5A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5117 00002B5F E86D3F0100              	call malloc
  5118 00002B64 50                      	push rax
  5119 00002B65 BF00000000              	mov rdi, 8 * 0	; new rib
  5120 00002B6A E8623F0100              	call malloc
  5121 00002B6F 50                      	push rax
  5122 00002B70 BF08000000              	mov rdi, 8 * 1	; extended env
  5123 00002B75 E8573F0100              	call malloc
  5124 00002B7A 488B7D10                	mov rdi, ENV
  5125 00002B7E BE00000000              	mov rsi, 0
  5126 00002B83 BA01000000              	mov rdx, 1
  5127                                  .L_lambda_simple_env_loop_0020:	; ext_env[i + 1] <-- env[i]
  5128 00002B88 4883FE00                	cmp rsi, 0
  5129 00002B8C 7410                    	je .L_lambda_simple_env_end_0020
  5130 00002B8E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5131 00002B92 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5132 00002B96 48FFC6                  	inc rsi
  5133 00002B99 48FFC2                  	inc rdx
  5134 00002B9C EBEA                    	jmp .L_lambda_simple_env_loop_0020
  5135                                  .L_lambda_simple_env_end_0020:
  5136 00002B9E 5B                      	pop rbx
  5137 00002B9F BE00000000              	mov rsi, 0
  5138                                  .L_lambda_simple_params_loop_0020:	; copy params
  5139 00002BA4 4883FE00                	cmp rsi, 0
  5140 00002BA8 740E                    	je .L_lambda_simple_params_end_0020
  5141 00002BAA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5142 00002BAF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5143 00002BB3 48FFC6                  	inc rsi
  5144 00002BB6 EBEC                    	jmp .L_lambda_simple_params_loop_0020
  5145                                  .L_lambda_simple_params_end_0020:
  5146 00002BB8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5147 00002BBB 4889C3                  	mov rbx, rax
  5148 00002BBE 58                      	pop rax
  5149 00002BBF C60004                  	mov byte [rax], T_closure
  5150 00002BC2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5151 00002BC6 48C74009[D32B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0020
  5152 00002BCE E911040000              	jmp .L_lambda_simple_end_0020
  5153                                  .L_lambda_simple_code_0020:	; lambda-simple body
  5154 00002BD3 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5155 00002BD9 740B                    	je .L_lambda_simple_arity_check_ok_0020
  5156 00002BDB FF742410                	push qword [rsp + 8 * 2]
  5157 00002BDF 6A01                    	push 1
  5158 00002BE1 E9A43E0100              	jmp L_error_incorrect_arity_simple
  5159                                  .L_lambda_simple_arity_check_ok_0020:
  5160 00002BE6 C8000000                	enter 0, 0
  5161 00002BEA 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  5162 00002BEE 488903                  	mov qword [rbx], rax
  5163                                  
  5164 00002BF1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5165 00002BF6 E8D63E0100              	call malloc
  5166 00002BFB 50                      	push rax
  5167 00002BFC BF08000000              	mov rdi, 8 * 1	; new rib
  5168 00002C01 E8CB3E0100              	call malloc
  5169 00002C06 50                      	push rax
  5170 00002C07 BF10000000              	mov rdi, 8 * 2	; extended env
  5171 00002C0C E8C03E0100              	call malloc
  5172 00002C11 488B7D10                	mov rdi, ENV
  5173 00002C15 BE00000000              	mov rsi, 0
  5174 00002C1A BA01000000              	mov rdx, 1
  5175                                  .L_lambda_simple_env_loop_0021:	; ext_env[i + 1] <-- env[i]
  5176 00002C1F 4883FE01                	cmp rsi, 1
  5177 00002C23 7410                    	je .L_lambda_simple_env_end_0021
  5178 00002C25 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5179 00002C29 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5180 00002C2D 48FFC6                  	inc rsi
  5181 00002C30 48FFC2                  	inc rdx
  5182 00002C33 EBEA                    	jmp .L_lambda_simple_env_loop_0021
  5183                                  .L_lambda_simple_env_end_0021:
  5184 00002C35 5B                      	pop rbx
  5185 00002C36 BE00000000              	mov rsi, 0
  5186                                  .L_lambda_simple_params_loop_0021:	; copy params
  5187 00002C3B 4883FE01                	cmp rsi, 1
  5188 00002C3F 740E                    	je .L_lambda_simple_params_end_0021
  5189 00002C41 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5190 00002C46 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5191 00002C4A 48FFC6                  	inc rsi
  5192 00002C4D EBEC                    	jmp .L_lambda_simple_params_loop_0021
  5193                                  .L_lambda_simple_params_end_0021:
  5194 00002C4F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5195 00002C52 4889C3                  	mov rbx, rax
  5196 00002C55 58                      	pop rax
  5197 00002C56 C60004                  	mov byte [rax], T_closure
  5198 00002C59 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5199 00002C5D 48C74009[6A2C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0021
  5200 00002C65 E920010000              	jmp .L_lambda_simple_end_0021
  5201                                  .L_lambda_simple_code_0021:	; lambda-simple body
  5202 00002C6A 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5203 00002C70 740B                    	je .L_lambda_simple_arity_check_ok_0021
  5204 00002C72 FF742410                	push qword [rsp + 8 * 2]
  5205 00002C76 6A02                    	push 2
  5206 00002C78 E90D3E0100              	jmp L_error_incorrect_arity_simple
  5207                                  .L_lambda_simple_arity_check_ok_0021:
  5208 00002C7D C8000000                	enter 0, 0
  5209                                  	; preparing a non-tail-call
  5210 00002C81 488B4528                	mov rax, PARAM(1)	; param s
  5211 00002C85 50                      	push rax
  5212 00002C86 6A01                    	push 1	; arg count
  5213 00002C88 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  5214 00002C90 803805                  	cmp byte [rax], T_undefined
  5215 00002C93 0F840B3D0100            	je L_error_fvar_undefined
  5216 00002C99 803804                  	cmp byte [rax], T_closure
  5217 00002C9C 0F85863D0100            	jne L_error_non_closure
  5218 00002CA2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5219 00002CA5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5220 00002CA8 483D[02000000]          	cmp rax, sob_boolean_false
  5221 00002CAE 7409                    	je .L_if_else_0003
  5222 00002CB0 488B4520                	mov rax, PARAM(0)	; param a
  5223 00002CB4 E9CD000000              	jmp .L_if_end_0003
  5224                                  .L_if_else_0003:
  5225                                  	; preparing a tail-call
  5226                                  	; preparing a non-tail-call
  5227                                  	; preparing a non-tail-call
  5228 00002CB9 488B4528                	mov rax, PARAM(1)	; param s
  5229 00002CBD 50                      	push rax
  5230 00002CBE 6A01                    	push 1	; arg count
  5231 00002CC0 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5232 00002CC8 803805                  	cmp byte [rax], T_undefined
  5233 00002CCB 0F84D33C0100            	je L_error_fvar_undefined
  5234 00002CD1 803804                  	cmp byte [rax], T_closure
  5235 00002CD4 0F854E3D0100            	jne L_error_non_closure
  5236 00002CDA FF7001                  	push SOB_CLOSURE_ENV(rax)
  5237 00002CDD FF5009                  	call SOB_CLOSURE_CODE(rax)
  5238 00002CE0 50                      	push rax
  5239                                  	; preparing a non-tail-call
  5240 00002CE1 488B4528                	mov rax, PARAM(1)	; param s
  5241 00002CE5 50                      	push rax
  5242 00002CE6 6A01                    	push 1	; arg count
  5243 00002CE8 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5244 00002CF0 803805                  	cmp byte [rax], T_undefined
  5245 00002CF3 0F84AB3C0100            	je L_error_fvar_undefined
  5246 00002CF9 803804                  	cmp byte [rax], T_closure
  5247 00002CFC 0F85263D0100            	jne L_error_non_closure
  5248 00002D02 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5249 00002D05 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5250 00002D08 50                      	push rax
  5251 00002D09 6A02                    	push 2	; arg count
  5252 00002D0B 488B4510                	mov rax, ENV
  5253 00002D0F 488B00                  	mov rax, qword [rax + 8 * 0]
  5254 00002D12 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5255 00002D15 488B00                  	mov rax, qword [rax]
  5256 00002D18 803804                  	cmp byte [rax], T_closure
  5257 00002D1B 0F85073D0100            	jne L_error_non_closure
  5258 00002D21 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5259 00002D24 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5260 00002D27 50                      	push rax
  5261 00002D28 488B4520                	mov rax, PARAM(0)	; param a
  5262 00002D2C 50                      	push rax
  5263 00002D2D 6A02                    	push 2	; arg count
  5264 00002D2F 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  5265 00002D37 803805                  	cmp byte [rax], T_undefined
  5266 00002D3A 0F84643C0100            	je L_error_fvar_undefined
  5267 00002D40 803804                  	cmp byte [rax], T_closure
  5268 00002D43 0F85DF3C0100            	jne L_error_non_closure
  5269 00002D49 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5270 00002D4C FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  5271 00002D4F FF7500                  	push qword[rbp]
  5272 00002D52 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  5273 00002D57 48895D10                	mov qword[rbp + 8*2],rbx
  5274 00002D5B 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  5275 00002D63 BF00000000              	mov rdi,0
  5276 00002D68 EB00                    	jmp .L_tc_recycle_frame_loop_001f
  5277                                  .L_tc_recycle_frame_loop_001f:
  5278 00002D6A 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  5279 00002D6E 740F                    	je .L_tc_recycle_frame_done_001f
  5280 00002D70 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  5281 00002D75 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  5282 00002D7A 48FFC7                  	inc rdi
  5283 00002D7D EBEB                    	jmp .L_tc_recycle_frame_loop_001f
  5284                                  .L_tc_recycle_frame_done_001f:
  5285 00002D7F 4889EC                  	mov rsp, rbp	; point to last argument
  5286 00002D82 5D                      	pop rbp
  5287 00002D83 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5288                                  .L_if_end_0003:
  5289 00002D86 C9                      	leave
  5290 00002D87 C22000                  	ret AND_KILL_FRAME(2)
  5291                                  .L_lambda_simple_end_0021:	; new closure is in rax
  5292 00002D8A 50                      	push rax
  5293 00002D8B 488B4520                	mov rax, PARAM(0)	; param run
  5294 00002D8F 8F00                    	pop qword [rax]
  5295 00002D91 48B8-                   	mov rax, sob_void
  5295 00002D93 [0000000000000000] 
  5296                                  
  5297 00002D9B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5298 00002DA0 E82C3D0100              	call malloc
  5299 00002DA5 50                      	push rax
  5300 00002DA6 BF08000000              	mov rdi, 8 * 1	; new rib
  5301 00002DAB E8213D0100              	call malloc
  5302 00002DB0 50                      	push rax
  5303 00002DB1 BF10000000              	mov rdi, 8 * 2	; extended env
  5304 00002DB6 E8163D0100              	call malloc
  5305 00002DBB 488B7D10                	mov rdi, ENV
  5306 00002DBF BE00000000              	mov rsi, 0
  5307 00002DC4 BA01000000              	mov rdx, 1
  5308                                  .L_lambda_opt_env_loop_0002:	; ext_env[i + 1] <-- env[i]
  5309 00002DC9 4883FE01                	cmp rsi, 1
  5310 00002DCD 7410                    	je .L_lambda_opt_env_end_0002
  5311 00002DCF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5312 00002DD3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5313 00002DD7 48FFC6                  	inc rsi
  5314 00002DDA 48FFC2                  	inc rdx
  5315 00002DDD EBEA                    	jmp .L_lambda_opt_env_loop_0002
  5316                                  .L_lambda_opt_env_end_0002:
  5317 00002DDF 5B                      	pop rbx
  5318 00002DE0 BE00000000              	mov rsi, 0
  5319                                  .L_lambda_opt_params_loop_0002:	; copy params
  5320 00002DE5 4883FE01                	cmp rsi, 1
  5321 00002DE9 740E                    	je .L_lambda_opt_params_end_0002
  5322 00002DEB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5323 00002DF0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5324 00002DF4 48FFC6                  	inc rsi
  5325 00002DF7 EBEC                    	jmp .L_lambda_opt_params_loop_0002
  5326                                  .L_lambda_opt_params_end_0002:
  5327 00002DF9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5328 00002DFC 4889C3                  	mov rbx, rax
  5329 00002DFF 58                      	pop rax
  5330 00002E00 C60004                  	mov byte [rax], T_closure
  5331 00002E03 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5332 00002E07 48C74009[142E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0002
  5333 00002E0F E9CC010000              	jmp .L_lambda_opt_end_0002
  5334                                  .L_lambda_opt_code_0002:	; lambda-opt body
  5335 00002E14 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5336 00002E1A 7411                    	je .L_lambda_opt_arity_check_exact_0002
  5337 00002E1C 0F8FB1000000            	jg .L_lambda_opt_arity_check_more_0002
  5338 00002E22 FF742410                	push qword [rsp + 8 * 2]
  5339 00002E26 6A01                    	push 1
  5340 00002E28 E9713C0100              	jmp L_error_incorrect_arity_opt
  5341                                  .L_lambda_opt_arity_check_exact_0002:
  5342 00002E2D 4883EC08                	sub rsp, 8
  5343 00002E31 488B442408              	mov rax, qword[rsp + 8 *1]
  5344 00002E36 48890424                	mov qword[rsp], rax  
  5345 00002E3A 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  5346 00002E3F 4889442408              	mov qword[rsp + 8 * 1], rax
  5347 00002E44 B802000000              	mov rax, 2
  5348 00002E49 4889442410              	mov qword[rsp + 8 *2], rax
  5349 00002E4E 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  5350 00002E53 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  5351 00002E58 48B8-                   	mov rax, sob_nil
  5351 00002E5A [0100000000000000] 
  5352 00002E62 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  5353 00002E67 C8000000                	enter 0, 0
  5354                                  	; preparing a tail-call
  5355 00002E6B 488B4528                	mov rax, PARAM(1)	; param s
  5356 00002E6F 50                      	push rax
  5357 00002E70 488B4520                	mov rax, PARAM(0)	; param a
  5358 00002E74 50                      	push rax
  5359 00002E75 6A02                    	push 2	; arg count
  5360 00002E77 488B4510                	mov rax, ENV
  5361 00002E7B 488B00                  	mov rax, qword [rax + 8 * 0]
  5362 00002E7E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5363 00002E81 488B00                  	mov rax, qword [rax]
  5364 00002E84 803804                  	cmp byte [rax], T_closure
  5365 00002E87 0F859B3B0100            	jne L_error_non_closure
  5366 00002E8D FF7001                  	push SOB_CLOSURE_ENV(rax)
  5367 00002E90 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  5368 00002E93 FF7500                  	push qword[rbp]
  5369 00002E96 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  5370 00002E9B 48895D10                	mov qword[rbp + 8*2],rbx
  5371 00002E9F 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  5372 00002EA7 BF00000000              	mov rdi,0
  5373 00002EAC EB00                    	jmp .L_tc_recycle_frame_loop_0021
  5374                                  .L_tc_recycle_frame_loop_0021:
  5375 00002EAE 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  5376 00002EB2 740F                    	je .L_tc_recycle_frame_done_0021
  5377 00002EB4 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  5378 00002EB9 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  5379 00002EBE 48FFC7                  	inc rdi
  5380 00002EC1 EBEB                    	jmp .L_tc_recycle_frame_loop_0021
  5381                                  .L_tc_recycle_frame_done_0021:
  5382 00002EC3 4889EC                  	mov rsp, rbp	; point to last argument
  5383 00002EC6 5D                      	pop rbp
  5384 00002EC7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5385 00002ECA C9                      	leave
  5386 00002ECB C22000                  	ret AND_KILL_FRAME(2)
  5387 00002ECE E90D010000              	jmp .L_lambda_opt_end_0002	; new closure is in rax
  5388                                  .L_lambda_opt_arity_check_more_0002:
  5389 00002ED3 488B442410              	mov rax, qword[rsp + 2 * 8]
  5390 00002ED8 4889C7                  	mov rdi, rax
  5391 00002EDB 49B9-                   	mov r9, sob_nil
  5391 00002EDD [0100000000000000] 
  5392 00002EE5 4C8B442410              	mov r8, qword[rsp+2*8]
  5393                                  .L_lambda_opt_stack_shrink_loop_0002:
  5394 00002EEA 4983F801                	cmp r8, 1
  5395 00002EEE 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0002
  5396 00002EF0 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  5397 00002EF5 BF11000000              	mov rdi, 1+8+8	;for pair
  5398 00002EFA E8D23B0100              	call malloc	 ;to create the pair in the stack
  5399 00002EFF C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  5400 00002F02 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  5401 00002F06 4C894809                 	mov qword[rax+1+8],r9
  5402 00002F0A 4989C1                  	mov r9 , rax	 ; for the recursion 
  5403 00002F0D 49FFC8                  	dec r8
  5404 00002F10 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0002
  5405                                  .L_lambda_opt_stack_shrink_loop_exit_0002:
  5406 00002F12 488B442410              	mov rax, qword[rsp + 2 * 8]
  5407 00002F17 BF02000000              	mov rdi, 2
  5408 00002F1C 4829F8                  	sub rax, rdi
  5409 00002F1F 4889C7                  	mov rdi, rax
  5410 00002F22 486BC008                	imul rax,8
  5411 00002F26 4801C4                  	add rsp, rax
  5412 00002F29 4889E0                  	mov rax, rsp
  5413 00002F2C 4989F8                  	mov r8, rdi
  5414 00002F2F 4D6BC008                	imul r8, 8
  5415 00002F33 4C29C0                  	sub rax, r8
  5416 00002F36 4989C2                  	mov r10, rax	; holds the original ret in the stack
  5417 00002F39 4983C218                	add r10, 8*3
  5418 00002F3D 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  5419 00002F41 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  5420 00002F44 4D6BC008                	imul r8,8
  5421 00002F48 4C01C0                  	add rax, r8
  5422 00002F4B 4C8908                  	mov qword[rax] ,r9
  5423 00002F4E 4D89D0                   	mov r8, r10
  5424 00002F51 4983C000                	add r8, 8 * 0
  5425 00002F55 4D8B08                  	mov r9,qword[r8]
  5426 00002F58 4D890CF8                	mov qword [r8 + rdi * 8], r9
  5427 00002F5C 4983EA18                	sub r10, 8*3
  5428 00002F60 48C744241002000000      	mov qword [rsp+2*8], 2
  5429 00002F69 498B4208                	mov rax, qword[r10 + 1 * 8]
  5430 00002F6D 4889442408              	mov qword[rsp + 1*8] ,rax
  5431 00002F72 498B02                  	mov rax, qword[r10]
  5432 00002F75 48890424                	mov qword[rsp], rax
  5433 00002F79 C8000000                	enter 0, 0
  5434                                  	; preparing a tail-call
  5435 00002F7D 488B4528                	mov rax, PARAM(1)	; param s
  5436 00002F81 50                      	push rax
  5437 00002F82 488B4520                	mov rax, PARAM(0)	; param a
  5438 00002F86 50                      	push rax
  5439 00002F87 6A02                    	push 2	; arg count
  5440 00002F89 488B4510                	mov rax, ENV
  5441 00002F8D 488B00                  	mov rax, qword [rax + 8 * 0]
  5442 00002F90 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5443 00002F93 488B00                  	mov rax, qword [rax]
  5444 00002F96 803804                  	cmp byte [rax], T_closure
  5445 00002F99 0F85893A0100            	jne L_error_non_closure
  5446 00002F9F FF7001                  	push SOB_CLOSURE_ENV(rax)
  5447 00002FA2 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  5448 00002FA5 FF7500                  	push qword[rbp]
  5449 00002FA8 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  5450 00002FAD 48895D10                	mov qword[rbp + 8*2],rbx
  5451 00002FB1 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  5452 00002FB9 BF00000000              	mov rdi,0
  5453 00002FBE EB00                    	jmp .L_tc_recycle_frame_loop_0020
  5454                                  .L_tc_recycle_frame_loop_0020:
  5455 00002FC0 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  5456 00002FC4 740F                    	je .L_tc_recycle_frame_done_0020
  5457 00002FC6 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  5458 00002FCB 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  5459 00002FD0 48FFC7                  	inc rdi
  5460 00002FD3 EBEB                    	jmp .L_tc_recycle_frame_loop_0020
  5461                                  .L_tc_recycle_frame_done_0020:
  5462 00002FD5 4889EC                  	mov rsp, rbp	; point to last argument
  5463 00002FD8 5D                      	pop rbp
  5464 00002FD9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5465 00002FDC C9                      	leave
  5466 00002FDD C22000                  	ret AND_KILL_FRAME(2)
  5467                                  .L_lambda_opt_end_0002:	; new closure is in rax
  5468 00002FE0 C9                      	leave
  5469 00002FE1 C21800                  	ret AND_KILL_FRAME(1)
  5470                                  .L_lambda_simple_end_0020:	; new closure is in rax
  5471 00002FE4 803804                  	cmp byte [rax], T_closure
  5472 00002FE7 0F853B3A0100            	jne L_error_non_closure
  5473 00002FED FF7001                  	push SOB_CLOSURE_ENV(rax)
  5474 00002FF0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5475 00002FF3 48890425[F2130000]      	mov qword [free_var_93], rax
  5476 00002FFB 48B8-                   	mov rax, sob_void
  5476 00002FFD [0000000000000000] 
  5477                                  
  5478 00003005 4889C7                  	mov rdi, rax
  5479 00003008 E8193D0100              	call print_sexpr_if_not_void
  5480                                  	; preparing a non-tail-call
  5481 0000300D 48B8-                   	mov rax, L_constants + 1993
  5481 0000300F [C907000000000000] 
  5482 00003017 50                      	push rax
  5483 00003018 6A01                    	push 1	; arg count
  5484 0000301A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5485 0000301F E8AD3A0100              	call malloc
  5486 00003024 50                      	push rax
  5487 00003025 BF00000000              	mov rdi, 8 * 0	; new rib
  5488 0000302A E8A23A0100              	call malloc
  5489 0000302F 50                      	push rax
  5490 00003030 BF08000000              	mov rdi, 8 * 1	; extended env
  5491 00003035 E8973A0100              	call malloc
  5492 0000303A 488B7D10                	mov rdi, ENV
  5493 0000303E BE00000000              	mov rsi, 0
  5494 00003043 BA01000000              	mov rdx, 1
  5495                                  .L_lambda_simple_env_loop_0022:	; ext_env[i + 1] <-- env[i]
  5496 00003048 4883FE00                	cmp rsi, 0
  5497 0000304C 7410                    	je .L_lambda_simple_env_end_0022
  5498 0000304E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5499 00003052 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5500 00003056 48FFC6                  	inc rsi
  5501 00003059 48FFC2                  	inc rdx
  5502 0000305C EBEA                    	jmp .L_lambda_simple_env_loop_0022
  5503                                  .L_lambda_simple_env_end_0022:
  5504 0000305E 5B                      	pop rbx
  5505 0000305F BE00000000              	mov rsi, 0
  5506                                  .L_lambda_simple_params_loop_0022:	; copy params
  5507 00003064 4883FE00                	cmp rsi, 0
  5508 00003068 740E                    	je .L_lambda_simple_params_end_0022
  5509 0000306A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5510 0000306F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5511 00003073 48FFC6                  	inc rsi
  5512 00003076 EBEC                    	jmp .L_lambda_simple_params_loop_0022
  5513                                  .L_lambda_simple_params_end_0022:
  5514 00003078 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5515 0000307B 4889C3                  	mov rbx, rax
  5516 0000307E 58                      	pop rax
  5517 0000307F C60004                  	mov byte [rax], T_closure
  5518 00003082 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5519 00003086 48C74009[93300000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0022
  5520 0000308E E9EE040000              	jmp .L_lambda_simple_end_0022
  5521                                  .L_lambda_simple_code_0022:	; lambda-simple body
  5522 00003093 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5523 00003099 740B                    	je .L_lambda_simple_arity_check_ok_0022
  5524 0000309B FF742410                	push qword [rsp + 8 * 2]
  5525 0000309F 6A01                    	push 1
  5526 000030A1 E9E4390100              	jmp L_error_incorrect_arity_simple
  5527                                  .L_lambda_simple_arity_check_ok_0022:
  5528 000030A6 C8000000                	enter 0, 0
  5529 000030AA 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  5530 000030AE 488903                  	mov qword [rbx], rax
  5531                                  
  5532 000030B1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5533 000030B6 E8163A0100              	call malloc
  5534 000030BB 50                      	push rax
  5535 000030BC BF08000000              	mov rdi, 8 * 1	; new rib
  5536 000030C1 E80B3A0100              	call malloc
  5537 000030C6 50                      	push rax
  5538 000030C7 BF10000000              	mov rdi, 8 * 2	; extended env
  5539 000030CC E8003A0100              	call malloc
  5540 000030D1 488B7D10                	mov rdi, ENV
  5541 000030D5 BE00000000              	mov rsi, 0
  5542 000030DA BA01000000              	mov rdx, 1
  5543                                  .L_lambda_simple_env_loop_0023:	; ext_env[i + 1] <-- env[i]
  5544 000030DF 4883FE01                	cmp rsi, 1
  5545 000030E3 7410                    	je .L_lambda_simple_env_end_0023
  5546 000030E5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5547 000030E9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5548 000030ED 48FFC6                  	inc rsi
  5549 000030F0 48FFC2                  	inc rdx
  5550 000030F3 EBEA                    	jmp .L_lambda_simple_env_loop_0023
  5551                                  .L_lambda_simple_env_end_0023:
  5552 000030F5 5B                      	pop rbx
  5553 000030F6 BE00000000              	mov rsi, 0
  5554                                  .L_lambda_simple_params_loop_0023:	; copy params
  5555 000030FB 4883FE01                	cmp rsi, 1
  5556 000030FF 740E                    	je .L_lambda_simple_params_end_0023
  5557 00003101 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5558 00003106 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5559 0000310A 48FFC6                  	inc rsi
  5560 0000310D EBEC                    	jmp .L_lambda_simple_params_loop_0023
  5561                                  .L_lambda_simple_params_end_0023:
  5562 0000310F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5563 00003112 4889C3                  	mov rbx, rax
  5564 00003115 58                      	pop rax
  5565 00003116 C60004                  	mov byte [rax], T_closure
  5566 00003119 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5567 0000311D 48C74009[2A310000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0023
  5568 00003125 E921010000              	jmp .L_lambda_simple_end_0023
  5569                                  .L_lambda_simple_code_0023:	; lambda-simple body
  5570 0000312A 48837C241002            	cmp qword [rsp + 8 * 2], 2
  5571 00003130 740B                    	je .L_lambda_simple_arity_check_ok_0023
  5572 00003132 FF742410                	push qword [rsp + 8 * 2]
  5573 00003136 6A02                    	push 2
  5574 00003138 E94D390100              	jmp L_error_incorrect_arity_simple
  5575                                  .L_lambda_simple_arity_check_ok_0023:
  5576 0000313D C8000000                	enter 0, 0
  5577                                  	; preparing a non-tail-call
  5578 00003141 488B4528                	mov rax, PARAM(1)	; param s
  5579 00003145 50                      	push rax
  5580 00003146 6A01                    	push 1	; arg count
  5581 00003148 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  5582 00003150 803805                  	cmp byte [rax], T_undefined
  5583 00003153 0F844B380100            	je L_error_fvar_undefined
  5584 00003159 803804                  	cmp byte [rax], T_closure
  5585 0000315C 0F85C6380100            	jne L_error_non_closure
  5586 00003162 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5587 00003165 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5588 00003168 483D[02000000]          	cmp rax, sob_boolean_false
  5589 0000316E 0F84CF000000            	je .L_if_else_0004
  5590                                  	; preparing a tail-call
  5591                                  	; preparing a non-tail-call
  5592                                  	; preparing a non-tail-call
  5593 00003174 488B4528                	mov rax, PARAM(1)	; param s
  5594 00003178 50                      	push rax
  5595 00003179 6A01                    	push 1	; arg count
  5596 0000317B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5597 00003183 803805                  	cmp byte [rax], T_undefined
  5598 00003186 0F8418380100            	je L_error_fvar_undefined
  5599 0000318C 803804                  	cmp byte [rax], T_closure
  5600 0000318F 0F8593380100            	jne L_error_non_closure
  5601 00003195 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5602 00003198 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5603 0000319B 50                      	push rax
  5604                                  	; preparing a non-tail-call
  5605 0000319C 488B4528                	mov rax, PARAM(1)	; param s
  5606 000031A0 50                      	push rax
  5607 000031A1 6A01                    	push 1	; arg count
  5608 000031A3 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5609 000031AB 803805                  	cmp byte [rax], T_undefined
  5610 000031AE 0F84F0370100            	je L_error_fvar_undefined
  5611 000031B4 803804                  	cmp byte [rax], T_closure
  5612 000031B7 0F856B380100            	jne L_error_non_closure
  5613 000031BD FF7001                  	push SOB_CLOSURE_ENV(rax)
  5614 000031C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5615 000031C3 50                      	push rax
  5616 000031C4 6A02                    	push 2	; arg count
  5617 000031C6 488B4510                	mov rax, ENV
  5618 000031CA 488B00                  	mov rax, qword [rax + 8 * 0]
  5619 000031CD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5620 000031D0 488B00                  	mov rax, qword [rax]
  5621 000031D3 803804                  	cmp byte [rax], T_closure
  5622 000031D6 0F854C380100            	jne L_error_non_closure
  5623 000031DC FF7001                  	push SOB_CLOSURE_ENV(rax)
  5624 000031DF FF5009                  	call SOB_CLOSURE_CODE(rax)
  5625 000031E2 50                      	push rax
  5626 000031E3 488B4520                	mov rax, PARAM(0)	; param a
  5627 000031E7 50                      	push rax
  5628 000031E8 6A02                    	push 2	; arg count
  5629 000031EA 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  5630 000031F2 803805                  	cmp byte [rax], T_undefined
  5631 000031F5 0F84A9370100            	je L_error_fvar_undefined
  5632 000031FB 803804                  	cmp byte [rax], T_closure
  5633 000031FE 0F8524380100            	jne L_error_non_closure
  5634 00003204 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5635 00003207 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  5636 0000320A FF7500                  	push qword[rbp]
  5637 0000320D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  5638 00003212 48895D10                	mov qword[rbp + 8*2],rbx
  5639 00003216 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  5640 0000321E BF00000000              	mov rdi,0
  5641 00003223 EB00                    	jmp .L_tc_recycle_frame_loop_0022
  5642                                  .L_tc_recycle_frame_loop_0022:
  5643 00003225 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  5644 00003229 740F                    	je .L_tc_recycle_frame_done_0022
  5645 0000322B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  5646 00003230 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  5647 00003235 48FFC7                  	inc rdi
  5648 00003238 EBEB                    	jmp .L_tc_recycle_frame_loop_0022
  5649                                  .L_tc_recycle_frame_done_0022:
  5650 0000323A 4889EC                  	mov rsp, rbp	; point to last argument
  5651 0000323D 5D                      	pop rbp
  5652 0000323E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5653 00003241 EB04                    	jmp .L_if_end_0004
  5654                                  .L_if_else_0004:
  5655 00003243 488B4520                	mov rax, PARAM(0)	; param a
  5656                                  .L_if_end_0004:
  5657 00003247 C9                      	leave
  5658 00003248 C22000                  	ret AND_KILL_FRAME(2)
  5659                                  .L_lambda_simple_end_0023:	; new closure is in rax
  5660 0000324B 50                      	push rax
  5661 0000324C 488B4520                	mov rax, PARAM(0)	; param run
  5662 00003250 8F00                    	pop qword [rax]
  5663 00003252 48B8-                   	mov rax, sob_void
  5663 00003254 [0000000000000000] 
  5664                                  
  5665 0000325C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5666 00003261 E86B380100              	call malloc
  5667 00003266 50                      	push rax
  5668 00003267 BF08000000              	mov rdi, 8 * 1	; new rib
  5669 0000326C E860380100              	call malloc
  5670 00003271 50                      	push rax
  5671 00003272 BF10000000              	mov rdi, 8 * 2	; extended env
  5672 00003277 E855380100              	call malloc
  5673 0000327C 488B7D10                	mov rdi, ENV
  5674 00003280 BE00000000              	mov rsi, 0
  5675 00003285 BA01000000              	mov rdx, 1
  5676                                  .L_lambda_opt_env_loop_0003:	; ext_env[i + 1] <-- env[i]
  5677 0000328A 4883FE01                	cmp rsi, 1
  5678 0000328E 7410                    	je .L_lambda_opt_env_end_0003
  5679 00003290 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5680 00003294 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5681 00003298 48FFC6                  	inc rsi
  5682 0000329B 48FFC2                  	inc rdx
  5683 0000329E EBEA                    	jmp .L_lambda_opt_env_loop_0003
  5684                                  .L_lambda_opt_env_end_0003:
  5685 000032A0 5B                      	pop rbx
  5686 000032A1 BE00000000              	mov rsi, 0
  5687                                  .L_lambda_opt_params_loop_0003:	; copy params
  5688 000032A6 4883FE01                	cmp rsi, 1
  5689 000032AA 740E                    	je .L_lambda_opt_params_end_0003
  5690 000032AC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5691 000032B1 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5692 000032B5 48FFC6                  	inc rsi
  5693 000032B8 EBEC                    	jmp .L_lambda_opt_params_loop_0003
  5694                                  .L_lambda_opt_params_end_0003:
  5695 000032BA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5696 000032BD 4889C3                  	mov rbx, rax
  5697 000032C0 58                      	pop rax
  5698 000032C1 C60004                  	mov byte [rax], T_closure
  5699 000032C4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5700 000032C8 48C74009[D5320000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0003
  5701 000032D0 E9A8020000              	jmp .L_lambda_opt_end_0003
  5702                                  .L_lambda_opt_code_0003:	; lambda-opt body
  5703 000032D5 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5704 000032DB 7411                    	je .L_lambda_opt_arity_check_exact_0003
  5705 000032DD 0F8F1F010000            	jg .L_lambda_opt_arity_check_more_0003
  5706 000032E3 FF742410                	push qword [rsp + 8 * 2]
  5707 000032E7 6A01                    	push 1
  5708 000032E9 E9B0370100              	jmp L_error_incorrect_arity_opt
  5709                                  .L_lambda_opt_arity_check_exact_0003:
  5710 000032EE 4883EC08                	sub rsp, 8
  5711 000032F2 488B442408              	mov rax, qword[rsp + 8 *1]
  5712 000032F7 48890424                	mov qword[rsp], rax  
  5713 000032FB 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  5714 00003300 4889442408              	mov qword[rsp + 8 * 1], rax
  5715 00003305 B802000000              	mov rax, 2
  5716 0000330A 4889442410              	mov qword[rsp + 8 *2], rax
  5717 0000330F 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  5718 00003314 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  5719 00003319 48B8-                   	mov rax, sob_nil
  5719 0000331B [0100000000000000] 
  5720 00003323 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  5721 00003328 C8000000                	enter 0, 0
  5722                                  	; preparing a tail-call
  5723                                  	; preparing a non-tail-call
  5724                                  	; preparing a non-tail-call
  5725 0000332C 488B4528                	mov rax, PARAM(1)	; param s
  5726 00003330 50                      	push rax
  5727 00003331 6A01                    	push 1	; arg count
  5728 00003333 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5729 0000333B 803805                  	cmp byte [rax], T_undefined
  5730 0000333E 0F8460360100            	je L_error_fvar_undefined
  5731 00003344 803804                  	cmp byte [rax], T_closure
  5732 00003347 0F85DB360100            	jne L_error_non_closure
  5733 0000334D FF7001                  	push SOB_CLOSURE_ENV(rax)
  5734 00003350 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5735 00003353 50                      	push rax
  5736                                  	; preparing a non-tail-call
  5737 00003354 488B4528                	mov rax, PARAM(1)	; param s
  5738 00003358 50                      	push rax
  5739 00003359 6A01                    	push 1	; arg count
  5740 0000335B 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5741 00003363 803805                  	cmp byte [rax], T_undefined
  5742 00003366 0F8438360100            	je L_error_fvar_undefined
  5743 0000336C 803804                  	cmp byte [rax], T_closure
  5744 0000336F 0F85B3360100            	jne L_error_non_closure
  5745 00003375 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5746 00003378 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5747 0000337B 50                      	push rax
  5748 0000337C 6A02                    	push 2	; arg count
  5749 0000337E 488B4510                	mov rax, ENV
  5750 00003382 488B00                  	mov rax, qword [rax + 8 * 0]
  5751 00003385 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5752 00003388 488B00                  	mov rax, qword [rax]
  5753 0000338B 803804                  	cmp byte [rax], T_closure
  5754 0000338E 0F8594360100            	jne L_error_non_closure
  5755 00003394 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5756 00003397 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5757 0000339A 50                      	push rax
  5758 0000339B 488B4520                	mov rax, PARAM(0)	; param f
  5759 0000339F 50                      	push rax
  5760 000033A0 6A02                    	push 2	; arg count
  5761 000033A2 488B0425[910E0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  5762 000033AA 803805                  	cmp byte [rax], T_undefined
  5763 000033AD 0F84F1350100            	je L_error_fvar_undefined
  5764 000033B3 803804                  	cmp byte [rax], T_closure
  5765 000033B6 0F856C360100            	jne L_error_non_closure
  5766 000033BC FF7001                  	push SOB_CLOSURE_ENV(rax)
  5767 000033BF FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  5768 000033C2 FF7500                  	push qword[rbp]
  5769 000033C5 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  5770 000033CA 48895D10                	mov qword[rbp + 8*2],rbx
  5771 000033CE 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  5772 000033D6 BF00000000              	mov rdi,0
  5773 000033DB EB00                    	jmp .L_tc_recycle_frame_loop_0024
  5774                                  .L_tc_recycle_frame_loop_0024:
  5775 000033DD 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  5776 000033E1 740F                    	je .L_tc_recycle_frame_done_0024
  5777 000033E3 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  5778 000033E8 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  5779 000033ED 48FFC7                  	inc rdi
  5780 000033F0 EBEB                    	jmp .L_tc_recycle_frame_loop_0024
  5781                                  .L_tc_recycle_frame_done_0024:
  5782 000033F2 4889EC                  	mov rsp, rbp	; point to last argument
  5783 000033F5 5D                      	pop rbp
  5784 000033F6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5785 000033F9 C9                      	leave
  5786 000033FA C22000                  	ret AND_KILL_FRAME(2)
  5787 000033FD E97B010000              	jmp .L_lambda_opt_end_0003	; new closure is in rax
  5788                                  .L_lambda_opt_arity_check_more_0003:
  5789 00003402 488B442410              	mov rax, qword[rsp + 2 * 8]
  5790 00003407 4889C7                  	mov rdi, rax
  5791 0000340A 49B9-                   	mov r9, sob_nil
  5791 0000340C [0100000000000000] 
  5792 00003414 4C8B442410              	mov r8, qword[rsp+2*8]
  5793                                  .L_lambda_opt_stack_shrink_loop_0003:
  5794 00003419 4983F801                	cmp r8, 1
  5795 0000341D 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0003
  5796 0000341F 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  5797 00003424 BF11000000              	mov rdi, 1+8+8	;for pair
  5798 00003429 E8A3360100              	call malloc	 ;to create the pair in the stack
  5799 0000342E C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  5800 00003431 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  5801 00003435 4C894809                 	mov qword[rax+1+8],r9
  5802 00003439 4989C1                  	mov r9 , rax	 ; for the recursion 
  5803 0000343C 49FFC8                  	dec r8
  5804 0000343F EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0003
  5805                                  .L_lambda_opt_stack_shrink_loop_exit_0003:
  5806 00003441 488B442410              	mov rax, qword[rsp + 2 * 8]
  5807 00003446 BF02000000              	mov rdi, 2
  5808 0000344B 4829F8                  	sub rax, rdi
  5809 0000344E 4889C7                  	mov rdi, rax
  5810 00003451 486BC008                	imul rax,8
  5811 00003455 4801C4                  	add rsp, rax
  5812 00003458 4889E0                  	mov rax, rsp
  5813 0000345B 4989F8                  	mov r8, rdi
  5814 0000345E 4D6BC008                	imul r8, 8
  5815 00003462 4C29C0                  	sub rax, r8
  5816 00003465 4989C2                  	mov r10, rax	; holds the original ret in the stack
  5817 00003468 4983C218                	add r10, 8*3
  5818 0000346C 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  5819 00003470 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  5820 00003473 4D6BC008                	imul r8,8
  5821 00003477 4C01C0                  	add rax, r8
  5822 0000347A 4C8908                  	mov qword[rax] ,r9
  5823 0000347D 4D89D0                   	mov r8, r10
  5824 00003480 4983C000                	add r8, 8 * 0
  5825 00003484 4D8B08                  	mov r9,qword[r8]
  5826 00003487 4D890CF8                	mov qword [r8 + rdi * 8], r9
  5827 0000348B 4983EA18                	sub r10, 8*3
  5828 0000348F 48C744241002000000      	mov qword [rsp+2*8], 2
  5829 00003498 498B4208                	mov rax, qword[r10 + 1 * 8]
  5830 0000349C 4889442408              	mov qword[rsp + 1*8] ,rax
  5831 000034A1 498B02                  	mov rax, qword[r10]
  5832 000034A4 48890424                	mov qword[rsp], rax
  5833 000034A8 C8000000                	enter 0, 0
  5834                                  	; preparing a tail-call
  5835                                  	; preparing a non-tail-call
  5836                                  	; preparing a non-tail-call
  5837 000034AC 488B4528                	mov rax, PARAM(1)	; param s
  5838 000034B0 50                      	push rax
  5839 000034B1 6A01                    	push 1	; arg count
  5840 000034B3 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  5841 000034BB 803805                  	cmp byte [rax], T_undefined
  5842 000034BE 0F84E0340100            	je L_error_fvar_undefined
  5843 000034C4 803804                  	cmp byte [rax], T_closure
  5844 000034C7 0F855B350100            	jne L_error_non_closure
  5845 000034CD FF7001                  	push SOB_CLOSURE_ENV(rax)
  5846 000034D0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5847 000034D3 50                      	push rax
  5848                                  	; preparing a non-tail-call
  5849 000034D4 488B4528                	mov rax, PARAM(1)	; param s
  5850 000034D8 50                      	push rax
  5851 000034D9 6A01                    	push 1	; arg count
  5852 000034DB 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  5853 000034E3 803805                  	cmp byte [rax], T_undefined
  5854 000034E6 0F84B8340100            	je L_error_fvar_undefined
  5855 000034EC 803804                  	cmp byte [rax], T_closure
  5856 000034EF 0F8533350100            	jne L_error_non_closure
  5857 000034F5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5858 000034F8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5859 000034FB 50                      	push rax
  5860 000034FC 6A02                    	push 2	; arg count
  5861 000034FE 488B4510                	mov rax, ENV
  5862 00003502 488B00                  	mov rax, qword [rax + 8 * 0]
  5863 00003505 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  5864 00003508 488B00                  	mov rax, qword [rax]
  5865 0000350B 803804                  	cmp byte [rax], T_closure
  5866 0000350E 0F8514350100            	jne L_error_non_closure
  5867 00003514 FF7001                  	push SOB_CLOSURE_ENV(rax)
  5868 00003517 FF5009                  	call SOB_CLOSURE_CODE(rax)
  5869 0000351A 50                      	push rax
  5870 0000351B 488B4520                	mov rax, PARAM(0)	; param f
  5871 0000351F 50                      	push rax
  5872 00003520 6A02                    	push 2	; arg count
  5873 00003522 488B0425[910E0000]      	mov rax, qword [free_var_12]	; free var __bin-apply
  5874 0000352A 803805                  	cmp byte [rax], T_undefined
  5875 0000352D 0F8471340100            	je L_error_fvar_undefined
  5876 00003533 803804                  	cmp byte [rax], T_closure
  5877 00003536 0F85EC340100            	jne L_error_non_closure
  5878 0000353C FF7001                  	push SOB_CLOSURE_ENV(rax)
  5879 0000353F FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  5880 00003542 FF7500                  	push qword[rbp]
  5881 00003545 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  5882 0000354A 48895D10                	mov qword[rbp + 8*2],rbx
  5883 0000354E 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  5884 00003556 BF00000000              	mov rdi,0
  5885 0000355B EB00                    	jmp .L_tc_recycle_frame_loop_0023
  5886                                  .L_tc_recycle_frame_loop_0023:
  5887 0000355D 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  5888 00003561 740F                    	je .L_tc_recycle_frame_done_0023
  5889 00003563 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  5890 00003568 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  5891 0000356D 48FFC7                  	inc rdi
  5892 00003570 EBEB                    	jmp .L_tc_recycle_frame_loop_0023
  5893                                  .L_tc_recycle_frame_done_0023:
  5894 00003572 4889EC                  	mov rsp, rbp	; point to last argument
  5895 00003575 5D                      	pop rbp
  5896 00003576 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  5897 00003579 C9                      	leave
  5898 0000357A C22000                  	ret AND_KILL_FRAME(2)
  5899                                  .L_lambda_opt_end_0003:	; new closure is in rax
  5900 0000357D C9                      	leave
  5901 0000357E C21800                  	ret AND_KILL_FRAME(1)
  5902                                  .L_lambda_simple_end_0022:	; new closure is in rax
  5903 00003581 803804                  	cmp byte [rax], T_closure
  5904 00003584 0F859E340100            	jne L_error_non_closure
  5905 0000358A FF7001                  	push SOB_CLOSURE_ENV(rax)
  5906 0000358D FF5009                  	call SOB_CLOSURE_CODE(rax)
  5907 00003590 48890425[F60F0000]      	mov qword [free_var_33], rax
  5908 00003598 48B8-                   	mov rax, sob_void
  5908 0000359A [0000000000000000] 
  5909                                  
  5910 000035A2 4889C7                  	mov rdi, rax
  5911 000035A5 E87C370100              	call print_sexpr_if_not_void
  5912 000035AA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5913 000035AF E81D350100              	call malloc
  5914 000035B4 50                      	push rax
  5915 000035B5 BF00000000              	mov rdi, 8 * 0	; new rib
  5916 000035BA E812350100              	call malloc
  5917 000035BF 50                      	push rax
  5918 000035C0 BF08000000              	mov rdi, 8 * 1	; extended env
  5919 000035C5 E807350100              	call malloc
  5920 000035CA 488B7D10                	mov rdi, ENV
  5921 000035CE BE00000000              	mov rsi, 0
  5922 000035D3 BA01000000              	mov rdx, 1
  5923                                  .L_lambda_opt_env_loop_0004:	; ext_env[i + 1] <-- env[i]
  5924 000035D8 4883FE00                	cmp rsi, 0
  5925 000035DC 7410                    	je .L_lambda_opt_env_end_0004
  5926 000035DE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5927 000035E2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5928 000035E6 48FFC6                  	inc rsi
  5929 000035E9 48FFC2                  	inc rdx
  5930 000035EC EBEA                    	jmp .L_lambda_opt_env_loop_0004
  5931                                  .L_lambda_opt_env_end_0004:
  5932 000035EE 5B                      	pop rbx
  5933 000035EF BE00000000              	mov rsi, 0
  5934                                  .L_lambda_opt_params_loop_0004:	; copy params
  5935 000035F4 4883FE00                	cmp rsi, 0
  5936 000035F8 740E                    	je .L_lambda_opt_params_end_0004
  5937 000035FA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5938 000035FF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  5939 00003603 48FFC6                  	inc rsi
  5940 00003606 EBEC                    	jmp .L_lambda_opt_params_loop_0004
  5941                                  .L_lambda_opt_params_end_0004:
  5942 00003608 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  5943 0000360B 4889C3                  	mov rbx, rax
  5944 0000360E 58                      	pop rax
  5945 0000360F C60004                  	mov byte [rax], T_closure
  5946 00003612 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  5947 00003616 48C74009[23360000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0004
  5948 0000361E E938080000              	jmp .L_lambda_opt_end_0004
  5949                                  .L_lambda_opt_code_0004:	; lambda-opt body
  5950 00003623 48837C241001            	cmp qword [rsp + 8 * 2], 1
  5951 00003629 7411                    	je .L_lambda_opt_arity_check_exact_0004
  5952 0000362B 0F8FE7030000            	jg .L_lambda_opt_arity_check_more_0004
  5953 00003631 FF742410                	push qword [rsp + 8 * 2]
  5954 00003635 6A01                    	push 1
  5955 00003637 E962340100              	jmp L_error_incorrect_arity_opt
  5956                                  .L_lambda_opt_arity_check_exact_0004:
  5957 0000363C 4883EC08                	sub rsp, 8
  5958 00003640 488B442408              	mov rax, qword[rsp + 8 *1]
  5959 00003645 48890424                	mov qword[rsp], rax  
  5960 00003649 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  5961 0000364E 4889442408              	mov qword[rsp + 8 * 1], rax
  5962 00003653 B802000000              	mov rax, 2
  5963 00003658 4889442410              	mov qword[rsp + 8 *2], rax
  5964 0000365D 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  5965 00003662 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  5966 00003667 48B8-                   	mov rax, sob_nil
  5966 00003669 [0100000000000000] 
  5967 00003671 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  5968 00003676 C8000000                	enter 0, 0
  5969                                  	; preparing a tail-call
  5970 0000367A 48B8-                   	mov rax, L_constants + 1993
  5970 0000367C [C907000000000000] 
  5971 00003684 50                      	push rax
  5972 00003685 6A01                    	push 1	; arg count
  5973 00003687 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  5974 0000368C E840340100              	call malloc
  5975 00003691 50                      	push rax
  5976 00003692 BF10000000              	mov rdi, 8 * 2	; new rib
  5977 00003697 E835340100              	call malloc
  5978 0000369C 50                      	push rax
  5979 0000369D BF10000000              	mov rdi, 8 * 2	; extended env
  5980 000036A2 E82A340100              	call malloc
  5981 000036A7 488B7D10                	mov rdi, ENV
  5982 000036AB BE00000000              	mov rsi, 0
  5983 000036B0 BA01000000              	mov rdx, 1
  5984                                  .L_lambda_simple_env_loop_0026:	; ext_env[i + 1] <-- env[i]
  5985 000036B5 4883FE01                	cmp rsi, 1
  5986 000036B9 7410                    	je .L_lambda_simple_env_end_0026
  5987 000036BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  5988 000036BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
  5989 000036C3 48FFC6                  	inc rsi
  5990 000036C6 48FFC2                  	inc rdx
  5991 000036C9 EBEA                    	jmp .L_lambda_simple_env_loop_0026
  5992                                  .L_lambda_simple_env_end_0026:
  5993 000036CB 5B                      	pop rbx
  5994 000036CC BE00000000              	mov rsi, 0
  5995                                  .L_lambda_simple_params_loop_0026:	; copy params
  5996 000036D1 4883FE02                	cmp rsi, 2
  5997 000036D5 740E                    	je .L_lambda_simple_params_end_0026
  5998 000036D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  5999 000036DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6000 000036E0 48FFC6                  	inc rsi
  6001 000036E3 EBEC                    	jmp .L_lambda_simple_params_loop_0026
  6002                                  .L_lambda_simple_params_end_0026:
  6003 000036E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6004 000036E8 4889C3                  	mov rbx, rax
  6005 000036EB 58                      	pop rax
  6006 000036EC C60004                  	mov byte [rax], T_closure
  6007 000036EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6008 000036F3 48C74009[00370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0026
  6009 000036FB E9C9020000              	jmp .L_lambda_simple_end_0026
  6010                                  .L_lambda_simple_code_0026:	; lambda-simple body
  6011 00003700 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6012 00003706 740B                    	je .L_lambda_simple_arity_check_ok_0026
  6013 00003708 FF742410                	push qword [rsp + 8 * 2]
  6014 0000370C 6A01                    	push 1
  6015 0000370E E977330100              	jmp L_error_incorrect_arity_simple
  6016                                  .L_lambda_simple_arity_check_ok_0026:
  6017 00003713 C8000000                	enter 0, 0
  6018 00003717 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  6019 0000371B 488903                  	mov qword [rbx], rax
  6020                                  
  6021 0000371E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6022 00003723 E8A9330100              	call malloc
  6023 00003728 50                      	push rax
  6024 00003729 BF08000000              	mov rdi, 8 * 1	; new rib
  6025 0000372E E89E330100              	call malloc
  6026 00003733 50                      	push rax
  6027 00003734 BF18000000              	mov rdi, 8 * 3	; extended env
  6028 00003739 E893330100              	call malloc
  6029 0000373E 488B7D10                	mov rdi, ENV
  6030 00003742 BE00000000              	mov rsi, 0
  6031 00003747 BA01000000              	mov rdx, 1
  6032                                  .L_lambda_simple_env_loop_0027:	; ext_env[i + 1] <-- env[i]
  6033 0000374C 4883FE02                	cmp rsi, 2
  6034 00003750 7410                    	je .L_lambda_simple_env_end_0027
  6035 00003752 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6036 00003756 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6037 0000375A 48FFC6                  	inc rsi
  6038 0000375D 48FFC2                  	inc rdx
  6039 00003760 EBEA                    	jmp .L_lambda_simple_env_loop_0027
  6040                                  .L_lambda_simple_env_end_0027:
  6041 00003762 5B                      	pop rbx
  6042 00003763 BE00000000              	mov rsi, 0
  6043                                  .L_lambda_simple_params_loop_0027:	; copy params
  6044 00003768 4883FE01                	cmp rsi, 1
  6045 0000376C 740E                    	je .L_lambda_simple_params_end_0027
  6046 0000376E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6047 00003773 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6048 00003777 48FFC6                  	inc rsi
  6049 0000377A EBEC                    	jmp .L_lambda_simple_params_loop_0027
  6050                                  .L_lambda_simple_params_end_0027:
  6051 0000377C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6052 0000377F 4889C3                  	mov rbx, rax
  6053 00003782 58                      	pop rax
  6054 00003783 C60004                  	mov byte [rax], T_closure
  6055 00003786 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6056 0000378A 48C74009[97370000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0027
  6057 00003792 E980010000              	jmp .L_lambda_simple_end_0027
  6058                                  .L_lambda_simple_code_0027:	; lambda-simple body
  6059 00003797 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6060 0000379D 740B                    	je .L_lambda_simple_arity_check_ok_0027
  6061 0000379F FF742410                	push qword [rsp + 8 * 2]
  6062 000037A3 6A01                    	push 1
  6063 000037A5 E9E0320100              	jmp L_error_incorrect_arity_simple
  6064                                  .L_lambda_simple_arity_check_ok_0027:
  6065 000037AA C8000000                	enter 0, 0
  6066                                  	; preparing a non-tail-call
  6067                                  	; preparing a non-tail-call
  6068 000037AE 488B4520                	mov rax, PARAM(0)	; param s
  6069 000037B2 50                      	push rax
  6070 000037B3 6A01                    	push 1	; arg count
  6071 000037B5 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6072 000037BD 803805                  	cmp byte [rax], T_undefined
  6073 000037C0 0F84DE310100            	je L_error_fvar_undefined
  6074 000037C6 803804                  	cmp byte [rax], T_closure
  6075 000037C9 0F8559320100            	jne L_error_non_closure
  6076 000037CF FF7001                  	push SOB_CLOSURE_ENV(rax)
  6077 000037D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6078 000037D5 50                      	push rax
  6079 000037D6 6A01                    	push 1	; arg count
  6080 000037D8 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6081 000037E0 803805                  	cmp byte [rax], T_undefined
  6082 000037E3 0F84BB310100            	je L_error_fvar_undefined
  6083 000037E9 803804                  	cmp byte [rax], T_closure
  6084 000037EC 0F8536320100            	jne L_error_non_closure
  6085 000037F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6086 000037F5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6087 000037F8 483D[02000000]          	cmp rax, sob_boolean_false
  6088 000037FE 0F8405010000            	je .L_if_else_0007
  6089                                  	; preparing a non-tail-call
  6090                                  	; preparing a non-tail-call
  6091 00003804 488B4520                	mov rax, PARAM(0)	; param s
  6092 00003808 50                      	push rax
  6093 00003809 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6094 00003811 803805                  	cmp byte [rax], T_undefined
  6095 00003814 0F848A310100            	je L_error_fvar_undefined
  6096 0000381A 50                      	push rax
  6097 0000381B 6A02                    	push 2	; arg count
  6098 0000381D 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6099 00003825 803805                  	cmp byte [rax], T_undefined
  6100 00003828 0F8476310100            	je L_error_fvar_undefined
  6101 0000382E 803804                  	cmp byte [rax], T_closure
  6102 00003831 0F85F1310100            	jne L_error_non_closure
  6103 00003837 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6104 0000383A FF5009                  	call SOB_CLOSURE_CODE(rax)
  6105 0000383D 50                      	push rax
  6106 0000383E 488B4510                	mov rax, ENV
  6107 00003842 488B4008                	mov rax, qword [rax + 8 * 1]
  6108 00003846 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6109 00003849 50                      	push rax
  6110 0000384A 6A02                    	push 2	; arg count
  6111 0000384C 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6112 00003854 803805                  	cmp byte [rax], T_undefined
  6113 00003857 0F8447310100            	je L_error_fvar_undefined
  6114 0000385D 803804                  	cmp byte [rax], T_closure
  6115 00003860 0F85C2310100            	jne L_error_non_closure
  6116 00003866 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6117 00003869 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6118 0000386C 483D[02000000]          	cmp rax, sob_boolean_false
  6119 00003872 0F858F000000            	jne .L_or_end_0004
  6120                                  	; preparing a tail-call
  6121                                  	; preparing a non-tail-call
  6122 00003878 488B4520                	mov rax, PARAM(0)	; param s
  6123 0000387C 50                      	push rax
  6124 0000387D 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6125 00003885 803805                  	cmp byte [rax], T_undefined
  6126 00003888 0F8416310100            	je L_error_fvar_undefined
  6127 0000388E 50                      	push rax
  6128 0000388F 6A02                    	push 2	; arg count
  6129 00003891 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6130 00003899 803805                  	cmp byte [rax], T_undefined
  6131 0000389C 0F8402310100            	je L_error_fvar_undefined
  6132 000038A2 803804                  	cmp byte [rax], T_closure
  6133 000038A5 0F857D310100            	jne L_error_non_closure
  6134 000038AB FF7001                  	push SOB_CLOSURE_ENV(rax)
  6135 000038AE FF5009                  	call SOB_CLOSURE_CODE(rax)
  6136 000038B1 50                      	push rax
  6137 000038B2 6A01                    	push 1	; arg count
  6138 000038B4 488B4510                	mov rax, ENV
  6139 000038B8 488B00                  	mov rax, qword [rax + 8 * 0]
  6140 000038BB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6141 000038BE 488B00                  	mov rax, qword [rax]
  6142 000038C1 803804                  	cmp byte [rax], T_closure
  6143 000038C4 0F855E310100            	jne L_error_non_closure
  6144 000038CA FF7001                  	push SOB_CLOSURE_ENV(rax)
  6145 000038CD FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  6146 000038D0 FF7500                  	push qword[rbp]
  6147 000038D3 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  6148 000038D8 48895D10                	mov qword[rbp + 8*2],rbx
  6149 000038DC 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  6150 000038E4 BF00000000              	mov rdi,0
  6151 000038E9 EB00                    	jmp .L_tc_recycle_frame_loop_0028
  6152                                  .L_tc_recycle_frame_loop_0028:
  6153 000038EB 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  6154 000038EF 740F                    	je .L_tc_recycle_frame_done_0028
  6155 000038F1 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  6156 000038F6 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  6157 000038FB 48FFC7                  	inc rdi
  6158 000038FE EBEB                    	jmp .L_tc_recycle_frame_loop_0028
  6159                                  .L_tc_recycle_frame_done_0028:
  6160 00003900 4889EC                  	mov rsp, rbp	; point to last argument
  6161 00003903 5D                      	pop rbp
  6162 00003904 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6163                                  .L_or_end_0004:
  6164 00003907 EB0A                    	jmp .L_if_end_0007
  6165                                  .L_if_else_0007:
  6166 00003909 48B8-                   	mov rax, L_constants + 2
  6166 0000390B [0200000000000000] 
  6167                                  .L_if_end_0007:
  6168 00003913 C9                      	leave
  6169 00003914 C21800                  	ret AND_KILL_FRAME(1)
  6170                                  .L_lambda_simple_end_0027:	; new closure is in rax
  6171 00003917 50                      	push rax
  6172 00003918 488B4520                	mov rax, PARAM(0)	; param loop
  6173 0000391C 8F00                    	pop qword [rax]
  6174 0000391E 48B8-                   	mov rax, sob_void
  6174 00003920 [0000000000000000] 
  6175                                  
  6176                                  	; preparing a non-tail-call
  6177 00003928 488B4510                	mov rax, ENV
  6178 0000392C 488B00                  	mov rax, qword [rax + 8 * 0]
  6179 0000392F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6180 00003933 50                      	push rax
  6181 00003934 6A01                    	push 1	; arg count
  6182 00003936 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6183 0000393E 803805                  	cmp byte [rax], T_undefined
  6184 00003941 0F845D300100            	je L_error_fvar_undefined
  6185 00003947 803804                  	cmp byte [rax], T_closure
  6186 0000394A 0F85D8300100            	jne L_error_non_closure
  6187 00003950 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6188 00003953 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6189 00003956 483D[02000000]          	cmp rax, sob_boolean_false
  6190 0000395C 745D                    	je .L_if_else_0008
  6191                                  	; preparing a tail-call
  6192 0000395E 488B4510                	mov rax, ENV
  6193 00003962 488B00                  	mov rax, qword [rax + 8 * 0]
  6194 00003965 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6195 00003969 50                      	push rax
  6196 0000396A 6A01                    	push 1	; arg count
  6197 0000396C 488B4520                	mov rax, PARAM(0)	; param loop
  6198 00003970 488B00                  	mov rax, qword [rax]
  6199 00003973 803804                  	cmp byte [rax], T_closure
  6200 00003976 0F85AC300100            	jne L_error_non_closure
  6201 0000397C FF7001                  	push SOB_CLOSURE_ENV(rax)
  6202 0000397F FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  6203 00003982 FF7500                  	push qword[rbp]
  6204 00003985 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  6205 0000398A 48895D10                	mov qword[rbp + 8*2],rbx
  6206 0000398E 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  6207 00003996 BF00000000              	mov rdi,0
  6208 0000399B EB00                    	jmp .L_tc_recycle_frame_loop_0029
  6209                                  .L_tc_recycle_frame_loop_0029:
  6210 0000399D 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  6211 000039A1 740F                    	je .L_tc_recycle_frame_done_0029
  6212 000039A3 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  6213 000039A8 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  6214 000039AD 48FFC7                  	inc rdi
  6215 000039B0 EBEB                    	jmp .L_tc_recycle_frame_loop_0029
  6216                                  .L_tc_recycle_frame_done_0029:
  6217 000039B2 4889EC                  	mov rsp, rbp	; point to last argument
  6218 000039B5 5D                      	pop rbp
  6219 000039B6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6220 000039B9 EB0A                    	jmp .L_if_end_0008
  6221                                  .L_if_else_0008:
  6222 000039BB 48B8-                   	mov rax, L_constants + 2
  6222 000039BD [0200000000000000] 
  6223                                  .L_if_end_0008:
  6224 000039C5 C9                      	leave
  6225 000039C6 C21800                  	ret AND_KILL_FRAME(1)
  6226                                  .L_lambda_simple_end_0026:	; new closure is in rax
  6227 000039C9 803804                  	cmp byte [rax], T_closure
  6228 000039CC 0F8556300100            	jne L_error_non_closure
  6229 000039D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6230 000039D5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  6231 000039D8 FF7500                  	push qword[rbp]
  6232 000039DB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  6233 000039E0 48895D10                	mov qword[rbp + 8*2],rbx
  6234 000039E4 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  6235 000039EC BF00000000              	mov rdi,0
  6236 000039F1 EB00                    	jmp .L_tc_recycle_frame_loop_002a
  6237                                  .L_tc_recycle_frame_loop_002a:
  6238 000039F3 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  6239 000039F7 740F                    	je .L_tc_recycle_frame_done_002a
  6240 000039F9 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  6241 000039FE 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  6242 00003A03 48FFC7                  	inc rdi
  6243 00003A06 EBEB                    	jmp .L_tc_recycle_frame_loop_002a
  6244                                  .L_tc_recycle_frame_done_002a:
  6245 00003A08 4889EC                  	mov rsp, rbp	; point to last argument
  6246 00003A0B 5D                      	pop rbp
  6247 00003A0C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6248 00003A0F C9                      	leave
  6249 00003A10 C22000                  	ret AND_KILL_FRAME(2)
  6250 00003A13 E943040000              	jmp .L_lambda_opt_end_0004	; new closure is in rax
  6251                                  .L_lambda_opt_arity_check_more_0004:
  6252 00003A18 488B442410              	mov rax, qword[rsp + 2 * 8]
  6253 00003A1D 4889C7                  	mov rdi, rax
  6254 00003A20 49B9-                   	mov r9, sob_nil
  6254 00003A22 [0100000000000000] 
  6255 00003A2A 4C8B442410              	mov r8, qword[rsp+2*8]
  6256                                  .L_lambda_opt_stack_shrink_loop_0004:
  6257 00003A2F 4983F801                	cmp r8, 1
  6258 00003A33 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0004
  6259 00003A35 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  6260 00003A3A BF11000000              	mov rdi, 1+8+8	;for pair
  6261 00003A3F E88D300100              	call malloc	 ;to create the pair in the stack
  6262 00003A44 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  6263 00003A47 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  6264 00003A4B 4C894809                 	mov qword[rax+1+8],r9
  6265 00003A4F 4989C1                  	mov r9 , rax	 ; for the recursion 
  6266 00003A52 49FFC8                  	dec r8
  6267 00003A55 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0004
  6268                                  .L_lambda_opt_stack_shrink_loop_exit_0004:
  6269 00003A57 488B442410              	mov rax, qword[rsp + 2 * 8]
  6270 00003A5C BF02000000              	mov rdi, 2
  6271 00003A61 4829F8                  	sub rax, rdi
  6272 00003A64 4889C7                  	mov rdi, rax
  6273 00003A67 486BC008                	imul rax,8
  6274 00003A6B 4801C4                  	add rsp, rax
  6275 00003A6E 4889E0                  	mov rax, rsp
  6276 00003A71 4989F8                  	mov r8, rdi
  6277 00003A74 4D6BC008                	imul r8, 8
  6278 00003A78 4C29C0                  	sub rax, r8
  6279 00003A7B 4989C2                  	mov r10, rax	; holds the original ret in the stack
  6280 00003A7E 4983C218                	add r10, 8*3
  6281 00003A82 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  6282 00003A86 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  6283 00003A89 4D6BC008                	imul r8,8
  6284 00003A8D 4C01C0                  	add rax, r8
  6285 00003A90 4C8908                  	mov qword[rax] ,r9
  6286 00003A93 4D89D0                   	mov r8, r10
  6287 00003A96 4983C000                	add r8, 8 * 0
  6288 00003A9A 4D8B08                  	mov r9,qword[r8]
  6289 00003A9D 4D890CF8                	mov qword [r8 + rdi * 8], r9
  6290 00003AA1 4983EA18                	sub r10, 8*3
  6291 00003AA5 48C744241002000000      	mov qword [rsp+2*8], 2
  6292 00003AAE 498B4208                	mov rax, qword[r10 + 1 * 8]
  6293 00003AB2 4889442408              	mov qword[rsp + 1*8] ,rax
  6294 00003AB7 498B02                  	mov rax, qword[r10]
  6295 00003ABA 48890424                	mov qword[rsp], rax
  6296 00003ABE C8000000                	enter 0, 0
  6297                                  	; preparing a tail-call
  6298 00003AC2 48B8-                   	mov rax, L_constants + 1993
  6298 00003AC4 [C907000000000000] 
  6299 00003ACC 50                      	push rax
  6300 00003ACD 6A01                    	push 1	; arg count
  6301 00003ACF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6302 00003AD4 E8F82F0100              	call malloc
  6303 00003AD9 50                      	push rax
  6304 00003ADA BF10000000              	mov rdi, 8 * 2	; new rib
  6305 00003ADF E8ED2F0100              	call malloc
  6306 00003AE4 50                      	push rax
  6307 00003AE5 BF10000000              	mov rdi, 8 * 2	; extended env
  6308 00003AEA E8E22F0100              	call malloc
  6309 00003AEF 488B7D10                	mov rdi, ENV
  6310 00003AF3 BE00000000              	mov rsi, 0
  6311 00003AF8 BA01000000              	mov rdx, 1
  6312                                  .L_lambda_simple_env_loop_0024:	; ext_env[i + 1] <-- env[i]
  6313 00003AFD 4883FE01                	cmp rsi, 1
  6314 00003B01 7410                    	je .L_lambda_simple_env_end_0024
  6315 00003B03 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6316 00003B07 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6317 00003B0B 48FFC6                  	inc rsi
  6318 00003B0E 48FFC2                  	inc rdx
  6319 00003B11 EBEA                    	jmp .L_lambda_simple_env_loop_0024
  6320                                  .L_lambda_simple_env_end_0024:
  6321 00003B13 5B                      	pop rbx
  6322 00003B14 BE00000000              	mov rsi, 0
  6323                                  .L_lambda_simple_params_loop_0024:	; copy params
  6324 00003B19 4883FE02                	cmp rsi, 2
  6325 00003B1D 740E                    	je .L_lambda_simple_params_end_0024
  6326 00003B1F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6327 00003B24 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6328 00003B28 48FFC6                  	inc rsi
  6329 00003B2B EBEC                    	jmp .L_lambda_simple_params_loop_0024
  6330                                  .L_lambda_simple_params_end_0024:
  6331 00003B2D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6332 00003B30 4889C3                  	mov rbx, rax
  6333 00003B33 58                      	pop rax
  6334 00003B34 C60004                  	mov byte [rax], T_closure
  6335 00003B37 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6336 00003B3B 48C74009[483B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0024
  6337 00003B43 E9C9020000              	jmp .L_lambda_simple_end_0024
  6338                                  .L_lambda_simple_code_0024:	; lambda-simple body
  6339 00003B48 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6340 00003B4E 740B                    	je .L_lambda_simple_arity_check_ok_0024
  6341 00003B50 FF742410                	push qword [rsp + 8 * 2]
  6342 00003B54 6A01                    	push 1
  6343 00003B56 E92F2F0100              	jmp L_error_incorrect_arity_simple
  6344                                  .L_lambda_simple_arity_check_ok_0024:
  6345 00003B5B C8000000                	enter 0, 0
  6346 00003B5F 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  6347 00003B63 488903                  	mov qword [rbx], rax
  6348                                  
  6349 00003B66 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6350 00003B6B E8612F0100              	call malloc
  6351 00003B70 50                      	push rax
  6352 00003B71 BF08000000              	mov rdi, 8 * 1	; new rib
  6353 00003B76 E8562F0100              	call malloc
  6354 00003B7B 50                      	push rax
  6355 00003B7C BF18000000              	mov rdi, 8 * 3	; extended env
  6356 00003B81 E84B2F0100              	call malloc
  6357 00003B86 488B7D10                	mov rdi, ENV
  6358 00003B8A BE00000000              	mov rsi, 0
  6359 00003B8F BA01000000              	mov rdx, 1
  6360                                  .L_lambda_simple_env_loop_0025:	; ext_env[i + 1] <-- env[i]
  6361 00003B94 4883FE02                	cmp rsi, 2
  6362 00003B98 7410                    	je .L_lambda_simple_env_end_0025
  6363 00003B9A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6364 00003B9E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6365 00003BA2 48FFC6                  	inc rsi
  6366 00003BA5 48FFC2                  	inc rdx
  6367 00003BA8 EBEA                    	jmp .L_lambda_simple_env_loop_0025
  6368                                  .L_lambda_simple_env_end_0025:
  6369 00003BAA 5B                      	pop rbx
  6370 00003BAB BE00000000              	mov rsi, 0
  6371                                  .L_lambda_simple_params_loop_0025:	; copy params
  6372 00003BB0 4883FE01                	cmp rsi, 1
  6373 00003BB4 740E                    	je .L_lambda_simple_params_end_0025
  6374 00003BB6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6375 00003BBB 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6376 00003BBF 48FFC6                  	inc rsi
  6377 00003BC2 EBEC                    	jmp .L_lambda_simple_params_loop_0025
  6378                                  .L_lambda_simple_params_end_0025:
  6379 00003BC4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6380 00003BC7 4889C3                  	mov rbx, rax
  6381 00003BCA 58                      	pop rax
  6382 00003BCB C60004                  	mov byte [rax], T_closure
  6383 00003BCE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6384 00003BD2 48C74009[DF3B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0025
  6385 00003BDA E980010000              	jmp .L_lambda_simple_end_0025
  6386                                  .L_lambda_simple_code_0025:	; lambda-simple body
  6387 00003BDF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6388 00003BE5 740B                    	je .L_lambda_simple_arity_check_ok_0025
  6389 00003BE7 FF742410                	push qword [rsp + 8 * 2]
  6390 00003BEB 6A01                    	push 1
  6391 00003BED E9982E0100              	jmp L_error_incorrect_arity_simple
  6392                                  .L_lambda_simple_arity_check_ok_0025:
  6393 00003BF2 C8000000                	enter 0, 0
  6394                                  	; preparing a non-tail-call
  6395                                  	; preparing a non-tail-call
  6396 00003BF6 488B4520                	mov rax, PARAM(0)	; param s
  6397 00003BFA 50                      	push rax
  6398 00003BFB 6A01                    	push 1	; arg count
  6399 00003BFD 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6400 00003C05 803805                  	cmp byte [rax], T_undefined
  6401 00003C08 0F84962D0100            	je L_error_fvar_undefined
  6402 00003C0E 803804                  	cmp byte [rax], T_closure
  6403 00003C11 0F85112E0100            	jne L_error_non_closure
  6404 00003C17 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6405 00003C1A FF5009                  	call SOB_CLOSURE_CODE(rax)
  6406 00003C1D 50                      	push rax
  6407 00003C1E 6A01                    	push 1	; arg count
  6408 00003C20 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6409 00003C28 803805                  	cmp byte [rax], T_undefined
  6410 00003C2B 0F84732D0100            	je L_error_fvar_undefined
  6411 00003C31 803804                  	cmp byte [rax], T_closure
  6412 00003C34 0F85EE2D0100            	jne L_error_non_closure
  6413 00003C3A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6414 00003C3D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6415 00003C40 483D[02000000]          	cmp rax, sob_boolean_false
  6416 00003C46 0F8405010000            	je .L_if_else_0005
  6417                                  	; preparing a non-tail-call
  6418                                  	; preparing a non-tail-call
  6419 00003C4C 488B4520                	mov rax, PARAM(0)	; param s
  6420 00003C50 50                      	push rax
  6421 00003C51 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6422 00003C59 803805                  	cmp byte [rax], T_undefined
  6423 00003C5C 0F84422D0100            	je L_error_fvar_undefined
  6424 00003C62 50                      	push rax
  6425 00003C63 6A02                    	push 2	; arg count
  6426 00003C65 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6427 00003C6D 803805                  	cmp byte [rax], T_undefined
  6428 00003C70 0F842E2D0100            	je L_error_fvar_undefined
  6429 00003C76 803804                  	cmp byte [rax], T_closure
  6430 00003C79 0F85A92D0100            	jne L_error_non_closure
  6431 00003C7F FF7001                  	push SOB_CLOSURE_ENV(rax)
  6432 00003C82 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6433 00003C85 50                      	push rax
  6434 00003C86 488B4510                	mov rax, ENV
  6435 00003C8A 488B4008                	mov rax, qword [rax + 8 * 1]
  6436 00003C8E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6437 00003C91 50                      	push rax
  6438 00003C92 6A02                    	push 2	; arg count
  6439 00003C94 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6440 00003C9C 803805                  	cmp byte [rax], T_undefined
  6441 00003C9F 0F84FF2C0100            	je L_error_fvar_undefined
  6442 00003CA5 803804                  	cmp byte [rax], T_closure
  6443 00003CA8 0F857A2D0100            	jne L_error_non_closure
  6444 00003CAE FF7001                  	push SOB_CLOSURE_ENV(rax)
  6445 00003CB1 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6446 00003CB4 483D[02000000]          	cmp rax, sob_boolean_false
  6447 00003CBA 0F858F000000            	jne .L_or_end_0003
  6448                                  	; preparing a tail-call
  6449                                  	; preparing a non-tail-call
  6450 00003CC0 488B4520                	mov rax, PARAM(0)	; param s
  6451 00003CC4 50                      	push rax
  6452 00003CC5 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6453 00003CCD 803805                  	cmp byte [rax], T_undefined
  6454 00003CD0 0F84CE2C0100            	je L_error_fvar_undefined
  6455 00003CD6 50                      	push rax
  6456 00003CD7 6A02                    	push 2	; arg count
  6457 00003CD9 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6458 00003CE1 803805                  	cmp byte [rax], T_undefined
  6459 00003CE4 0F84BA2C0100            	je L_error_fvar_undefined
  6460 00003CEA 803804                  	cmp byte [rax], T_closure
  6461 00003CED 0F85352D0100            	jne L_error_non_closure
  6462 00003CF3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6463 00003CF6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6464 00003CF9 50                      	push rax
  6465 00003CFA 6A01                    	push 1	; arg count
  6466 00003CFC 488B4510                	mov rax, ENV
  6467 00003D00 488B00                  	mov rax, qword [rax + 8 * 0]
  6468 00003D03 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6469 00003D06 488B00                  	mov rax, qword [rax]
  6470 00003D09 803804                  	cmp byte [rax], T_closure
  6471 00003D0C 0F85162D0100            	jne L_error_non_closure
  6472 00003D12 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6473 00003D15 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  6474 00003D18 FF7500                  	push qword[rbp]
  6475 00003D1B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  6476 00003D20 48895D10                	mov qword[rbp + 8*2],rbx
  6477 00003D24 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  6478 00003D2C BF00000000              	mov rdi,0
  6479 00003D31 EB00                    	jmp .L_tc_recycle_frame_loop_0025
  6480                                  .L_tc_recycle_frame_loop_0025:
  6481 00003D33 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  6482 00003D37 740F                    	je .L_tc_recycle_frame_done_0025
  6483 00003D39 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  6484 00003D3E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  6485 00003D43 48FFC7                  	inc rdi
  6486 00003D46 EBEB                    	jmp .L_tc_recycle_frame_loop_0025
  6487                                  .L_tc_recycle_frame_done_0025:
  6488 00003D48 4889EC                  	mov rsp, rbp	; point to last argument
  6489 00003D4B 5D                      	pop rbp
  6490 00003D4C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6491                                  .L_or_end_0003:
  6492 00003D4F EB0A                    	jmp .L_if_end_0005
  6493                                  .L_if_else_0005:
  6494 00003D51 48B8-                   	mov rax, L_constants + 2
  6494 00003D53 [0200000000000000] 
  6495                                  .L_if_end_0005:
  6496 00003D5B C9                      	leave
  6497 00003D5C C21800                  	ret AND_KILL_FRAME(1)
  6498                                  .L_lambda_simple_end_0025:	; new closure is in rax
  6499 00003D5F 50                      	push rax
  6500 00003D60 488B4520                	mov rax, PARAM(0)	; param loop
  6501 00003D64 8F00                    	pop qword [rax]
  6502 00003D66 48B8-                   	mov rax, sob_void
  6502 00003D68 [0000000000000000] 
  6503                                  
  6504                                  	; preparing a non-tail-call
  6505 00003D70 488B4510                	mov rax, ENV
  6506 00003D74 488B00                  	mov rax, qword [rax + 8 * 0]
  6507 00003D77 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6508 00003D7B 50                      	push rax
  6509 00003D7C 6A01                    	push 1	; arg count
  6510 00003D7E 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6511 00003D86 803805                  	cmp byte [rax], T_undefined
  6512 00003D89 0F84152C0100            	je L_error_fvar_undefined
  6513 00003D8F 803804                  	cmp byte [rax], T_closure
  6514 00003D92 0F85902C0100            	jne L_error_non_closure
  6515 00003D98 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6516 00003D9B FF5009                  	call SOB_CLOSURE_CODE(rax)
  6517 00003D9E 483D[02000000]          	cmp rax, sob_boolean_false
  6518 00003DA4 745D                    	je .L_if_else_0006
  6519                                  	; preparing a tail-call
  6520 00003DA6 488B4510                	mov rax, ENV
  6521 00003DAA 488B00                  	mov rax, qword [rax + 8 * 0]
  6522 00003DAD 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6523 00003DB1 50                      	push rax
  6524 00003DB2 6A01                    	push 1	; arg count
  6525 00003DB4 488B4520                	mov rax, PARAM(0)	; param loop
  6526 00003DB8 488B00                  	mov rax, qword [rax]
  6527 00003DBB 803804                  	cmp byte [rax], T_closure
  6528 00003DBE 0F85642C0100            	jne L_error_non_closure
  6529 00003DC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6530 00003DC7 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  6531 00003DCA FF7500                  	push qword[rbp]
  6532 00003DCD 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  6533 00003DD2 48895D10                	mov qword[rbp + 8*2],rbx
  6534 00003DD6 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  6535 00003DDE BF00000000              	mov rdi,0
  6536 00003DE3 EB00                    	jmp .L_tc_recycle_frame_loop_0026
  6537                                  .L_tc_recycle_frame_loop_0026:
  6538 00003DE5 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  6539 00003DE9 740F                    	je .L_tc_recycle_frame_done_0026
  6540 00003DEB 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  6541 00003DF0 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  6542 00003DF5 48FFC7                  	inc rdi
  6543 00003DF8 EBEB                    	jmp .L_tc_recycle_frame_loop_0026
  6544                                  .L_tc_recycle_frame_done_0026:
  6545 00003DFA 4889EC                  	mov rsp, rbp	; point to last argument
  6546 00003DFD 5D                      	pop rbp
  6547 00003DFE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6548 00003E01 EB0A                    	jmp .L_if_end_0006
  6549                                  .L_if_else_0006:
  6550 00003E03 48B8-                   	mov rax, L_constants + 2
  6550 00003E05 [0200000000000000] 
  6551                                  .L_if_end_0006:
  6552 00003E0D C9                      	leave
  6553 00003E0E C21800                  	ret AND_KILL_FRAME(1)
  6554                                  .L_lambda_simple_end_0024:	; new closure is in rax
  6555 00003E11 803804                  	cmp byte [rax], T_closure
  6556 00003E14 0F850E2C0100            	jne L_error_non_closure
  6557 00003E1A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6558 00003E1D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  6559 00003E20 FF7500                  	push qword[rbp]
  6560 00003E23 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  6561 00003E28 48895D10                	mov qword[rbp + 8*2],rbx
  6562 00003E2C 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  6563 00003E34 BF00000000              	mov rdi,0
  6564 00003E39 EB00                    	jmp .L_tc_recycle_frame_loop_0027
  6565                                  .L_tc_recycle_frame_loop_0027:
  6566 00003E3B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  6567 00003E3F 740F                    	je .L_tc_recycle_frame_done_0027
  6568 00003E41 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  6569 00003E46 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  6570 00003E4B 48FFC7                  	inc rdi
  6571 00003E4E EBEB                    	jmp .L_tc_recycle_frame_loop_0027
  6572                                  .L_tc_recycle_frame_done_0027:
  6573 00003E50 4889EC                  	mov rsp, rbp	; point to last argument
  6574 00003E53 5D                      	pop rbp
  6575 00003E54 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6576 00003E57 C9                      	leave
  6577 00003E58 C22000                  	ret AND_KILL_FRAME(2)
  6578                                  .L_lambda_opt_end_0004:	; new closure is in rax
  6579 00003E5B 48890425[13150000]      	mov qword [free_var_110], rax
  6580 00003E63 48B8-                   	mov rax, sob_void
  6580 00003E65 [0000000000000000] 
  6581                                  
  6582 00003E6D 4889C7                  	mov rdi, rax
  6583 00003E70 E8B12E0100              	call print_sexpr_if_not_void
  6584 00003E75 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6585 00003E7A E8522C0100              	call malloc
  6586 00003E7F 50                      	push rax
  6587 00003E80 BF00000000              	mov rdi, 8 * 0	; new rib
  6588 00003E85 E8472C0100              	call malloc
  6589 00003E8A 50                      	push rax
  6590 00003E8B BF08000000              	mov rdi, 8 * 1	; extended env
  6591 00003E90 E83C2C0100              	call malloc
  6592 00003E95 488B7D10                	mov rdi, ENV
  6593 00003E99 BE00000000              	mov rsi, 0
  6594 00003E9E BA01000000              	mov rdx, 1
  6595                                  .L_lambda_opt_env_loop_0005:	; ext_env[i + 1] <-- env[i]
  6596 00003EA3 4883FE00                	cmp rsi, 0
  6597 00003EA7 7410                    	je .L_lambda_opt_env_end_0005
  6598 00003EA9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6599 00003EAD 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6600 00003EB1 48FFC6                  	inc rsi
  6601 00003EB4 48FFC2                  	inc rdx
  6602 00003EB7 EBEA                    	jmp .L_lambda_opt_env_loop_0005
  6603                                  .L_lambda_opt_env_end_0005:
  6604 00003EB9 5B                      	pop rbx
  6605 00003EBA BE00000000              	mov rsi, 0
  6606                                  .L_lambda_opt_params_loop_0005:	; copy params
  6607 00003EBF 4883FE00                	cmp rsi, 0
  6608 00003EC3 740E                    	je .L_lambda_opt_params_end_0005
  6609 00003EC5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6610 00003ECA 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6611 00003ECE 48FFC6                  	inc rsi
  6612 00003ED1 EBEC                    	jmp .L_lambda_opt_params_loop_0005
  6613                                  .L_lambda_opt_params_end_0005:
  6614 00003ED3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6615 00003ED6 4889C3                  	mov rbx, rax
  6616 00003ED9 58                      	pop rax
  6617 00003EDA C60004                  	mov byte [rax], T_closure
  6618 00003EDD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6619 00003EE1 48C74009[EE3E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0005
  6620 00003EE9 E9AC080000              	jmp .L_lambda_opt_end_0005
  6621                                  .L_lambda_opt_code_0005:	; lambda-opt body
  6622 00003EEE 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6623 00003EF4 7411                    	je .L_lambda_opt_arity_check_exact_0005
  6624 00003EF6 0F8F21040000            	jg .L_lambda_opt_arity_check_more_0005
  6625 00003EFC FF742410                	push qword [rsp + 8 * 2]
  6626 00003F00 6A01                    	push 1
  6627 00003F02 E9972B0100              	jmp L_error_incorrect_arity_opt
  6628                                  .L_lambda_opt_arity_check_exact_0005:
  6629 00003F07 4883EC08                	sub rsp, 8
  6630 00003F0B 488B442408              	mov rax, qword[rsp + 8 *1]
  6631 00003F10 48890424                	mov qword[rsp], rax  
  6632 00003F14 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  6633 00003F19 4889442408              	mov qword[rsp + 8 * 1], rax
  6634 00003F1E B802000000              	mov rax, 2
  6635 00003F23 4889442410              	mov qword[rsp + 8 *2], rax
  6636 00003F28 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  6637 00003F2D 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  6638 00003F32 48B8-                   	mov rax, sob_nil
  6638 00003F34 [0100000000000000] 
  6639 00003F3C 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  6640 00003F41 C8000000                	enter 0, 0
  6641                                  	; preparing a tail-call
  6642 00003F45 48B8-                   	mov rax, L_constants + 1993
  6642 00003F47 [C907000000000000] 
  6643 00003F4F 50                      	push rax
  6644 00003F50 6A01                    	push 1	; arg count
  6645 00003F52 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6646 00003F57 E8752B0100              	call malloc
  6647 00003F5C 50                      	push rax
  6648 00003F5D BF10000000              	mov rdi, 8 * 2	; new rib
  6649 00003F62 E86A2B0100              	call malloc
  6650 00003F67 50                      	push rax
  6651 00003F68 BF10000000              	mov rdi, 8 * 2	; extended env
  6652 00003F6D E85F2B0100              	call malloc
  6653 00003F72 488B7D10                	mov rdi, ENV
  6654 00003F76 BE00000000              	mov rsi, 0
  6655 00003F7B BA01000000              	mov rdx, 1
  6656                                  .L_lambda_simple_env_loop_002a:	; ext_env[i + 1] <-- env[i]
  6657 00003F80 4883FE01                	cmp rsi, 1
  6658 00003F84 7410                    	je .L_lambda_simple_env_end_002a
  6659 00003F86 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6660 00003F8A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6661 00003F8E 48FFC6                  	inc rsi
  6662 00003F91 48FFC2                  	inc rdx
  6663 00003F94 EBEA                    	jmp .L_lambda_simple_env_loop_002a
  6664                                  .L_lambda_simple_env_end_002a:
  6665 00003F96 5B                      	pop rbx
  6666 00003F97 BE00000000              	mov rsi, 0
  6667                                  .L_lambda_simple_params_loop_002a:	; copy params
  6668 00003F9C 4883FE02                	cmp rsi, 2
  6669 00003FA0 740E                    	je .L_lambda_simple_params_end_002a
  6670 00003FA2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6671 00003FA7 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6672 00003FAB 48FFC6                  	inc rsi
  6673 00003FAE EBEC                    	jmp .L_lambda_simple_params_loop_002a
  6674                                  .L_lambda_simple_params_end_002a:
  6675 00003FB0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6676 00003FB3 4889C3                  	mov rbx, rax
  6677 00003FB6 58                      	pop rax
  6678 00003FB7 C60004                  	mov byte [rax], T_closure
  6679 00003FBA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6680 00003FBE 48C74009[CB3F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002a
  6681 00003FC6 E903030000              	jmp .L_lambda_simple_end_002a
  6682                                  .L_lambda_simple_code_002a:	; lambda-simple body
  6683 00003FCB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6684 00003FD1 740B                    	je .L_lambda_simple_arity_check_ok_002a
  6685 00003FD3 FF742410                	push qword [rsp + 8 * 2]
  6686 00003FD7 6A01                    	push 1
  6687 00003FD9 E9AC2A0100              	jmp L_error_incorrect_arity_simple
  6688                                  .L_lambda_simple_arity_check_ok_002a:
  6689 00003FDE C8000000                	enter 0, 0
  6690 00003FE2 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  6691 00003FE6 488903                  	mov qword [rbx], rax
  6692                                  
  6693 00003FE9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6694 00003FEE E8DE2A0100              	call malloc
  6695 00003FF3 50                      	push rax
  6696 00003FF4 BF08000000              	mov rdi, 8 * 1	; new rib
  6697 00003FF9 E8D32A0100              	call malloc
  6698 00003FFE 50                      	push rax
  6699 00003FFF BF18000000              	mov rdi, 8 * 3	; extended env
  6700 00004004 E8C82A0100              	call malloc
  6701 00004009 488B7D10                	mov rdi, ENV
  6702 0000400D BE00000000              	mov rsi, 0
  6703 00004012 BA01000000              	mov rdx, 1
  6704                                  .L_lambda_simple_env_loop_002b:	; ext_env[i + 1] <-- env[i]
  6705 00004017 4883FE02                	cmp rsi, 2
  6706 0000401B 7410                    	je .L_lambda_simple_env_end_002b
  6707 0000401D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  6708 00004021 48890CD0                	mov qword [rax + 8 * rdx], rcx
  6709 00004025 48FFC6                  	inc rsi
  6710 00004028 48FFC2                  	inc rdx
  6711 0000402B EBEA                    	jmp .L_lambda_simple_env_loop_002b
  6712                                  .L_lambda_simple_env_end_002b:
  6713 0000402D 5B                      	pop rbx
  6714 0000402E BE00000000              	mov rsi, 0
  6715                                  .L_lambda_simple_params_loop_002b:	; copy params
  6716 00004033 4883FE01                	cmp rsi, 1
  6717 00004037 740E                    	je .L_lambda_simple_params_end_002b
  6718 00004039 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  6719 0000403E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  6720 00004042 48FFC6                  	inc rsi
  6721 00004045 EBEC                    	jmp .L_lambda_simple_params_loop_002b
  6722                                  .L_lambda_simple_params_end_002b:
  6723 00004047 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  6724 0000404A 4889C3                  	mov rbx, rax
  6725 0000404D 58                      	pop rax
  6726 0000404E C60004                  	mov byte [rax], T_closure
  6727 00004051 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  6728 00004055 48C74009[62400000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002b
  6729 0000405D E980010000              	jmp .L_lambda_simple_end_002b
  6730                                  .L_lambda_simple_code_002b:	; lambda-simple body
  6731 00004062 48837C241001            	cmp qword [rsp + 8 * 2], 1
  6732 00004068 740B                    	je .L_lambda_simple_arity_check_ok_002b
  6733 0000406A FF742410                	push qword [rsp + 8 * 2]
  6734 0000406E 6A01                    	push 1
  6735 00004070 E9152A0100              	jmp L_error_incorrect_arity_simple
  6736                                  .L_lambda_simple_arity_check_ok_002b:
  6737 00004075 C8000000                	enter 0, 0
  6738                                  	; preparing a non-tail-call
  6739                                  	; preparing a non-tail-call
  6740 00004079 488B4520                	mov rax, PARAM(0)	; param s
  6741 0000407D 50                      	push rax
  6742 0000407E 6A01                    	push 1	; arg count
  6743 00004080 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6744 00004088 803805                  	cmp byte [rax], T_undefined
  6745 0000408B 0F8413290100            	je L_error_fvar_undefined
  6746 00004091 803804                  	cmp byte [rax], T_closure
  6747 00004094 0F858E290100            	jne L_error_non_closure
  6748 0000409A FF7001                  	push SOB_CLOSURE_ENV(rax)
  6749 0000409D FF5009                  	call SOB_CLOSURE_CODE(rax)
  6750 000040A0 50                      	push rax
  6751 000040A1 6A01                    	push 1	; arg count
  6752 000040A3 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6753 000040AB 803805                  	cmp byte [rax], T_undefined
  6754 000040AE 0F84F0280100            	je L_error_fvar_undefined
  6755 000040B4 803804                  	cmp byte [rax], T_closure
  6756 000040B7 0F856B290100            	jne L_error_non_closure
  6757 000040BD FF7001                  	push SOB_CLOSURE_ENV(rax)
  6758 000040C0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6759 000040C3 483D[02000000]          	cmp rax, sob_boolean_false
  6760 000040C9 0F850F010000            	jne .L_or_end_0007
  6761                                  	; preparing a non-tail-call
  6762                                  	; preparing a non-tail-call
  6763 000040CF 488B4520                	mov rax, PARAM(0)	; param s
  6764 000040D3 50                      	push rax
  6765 000040D4 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  6766 000040DC 803805                  	cmp byte [rax], T_undefined
  6767 000040DF 0F84BF280100            	je L_error_fvar_undefined
  6768 000040E5 50                      	push rax
  6769 000040E6 6A02                    	push 2	; arg count
  6770 000040E8 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6771 000040F0 803805                  	cmp byte [rax], T_undefined
  6772 000040F3 0F84AB280100            	je L_error_fvar_undefined
  6773 000040F9 803804                  	cmp byte [rax], T_closure
  6774 000040FC 0F8526290100            	jne L_error_non_closure
  6775 00004102 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6776 00004105 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6777 00004108 50                      	push rax
  6778 00004109 488B4510                	mov rax, ENV
  6779 0000410D 488B4008                	mov rax, qword [rax + 8 * 1]
  6780 00004111 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  6781 00004114 50                      	push rax
  6782 00004115 6A02                    	push 2	; arg count
  6783 00004117 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  6784 0000411F 803805                  	cmp byte [rax], T_undefined
  6785 00004122 0F847C280100            	je L_error_fvar_undefined
  6786 00004128 803804                  	cmp byte [rax], T_closure
  6787 0000412B 0F85F7280100            	jne L_error_non_closure
  6788 00004131 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6789 00004134 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6790 00004137 483D[02000000]          	cmp rax, sob_boolean_false
  6791 0000413D 0F8491000000            	je .L_if_else_000b
  6792                                  	; preparing a tail-call
  6793                                  	; preparing a non-tail-call
  6794 00004143 488B4520                	mov rax, PARAM(0)	; param s
  6795 00004147 50                      	push rax
  6796 00004148 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  6797 00004150 803805                  	cmp byte [rax], T_undefined
  6798 00004153 0F844B280100            	je L_error_fvar_undefined
  6799 00004159 50                      	push rax
  6800 0000415A 6A02                    	push 2	; arg count
  6801 0000415C 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  6802 00004164 803805                  	cmp byte [rax], T_undefined
  6803 00004167 0F8437280100            	je L_error_fvar_undefined
  6804 0000416D 803804                  	cmp byte [rax], T_closure
  6805 00004170 0F85B2280100            	jne L_error_non_closure
  6806 00004176 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6807 00004179 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6808 0000417C 50                      	push rax
  6809 0000417D 6A01                    	push 1	; arg count
  6810 0000417F 488B4510                	mov rax, ENV
  6811 00004183 488B00                  	mov rax, qword [rax + 8 * 0]
  6812 00004186 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  6813 00004189 488B00                  	mov rax, qword [rax]
  6814 0000418C 803804                  	cmp byte [rax], T_closure
  6815 0000418F 0F8593280100            	jne L_error_non_closure
  6816 00004195 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6817 00004198 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  6818 0000419B FF7500                  	push qword[rbp]
  6819 0000419E 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  6820 000041A3 48895D10                	mov qword[rbp + 8*2],rbx
  6821 000041A7 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  6822 000041AF BF00000000              	mov rdi,0
  6823 000041B4 EB00                    	jmp .L_tc_recycle_frame_loop_002e
  6824                                  .L_tc_recycle_frame_loop_002e:
  6825 000041B6 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  6826 000041BA 740F                    	je .L_tc_recycle_frame_done_002e
  6827 000041BC 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  6828 000041C1 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  6829 000041C6 48FFC7                  	inc rdi
  6830 000041C9 EBEB                    	jmp .L_tc_recycle_frame_loop_002e
  6831                                  .L_tc_recycle_frame_done_002e:
  6832 000041CB 4889EC                  	mov rsp, rbp	; point to last argument
  6833 000041CE 5D                      	pop rbp
  6834 000041CF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6835 000041D2 EB0A                    	jmp .L_if_end_000b
  6836                                  .L_if_else_000b:
  6837 000041D4 48B8-                   	mov rax, L_constants + 2
  6837 000041D6 [0200000000000000] 
  6838                                  .L_if_end_000b:
  6839                                  .L_or_end_0007:
  6840 000041DE C9                      	leave
  6841 000041DF C21800                  	ret AND_KILL_FRAME(1)
  6842                                  .L_lambda_simple_end_002b:	; new closure is in rax
  6843 000041E2 50                      	push rax
  6844 000041E3 488B4520                	mov rax, PARAM(0)	; param loop
  6845 000041E7 8F00                    	pop qword [rax]
  6846 000041E9 48B8-                   	mov rax, sob_void
  6846 000041EB [0000000000000000] 
  6847                                  
  6848                                  	; preparing a non-tail-call
  6849 000041F3 488B4510                	mov rax, ENV
  6850 000041F7 488B00                  	mov rax, qword [rax + 8 * 0]
  6851 000041FA 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6852 000041FE 50                      	push rax
  6853 000041FF 6A01                    	push 1	; arg count
  6854 00004201 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  6855 00004209 803805                  	cmp byte [rax], T_undefined
  6856 0000420C 0F8492270100            	je L_error_fvar_undefined
  6857 00004212 803804                  	cmp byte [rax], T_closure
  6858 00004215 0F850D280100            	jne L_error_non_closure
  6859 0000421B FF7001                  	push SOB_CLOSURE_ENV(rax)
  6860 0000421E FF5009                  	call SOB_CLOSURE_CODE(rax)
  6861 00004221 483D[02000000]          	cmp rax, sob_boolean_false
  6862 00004227 0F859D000000            	jne .L_or_end_0008
  6863                                  	; preparing a non-tail-call
  6864 0000422D 488B4510                	mov rax, ENV
  6865 00004231 488B00                  	mov rax, qword [rax + 8 * 0]
  6866 00004234 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6867 00004238 50                      	push rax
  6868 00004239 6A01                    	push 1	; arg count
  6869 0000423B 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  6870 00004243 803805                  	cmp byte [rax], T_undefined
  6871 00004246 0F8458270100            	je L_error_fvar_undefined
  6872 0000424C 803804                  	cmp byte [rax], T_closure
  6873 0000424F 0F85D3270100            	jne L_error_non_closure
  6874 00004255 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6875 00004258 FF5009                  	call SOB_CLOSURE_CODE(rax)
  6876 0000425B 483D[02000000]          	cmp rax, sob_boolean_false
  6877 00004261 745D                    	je .L_if_else_000c
  6878                                  	; preparing a tail-call
  6879 00004263 488B4510                	mov rax, ENV
  6880 00004267 488B00                  	mov rax, qword [rax + 8 * 0]
  6881 0000426A 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  6882 0000426E 50                      	push rax
  6883 0000426F 6A01                    	push 1	; arg count
  6884 00004271 488B4520                	mov rax, PARAM(0)	; param loop
  6885 00004275 488B00                  	mov rax, qword [rax]
  6886 00004278 803804                  	cmp byte [rax], T_closure
  6887 0000427B 0F85A7270100            	jne L_error_non_closure
  6888 00004281 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6889 00004284 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  6890 00004287 FF7500                  	push qword[rbp]
  6891 0000428A 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  6892 0000428F 48895D10                	mov qword[rbp + 8*2],rbx
  6893 00004293 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  6894 0000429B BF00000000              	mov rdi,0
  6895 000042A0 EB00                    	jmp .L_tc_recycle_frame_loop_002f
  6896                                  .L_tc_recycle_frame_loop_002f:
  6897 000042A2 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  6898 000042A6 740F                    	je .L_tc_recycle_frame_done_002f
  6899 000042A8 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  6900 000042AD 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  6901 000042B2 48FFC7                  	inc rdi
  6902 000042B5 EBEB                    	jmp .L_tc_recycle_frame_loop_002f
  6903                                  .L_tc_recycle_frame_done_002f:
  6904 000042B7 4889EC                  	mov rsp, rbp	; point to last argument
  6905 000042BA 5D                      	pop rbp
  6906 000042BB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6907 000042BE EB0A                    	jmp .L_if_end_000c
  6908                                  .L_if_else_000c:
  6909 000042C0 48B8-                   	mov rax, L_constants + 2
  6909 000042C2 [0200000000000000] 
  6910                                  .L_if_end_000c:
  6911                                  .L_or_end_0008:
  6912 000042CA C9                      	leave
  6913 000042CB C21800                  	ret AND_KILL_FRAME(1)
  6914                                  .L_lambda_simple_end_002a:	; new closure is in rax
  6915 000042CE 803804                  	cmp byte [rax], T_closure
  6916 000042D1 0F8551270100            	jne L_error_non_closure
  6917 000042D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  6918 000042DA FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  6919 000042DD FF7500                  	push qword[rbp]
  6920 000042E0 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  6921 000042E5 48895D10                	mov qword[rbp + 8*2],rbx
  6922 000042E9 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  6923 000042F1 BF00000000              	mov rdi,0
  6924 000042F6 EB00                    	jmp .L_tc_recycle_frame_loop_0030
  6925                                  .L_tc_recycle_frame_loop_0030:
  6926 000042F8 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  6927 000042FC 740F                    	je .L_tc_recycle_frame_done_0030
  6928 000042FE 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  6929 00004303 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  6930 00004308 48FFC7                  	inc rdi
  6931 0000430B EBEB                    	jmp .L_tc_recycle_frame_loop_0030
  6932                                  .L_tc_recycle_frame_done_0030:
  6933 0000430D 4889EC                  	mov rsp, rbp	; point to last argument
  6934 00004310 5D                      	pop rbp
  6935 00004311 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  6936 00004314 C9                      	leave
  6937 00004315 C22000                  	ret AND_KILL_FRAME(2)
  6938 00004318 E97D040000              	jmp .L_lambda_opt_end_0005	; new closure is in rax
  6939                                  .L_lambda_opt_arity_check_more_0005:
  6940 0000431D 488B442410              	mov rax, qword[rsp + 2 * 8]
  6941 00004322 4889C7                  	mov rdi, rax
  6942 00004325 49B9-                   	mov r9, sob_nil
  6942 00004327 [0100000000000000] 
  6943 0000432F 4C8B442410              	mov r8, qword[rsp+2*8]
  6944                                  .L_lambda_opt_stack_shrink_loop_0005:
  6945 00004334 4983F801                	cmp r8, 1
  6946 00004338 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0005
  6947 0000433A 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  6948 0000433F BF11000000              	mov rdi, 1+8+8	;for pair
  6949 00004344 E888270100              	call malloc	 ;to create the pair in the stack
  6950 00004349 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  6951 0000434C 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  6952 00004350 4C894809                 	mov qword[rax+1+8],r9
  6953 00004354 4989C1                  	mov r9 , rax	 ; for the recursion 
  6954 00004357 49FFC8                  	dec r8
  6955 0000435A EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0005
  6956                                  .L_lambda_opt_stack_shrink_loop_exit_0005:
  6957 0000435C 488B442410              	mov rax, qword[rsp + 2 * 8]
  6958 00004361 BF02000000              	mov rdi, 2
  6959 00004366 4829F8                  	sub rax, rdi
  6960 00004369 4889C7                  	mov rdi, rax
  6961 0000436C 486BC008                	imul rax,8
  6962 00004370 4801C4                  	add rsp, rax
  6963 00004373 4889E0                  	mov rax, rsp
  6964 00004376 4989F8                  	mov r8, rdi
  6965 00004379 4D6BC008                	imul r8, 8
  6966 0000437D 4C29C0                  	sub rax, r8
  6967 00004380 4989C2                  	mov r10, rax	; holds the original ret in the stack
  6968 00004383 4983C218                	add r10, 8*3
  6969 00004387 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  6970 0000438B 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  6971 0000438E 4D6BC008                	imul r8,8
  6972 00004392 4C01C0                  	add rax, r8
  6973 00004395 4C8908                  	mov qword[rax] ,r9
  6974 00004398 4D89D0                   	mov r8, r10
  6975 0000439B 4983C000                	add r8, 8 * 0
  6976 0000439F 4D8B08                  	mov r9,qword[r8]
  6977 000043A2 4D890CF8                	mov qword [r8 + rdi * 8], r9
  6978 000043A6 4983EA18                	sub r10, 8*3
  6979 000043AA 48C744241002000000      	mov qword [rsp+2*8], 2
  6980 000043B3 498B4208                	mov rax, qword[r10 + 1 * 8]
  6981 000043B7 4889442408              	mov qword[rsp + 1*8] ,rax
  6982 000043BC 498B02                  	mov rax, qword[r10]
  6983 000043BF 48890424                	mov qword[rsp], rax
  6984 000043C3 C8000000                	enter 0, 0
  6985                                  	; preparing a tail-call
  6986 000043C7 48B8-                   	mov rax, L_constants + 1993
  6986 000043C9 [C907000000000000] 
  6987 000043D1 50                      	push rax
  6988 000043D2 6A01                    	push 1	; arg count
  6989 000043D4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  6990 000043D9 E8F3260100              	call malloc
  6991 000043DE 50                      	push rax
  6992 000043DF BF10000000              	mov rdi, 8 * 2	; new rib
  6993 000043E4 E8E8260100              	call malloc
  6994 000043E9 50                      	push rax
  6995 000043EA BF10000000              	mov rdi, 8 * 2	; extended env
  6996 000043EF E8DD260100              	call malloc
  6997 000043F4 488B7D10                	mov rdi, ENV
  6998 000043F8 BE00000000              	mov rsi, 0
  6999 000043FD BA01000000              	mov rdx, 1
  7000                                  .L_lambda_simple_env_loop_0028:	; ext_env[i + 1] <-- env[i]
  7001 00004402 4883FE01                	cmp rsi, 1
  7002 00004406 7410                    	je .L_lambda_simple_env_end_0028
  7003 00004408 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7004 0000440C 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7005 00004410 48FFC6                  	inc rsi
  7006 00004413 48FFC2                  	inc rdx
  7007 00004416 EBEA                    	jmp .L_lambda_simple_env_loop_0028
  7008                                  .L_lambda_simple_env_end_0028:
  7009 00004418 5B                      	pop rbx
  7010 00004419 BE00000000              	mov rsi, 0
  7011                                  .L_lambda_simple_params_loop_0028:	; copy params
  7012 0000441E 4883FE02                	cmp rsi, 2
  7013 00004422 740E                    	je .L_lambda_simple_params_end_0028
  7014 00004424 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7015 00004429 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7016 0000442D 48FFC6                  	inc rsi
  7017 00004430 EBEC                    	jmp .L_lambda_simple_params_loop_0028
  7018                                  .L_lambda_simple_params_end_0028:
  7019 00004432 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7020 00004435 4889C3                  	mov rbx, rax
  7021 00004438 58                      	pop rax
  7022 00004439 C60004                  	mov byte [rax], T_closure
  7023 0000443C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7024 00004440 48C74009[4D440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0028
  7025 00004448 E903030000              	jmp .L_lambda_simple_end_0028
  7026                                  .L_lambda_simple_code_0028:	; lambda-simple body
  7027 0000444D 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7028 00004453 740B                    	je .L_lambda_simple_arity_check_ok_0028
  7029 00004455 FF742410                	push qword [rsp + 8 * 2]
  7030 00004459 6A01                    	push 1
  7031 0000445B E92A260100              	jmp L_error_incorrect_arity_simple
  7032                                  .L_lambda_simple_arity_check_ok_0028:
  7033 00004460 C8000000                	enter 0, 0
  7034 00004464 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  7035 00004468 488903                  	mov qword [rbx], rax
  7036                                  
  7037 0000446B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7038 00004470 E85C260100              	call malloc
  7039 00004475 50                      	push rax
  7040 00004476 BF08000000              	mov rdi, 8 * 1	; new rib
  7041 0000447B E851260100              	call malloc
  7042 00004480 50                      	push rax
  7043 00004481 BF18000000              	mov rdi, 8 * 3	; extended env
  7044 00004486 E846260100              	call malloc
  7045 0000448B 488B7D10                	mov rdi, ENV
  7046 0000448F BE00000000              	mov rsi, 0
  7047 00004494 BA01000000              	mov rdx, 1
  7048                                  .L_lambda_simple_env_loop_0029:	; ext_env[i + 1] <-- env[i]
  7049 00004499 4883FE02                	cmp rsi, 2
  7050 0000449D 7410                    	je .L_lambda_simple_env_end_0029
  7051 0000449F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7052 000044A3 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7053 000044A7 48FFC6                  	inc rsi
  7054 000044AA 48FFC2                  	inc rdx
  7055 000044AD EBEA                    	jmp .L_lambda_simple_env_loop_0029
  7056                                  .L_lambda_simple_env_end_0029:
  7057 000044AF 5B                      	pop rbx
  7058 000044B0 BE00000000              	mov rsi, 0
  7059                                  .L_lambda_simple_params_loop_0029:	; copy params
  7060 000044B5 4883FE01                	cmp rsi, 1
  7061 000044B9 740E                    	je .L_lambda_simple_params_end_0029
  7062 000044BB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7063 000044C0 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7064 000044C4 48FFC6                  	inc rsi
  7065 000044C7 EBEC                    	jmp .L_lambda_simple_params_loop_0029
  7066                                  .L_lambda_simple_params_end_0029:
  7067 000044C9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7068 000044CC 4889C3                  	mov rbx, rax
  7069 000044CF 58                      	pop rax
  7070 000044D0 C60004                  	mov byte [rax], T_closure
  7071 000044D3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7072 000044D7 48C74009[E4440000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0029
  7073 000044DF E980010000              	jmp .L_lambda_simple_end_0029
  7074                                  .L_lambda_simple_code_0029:	; lambda-simple body
  7075 000044E4 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7076 000044EA 740B                    	je .L_lambda_simple_arity_check_ok_0029
  7077 000044EC FF742410                	push qword [rsp + 8 * 2]
  7078 000044F0 6A01                    	push 1
  7079 000044F2 E993250100              	jmp L_error_incorrect_arity_simple
  7080                                  .L_lambda_simple_arity_check_ok_0029:
  7081 000044F7 C8000000                	enter 0, 0
  7082                                  	; preparing a non-tail-call
  7083                                  	; preparing a non-tail-call
  7084 000044FB 488B4520                	mov rax, PARAM(0)	; param s
  7085 000044FF 50                      	push rax
  7086 00004500 6A01                    	push 1	; arg count
  7087 00004502 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7088 0000450A 803805                  	cmp byte [rax], T_undefined
  7089 0000450D 0F8491240100            	je L_error_fvar_undefined
  7090 00004513 803804                  	cmp byte [rax], T_closure
  7091 00004516 0F850C250100            	jne L_error_non_closure
  7092 0000451C FF7001                  	push SOB_CLOSURE_ENV(rax)
  7093 0000451F FF5009                  	call SOB_CLOSURE_CODE(rax)
  7094 00004522 50                      	push rax
  7095 00004523 6A01                    	push 1	; arg count
  7096 00004525 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7097 0000452D 803805                  	cmp byte [rax], T_undefined
  7098 00004530 0F846E240100            	je L_error_fvar_undefined
  7099 00004536 803804                  	cmp byte [rax], T_closure
  7100 00004539 0F85E9240100            	jne L_error_non_closure
  7101 0000453F FF7001                  	push SOB_CLOSURE_ENV(rax)
  7102 00004542 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7103 00004545 483D[02000000]          	cmp rax, sob_boolean_false
  7104 0000454B 0F850F010000            	jne .L_or_end_0005
  7105                                  	; preparing a non-tail-call
  7106                                  	; preparing a non-tail-call
  7107 00004551 488B4520                	mov rax, PARAM(0)	; param s
  7108 00004555 50                      	push rax
  7109 00004556 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7110 0000455E 803805                  	cmp byte [rax], T_undefined
  7111 00004561 0F843D240100            	je L_error_fvar_undefined
  7112 00004567 50                      	push rax
  7113 00004568 6A02                    	push 2	; arg count
  7114 0000456A 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  7115 00004572 803805                  	cmp byte [rax], T_undefined
  7116 00004575 0F8429240100            	je L_error_fvar_undefined
  7117 0000457B 803804                  	cmp byte [rax], T_closure
  7118 0000457E 0F85A4240100            	jne L_error_non_closure
  7119 00004584 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7120 00004587 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7121 0000458A 50                      	push rax
  7122 0000458B 488B4510                	mov rax, ENV
  7123 0000458F 488B4008                	mov rax, qword [rax + 8 * 1]
  7124 00004593 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var f
  7125 00004596 50                      	push rax
  7126 00004597 6A02                    	push 2	; arg count
  7127 00004599 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  7128 000045A1 803805                  	cmp byte [rax], T_undefined
  7129 000045A4 0F84FA230100            	je L_error_fvar_undefined
  7130 000045AA 803804                  	cmp byte [rax], T_closure
  7131 000045AD 0F8575240100            	jne L_error_non_closure
  7132 000045B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7133 000045B6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7134 000045B9 483D[02000000]          	cmp rax, sob_boolean_false
  7135 000045BF 0F8491000000            	je .L_if_else_0009
  7136                                  	; preparing a tail-call
  7137                                  	; preparing a non-tail-call
  7138 000045C5 488B4520                	mov rax, PARAM(0)	; param s
  7139 000045C9 50                      	push rax
  7140 000045CA 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7141 000045D2 803805                  	cmp byte [rax], T_undefined
  7142 000045D5 0F84C9230100            	je L_error_fvar_undefined
  7143 000045DB 50                      	push rax
  7144 000045DC 6A02                    	push 2	; arg count
  7145 000045DE 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  7146 000045E6 803805                  	cmp byte [rax], T_undefined
  7147 000045E9 0F84B5230100            	je L_error_fvar_undefined
  7148 000045EF 803804                  	cmp byte [rax], T_closure
  7149 000045F2 0F8530240100            	jne L_error_non_closure
  7150 000045F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7151 000045FB FF5009                  	call SOB_CLOSURE_CODE(rax)
  7152 000045FE 50                      	push rax
  7153 000045FF 6A01                    	push 1	; arg count
  7154 00004601 488B4510                	mov rax, ENV
  7155 00004605 488B00                  	mov rax, qword [rax + 8 * 0]
  7156 00004608 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var loop
  7157 0000460B 488B00                  	mov rax, qword [rax]
  7158 0000460E 803804                  	cmp byte [rax], T_closure
  7159 00004611 0F8511240100            	jne L_error_non_closure
  7160 00004617 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7161 0000461A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  7162 0000461D FF7500                  	push qword[rbp]
  7163 00004620 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  7164 00004625 48895D10                	mov qword[rbp + 8*2],rbx
  7165 00004629 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  7166 00004631 BF00000000              	mov rdi,0
  7167 00004636 EB00                    	jmp .L_tc_recycle_frame_loop_002b
  7168                                  .L_tc_recycle_frame_loop_002b:
  7169 00004638 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  7170 0000463C 740F                    	je .L_tc_recycle_frame_done_002b
  7171 0000463E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  7172 00004643 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  7173 00004648 48FFC7                  	inc rdi
  7174 0000464B EBEB                    	jmp .L_tc_recycle_frame_loop_002b
  7175                                  .L_tc_recycle_frame_done_002b:
  7176 0000464D 4889EC                  	mov rsp, rbp	; point to last argument
  7177 00004650 5D                      	pop rbp
  7178 00004651 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7179 00004654 EB0A                    	jmp .L_if_end_0009
  7180                                  .L_if_else_0009:
  7181 00004656 48B8-                   	mov rax, L_constants + 2
  7181 00004658 [0200000000000000] 
  7182                                  .L_if_end_0009:
  7183                                  .L_or_end_0005:
  7184 00004660 C9                      	leave
  7185 00004661 C21800                  	ret AND_KILL_FRAME(1)
  7186                                  .L_lambda_simple_end_0029:	; new closure is in rax
  7187 00004664 50                      	push rax
  7188 00004665 488B4520                	mov rax, PARAM(0)	; param loop
  7189 00004669 8F00                    	pop qword [rax]
  7190 0000466B 48B8-                   	mov rax, sob_void
  7190 0000466D [0000000000000000] 
  7191                                  
  7192                                  	; preparing a non-tail-call
  7193 00004675 488B4510                	mov rax, ENV
  7194 00004679 488B00                  	mov rax, qword [rax + 8 * 0]
  7195 0000467C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  7196 00004680 50                      	push rax
  7197 00004681 6A01                    	push 1	; arg count
  7198 00004683 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7199 0000468B 803805                  	cmp byte [rax], T_undefined
  7200 0000468E 0F8410230100            	je L_error_fvar_undefined
  7201 00004694 803804                  	cmp byte [rax], T_closure
  7202 00004697 0F858B230100            	jne L_error_non_closure
  7203 0000469D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7204 000046A0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7205 000046A3 483D[02000000]          	cmp rax, sob_boolean_false
  7206 000046A9 0F859D000000            	jne .L_or_end_0006
  7207                                  	; preparing a non-tail-call
  7208 000046AF 488B4510                	mov rax, ENV
  7209 000046B3 488B00                  	mov rax, qword [rax + 8 * 0]
  7210 000046B6 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  7211 000046BA 50                      	push rax
  7212 000046BB 6A01                    	push 1	; arg count
  7213 000046BD 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
  7214 000046C5 803805                  	cmp byte [rax], T_undefined
  7215 000046C8 0F84D6220100            	je L_error_fvar_undefined
  7216 000046CE 803804                  	cmp byte [rax], T_closure
  7217 000046D1 0F8551230100            	jne L_error_non_closure
  7218 000046D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7219 000046DA FF5009                  	call SOB_CLOSURE_CODE(rax)
  7220 000046DD 483D[02000000]          	cmp rax, sob_boolean_false
  7221 000046E3 745D                    	je .L_if_else_000a
  7222                                  	; preparing a tail-call
  7223 000046E5 488B4510                	mov rax, ENV
  7224 000046E9 488B00                  	mov rax, qword [rax + 8 * 0]
  7225 000046EC 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var s
  7226 000046F0 50                      	push rax
  7227 000046F1 6A01                    	push 1	; arg count
  7228 000046F3 488B4520                	mov rax, PARAM(0)	; param loop
  7229 000046F7 488B00                  	mov rax, qword [rax]
  7230 000046FA 803804                  	cmp byte [rax], T_closure
  7231 000046FD 0F8525230100            	jne L_error_non_closure
  7232 00004703 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7233 00004706 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  7234 00004709 FF7500                  	push qword[rbp]
  7235 0000470C 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  7236 00004711 48895D10                	mov qword[rbp + 8*2],rbx
  7237 00004715 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  7238 0000471D BF00000000              	mov rdi,0
  7239 00004722 EB00                    	jmp .L_tc_recycle_frame_loop_002c
  7240                                  .L_tc_recycle_frame_loop_002c:
  7241 00004724 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  7242 00004728 740F                    	je .L_tc_recycle_frame_done_002c
  7243 0000472A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  7244 0000472F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  7245 00004734 48FFC7                  	inc rdi
  7246 00004737 EBEB                    	jmp .L_tc_recycle_frame_loop_002c
  7247                                  .L_tc_recycle_frame_done_002c:
  7248 00004739 4889EC                  	mov rsp, rbp	; point to last argument
  7249 0000473C 5D                      	pop rbp
  7250 0000473D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7251 00004740 EB0A                    	jmp .L_if_end_000a
  7252                                  .L_if_else_000a:
  7253 00004742 48B8-                   	mov rax, L_constants + 2
  7253 00004744 [0200000000000000] 
  7254                                  .L_if_end_000a:
  7255                                  .L_or_end_0006:
  7256 0000474C C9                      	leave
  7257 0000474D C21800                  	ret AND_KILL_FRAME(1)
  7258                                  .L_lambda_simple_end_0028:	; new closure is in rax
  7259 00004750 803804                  	cmp byte [rax], T_closure
  7260 00004753 0F85CF220100            	jne L_error_non_closure
  7261 00004759 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7262 0000475C FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  7263 0000475F FF7500                  	push qword[rbp]
  7264 00004762 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  7265 00004767 48895D10                	mov qword[rbp + 8*2],rbx
  7266 0000476B 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
  7267 00004773 BF00000000              	mov rdi,0
  7268 00004778 EB00                    	jmp .L_tc_recycle_frame_loop_002d
  7269                                  .L_tc_recycle_frame_loop_002d:
  7270 0000477A 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  7271 0000477E 740F                    	je .L_tc_recycle_frame_done_002d
  7272 00004780 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  7273 00004785 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  7274 0000478A 48FFC7                  	inc rdi
  7275 0000478D EBEB                    	jmp .L_tc_recycle_frame_loop_002d
  7276                                  .L_tc_recycle_frame_done_002d:
  7277 0000478F 4889EC                  	mov rsp, rbp	; point to last argument
  7278 00004792 5D                      	pop rbp
  7279 00004793 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7280 00004796 C9                      	leave
  7281 00004797 C22000                  	ret AND_KILL_FRAME(2)
  7282                                  .L_lambda_opt_end_0005:	; new closure is in rax
  7283 0000479A 48890425[D40F0000]      	mov qword [free_var_31], rax
  7284 000047A2 48B8-                   	mov rax, sob_void
  7284 000047A4 [0000000000000000] 
  7285                                  
  7286 000047AC 4889C7                  	mov rdi, rax
  7287 000047AF E872250100              	call print_sexpr_if_not_void
  7288                                  	; preparing a non-tail-call
  7289 000047B4 48B8-                   	mov rax, L_constants + 1993
  7289 000047B6 [C907000000000000] 
  7290 000047BE 50                      	push rax
  7291 000047BF 48B8-                   	mov rax, L_constants + 1993
  7291 000047C1 [C907000000000000] 
  7292 000047C9 50                      	push rax
  7293 000047CA 6A02                    	push 2	; arg count
  7294 000047CC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7295 000047D1 E8FB220100              	call malloc
  7296 000047D6 50                      	push rax
  7297 000047D7 BF00000000              	mov rdi, 8 * 0	; new rib
  7298 000047DC E8F0220100              	call malloc
  7299 000047E1 50                      	push rax
  7300 000047E2 BF08000000              	mov rdi, 8 * 1	; extended env
  7301 000047E7 E8E5220100              	call malloc
  7302 000047EC 488B7D10                	mov rdi, ENV
  7303 000047F0 BE00000000              	mov rsi, 0
  7304 000047F5 BA01000000              	mov rdx, 1
  7305                                  .L_lambda_simple_env_loop_002c:	; ext_env[i + 1] <-- env[i]
  7306 000047FA 4883FE00                	cmp rsi, 0
  7307 000047FE 7410                    	je .L_lambda_simple_env_end_002c
  7308 00004800 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7309 00004804 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7310 00004808 48FFC6                  	inc rsi
  7311 0000480B 48FFC2                  	inc rdx
  7312 0000480E EBEA                    	jmp .L_lambda_simple_env_loop_002c
  7313                                  .L_lambda_simple_env_end_002c:
  7314 00004810 5B                      	pop rbx
  7315 00004811 BE00000000              	mov rsi, 0
  7316                                  .L_lambda_simple_params_loop_002c:	; copy params
  7317 00004816 4883FE00                	cmp rsi, 0
  7318 0000481A 740E                    	je .L_lambda_simple_params_end_002c
  7319 0000481C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7320 00004821 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7321 00004825 48FFC6                  	inc rsi
  7322 00004828 EBEC                    	jmp .L_lambda_simple_params_loop_002c
  7323                                  .L_lambda_simple_params_end_002c:
  7324 0000482A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7325 0000482D 4889C3                  	mov rbx, rax
  7326 00004830 58                      	pop rax
  7327 00004831 C60004                  	mov byte [rax], T_closure
  7328 00004834 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7329 00004838 48C74009[45480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002c
  7330 00004840 E9C4060000              	jmp .L_lambda_simple_end_002c
  7331                                  .L_lambda_simple_code_002c:	; lambda-simple body
  7332 00004845 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7333 0000484B 740B                    	je .L_lambda_simple_arity_check_ok_002c
  7334 0000484D FF742410                	push qword [rsp + 8 * 2]
  7335 00004851 6A02                    	push 2
  7336 00004853 E932220100              	jmp L_error_incorrect_arity_simple
  7337                                  .L_lambda_simple_arity_check_ok_002c:
  7338 00004858 C8000000                	enter 0, 0
  7339 0000485C 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  7340 00004860 488903                  	mov qword [rbx], rax
  7341                                  
  7342 00004863 488B5D28                	mov rbx, qword [rbp + 8 * (4 + 1)]
  7343 00004867 488903                  	mov qword [rbx], rax
  7344                                  
  7345 0000486A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7346 0000486F E85D220100              	call malloc
  7347 00004874 50                      	push rax
  7348 00004875 BF10000000              	mov rdi, 8 * 2	; new rib
  7349 0000487A E852220100              	call malloc
  7350 0000487F 50                      	push rax
  7351 00004880 BF10000000              	mov rdi, 8 * 2	; extended env
  7352 00004885 E847220100              	call malloc
  7353 0000488A 488B7D10                	mov rdi, ENV
  7354 0000488E BE00000000              	mov rsi, 0
  7355 00004893 BA01000000              	mov rdx, 1
  7356                                  .L_lambda_simple_env_loop_002d:	; ext_env[i + 1] <-- env[i]
  7357 00004898 4883FE01                	cmp rsi, 1
  7358 0000489C 7410                    	je .L_lambda_simple_env_end_002d
  7359 0000489E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7360 000048A2 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7361 000048A6 48FFC6                  	inc rsi
  7362 000048A9 48FFC2                  	inc rdx
  7363 000048AC EBEA                    	jmp .L_lambda_simple_env_loop_002d
  7364                                  .L_lambda_simple_env_end_002d:
  7365 000048AE 5B                      	pop rbx
  7366 000048AF BE00000000              	mov rsi, 0
  7367                                  .L_lambda_simple_params_loop_002d:	; copy params
  7368 000048B4 4883FE02                	cmp rsi, 2
  7369 000048B8 740E                    	je .L_lambda_simple_params_end_002d
  7370 000048BA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7371 000048BF 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7372 000048C3 48FFC6                  	inc rsi
  7373 000048C6 EBEC                    	jmp .L_lambda_simple_params_loop_002d
  7374                                  .L_lambda_simple_params_end_002d:
  7375 000048C8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7376 000048CB 4889C3                  	mov rbx, rax
  7377 000048CE 58                      	pop rax
  7378 000048CF C60004                  	mov byte [rax], T_closure
  7379 000048D2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7380 000048D6 48C74009[E3480000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002d
  7381 000048DE E93C010000              	jmp .L_lambda_simple_end_002d
  7382                                  .L_lambda_simple_code_002d:	; lambda-simple body
  7383 000048E3 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7384 000048E9 740B                    	je .L_lambda_simple_arity_check_ok_002d
  7385 000048EB FF742410                	push qword [rsp + 8 * 2]
  7386 000048EF 6A02                    	push 2
  7387 000048F1 E994210100              	jmp L_error_incorrect_arity_simple
  7388                                  .L_lambda_simple_arity_check_ok_002d:
  7389 000048F6 C8000000                	enter 0, 0
  7390                                  	; preparing a non-tail-call
  7391 000048FA 488B4528                	mov rax, PARAM(1)	; param s
  7392 000048FE 50                      	push rax
  7393 000048FF 6A01                    	push 1	; arg count
  7394 00004901 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7395 00004909 803805                  	cmp byte [rax], T_undefined
  7396 0000490C 0F8492200100            	je L_error_fvar_undefined
  7397 00004912 803804                  	cmp byte [rax], T_closure
  7398 00004915 0F850D210100            	jne L_error_non_closure
  7399 0000491B FF7001                  	push SOB_CLOSURE_ENV(rax)
  7400 0000491E FF5009                  	call SOB_CLOSURE_CODE(rax)
  7401 00004921 483D[02000000]          	cmp rax, sob_boolean_false
  7402 00004927 740F                    	je .L_if_else_000d
  7403 00004929 48B8-                   	mov rax, L_constants + 1
  7403 0000492B [0100000000000000] 
  7404 00004933 E9E3000000              	jmp .L_if_end_000d
  7405                                  .L_if_else_000d:
  7406                                  	; preparing a tail-call
  7407                                  	; preparing a non-tail-call
  7408                                  	; preparing a non-tail-call
  7409 00004938 488B4528                	mov rax, PARAM(1)	; param s
  7410 0000493C 50                      	push rax
  7411 0000493D 6A01                    	push 1	; arg count
  7412 0000493F 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7413 00004947 803805                  	cmp byte [rax], T_undefined
  7414 0000494A 0F8454200100            	je L_error_fvar_undefined
  7415 00004950 803804                  	cmp byte [rax], T_closure
  7416 00004953 0F85CF200100            	jne L_error_non_closure
  7417 00004959 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7418 0000495C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7419 0000495F 50                      	push rax
  7420 00004960 488B4520                	mov rax, PARAM(0)	; param f
  7421 00004964 50                      	push rax
  7422 00004965 6A02                    	push 2	; arg count
  7423 00004967 488B4510                	mov rax, ENV
  7424 0000496B 488B00                  	mov rax, qword [rax + 8 * 0]
  7425 0000496E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7426 00004971 488B00                  	mov rax, qword [rax]
  7427 00004974 803804                  	cmp byte [rax], T_closure
  7428 00004977 0F85AB200100            	jne L_error_non_closure
  7429 0000497D FF7001                  	push SOB_CLOSURE_ENV(rax)
  7430 00004980 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7431 00004983 50                      	push rax
  7432                                  	; preparing a non-tail-call
  7433                                  	; preparing a non-tail-call
  7434 00004984 488B4528                	mov rax, PARAM(1)	; param s
  7435 00004988 50                      	push rax
  7436 00004989 6A01                    	push 1	; arg count
  7437 0000498B 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7438 00004993 803805                  	cmp byte [rax], T_undefined
  7439 00004996 0F8408200100            	je L_error_fvar_undefined
  7440 0000499C 803804                  	cmp byte [rax], T_closure
  7441 0000499F 0F8583200100            	jne L_error_non_closure
  7442 000049A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7443 000049A8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7444 000049AB 50                      	push rax
  7445 000049AC 6A01                    	push 1	; arg count
  7446 000049AE 488B4520                	mov rax, PARAM(0)	; param f
  7447 000049B2 803804                  	cmp byte [rax], T_closure
  7448 000049B5 0F856D200100            	jne L_error_non_closure
  7449 000049BB FF7001                  	push SOB_CLOSURE_ENV(rax)
  7450 000049BE FF5009                  	call SOB_CLOSURE_CODE(rax)
  7451 000049C1 50                      	push rax
  7452 000049C2 6A02                    	push 2	; arg count
  7453 000049C4 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7454 000049CC 803805                  	cmp byte [rax], T_undefined
  7455 000049CF 0F84CF1F0100            	je L_error_fvar_undefined
  7456 000049D5 803804                  	cmp byte [rax], T_closure
  7457 000049D8 0F854A200100            	jne L_error_non_closure
  7458 000049DE FF7001                  	push SOB_CLOSURE_ENV(rax)
  7459 000049E1 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  7460 000049E4 FF7500                  	push qword[rbp]
  7461 000049E7 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  7462 000049EC 48895D10                	mov qword[rbp + 8*2],rbx
  7463 000049F0 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  7464 000049F8 BF00000000              	mov rdi,0
  7465 000049FD EB00                    	jmp .L_tc_recycle_frame_loop_0031
  7466                                  .L_tc_recycle_frame_loop_0031:
  7467 000049FF 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  7468 00004A03 740F                    	je .L_tc_recycle_frame_done_0031
  7469 00004A05 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  7470 00004A0A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  7471 00004A0F 48FFC7                  	inc rdi
  7472 00004A12 EBEB                    	jmp .L_tc_recycle_frame_loop_0031
  7473                                  .L_tc_recycle_frame_done_0031:
  7474 00004A14 4889EC                  	mov rsp, rbp	; point to last argument
  7475 00004A17 5D                      	pop rbp
  7476 00004A18 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7477                                  .L_if_end_000d:
  7478 00004A1B C9                      	leave
  7479 00004A1C C22000                  	ret AND_KILL_FRAME(2)
  7480                                  .L_lambda_simple_end_002d:	; new closure is in rax
  7481 00004A1F 50                      	push rax
  7482 00004A20 488B4520                	mov rax, PARAM(0)	; param map1
  7483 00004A24 8F00                    	pop qword [rax]
  7484 00004A26 48B8-                   	mov rax, sob_void
  7484 00004A28 [0000000000000000] 
  7485                                  
  7486 00004A30 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7487 00004A35 E897200100              	call malloc
  7488 00004A3A 50                      	push rax
  7489 00004A3B BF10000000              	mov rdi, 8 * 2	; new rib
  7490 00004A40 E88C200100              	call malloc
  7491 00004A45 50                      	push rax
  7492 00004A46 BF10000000              	mov rdi, 8 * 2	; extended env
  7493 00004A4B E881200100              	call malloc
  7494 00004A50 488B7D10                	mov rdi, ENV
  7495 00004A54 BE00000000              	mov rsi, 0
  7496 00004A59 BA01000000              	mov rdx, 1
  7497                                  .L_lambda_simple_env_loop_002e:	; ext_env[i + 1] <-- env[i]
  7498 00004A5E 4883FE01                	cmp rsi, 1
  7499 00004A62 7410                    	je .L_lambda_simple_env_end_002e
  7500 00004A64 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7501 00004A68 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7502 00004A6C 48FFC6                  	inc rsi
  7503 00004A6F 48FFC2                  	inc rdx
  7504 00004A72 EBEA                    	jmp .L_lambda_simple_env_loop_002e
  7505                                  .L_lambda_simple_env_end_002e:
  7506 00004A74 5B                      	pop rbx
  7507 00004A75 BE00000000              	mov rsi, 0
  7508                                  .L_lambda_simple_params_loop_002e:	; copy params
  7509 00004A7A 4883FE02                	cmp rsi, 2
  7510 00004A7E 740E                    	je .L_lambda_simple_params_end_002e
  7511 00004A80 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7512 00004A85 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7513 00004A89 48FFC6                  	inc rsi
  7514 00004A8C EBEC                    	jmp .L_lambda_simple_params_loop_002e
  7515                                  .L_lambda_simple_params_end_002e:
  7516 00004A8E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7517 00004A91 4889C3                  	mov rbx, rax
  7518 00004A94 58                      	pop rax
  7519 00004A95 C60004                  	mov byte [rax], T_closure
  7520 00004A98 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7521 00004A9C 48C74009[A94A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002e
  7522 00004AA4 E98E010000              	jmp .L_lambda_simple_end_002e
  7523                                  .L_lambda_simple_code_002e:	; lambda-simple body
  7524 00004AA9 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7525 00004AAF 740B                    	je .L_lambda_simple_arity_check_ok_002e
  7526 00004AB1 FF742410                	push qword [rsp + 8 * 2]
  7527 00004AB5 6A02                    	push 2
  7528 00004AB7 E9CE1F0100              	jmp L_error_incorrect_arity_simple
  7529                                  .L_lambda_simple_arity_check_ok_002e:
  7530 00004ABC C8000000                	enter 0, 0
  7531                                  	; preparing a non-tail-call
  7532                                  	; preparing a non-tail-call
  7533 00004AC0 488B4528                	mov rax, PARAM(1)	; param s
  7534 00004AC4 50                      	push rax
  7535 00004AC5 6A01                    	push 1	; arg count
  7536 00004AC7 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7537 00004ACF 803805                  	cmp byte [rax], T_undefined
  7538 00004AD2 0F84CC1E0100            	je L_error_fvar_undefined
  7539 00004AD8 803804                  	cmp byte [rax], T_closure
  7540 00004ADB 0F85471F0100            	jne L_error_non_closure
  7541 00004AE1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7542 00004AE4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7543 00004AE7 50                      	push rax
  7544 00004AE8 6A01                    	push 1	; arg count
  7545 00004AEA 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7546 00004AF2 803805                  	cmp byte [rax], T_undefined
  7547 00004AF5 0F84A91E0100            	je L_error_fvar_undefined
  7548 00004AFB 803804                  	cmp byte [rax], T_closure
  7549 00004AFE 0F85241F0100            	jne L_error_non_closure
  7550 00004B04 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7551 00004B07 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7552 00004B0A 483D[02000000]          	cmp rax, sob_boolean_false
  7553 00004B10 740F                    	je .L_if_else_000e
  7554 00004B12 48B8-                   	mov rax, L_constants + 1
  7554 00004B14 [0100000000000000] 
  7555 00004B1C E912010000              	jmp .L_if_end_000e
  7556                                  .L_if_else_000e:
  7557                                  	; preparing a tail-call
  7558                                  	; preparing a non-tail-call
  7559                                  	; preparing a non-tail-call
  7560 00004B21 488B4528                	mov rax, PARAM(1)	; param s
  7561 00004B25 50                      	push rax
  7562 00004B26 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  7563 00004B2E 803805                  	cmp byte [rax], T_undefined
  7564 00004B31 0F846D1E0100            	je L_error_fvar_undefined
  7565 00004B37 50                      	push rax
  7566 00004B38 6A02                    	push 2	; arg count
  7567 00004B3A 488B4510                	mov rax, ENV
  7568 00004B3E 488B00                  	mov rax, qword [rax + 8 * 0]
  7569 00004B41 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7570 00004B44 488B00                  	mov rax, qword [rax]
  7571 00004B47 803804                  	cmp byte [rax], T_closure
  7572 00004B4A 0F85D81E0100            	jne L_error_non_closure
  7573 00004B50 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7574 00004B53 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7575 00004B56 50                      	push rax
  7576 00004B57 488B4520                	mov rax, PARAM(0)	; param f
  7577 00004B5B 50                      	push rax
  7578 00004B5C 6A02                    	push 2	; arg count
  7579 00004B5E 488B4510                	mov rax, ENV
  7580 00004B62 488B00                  	mov rax, qword [rax + 8 * 0]
  7581 00004B65 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7582 00004B69 488B00                  	mov rax, qword [rax]
  7583 00004B6C 803804                  	cmp byte [rax], T_closure
  7584 00004B6F 0F85B31E0100            	jne L_error_non_closure
  7585 00004B75 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7586 00004B78 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7587 00004B7B 50                      	push rax
  7588                                  	; preparing a non-tail-call
  7589                                  	; preparing a non-tail-call
  7590 00004B7C 488B4528                	mov rax, PARAM(1)	; param s
  7591 00004B80 50                      	push rax
  7592 00004B81 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  7593 00004B89 803805                  	cmp byte [rax], T_undefined
  7594 00004B8C 0F84121E0100            	je L_error_fvar_undefined
  7595 00004B92 50                      	push rax
  7596 00004B93 6A02                    	push 2	; arg count
  7597 00004B95 488B4510                	mov rax, ENV
  7598 00004B99 488B00                  	mov rax, qword [rax + 8 * 0]
  7599 00004B9C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var map1
  7600 00004B9F 488B00                  	mov rax, qword [rax]
  7601 00004BA2 803804                  	cmp byte [rax], T_closure
  7602 00004BA5 0F857D1E0100            	jne L_error_non_closure
  7603 00004BAB FF7001                  	push SOB_CLOSURE_ENV(rax)
  7604 00004BAE FF5009                  	call SOB_CLOSURE_CODE(rax)
  7605 00004BB1 50                      	push rax
  7606 00004BB2 488B4520                	mov rax, PARAM(0)	; param f
  7607 00004BB6 50                      	push rax
  7608 00004BB7 6A02                    	push 2	; arg count
  7609 00004BB9 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  7610 00004BC1 803805                  	cmp byte [rax], T_undefined
  7611 00004BC4 0F84DA1D0100            	je L_error_fvar_undefined
  7612 00004BCA 803804                  	cmp byte [rax], T_closure
  7613 00004BCD 0F85551E0100            	jne L_error_non_closure
  7614 00004BD3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7615 00004BD6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7616 00004BD9 50                      	push rax
  7617 00004BDA 6A02                    	push 2	; arg count
  7618 00004BDC 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7619 00004BE4 803805                  	cmp byte [rax], T_undefined
  7620 00004BE7 0F84B71D0100            	je L_error_fvar_undefined
  7621 00004BED 803804                  	cmp byte [rax], T_closure
  7622 00004BF0 0F85321E0100            	jne L_error_non_closure
  7623 00004BF6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7624 00004BF9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  7625 00004BFC FF7500                  	push qword[rbp]
  7626 00004BFF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  7627 00004C04 48895D10                	mov qword[rbp + 8*2],rbx
  7628 00004C08 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  7629 00004C10 BF00000000              	mov rdi,0
  7630 00004C15 EB00                    	jmp .L_tc_recycle_frame_loop_0032
  7631                                  .L_tc_recycle_frame_loop_0032:
  7632 00004C17 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  7633 00004C1B 740F                    	je .L_tc_recycle_frame_done_0032
  7634 00004C1D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  7635 00004C22 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  7636 00004C27 48FFC7                  	inc rdi
  7637 00004C2A EBEB                    	jmp .L_tc_recycle_frame_loop_0032
  7638                                  .L_tc_recycle_frame_done_0032:
  7639 00004C2C 4889EC                  	mov rsp, rbp	; point to last argument
  7640 00004C2F 5D                      	pop rbp
  7641 00004C30 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7642                                  .L_if_end_000e:
  7643 00004C33 C9                      	leave
  7644 00004C34 C22000                  	ret AND_KILL_FRAME(2)
  7645                                  .L_lambda_simple_end_002e:	; new closure is in rax
  7646 00004C37 50                      	push rax
  7647 00004C38 488B4528                	mov rax, PARAM(1)	; param map-list
  7648 00004C3C 8F00                    	pop qword [rax]
  7649 00004C3E 48B8-                   	mov rax, sob_void
  7649 00004C40 [0000000000000000] 
  7650                                  
  7651 00004C48 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7652 00004C4D E87F1E0100              	call malloc
  7653 00004C52 50                      	push rax
  7654 00004C53 BF10000000              	mov rdi, 8 * 2	; new rib
  7655 00004C58 E8741E0100              	call malloc
  7656 00004C5D 50                      	push rax
  7657 00004C5E BF10000000              	mov rdi, 8 * 2	; extended env
  7658 00004C63 E8691E0100              	call malloc
  7659 00004C68 488B7D10                	mov rdi, ENV
  7660 00004C6C BE00000000              	mov rsi, 0
  7661 00004C71 BA01000000              	mov rdx, 1
  7662                                  .L_lambda_opt_env_loop_0006:	; ext_env[i + 1] <-- env[i]
  7663 00004C76 4883FE01                	cmp rsi, 1
  7664 00004C7A 7410                    	je .L_lambda_opt_env_end_0006
  7665 00004C7C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7666 00004C80 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7667 00004C84 48FFC6                  	inc rsi
  7668 00004C87 48FFC2                  	inc rdx
  7669 00004C8A EBEA                    	jmp .L_lambda_opt_env_loop_0006
  7670                                  .L_lambda_opt_env_end_0006:
  7671 00004C8C 5B                      	pop rbx
  7672 00004C8D BE00000000              	mov rsi, 0
  7673                                  .L_lambda_opt_params_loop_0006:	; copy params
  7674 00004C92 4883FE02                	cmp rsi, 2
  7675 00004C96 740E                    	je .L_lambda_opt_params_end_0006
  7676 00004C98 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7677 00004C9D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7678 00004CA1 48FFC6                  	inc rsi
  7679 00004CA4 EBEC                    	jmp .L_lambda_opt_params_loop_0006
  7680                                  .L_lambda_opt_params_end_0006:
  7681 00004CA6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7682 00004CA9 4889C3                  	mov rbx, rax
  7683 00004CAC 58                      	pop rax
  7684 00004CAD C60004                  	mov byte [rax], T_closure
  7685 00004CB0 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7686 00004CB4 48C74009[C14C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0006
  7687 00004CBC E944020000              	jmp .L_lambda_opt_end_0006
  7688                                  .L_lambda_opt_code_0006:	; lambda-opt body
  7689 00004CC1 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7690 00004CC7 7411                    	je .L_lambda_opt_arity_check_exact_0006
  7691 00004CC9 0F8FED000000            	jg .L_lambda_opt_arity_check_more_0006
  7692 00004CCF FF742410                	push qword [rsp + 8 * 2]
  7693 00004CD3 6A01                    	push 1
  7694 00004CD5 E9C41D0100              	jmp L_error_incorrect_arity_opt
  7695                                  .L_lambda_opt_arity_check_exact_0006:
  7696 00004CDA 4883EC08                	sub rsp, 8
  7697 00004CDE 488B442408              	mov rax, qword[rsp + 8 *1]
  7698 00004CE3 48890424                	mov qword[rsp], rax  
  7699 00004CE7 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  7700 00004CEC 4889442408              	mov qword[rsp + 8 * 1], rax
  7701 00004CF1 B802000000              	mov rax, 2
  7702 00004CF6 4889442410              	mov qword[rsp + 8 *2], rax
  7703 00004CFB 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  7704 00004D00 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  7705 00004D05 48B8-                   	mov rax, sob_nil
  7705 00004D07 [0100000000000000] 
  7706 00004D0F 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  7707 00004D14 C8000000                	enter 0, 0
  7708                                  	; preparing a non-tail-call
  7709 00004D18 488B4528                	mov rax, PARAM(1)	; param s
  7710 00004D1C 50                      	push rax
  7711 00004D1D 6A01                    	push 1	; arg count
  7712 00004D1F 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7713 00004D27 803805                  	cmp byte [rax], T_undefined
  7714 00004D2A 0F84741C0100            	je L_error_fvar_undefined
  7715 00004D30 803804                  	cmp byte [rax], T_closure
  7716 00004D33 0F85EF1C0100            	jne L_error_non_closure
  7717 00004D39 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7718 00004D3C FF5009                  	call SOB_CLOSURE_CODE(rax)
  7719 00004D3F 483D[02000000]          	cmp rax, sob_boolean_false
  7720 00004D45 740C                    	je .L_if_else_0010
  7721 00004D47 48B8-                   	mov rax, L_constants + 1
  7721 00004D49 [0100000000000000] 
  7722 00004D51 EB60                    	jmp .L_if_end_0010
  7723                                  .L_if_else_0010:
  7724                                  	; preparing a tail-call
  7725 00004D53 488B4528                	mov rax, PARAM(1)	; param s
  7726 00004D57 50                      	push rax
  7727 00004D58 488B4520                	mov rax, PARAM(0)	; param f
  7728 00004D5C 50                      	push rax
  7729 00004D5D 6A02                    	push 2	; arg count
  7730 00004D5F 488B4510                	mov rax, ENV
  7731 00004D63 488B00                  	mov rax, qword [rax + 8 * 0]
  7732 00004D66 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7733 00004D6A 488B00                  	mov rax, qword [rax]
  7734 00004D6D 803804                  	cmp byte [rax], T_closure
  7735 00004D70 0F85B21C0100            	jne L_error_non_closure
  7736 00004D76 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7737 00004D79 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  7738 00004D7C FF7500                  	push qword[rbp]
  7739 00004D7F 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  7740 00004D84 48895D10                	mov qword[rbp + 8*2],rbx
  7741 00004D88 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  7742 00004D90 BF00000000              	mov rdi,0
  7743 00004D95 EB00                    	jmp .L_tc_recycle_frame_loop_0034
  7744                                  .L_tc_recycle_frame_loop_0034:
  7745 00004D97 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  7746 00004D9B 740F                    	je .L_tc_recycle_frame_done_0034
  7747 00004D9D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  7748 00004DA2 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  7749 00004DA7 48FFC7                  	inc rdi
  7750 00004DAA EBEB                    	jmp .L_tc_recycle_frame_loop_0034
  7751                                  .L_tc_recycle_frame_done_0034:
  7752 00004DAC 4889EC                  	mov rsp, rbp	; point to last argument
  7753 00004DAF 5D                      	pop rbp
  7754 00004DB0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7755                                  .L_if_end_0010:
  7756 00004DB3 C9                      	leave
  7757 00004DB4 C22000                  	ret AND_KILL_FRAME(2)
  7758 00004DB7 E949010000              	jmp .L_lambda_opt_end_0006	; new closure is in rax
  7759                                  .L_lambda_opt_arity_check_more_0006:
  7760 00004DBC 488B442410              	mov rax, qword[rsp + 2 * 8]
  7761 00004DC1 4889C7                  	mov rdi, rax
  7762 00004DC4 49B9-                   	mov r9, sob_nil
  7762 00004DC6 [0100000000000000] 
  7763 00004DCE 4C8B442410              	mov r8, qword[rsp+2*8]
  7764                                  .L_lambda_opt_stack_shrink_loop_0006:
  7765 00004DD3 4983F801                	cmp r8, 1
  7766 00004DD7 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0006
  7767 00004DD9 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  7768 00004DDE BF11000000              	mov rdi, 1+8+8	;for pair
  7769 00004DE3 E8E91C0100              	call malloc	 ;to create the pair in the stack
  7770 00004DE8 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  7771 00004DEB 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  7772 00004DEF 4C894809                 	mov qword[rax+1+8],r9
  7773 00004DF3 4989C1                  	mov r9 , rax	 ; for the recursion 
  7774 00004DF6 49FFC8                  	dec r8
  7775 00004DF9 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0006
  7776                                  .L_lambda_opt_stack_shrink_loop_exit_0006:
  7777 00004DFB 488B442410              	mov rax, qword[rsp + 2 * 8]
  7778 00004E00 BF02000000              	mov rdi, 2
  7779 00004E05 4829F8                  	sub rax, rdi
  7780 00004E08 4889C7                  	mov rdi, rax
  7781 00004E0B 486BC008                	imul rax,8
  7782 00004E0F 4801C4                  	add rsp, rax
  7783 00004E12 4889E0                  	mov rax, rsp
  7784 00004E15 4989F8                  	mov r8, rdi
  7785 00004E18 4D6BC008                	imul r8, 8
  7786 00004E1C 4C29C0                  	sub rax, r8
  7787 00004E1F 4989C2                  	mov r10, rax	; holds the original ret in the stack
  7788 00004E22 4983C218                	add r10, 8*3
  7789 00004E26 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  7790 00004E2A 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  7791 00004E2D 4D6BC008                	imul r8,8
  7792 00004E31 4C01C0                  	add rax, r8
  7793 00004E34 4C8908                  	mov qword[rax] ,r9
  7794 00004E37 4D89D0                   	mov r8, r10
  7795 00004E3A 4983C000                	add r8, 8 * 0
  7796 00004E3E 4D8B08                  	mov r9,qword[r8]
  7797 00004E41 4D890CF8                	mov qword [r8 + rdi * 8], r9
  7798 00004E45 4983EA18                	sub r10, 8*3
  7799 00004E49 48C744241002000000      	mov qword [rsp+2*8], 2
  7800 00004E52 498B4208                	mov rax, qword[r10 + 1 * 8]
  7801 00004E56 4889442408              	mov qword[rsp + 1*8] ,rax
  7802 00004E5B 498B02                  	mov rax, qword[r10]
  7803 00004E5E 48890424                	mov qword[rsp], rax
  7804 00004E62 C8000000                	enter 0, 0
  7805                                  	; preparing a non-tail-call
  7806 00004E66 488B4528                	mov rax, PARAM(1)	; param s
  7807 00004E6A 50                      	push rax
  7808 00004E6B 6A01                    	push 1	; arg count
  7809 00004E6D 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  7810 00004E75 803805                  	cmp byte [rax], T_undefined
  7811 00004E78 0F84261B0100            	je L_error_fvar_undefined
  7812 00004E7E 803804                  	cmp byte [rax], T_closure
  7813 00004E81 0F85A11B0100            	jne L_error_non_closure
  7814 00004E87 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7815 00004E8A FF5009                  	call SOB_CLOSURE_CODE(rax)
  7816 00004E8D 483D[02000000]          	cmp rax, sob_boolean_false
  7817 00004E93 740C                    	je .L_if_else_000f
  7818 00004E95 48B8-                   	mov rax, L_constants + 1
  7818 00004E97 [0100000000000000] 
  7819 00004E9F EB60                    	jmp .L_if_end_000f
  7820                                  .L_if_else_000f:
  7821                                  	; preparing a tail-call
  7822 00004EA1 488B4528                	mov rax, PARAM(1)	; param s
  7823 00004EA5 50                      	push rax
  7824 00004EA6 488B4520                	mov rax, PARAM(0)	; param f
  7825 00004EAA 50                      	push rax
  7826 00004EAB 6A02                    	push 2	; arg count
  7827 00004EAD 488B4510                	mov rax, ENV
  7828 00004EB1 488B00                  	mov rax, qword [rax + 8 * 0]
  7829 00004EB4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var map-list
  7830 00004EB8 488B00                  	mov rax, qword [rax]
  7831 00004EBB 803804                  	cmp byte [rax], T_closure
  7832 00004EBE 0F85641B0100            	jne L_error_non_closure
  7833 00004EC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7834 00004EC7 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  7835 00004ECA FF7500                  	push qword[rbp]
  7836 00004ECD 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  7837 00004ED2 48895D10                	mov qword[rbp + 8*2],rbx
  7838 00004ED6 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  7839 00004EDE BF00000000              	mov rdi,0
  7840 00004EE3 EB00                    	jmp .L_tc_recycle_frame_loop_0033
  7841                                  .L_tc_recycle_frame_loop_0033:
  7842 00004EE5 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  7843 00004EE9 740F                    	je .L_tc_recycle_frame_done_0033
  7844 00004EEB 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  7845 00004EF0 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  7846 00004EF5 48FFC7                  	inc rdi
  7847 00004EF8 EBEB                    	jmp .L_tc_recycle_frame_loop_0033
  7848                                  .L_tc_recycle_frame_done_0033:
  7849 00004EFA 4889EC                  	mov rsp, rbp	; point to last argument
  7850 00004EFD 5D                      	pop rbp
  7851 00004EFE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7852                                  .L_if_end_000f:
  7853 00004F01 C9                      	leave
  7854 00004F02 C22000                  	ret AND_KILL_FRAME(2)
  7855                                  .L_lambda_opt_end_0006:	; new closure is in rax
  7856 00004F05 C9                      	leave
  7857 00004F06 C22000                  	ret AND_KILL_FRAME(2)
  7858                                  .L_lambda_simple_end_002c:	; new closure is in rax
  7859 00004F09 803804                  	cmp byte [rax], T_closure
  7860 00004F0C 0F85161B0100            	jne L_error_non_closure
  7861 00004F12 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7862 00004F15 FF5009                  	call SOB_CLOSURE_CODE(rax)
  7863 00004F18 48890425[9C140000]      	mov qword [free_var_103], rax
  7864 00004F20 48B8-                   	mov rax, sob_void
  7864 00004F22 [0000000000000000] 
  7865                                  
  7866 00004F2A 4889C7                  	mov rdi, rax
  7867 00004F2D E8F41D0100              	call print_sexpr_if_not_void
  7868 00004F32 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7869 00004F37 E8951B0100              	call malloc
  7870 00004F3C 50                      	push rax
  7871 00004F3D BF00000000              	mov rdi, 8 * 0	; new rib
  7872 00004F42 E88A1B0100              	call malloc
  7873 00004F47 50                      	push rax
  7874 00004F48 BF08000000              	mov rdi, 8 * 1	; extended env
  7875 00004F4D E87F1B0100              	call malloc
  7876 00004F52 488B7D10                	mov rdi, ENV
  7877 00004F56 BE00000000              	mov rsi, 0
  7878 00004F5B BA01000000              	mov rdx, 1
  7879                                  .L_lambda_simple_env_loop_002f:	; ext_env[i + 1] <-- env[i]
  7880 00004F60 4883FE00                	cmp rsi, 0
  7881 00004F64 7410                    	je .L_lambda_simple_env_end_002f
  7882 00004F66 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7883 00004F6A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7884 00004F6E 48FFC6                  	inc rsi
  7885 00004F71 48FFC2                  	inc rdx
  7886 00004F74 EBEA                    	jmp .L_lambda_simple_env_loop_002f
  7887                                  .L_lambda_simple_env_end_002f:
  7888 00004F76 5B                      	pop rbx
  7889 00004F77 BE00000000              	mov rsi, 0
  7890                                  .L_lambda_simple_params_loop_002f:	; copy params
  7891 00004F7C 4883FE00                	cmp rsi, 0
  7892 00004F80 740E                    	je .L_lambda_simple_params_end_002f
  7893 00004F82 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7894 00004F87 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7895 00004F8B 48FFC6                  	inc rsi
  7896 00004F8E EBEC                    	jmp .L_lambda_simple_params_loop_002f
  7897                                  .L_lambda_simple_params_end_002f:
  7898 00004F90 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7899 00004F93 4889C3                  	mov rbx, rax
  7900 00004F96 58                      	pop rax
  7901 00004F97 C60004                  	mov byte [rax], T_closure
  7902 00004F9A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7903 00004F9E 48C74009[AB4F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_002f
  7904 00004FA6 E97C010000              	jmp .L_lambda_simple_end_002f
  7905                                  .L_lambda_simple_code_002f:	; lambda-simple body
  7906 00004FAB 48837C241001            	cmp qword [rsp + 8 * 2], 1
  7907 00004FB1 740B                    	je .L_lambda_simple_arity_check_ok_002f
  7908 00004FB3 FF742410                	push qword [rsp + 8 * 2]
  7909 00004FB7 6A01                    	push 1
  7910 00004FB9 E9CC1A0100              	jmp L_error_incorrect_arity_simple
  7911                                  .L_lambda_simple_arity_check_ok_002f:
  7912 00004FBE C8000000                	enter 0, 0
  7913                                  	; preparing a tail-call
  7914 00004FC2 488B4520                	mov rax, PARAM(0)	; param s
  7915 00004FC6 50                      	push rax
  7916 00004FC7 48B8-                   	mov rax, L_constants + 1
  7916 00004FC9 [0100000000000000] 
  7917 00004FD1 50                      	push rax
  7918 00004FD2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  7919 00004FD7 E8F51A0100              	call malloc
  7920 00004FDC 50                      	push rax
  7921 00004FDD BF08000000              	mov rdi, 8 * 1	; new rib
  7922 00004FE2 E8EA1A0100              	call malloc
  7923 00004FE7 50                      	push rax
  7924 00004FE8 BF10000000              	mov rdi, 8 * 2	; extended env
  7925 00004FED E8DF1A0100              	call malloc
  7926 00004FF2 488B7D10                	mov rdi, ENV
  7927 00004FF6 BE00000000              	mov rsi, 0
  7928 00004FFB BA01000000              	mov rdx, 1
  7929                                  .L_lambda_simple_env_loop_0030:	; ext_env[i + 1] <-- env[i]
  7930 00005000 4883FE01                	cmp rsi, 1
  7931 00005004 7410                    	je .L_lambda_simple_env_end_0030
  7932 00005006 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  7933 0000500A 48890CD0                	mov qword [rax + 8 * rdx], rcx
  7934 0000500E 48FFC6                  	inc rsi
  7935 00005011 48FFC2                  	inc rdx
  7936 00005014 EBEA                    	jmp .L_lambda_simple_env_loop_0030
  7937                                  .L_lambda_simple_env_end_0030:
  7938 00005016 5B                      	pop rbx
  7939 00005017 BE00000000              	mov rsi, 0
  7940                                  .L_lambda_simple_params_loop_0030:	; copy params
  7941 0000501C 4883FE01                	cmp rsi, 1
  7942 00005020 740E                    	je .L_lambda_simple_params_end_0030
  7943 00005022 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  7944 00005027 488914F3                	mov qword [rbx + 8 * rsi], rdx
  7945 0000502B 48FFC6                  	inc rsi
  7946 0000502E EBEC                    	jmp .L_lambda_simple_params_loop_0030
  7947                                  .L_lambda_simple_params_end_0030:
  7948 00005030 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  7949 00005033 4889C3                  	mov rbx, rax
  7950 00005036 58                      	pop rax
  7951 00005037 C60004                  	mov byte [rax], T_closure
  7952 0000503A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  7953 0000503E 48C74009[4B500000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0030
  7954 00005046 E97E000000              	jmp .L_lambda_simple_end_0030
  7955                                  .L_lambda_simple_code_0030:	; lambda-simple body
  7956 0000504B 48837C241002            	cmp qword [rsp + 8 * 2], 2
  7957 00005051 740B                    	je .L_lambda_simple_arity_check_ok_0030
  7958 00005053 FF742410                	push qword [rsp + 8 * 2]
  7959 00005057 6A02                    	push 2
  7960 00005059 E92C1A0100              	jmp L_error_incorrect_arity_simple
  7961                                  .L_lambda_simple_arity_check_ok_0030:
  7962 0000505E C8000000                	enter 0, 0
  7963                                  	; preparing a tail-call
  7964 00005062 488B4520                	mov rax, PARAM(0)	; param r
  7965 00005066 50                      	push rax
  7966 00005067 488B4528                	mov rax, PARAM(1)	; param a
  7967 0000506B 50                      	push rax
  7968 0000506C 6A02                    	push 2	; arg count
  7969 0000506E 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  7970 00005076 803805                  	cmp byte [rax], T_undefined
  7971 00005079 0F8425190100            	je L_error_fvar_undefined
  7972 0000507F 803804                  	cmp byte [rax], T_closure
  7973 00005082 0F85A0190100            	jne L_error_non_closure
  7974 00005088 FF7001                  	push SOB_CLOSURE_ENV(rax)
  7975 0000508B FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  7976 0000508E FF7500                  	push qword[rbp]
  7977 00005091 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  7978 00005096 48895D10                	mov qword[rbp + 8*2],rbx
  7979 0000509A 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  7980 000050A2 BF00000000              	mov rdi,0
  7981 000050A7 EB00                    	jmp .L_tc_recycle_frame_loop_0035
  7982                                  .L_tc_recycle_frame_loop_0035:
  7983 000050A9 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  7984 000050AD 740F                    	je .L_tc_recycle_frame_done_0035
  7985 000050AF 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  7986 000050B4 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  7987 000050B9 48FFC7                  	inc rdi
  7988 000050BC EBEB                    	jmp .L_tc_recycle_frame_loop_0035
  7989                                  .L_tc_recycle_frame_done_0035:
  7990 000050BE 4889EC                  	mov rsp, rbp	; point to last argument
  7991 000050C1 5D                      	pop rbp
  7992 000050C2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  7993 000050C5 C9                      	leave
  7994 000050C6 C22000                  	ret AND_KILL_FRAME(2)
  7995                                  .L_lambda_simple_end_0030:	; new closure is in rax
  7996 000050C9 50                      	push rax
  7997 000050CA 6A03                    	push 3	; arg count
  7998 000050CC 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
  7999 000050D4 803805                  	cmp byte [rax], T_undefined
  8000 000050D7 0F84C7180100            	je L_error_fvar_undefined
  8001 000050DD 803804                  	cmp byte [rax], T_closure
  8002 000050E0 0F8542190100            	jne L_error_non_closure
  8003 000050E6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8004 000050E9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  8005 000050EC FF7500                  	push qword[rbp]
  8006 000050EF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  8007 000050F4 48895D10                	mov qword[rbp + 8*2],rbx
  8008 000050F8 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
  8009 00005100 BF00000000              	mov rdi,0
  8010 00005105 EB00                    	jmp .L_tc_recycle_frame_loop_0036
  8011                                  .L_tc_recycle_frame_loop_0036:
  8012 00005107 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  8013 0000510B 740F                    	je .L_tc_recycle_frame_done_0036
  8014 0000510D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  8015 00005112 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  8016 00005117 48FFC7                  	inc rdi
  8017 0000511A EBEB                    	jmp .L_tc_recycle_frame_loop_0036
  8018                                  .L_tc_recycle_frame_done_0036:
  8019 0000511C 4889EC                  	mov rsp, rbp	; point to last argument
  8020 0000511F 5D                      	pop rbp
  8021 00005120 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8022 00005123 C9                      	leave
  8023 00005124 C21800                  	ret AND_KILL_FRAME(1)
  8024                                  .L_lambda_simple_end_002f:	; new closure is in rax
  8025 00005127 48890425[9B150000]      	mov qword [free_var_118], rax
  8026 0000512F 48B8-                   	mov rax, sob_void
  8026 00005131 [0000000000000000] 
  8027                                  
  8028 00005139 4889C7                  	mov rdi, rax
  8029 0000513C E8E51B0100              	call print_sexpr_if_not_void
  8030                                  	; preparing a non-tail-call
  8031 00005141 48B8-                   	mov rax, L_constants + 1993
  8031 00005143 [C907000000000000] 
  8032 0000514B 50                      	push rax
  8033 0000514C 48B8-                   	mov rax, L_constants + 1993
  8033 0000514E [C907000000000000] 
  8034 00005156 50                      	push rax
  8035 00005157 6A02                    	push 2	; arg count
  8036 00005159 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8037 0000515E E86E190100              	call malloc
  8038 00005163 50                      	push rax
  8039 00005164 BF00000000              	mov rdi, 8 * 0	; new rib
  8040 00005169 E863190100              	call malloc
  8041 0000516E 50                      	push rax
  8042 0000516F BF08000000              	mov rdi, 8 * 1	; extended env
  8043 00005174 E858190100              	call malloc
  8044 00005179 488B7D10                	mov rdi, ENV
  8045 0000517D BE00000000              	mov rsi, 0
  8046 00005182 BA01000000              	mov rdx, 1
  8047                                  .L_lambda_simple_env_loop_0031:	; ext_env[i + 1] <-- env[i]
  8048 00005187 4883FE00                	cmp rsi, 0
  8049 0000518B 7410                    	je .L_lambda_simple_env_end_0031
  8050 0000518D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8051 00005191 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8052 00005195 48FFC6                  	inc rsi
  8053 00005198 48FFC2                  	inc rdx
  8054 0000519B EBEA                    	jmp .L_lambda_simple_env_loop_0031
  8055                                  .L_lambda_simple_env_end_0031:
  8056 0000519D 5B                      	pop rbx
  8057 0000519E BE00000000              	mov rsi, 0
  8058                                  .L_lambda_simple_params_loop_0031:	; copy params
  8059 000051A3 4883FE00                	cmp rsi, 0
  8060 000051A7 740E                    	je .L_lambda_simple_params_end_0031
  8061 000051A9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8062 000051AE 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8063 000051B2 48FFC6                  	inc rsi
  8064 000051B5 EBEC                    	jmp .L_lambda_simple_params_loop_0031
  8065                                  .L_lambda_simple_params_end_0031:
  8066 000051B7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8067 000051BA 4889C3                  	mov rbx, rax
  8068 000051BD 58                      	pop rax
  8069 000051BE C60004                  	mov byte [rax], T_closure
  8070 000051C1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8071 000051C5 48C74009[D2510000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0031
  8072 000051CD E9B0060000              	jmp .L_lambda_simple_end_0031
  8073                                  .L_lambda_simple_code_0031:	; lambda-simple body
  8074 000051D2 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8075 000051D8 740B                    	je .L_lambda_simple_arity_check_ok_0031
  8076 000051DA FF742410                	push qword [rsp + 8 * 2]
  8077 000051DE 6A02                    	push 2
  8078 000051E0 E9A5180100              	jmp L_error_incorrect_arity_simple
  8079                                  .L_lambda_simple_arity_check_ok_0031:
  8080 000051E5 C8000000                	enter 0, 0
  8081 000051E9 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  8082 000051ED 488903                  	mov qword [rbx], rax
  8083                                  
  8084 000051F0 488B5D28                	mov rbx, qword [rbp + 8 * (4 + 1)]
  8085 000051F4 488903                  	mov qword [rbx], rax
  8086                                  
  8087 000051F7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8088 000051FC E8D0180100              	call malloc
  8089 00005201 50                      	push rax
  8090 00005202 BF10000000              	mov rdi, 8 * 2	; new rib
  8091 00005207 E8C5180100              	call malloc
  8092 0000520C 50                      	push rax
  8093 0000520D BF10000000              	mov rdi, 8 * 2	; extended env
  8094 00005212 E8BA180100              	call malloc
  8095 00005217 488B7D10                	mov rdi, ENV
  8096 0000521B BE00000000              	mov rsi, 0
  8097 00005220 BA01000000              	mov rdx, 1
  8098                                  .L_lambda_simple_env_loop_0032:	; ext_env[i + 1] <-- env[i]
  8099 00005225 4883FE01                	cmp rsi, 1
  8100 00005229 7410                    	je .L_lambda_simple_env_end_0032
  8101 0000522B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8102 0000522F 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8103 00005233 48FFC6                  	inc rsi
  8104 00005236 48FFC2                  	inc rdx
  8105 00005239 EBEA                    	jmp .L_lambda_simple_env_loop_0032
  8106                                  .L_lambda_simple_env_end_0032:
  8107 0000523B 5B                      	pop rbx
  8108 0000523C BE00000000              	mov rsi, 0
  8109                                  .L_lambda_simple_params_loop_0032:	; copy params
  8110 00005241 4883FE02                	cmp rsi, 2
  8111 00005245 740E                    	je .L_lambda_simple_params_end_0032
  8112 00005247 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8113 0000524C 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8114 00005250 48FFC6                  	inc rsi
  8115 00005253 EBEC                    	jmp .L_lambda_simple_params_loop_0032
  8116                                  .L_lambda_simple_params_end_0032:
  8117 00005255 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8118 00005258 4889C3                  	mov rbx, rax
  8119 0000525B 58                      	pop rax
  8120 0000525C C60004                  	mov byte [rax], T_closure
  8121 0000525F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8122 00005263 48C74009[70520000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0032
  8123 0000526B E91D010000              	jmp .L_lambda_simple_end_0032
  8124                                  .L_lambda_simple_code_0032:	; lambda-simple body
  8125 00005270 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8126 00005276 740B                    	je .L_lambda_simple_arity_check_ok_0032
  8127 00005278 FF742410                	push qword [rsp + 8 * 2]
  8128 0000527C 6A02                    	push 2
  8129 0000527E E907180100              	jmp L_error_incorrect_arity_simple
  8130                                  .L_lambda_simple_arity_check_ok_0032:
  8131 00005283 C8000000                	enter 0, 0
  8132                                  	; preparing a non-tail-call
  8133 00005287 488B4528                	mov rax, PARAM(1)	; param sr
  8134 0000528B 50                      	push rax
  8135 0000528C 6A01                    	push 1	; arg count
  8136 0000528E 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8137 00005296 803805                  	cmp byte [rax], T_undefined
  8138 00005299 0F8405170100            	je L_error_fvar_undefined
  8139 0000529F 803804                  	cmp byte [rax], T_closure
  8140 000052A2 0F8580170100            	jne L_error_non_closure
  8141 000052A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8142 000052AB FF5009                  	call SOB_CLOSURE_CODE(rax)
  8143 000052AE 483D[02000000]          	cmp rax, sob_boolean_false
  8144 000052B4 7409                    	je .L_if_else_0011
  8145 000052B6 488B4520                	mov rax, PARAM(0)	; param s1
  8146 000052BA E9CA000000              	jmp .L_if_end_0011
  8147                                  .L_if_else_0011:
  8148                                  	; preparing a tail-call
  8149                                  	; preparing a non-tail-call
  8150                                  	; preparing a non-tail-call
  8151 000052BF 488B4528                	mov rax, PARAM(1)	; param sr
  8152 000052C3 50                      	push rax
  8153 000052C4 6A01                    	push 1	; arg count
  8154 000052C6 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8155 000052CE 803805                  	cmp byte [rax], T_undefined
  8156 000052D1 0F84CD160100            	je L_error_fvar_undefined
  8157 000052D7 803804                  	cmp byte [rax], T_closure
  8158 000052DA 0F8548170100            	jne L_error_non_closure
  8159 000052E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8160 000052E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8161 000052E6 50                      	push rax
  8162                                  	; preparing a non-tail-call
  8163 000052E7 488B4528                	mov rax, PARAM(1)	; param sr
  8164 000052EB 50                      	push rax
  8165 000052EC 6A01                    	push 1	; arg count
  8166 000052EE 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8167 000052F6 803805                  	cmp byte [rax], T_undefined
  8168 000052F9 0F84A5160100            	je L_error_fvar_undefined
  8169 000052FF 803804                  	cmp byte [rax], T_closure
  8170 00005302 0F8520170100            	jne L_error_non_closure
  8171 00005308 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8172 0000530B FF5009                  	call SOB_CLOSURE_CODE(rax)
  8173 0000530E 50                      	push rax
  8174 0000530F 6A02                    	push 2	; arg count
  8175 00005311 488B4510                	mov rax, ENV
  8176 00005315 488B00                  	mov rax, qword [rax + 8 * 0]
  8177 00005318 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  8178 0000531B 488B00                  	mov rax, qword [rax]
  8179 0000531E 803804                  	cmp byte [rax], T_closure
  8180 00005321 0F8501170100            	jne L_error_non_closure
  8181 00005327 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8182 0000532A FF5009                  	call SOB_CLOSURE_CODE(rax)
  8183 0000532D 50                      	push rax
  8184 0000532E 488B4520                	mov rax, PARAM(0)	; param s1
  8185 00005332 50                      	push rax
  8186 00005333 6A02                    	push 2	; arg count
  8187 00005335 488B4510                	mov rax, ENV
  8188 00005339 488B00                  	mov rax, qword [rax + 8 * 0]
  8189 0000533C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  8190 00005340 488B00                  	mov rax, qword [rax]
  8191 00005343 803804                  	cmp byte [rax], T_closure
  8192 00005346 0F85DC160100            	jne L_error_non_closure
  8193 0000534C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8194 0000534F FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  8195 00005352 FF7500                  	push qword[rbp]
  8196 00005355 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  8197 0000535A 48895D10                	mov qword[rbp + 8*2],rbx
  8198 0000535E 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  8199 00005366 BF00000000              	mov rdi,0
  8200 0000536B EB00                    	jmp .L_tc_recycle_frame_loop_0037
  8201                                  .L_tc_recycle_frame_loop_0037:
  8202 0000536D 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  8203 00005371 740F                    	je .L_tc_recycle_frame_done_0037
  8204 00005373 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  8205 00005378 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  8206 0000537D 48FFC7                  	inc rdi
  8207 00005380 EBEB                    	jmp .L_tc_recycle_frame_loop_0037
  8208                                  .L_tc_recycle_frame_done_0037:
  8209 00005382 4889EC                  	mov rsp, rbp	; point to last argument
  8210 00005385 5D                      	pop rbp
  8211 00005386 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8212                                  .L_if_end_0011:
  8213 00005389 C9                      	leave
  8214 0000538A C22000                  	ret AND_KILL_FRAME(2)
  8215                                  .L_lambda_simple_end_0032:	; new closure is in rax
  8216 0000538D 50                      	push rax
  8217 0000538E 488B4520                	mov rax, PARAM(0)	; param run-1
  8218 00005392 8F00                    	pop qword [rax]
  8219 00005394 48B8-                   	mov rax, sob_void
  8219 00005396 [0000000000000000] 
  8220                                  
  8221 0000539E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8222 000053A3 E829170100              	call malloc
  8223 000053A8 50                      	push rax
  8224 000053A9 BF10000000              	mov rdi, 8 * 2	; new rib
  8225 000053AE E81E170100              	call malloc
  8226 000053B3 50                      	push rax
  8227 000053B4 BF10000000              	mov rdi, 8 * 2	; extended env
  8228 000053B9 E813170100              	call malloc
  8229 000053BE 488B7D10                	mov rdi, ENV
  8230 000053C2 BE00000000              	mov rsi, 0
  8231 000053C7 BA01000000              	mov rdx, 1
  8232                                  .L_lambda_simple_env_loop_0033:	; ext_env[i + 1] <-- env[i]
  8233 000053CC 4883FE01                	cmp rsi, 1
  8234 000053D0 7410                    	je .L_lambda_simple_env_end_0033
  8235 000053D2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8236 000053D6 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8237 000053DA 48FFC6                  	inc rsi
  8238 000053DD 48FFC2                  	inc rdx
  8239 000053E0 EBEA                    	jmp .L_lambda_simple_env_loop_0033
  8240                                  .L_lambda_simple_env_end_0033:
  8241 000053E2 5B                      	pop rbx
  8242 000053E3 BE00000000              	mov rsi, 0
  8243                                  .L_lambda_simple_params_loop_0033:	; copy params
  8244 000053E8 4883FE02                	cmp rsi, 2
  8245 000053EC 740E                    	je .L_lambda_simple_params_end_0033
  8246 000053EE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8247 000053F3 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8248 000053F7 48FFC6                  	inc rsi
  8249 000053FA EBEC                    	jmp .L_lambda_simple_params_loop_0033
  8250                                  .L_lambda_simple_params_end_0033:
  8251 000053FC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8252 000053FF 4889C3                  	mov rbx, rax
  8253 00005402 58                      	pop rax
  8254 00005403 C60004                  	mov byte [rax], T_closure
  8255 00005406 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8256 0000540A 48C74009[17540000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0033
  8257 00005412 E921010000              	jmp .L_lambda_simple_end_0033
  8258                                  .L_lambda_simple_code_0033:	; lambda-simple body
  8259 00005417 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8260 0000541D 740B                    	je .L_lambda_simple_arity_check_ok_0033
  8261 0000541F FF742410                	push qword [rsp + 8 * 2]
  8262 00005423 6A02                    	push 2
  8263 00005425 E960160100              	jmp L_error_incorrect_arity_simple
  8264                                  .L_lambda_simple_arity_check_ok_0033:
  8265 0000542A C8000000                	enter 0, 0
  8266                                  	; preparing a non-tail-call
  8267 0000542E 488B4520                	mov rax, PARAM(0)	; param s1
  8268 00005432 50                      	push rax
  8269 00005433 6A01                    	push 1	; arg count
  8270 00005435 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8271 0000543D 803805                  	cmp byte [rax], T_undefined
  8272 00005440 0F845E150100            	je L_error_fvar_undefined
  8273 00005446 803804                  	cmp byte [rax], T_closure
  8274 00005449 0F85D9150100            	jne L_error_non_closure
  8275 0000544F FF7001                  	push SOB_CLOSURE_ENV(rax)
  8276 00005452 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8277 00005455 483D[02000000]          	cmp rax, sob_boolean_false
  8278 0000545B 7409                    	je .L_if_else_0012
  8279 0000545D 488B4528                	mov rax, PARAM(1)	; param s2
  8280 00005461 E9CE000000              	jmp .L_if_end_0012
  8281                                  .L_if_else_0012:
  8282                                  	; preparing a tail-call
  8283                                  	; preparing a non-tail-call
  8284 00005466 488B4528                	mov rax, PARAM(1)	; param s2
  8285 0000546A 50                      	push rax
  8286                                  	; preparing a non-tail-call
  8287 0000546B 488B4520                	mov rax, PARAM(0)	; param s1
  8288 0000546F 50                      	push rax
  8289 00005470 6A01                    	push 1	; arg count
  8290 00005472 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8291 0000547A 803805                  	cmp byte [rax], T_undefined
  8292 0000547D 0F8421150100            	je L_error_fvar_undefined
  8293 00005483 803804                  	cmp byte [rax], T_closure
  8294 00005486 0F859C150100            	jne L_error_non_closure
  8295 0000548C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8296 0000548F FF5009                  	call SOB_CLOSURE_CODE(rax)
  8297 00005492 50                      	push rax
  8298 00005493 6A02                    	push 2	; arg count
  8299 00005495 488B4510                	mov rax, ENV
  8300 00005499 488B00                  	mov rax, qword [rax + 8 * 0]
  8301 0000549C 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var run-2
  8302 000054A0 488B00                  	mov rax, qword [rax]
  8303 000054A3 803804                  	cmp byte [rax], T_closure
  8304 000054A6 0F857C150100            	jne L_error_non_closure
  8305 000054AC FF7001                  	push SOB_CLOSURE_ENV(rax)
  8306 000054AF FF5009                  	call SOB_CLOSURE_CODE(rax)
  8307 000054B2 50                      	push rax
  8308                                  	; preparing a non-tail-call
  8309 000054B3 488B4520                	mov rax, PARAM(0)	; param s1
  8310 000054B7 50                      	push rax
  8311 000054B8 6A01                    	push 1	; arg count
  8312 000054BA 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8313 000054C2 803805                  	cmp byte [rax], T_undefined
  8314 000054C5 0F84D9140100            	je L_error_fvar_undefined
  8315 000054CB 803804                  	cmp byte [rax], T_closure
  8316 000054CE 0F8554150100            	jne L_error_non_closure
  8317 000054D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8318 000054D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8319 000054DA 50                      	push rax
  8320 000054DB 6A02                    	push 2	; arg count
  8321 000054DD 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  8322 000054E5 803805                  	cmp byte [rax], T_undefined
  8323 000054E8 0F84B6140100            	je L_error_fvar_undefined
  8324 000054EE 803804                  	cmp byte [rax], T_closure
  8325 000054F1 0F8531150100            	jne L_error_non_closure
  8326 000054F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8327 000054FA FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  8328 000054FD FF7500                  	push qword[rbp]
  8329 00005500 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  8330 00005505 48895D10                	mov qword[rbp + 8*2],rbx
  8331 00005509 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  8332 00005511 BF00000000              	mov rdi,0
  8333 00005516 EB00                    	jmp .L_tc_recycle_frame_loop_0038
  8334                                  .L_tc_recycle_frame_loop_0038:
  8335 00005518 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  8336 0000551C 740F                    	je .L_tc_recycle_frame_done_0038
  8337 0000551E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  8338 00005523 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  8339 00005528 48FFC7                  	inc rdi
  8340 0000552B EBEB                    	jmp .L_tc_recycle_frame_loop_0038
  8341                                  .L_tc_recycle_frame_done_0038:
  8342 0000552D 4889EC                  	mov rsp, rbp	; point to last argument
  8343 00005530 5D                      	pop rbp
  8344 00005531 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8345                                  .L_if_end_0012:
  8346 00005534 C9                      	leave
  8347 00005535 C22000                  	ret AND_KILL_FRAME(2)
  8348                                  .L_lambda_simple_end_0033:	; new closure is in rax
  8349 00005538 50                      	push rax
  8350 00005539 488B4528                	mov rax, PARAM(1)	; param run-2
  8351 0000553D 8F00                    	pop qword [rax]
  8352 0000553F 48B8-                   	mov rax, sob_void
  8352 00005541 [0000000000000000] 
  8353                                  
  8354 00005549 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8355 0000554E E87E150100              	call malloc
  8356 00005553 50                      	push rax
  8357 00005554 BF10000000              	mov rdi, 8 * 2	; new rib
  8358 00005559 E873150100              	call malloc
  8359 0000555E 50                      	push rax
  8360 0000555F BF10000000              	mov rdi, 8 * 2	; extended env
  8361 00005564 E868150100              	call malloc
  8362 00005569 488B7D10                	mov rdi, ENV
  8363 0000556D BE00000000              	mov rsi, 0
  8364 00005572 BA01000000              	mov rdx, 1
  8365                                  .L_lambda_opt_env_loop_0007:	; ext_env[i + 1] <-- env[i]
  8366 00005577 4883FE01                	cmp rsi, 1
  8367 0000557B 7410                    	je .L_lambda_opt_env_end_0007
  8368 0000557D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8369 00005581 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8370 00005585 48FFC6                  	inc rsi
  8371 00005588 48FFC2                  	inc rdx
  8372 0000558B EBEA                    	jmp .L_lambda_opt_env_loop_0007
  8373                                  .L_lambda_opt_env_end_0007:
  8374 0000558D 5B                      	pop rbx
  8375 0000558E BE00000000              	mov rsi, 0
  8376                                  .L_lambda_opt_params_loop_0007:	; copy params
  8377 00005593 4883FE02                	cmp rsi, 2
  8378 00005597 740E                    	je .L_lambda_opt_params_end_0007
  8379 00005599 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8380 0000559E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8381 000055A2 48FFC6                  	inc rsi
  8382 000055A5 EBEC                    	jmp .L_lambda_opt_params_loop_0007
  8383                                  .L_lambda_opt_params_end_0007:
  8384 000055A7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8385 000055AA 4889C3                  	mov rbx, rax
  8386 000055AD 58                      	pop rax
  8387 000055AE C60004                  	mov byte [rax], T_closure
  8388 000055B1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8389 000055B5 48C74009[C2550000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0007
  8390 000055BD E9BC020000              	jmp .L_lambda_opt_end_0007
  8391                                  .L_lambda_opt_code_0007:	; lambda-opt body
  8392 000055C2 48837C241000            	cmp qword [rsp + 8 * 2], 0
  8393 000055C8 7411                    	je .L_lambda_opt_arity_check_exact_0007
  8394 000055CA 0F8F2B010000            	jg .L_lambda_opt_arity_check_more_0007
  8395 000055D0 FF742410                	push qword [rsp + 8 * 2]
  8396 000055D4 6A00                    	push 0
  8397 000055D6 E9C3140100              	jmp L_error_incorrect_arity_opt
  8398                                  .L_lambda_opt_arity_check_exact_0007:
  8399 000055DB 4883EC08                	sub rsp, 8
  8400 000055DF 488B442408              	mov rax, qword[rsp + 8 *1]
  8401 000055E4 48890424                	mov qword[rsp], rax  
  8402 000055E8 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  8403 000055ED 4889442408              	mov qword[rsp + 8 * 1], rax
  8404 000055F2 B801000000              	mov rax, 1
  8405 000055F7 4889442410              	mov qword[rsp + 8 *2], rax
  8406 000055FC 48B8-                   	mov rax, sob_nil
  8406 000055FE [0100000000000000] 
  8407 00005606 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  8408 0000560B C8000000                	enter 0, 0
  8409                                  	; preparing a non-tail-call
  8410 0000560F 488B4520                	mov rax, PARAM(0)	; param s
  8411 00005613 50                      	push rax
  8412 00005614 6A01                    	push 1	; arg count
  8413 00005616 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8414 0000561E 803805                  	cmp byte [rax], T_undefined
  8415 00005621 0F847D130100            	je L_error_fvar_undefined
  8416 00005627 803804                  	cmp byte [rax], T_closure
  8417 0000562A 0F85F8130100            	jne L_error_non_closure
  8418 00005630 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8419 00005633 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8420 00005636 483D[02000000]          	cmp rax, sob_boolean_false
  8421 0000563C 740F                    	je .L_if_else_0014
  8422 0000563E 48B8-                   	mov rax, L_constants + 1
  8422 00005640 [0100000000000000] 
  8423 00005648 E9A5000000              	jmp .L_if_end_0014
  8424                                  .L_if_else_0014:
  8425                                  	; preparing a tail-call
  8426                                  	; preparing a non-tail-call
  8427 0000564D 488B4520                	mov rax, PARAM(0)	; param s
  8428 00005651 50                      	push rax
  8429 00005652 6A01                    	push 1	; arg count
  8430 00005654 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8431 0000565C 803805                  	cmp byte [rax], T_undefined
  8432 0000565F 0F843F130100            	je L_error_fvar_undefined
  8433 00005665 803804                  	cmp byte [rax], T_closure
  8434 00005668 0F85BA130100            	jne L_error_non_closure
  8435 0000566E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8436 00005671 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8437 00005674 50                      	push rax
  8438                                  	; preparing a non-tail-call
  8439 00005675 488B4520                	mov rax, PARAM(0)	; param s
  8440 00005679 50                      	push rax
  8441 0000567A 6A01                    	push 1	; arg count
  8442 0000567C 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8443 00005684 803805                  	cmp byte [rax], T_undefined
  8444 00005687 0F8417130100            	je L_error_fvar_undefined
  8445 0000568D 803804                  	cmp byte [rax], T_closure
  8446 00005690 0F8592130100            	jne L_error_non_closure
  8447 00005696 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8448 00005699 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8449 0000569C 50                      	push rax
  8450 0000569D 6A02                    	push 2	; arg count
  8451 0000569F 488B4510                	mov rax, ENV
  8452 000056A3 488B00                  	mov rax, qword [rax + 8 * 0]
  8453 000056A6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  8454 000056A9 488B00                  	mov rax, qword [rax]
  8455 000056AC 803804                  	cmp byte [rax], T_closure
  8456 000056AF 0F8573130100            	jne L_error_non_closure
  8457 000056B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8458 000056B8 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  8459 000056BB FF7500                  	push qword[rbp]
  8460 000056BE 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  8461 000056C3 48895D10                	mov qword[rbp + 8*2],rbx
  8462 000056C7 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  8463 000056CF BF00000000              	mov rdi,0
  8464 000056D4 EB00                    	jmp .L_tc_recycle_frame_loop_003a
  8465                                  .L_tc_recycle_frame_loop_003a:
  8466 000056D6 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  8467 000056DA 740F                    	je .L_tc_recycle_frame_done_003a
  8468 000056DC 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  8469 000056E1 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  8470 000056E6 48FFC7                  	inc rdi
  8471 000056E9 EBEB                    	jmp .L_tc_recycle_frame_loop_003a
  8472                                  .L_tc_recycle_frame_done_003a:
  8473 000056EB 4889EC                  	mov rsp, rbp	; point to last argument
  8474 000056EE 5D                      	pop rbp
  8475 000056EF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8476                                  .L_if_end_0014:
  8477 000056F2 C9                      	leave
  8478 000056F3 C21800                  	ret AND_KILL_FRAME(1)
  8479 000056F6 E983010000              	jmp .L_lambda_opt_end_0007	; new closure is in rax
  8480                                  .L_lambda_opt_arity_check_more_0007:
  8481 000056FB 488B442410              	mov rax, qword[rsp + 2 * 8]
  8482 00005700 4889C7                  	mov rdi, rax
  8483 00005703 49B9-                   	mov r9, sob_nil
  8483 00005705 [0100000000000000] 
  8484 0000570D 4C8B442410              	mov r8, qword[rsp+2*8]
  8485                                  .L_lambda_opt_stack_shrink_loop_0007:
  8486 00005712 4983F800                	cmp r8, 0
  8487 00005716 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0007
  8488 00005718 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  8489 0000571D BF11000000              	mov rdi, 1+8+8	;for pair
  8490 00005722 E8AA130100              	call malloc	 ;to create the pair in the stack
  8491 00005727 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  8492 0000572A 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  8493 0000572E 4C894809                 	mov qword[rax+1+8],r9
  8494 00005732 4989C1                  	mov r9 , rax	 ; for the recursion 
  8495 00005735 49FFC8                  	dec r8
  8496 00005738 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0007
  8497                                  .L_lambda_opt_stack_shrink_loop_exit_0007:
  8498 0000573A 488B442410              	mov rax, qword[rsp + 2 * 8]
  8499 0000573F BF01000000              	mov rdi, 1
  8500 00005744 4829F8                  	sub rax, rdi
  8501 00005747 4889C7                  	mov rdi, rax
  8502 0000574A 486BC008                	imul rax,8
  8503 0000574E 4801C4                  	add rsp, rax
  8504 00005751 4889E0                  	mov rax, rsp
  8505 00005754 4989F8                  	mov r8, rdi
  8506 00005757 4D6BC008                	imul r8, 8
  8507 0000575B 4C29C0                  	sub rax, r8
  8508 0000575E 4989C2                  	mov r10, rax	; holds the original ret in the stack
  8509 00005761 4983C218                	add r10, 8*3
  8510 00005765 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  8511 00005769 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  8512 0000576C 4D6BC008                	imul r8,8
  8513 00005770 4C01C0                  	add rax, r8
  8514 00005773 4C8908                  	mov qword[rax] ,r9
  8515 00005776 4983EA18                 	sub r10, 8*3
  8516 0000577A 48C744241001000000      	mov qword [rsp+2*8], 1
  8517 00005783 498B4208                	mov rax, qword[r10 + 1 * 8]
  8518 00005787 4889442408              	mov qword[rsp + 1*8] ,rax
  8519 0000578C 498B02                  	mov rax, qword[r10]
  8520 0000578F 48890424                	mov qword[rsp], rax
  8521 00005793 C8000000                	enter 0, 0
  8522                                  	; preparing a non-tail-call
  8523 00005797 488B4520                	mov rax, PARAM(0)	; param s
  8524 0000579B 50                      	push rax
  8525 0000579C 6A01                    	push 1	; arg count
  8526 0000579E 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8527 000057A6 803805                  	cmp byte [rax], T_undefined
  8528 000057A9 0F84F5110100            	je L_error_fvar_undefined
  8529 000057AF 803804                  	cmp byte [rax], T_closure
  8530 000057B2 0F8570120100            	jne L_error_non_closure
  8531 000057B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8532 000057BB FF5009                  	call SOB_CLOSURE_CODE(rax)
  8533 000057BE 483D[02000000]          	cmp rax, sob_boolean_false
  8534 000057C4 740F                    	je .L_if_else_0013
  8535 000057C6 48B8-                   	mov rax, L_constants + 1
  8535 000057C8 [0100000000000000] 
  8536 000057D0 E9A5000000              	jmp .L_if_end_0013
  8537                                  .L_if_else_0013:
  8538                                  	; preparing a tail-call
  8539                                  	; preparing a non-tail-call
  8540 000057D5 488B4520                	mov rax, PARAM(0)	; param s
  8541 000057D9 50                      	push rax
  8542 000057DA 6A01                    	push 1	; arg count
  8543 000057DC 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8544 000057E4 803805                  	cmp byte [rax], T_undefined
  8545 000057E7 0F84B7110100            	je L_error_fvar_undefined
  8546 000057ED 803804                  	cmp byte [rax], T_closure
  8547 000057F0 0F8532120100            	jne L_error_non_closure
  8548 000057F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8549 000057F9 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8550 000057FC 50                      	push rax
  8551                                  	; preparing a non-tail-call
  8552 000057FD 488B4520                	mov rax, PARAM(0)	; param s
  8553 00005801 50                      	push rax
  8554 00005802 6A01                    	push 1	; arg count
  8555 00005804 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8556 0000580C 803805                  	cmp byte [rax], T_undefined
  8557 0000580F 0F848F110100            	je L_error_fvar_undefined
  8558 00005815 803804                  	cmp byte [rax], T_closure
  8559 00005818 0F850A120100            	jne L_error_non_closure
  8560 0000581E FF7001                  	push SOB_CLOSURE_ENV(rax)
  8561 00005821 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8562 00005824 50                      	push rax
  8563 00005825 6A02                    	push 2	; arg count
  8564 00005827 488B4510                	mov rax, ENV
  8565 0000582B 488B00                  	mov rax, qword [rax + 8 * 0]
  8566 0000582E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run-1
  8567 00005831 488B00                  	mov rax, qword [rax]
  8568 00005834 803804                  	cmp byte [rax], T_closure
  8569 00005837 0F85EB110100            	jne L_error_non_closure
  8570 0000583D FF7001                  	push SOB_CLOSURE_ENV(rax)
  8571 00005840 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  8572 00005843 FF7500                  	push qword[rbp]
  8573 00005846 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  8574 0000584B 48895D10                	mov qword[rbp + 8*2],rbx
  8575 0000584F 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  8576 00005857 BF00000000              	mov rdi,0
  8577 0000585C EB00                    	jmp .L_tc_recycle_frame_loop_0039
  8578                                  .L_tc_recycle_frame_loop_0039:
  8579 0000585E 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  8580 00005862 740F                    	je .L_tc_recycle_frame_done_0039
  8581 00005864 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  8582 00005869 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  8583 0000586E 48FFC7                  	inc rdi
  8584 00005871 EBEB                    	jmp .L_tc_recycle_frame_loop_0039
  8585                                  .L_tc_recycle_frame_done_0039:
  8586 00005873 4889EC                  	mov rsp, rbp	; point to last argument
  8587 00005876 5D                      	pop rbp
  8588 00005877 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8589                                  .L_if_end_0013:
  8590 0000587A C9                      	leave
  8591 0000587B C21800                  	ret AND_KILL_FRAME(1)
  8592                                  .L_lambda_opt_end_0007:	; new closure is in rax
  8593 0000587E C9                      	leave
  8594 0000587F C22000                  	ret AND_KILL_FRAME(2)
  8595                                  .L_lambda_simple_end_0031:	; new closure is in rax
  8596 00005882 803804                  	cmp byte [rax], T_closure
  8597 00005885 0F859D110100            	jne L_error_non_closure
  8598 0000588B FF7001                  	push SOB_CLOSURE_ENV(rax)
  8599 0000588E FF5009                  	call SOB_CLOSURE_CODE(rax)
  8600 00005891 48890425[E50F0000]      	mov qword [free_var_32], rax
  8601 00005899 48B8-                   	mov rax, sob_void
  8601 0000589B [0000000000000000] 
  8602                                  
  8603 000058A3 4889C7                  	mov rdi, rax
  8604 000058A6 E87B140100              	call print_sexpr_if_not_void
  8605                                  	; preparing a non-tail-call
  8606 000058AB 48B8-                   	mov rax, L_constants + 1993
  8606 000058AD [C907000000000000] 
  8607 000058B5 50                      	push rax
  8608 000058B6 6A01                    	push 1	; arg count
  8609 000058B8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8610 000058BD E80F120100              	call malloc
  8611 000058C2 50                      	push rax
  8612 000058C3 BF00000000              	mov rdi, 8 * 0	; new rib
  8613 000058C8 E804120100              	call malloc
  8614 000058CD 50                      	push rax
  8615 000058CE BF08000000              	mov rdi, 8 * 1	; extended env
  8616 000058D3 E8F9110100              	call malloc
  8617 000058D8 488B7D10                	mov rdi, ENV
  8618 000058DC BE00000000              	mov rsi, 0
  8619 000058E1 BA01000000              	mov rdx, 1
  8620                                  .L_lambda_simple_env_loop_0034:	; ext_env[i + 1] <-- env[i]
  8621 000058E6 4883FE00                	cmp rsi, 0
  8622 000058EA 7410                    	je .L_lambda_simple_env_end_0034
  8623 000058EC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8624 000058F0 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8625 000058F4 48FFC6                  	inc rsi
  8626 000058F7 48FFC2                  	inc rdx
  8627 000058FA EBEA                    	jmp .L_lambda_simple_env_loop_0034
  8628                                  .L_lambda_simple_env_end_0034:
  8629 000058FC 5B                      	pop rbx
  8630 000058FD BE00000000              	mov rsi, 0
  8631                                  .L_lambda_simple_params_loop_0034:	; copy params
  8632 00005902 4883FE00                	cmp rsi, 0
  8633 00005906 740E                    	je .L_lambda_simple_params_end_0034
  8634 00005908 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8635 0000590D 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8636 00005911 48FFC6                  	inc rsi
  8637 00005914 EBEC                    	jmp .L_lambda_simple_params_loop_0034
  8638                                  .L_lambda_simple_params_end_0034:
  8639 00005916 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8640 00005919 4889C3                  	mov rbx, rax
  8641 0000591C 58                      	pop rax
  8642 0000591D C60004                  	mov byte [rax], T_closure
  8643 00005920 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8644 00005924 48C74009[31590000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0034
  8645 0000592C E973040000              	jmp .L_lambda_simple_end_0034
  8646                                  .L_lambda_simple_code_0034:	; lambda-simple body
  8647 00005931 48837C241001            	cmp qword [rsp + 8 * 2], 1
  8648 00005937 740B                    	je .L_lambda_simple_arity_check_ok_0034
  8649 00005939 FF742410                	push qword [rsp + 8 * 2]
  8650 0000593D 6A01                    	push 1
  8651 0000593F E946110100              	jmp L_error_incorrect_arity_simple
  8652                                  .L_lambda_simple_arity_check_ok_0034:
  8653 00005944 C8000000                	enter 0, 0
  8654 00005948 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  8655 0000594C 488903                  	mov qword [rbx], rax
  8656                                  
  8657 0000594F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8658 00005954 E878110100              	call malloc
  8659 00005959 50                      	push rax
  8660 0000595A BF08000000              	mov rdi, 8 * 1	; new rib
  8661 0000595F E86D110100              	call malloc
  8662 00005964 50                      	push rax
  8663 00005965 BF10000000              	mov rdi, 8 * 2	; extended env
  8664 0000596A E862110100              	call malloc
  8665 0000596F 488B7D10                	mov rdi, ENV
  8666 00005973 BE00000000              	mov rsi, 0
  8667 00005978 BA01000000              	mov rdx, 1
  8668                                  .L_lambda_simple_env_loop_0035:	; ext_env[i + 1] <-- env[i]
  8669 0000597D 4883FE01                	cmp rsi, 1
  8670 00005981 7410                    	je .L_lambda_simple_env_end_0035
  8671 00005983 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8672 00005987 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8673 0000598B 48FFC6                  	inc rsi
  8674 0000598E 48FFC2                  	inc rdx
  8675 00005991 EBEA                    	jmp .L_lambda_simple_env_loop_0035
  8676                                  .L_lambda_simple_env_end_0035:
  8677 00005993 5B                      	pop rbx
  8678 00005994 BE00000000              	mov rsi, 0
  8679                                  .L_lambda_simple_params_loop_0035:	; copy params
  8680 00005999 4883FE01                	cmp rsi, 1
  8681 0000599D 740E                    	je .L_lambda_simple_params_end_0035
  8682 0000599F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8683 000059A4 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8684 000059A8 48FFC6                  	inc rsi
  8685 000059AB EBEC                    	jmp .L_lambda_simple_params_loop_0035
  8686                                  .L_lambda_simple_params_end_0035:
  8687 000059AD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8688 000059B0 4889C3                  	mov rbx, rax
  8689 000059B3 58                      	pop rax
  8690 000059B4 C60004                  	mov byte [rax], T_closure
  8691 000059B7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8692 000059BB 48C74009[C8590000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0035
  8693 000059C3 E960010000              	jmp .L_lambda_simple_end_0035
  8694                                  .L_lambda_simple_code_0035:	; lambda-simple body
  8695 000059C8 48837C241003            	cmp qword [rsp + 8 * 2], 3
  8696 000059CE 740B                    	je .L_lambda_simple_arity_check_ok_0035
  8697 000059D0 FF742410                	push qword [rsp + 8 * 2]
  8698 000059D4 6A03                    	push 3
  8699 000059D6 E9AF100100              	jmp L_error_incorrect_arity_simple
  8700                                  .L_lambda_simple_arity_check_ok_0035:
  8701 000059DB C8000000                	enter 0, 0
  8702                                  	; preparing a non-tail-call
  8703 000059DF 488B4530                	mov rax, PARAM(2)	; param ss
  8704 000059E3 50                      	push rax
  8705 000059E4 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  8706 000059EC 803805                  	cmp byte [rax], T_undefined
  8707 000059EF 0F84AF0F0100            	je L_error_fvar_undefined
  8708 000059F5 50                      	push rax
  8709 000059F6 6A02                    	push 2	; arg count
  8710 000059F8 488B0425[13150000]      	mov rax, qword [free_var_110]	; free var ormap
  8711 00005A00 803805                  	cmp byte [rax], T_undefined
  8712 00005A03 0F849B0F0100            	je L_error_fvar_undefined
  8713 00005A09 803804                  	cmp byte [rax], T_closure
  8714 00005A0C 0F8516100100            	jne L_error_non_closure
  8715 00005A12 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8716 00005A15 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8717 00005A18 483D[02000000]          	cmp rax, sob_boolean_false
  8718 00005A1E 7409                    	je .L_if_else_0015
  8719 00005A20 488B4528                	mov rax, PARAM(1)	; param unit
  8720 00005A24 E9FB000000              	jmp .L_if_end_0015
  8721                                  .L_if_else_0015:
  8722                                  	; preparing a tail-call
  8723                                  	; preparing a non-tail-call
  8724 00005A29 488B4530                	mov rax, PARAM(2)	; param ss
  8725 00005A2D 50                      	push rax
  8726 00005A2E 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  8727 00005A36 803805                  	cmp byte [rax], T_undefined
  8728 00005A39 0F84650F0100            	je L_error_fvar_undefined
  8729 00005A3F 50                      	push rax
  8730 00005A40 6A02                    	push 2	; arg count
  8731 00005A42 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8732 00005A4A 803805                  	cmp byte [rax], T_undefined
  8733 00005A4D 0F84510F0100            	je L_error_fvar_undefined
  8734 00005A53 803804                  	cmp byte [rax], T_closure
  8735 00005A56 0F85CC0F0100            	jne L_error_non_closure
  8736 00005A5C FF7001                  	push SOB_CLOSURE_ENV(rax)
  8737 00005A5F FF5009                  	call SOB_CLOSURE_CODE(rax)
  8738 00005A62 50                      	push rax
  8739                                  	; preparing a non-tail-call
  8740                                  	; preparing a non-tail-call
  8741 00005A63 488B4530                	mov rax, PARAM(2)	; param ss
  8742 00005A67 50                      	push rax
  8743 00005A68 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  8744 00005A70 803805                  	cmp byte [rax], T_undefined
  8745 00005A73 0F842B0F0100            	je L_error_fvar_undefined
  8746 00005A79 50                      	push rax
  8747 00005A7A 6A02                    	push 2	; arg count
  8748 00005A7C 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  8749 00005A84 803805                  	cmp byte [rax], T_undefined
  8750 00005A87 0F84170F0100            	je L_error_fvar_undefined
  8751 00005A8D 803804                  	cmp byte [rax], T_closure
  8752 00005A90 0F85920F0100            	jne L_error_non_closure
  8753 00005A96 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8754 00005A99 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8755 00005A9C 50                      	push rax
  8756 00005A9D 488B4528                	mov rax, PARAM(1)	; param unit
  8757 00005AA1 50                      	push rax
  8758 00005AA2 488B4520                	mov rax, PARAM(0)	; param f
  8759 00005AA6 50                      	push rax
  8760 00005AA7 6A03                    	push 3	; arg count
  8761 00005AA9 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  8762 00005AB1 803805                  	cmp byte [rax], T_undefined
  8763 00005AB4 0F84EA0E0100            	je L_error_fvar_undefined
  8764 00005ABA 803804                  	cmp byte [rax], T_closure
  8765 00005ABD 0F85650F0100            	jne L_error_non_closure
  8766 00005AC3 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8767 00005AC6 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8768 00005AC9 50                      	push rax
  8769 00005ACA 488B4520                	mov rax, PARAM(0)	; param f
  8770 00005ACE 50                      	push rax
  8771 00005ACF 6A03                    	push 3	; arg count
  8772 00005AD1 488B4510                	mov rax, ENV
  8773 00005AD5 488B00                  	mov rax, qword [rax + 8 * 0]
  8774 00005AD8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8775 00005ADB 488B00                  	mov rax, qword [rax]
  8776 00005ADE 803804                  	cmp byte [rax], T_closure
  8777 00005AE1 0F85410F0100            	jne L_error_non_closure
  8778 00005AE7 FF7001                  	push SOB_CLOSURE_ENV(rax)
  8779 00005AEA FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  8780 00005AED FF7500                  	push qword[rbp]
  8781 00005AF0 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  8782 00005AF5 48895D10                	mov qword[rbp + 8*2],rbx
  8783 00005AF9 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
  8784 00005B01 BF00000000              	mov rdi,0
  8785 00005B06 EB00                    	jmp .L_tc_recycle_frame_loop_003b
  8786                                  .L_tc_recycle_frame_loop_003b:
  8787 00005B08 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  8788 00005B0C 740F                    	je .L_tc_recycle_frame_done_003b
  8789 00005B0E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  8790 00005B13 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  8791 00005B18 48FFC7                  	inc rdi
  8792 00005B1B EBEB                    	jmp .L_tc_recycle_frame_loop_003b
  8793                                  .L_tc_recycle_frame_done_003b:
  8794 00005B1D 4889EC                  	mov rsp, rbp	; point to last argument
  8795 00005B20 5D                      	pop rbp
  8796 00005B21 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8797                                  .L_if_end_0015:
  8798 00005B24 C9                      	leave
  8799 00005B25 C22800                  	ret AND_KILL_FRAME(3)
  8800                                  .L_lambda_simple_end_0035:	; new closure is in rax
  8801 00005B28 50                      	push rax
  8802 00005B29 488B4520                	mov rax, PARAM(0)	; param run
  8803 00005B2D 8F00                    	pop qword [rax]
  8804 00005B2F 48B8-                   	mov rax, sob_void
  8804 00005B31 [0000000000000000] 
  8805                                  
  8806 00005B39 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  8807 00005B3E E88E0F0100              	call malloc
  8808 00005B43 50                      	push rax
  8809 00005B44 BF08000000              	mov rdi, 8 * 1	; new rib
  8810 00005B49 E8830F0100              	call malloc
  8811 00005B4E 50                      	push rax
  8812 00005B4F BF10000000              	mov rdi, 8 * 2	; extended env
  8813 00005B54 E8780F0100              	call malloc
  8814 00005B59 488B7D10                	mov rdi, ENV
  8815 00005B5D BE00000000              	mov rsi, 0
  8816 00005B62 BA01000000              	mov rdx, 1
  8817                                  .L_lambda_opt_env_loop_0008:	; ext_env[i + 1] <-- env[i]
  8818 00005B67 4883FE01                	cmp rsi, 1
  8819 00005B6B 7410                    	je .L_lambda_opt_env_end_0008
  8820 00005B6D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  8821 00005B71 48890CD0                	mov qword [rax + 8 * rdx], rcx
  8822 00005B75 48FFC6                  	inc rsi
  8823 00005B78 48FFC2                  	inc rdx
  8824 00005B7B EBEA                    	jmp .L_lambda_opt_env_loop_0008
  8825                                  .L_lambda_opt_env_end_0008:
  8826 00005B7D 5B                      	pop rbx
  8827 00005B7E BE00000000              	mov rsi, 0
  8828                                  .L_lambda_opt_params_loop_0008:	; copy params
  8829 00005B83 4883FE01                	cmp rsi, 1
  8830 00005B87 740E                    	je .L_lambda_opt_params_end_0008
  8831 00005B89 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  8832 00005B8E 488914F3                	mov qword [rbx + 8 * rsi], rdx
  8833 00005B92 48FFC6                  	inc rsi
  8834 00005B95 EBEC                    	jmp .L_lambda_opt_params_loop_0008
  8835                                  .L_lambda_opt_params_end_0008:
  8836 00005B97 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  8837 00005B9A 4889C3                  	mov rbx, rax
  8838 00005B9D 58                      	pop rax
  8839 00005B9E C60004                  	mov byte [rax], T_closure
  8840 00005BA1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  8841 00005BA5 48C74009[B25B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0008
  8842 00005BAD E9EE010000              	jmp .L_lambda_opt_end_0008
  8843                                  .L_lambda_opt_code_0008:	; lambda-opt body
  8844 00005BB2 48837C241002            	cmp qword [rsp + 8 * 2], 2
  8845 00005BB8 7411                    	je .L_lambda_opt_arity_check_exact_0008
  8846 00005BBA 0F8FC0000000            	jg .L_lambda_opt_arity_check_more_0008
  8847 00005BC0 FF742410                	push qword [rsp + 8 * 2]
  8848 00005BC4 6A02                    	push 2
  8849 00005BC6 E9D30E0100              	jmp L_error_incorrect_arity_opt
  8850                                  .L_lambda_opt_arity_check_exact_0008:
  8851 00005BCB 4883EC08                	sub rsp, 8
  8852 00005BCF 488B442408              	mov rax, qword[rsp + 8 *1]
  8853 00005BD4 48890424                	mov qword[rsp], rax  
  8854 00005BD8 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  8855 00005BDD 4889442408              	mov qword[rsp + 8 * 1], rax
  8856 00005BE2 B803000000              	mov rax, 3
  8857 00005BE7 4889442410              	mov qword[rsp + 8 *2], rax
  8858 00005BEC 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  8859 00005BF1 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  8860 00005BF6 488B442428              	mov rax, qword[rsp + 8 * (4 + 1)]
  8861 00005BFB 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  8862 00005C00 48B8-                   	mov rax, sob_nil
  8862 00005C02 [0100000000000000] 
  8863 00005C0A 4889442428              	mov qword[rsp + 8 * (3 + 2)], rax
  8864 00005C0F C8000000                	enter 0, 0
  8865                                  	; preparing a tail-call
  8866 00005C13 488B4530                	mov rax, PARAM(2)	; param ss
  8867 00005C17 50                      	push rax
  8868 00005C18 488B4528                	mov rax, PARAM(1)	; param unit
  8869 00005C1C 50                      	push rax
  8870 00005C1D 488B4520                	mov rax, PARAM(0)	; param f
  8871 00005C21 50                      	push rax
  8872 00005C22 6A03                    	push 3	; arg count
  8873 00005C24 488B4510                	mov rax, ENV
  8874 00005C28 488B00                  	mov rax, qword [rax + 8 * 0]
  8875 00005C2B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8876 00005C2E 488B00                  	mov rax, qword [rax]
  8877 00005C31 803804                  	cmp byte [rax], T_closure
  8878 00005C34 0F85EE0D0100            	jne L_error_non_closure
  8879 00005C3A FF7001                  	push SOB_CLOSURE_ENV(rax)
  8880 00005C3D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  8881 00005C40 FF7500                  	push qword[rbp]
  8882 00005C43 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  8883 00005C48 48895D10                	mov qword[rbp + 8*2],rbx
  8884 00005C4C 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
  8885 00005C54 BF00000000              	mov rdi,0
  8886 00005C59 EB00                    	jmp .L_tc_recycle_frame_loop_003d
  8887                                  .L_tc_recycle_frame_loop_003d:
  8888 00005C5B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  8889 00005C5F 740F                    	je .L_tc_recycle_frame_done_003d
  8890 00005C61 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  8891 00005C66 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  8892 00005C6B 48FFC7                  	inc rdi
  8893 00005C6E EBEB                    	jmp .L_tc_recycle_frame_loop_003d
  8894                                  .L_tc_recycle_frame_done_003d:
  8895 00005C70 4889EC                  	mov rsp, rbp	; point to last argument
  8896 00005C73 5D                      	pop rbp
  8897 00005C74 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8898 00005C77 C9                      	leave
  8899 00005C78 C22800                  	ret AND_KILL_FRAME(3)
  8900 00005C7B E920010000              	jmp .L_lambda_opt_end_0008	; new closure is in rax
  8901                                  .L_lambda_opt_arity_check_more_0008:
  8902 00005C80 488B442410              	mov rax, qword[rsp + 2 * 8]
  8903 00005C85 4889C7                  	mov rdi, rax
  8904 00005C88 49B9-                   	mov r9, sob_nil
  8904 00005C8A [0100000000000000] 
  8905 00005C92 4C8B442410              	mov r8, qword[rsp+2*8]
  8906                                  .L_lambda_opt_stack_shrink_loop_0008:
  8907 00005C97 4983F802                	cmp r8, 2
  8908 00005C9B 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0008
  8909 00005C9D 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  8910 00005CA2 BF11000000              	mov rdi, 1+8+8	;for pair
  8911 00005CA7 E8250E0100              	call malloc	 ;to create the pair in the stack
  8912 00005CAC C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  8913 00005CAF 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  8914 00005CB3 4C894809                 	mov qword[rax+1+8],r9
  8915 00005CB7 4989C1                  	mov r9 , rax	 ; for the recursion 
  8916 00005CBA 49FFC8                  	dec r8
  8917 00005CBD EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0008
  8918                                  .L_lambda_opt_stack_shrink_loop_exit_0008:
  8919 00005CBF 488B442410              	mov rax, qword[rsp + 2 * 8]
  8920 00005CC4 BF03000000              	mov rdi, 3
  8921 00005CC9 4829F8                  	sub rax, rdi
  8922 00005CCC 4889C7                  	mov rdi, rax
  8923 00005CCF 486BC008                	imul rax,8
  8924 00005CD3 4801C4                  	add rsp, rax
  8925 00005CD6 4889E0                  	mov rax, rsp
  8926 00005CD9 4989F8                  	mov r8, rdi
  8927 00005CDC 4D6BC008                	imul r8, 8
  8928 00005CE0 4C29C0                  	sub rax, r8
  8929 00005CE3 4989C2                  	mov r10, rax	; holds the original ret in the stack
  8930 00005CE6 4983C218                	add r10, 8*3
  8931 00005CEA 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  8932 00005CEE 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  8933 00005CF1 4D6BC008                	imul r8,8
  8934 00005CF5 4C01C0                  	add rax, r8
  8935 00005CF8 4C8908                  	mov qword[rax] ,r9
  8936 00005CFB 4D89D0                   	mov r8, r10
  8937 00005CFE 4983C008                	add r8, 8 * 1
  8938 00005D02 4D8B08                  	mov r9,qword[r8]
  8939 00005D05 4D890CF8                	mov qword [r8 + rdi * 8], r9
  8940 00005D09 4D89D0                  	mov r8, r10
  8941 00005D0C 4983C000                	add r8, 8 * 0
  8942 00005D10 4D8B08                  	mov r9,qword[r8]
  8943 00005D13 4D890CF8                	mov qword [r8 + rdi * 8], r9
  8944 00005D17 4983EA18                	sub r10, 8*3
  8945 00005D1B 48C744241003000000      	mov qword [rsp+2*8], 3
  8946 00005D24 498B4208                	mov rax, qword[r10 + 1 * 8]
  8947 00005D28 4889442408              	mov qword[rsp + 1*8] ,rax
  8948 00005D2D 498B02                  	mov rax, qword[r10]
  8949 00005D30 48890424                	mov qword[rsp], rax
  8950 00005D34 C8000000                	enter 0, 0
  8951                                  	; preparing a tail-call
  8952 00005D38 488B4530                	mov rax, PARAM(2)	; param ss
  8953 00005D3C 50                      	push rax
  8954 00005D3D 488B4528                	mov rax, PARAM(1)	; param unit
  8955 00005D41 50                      	push rax
  8956 00005D42 488B4520                	mov rax, PARAM(0)	; param f
  8957 00005D46 50                      	push rax
  8958 00005D47 6A03                    	push 3	; arg count
  8959 00005D49 488B4510                	mov rax, ENV
  8960 00005D4D 488B00                  	mov rax, qword [rax + 8 * 0]
  8961 00005D50 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  8962 00005D53 488B00                  	mov rax, qword [rax]
  8963 00005D56 803804                  	cmp byte [rax], T_closure
  8964 00005D59 0F85C90C0100            	jne L_error_non_closure
  8965 00005D5F FF7001                  	push SOB_CLOSURE_ENV(rax)
  8966 00005D62 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  8967 00005D65 FF7500                  	push qword[rbp]
  8968 00005D68 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  8969 00005D6D 48895D10                	mov qword[rbp + 8*2],rbx
  8970 00005D71 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
  8971 00005D79 BF00000000              	mov rdi,0
  8972 00005D7E EB00                    	jmp .L_tc_recycle_frame_loop_003c
  8973                                  .L_tc_recycle_frame_loop_003c:
  8974 00005D80 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  8975 00005D84 740F                    	je .L_tc_recycle_frame_done_003c
  8976 00005D86 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  8977 00005D8B 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  8978 00005D90 48FFC7                  	inc rdi
  8979 00005D93 EBEB                    	jmp .L_tc_recycle_frame_loop_003c
  8980                                  .L_tc_recycle_frame_done_003c:
  8981 00005D95 4889EC                  	mov rsp, rbp	; point to last argument
  8982 00005D98 5D                      	pop rbp
  8983 00005D99 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  8984 00005D9C C9                      	leave
  8985 00005D9D C22800                  	ret AND_KILL_FRAME(3)
  8986                                  .L_lambda_opt_end_0008:	; new closure is in rax
  8987 00005DA0 C9                      	leave
  8988 00005DA1 C21800                  	ret AND_KILL_FRAME(1)
  8989                                  .L_lambda_simple_end_0034:	; new closure is in rax
  8990 00005DA4 803804                  	cmp byte [rax], T_closure
  8991 00005DA7 0F857B0C0100            	jne L_error_non_closure
  8992 00005DAD FF7001                  	push SOB_CLOSURE_ENV(rax)
  8993 00005DB0 FF5009                  	call SOB_CLOSURE_CODE(rax)
  8994 00005DB3 48890425[6A130000]      	mov qword [free_var_85], rax
  8995 00005DBB 48B8-                   	mov rax, sob_void
  8995 00005DBD [0000000000000000] 
  8996                                  
  8997 00005DC5 4889C7                  	mov rdi, rax
  8998 00005DC8 E8590F0100              	call print_sexpr_if_not_void
  8999                                  	; preparing a non-tail-call
  9000 00005DCD 48B8-                   	mov rax, L_constants + 1993
  9000 00005DCF [C907000000000000] 
  9001 00005DD7 50                      	push rax
  9002 00005DD8 6A01                    	push 1	; arg count
  9003 00005DDA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9004 00005DDF E8ED0C0100              	call malloc
  9005 00005DE4 50                      	push rax
  9006 00005DE5 BF00000000              	mov rdi, 8 * 0	; new rib
  9007 00005DEA E8E20C0100              	call malloc
  9008 00005DEF 50                      	push rax
  9009 00005DF0 BF08000000              	mov rdi, 8 * 1	; extended env
  9010 00005DF5 E8D70C0100              	call malloc
  9011 00005DFA 488B7D10                	mov rdi, ENV
  9012 00005DFE BE00000000              	mov rsi, 0
  9013 00005E03 BA01000000              	mov rdx, 1
  9014                                  .L_lambda_simple_env_loop_0036:	; ext_env[i + 1] <-- env[i]
  9015 00005E08 4883FE00                	cmp rsi, 0
  9016 00005E0C 7410                    	je .L_lambda_simple_env_end_0036
  9017 00005E0E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9018 00005E12 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9019 00005E16 48FFC6                  	inc rsi
  9020 00005E19 48FFC2                  	inc rdx
  9021 00005E1C EBEA                    	jmp .L_lambda_simple_env_loop_0036
  9022                                  .L_lambda_simple_env_end_0036:
  9023 00005E1E 5B                      	pop rbx
  9024 00005E1F BE00000000              	mov rsi, 0
  9025                                  .L_lambda_simple_params_loop_0036:	; copy params
  9026 00005E24 4883FE00                	cmp rsi, 0
  9027 00005E28 740E                    	je .L_lambda_simple_params_end_0036
  9028 00005E2A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9029 00005E2F 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9030 00005E33 48FFC6                  	inc rsi
  9031 00005E36 EBEC                    	jmp .L_lambda_simple_params_loop_0036
  9032                                  .L_lambda_simple_params_end_0036:
  9033 00005E38 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9034 00005E3B 4889C3                  	mov rbx, rax
  9035 00005E3E 58                      	pop rax
  9036 00005E3F C60004                  	mov byte [rax], T_closure
  9037 00005E42 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9038 00005E46 48C74009[535E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0036
  9039 00005E4E E9C4040000              	jmp .L_lambda_simple_end_0036
  9040                                  .L_lambda_simple_code_0036:	; lambda-simple body
  9041 00005E53 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9042 00005E59 740B                    	je .L_lambda_simple_arity_check_ok_0036
  9043 00005E5B FF742410                	push qword [rsp + 8 * 2]
  9044 00005E5F 6A01                    	push 1
  9045 00005E61 E9240C0100              	jmp L_error_incorrect_arity_simple
  9046                                  .L_lambda_simple_arity_check_ok_0036:
  9047 00005E66 C8000000                	enter 0, 0
  9048 00005E6A 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
  9049 00005E6E 488903                  	mov qword [rbx], rax
  9050                                  
  9051 00005E71 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9052 00005E76 E8560C0100              	call malloc
  9053 00005E7B 50                      	push rax
  9054 00005E7C BF08000000              	mov rdi, 8 * 1	; new rib
  9055 00005E81 E84B0C0100              	call malloc
  9056 00005E86 50                      	push rax
  9057 00005E87 BF10000000              	mov rdi, 8 * 2	; extended env
  9058 00005E8C E8400C0100              	call malloc
  9059 00005E91 488B7D10                	mov rdi, ENV
  9060 00005E95 BE00000000              	mov rsi, 0
  9061 00005E9A BA01000000              	mov rdx, 1
  9062                                  .L_lambda_simple_env_loop_0037:	; ext_env[i + 1] <-- env[i]
  9063 00005E9F 4883FE01                	cmp rsi, 1
  9064 00005EA3 7410                    	je .L_lambda_simple_env_end_0037
  9065 00005EA5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9066 00005EA9 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9067 00005EAD 48FFC6                  	inc rsi
  9068 00005EB0 48FFC2                  	inc rdx
  9069 00005EB3 EBEA                    	jmp .L_lambda_simple_env_loop_0037
  9070                                  .L_lambda_simple_env_end_0037:
  9071 00005EB5 5B                      	pop rbx
  9072 00005EB6 BE00000000              	mov rsi, 0
  9073                                  .L_lambda_simple_params_loop_0037:	; copy params
  9074 00005EBB 4883FE01                	cmp rsi, 1
  9075 00005EBF 740E                    	je .L_lambda_simple_params_end_0037
  9076 00005EC1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9077 00005EC6 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9078 00005ECA 48FFC6                  	inc rsi
  9079 00005ECD EBEC                    	jmp .L_lambda_simple_params_loop_0037
  9080                                  .L_lambda_simple_params_end_0037:
  9081 00005ECF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9082 00005ED2 4889C3                  	mov rbx, rax
  9083 00005ED5 58                      	pop rax
  9084 00005ED6 C60004                  	mov byte [rax], T_closure
  9085 00005ED9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9086 00005EDD 48C74009[EA5E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0037
  9087 00005EE5 E9B1010000              	jmp .L_lambda_simple_end_0037
  9088                                  .L_lambda_simple_code_0037:	; lambda-simple body
  9089 00005EEA 48837C241003            	cmp qword [rsp + 8 * 2], 3
  9090 00005EF0 740B                    	je .L_lambda_simple_arity_check_ok_0037
  9091 00005EF2 FF742410                	push qword [rsp + 8 * 2]
  9092 00005EF6 6A03                    	push 3
  9093 00005EF8 E98D0B0100              	jmp L_error_incorrect_arity_simple
  9094                                  .L_lambda_simple_arity_check_ok_0037:
  9095 00005EFD C8000000                	enter 0, 0
  9096                                  	; preparing a non-tail-call
  9097 00005F01 488B4530                	mov rax, PARAM(2)	; param ss
  9098 00005F05 50                      	push rax
  9099 00005F06 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
  9100 00005F0E 803805                  	cmp byte [rax], T_undefined
  9101 00005F11 0F848D0A0100            	je L_error_fvar_undefined
  9102 00005F17 50                      	push rax
  9103 00005F18 6A02                    	push 2	; arg count
  9104 00005F1A 488B0425[13150000]      	mov rax, qword [free_var_110]	; free var ormap
  9105 00005F22 803805                  	cmp byte [rax], T_undefined
  9106 00005F25 0F84790A0100            	je L_error_fvar_undefined
  9107 00005F2B 803804                  	cmp byte [rax], T_closure
  9108 00005F2E 0F85F40A0100            	jne L_error_non_closure
  9109 00005F34 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9110 00005F37 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9111 00005F3A 483D[02000000]          	cmp rax, sob_boolean_false
  9112 00005F40 7409                    	je .L_if_else_0016
  9113 00005F42 488B4528                	mov rax, PARAM(1)	; param unit
  9114 00005F46 E94C010000              	jmp .L_if_end_0016
  9115                                  .L_if_else_0016:
  9116                                  	; preparing a tail-call
  9117                                  	; preparing a non-tail-call
  9118                                  	; preparing a non-tail-call
  9119 00005F4B 48B8-                   	mov rax, L_constants + 1
  9119 00005F4D [0100000000000000] 
  9120 00005F55 50                      	push rax
  9121                                  	; preparing a non-tail-call
  9122                                  	; preparing a non-tail-call
  9123 00005F56 488B4530                	mov rax, PARAM(2)	; param ss
  9124 00005F5A 50                      	push rax
  9125 00005F5B 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
  9126 00005F63 803805                  	cmp byte [rax], T_undefined
  9127 00005F66 0F84380A0100            	je L_error_fvar_undefined
  9128 00005F6C 50                      	push rax
  9129 00005F6D 6A02                    	push 2	; arg count
  9130 00005F6F 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  9131 00005F77 803805                  	cmp byte [rax], T_undefined
  9132 00005F7A 0F84240A0100            	je L_error_fvar_undefined
  9133 00005F80 803804                  	cmp byte [rax], T_closure
  9134 00005F83 0F859F0A0100            	jne L_error_non_closure
  9135 00005F89 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9136 00005F8C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9137 00005F8F 50                      	push rax
  9138 00005F90 488B4528                	mov rax, PARAM(1)	; param unit
  9139 00005F94 50                      	push rax
  9140 00005F95 488B4520                	mov rax, PARAM(0)	; param f
  9141 00005F99 50                      	push rax
  9142 00005F9A 6A03                    	push 3	; arg count
  9143 00005F9C 488B4510                	mov rax, ENV
  9144 00005FA0 488B00                  	mov rax, qword [rax + 8 * 0]
  9145 00005FA3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  9146 00005FA6 488B00                  	mov rax, qword [rax]
  9147 00005FA9 803804                  	cmp byte [rax], T_closure
  9148 00005FAC 0F85760A0100            	jne L_error_non_closure
  9149 00005FB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9150 00005FB5 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9151 00005FB8 50                      	push rax
  9152 00005FB9 6A02                    	push 2	; arg count
  9153 00005FBB 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
  9154 00005FC3 803805                  	cmp byte [rax], T_undefined
  9155 00005FC6 0F84D8090100            	je L_error_fvar_undefined
  9156 00005FCC 803804                  	cmp byte [rax], T_closure
  9157 00005FCF 0F85530A0100            	jne L_error_non_closure
  9158 00005FD5 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9159 00005FD8 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9160 00005FDB 50                      	push rax
  9161                                  	; preparing a non-tail-call
  9162 00005FDC 488B4530                	mov rax, PARAM(2)	; param ss
  9163 00005FE0 50                      	push rax
  9164 00005FE1 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
  9165 00005FE9 803805                  	cmp byte [rax], T_undefined
  9166 00005FEC 0F84B2090100            	je L_error_fvar_undefined
  9167 00005FF2 50                      	push rax
  9168 00005FF3 6A02                    	push 2	; arg count
  9169 00005FF5 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
  9170 00005FFD 803805                  	cmp byte [rax], T_undefined
  9171 00006000 0F849E090100            	je L_error_fvar_undefined
  9172 00006006 803804                  	cmp byte [rax], T_closure
  9173 00006009 0F85190A0100            	jne L_error_non_closure
  9174 0000600F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9175 00006012 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9176 00006015 50                      	push rax
  9177 00006016 6A02                    	push 2	; arg count
  9178 00006018 488B0425[E50F0000]      	mov rax, qword [free_var_32]	; free var append
  9179 00006020 803805                  	cmp byte [rax], T_undefined
  9180 00006023 0F847B090100            	je L_error_fvar_undefined
  9181 00006029 803804                  	cmp byte [rax], T_closure
  9182 0000602C 0F85F6090100            	jne L_error_non_closure
  9183 00006032 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9184 00006035 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9185 00006038 50                      	push rax
  9186 00006039 488B4520                	mov rax, PARAM(0)	; param f
  9187 0000603D 50                      	push rax
  9188 0000603E 6A02                    	push 2	; arg count
  9189 00006040 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
  9190 00006048 803805                  	cmp byte [rax], T_undefined
  9191 0000604B 0F8453090100            	je L_error_fvar_undefined
  9192 00006051 803804                  	cmp byte [rax], T_closure
  9193 00006054 0F85CE090100            	jne L_error_non_closure
  9194 0000605A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9195 0000605D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9196 00006060 FF7500                  	push qword[rbp]
  9197 00006063 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9198 00006068 48895D10                	mov qword[rbp + 8*2],rbx
  9199 0000606C 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  9200 00006074 BF00000000              	mov rdi,0
  9201 00006079 EB00                    	jmp .L_tc_recycle_frame_loop_003e
  9202                                  .L_tc_recycle_frame_loop_003e:
  9203 0000607B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9204 0000607F 740F                    	je .L_tc_recycle_frame_done_003e
  9205 00006081 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9206 00006086 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9207 0000608B 48FFC7                  	inc rdi
  9208 0000608E EBEB                    	jmp .L_tc_recycle_frame_loop_003e
  9209                                  .L_tc_recycle_frame_done_003e:
  9210 00006090 4889EC                  	mov rsp, rbp	; point to last argument
  9211 00006093 5D                      	pop rbp
  9212 00006094 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9213                                  .L_if_end_0016:
  9214 00006097 C9                      	leave
  9215 00006098 C22800                  	ret AND_KILL_FRAME(3)
  9216                                  .L_lambda_simple_end_0037:	; new closure is in rax
  9217 0000609B 50                      	push rax
  9218 0000609C 488B4520                	mov rax, PARAM(0)	; param run
  9219 000060A0 8F00                    	pop qword [rax]
  9220 000060A2 48B8-                   	mov rax, sob_void
  9220 000060A4 [0000000000000000] 
  9221                                  
  9222 000060AC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9223 000060B1 E81B0A0100              	call malloc
  9224 000060B6 50                      	push rax
  9225 000060B7 BF08000000              	mov rdi, 8 * 1	; new rib
  9226 000060BC E8100A0100              	call malloc
  9227 000060C1 50                      	push rax
  9228 000060C2 BF10000000              	mov rdi, 8 * 2	; extended env
  9229 000060C7 E8050A0100              	call malloc
  9230 000060CC 488B7D10                	mov rdi, ENV
  9231 000060D0 BE00000000              	mov rsi, 0
  9232 000060D5 BA01000000              	mov rdx, 1
  9233                                  .L_lambda_opt_env_loop_0009:	; ext_env[i + 1] <-- env[i]
  9234 000060DA 4883FE01                	cmp rsi, 1
  9235 000060DE 7410                    	je .L_lambda_opt_env_end_0009
  9236 000060E0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9237 000060E4 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9238 000060E8 48FFC6                  	inc rsi
  9239 000060EB 48FFC2                  	inc rdx
  9240 000060EE EBEA                    	jmp .L_lambda_opt_env_loop_0009
  9241                                  .L_lambda_opt_env_end_0009:
  9242 000060F0 5B                      	pop rbx
  9243 000060F1 BE00000000              	mov rsi, 0
  9244                                  .L_lambda_opt_params_loop_0009:	; copy params
  9245 000060F6 4883FE01                	cmp rsi, 1
  9246 000060FA 740E                    	je .L_lambda_opt_params_end_0009
  9247 000060FC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9248 00006101 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9249 00006105 48FFC6                  	inc rsi
  9250 00006108 EBEC                    	jmp .L_lambda_opt_params_loop_0009
  9251                                  .L_lambda_opt_params_end_0009:
  9252 0000610A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9253 0000610D 4889C3                  	mov rbx, rax
  9254 00006110 58                      	pop rax
  9255 00006111 C60004                  	mov byte [rax], T_closure
  9256 00006114 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9257 00006118 48C74009[25610000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0009
  9258 00006120 E9EE010000              	jmp .L_lambda_opt_end_0009
  9259                                  .L_lambda_opt_code_0009:	; lambda-opt body
  9260 00006125 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9261 0000612B 7411                    	je .L_lambda_opt_arity_check_exact_0009
  9262 0000612D 0F8FC0000000            	jg .L_lambda_opt_arity_check_more_0009
  9263 00006133 FF742410                	push qword [rsp + 8 * 2]
  9264 00006137 6A02                    	push 2
  9265 00006139 E960090100              	jmp L_error_incorrect_arity_opt
  9266                                  .L_lambda_opt_arity_check_exact_0009:
  9267 0000613E 4883EC08                	sub rsp, 8
  9268 00006142 488B442408              	mov rax, qword[rsp + 8 *1]
  9269 00006147 48890424                	mov qword[rsp], rax  
  9270 0000614B 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
  9271 00006150 4889442408              	mov qword[rsp + 8 * 1], rax
  9272 00006155 B803000000              	mov rax, 3
  9273 0000615A 4889442410              	mov qword[rsp + 8 *2], rax
  9274 0000615F 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
  9275 00006164 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
  9276 00006169 488B442428              	mov rax, qword[rsp + 8 * (4 + 1)]
  9277 0000616E 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
  9278 00006173 48B8-                   	mov rax, sob_nil
  9278 00006175 [0100000000000000] 
  9279 0000617D 4889442428              	mov qword[rsp + 8 * (3 + 2)], rax
  9280 00006182 C8000000                	enter 0, 0
  9281                                  	; preparing a tail-call
  9282 00006186 488B4530                	mov rax, PARAM(2)	; param ss
  9283 0000618A 50                      	push rax
  9284 0000618B 488B4528                	mov rax, PARAM(1)	; param unit
  9285 0000618F 50                      	push rax
  9286 00006190 488B4520                	mov rax, PARAM(0)	; param f
  9287 00006194 50                      	push rax
  9288 00006195 6A03                    	push 3	; arg count
  9289 00006197 488B4510                	mov rax, ENV
  9290 0000619B 488B00                  	mov rax, qword [rax + 8 * 0]
  9291 0000619E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  9292 000061A1 488B00                  	mov rax, qword [rax]
  9293 000061A4 803804                  	cmp byte [rax], T_closure
  9294 000061A7 0F857B080100            	jne L_error_non_closure
  9295 000061AD FF7001                  	push SOB_CLOSURE_ENV(rax)
  9296 000061B0 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9297 000061B3 FF7500                  	push qword[rbp]
  9298 000061B6 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9299 000061BB 48895D10                	mov qword[rbp + 8*2],rbx
  9300 000061BF 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
  9301 000061C7 BF00000000              	mov rdi,0
  9302 000061CC EB00                    	jmp .L_tc_recycle_frame_loop_0040
  9303                                  .L_tc_recycle_frame_loop_0040:
  9304 000061CE 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9305 000061D2 740F                    	je .L_tc_recycle_frame_done_0040
  9306 000061D4 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9307 000061D9 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9308 000061DE 48FFC7                  	inc rdi
  9309 000061E1 EBEB                    	jmp .L_tc_recycle_frame_loop_0040
  9310                                  .L_tc_recycle_frame_done_0040:
  9311 000061E3 4889EC                  	mov rsp, rbp	; point to last argument
  9312 000061E6 5D                      	pop rbp
  9313 000061E7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9314 000061EA C9                      	leave
  9315 000061EB C22800                  	ret AND_KILL_FRAME(3)
  9316 000061EE E920010000              	jmp .L_lambda_opt_end_0009	; new closure is in rax
  9317                                  .L_lambda_opt_arity_check_more_0009:
  9318 000061F3 488B442410              	mov rax, qword[rsp + 2 * 8]
  9319 000061F8 4889C7                  	mov rdi, rax
  9320 000061FB 49B9-                   	mov r9, sob_nil
  9320 000061FD [0100000000000000] 
  9321 00006205 4C8B442410              	mov r8, qword[rsp+2*8]
  9322                                  .L_lambda_opt_stack_shrink_loop_0009:
  9323 0000620A 4983F802                	cmp r8, 2
  9324 0000620E 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0009
  9325 00006210 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
  9326 00006215 BF11000000              	mov rdi, 1+8+8	;for pair
  9327 0000621A E8B2080100              	call malloc	 ;to create the pair in the stack
  9328 0000621F C60021                  	mov byte [rax], T_pair	 ; to make it a pair
  9329 00006222 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
  9330 00006226 4C894809                 	mov qword[rax+1+8],r9
  9331 0000622A 4989C1                  	mov r9 , rax	 ; for the recursion 
  9332 0000622D 49FFC8                  	dec r8
  9333 00006230 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0009
  9334                                  .L_lambda_opt_stack_shrink_loop_exit_0009:
  9335 00006232 488B442410              	mov rax, qword[rsp + 2 * 8]
  9336 00006237 BF03000000              	mov rdi, 3
  9337 0000623C 4829F8                  	sub rax, rdi
  9338 0000623F 4889C7                  	mov rdi, rax
  9339 00006242 486BC008                	imul rax,8
  9340 00006246 4801C4                  	add rsp, rax
  9341 00006249 4889E0                  	mov rax, rsp
  9342 0000624C 4989F8                  	mov r8, rdi
  9343 0000624F 4D6BC008                	imul r8, 8
  9344 00006253 4C29C0                  	sub rax, r8
  9345 00006256 4989C2                  	mov r10, rax	; holds the original ret in the stack
  9346 00006259 4983C218                	add r10, 8*3
  9347 0000625D 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
  9348 00006261 4C8B00                  	mov r8, qword[rax] ;arg count = r8
  9349 00006264 4D6BC008                	imul r8,8
  9350 00006268 4C01C0                  	add rax, r8
  9351 0000626B 4C8908                  	mov qword[rax] ,r9
  9352 0000626E 4D89D0                   	mov r8, r10
  9353 00006271 4983C008                	add r8, 8 * 1
  9354 00006275 4D8B08                  	mov r9,qword[r8]
  9355 00006278 4D890CF8                	mov qword [r8 + rdi * 8], r9
  9356 0000627C 4D89D0                  	mov r8, r10
  9357 0000627F 4983C000                	add r8, 8 * 0
  9358 00006283 4D8B08                  	mov r9,qword[r8]
  9359 00006286 4D890CF8                	mov qword [r8 + rdi * 8], r9
  9360 0000628A 4983EA18                	sub r10, 8*3
  9361 0000628E 48C744241003000000      	mov qword [rsp+2*8], 3
  9362 00006297 498B4208                	mov rax, qword[r10 + 1 * 8]
  9363 0000629B 4889442408              	mov qword[rsp + 1*8] ,rax
  9364 000062A0 498B02                  	mov rax, qword[r10]
  9365 000062A3 48890424                	mov qword[rsp], rax
  9366 000062A7 C8000000                	enter 0, 0
  9367                                  	; preparing a tail-call
  9368 000062AB 488B4530                	mov rax, PARAM(2)	; param ss
  9369 000062AF 50                      	push rax
  9370 000062B0 488B4528                	mov rax, PARAM(1)	; param unit
  9371 000062B4 50                      	push rax
  9372 000062B5 488B4520                	mov rax, PARAM(0)	; param f
  9373 000062B9 50                      	push rax
  9374 000062BA 6A03                    	push 3	; arg count
  9375 000062BC 488B4510                	mov rax, ENV
  9376 000062C0 488B00                  	mov rax, qword [rax + 8 * 0]
  9377 000062C3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
  9378 000062C6 488B00                  	mov rax, qword [rax]
  9379 000062C9 803804                  	cmp byte [rax], T_closure
  9380 000062CC 0F8556070100            	jne L_error_non_closure
  9381 000062D2 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9382 000062D5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9383 000062D8 FF7500                  	push qword[rbp]
  9384 000062DB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9385 000062E0 48895D10                	mov qword[rbp + 8*2],rbx
  9386 000062E4 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
  9387 000062EC BF00000000              	mov rdi,0
  9388 000062F1 EB00                    	jmp .L_tc_recycle_frame_loop_003f
  9389                                  .L_tc_recycle_frame_loop_003f:
  9390 000062F3 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9391 000062F7 740F                    	je .L_tc_recycle_frame_done_003f
  9392 000062F9 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9393 000062FE 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9394 00006303 48FFC7                  	inc rdi
  9395 00006306 EBEB                    	jmp .L_tc_recycle_frame_loop_003f
  9396                                  .L_tc_recycle_frame_done_003f:
  9397 00006308 4889EC                  	mov rsp, rbp	; point to last argument
  9398 0000630B 5D                      	pop rbp
  9399 0000630C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9400 0000630F C9                      	leave
  9401 00006310 C22800                  	ret AND_KILL_FRAME(3)
  9402                                  .L_lambda_opt_end_0009:	; new closure is in rax
  9403 00006313 C9                      	leave
  9404 00006314 C21800                  	ret AND_KILL_FRAME(1)
  9405                                  .L_lambda_simple_end_0036:	; new closure is in rax
  9406 00006317 803804                  	cmp byte [rax], T_closure
  9407 0000631A 0F8508070100            	jne L_error_non_closure
  9408 00006320 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9409 00006323 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9410 00006326 48890425[7B130000]      	mov qword [free_var_86], rax
  9411 0000632E 48B8-                   	mov rax, sob_void
  9411 00006330 [0000000000000000] 
  9412                                  
  9413 00006338 4889C7                  	mov rdi, rax
  9414 0000633B E8E6090100              	call print_sexpr_if_not_void
  9415                                  	; preparing a non-tail-call
  9416 00006340 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9417 00006345 E887070100              	call malloc
  9418 0000634A 50                      	push rax
  9419 0000634B BF00000000              	mov rdi, 8 * 0	; new rib
  9420 00006350 E87C070100              	call malloc
  9421 00006355 50                      	push rax
  9422 00006356 BF08000000              	mov rdi, 8 * 1	; extended env
  9423 0000635B E871070100              	call malloc
  9424 00006360 488B7D10                	mov rdi, ENV
  9425 00006364 BE00000000              	mov rsi, 0
  9426 00006369 BA01000000              	mov rdx, 1
  9427                                  .L_lambda_simple_env_loop_0038:	; ext_env[i + 1] <-- env[i]
  9428 0000636E 4883FE00                	cmp rsi, 0
  9429 00006372 7410                    	je .L_lambda_simple_env_end_0038
  9430 00006374 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9431 00006378 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9432 0000637C 48FFC6                  	inc rsi
  9433 0000637F 48FFC2                  	inc rdx
  9434 00006382 EBEA                    	jmp .L_lambda_simple_env_loop_0038
  9435                                  .L_lambda_simple_env_end_0038:
  9436 00006384 5B                      	pop rbx
  9437 00006385 BE00000000              	mov rsi, 0
  9438                                  .L_lambda_simple_params_loop_0038:	; copy params
  9439 0000638A 4883FE00                	cmp rsi, 0
  9440 0000638E 740E                    	je .L_lambda_simple_params_end_0038
  9441 00006390 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9442 00006395 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9443 00006399 48FFC6                  	inc rsi
  9444 0000639C EBEC                    	jmp .L_lambda_simple_params_loop_0038
  9445                                  .L_lambda_simple_params_end_0038:
  9446 0000639E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9447 000063A1 4889C3                  	mov rbx, rax
  9448 000063A4 58                      	pop rax
  9449 000063A5 C60004                  	mov byte [rax], T_closure
  9450 000063A8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9451 000063AC 48C74009[B9630000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0038
  9452 000063B4 E98A000000              	jmp .L_lambda_simple_end_0038
  9453                                  .L_lambda_simple_code_0038:	; lambda-simple body
  9454 000063B9 48837C241000            	cmp qword [rsp + 8 * 2], 0
  9455 000063BF 740B                    	je .L_lambda_simple_arity_check_ok_0038
  9456 000063C1 FF742410                	push qword [rsp + 8 * 2]
  9457 000063C5 6A00                    	push 0
  9458 000063C7 E9BE060100              	jmp L_error_incorrect_arity_simple
  9459                                  .L_lambda_simple_arity_check_ok_0038:
  9460 000063CC C8000000                	enter 0, 0
  9461                                  	; preparing a tail-call
  9462 000063D0 48B8-                   	mov rax, L_constants + 2187
  9462 000063D2 [8B08000000000000] 
  9463 000063DA 50                      	push rax
  9464 000063DB 48B8-                   	mov rax, L_constants + 2178
  9464 000063DD [8208000000000000] 
  9465 000063E5 50                      	push rax
  9466 000063E6 6A02                    	push 2	; arg count
  9467 000063E8 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
  9468 000063F0 803805                  	cmp byte [rax], T_undefined
  9469 000063F3 0F84AB050100            	je L_error_fvar_undefined
  9470 000063F9 803804                  	cmp byte [rax], T_closure
  9471 000063FC 0F8526060100            	jne L_error_non_closure
  9472 00006402 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9473 00006405 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9474 00006408 FF7500                  	push qword[rbp]
  9475 0000640B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9476 00006410 48895D10                	mov qword[rbp + 8*2],rbx
  9477 00006414 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  9478 0000641C BF00000000              	mov rdi,0
  9479 00006421 EB00                    	jmp .L_tc_recycle_frame_loop_0041
  9480                                  .L_tc_recycle_frame_loop_0041:
  9481 00006423 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9482 00006427 740F                    	je .L_tc_recycle_frame_done_0041
  9483 00006429 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9484 0000642E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9485 00006433 48FFC7                  	inc rdi
  9486 00006436 EBEB                    	jmp .L_tc_recycle_frame_loop_0041
  9487                                  .L_tc_recycle_frame_done_0041:
  9488 00006438 4889EC                  	mov rsp, rbp	; point to last argument
  9489 0000643B 5D                      	pop rbp
  9490 0000643C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9491 0000643F C9                      	leave
  9492 00006440 C21000                  	ret AND_KILL_FRAME(0)
  9493                                  .L_lambda_simple_end_0038:	; new closure is in rax
  9494 00006443 50                      	push rax
  9495 00006444 6A01                    	push 1	; arg count
  9496 00006446 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9497 0000644B E881060100              	call malloc
  9498 00006450 50                      	push rax
  9499 00006451 BF00000000              	mov rdi, 8 * 0	; new rib
  9500 00006456 E876060100              	call malloc
  9501 0000645B 50                      	push rax
  9502 0000645C BF08000000              	mov rdi, 8 * 1	; extended env
  9503 00006461 E86B060100              	call malloc
  9504 00006466 488B7D10                	mov rdi, ENV
  9505 0000646A BE00000000              	mov rsi, 0
  9506 0000646F BA01000000              	mov rdx, 1
  9507                                  .L_lambda_simple_env_loop_0039:	; ext_env[i + 1] <-- env[i]
  9508 00006474 4883FE00                	cmp rsi, 0
  9509 00006478 7410                    	je .L_lambda_simple_env_end_0039
  9510 0000647A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9511 0000647E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9512 00006482 48FFC6                  	inc rsi
  9513 00006485 48FFC2                  	inc rdx
  9514 00006488 EBEA                    	jmp .L_lambda_simple_env_loop_0039
  9515                                  .L_lambda_simple_env_end_0039:
  9516 0000648A 5B                      	pop rbx
  9517 0000648B BE00000000              	mov rsi, 0
  9518                                  .L_lambda_simple_params_loop_0039:	; copy params
  9519 00006490 4883FE00                	cmp rsi, 0
  9520 00006494 740E                    	je .L_lambda_simple_params_end_0039
  9521 00006496 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9522 0000649B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9523 0000649F 48FFC6                  	inc rsi
  9524 000064A2 EBEC                    	jmp .L_lambda_simple_params_loop_0039
  9525                                  .L_lambda_simple_params_end_0039:
  9526 000064A4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9527 000064A7 4889C3                  	mov rbx, rax
  9528 000064AA 58                      	pop rax
  9529 000064AB C60004                  	mov byte [rax], T_closure
  9530 000064AE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9531 000064B2 48C74009[BF640000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0039
  9532 000064BA E9000C0000              	jmp .L_lambda_simple_end_0039
  9533                                  .L_lambda_simple_code_0039:	; lambda-simple body
  9534 000064BF 48837C241001            	cmp qword [rsp + 8 * 2], 1
  9535 000064C5 740B                    	je .L_lambda_simple_arity_check_ok_0039
  9536 000064C7 FF742410                	push qword [rsp + 8 * 2]
  9537 000064CB 6A01                    	push 1
  9538 000064CD E9B8050100              	jmp L_error_incorrect_arity_simple
  9539                                  .L_lambda_simple_arity_check_ok_0039:
  9540 000064D2 C8000000                	enter 0, 0
  9541                                  	; preparing a tail-call
  9542 000064D6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
  9543 000064DB E8F1050100              	call malloc
  9544 000064E0 50                      	push rax
  9545 000064E1 BF08000000              	mov rdi, 8 * 1	; new rib
  9546 000064E6 E8E6050100              	call malloc
  9547 000064EB 50                      	push rax
  9548 000064EC BF10000000              	mov rdi, 8 * 2	; extended env
  9549 000064F1 E8DB050100              	call malloc
  9550 000064F6 488B7D10                	mov rdi, ENV
  9551 000064FA BE00000000              	mov rsi, 0
  9552 000064FF BA01000000              	mov rdx, 1
  9553                                  .L_lambda_simple_env_loop_003a:	; ext_env[i + 1] <-- env[i]
  9554 00006504 4883FE01                	cmp rsi, 1
  9555 00006508 7410                    	je .L_lambda_simple_env_end_003a
  9556 0000650A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
  9557 0000650E 48890CD0                	mov qword [rax + 8 * rdx], rcx
  9558 00006512 48FFC6                  	inc rsi
  9559 00006515 48FFC2                  	inc rdx
  9560 00006518 EBEA                    	jmp .L_lambda_simple_env_loop_003a
  9561                                  .L_lambda_simple_env_end_003a:
  9562 0000651A 5B                      	pop rbx
  9563 0000651B BE00000000              	mov rsi, 0
  9564                                  .L_lambda_simple_params_loop_003a:	; copy params
  9565 00006520 4883FE01                	cmp rsi, 1
  9566 00006524 740E                    	je .L_lambda_simple_params_end_003a
  9567 00006526 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
  9568 0000652B 488914F3                	mov qword [rbx + 8 * rsi], rdx
  9569 0000652F 48FFC6                  	inc rsi
  9570 00006532 EBEC                    	jmp .L_lambda_simple_params_loop_003a
  9571                                  .L_lambda_simple_params_end_003a:
  9572 00006534 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
  9573 00006537 4889C3                  	mov rbx, rax
  9574 0000653A 58                      	pop rax
  9575 0000653B C60004                  	mov byte [rax], T_closure
  9576 0000653E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
  9577 00006542 48C74009[4F650000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003a
  9578 0000654A E938080000              	jmp .L_lambda_simple_end_003a
  9579                                  .L_lambda_simple_code_003a:	; lambda-simple body
  9580 0000654F 48837C241002            	cmp qword [rsp + 8 * 2], 2
  9581 00006555 740B                    	je .L_lambda_simple_arity_check_ok_003a
  9582 00006557 FF742410                	push qword [rsp + 8 * 2]
  9583 0000655B 6A02                    	push 2
  9584 0000655D E928050100              	jmp L_error_incorrect_arity_simple
  9585                                  .L_lambda_simple_arity_check_ok_003a:
  9586 00006562 C8000000                	enter 0, 0
  9587                                  	; preparing a non-tail-call
  9588 00006566 488B4520                	mov rax, PARAM(0)	; param a
  9589 0000656A 50                      	push rax
  9590 0000656B 6A01                    	push 1	; arg count
  9591 0000656D 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9592 00006575 803805                  	cmp byte [rax], T_undefined
  9593 00006578 0F8426040100            	je L_error_fvar_undefined
  9594 0000657E 803804                  	cmp byte [rax], T_closure
  9595 00006581 0F85A1040100            	jne L_error_non_closure
  9596 00006587 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9597 0000658A FF5009                  	call SOB_CLOSURE_CODE(rax)
  9598 0000658D 483D[02000000]          	cmp rax, sob_boolean_false
  9599 00006593 0F8467020000            	je .L_if_else_0022
  9600                                  	; preparing a non-tail-call
  9601 00006599 488B4528                	mov rax, PARAM(1)	; param b
  9602 0000659D 50                      	push rax
  9603 0000659E 6A01                    	push 1	; arg count
  9604 000065A0 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9605 000065A8 803805                  	cmp byte [rax], T_undefined
  9606 000065AB 0F84F3030100            	je L_error_fvar_undefined
  9607 000065B1 803804                  	cmp byte [rax], T_closure
  9608 000065B4 0F856E040100            	jne L_error_non_closure
  9609 000065BA FF7001                  	push SOB_CLOSURE_ENV(rax)
  9610 000065BD FF5009                  	call SOB_CLOSURE_CODE(rax)
  9611 000065C0 483D[02000000]          	cmp rax, sob_boolean_false
  9612 000065C6 7468                    	je .L_if_else_0019
  9613                                  	; preparing a tail-call
  9614 000065C8 488B4528                	mov rax, PARAM(1)	; param b
  9615 000065CC 50                      	push rax
  9616 000065CD 488B4520                	mov rax, PARAM(0)	; param a
  9617 000065D1 50                      	push rax
  9618 000065D2 6A02                    	push 2	; arg count
  9619 000065D4 488B0425[800E0000]      	mov rax, qword [free_var_11]	; free var __bin-add-zz
  9620 000065DC 803805                  	cmp byte [rax], T_undefined
  9621 000065DF 0F84BF030100            	je L_error_fvar_undefined
  9622 000065E5 803804                  	cmp byte [rax], T_closure
  9623 000065E8 0F853A040100            	jne L_error_non_closure
  9624 000065EE FF7001                  	push SOB_CLOSURE_ENV(rax)
  9625 000065F1 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9626 000065F4 FF7500                  	push qword[rbp]
  9627 000065F7 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9628 000065FC 48895D10                	mov qword[rbp + 8*2],rbx
  9629 00006600 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  9630 00006608 BF00000000              	mov rdi,0
  9631 0000660D EB00                    	jmp .L_tc_recycle_frame_loop_0042
  9632                                  .L_tc_recycle_frame_loop_0042:
  9633 0000660F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9634 00006613 740F                    	je .L_tc_recycle_frame_done_0042
  9635 00006615 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9636 0000661A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9637 0000661F 48FFC7                  	inc rdi
  9638 00006622 EBEB                    	jmp .L_tc_recycle_frame_loop_0042
  9639                                  .L_tc_recycle_frame_done_0042:
  9640 00006624 4889EC                  	mov rsp, rbp	; point to last argument
  9641 00006627 5D                      	pop rbp
  9642 00006628 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9643 0000662B E9CB010000              	jmp .L_if_end_0019
  9644                                  .L_if_else_0019:
  9645                                  	; preparing a non-tail-call
  9646 00006630 488B4528                	mov rax, PARAM(1)	; param b
  9647 00006634 50                      	push rax
  9648 00006635 6A01                    	push 1	; arg count
  9649 00006637 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9650 0000663F 803805                  	cmp byte [rax], T_undefined
  9651 00006642 0F845C030100            	je L_error_fvar_undefined
  9652 00006648 803804                  	cmp byte [rax], T_closure
  9653 0000664B 0F85D7030100            	jne L_error_non_closure
  9654 00006651 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9655 00006654 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9656 00006657 483D[02000000]          	cmp rax, sob_boolean_false
  9657 0000665D 0F848B000000            	je .L_if_else_0018
  9658                                  	; preparing a tail-call
  9659 00006663 488B4528                	mov rax, PARAM(1)	; param b
  9660 00006667 50                      	push rax
  9661                                  	; preparing a non-tail-call
  9662 00006668 488B4520                	mov rax, PARAM(0)	; param a
  9663 0000666C 50                      	push rax
  9664 0000666D 6A01                    	push 1	; arg count
  9665 0000666F 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
  9666 00006677 803805                  	cmp byte [rax], T_undefined
  9667 0000667A 0F8424030100            	je L_error_fvar_undefined
  9668 00006680 803804                  	cmp byte [rax], T_closure
  9669 00006683 0F859F030100            	jne L_error_non_closure
  9670 00006689 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9671 0000668C FF5009                  	call SOB_CLOSURE_CODE(rax)
  9672 0000668F 50                      	push rax
  9673 00006690 6A02                    	push 2	; arg count
  9674 00006692 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9675 0000669A 803805                  	cmp byte [rax], T_undefined
  9676 0000669D 0F8401030100            	je L_error_fvar_undefined
  9677 000066A3 803804                  	cmp byte [rax], T_closure
  9678 000066A6 0F857C030100            	jne L_error_non_closure
  9679 000066AC FF7001                  	push SOB_CLOSURE_ENV(rax)
  9680 000066AF FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9681 000066B2 FF7500                  	push qword[rbp]
  9682 000066B5 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9683 000066BA 48895D10                	mov qword[rbp + 8*2],rbx
  9684 000066BE 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  9685 000066C6 BF00000000              	mov rdi,0
  9686 000066CB EB00                    	jmp .L_tc_recycle_frame_loop_0043
  9687                                  .L_tc_recycle_frame_loop_0043:
  9688 000066CD 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9689 000066D1 740F                    	je .L_tc_recycle_frame_done_0043
  9690 000066D3 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9691 000066D8 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9692 000066DD 48FFC7                  	inc rdi
  9693 000066E0 EBEB                    	jmp .L_tc_recycle_frame_loop_0043
  9694                                  .L_tc_recycle_frame_done_0043:
  9695 000066E2 4889EC                  	mov rsp, rbp	; point to last argument
  9696 000066E5 5D                      	pop rbp
  9697 000066E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9698 000066E9 E90D010000              	jmp .L_if_end_0018
  9699                                  .L_if_else_0018:
  9700                                  	; preparing a non-tail-call
  9701 000066EE 488B4528                	mov rax, PARAM(1)	; param b
  9702 000066F2 50                      	push rax
  9703 000066F3 6A01                    	push 1	; arg count
  9704 000066F5 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9705 000066FD 803805                  	cmp byte [rax], T_undefined
  9706 00006700 0F849E020100            	je L_error_fvar_undefined
  9707 00006706 803804                  	cmp byte [rax], T_closure
  9708 00006709 0F8519030100            	jne L_error_non_closure
  9709 0000670F FF7001                  	push SOB_CLOSURE_ENV(rax)
  9710 00006712 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9711 00006715 483D[02000000]          	cmp rax, sob_boolean_false
  9712 0000671B 0F8488000000            	je .L_if_else_0017
  9713                                  	; preparing a tail-call
  9714 00006721 488B4528                	mov rax, PARAM(1)	; param b
  9715 00006725 50                      	push rax
  9716                                  	; preparing a non-tail-call
  9717 00006726 488B4520                	mov rax, PARAM(0)	; param a
  9718 0000672A 50                      	push rax
  9719 0000672B 6A01                    	push 1	; arg count
  9720 0000672D 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
  9721 00006735 803805                  	cmp byte [rax], T_undefined
  9722 00006738 0F8466020100            	je L_error_fvar_undefined
  9723 0000673E 803804                  	cmp byte [rax], T_closure
  9724 00006741 0F85E1020100            	jne L_error_non_closure
  9725 00006747 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9726 0000674A FF5009                  	call SOB_CLOSURE_CODE(rax)
  9727 0000674D 50                      	push rax
  9728 0000674E 6A02                    	push 2	; arg count
  9729 00006750 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9730 00006758 803805                  	cmp byte [rax], T_undefined
  9731 0000675B 0F8443020100            	je L_error_fvar_undefined
  9732 00006761 803804                  	cmp byte [rax], T_closure
  9733 00006764 0F85BE020100            	jne L_error_non_closure
  9734 0000676A FF7001                  	push SOB_CLOSURE_ENV(rax)
  9735 0000676D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9736 00006770 FF7500                  	push qword[rbp]
  9737 00006773 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9738 00006778 48895D10                	mov qword[rbp + 8*2],rbx
  9739 0000677C 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  9740 00006784 BF00000000              	mov rdi,0
  9741 00006789 EB00                    	jmp .L_tc_recycle_frame_loop_0044
  9742                                  .L_tc_recycle_frame_loop_0044:
  9743 0000678B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9744 0000678F 740F                    	je .L_tc_recycle_frame_done_0044
  9745 00006791 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9746 00006796 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9747 0000679B 48FFC7                  	inc rdi
  9748 0000679E EBEB                    	jmp .L_tc_recycle_frame_loop_0044
  9749                                  .L_tc_recycle_frame_done_0044:
  9750 000067A0 4889EC                  	mov rsp, rbp	; point to last argument
  9751 000067A3 5D                      	pop rbp
  9752 000067A4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9753 000067A7 EB52                    	jmp .L_if_end_0017
  9754                                  .L_if_else_0017:
  9755                                  	; preparing a tail-call
  9756 000067A9 6A00                    	push 0	; arg count
  9757 000067AB 488B4510                	mov rax, ENV
  9758 000067AF 488B00                  	mov rax, qword [rax + 8 * 0]
  9759 000067B2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9760 000067B5 803804                  	cmp byte [rax], T_closure
  9761 000067B8 0F856A020100            	jne L_error_non_closure
  9762 000067BE FF7001                  	push SOB_CLOSURE_ENV(rax)
  9763 000067C1 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9764 000067C4 FF7500                  	push qword[rbp]
  9765 000067C7 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9766 000067CC 48895D10                	mov qword[rbp + 8*2],rbx
  9767 000067D0 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
  9768 000067D8 BF00000000              	mov rdi,0
  9769 000067DD EB00                    	jmp .L_tc_recycle_frame_loop_0045
  9770                                  .L_tc_recycle_frame_loop_0045:
  9771 000067DF 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9772 000067E3 740F                    	je .L_tc_recycle_frame_done_0045
  9773 000067E5 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9774 000067EA 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9775 000067EF 48FFC7                  	inc rdi
  9776 000067F2 EBEB                    	jmp .L_tc_recycle_frame_loop_0045
  9777                                  .L_tc_recycle_frame_done_0045:
  9778 000067F4 4889EC                  	mov rsp, rbp	; point to last argument
  9779 000067F7 5D                      	pop rbp
  9780 000067F8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9781                                  .L_if_end_0017:
  9782                                  .L_if_end_0018:
  9783                                  .L_if_end_0019:
  9784 000067FB E983050000              	jmp .L_if_end_0022
  9785                                  .L_if_else_0022:
  9786                                  	; preparing a non-tail-call
  9787 00006800 488B4520                	mov rax, PARAM(0)	; param a
  9788 00006804 50                      	push rax
  9789 00006805 6A01                    	push 1	; arg count
  9790 00006807 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9791 0000680F 803805                  	cmp byte [rax], T_undefined
  9792 00006812 0F848C010100            	je L_error_fvar_undefined
  9793 00006818 803804                  	cmp byte [rax], T_closure
  9794 0000681B 0F8507020100            	jne L_error_non_closure
  9795 00006821 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9796 00006824 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9797 00006827 483D[02000000]          	cmp rax, sob_boolean_false
  9798 0000682D 0F8467020000            	je .L_if_else_0021
  9799                                  	; preparing a non-tail-call
  9800 00006833 488B4528                	mov rax, PARAM(1)	; param b
  9801 00006837 50                      	push rax
  9802 00006838 6A01                    	push 1	; arg count
  9803 0000683A 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
  9804 00006842 803805                  	cmp byte [rax], T_undefined
  9805 00006845 0F8459010100            	je L_error_fvar_undefined
  9806 0000684B 803804                  	cmp byte [rax], T_closure
  9807 0000684E 0F85D4010100            	jne L_error_non_closure
  9808 00006854 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9809 00006857 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9810 0000685A 483D[02000000]          	cmp rax, sob_boolean_false
  9811 00006860 0F848B000000            	je .L_if_else_001c
  9812                                  	; preparing a tail-call
  9813                                  	; preparing a non-tail-call
  9814 00006866 488B4528                	mov rax, PARAM(1)	; param b
  9815 0000686A 50                      	push rax
  9816 0000686B 6A01                    	push 1	; arg count
  9817 0000686D 488B0425[A10F0000]      	mov rax, qword [free_var_28]	; free var __bin_integer_to_fraction
  9818 00006875 803805                  	cmp byte [rax], T_undefined
  9819 00006878 0F8426010100            	je L_error_fvar_undefined
  9820 0000687E 803804                  	cmp byte [rax], T_closure
  9821 00006881 0F85A1010100            	jne L_error_non_closure
  9822 00006887 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9823 0000688A FF5009                  	call SOB_CLOSURE_CODE(rax)
  9824 0000688D 50                      	push rax
  9825 0000688E 488B4520                	mov rax, PARAM(0)	; param a
  9826 00006892 50                      	push rax
  9827 00006893 6A02                    	push 2	; arg count
  9828 00006895 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9829 0000689D 803805                  	cmp byte [rax], T_undefined
  9830 000068A0 0F84FE000100            	je L_error_fvar_undefined
  9831 000068A6 803804                  	cmp byte [rax], T_closure
  9832 000068A9 0F8579010100            	jne L_error_non_closure
  9833 000068AF FF7001                  	push SOB_CLOSURE_ENV(rax)
  9834 000068B2 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9835 000068B5 FF7500                  	push qword[rbp]
  9836 000068B8 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9837 000068BD 48895D10                	mov qword[rbp + 8*2],rbx
  9838 000068C1 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  9839 000068C9 BF00000000              	mov rdi,0
  9840 000068CE EB00                    	jmp .L_tc_recycle_frame_loop_0046
  9841                                  .L_tc_recycle_frame_loop_0046:
  9842 000068D0 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9843 000068D4 740F                    	je .L_tc_recycle_frame_done_0046
  9844 000068D6 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9845 000068DB 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9846 000068E0 48FFC7                  	inc rdi
  9847 000068E3 EBEB                    	jmp .L_tc_recycle_frame_loop_0046
  9848                                  .L_tc_recycle_frame_done_0046:
  9849 000068E5 4889EC                  	mov rsp, rbp	; point to last argument
  9850 000068E8 5D                      	pop rbp
  9851 000068E9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9852 000068EC E9A4010000              	jmp .L_if_end_001c
  9853                                  .L_if_else_001c:
  9854                                  	; preparing a non-tail-call
  9855 000068F1 488B4528                	mov rax, PARAM(1)	; param b
  9856 000068F5 50                      	push rax
  9857 000068F6 6A01                    	push 1	; arg count
  9858 000068F8 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
  9859 00006900 803805                  	cmp byte [rax], T_undefined
  9860 00006903 0F849B000100            	je L_error_fvar_undefined
  9861 00006909 803804                  	cmp byte [rax], T_closure
  9862 0000690C 0F8516010100            	jne L_error_non_closure
  9863 00006912 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9864 00006915 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9865 00006918 483D[02000000]          	cmp rax, sob_boolean_false
  9866 0000691E 7468                    	je .L_if_else_001b
  9867                                  	; preparing a tail-call
  9868 00006920 488B4528                	mov rax, PARAM(1)	; param b
  9869 00006924 50                      	push rax
  9870 00006925 488B4520                	mov rax, PARAM(0)	; param a
  9871 00006929 50                      	push rax
  9872 0000692A 6A02                    	push 2	; arg count
  9873 0000692C 488B0425[5E0E0000]      	mov rax, qword [free_var_9]	; free var __bin-add-qq
  9874 00006934 803805                  	cmp byte [rax], T_undefined
  9875 00006937 0F8467000100            	je L_error_fvar_undefined
  9876 0000693D 803804                  	cmp byte [rax], T_closure
  9877 00006940 0F85E2000100            	jne L_error_non_closure
  9878 00006946 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9879 00006949 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9880 0000694C FF7500                  	push qword[rbp]
  9881 0000694F 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9882 00006954 48895D10                	mov qword[rbp + 8*2],rbx
  9883 00006958 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  9884 00006960 BF00000000              	mov rdi,0
  9885 00006965 EB00                    	jmp .L_tc_recycle_frame_loop_0047
  9886                                  .L_tc_recycle_frame_loop_0047:
  9887 00006967 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9888 0000696B 740F                    	je .L_tc_recycle_frame_done_0047
  9889 0000696D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9890 00006972 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9891 00006977 48FFC7                  	inc rdi
  9892 0000697A EBEB                    	jmp .L_tc_recycle_frame_loop_0047
  9893                                  .L_tc_recycle_frame_done_0047:
  9894 0000697C 4889EC                  	mov rsp, rbp	; point to last argument
  9895 0000697F 5D                      	pop rbp
  9896 00006980 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9897 00006983 E90D010000              	jmp .L_if_end_001b
  9898                                  .L_if_else_001b:
  9899                                  	; preparing a non-tail-call
  9900 00006988 488B4528                	mov rax, PARAM(1)	; param b
  9901 0000698C 50                      	push rax
  9902 0000698D 6A01                    	push 1	; arg count
  9903 0000698F 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9904 00006997 803805                  	cmp byte [rax], T_undefined
  9905 0000699A 0F8404000100            	je L_error_fvar_undefined
  9906 000069A0 803804                  	cmp byte [rax], T_closure
  9907 000069A3 0F857F000100            	jne L_error_non_closure
  9908 000069A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9909 000069AC FF5009                  	call SOB_CLOSURE_CODE(rax)
  9910 000069AF 483D[02000000]          	cmp rax, sob_boolean_false
  9911 000069B5 0F8488000000            	je .L_if_else_001a
  9912                                  	; preparing a tail-call
  9913 000069BB 488B4528                	mov rax, PARAM(1)	; param b
  9914 000069BF 50                      	push rax
  9915                                  	; preparing a non-tail-call
  9916 000069C0 488B4520                	mov rax, PARAM(0)	; param a
  9917 000069C4 50                      	push rax
  9918 000069C5 6A01                    	push 1	; arg count
  9919 000069C7 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
  9920 000069CF 803805                  	cmp byte [rax], T_undefined
  9921 000069D2 0F84CCFF0000            	je L_error_fvar_undefined
  9922 000069D8 803804                  	cmp byte [rax], T_closure
  9923 000069DB 0F8547000100            	jne L_error_non_closure
  9924 000069E1 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9925 000069E4 FF5009                  	call SOB_CLOSURE_CODE(rax)
  9926 000069E7 50                      	push rax
  9927 000069E8 6A02                    	push 2	; arg count
  9928 000069EA 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
  9929 000069F2 803805                  	cmp byte [rax], T_undefined
  9930 000069F5 0F84A9FF0000            	je L_error_fvar_undefined
  9931 000069FB 803804                  	cmp byte [rax], T_closure
  9932 000069FE 0F8524000100            	jne L_error_non_closure
  9933 00006A04 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9934 00006A07 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9935 00006A0A FF7500                  	push qword[rbp]
  9936 00006A0D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9937 00006A12 48895D10                	mov qword[rbp + 8*2],rbx
  9938 00006A16 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
  9939 00006A1E BF00000000              	mov rdi,0
  9940 00006A23 EB00                    	jmp .L_tc_recycle_frame_loop_0048
  9941                                  .L_tc_recycle_frame_loop_0048:
  9942 00006A25 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9943 00006A29 740F                    	je .L_tc_recycle_frame_done_0048
  9944 00006A2B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9945 00006A30 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9946 00006A35 48FFC7                  	inc rdi
  9947 00006A38 EBEB                    	jmp .L_tc_recycle_frame_loop_0048
  9948                                  .L_tc_recycle_frame_done_0048:
  9949 00006A3A 4889EC                  	mov rsp, rbp	; point to last argument
  9950 00006A3D 5D                      	pop rbp
  9951 00006A3E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9952 00006A41 EB52                    	jmp .L_if_end_001a
  9953                                  .L_if_else_001a:
  9954                                  	; preparing a tail-call
  9955 00006A43 6A00                    	push 0	; arg count
  9956 00006A45 488B4510                	mov rax, ENV
  9957 00006A49 488B00                  	mov rax, qword [rax + 8 * 0]
  9958 00006A4C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
  9959 00006A4F 803804                  	cmp byte [rax], T_closure
  9960 00006A52 0F85D0FF0000            	jne L_error_non_closure
  9961 00006A58 FF7001                  	push SOB_CLOSURE_ENV(rax)
  9962 00006A5B FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
  9963 00006A5E FF7500                  	push qword[rbp]
  9964 00006A61 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
  9965 00006A66 48895D10                	mov qword[rbp + 8*2],rbx
  9966 00006A6A 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
  9967 00006A72 BF00000000              	mov rdi,0
  9968 00006A77 EB00                    	jmp .L_tc_recycle_frame_loop_0049
  9969                                  .L_tc_recycle_frame_loop_0049:
  9970 00006A79 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
  9971 00006A7D 740F                    	je .L_tc_recycle_frame_done_0049
  9972 00006A7F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
  9973 00006A84 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
  9974 00006A89 48FFC7                  	inc rdi
  9975 00006A8C EBEB                    	jmp .L_tc_recycle_frame_loop_0049
  9976                                  .L_tc_recycle_frame_done_0049:
  9977 00006A8E 4889EC                  	mov rsp, rbp	; point to last argument
  9978 00006A91 5D                      	pop rbp
  9979 00006A92 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
  9980                                  .L_if_end_001a:
  9981                                  .L_if_end_001b:
  9982                                  .L_if_end_001c:
  9983 00006A95 E9E9020000              	jmp .L_if_end_0021
  9984                                  .L_if_else_0021:
  9985                                  	; preparing a non-tail-call
  9986 00006A9A 488B4520                	mov rax, PARAM(0)	; param a
  9987 00006A9E 50                      	push rax
  9988 00006A9F 6A01                    	push 1	; arg count
  9989 00006AA1 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
  9990 00006AA9 803805                  	cmp byte [rax], T_undefined
  9991 00006AAC 0F84F2FE0000            	je L_error_fvar_undefined
  9992 00006AB2 803804                  	cmp byte [rax], T_closure
  9993 00006AB5 0F856DFF0000            	jne L_error_non_closure
  9994 00006ABB FF7001                  	push SOB_CLOSURE_ENV(rax)
  9995 00006ABE FF5009                  	call SOB_CLOSURE_CODE(rax)
  9996 00006AC1 483D[02000000]          	cmp rax, sob_boolean_false
  9997 00006AC7 0F8464020000            	je .L_if_else_0020
  9998                                  	; preparing a non-tail-call
  9999 00006ACD 488B4528                	mov rax, PARAM(1)	; param b
 10000 00006AD1 50                      	push rax
 10001 00006AD2 6A01                    	push 1	; arg count
 10002 00006AD4 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10003 00006ADC 803805                  	cmp byte [rax], T_undefined
 10004 00006ADF 0F84BFFE0000            	je L_error_fvar_undefined
 10005 00006AE5 803804                  	cmp byte [rax], T_closure
 10006 00006AE8 0F853AFF0000            	jne L_error_non_closure
 10007 00006AEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10008 00006AF1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10009 00006AF4 483D[02000000]          	cmp rax, sob_boolean_false
 10010 00006AFA 0F848B000000            	je .L_if_else_001f
 10011                                  	; preparing a tail-call
 10012                                  	; preparing a non-tail-call
 10013 00006B00 488B4528                	mov rax, PARAM(1)	; param b
 10014 00006B04 50                      	push rax
 10015 00006B05 6A01                    	push 1	; arg count
 10016 00006B07 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10017 00006B0F 803805                  	cmp byte [rax], T_undefined
 10018 00006B12 0F848CFE0000            	je L_error_fvar_undefined
 10019 00006B18 803804                  	cmp byte [rax], T_closure
 10020 00006B1B 0F8507FF0000            	jne L_error_non_closure
 10021 00006B21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10022 00006B24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10023 00006B27 50                      	push rax
 10024 00006B28 488B4520                	mov rax, PARAM(0)	; param a
 10025 00006B2C 50                      	push rax
 10026 00006B2D 6A02                    	push 2	; arg count
 10027 00006B2F 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
 10028 00006B37 803805                  	cmp byte [rax], T_undefined
 10029 00006B3A 0F8464FE0000            	je L_error_fvar_undefined
 10030 00006B40 803804                  	cmp byte [rax], T_closure
 10031 00006B43 0F85DFFE0000            	jne L_error_non_closure
 10032 00006B49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10033 00006B4C FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10034 00006B4F FF7500                  	push qword[rbp]
 10035 00006B52 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10036 00006B57 48895D10                	mov qword[rbp + 8*2],rbx
 10037 00006B5B 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 10038 00006B63 BF00000000              	mov rdi,0
 10039 00006B68 EB00                    	jmp .L_tc_recycle_frame_loop_004a
 10040                                  .L_tc_recycle_frame_loop_004a:
 10041 00006B6A 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10042 00006B6E 740F                    	je .L_tc_recycle_frame_done_004a
 10043 00006B70 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10044 00006B75 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10045 00006B7A 48FFC7                  	inc rdi
 10046 00006B7D EBEB                    	jmp .L_tc_recycle_frame_loop_004a
 10047                                  .L_tc_recycle_frame_done_004a:
 10048 00006B7F 4889EC                  	mov rsp, rbp	; point to last argument
 10049 00006B82 5D                      	pop rbp
 10050 00006B83 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10051 00006B86 E9A4010000              	jmp .L_if_end_001f
 10052                                  .L_if_else_001f:
 10053                                  	; preparing a non-tail-call
 10054 00006B8B 488B4528                	mov rax, PARAM(1)	; param b
 10055 00006B8F 50                      	push rax
 10056 00006B90 6A01                    	push 1	; arg count
 10057 00006B92 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10058 00006B9A 803805                  	cmp byte [rax], T_undefined
 10059 00006B9D 0F8401FE0000            	je L_error_fvar_undefined
 10060 00006BA3 803804                  	cmp byte [rax], T_closure
 10061 00006BA6 0F857CFE0000            	jne L_error_non_closure
 10062 00006BAC FF7001                  	push SOB_CLOSURE_ENV(rax)
 10063 00006BAF FF5009                  	call SOB_CLOSURE_CODE(rax)
 10064 00006BB2 483D[02000000]          	cmp rax, sob_boolean_false
 10065 00006BB8 0F848B000000            	je .L_if_else_001e
 10066                                  	; preparing a tail-call
 10067                                  	; preparing a non-tail-call
 10068 00006BBE 488B4528                	mov rax, PARAM(1)	; param b
 10069 00006BC2 50                      	push rax
 10070 00006BC3 6A01                    	push 1	; arg count
 10071 00006BC5 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10072 00006BCD 803805                  	cmp byte [rax], T_undefined
 10073 00006BD0 0F84CEFD0000            	je L_error_fvar_undefined
 10074 00006BD6 803804                  	cmp byte [rax], T_closure
 10075 00006BD9 0F8549FE0000            	jne L_error_non_closure
 10076 00006BDF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10077 00006BE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10078 00006BE5 50                      	push rax
 10079 00006BE6 488B4520                	mov rax, PARAM(0)	; param a
 10080 00006BEA 50                      	push rax
 10081 00006BEB 6A02                    	push 2	; arg count
 10082 00006BED 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
 10083 00006BF5 803805                  	cmp byte [rax], T_undefined
 10084 00006BF8 0F84A6FD0000            	je L_error_fvar_undefined
 10085 00006BFE 803804                  	cmp byte [rax], T_closure
 10086 00006C01 0F8521FE0000            	jne L_error_non_closure
 10087 00006C07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10088 00006C0A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10089 00006C0D FF7500                  	push qword[rbp]
 10090 00006C10 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10091 00006C15 48895D10                	mov qword[rbp + 8*2],rbx
 10092 00006C19 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 10093 00006C21 BF00000000              	mov rdi,0
 10094 00006C26 EB00                    	jmp .L_tc_recycle_frame_loop_004b
 10095                                  .L_tc_recycle_frame_loop_004b:
 10096 00006C28 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10097 00006C2C 740F                    	je .L_tc_recycle_frame_done_004b
 10098 00006C2E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10099 00006C33 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10100 00006C38 48FFC7                  	inc rdi
 10101 00006C3B EBEB                    	jmp .L_tc_recycle_frame_loop_004b
 10102                                  .L_tc_recycle_frame_done_004b:
 10103 00006C3D 4889EC                  	mov rsp, rbp	; point to last argument
 10104 00006C40 5D                      	pop rbp
 10105 00006C41 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10106 00006C44 E9E6000000              	jmp .L_if_end_001e
 10107                                  .L_if_else_001e:
 10108                                  	; preparing a non-tail-call
 10109 00006C49 488B4528                	mov rax, PARAM(1)	; param b
 10110 00006C4D 50                      	push rax
 10111 00006C4E 6A01                    	push 1	; arg count
 10112 00006C50 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10113 00006C58 803805                  	cmp byte [rax], T_undefined
 10114 00006C5B 0F8443FD0000            	je L_error_fvar_undefined
 10115 00006C61 803804                  	cmp byte [rax], T_closure
 10116 00006C64 0F85BEFD0000            	jne L_error_non_closure
 10117 00006C6A FF7001                  	push SOB_CLOSURE_ENV(rax)
 10118 00006C6D FF5009                  	call SOB_CLOSURE_CODE(rax)
 10119 00006C70 483D[02000000]          	cmp rax, sob_boolean_false
 10120 00006C76 7465                    	je .L_if_else_001d
 10121                                  	; preparing a tail-call
 10122 00006C78 488B4528                	mov rax, PARAM(1)	; param b
 10123 00006C7C 50                      	push rax
 10124 00006C7D 488B4520                	mov rax, PARAM(0)	; param a
 10125 00006C81 50                      	push rax
 10126 00006C82 6A02                    	push 2	; arg count
 10127 00006C84 488B0425[6F0E0000]      	mov rax, qword [free_var_10]	; free var __bin-add-rr
 10128 00006C8C 803805                  	cmp byte [rax], T_undefined
 10129 00006C8F 0F840FFD0000            	je L_error_fvar_undefined
 10130 00006C95 803804                  	cmp byte [rax], T_closure
 10131 00006C98 0F858AFD0000            	jne L_error_non_closure
 10132 00006C9E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10133 00006CA1 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10134 00006CA4 FF7500                  	push qword[rbp]
 10135 00006CA7 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10136 00006CAC 48895D10                	mov qword[rbp + 8*2],rbx
 10137 00006CB0 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 10138 00006CB8 BF00000000              	mov rdi,0
 10139 00006CBD EB00                    	jmp .L_tc_recycle_frame_loop_004c
 10140                                  .L_tc_recycle_frame_loop_004c:
 10141 00006CBF 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10142 00006CC3 740F                    	je .L_tc_recycle_frame_done_004c
 10143 00006CC5 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10144 00006CCA 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10145 00006CCF 48FFC7                  	inc rdi
 10146 00006CD2 EBEB                    	jmp .L_tc_recycle_frame_loop_004c
 10147                                  .L_tc_recycle_frame_done_004c:
 10148 00006CD4 4889EC                  	mov rsp, rbp	; point to last argument
 10149 00006CD7 5D                      	pop rbp
 10150 00006CD8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10151 00006CDB EB52                    	jmp .L_if_end_001d
 10152                                  .L_if_else_001d:
 10153                                  	; preparing a tail-call
 10154 00006CDD 6A00                    	push 0	; arg count
 10155 00006CDF 488B4510                	mov rax, ENV
 10156 00006CE3 488B00                  	mov rax, qword [rax + 8 * 0]
 10157 00006CE6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10158 00006CE9 803804                  	cmp byte [rax], T_closure
 10159 00006CEC 0F8536FD0000            	jne L_error_non_closure
 10160 00006CF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10161 00006CF5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10162 00006CF8 FF7500                  	push qword[rbp]
 10163 00006CFB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10164 00006D00 48895D10                	mov qword[rbp + 8*2],rbx
 10165 00006D04 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 10166 00006D0C BF00000000              	mov rdi,0
 10167 00006D11 EB00                    	jmp .L_tc_recycle_frame_loop_004d
 10168                                  .L_tc_recycle_frame_loop_004d:
 10169 00006D13 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10170 00006D17 740F                    	je .L_tc_recycle_frame_done_004d
 10171 00006D19 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10172 00006D1E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10173 00006D23 48FFC7                  	inc rdi
 10174 00006D26 EBEB                    	jmp .L_tc_recycle_frame_loop_004d
 10175                                  .L_tc_recycle_frame_done_004d:
 10176 00006D28 4889EC                  	mov rsp, rbp	; point to last argument
 10177 00006D2B 5D                      	pop rbp
 10178 00006D2C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10179                                  .L_if_end_001d:
 10180                                  .L_if_end_001e:
 10181                                  .L_if_end_001f:
 10182 00006D2F EB52                    	jmp .L_if_end_0020
 10183                                  .L_if_else_0020:
 10184                                  	; preparing a tail-call
 10185 00006D31 6A00                    	push 0	; arg count
 10186 00006D33 488B4510                	mov rax, ENV
 10187 00006D37 488B00                  	mov rax, qword [rax + 8 * 0]
 10188 00006D3A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10189 00006D3D 803804                  	cmp byte [rax], T_closure
 10190 00006D40 0F85E2FC0000            	jne L_error_non_closure
 10191 00006D46 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10192 00006D49 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10193 00006D4C FF7500                  	push qword[rbp]
 10194 00006D4F 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10195 00006D54 48895D10                	mov qword[rbp + 8*2],rbx
 10196 00006D58 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 10197 00006D60 BF00000000              	mov rdi,0
 10198 00006D65 EB00                    	jmp .L_tc_recycle_frame_loop_004e
 10199                                  .L_tc_recycle_frame_loop_004e:
 10200 00006D67 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10201 00006D6B 740F                    	je .L_tc_recycle_frame_done_004e
 10202 00006D6D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10203 00006D72 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10204 00006D77 48FFC7                  	inc rdi
 10205 00006D7A EBEB                    	jmp .L_tc_recycle_frame_loop_004e
 10206                                  .L_tc_recycle_frame_done_004e:
 10207 00006D7C 4889EC                  	mov rsp, rbp	; point to last argument
 10208 00006D7F 5D                      	pop rbp
 10209 00006D80 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10210                                  .L_if_end_0020:
 10211                                  .L_if_end_0021:
 10212                                  .L_if_end_0022:
 10213 00006D83 C9                      	leave
 10214 00006D84 C22000                  	ret AND_KILL_FRAME(2)
 10215                                  .L_lambda_simple_end_003a:	; new closure is in rax
 10216 00006D87 50                      	push rax
 10217 00006D88 6A01                    	push 1	; arg count
 10218 00006D8A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10219 00006D8F E83DFD0000              	call malloc
 10220 00006D94 50                      	push rax
 10221 00006D95 BF08000000              	mov rdi, 8 * 1	; new rib
 10222 00006D9A E832FD0000              	call malloc
 10223 00006D9F 50                      	push rax
 10224 00006DA0 BF10000000              	mov rdi, 8 * 2	; extended env
 10225 00006DA5 E827FD0000              	call malloc
 10226 00006DAA 488B7D10                	mov rdi, ENV
 10227 00006DAE BE00000000              	mov rsi, 0
 10228 00006DB3 BA01000000              	mov rdx, 1
 10229                                  .L_lambda_simple_env_loop_003b:	; ext_env[i + 1] <-- env[i]
 10230 00006DB8 4883FE01                	cmp rsi, 1
 10231 00006DBC 7410                    	je .L_lambda_simple_env_end_003b
 10232 00006DBE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10233 00006DC2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10234 00006DC6 48FFC6                  	inc rsi
 10235 00006DC9 48FFC2                  	inc rdx
 10236 00006DCC EBEA                    	jmp .L_lambda_simple_env_loop_003b
 10237                                  .L_lambda_simple_env_end_003b:
 10238 00006DCE 5B                      	pop rbx
 10239 00006DCF BE00000000              	mov rsi, 0
 10240                                  .L_lambda_simple_params_loop_003b:	; copy params
 10241 00006DD4 4883FE01                	cmp rsi, 1
 10242 00006DD8 740E                    	je .L_lambda_simple_params_end_003b
 10243 00006DDA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10244 00006DDF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10245 00006DE3 48FFC6                  	inc rsi
 10246 00006DE6 EBEC                    	jmp .L_lambda_simple_params_loop_003b
 10247                                  .L_lambda_simple_params_end_003b:
 10248 00006DE8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10249 00006DEB 4889C3                  	mov rbx, rax
 10250 00006DEE 58                      	pop rax
 10251 00006DEF C60004                  	mov byte [rax], T_closure
 10252 00006DF2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10253 00006DF6 48C74009[036E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003b
 10254 00006DFE E972020000              	jmp .L_lambda_simple_end_003b
 10255                                  .L_lambda_simple_code_003b:	; lambda-simple body
 10256 00006E03 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10257 00006E09 740B                    	je .L_lambda_simple_arity_check_ok_003b
 10258 00006E0B FF742410                	push qword [rsp + 8 * 2]
 10259 00006E0F 6A01                    	push 1
 10260 00006E11 E974FC0000              	jmp L_error_incorrect_arity_simple
 10261                                  .L_lambda_simple_arity_check_ok_003b:
 10262 00006E16 C8000000                	enter 0, 0
 10263 00006E1A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10264 00006E1F E8ADFC0000              	call malloc
 10265 00006E24 50                      	push rax
 10266 00006E25 BF08000000              	mov rdi, 8 * 1	; new rib
 10267 00006E2A E8A2FC0000              	call malloc
 10268 00006E2F 50                      	push rax
 10269 00006E30 BF18000000              	mov rdi, 8 * 3	; extended env
 10270 00006E35 E897FC0000              	call malloc
 10271 00006E3A 488B7D10                	mov rdi, ENV
 10272 00006E3E BE00000000              	mov rsi, 0
 10273 00006E43 BA01000000              	mov rdx, 1
 10274                                  .L_lambda_opt_env_loop_000a:	; ext_env[i + 1] <-- env[i]
 10275 00006E48 4883FE02                	cmp rsi, 2
 10276 00006E4C 7410                    	je .L_lambda_opt_env_end_000a
 10277 00006E4E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10278 00006E52 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10279 00006E56 48FFC6                  	inc rsi
 10280 00006E59 48FFC2                  	inc rdx
 10281 00006E5C EBEA                    	jmp .L_lambda_opt_env_loop_000a
 10282                                  .L_lambda_opt_env_end_000a:
 10283 00006E5E 5B                      	pop rbx
 10284 00006E5F BE00000000              	mov rsi, 0
 10285                                  .L_lambda_opt_params_loop_000a:	; copy params
 10286 00006E64 4883FE01                	cmp rsi, 1
 10287 00006E68 740E                    	je .L_lambda_opt_params_end_000a
 10288 00006E6A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10289 00006E6F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10290 00006E73 48FFC6                  	inc rsi
 10291 00006E76 EBEC                    	jmp .L_lambda_opt_params_loop_000a
 10292                                  .L_lambda_opt_params_end_000a:
 10293 00006E78 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10294 00006E7B 4889C3                  	mov rbx, rax
 10295 00006E7E 58                      	pop rax
 10296 00006E7F C60004                  	mov byte [rax], T_closure
 10297 00006E82 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10298 00006E86 48C74009[936E0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000a
 10299 00006E8E E9DE010000              	jmp .L_lambda_opt_end_000a
 10300                                  .L_lambda_opt_code_000a:	; lambda-opt body
 10301 00006E93 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10302 00006E99 7411                    	je .L_lambda_opt_arity_check_exact_000a
 10303 00006E9B 0F8FBC000000            	jg .L_lambda_opt_arity_check_more_000a
 10304 00006EA1 FF742410                	push qword [rsp + 8 * 2]
 10305 00006EA5 6A00                    	push 0
 10306 00006EA7 E9F2FB0000              	jmp L_error_incorrect_arity_opt
 10307                                  .L_lambda_opt_arity_check_exact_000a:
 10308 00006EAC 4883EC08                	sub rsp, 8
 10309 00006EB0 488B442408              	mov rax, qword[rsp + 8 *1]
 10310 00006EB5 48890424                	mov qword[rsp], rax  
 10311 00006EB9 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 10312 00006EBE 4889442408              	mov qword[rsp + 8 * 1], rax
 10313 00006EC3 B801000000              	mov rax, 1
 10314 00006EC8 4889442410              	mov qword[rsp + 8 *2], rax
 10315 00006ECD 48B8-                   	mov rax, sob_nil
 10315 00006ECF [0100000000000000] 
 10316 00006ED7 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 10317 00006EDC C8000000                	enter 0, 0
 10318                                  	; preparing a tail-call
 10319 00006EE0 488B4520                	mov rax, PARAM(0)	; param s
 10320 00006EE4 50                      	push rax
 10321 00006EE5 48B8-                   	mov rax, L_constants + 2135
 10321 00006EE7 [5708000000000000] 
 10322 00006EEF 50                      	push rax
 10323 00006EF0 488B4510                	mov rax, ENV
 10324 00006EF4 488B00                  	mov rax, qword [rax + 8 * 0]
 10325 00006EF7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
 10326 00006EFA 50                      	push rax
 10327 00006EFB 6A03                    	push 3	; arg count
 10328 00006EFD 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 10329 00006F05 803805                  	cmp byte [rax], T_undefined
 10330 00006F08 0F8496FA0000            	je L_error_fvar_undefined
 10331 00006F0E 803804                  	cmp byte [rax], T_closure
 10332 00006F11 0F8511FB0000            	jne L_error_non_closure
 10333 00006F17 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10334 00006F1A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10335 00006F1D FF7500                  	push qword[rbp]
 10336 00006F20 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10337 00006F25 48895D10                	mov qword[rbp + 8*2],rbx
 10338 00006F29 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 10339 00006F31 BF00000000              	mov rdi,0
 10340 00006F36 EB00                    	jmp .L_tc_recycle_frame_loop_0050
 10341                                  .L_tc_recycle_frame_loop_0050:
 10342 00006F38 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10343 00006F3C 740F                    	je .L_tc_recycle_frame_done_0050
 10344 00006F3E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10345 00006F43 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10346 00006F48 48FFC7                  	inc rdi
 10347 00006F4B EBEB                    	jmp .L_tc_recycle_frame_loop_0050
 10348                                  .L_tc_recycle_frame_done_0050:
 10349 00006F4D 4889EC                  	mov rsp, rbp	; point to last argument
 10350 00006F50 5D                      	pop rbp
 10351 00006F51 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10352 00006F54 C9                      	leave
 10353 00006F55 C21800                  	ret AND_KILL_FRAME(1)
 10354 00006F58 E914010000              	jmp .L_lambda_opt_end_000a	; new closure is in rax
 10355                                  .L_lambda_opt_arity_check_more_000a:
 10356 00006F5D 488B442410              	mov rax, qword[rsp + 2 * 8]
 10357 00006F62 4889C7                  	mov rdi, rax
 10358 00006F65 49B9-                   	mov r9, sob_nil
 10358 00006F67 [0100000000000000] 
 10359 00006F6F 4C8B442410              	mov r8, qword[rsp+2*8]
 10360                                  .L_lambda_opt_stack_shrink_loop_000a:
 10361 00006F74 4983F800                	cmp r8, 0
 10362 00006F78 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_000a
 10363 00006F7A 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 10364 00006F7F BF11000000              	mov rdi, 1+8+8	;for pair
 10365 00006F84 E848FB0000              	call malloc	 ;to create the pair in the stack
 10366 00006F89 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 10367 00006F8C 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 10368 00006F90 4C894809                 	mov qword[rax+1+8],r9
 10369 00006F94 4989C1                  	mov r9 , rax	 ; for the recursion 
 10370 00006F97 49FFC8                  	dec r8
 10371 00006F9A EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_000a
 10372                                  .L_lambda_opt_stack_shrink_loop_exit_000a:
 10373 00006F9C 488B442410              	mov rax, qword[rsp + 2 * 8]
 10374 00006FA1 BF01000000              	mov rdi, 1
 10375 00006FA6 4829F8                  	sub rax, rdi
 10376 00006FA9 4889C7                  	mov rdi, rax
 10377 00006FAC 486BC008                	imul rax,8
 10378 00006FB0 4801C4                  	add rsp, rax
 10379 00006FB3 4889E0                  	mov rax, rsp
 10380 00006FB6 4989F8                  	mov r8, rdi
 10381 00006FB9 4D6BC008                	imul r8, 8
 10382 00006FBD 4C29C0                  	sub rax, r8
 10383 00006FC0 4989C2                  	mov r10, rax	; holds the original ret in the stack
 10384 00006FC3 4983C218                	add r10, 8*3
 10385 00006FC7 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 10386 00006FCB 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 10387 00006FCE 4D6BC008                	imul r8,8
 10388 00006FD2 4C01C0                  	add rax, r8
 10389 00006FD5 4C8908                  	mov qword[rax] ,r9
 10390 00006FD8 4983EA18                 	sub r10, 8*3
 10391 00006FDC 48C744241001000000      	mov qword [rsp+2*8], 1
 10392 00006FE5 498B4208                	mov rax, qword[r10 + 1 * 8]
 10393 00006FE9 4889442408              	mov qword[rsp + 1*8] ,rax
 10394 00006FEE 498B02                  	mov rax, qword[r10]
 10395 00006FF1 48890424                	mov qword[rsp], rax
 10396 00006FF5 C8000000                	enter 0, 0
 10397                                  	; preparing a tail-call
 10398 00006FF9 488B4520                	mov rax, PARAM(0)	; param s
 10399 00006FFD 50                      	push rax
 10400 00006FFE 48B8-                   	mov rax, L_constants + 2135
 10400 00007000 [5708000000000000] 
 10401 00007008 50                      	push rax
 10402 00007009 488B4510                	mov rax, ENV
 10403 0000700D 488B00                  	mov rax, qword [rax + 8 * 0]
 10404 00007010 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin+
 10405 00007013 50                      	push rax
 10406 00007014 6A03                    	push 3	; arg count
 10407 00007016 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 10408 0000701E 803805                  	cmp byte [rax], T_undefined
 10409 00007021 0F847DF90000            	je L_error_fvar_undefined
 10410 00007027 803804                  	cmp byte [rax], T_closure
 10411 0000702A 0F85F8F90000            	jne L_error_non_closure
 10412 00007030 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10413 00007033 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10414 00007036 FF7500                  	push qword[rbp]
 10415 00007039 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10416 0000703E 48895D10                	mov qword[rbp + 8*2],rbx
 10417 00007042 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 10418 0000704A BF00000000              	mov rdi,0
 10419 0000704F EB00                    	jmp .L_tc_recycle_frame_loop_004f
 10420                                  .L_tc_recycle_frame_loop_004f:
 10421 00007051 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10422 00007055 740F                    	je .L_tc_recycle_frame_done_004f
 10423 00007057 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10424 0000705C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10425 00007061 48FFC7                  	inc rdi
 10426 00007064 EBEB                    	jmp .L_tc_recycle_frame_loop_004f
 10427                                  .L_tc_recycle_frame_done_004f:
 10428 00007066 4889EC                  	mov rsp, rbp	; point to last argument
 10429 00007069 5D                      	pop rbp
 10430 0000706A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10431 0000706D C9                      	leave
 10432 0000706E C21800                  	ret AND_KILL_FRAME(1)
 10433                                  .L_lambda_opt_end_000a:	; new closure is in rax
 10434 00007071 C9                      	leave
 10435 00007072 C21800                  	ret AND_KILL_FRAME(1)
 10436                                  .L_lambda_simple_end_003b:	; new closure is in rax
 10437 00007075 803804                  	cmp byte [rax], T_closure
 10438 00007078 0F85AAF90000            	jne L_error_non_closure
 10439 0000707E FF7001                  	push SOB_CLOSURE_ENV(rax)
 10440 00007081 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10441 00007084 FF7500                  	push qword[rbp]
 10442 00007087 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10443 0000708C 48895D10                	mov qword[rbp + 8*2],rbx
 10444 00007090 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 10445 00007098 BF00000000              	mov rdi,0
 10446 0000709D EB00                    	jmp .L_tc_recycle_frame_loop_0051
 10447                                  .L_tc_recycle_frame_loop_0051:
 10448 0000709F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10449 000070A3 740F                    	je .L_tc_recycle_frame_done_0051
 10450 000070A5 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10451 000070AA 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10452 000070AF 48FFC7                  	inc rdi
 10453 000070B2 EBEB                    	jmp .L_tc_recycle_frame_loop_0051
 10454                                  .L_tc_recycle_frame_done_0051:
 10455 000070B4 4889EC                  	mov rsp, rbp	; point to last argument
 10456 000070B7 5D                      	pop rbp
 10457 000070B8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10458 000070BB C9                      	leave
 10459 000070BC C21800                  	ret AND_KILL_FRAME(1)
 10460                                  .L_lambda_simple_end_0039:	; new closure is in rax
 10461 000070BF 803804                  	cmp byte [rax], T_closure
 10462 000070C2 0F8560F90000            	jne L_error_non_closure
 10463 000070C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10464 000070CB FF5009                  	call SOB_CLOSURE_CODE(rax)
 10465 000070CE 48890425[D60D0000]      	mov qword [free_var_1], rax
 10466 000070D6 48B8-                   	mov rax, sob_void
 10466 000070D8 [0000000000000000] 
 10467                                  
 10468 000070E0 4889C7                  	mov rdi, rax
 10469 000070E3 E83EFC0000              	call print_sexpr_if_not_void
 10470                                  	; preparing a non-tail-call
 10471 000070E8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10472 000070ED E8DFF90000              	call malloc
 10473 000070F2 50                      	push rax
 10474 000070F3 BF00000000              	mov rdi, 8 * 0	; new rib
 10475 000070F8 E8D4F90000              	call malloc
 10476 000070FD 50                      	push rax
 10477 000070FE BF08000000              	mov rdi, 8 * 1	; extended env
 10478 00007103 E8C9F90000              	call malloc
 10479 00007108 488B7D10                	mov rdi, ENV
 10480 0000710C BE00000000              	mov rsi, 0
 10481 00007111 BA01000000              	mov rdx, 1
 10482                                  .L_lambda_simple_env_loop_003c:	; ext_env[i + 1] <-- env[i]
 10483 00007116 4883FE00                	cmp rsi, 0
 10484 0000711A 7410                    	je .L_lambda_simple_env_end_003c
 10485 0000711C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10486 00007120 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10487 00007124 48FFC6                  	inc rsi
 10488 00007127 48FFC2                  	inc rdx
 10489 0000712A EBEA                    	jmp .L_lambda_simple_env_loop_003c
 10490                                  .L_lambda_simple_env_end_003c:
 10491 0000712C 5B                      	pop rbx
 10492 0000712D BE00000000              	mov rsi, 0
 10493                                  .L_lambda_simple_params_loop_003c:	; copy params
 10494 00007132 4883FE00                	cmp rsi, 0
 10495 00007136 740E                    	je .L_lambda_simple_params_end_003c
 10496 00007138 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10497 0000713D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10498 00007141 48FFC6                  	inc rsi
 10499 00007144 EBEC                    	jmp .L_lambda_simple_params_loop_003c
 10500                                  .L_lambda_simple_params_end_003c:
 10501 00007146 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10502 00007149 4889C3                  	mov rbx, rax
 10503 0000714C 58                      	pop rax
 10504 0000714D C60004                  	mov byte [rax], T_closure
 10505 00007150 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10506 00007154 48C74009[61710000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003c
 10507 0000715C E98A000000              	jmp .L_lambda_simple_end_003c
 10508                                  .L_lambda_simple_code_003c:	; lambda-simple body
 10509 00007161 48837C241000            	cmp qword [rsp + 8 * 2], 0
 10510 00007167 740B                    	je .L_lambda_simple_arity_check_ok_003c
 10511 00007169 FF742410                	push qword [rsp + 8 * 2]
 10512 0000716D 6A00                    	push 0
 10513 0000716F E916F90000              	jmp L_error_incorrect_arity_simple
 10514                                  .L_lambda_simple_arity_check_ok_003c:
 10515 00007174 C8000000                	enter 0, 0
 10516                                  	; preparing a tail-call
 10517 00007178 48B8-                   	mov rax, L_constants + 2187
 10517 0000717A [8B08000000000000] 
 10518 00007182 50                      	push rax
 10519 00007183 48B8-                   	mov rax, L_constants + 2251
 10519 00007185 [CB08000000000000] 
 10520 0000718D 50                      	push rax
 10521 0000718E 6A02                    	push 2	; arg count
 10522 00007190 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 10523 00007198 803805                  	cmp byte [rax], T_undefined
 10524 0000719B 0F8403F80000            	je L_error_fvar_undefined
 10525 000071A1 803804                  	cmp byte [rax], T_closure
 10526 000071A4 0F857EF80000            	jne L_error_non_closure
 10527 000071AA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10528 000071AD FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10529 000071B0 FF7500                  	push qword[rbp]
 10530 000071B3 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10531 000071B8 48895D10                	mov qword[rbp + 8*2],rbx
 10532 000071BC 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 10533 000071C4 BF00000000              	mov rdi,0
 10534 000071C9 EB00                    	jmp .L_tc_recycle_frame_loop_0052
 10535                                  .L_tc_recycle_frame_loop_0052:
 10536 000071CB 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10537 000071CF 740F                    	je .L_tc_recycle_frame_done_0052
 10538 000071D1 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10539 000071D6 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10540 000071DB 48FFC7                  	inc rdi
 10541 000071DE EBEB                    	jmp .L_tc_recycle_frame_loop_0052
 10542                                  .L_tc_recycle_frame_done_0052:
 10543 000071E0 4889EC                  	mov rsp, rbp	; point to last argument
 10544 000071E3 5D                      	pop rbp
 10545 000071E4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10546 000071E7 C9                      	leave
 10547 000071E8 C21000                  	ret AND_KILL_FRAME(0)
 10548                                  .L_lambda_simple_end_003c:	; new closure is in rax
 10549 000071EB 50                      	push rax
 10550 000071EC 6A01                    	push 1	; arg count
 10551 000071EE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10552 000071F3 E8D9F80000              	call malloc
 10553 000071F8 50                      	push rax
 10554 000071F9 BF00000000              	mov rdi, 8 * 0	; new rib
 10555 000071FE E8CEF80000              	call malloc
 10556 00007203 50                      	push rax
 10557 00007204 BF08000000              	mov rdi, 8 * 1	; extended env
 10558 00007209 E8C3F80000              	call malloc
 10559 0000720E 488B7D10                	mov rdi, ENV
 10560 00007212 BE00000000              	mov rsi, 0
 10561 00007217 BA01000000              	mov rdx, 1
 10562                                  .L_lambda_simple_env_loop_003d:	; ext_env[i + 1] <-- env[i]
 10563 0000721C 4883FE00                	cmp rsi, 0
 10564 00007220 7410                    	je .L_lambda_simple_env_end_003d
 10565 00007222 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10566 00007226 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10567 0000722A 48FFC6                  	inc rsi
 10568 0000722D 48FFC2                  	inc rdx
 10569 00007230 EBEA                    	jmp .L_lambda_simple_env_loop_003d
 10570                                  .L_lambda_simple_env_end_003d:
 10571 00007232 5B                      	pop rbx
 10572 00007233 BE00000000              	mov rsi, 0
 10573                                  .L_lambda_simple_params_loop_003d:	; copy params
 10574 00007238 4883FE00                	cmp rsi, 0
 10575 0000723C 740E                    	je .L_lambda_simple_params_end_003d
 10576 0000723E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10577 00007243 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10578 00007247 48FFC6                  	inc rsi
 10579 0000724A EBEC                    	jmp .L_lambda_simple_params_loop_003d
 10580                                  .L_lambda_simple_params_end_003d:
 10581 0000724C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10582 0000724F 4889C3                  	mov rbx, rax
 10583 00007252 58                      	pop rax
 10584 00007253 C60004                  	mov byte [rax], T_closure
 10585 00007256 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10586 0000725A 48C74009[67720000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003d
 10587 00007262 E9640F0000              	jmp .L_lambda_simple_end_003d
 10588                                  .L_lambda_simple_code_003d:	; lambda-simple body
 10589 00007267 48837C241001            	cmp qword [rsp + 8 * 2], 1
 10590 0000726D 740B                    	je .L_lambda_simple_arity_check_ok_003d
 10591 0000726F FF742410                	push qword [rsp + 8 * 2]
 10592 00007273 6A01                    	push 1
 10593 00007275 E910F80000              	jmp L_error_incorrect_arity_simple
 10594                                  .L_lambda_simple_arity_check_ok_003d:
 10595 0000727A C8000000                	enter 0, 0
 10596                                  	; preparing a tail-call
 10597 0000727E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 10598 00007283 E849F80000              	call malloc
 10599 00007288 50                      	push rax
 10600 00007289 BF08000000              	mov rdi, 8 * 1	; new rib
 10601 0000728E E83EF80000              	call malloc
 10602 00007293 50                      	push rax
 10603 00007294 BF10000000              	mov rdi, 8 * 2	; extended env
 10604 00007299 E833F80000              	call malloc
 10605 0000729E 488B7D10                	mov rdi, ENV
 10606 000072A2 BE00000000              	mov rsi, 0
 10607 000072A7 BA01000000              	mov rdx, 1
 10608                                  .L_lambda_simple_env_loop_003e:	; ext_env[i + 1] <-- env[i]
 10609 000072AC 4883FE01                	cmp rsi, 1
 10610 000072B0 7410                    	je .L_lambda_simple_env_end_003e
 10611 000072B2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 10612 000072B6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 10613 000072BA 48FFC6                  	inc rsi
 10614 000072BD 48FFC2                  	inc rdx
 10615 000072C0 EBEA                    	jmp .L_lambda_simple_env_loop_003e
 10616                                  .L_lambda_simple_env_end_003e:
 10617 000072C2 5B                      	pop rbx
 10618 000072C3 BE00000000              	mov rsi, 0
 10619                                  .L_lambda_simple_params_loop_003e:	; copy params
 10620 000072C8 4883FE01                	cmp rsi, 1
 10621 000072CC 740E                    	je .L_lambda_simple_params_end_003e
 10622 000072CE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 10623 000072D3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 10624 000072D7 48FFC6                  	inc rsi
 10625 000072DA EBEC                    	jmp .L_lambda_simple_params_loop_003e
 10626                                  .L_lambda_simple_params_end_003e:
 10627 000072DC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 10628 000072DF 4889C3                  	mov rbx, rax
 10629 000072E2 58                      	pop rax
 10630 000072E3 C60004                  	mov byte [rax], T_closure
 10631 000072E6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 10632 000072EA 48C74009[F7720000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003e
 10633 000072F2 E938080000              	jmp .L_lambda_simple_end_003e
 10634                                  .L_lambda_simple_code_003e:	; lambda-simple body
 10635 000072F7 48837C241002            	cmp qword [rsp + 8 * 2], 2
 10636 000072FD 740B                    	je .L_lambda_simple_arity_check_ok_003e
 10637 000072FF FF742410                	push qword [rsp + 8 * 2]
 10638 00007303 6A02                    	push 2
 10639 00007305 E980F70000              	jmp L_error_incorrect_arity_simple
 10640                                  .L_lambda_simple_arity_check_ok_003e:
 10641 0000730A C8000000                	enter 0, 0
 10642                                  	; preparing a non-tail-call
 10643 0000730E 488B4520                	mov rax, PARAM(0)	; param a
 10644 00007312 50                      	push rax
 10645 00007313 6A01                    	push 1	; arg count
 10646 00007315 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10647 0000731D 803805                  	cmp byte [rax], T_undefined
 10648 00007320 0F847EF60000            	je L_error_fvar_undefined
 10649 00007326 803804                  	cmp byte [rax], T_closure
 10650 00007329 0F85F9F60000            	jne L_error_non_closure
 10651 0000732F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10652 00007332 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10653 00007335 483D[02000000]          	cmp rax, sob_boolean_false
 10654 0000733B 0F8467020000            	je .L_if_else_002e
 10655                                  	; preparing a non-tail-call
 10656 00007341 488B4528                	mov rax, PARAM(1)	; param b
 10657 00007345 50                      	push rax
 10658 00007346 6A01                    	push 1	; arg count
 10659 00007348 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10660 00007350 803805                  	cmp byte [rax], T_undefined
 10661 00007353 0F844BF60000            	je L_error_fvar_undefined
 10662 00007359 803804                  	cmp byte [rax], T_closure
 10663 0000735C 0F85C6F60000            	jne L_error_non_closure
 10664 00007362 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10665 00007365 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10666 00007368 483D[02000000]          	cmp rax, sob_boolean_false
 10667 0000736E 7468                    	je .L_if_else_0025
 10668                                  	; preparing a tail-call
 10669 00007370 488B4528                	mov rax, PARAM(1)	; param b
 10670 00007374 50                      	push rax
 10671 00007375 488B4520                	mov rax, PARAM(0)	; param a
 10672 00007379 50                      	push rax
 10673 0000737A 6A02                    	push 2	; arg count
 10674 0000737C 488B0425[900F0000]      	mov rax, qword [free_var_27]	; free var __bin-sub-zz
 10675 00007384 803805                  	cmp byte [rax], T_undefined
 10676 00007387 0F8417F60000            	je L_error_fvar_undefined
 10677 0000738D 803804                  	cmp byte [rax], T_closure
 10678 00007390 0F8592F60000            	jne L_error_non_closure
 10679 00007396 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10680 00007399 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10681 0000739C FF7500                  	push qword[rbp]
 10682 0000739F 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10683 000073A4 48895D10                	mov qword[rbp + 8*2],rbx
 10684 000073A8 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 10685 000073B0 BF00000000              	mov rdi,0
 10686 000073B5 EB00                    	jmp .L_tc_recycle_frame_loop_0053
 10687                                  .L_tc_recycle_frame_loop_0053:
 10688 000073B7 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10689 000073BB 740F                    	je .L_tc_recycle_frame_done_0053
 10690 000073BD 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10691 000073C2 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10692 000073C7 48FFC7                  	inc rdi
 10693 000073CA EBEB                    	jmp .L_tc_recycle_frame_loop_0053
 10694                                  .L_tc_recycle_frame_done_0053:
 10695 000073CC 4889EC                  	mov rsp, rbp	; point to last argument
 10696 000073CF 5D                      	pop rbp
 10697 000073D0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10698 000073D3 E9CB010000              	jmp .L_if_end_0025
 10699                                  .L_if_else_0025:
 10700                                  	; preparing a non-tail-call
 10701 000073D8 488B4528                	mov rax, PARAM(1)	; param b
 10702 000073DC 50                      	push rax
 10703 000073DD 6A01                    	push 1	; arg count
 10704 000073DF 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10705 000073E7 803805                  	cmp byte [rax], T_undefined
 10706 000073EA 0F84B4F50000            	je L_error_fvar_undefined
 10707 000073F0 803804                  	cmp byte [rax], T_closure
 10708 000073F3 0F852FF60000            	jne L_error_non_closure
 10709 000073F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10710 000073FC FF5009                  	call SOB_CLOSURE_CODE(rax)
 10711 000073FF 483D[02000000]          	cmp rax, sob_boolean_false
 10712 00007405 0F848B000000            	je .L_if_else_0024
 10713                                  	; preparing a tail-call
 10714 0000740B 488B4528                	mov rax, PARAM(1)	; param b
 10715 0000740F 50                      	push rax
 10716                                  	; preparing a non-tail-call
 10717 00007410 488B4520                	mov rax, PARAM(0)	; param a
 10718 00007414 50                      	push rax
 10719 00007415 6A01                    	push 1	; arg count
 10720 00007417 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10721 0000741F 803805                  	cmp byte [rax], T_undefined
 10722 00007422 0F847CF50000            	je L_error_fvar_undefined
 10723 00007428 803804                  	cmp byte [rax], T_closure
 10724 0000742B 0F85F7F50000            	jne L_error_non_closure
 10725 00007431 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10726 00007434 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10727 00007437 50                      	push rax
 10728 00007438 6A02                    	push 2	; arg count
 10729 0000743A 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10730 00007442 803805                  	cmp byte [rax], T_undefined
 10731 00007445 0F8459F50000            	je L_error_fvar_undefined
 10732 0000744B 803804                  	cmp byte [rax], T_closure
 10733 0000744E 0F85D4F50000            	jne L_error_non_closure
 10734 00007454 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10735 00007457 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10736 0000745A FF7500                  	push qword[rbp]
 10737 0000745D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10738 00007462 48895D10                	mov qword[rbp + 8*2],rbx
 10739 00007466 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 10740 0000746E BF00000000              	mov rdi,0
 10741 00007473 EB00                    	jmp .L_tc_recycle_frame_loop_0054
 10742                                  .L_tc_recycle_frame_loop_0054:
 10743 00007475 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10744 00007479 740F                    	je .L_tc_recycle_frame_done_0054
 10745 0000747B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10746 00007480 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10747 00007485 48FFC7                  	inc rdi
 10748 00007488 EBEB                    	jmp .L_tc_recycle_frame_loop_0054
 10749                                  .L_tc_recycle_frame_done_0054:
 10750 0000748A 4889EC                  	mov rsp, rbp	; point to last argument
 10751 0000748D 5D                      	pop rbp
 10752 0000748E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10753 00007491 E90D010000              	jmp .L_if_end_0024
 10754                                  .L_if_else_0024:
 10755                                  	; preparing a non-tail-call
 10756 00007496 488B4528                	mov rax, PARAM(1)	; param b
 10757 0000749A 50                      	push rax
 10758 0000749B 6A01                    	push 1	; arg count
 10759 0000749D 488B0425[68150000]      	mov rax, qword [free_var_115]	; free var real
 10760 000074A5 803805                  	cmp byte [rax], T_undefined
 10761 000074A8 0F84F6F40000            	je L_error_fvar_undefined
 10762 000074AE 803804                  	cmp byte [rax], T_closure
 10763 000074B1 0F8571F50000            	jne L_error_non_closure
 10764 000074B7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10765 000074BA FF5009                  	call SOB_CLOSURE_CODE(rax)
 10766 000074BD 483D[02000000]          	cmp rax, sob_boolean_false
 10767 000074C3 0F8488000000            	je .L_if_else_0023
 10768                                  	; preparing a tail-call
 10769 000074C9 488B4528                	mov rax, PARAM(1)	; param b
 10770 000074CD 50                      	push rax
 10771                                  	; preparing a non-tail-call
 10772 000074CE 488B4520                	mov rax, PARAM(0)	; param a
 10773 000074D2 50                      	push rax
 10774 000074D3 6A01                    	push 1	; arg count
 10775 000074D5 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 10776 000074DD 803805                  	cmp byte [rax], T_undefined
 10777 000074E0 0F84BEF40000            	je L_error_fvar_undefined
 10778 000074E6 803804                  	cmp byte [rax], T_closure
 10779 000074E9 0F8539F50000            	jne L_error_non_closure
 10780 000074EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 10781 000074F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10782 000074F5 50                      	push rax
 10783 000074F6 6A02                    	push 2	; arg count
 10784 000074F8 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10785 00007500 803805                  	cmp byte [rax], T_undefined
 10786 00007503 0F849BF40000            	je L_error_fvar_undefined
 10787 00007509 803804                  	cmp byte [rax], T_closure
 10788 0000750C 0F8516F50000            	jne L_error_non_closure
 10789 00007512 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10790 00007515 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10791 00007518 FF7500                  	push qword[rbp]
 10792 0000751B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10793 00007520 48895D10                	mov qword[rbp + 8*2],rbx
 10794 00007524 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 10795 0000752C BF00000000              	mov rdi,0
 10796 00007531 EB00                    	jmp .L_tc_recycle_frame_loop_0055
 10797                                  .L_tc_recycle_frame_loop_0055:
 10798 00007533 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10799 00007537 740F                    	je .L_tc_recycle_frame_done_0055
 10800 00007539 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10801 0000753E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10802 00007543 48FFC7                  	inc rdi
 10803 00007546 EBEB                    	jmp .L_tc_recycle_frame_loop_0055
 10804                                  .L_tc_recycle_frame_done_0055:
 10805 00007548 4889EC                  	mov rsp, rbp	; point to last argument
 10806 0000754B 5D                      	pop rbp
 10807 0000754C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10808 0000754F EB52                    	jmp .L_if_end_0023
 10809                                  .L_if_else_0023:
 10810                                  	; preparing a tail-call
 10811 00007551 6A00                    	push 0	; arg count
 10812 00007553 488B4510                	mov rax, ENV
 10813 00007557 488B00                  	mov rax, qword [rax + 8 * 0]
 10814 0000755A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 10815 0000755D 803804                  	cmp byte [rax], T_closure
 10816 00007560 0F85C2F40000            	jne L_error_non_closure
 10817 00007566 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10818 00007569 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10819 0000756C FF7500                  	push qword[rbp]
 10820 0000756F 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10821 00007574 48895D10                	mov qword[rbp + 8*2],rbx
 10822 00007578 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 10823 00007580 BF00000000              	mov rdi,0
 10824 00007585 EB00                    	jmp .L_tc_recycle_frame_loop_0056
 10825                                  .L_tc_recycle_frame_loop_0056:
 10826 00007587 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10827 0000758B 740F                    	je .L_tc_recycle_frame_done_0056
 10828 0000758D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10829 00007592 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10830 00007597 48FFC7                  	inc rdi
 10831 0000759A EBEB                    	jmp .L_tc_recycle_frame_loop_0056
 10832                                  .L_tc_recycle_frame_done_0056:
 10833 0000759C 4889EC                  	mov rsp, rbp	; point to last argument
 10834 0000759F 5D                      	pop rbp
 10835 000075A0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10836                                  .L_if_end_0023:
 10837                                  .L_if_end_0024:
 10838                                  .L_if_end_0025:
 10839 000075A3 E983050000              	jmp .L_if_end_002e
 10840                                  .L_if_else_002e:
 10841                                  	; preparing a non-tail-call
 10842 000075A8 488B4520                	mov rax, PARAM(0)	; param a
 10843 000075AC 50                      	push rax
 10844 000075AD 6A01                    	push 1	; arg count
 10845 000075AF 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10846 000075B7 803805                  	cmp byte [rax], T_undefined
 10847 000075BA 0F84E4F30000            	je L_error_fvar_undefined
 10848 000075C0 803804                  	cmp byte [rax], T_closure
 10849 000075C3 0F855FF40000            	jne L_error_non_closure
 10850 000075C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10851 000075CC FF5009                  	call SOB_CLOSURE_CODE(rax)
 10852 000075CF 483D[02000000]          	cmp rax, sob_boolean_false
 10853 000075D5 0F8467020000            	je .L_if_else_002d
 10854                                  	; preparing a non-tail-call
 10855 000075DB 488B4528                	mov rax, PARAM(1)	; param b
 10856 000075DF 50                      	push rax
 10857 000075E0 6A01                    	push 1	; arg count
 10858 000075E2 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 10859 000075EA 803805                  	cmp byte [rax], T_undefined
 10860 000075ED 0F84B1F30000            	je L_error_fvar_undefined
 10861 000075F3 803804                  	cmp byte [rax], T_closure
 10862 000075F6 0F852CF40000            	jne L_error_non_closure
 10863 000075FC FF7001                  	push SOB_CLOSURE_ENV(rax)
 10864 000075FF FF5009                  	call SOB_CLOSURE_CODE(rax)
 10865 00007602 483D[02000000]          	cmp rax, sob_boolean_false
 10866 00007608 0F848B000000            	je .L_if_else_0028
 10867                                  	; preparing a tail-call
 10868                                  	; preparing a non-tail-call
 10869 0000760E 488B4528                	mov rax, PARAM(1)	; param b
 10870 00007612 50                      	push rax
 10871 00007613 6A01                    	push 1	; arg count
 10872 00007615 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 10873 0000761D 803805                  	cmp byte [rax], T_undefined
 10874 00007620 0F847EF30000            	je L_error_fvar_undefined
 10875 00007626 803804                  	cmp byte [rax], T_closure
 10876 00007629 0F85F9F30000            	jne L_error_non_closure
 10877 0000762F FF7001                  	push SOB_CLOSURE_ENV(rax)
 10878 00007632 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10879 00007635 50                      	push rax
 10880 00007636 488B4520                	mov rax, PARAM(0)	; param a
 10881 0000763A 50                      	push rax
 10882 0000763B 6A02                    	push 2	; arg count
 10883 0000763D 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10884 00007645 803805                  	cmp byte [rax], T_undefined
 10885 00007648 0F8456F30000            	je L_error_fvar_undefined
 10886 0000764E 803804                  	cmp byte [rax], T_closure
 10887 00007651 0F85D1F30000            	jne L_error_non_closure
 10888 00007657 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10889 0000765A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10890 0000765D FF7500                  	push qword[rbp]
 10891 00007660 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10892 00007665 48895D10                	mov qword[rbp + 8*2],rbx
 10893 00007669 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 10894 00007671 BF00000000              	mov rdi,0
 10895 00007676 EB00                    	jmp .L_tc_recycle_frame_loop_0057
 10896                                  .L_tc_recycle_frame_loop_0057:
 10897 00007678 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10898 0000767C 740F                    	je .L_tc_recycle_frame_done_0057
 10899 0000767E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10900 00007683 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10901 00007688 48FFC7                  	inc rdi
 10902 0000768B EBEB                    	jmp .L_tc_recycle_frame_loop_0057
 10903                                  .L_tc_recycle_frame_done_0057:
 10904 0000768D 4889EC                  	mov rsp, rbp	; point to last argument
 10905 00007690 5D                      	pop rbp
 10906 00007691 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10907 00007694 E9A4010000              	jmp .L_if_end_0028
 10908                                  .L_if_else_0028:
 10909                                  	; preparing a non-tail-call
 10910 00007699 488B4528                	mov rax, PARAM(1)	; param b
 10911 0000769D 50                      	push rax
 10912 0000769E 6A01                    	push 1	; arg count
 10913 000076A0 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 10914 000076A8 803805                  	cmp byte [rax], T_undefined
 10915 000076AB 0F84F3F20000            	je L_error_fvar_undefined
 10916 000076B1 803804                  	cmp byte [rax], T_closure
 10917 000076B4 0F856EF30000            	jne L_error_non_closure
 10918 000076BA FF7001                  	push SOB_CLOSURE_ENV(rax)
 10919 000076BD FF5009                  	call SOB_CLOSURE_CODE(rax)
 10920 000076C0 483D[02000000]          	cmp rax, sob_boolean_false
 10921 000076C6 7468                    	je .L_if_else_0027
 10922                                  	; preparing a tail-call
 10923 000076C8 488B4528                	mov rax, PARAM(1)	; param b
 10924 000076CC 50                      	push rax
 10925 000076CD 488B4520                	mov rax, PARAM(0)	; param a
 10926 000076D1 50                      	push rax
 10927 000076D2 6A02                    	push 2	; arg count
 10928 000076D4 488B0425[6E0F0000]      	mov rax, qword [free_var_25]	; free var __bin-sub-qq
 10929 000076DC 803805                  	cmp byte [rax], T_undefined
 10930 000076DF 0F84BFF20000            	je L_error_fvar_undefined
 10931 000076E5 803804                  	cmp byte [rax], T_closure
 10932 000076E8 0F853AF30000            	jne L_error_non_closure
 10933 000076EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 10934 000076F1 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10935 000076F4 FF7500                  	push qword[rbp]
 10936 000076F7 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10937 000076FC 48895D10                	mov qword[rbp + 8*2],rbx
 10938 00007700 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 10939 00007708 BF00000000              	mov rdi,0
 10940 0000770D EB00                    	jmp .L_tc_recycle_frame_loop_0058
 10941                                  .L_tc_recycle_frame_loop_0058:
 10942 0000770F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10943 00007713 740F                    	je .L_tc_recycle_frame_done_0058
 10944 00007715 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 10945 0000771A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 10946 0000771F 48FFC7                  	inc rdi
 10947 00007722 EBEB                    	jmp .L_tc_recycle_frame_loop_0058
 10948                                  .L_tc_recycle_frame_done_0058:
 10949 00007724 4889EC                  	mov rsp, rbp	; point to last argument
 10950 00007727 5D                      	pop rbp
 10951 00007728 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 10952 0000772B E90D010000              	jmp .L_if_end_0027
 10953                                  .L_if_else_0027:
 10954                                  	; preparing a non-tail-call
 10955 00007730 488B4528                	mov rax, PARAM(1)	; param b
 10956 00007734 50                      	push rax
 10957 00007735 6A01                    	push 1	; arg count
 10958 00007737 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 10959 0000773F 803805                  	cmp byte [rax], T_undefined
 10960 00007742 0F845CF20000            	je L_error_fvar_undefined
 10961 00007748 803804                  	cmp byte [rax], T_closure
 10962 0000774B 0F85D7F20000            	jne L_error_non_closure
 10963 00007751 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10964 00007754 FF5009                  	call SOB_CLOSURE_CODE(rax)
 10965 00007757 483D[02000000]          	cmp rax, sob_boolean_false
 10966 0000775D 0F8488000000            	je .L_if_else_0026
 10967                                  	; preparing a tail-call
 10968 00007763 488B4528                	mov rax, PARAM(1)	; param b
 10969 00007767 50                      	push rax
 10970                                  	; preparing a non-tail-call
 10971 00007768 488B4520                	mov rax, PARAM(0)	; param a
 10972 0000776C 50                      	push rax
 10973 0000776D 6A01                    	push 1	; arg count
 10974 0000776F 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 10975 00007777 803805                  	cmp byte [rax], T_undefined
 10976 0000777A 0F8424F20000            	je L_error_fvar_undefined
 10977 00007780 803804                  	cmp byte [rax], T_closure
 10978 00007783 0F859FF20000            	jne L_error_non_closure
 10979 00007789 FF7001                  	push SOB_CLOSURE_ENV(rax)
 10980 0000778C FF5009                  	call SOB_CLOSURE_CODE(rax)
 10981 0000778F 50                      	push rax
 10982 00007790 6A02                    	push 2	; arg count
 10983 00007792 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 10984 0000779A 803805                  	cmp byte [rax], T_undefined
 10985 0000779D 0F8401F20000            	je L_error_fvar_undefined
 10986 000077A3 803804                  	cmp byte [rax], T_closure
 10987 000077A6 0F857CF20000            	jne L_error_non_closure
 10988 000077AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 10989 000077AF FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 10990 000077B2 FF7500                  	push qword[rbp]
 10991 000077B5 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 10992 000077BA 48895D10                	mov qword[rbp + 8*2],rbx
 10993 000077BE 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 10994 000077C6 BF00000000              	mov rdi,0
 10995 000077CB EB00                    	jmp .L_tc_recycle_frame_loop_0059
 10996                                  .L_tc_recycle_frame_loop_0059:
 10997 000077CD 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 10998 000077D1 740F                    	je .L_tc_recycle_frame_done_0059
 10999 000077D3 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11000 000077D8 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11001 000077DD 48FFC7                  	inc rdi
 11002 000077E0 EBEB                    	jmp .L_tc_recycle_frame_loop_0059
 11003                                  .L_tc_recycle_frame_done_0059:
 11004 000077E2 4889EC                  	mov rsp, rbp	; point to last argument
 11005 000077E5 5D                      	pop rbp
 11006 000077E6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11007 000077E9 EB52                    	jmp .L_if_end_0026
 11008                                  .L_if_else_0026:
 11009                                  	; preparing a tail-call
 11010 000077EB 6A00                    	push 0	; arg count
 11011 000077ED 488B4510                	mov rax, ENV
 11012 000077F1 488B00                  	mov rax, qword [rax + 8 * 0]
 11013 000077F4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11014 000077F7 803804                  	cmp byte [rax], T_closure
 11015 000077FA 0F8528F20000            	jne L_error_non_closure
 11016 00007800 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11017 00007803 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11018 00007806 FF7500                  	push qword[rbp]
 11019 00007809 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11020 0000780E 48895D10                	mov qword[rbp + 8*2],rbx
 11021 00007812 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 11022 0000781A BF00000000              	mov rdi,0
 11023 0000781F EB00                    	jmp .L_tc_recycle_frame_loop_005a
 11024                                  .L_tc_recycle_frame_loop_005a:
 11025 00007821 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11026 00007825 740F                    	je .L_tc_recycle_frame_done_005a
 11027 00007827 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11028 0000782C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11029 00007831 48FFC7                  	inc rdi
 11030 00007834 EBEB                    	jmp .L_tc_recycle_frame_loop_005a
 11031                                  .L_tc_recycle_frame_done_005a:
 11032 00007836 4889EC                  	mov rsp, rbp	; point to last argument
 11033 00007839 5D                      	pop rbp
 11034 0000783A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11035                                  .L_if_end_0026:
 11036                                  .L_if_end_0027:
 11037                                  .L_if_end_0028:
 11038 0000783D E9E9020000              	jmp .L_if_end_002d
 11039                                  .L_if_else_002d:
 11040                                  	; preparing a non-tail-call
 11041 00007842 488B4520                	mov rax, PARAM(0)	; param a
 11042 00007846 50                      	push rax
 11043 00007847 6A01                    	push 1	; arg count
 11044 00007849 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11045 00007851 803805                  	cmp byte [rax], T_undefined
 11046 00007854 0F844AF10000            	je L_error_fvar_undefined
 11047 0000785A 803804                  	cmp byte [rax], T_closure
 11048 0000785D 0F85C5F10000            	jne L_error_non_closure
 11049 00007863 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11050 00007866 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11051 00007869 483D[02000000]          	cmp rax, sob_boolean_false
 11052 0000786F 0F8464020000            	je .L_if_else_002c
 11053                                  	; preparing a non-tail-call
 11054 00007875 488B4528                	mov rax, PARAM(1)	; param b
 11055 00007879 50                      	push rax
 11056 0000787A 6A01                    	push 1	; arg count
 11057 0000787C 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11058 00007884 803805                  	cmp byte [rax], T_undefined
 11059 00007887 0F8417F10000            	je L_error_fvar_undefined
 11060 0000788D 803804                  	cmp byte [rax], T_closure
 11061 00007890 0F8592F10000            	jne L_error_non_closure
 11062 00007896 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11063 00007899 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11064 0000789C 483D[02000000]          	cmp rax, sob_boolean_false
 11065 000078A2 0F848B000000            	je .L_if_else_002b
 11066                                  	; preparing a tail-call
 11067                                  	; preparing a non-tail-call
 11068 000078A8 488B4528                	mov rax, PARAM(1)	; param b
 11069 000078AC 50                      	push rax
 11070 000078AD 6A01                    	push 1	; arg count
 11071 000078AF 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 11072 000078B7 803805                  	cmp byte [rax], T_undefined
 11073 000078BA 0F84E4F00000            	je L_error_fvar_undefined
 11074 000078C0 803804                  	cmp byte [rax], T_closure
 11075 000078C3 0F855FF10000            	jne L_error_non_closure
 11076 000078C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11077 000078CC FF5009                  	call SOB_CLOSURE_CODE(rax)
 11078 000078CF 50                      	push rax
 11079 000078D0 488B4520                	mov rax, PARAM(0)	; param a
 11080 000078D4 50                      	push rax
 11081 000078D5 6A02                    	push 2	; arg count
 11082 000078D7 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 11083 000078DF 803805                  	cmp byte [rax], T_undefined
 11084 000078E2 0F84BCF00000            	je L_error_fvar_undefined
 11085 000078E8 803804                  	cmp byte [rax], T_closure
 11086 000078EB 0F8537F10000            	jne L_error_non_closure
 11087 000078F1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11088 000078F4 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11089 000078F7 FF7500                  	push qword[rbp]
 11090 000078FA 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11091 000078FF 48895D10                	mov qword[rbp + 8*2],rbx
 11092 00007903 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 11093 0000790B BF00000000              	mov rdi,0
 11094 00007910 EB00                    	jmp .L_tc_recycle_frame_loop_005b
 11095                                  .L_tc_recycle_frame_loop_005b:
 11096 00007912 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11097 00007916 740F                    	je .L_tc_recycle_frame_done_005b
 11098 00007918 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11099 0000791D 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11100 00007922 48FFC7                  	inc rdi
 11101 00007925 EBEB                    	jmp .L_tc_recycle_frame_loop_005b
 11102                                  .L_tc_recycle_frame_done_005b:
 11103 00007927 4889EC                  	mov rsp, rbp	; point to last argument
 11104 0000792A 5D                      	pop rbp
 11105 0000792B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11106 0000792E E9A4010000              	jmp .L_if_end_002b
 11107                                  .L_if_else_002b:
 11108                                  	; preparing a non-tail-call
 11109 00007933 488B4528                	mov rax, PARAM(1)	; param b
 11110 00007937 50                      	push rax
 11111 00007938 6A01                    	push 1	; arg count
 11112 0000793A 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 11113 00007942 803805                  	cmp byte [rax], T_undefined
 11114 00007945 0F8459F00000            	je L_error_fvar_undefined
 11115 0000794B 803804                  	cmp byte [rax], T_closure
 11116 0000794E 0F85D4F00000            	jne L_error_non_closure
 11117 00007954 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11118 00007957 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11119 0000795A 483D[02000000]          	cmp rax, sob_boolean_false
 11120 00007960 0F848B000000            	je .L_if_else_002a
 11121                                  	; preparing a tail-call
 11122                                  	; preparing a non-tail-call
 11123 00007966 488B4528                	mov rax, PARAM(1)	; param b
 11124 0000796A 50                      	push rax
 11125 0000796B 6A01                    	push 1	; arg count
 11126 0000796D 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 11127 00007975 803805                  	cmp byte [rax], T_undefined
 11128 00007978 0F8426F00000            	je L_error_fvar_undefined
 11129 0000797E 803804                  	cmp byte [rax], T_closure
 11130 00007981 0F85A1F00000            	jne L_error_non_closure
 11131 00007987 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11132 0000798A FF5009                  	call SOB_CLOSURE_CODE(rax)
 11133 0000798D 50                      	push rax
 11134 0000798E 488B4520                	mov rax, PARAM(0)	; param a
 11135 00007992 50                      	push rax
 11136 00007993 6A02                    	push 2	; arg count
 11137 00007995 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 11138 0000799D 803805                  	cmp byte [rax], T_undefined
 11139 000079A0 0F84FEEF0000            	je L_error_fvar_undefined
 11140 000079A6 803804                  	cmp byte [rax], T_closure
 11141 000079A9 0F8579F00000            	jne L_error_non_closure
 11142 000079AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 11143 000079B2 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11144 000079B5 FF7500                  	push qword[rbp]
 11145 000079B8 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11146 000079BD 48895D10                	mov qword[rbp + 8*2],rbx
 11147 000079C1 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 11148 000079C9 BF00000000              	mov rdi,0
 11149 000079CE EB00                    	jmp .L_tc_recycle_frame_loop_005c
 11150                                  .L_tc_recycle_frame_loop_005c:
 11151 000079D0 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11152 000079D4 740F                    	je .L_tc_recycle_frame_done_005c
 11153 000079D6 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11154 000079DB 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11155 000079E0 48FFC7                  	inc rdi
 11156 000079E3 EBEB                    	jmp .L_tc_recycle_frame_loop_005c
 11157                                  .L_tc_recycle_frame_done_005c:
 11158 000079E5 4889EC                  	mov rsp, rbp	; point to last argument
 11159 000079E8 5D                      	pop rbp
 11160 000079E9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11161 000079EC E9E6000000              	jmp .L_if_end_002a
 11162                                  .L_if_else_002a:
 11163                                  	; preparing a non-tail-call
 11164 000079F1 488B4528                	mov rax, PARAM(1)	; param b
 11165 000079F5 50                      	push rax
 11166 000079F6 6A01                    	push 1	; arg count
 11167 000079F8 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 11168 00007A00 803805                  	cmp byte [rax], T_undefined
 11169 00007A03 0F849BEF0000            	je L_error_fvar_undefined
 11170 00007A09 803804                  	cmp byte [rax], T_closure
 11171 00007A0C 0F8516F00000            	jne L_error_non_closure
 11172 00007A12 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11173 00007A15 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11174 00007A18 483D[02000000]          	cmp rax, sob_boolean_false
 11175 00007A1E 7465                    	je .L_if_else_0029
 11176                                  	; preparing a tail-call
 11177 00007A20 488B4528                	mov rax, PARAM(1)	; param b
 11178 00007A24 50                      	push rax
 11179 00007A25 488B4520                	mov rax, PARAM(0)	; param a
 11180 00007A29 50                      	push rax
 11181 00007A2A 6A02                    	push 2	; arg count
 11182 00007A2C 488B0425[7F0F0000]      	mov rax, qword [free_var_26]	; free var __bin-sub-rr
 11183 00007A34 803805                  	cmp byte [rax], T_undefined
 11184 00007A37 0F8467EF0000            	je L_error_fvar_undefined
 11185 00007A3D 803804                  	cmp byte [rax], T_closure
 11186 00007A40 0F85E2EF0000            	jne L_error_non_closure
 11187 00007A46 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11188 00007A49 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11189 00007A4C FF7500                  	push qword[rbp]
 11190 00007A4F 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11191 00007A54 48895D10                	mov qword[rbp + 8*2],rbx
 11192 00007A58 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 11193 00007A60 BF00000000              	mov rdi,0
 11194 00007A65 EB00                    	jmp .L_tc_recycle_frame_loop_005d
 11195                                  .L_tc_recycle_frame_loop_005d:
 11196 00007A67 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11197 00007A6B 740F                    	je .L_tc_recycle_frame_done_005d
 11198 00007A6D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11199 00007A72 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11200 00007A77 48FFC7                  	inc rdi
 11201 00007A7A EBEB                    	jmp .L_tc_recycle_frame_loop_005d
 11202                                  .L_tc_recycle_frame_done_005d:
 11203 00007A7C 4889EC                  	mov rsp, rbp	; point to last argument
 11204 00007A7F 5D                      	pop rbp
 11205 00007A80 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11206 00007A83 EB52                    	jmp .L_if_end_0029
 11207                                  .L_if_else_0029:
 11208                                  	; preparing a tail-call
 11209 00007A85 6A00                    	push 0	; arg count
 11210 00007A87 488B4510                	mov rax, ENV
 11211 00007A8B 488B00                  	mov rax, qword [rax + 8 * 0]
 11212 00007A8E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11213 00007A91 803804                  	cmp byte [rax], T_closure
 11214 00007A94 0F858EEF0000            	jne L_error_non_closure
 11215 00007A9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11216 00007A9D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11217 00007AA0 FF7500                  	push qword[rbp]
 11218 00007AA3 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11219 00007AA8 48895D10                	mov qword[rbp + 8*2],rbx
 11220 00007AAC 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 11221 00007AB4 BF00000000              	mov rdi,0
 11222 00007AB9 EB00                    	jmp .L_tc_recycle_frame_loop_005e
 11223                                  .L_tc_recycle_frame_loop_005e:
 11224 00007ABB 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11225 00007ABF 740F                    	je .L_tc_recycle_frame_done_005e
 11226 00007AC1 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11227 00007AC6 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11228 00007ACB 48FFC7                  	inc rdi
 11229 00007ACE EBEB                    	jmp .L_tc_recycle_frame_loop_005e
 11230                                  .L_tc_recycle_frame_done_005e:
 11231 00007AD0 4889EC                  	mov rsp, rbp	; point to last argument
 11232 00007AD3 5D                      	pop rbp
 11233 00007AD4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11234                                  .L_if_end_0029:
 11235                                  .L_if_end_002a:
 11236                                  .L_if_end_002b:
 11237 00007AD7 EB52                    	jmp .L_if_end_002c
 11238                                  .L_if_else_002c:
 11239                                  	; preparing a tail-call
 11240 00007AD9 6A00                    	push 0	; arg count
 11241 00007ADB 488B4510                	mov rax, ENV
 11242 00007ADF 488B00                  	mov rax, qword [rax + 8 * 0]
 11243 00007AE2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 11244 00007AE5 803804                  	cmp byte [rax], T_closure
 11245 00007AE8 0F853AEF0000            	jne L_error_non_closure
 11246 00007AEE FF7001                  	push SOB_CLOSURE_ENV(rax)
 11247 00007AF1 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11248 00007AF4 FF7500                  	push qword[rbp]
 11249 00007AF7 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11250 00007AFC 48895D10                	mov qword[rbp + 8*2],rbx
 11251 00007B00 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 11252 00007B08 BF00000000              	mov rdi,0
 11253 00007B0D EB00                    	jmp .L_tc_recycle_frame_loop_005f
 11254                                  .L_tc_recycle_frame_loop_005f:
 11255 00007B0F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11256 00007B13 740F                    	je .L_tc_recycle_frame_done_005f
 11257 00007B15 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11258 00007B1A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11259 00007B1F 48FFC7                  	inc rdi
 11260 00007B22 EBEB                    	jmp .L_tc_recycle_frame_loop_005f
 11261                                  .L_tc_recycle_frame_done_005f:
 11262 00007B24 4889EC                  	mov rsp, rbp	; point to last argument
 11263 00007B27 5D                      	pop rbp
 11264 00007B28 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11265                                  .L_if_end_002c:
 11266                                  .L_if_end_002d:
 11267                                  .L_if_end_002e:
 11268 00007B2B C9                      	leave
 11269 00007B2C C22000                  	ret AND_KILL_FRAME(2)
 11270                                  .L_lambda_simple_end_003e:	; new closure is in rax
 11271 00007B2F 50                      	push rax
 11272 00007B30 6A01                    	push 1	; arg count
 11273 00007B32 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11274 00007B37 E895EF0000              	call malloc
 11275 00007B3C 50                      	push rax
 11276 00007B3D BF08000000              	mov rdi, 8 * 1	; new rib
 11277 00007B42 E88AEF0000              	call malloc
 11278 00007B47 50                      	push rax
 11279 00007B48 BF10000000              	mov rdi, 8 * 2	; extended env
 11280 00007B4D E87FEF0000              	call malloc
 11281 00007B52 488B7D10                	mov rdi, ENV
 11282 00007B56 BE00000000              	mov rsi, 0
 11283 00007B5B BA01000000              	mov rdx, 1
 11284                                  .L_lambda_simple_env_loop_003f:	; ext_env[i + 1] <-- env[i]
 11285 00007B60 4883FE01                	cmp rsi, 1
 11286 00007B64 7410                    	je .L_lambda_simple_env_end_003f
 11287 00007B66 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11288 00007B6A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11289 00007B6E 48FFC6                  	inc rsi
 11290 00007B71 48FFC2                  	inc rdx
 11291 00007B74 EBEA                    	jmp .L_lambda_simple_env_loop_003f
 11292                                  .L_lambda_simple_env_end_003f:
 11293 00007B76 5B                      	pop rbx
 11294 00007B77 BE00000000              	mov rsi, 0
 11295                                  .L_lambda_simple_params_loop_003f:	; copy params
 11296 00007B7C 4883FE01                	cmp rsi, 1
 11297 00007B80 740E                    	je .L_lambda_simple_params_end_003f
 11298 00007B82 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11299 00007B87 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11300 00007B8B 48FFC6                  	inc rsi
 11301 00007B8E EBEC                    	jmp .L_lambda_simple_params_loop_003f
 11302                                  .L_lambda_simple_params_end_003f:
 11303 00007B90 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11304 00007B93 4889C3                  	mov rbx, rax
 11305 00007B96 58                      	pop rax
 11306 00007B97 C60004                  	mov byte [rax], T_closure
 11307 00007B9A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11308 00007B9E 48C74009[AB7B0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_003f
 11309 00007BA6 E9D6050000              	jmp .L_lambda_simple_end_003f
 11310                                  .L_lambda_simple_code_003f:	; lambda-simple body
 11311 00007BAB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11312 00007BB1 740B                    	je .L_lambda_simple_arity_check_ok_003f
 11313 00007BB3 FF742410                	push qword [rsp + 8 * 2]
 11314 00007BB7 6A01                    	push 1
 11315 00007BB9 E9CCEE0000              	jmp L_error_incorrect_arity_simple
 11316                                  .L_lambda_simple_arity_check_ok_003f:
 11317 00007BBE C8000000                	enter 0, 0
 11318 00007BC2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11319 00007BC7 E805EF0000              	call malloc
 11320 00007BCC 50                      	push rax
 11321 00007BCD BF08000000              	mov rdi, 8 * 1	; new rib
 11322 00007BD2 E8FAEE0000              	call malloc
 11323 00007BD7 50                      	push rax
 11324 00007BD8 BF18000000              	mov rdi, 8 * 3	; extended env
 11325 00007BDD E8EFEE0000              	call malloc
 11326 00007BE2 488B7D10                	mov rdi, ENV
 11327 00007BE6 BE00000000              	mov rsi, 0
 11328 00007BEB BA01000000              	mov rdx, 1
 11329                                  .L_lambda_opt_env_loop_000b:	; ext_env[i + 1] <-- env[i]
 11330 00007BF0 4883FE02                	cmp rsi, 2
 11331 00007BF4 7410                    	je .L_lambda_opt_env_end_000b
 11332 00007BF6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11333 00007BFA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11334 00007BFE 48FFC6                  	inc rsi
 11335 00007C01 48FFC2                  	inc rdx
 11336 00007C04 EBEA                    	jmp .L_lambda_opt_env_loop_000b
 11337                                  .L_lambda_opt_env_end_000b:
 11338 00007C06 5B                      	pop rbx
 11339 00007C07 BE00000000              	mov rsi, 0
 11340                                  .L_lambda_opt_params_loop_000b:	; copy params
 11341 00007C0C 4883FE01                	cmp rsi, 1
 11342 00007C10 740E                    	je .L_lambda_opt_params_end_000b
 11343 00007C12 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11344 00007C17 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11345 00007C1B 48FFC6                  	inc rsi
 11346 00007C1E EBEC                    	jmp .L_lambda_opt_params_loop_000b
 11347                                  .L_lambda_opt_params_end_000b:
 11348 00007C20 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11349 00007C23 4889C3                  	mov rbx, rax
 11350 00007C26 58                      	pop rax
 11351 00007C27 C60004                  	mov byte [rax], T_closure
 11352 00007C2A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11353 00007C2E 48C74009[3B7C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000b
 11354 00007C36 E942050000              	jmp .L_lambda_opt_end_000b
 11355                                  .L_lambda_opt_code_000b:	; lambda-opt body
 11356 00007C3B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11357 00007C41 7411                    	je .L_lambda_opt_arity_check_exact_000b
 11358 00007C43 0F8F6C020000            	jg .L_lambda_opt_arity_check_more_000b
 11359 00007C49 FF742410                	push qword [rsp + 8 * 2]
 11360 00007C4D 6A01                    	push 1
 11361 00007C4F E94AEE0000              	jmp L_error_incorrect_arity_opt
 11362                                  .L_lambda_opt_arity_check_exact_000b:
 11363 00007C54 4883EC08                	sub rsp, 8
 11364 00007C58 488B442408              	mov rax, qword[rsp + 8 *1]
 11365 00007C5D 48890424                	mov qword[rsp], rax  
 11366 00007C61 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 11367 00007C66 4889442408              	mov qword[rsp + 8 * 1], rax
 11368 00007C6B B802000000              	mov rax, 2
 11369 00007C70 4889442410              	mov qword[rsp + 8 *2], rax
 11370 00007C75 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 11371 00007C7A 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 11372 00007C7F 48B8-                   	mov rax, sob_nil
 11372 00007C81 [0100000000000000] 
 11373 00007C89 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 11374 00007C8E C8000000                	enter 0, 0
 11375                                  	; preparing a non-tail-call
 11376 00007C92 488B4528                	mov rax, PARAM(1)	; param s
 11377 00007C96 50                      	push rax
 11378 00007C97 6A01                    	push 1	; arg count
 11379 00007C99 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 11380 00007CA1 803805                  	cmp byte [rax], T_undefined
 11381 00007CA4 0F84FAEC0000            	je L_error_fvar_undefined
 11382 00007CAA 803804                  	cmp byte [rax], T_closure
 11383 00007CAD 0F8575ED0000            	jne L_error_non_closure
 11384 00007CB3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11385 00007CB6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11386 00007CB9 483D[02000000]          	cmp rax, sob_boolean_false
 11387 00007CBF 7467                    	je .L_if_else_0030
 11388                                  	; preparing a tail-call
 11389 00007CC1 488B4520                	mov rax, PARAM(0)	; param a
 11390 00007CC5 50                      	push rax
 11391 00007CC6 48B8-                   	mov rax, L_constants + 2135
 11391 00007CC8 [5708000000000000] 
 11392 00007CD0 50                      	push rax
 11393 00007CD1 6A02                    	push 2	; arg count
 11394 00007CD3 488B4510                	mov rax, ENV
 11395 00007CD7 488B00                  	mov rax, qword [rax + 8 * 0]
 11396 00007CDA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11397 00007CDD 803804                  	cmp byte [rax], T_closure
 11398 00007CE0 0F8542ED0000            	jne L_error_non_closure
 11399 00007CE6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11400 00007CE9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11401 00007CEC FF7500                  	push qword[rbp]
 11402 00007CEF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11403 00007CF4 48895D10                	mov qword[rbp + 8*2],rbx
 11404 00007CF8 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 11405 00007D00 BF00000000              	mov rdi,0
 11406 00007D05 EB00                    	jmp .L_tc_recycle_frame_loop_0063
 11407                                  .L_tc_recycle_frame_loop_0063:
 11408 00007D07 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11409 00007D0B 740F                    	je .L_tc_recycle_frame_done_0063
 11410 00007D0D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11411 00007D12 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11412 00007D17 48FFC7                  	inc rdi
 11413 00007D1A EBEB                    	jmp .L_tc_recycle_frame_loop_0063
 11414                                  .L_tc_recycle_frame_done_0063:
 11415 00007D1C 4889EC                  	mov rsp, rbp	; point to last argument
 11416 00007D1F 5D                      	pop rbp
 11417 00007D20 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11418 00007D23 E984010000              	jmp .L_if_end_0030
 11419                                  .L_if_else_0030:
 11420                                  	; preparing a tail-call
 11421                                  	; preparing a non-tail-call
 11422 00007D28 488B4528                	mov rax, PARAM(1)	; param s
 11423 00007D2C 50                      	push rax
 11424 00007D2D 48B8-                   	mov rax, L_constants + 2135
 11424 00007D2F [5708000000000000] 
 11425 00007D37 50                      	push rax
 11426 00007D38 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 11427 00007D40 803805                  	cmp byte [rax], T_undefined
 11428 00007D43 0F845BEC0000            	je L_error_fvar_undefined
 11429 00007D49 50                      	push rax
 11430 00007D4A 6A03                    	push 3	; arg count
 11431 00007D4C 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 11432 00007D54 803805                  	cmp byte [rax], T_undefined
 11433 00007D57 0F8447EC0000            	je L_error_fvar_undefined
 11434 00007D5D 803804                  	cmp byte [rax], T_closure
 11435 00007D60 0F85C2EC0000            	jne L_error_non_closure
 11436 00007D66 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11437 00007D69 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11438 00007D6C 50                      	push rax
 11439 00007D6D 6A01                    	push 1	; arg count
 11440 00007D6F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11441 00007D74 E858ED0000              	call malloc
 11442 00007D79 50                      	push rax
 11443 00007D7A BF10000000              	mov rdi, 8 * 2	; new rib
 11444 00007D7F E84DED0000              	call malloc
 11445 00007D84 50                      	push rax
 11446 00007D85 BF20000000              	mov rdi, 8 * 4	; extended env
 11447 00007D8A E842ED0000              	call malloc
 11448 00007D8F 488B7D10                	mov rdi, ENV
 11449 00007D93 BE00000000              	mov rsi, 0
 11450 00007D98 BA01000000              	mov rdx, 1
 11451                                  .L_lambda_simple_env_loop_0041:	; ext_env[i + 1] <-- env[i]
 11452 00007D9D 4883FE03                	cmp rsi, 3
 11453 00007DA1 7410                    	je .L_lambda_simple_env_end_0041
 11454 00007DA3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11455 00007DA7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11456 00007DAB 48FFC6                  	inc rsi
 11457 00007DAE 48FFC2                  	inc rdx
 11458 00007DB1 EBEA                    	jmp .L_lambda_simple_env_loop_0041
 11459                                  .L_lambda_simple_env_end_0041:
 11460 00007DB3 5B                      	pop rbx
 11461 00007DB4 BE00000000              	mov rsi, 0
 11462                                  .L_lambda_simple_params_loop_0041:	; copy params
 11463 00007DB9 4883FE02                	cmp rsi, 2
 11464 00007DBD 740E                    	je .L_lambda_simple_params_end_0041
 11465 00007DBF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11466 00007DC4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11467 00007DC8 48FFC6                  	inc rsi
 11468 00007DCB EBEC                    	jmp .L_lambda_simple_params_loop_0041
 11469                                  .L_lambda_simple_params_end_0041:
 11470 00007DCD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11471 00007DD0 4889C3                  	mov rbx, rax
 11472 00007DD3 58                      	pop rax
 11473 00007DD4 C60004                  	mov byte [rax], T_closure
 11474 00007DD7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11475 00007DDB 48C74009[E87D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0041
 11476 00007DE3 E97E000000              	jmp .L_lambda_simple_end_0041
 11477                                  .L_lambda_simple_code_0041:	; lambda-simple body
 11478 00007DE8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11479 00007DEE 740B                    	je .L_lambda_simple_arity_check_ok_0041
 11480 00007DF0 FF742410                	push qword [rsp + 8 * 2]
 11481 00007DF4 6A01                    	push 1
 11482 00007DF6 E98FEC0000              	jmp L_error_incorrect_arity_simple
 11483                                  .L_lambda_simple_arity_check_ok_0041:
 11484 00007DFB C8000000                	enter 0, 0
 11485                                  	; preparing a tail-call
 11486 00007DFF 488B4520                	mov rax, PARAM(0)	; param b
 11487 00007E03 50                      	push rax
 11488 00007E04 488B4510                	mov rax, ENV
 11489 00007E08 488B00                  	mov rax, qword [rax + 8 * 0]
 11490 00007E0B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 11491 00007E0E 50                      	push rax
 11492 00007E0F 6A02                    	push 2	; arg count
 11493 00007E11 488B4510                	mov rax, ENV
 11494 00007E15 488B4008                	mov rax, qword [rax + 8 * 1]
 11495 00007E19 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11496 00007E1C 803804                  	cmp byte [rax], T_closure
 11497 00007E1F 0F8503EC0000            	jne L_error_non_closure
 11498 00007E25 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11499 00007E28 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11500 00007E2B FF7500                  	push qword[rbp]
 11501 00007E2E 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11502 00007E33 48895D10                	mov qword[rbp + 8*2],rbx
 11503 00007E37 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 11504 00007E3F BF00000000              	mov rdi,0
 11505 00007E44 EB00                    	jmp .L_tc_recycle_frame_loop_0064
 11506                                  .L_tc_recycle_frame_loop_0064:
 11507 00007E46 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11508 00007E4A 740F                    	je .L_tc_recycle_frame_done_0064
 11509 00007E4C 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11510 00007E51 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11511 00007E56 48FFC7                  	inc rdi
 11512 00007E59 EBEB                    	jmp .L_tc_recycle_frame_loop_0064
 11513                                  .L_tc_recycle_frame_done_0064:
 11514 00007E5B 4889EC                  	mov rsp, rbp	; point to last argument
 11515 00007E5E 5D                      	pop rbp
 11516 00007E5F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11517 00007E62 C9                      	leave
 11518 00007E63 C21800                  	ret AND_KILL_FRAME(1)
 11519                                  .L_lambda_simple_end_0041:	; new closure is in rax
 11520 00007E66 803804                  	cmp byte [rax], T_closure
 11521 00007E69 0F85B9EB0000            	jne L_error_non_closure
 11522 00007E6F FF7001                  	push SOB_CLOSURE_ENV(rax)
 11523 00007E72 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11524 00007E75 FF7500                  	push qword[rbp]
 11525 00007E78 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11526 00007E7D 48895D10                	mov qword[rbp + 8*2],rbx
 11527 00007E81 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 11528 00007E89 BF00000000              	mov rdi,0
 11529 00007E8E EB00                    	jmp .L_tc_recycle_frame_loop_0065
 11530                                  .L_tc_recycle_frame_loop_0065:
 11531 00007E90 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11532 00007E94 740F                    	je .L_tc_recycle_frame_done_0065
 11533 00007E96 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11534 00007E9B 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11535 00007EA0 48FFC7                  	inc rdi
 11536 00007EA3 EBEB                    	jmp .L_tc_recycle_frame_loop_0065
 11537                                  .L_tc_recycle_frame_done_0065:
 11538 00007EA5 4889EC                  	mov rsp, rbp	; point to last argument
 11539 00007EA8 5D                      	pop rbp
 11540 00007EA9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11541                                  .L_if_end_0030:
 11542 00007EAC C9                      	leave
 11543 00007EAD C22000                  	ret AND_KILL_FRAME(2)
 11544 00007EB0 E9C8020000              	jmp .L_lambda_opt_end_000b	; new closure is in rax
 11545                                  .L_lambda_opt_arity_check_more_000b:
 11546 00007EB5 488B442410              	mov rax, qword[rsp + 2 * 8]
 11547 00007EBA 4889C7                  	mov rdi, rax
 11548 00007EBD 49B9-                   	mov r9, sob_nil
 11548 00007EBF [0100000000000000] 
 11549 00007EC7 4C8B442410              	mov r8, qword[rsp+2*8]
 11550                                  .L_lambda_opt_stack_shrink_loop_000b:
 11551 00007ECC 4983F801                	cmp r8, 1
 11552 00007ED0 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_000b
 11553 00007ED2 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 11554 00007ED7 BF11000000              	mov rdi, 1+8+8	;for pair
 11555 00007EDC E8F0EB0000              	call malloc	 ;to create the pair in the stack
 11556 00007EE1 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 11557 00007EE4 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 11558 00007EE8 4C894809                 	mov qword[rax+1+8],r9
 11559 00007EEC 4989C1                  	mov r9 , rax	 ; for the recursion 
 11560 00007EEF 49FFC8                  	dec r8
 11561 00007EF2 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_000b
 11562                                  .L_lambda_opt_stack_shrink_loop_exit_000b:
 11563 00007EF4 488B442410              	mov rax, qword[rsp + 2 * 8]
 11564 00007EF9 BF02000000              	mov rdi, 2
 11565 00007EFE 4829F8                  	sub rax, rdi
 11566 00007F01 4889C7                  	mov rdi, rax
 11567 00007F04 486BC008                	imul rax,8
 11568 00007F08 4801C4                  	add rsp, rax
 11569 00007F0B 4889E0                  	mov rax, rsp
 11570 00007F0E 4989F8                  	mov r8, rdi
 11571 00007F11 4D6BC008                	imul r8, 8
 11572 00007F15 4C29C0                  	sub rax, r8
 11573 00007F18 4989C2                  	mov r10, rax	; holds the original ret in the stack
 11574 00007F1B 4983C218                	add r10, 8*3
 11575 00007F1F 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 11576 00007F23 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 11577 00007F26 4D6BC008                	imul r8,8
 11578 00007F2A 4C01C0                  	add rax, r8
 11579 00007F2D 4C8908                  	mov qword[rax] ,r9
 11580 00007F30 4D89D0                   	mov r8, r10
 11581 00007F33 4983C000                	add r8, 8 * 0
 11582 00007F37 4D8B08                  	mov r9,qword[r8]
 11583 00007F3A 4D890CF8                	mov qword [r8 + rdi * 8], r9
 11584 00007F3E 4983EA18                	sub r10, 8*3
 11585 00007F42 48C744241002000000      	mov qword [rsp+2*8], 2
 11586 00007F4B 498B4208                	mov rax, qword[r10 + 1 * 8]
 11587 00007F4F 4889442408              	mov qword[rsp + 1*8] ,rax
 11588 00007F54 498B02                  	mov rax, qword[r10]
 11589 00007F57 48890424                	mov qword[rsp], rax
 11590 00007F5B C8000000                	enter 0, 0
 11591                                  	; preparing a non-tail-call
 11592 00007F5F 488B4528                	mov rax, PARAM(1)	; param s
 11593 00007F63 50                      	push rax
 11594 00007F64 6A01                    	push 1	; arg count
 11595 00007F66 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 11596 00007F6E 803805                  	cmp byte [rax], T_undefined
 11597 00007F71 0F842DEA0000            	je L_error_fvar_undefined
 11598 00007F77 803804                  	cmp byte [rax], T_closure
 11599 00007F7A 0F85A8EA0000            	jne L_error_non_closure
 11600 00007F80 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11601 00007F83 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11602 00007F86 483D[02000000]          	cmp rax, sob_boolean_false
 11603 00007F8C 7467                    	je .L_if_else_002f
 11604                                  	; preparing a tail-call
 11605 00007F8E 488B4520                	mov rax, PARAM(0)	; param a
 11606 00007F92 50                      	push rax
 11607 00007F93 48B8-                   	mov rax, L_constants + 2135
 11607 00007F95 [5708000000000000] 
 11608 00007F9D 50                      	push rax
 11609 00007F9E 6A02                    	push 2	; arg count
 11610 00007FA0 488B4510                	mov rax, ENV
 11611 00007FA4 488B00                  	mov rax, qword [rax + 8 * 0]
 11612 00007FA7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11613 00007FAA 803804                  	cmp byte [rax], T_closure
 11614 00007FAD 0F8575EA0000            	jne L_error_non_closure
 11615 00007FB3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11616 00007FB6 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11617 00007FB9 FF7500                  	push qword[rbp]
 11618 00007FBC 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11619 00007FC1 48895D10                	mov qword[rbp + 8*2],rbx
 11620 00007FC5 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 11621 00007FCD BF00000000              	mov rdi,0
 11622 00007FD2 EB00                    	jmp .L_tc_recycle_frame_loop_0060
 11623                                  .L_tc_recycle_frame_loop_0060:
 11624 00007FD4 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11625 00007FD8 740F                    	je .L_tc_recycle_frame_done_0060
 11626 00007FDA 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11627 00007FDF 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11628 00007FE4 48FFC7                  	inc rdi
 11629 00007FE7 EBEB                    	jmp .L_tc_recycle_frame_loop_0060
 11630                                  .L_tc_recycle_frame_done_0060:
 11631 00007FE9 4889EC                  	mov rsp, rbp	; point to last argument
 11632 00007FEC 5D                      	pop rbp
 11633 00007FED FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11634 00007FF0 E984010000              	jmp .L_if_end_002f
 11635                                  .L_if_else_002f:
 11636                                  	; preparing a tail-call
 11637                                  	; preparing a non-tail-call
 11638 00007FF5 488B4528                	mov rax, PARAM(1)	; param s
 11639 00007FF9 50                      	push rax
 11640 00007FFA 48B8-                   	mov rax, L_constants + 2135
 11640 00007FFC [5708000000000000] 
 11641 00008004 50                      	push rax
 11642 00008005 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 11643 0000800D 803805                  	cmp byte [rax], T_undefined
 11644 00008010 0F848EE90000            	je L_error_fvar_undefined
 11645 00008016 50                      	push rax
 11646 00008017 6A03                    	push 3	; arg count
 11647 00008019 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 11648 00008021 803805                  	cmp byte [rax], T_undefined
 11649 00008024 0F847AE90000            	je L_error_fvar_undefined
 11650 0000802A 803804                  	cmp byte [rax], T_closure
 11651 0000802D 0F85F5E90000            	jne L_error_non_closure
 11652 00008033 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11653 00008036 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11654 00008039 50                      	push rax
 11655 0000803A 6A01                    	push 1	; arg count
 11656 0000803C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11657 00008041 E88BEA0000              	call malloc
 11658 00008046 50                      	push rax
 11659 00008047 BF10000000              	mov rdi, 8 * 2	; new rib
 11660 0000804C E880EA0000              	call malloc
 11661 00008051 50                      	push rax
 11662 00008052 BF20000000              	mov rdi, 8 * 4	; extended env
 11663 00008057 E875EA0000              	call malloc
 11664 0000805C 488B7D10                	mov rdi, ENV
 11665 00008060 BE00000000              	mov rsi, 0
 11666 00008065 BA01000000              	mov rdx, 1
 11667                                  .L_lambda_simple_env_loop_0040:	; ext_env[i + 1] <-- env[i]
 11668 0000806A 4883FE03                	cmp rsi, 3
 11669 0000806E 7410                    	je .L_lambda_simple_env_end_0040
 11670 00008070 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11671 00008074 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11672 00008078 48FFC6                  	inc rsi
 11673 0000807B 48FFC2                  	inc rdx
 11674 0000807E EBEA                    	jmp .L_lambda_simple_env_loop_0040
 11675                                  .L_lambda_simple_env_end_0040:
 11676 00008080 5B                      	pop rbx
 11677 00008081 BE00000000              	mov rsi, 0
 11678                                  .L_lambda_simple_params_loop_0040:	; copy params
 11679 00008086 4883FE02                	cmp rsi, 2
 11680 0000808A 740E                    	je .L_lambda_simple_params_end_0040
 11681 0000808C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11682 00008091 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11683 00008095 48FFC6                  	inc rsi
 11684 00008098 EBEC                    	jmp .L_lambda_simple_params_loop_0040
 11685                                  .L_lambda_simple_params_end_0040:
 11686 0000809A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11687 0000809D 4889C3                  	mov rbx, rax
 11688 000080A0 58                      	pop rax
 11689 000080A1 C60004                  	mov byte [rax], T_closure
 11690 000080A4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11691 000080A8 48C74009[B5800000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0040
 11692 000080B0 E97E000000              	jmp .L_lambda_simple_end_0040
 11693                                  .L_lambda_simple_code_0040:	; lambda-simple body
 11694 000080B5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11695 000080BB 740B                    	je .L_lambda_simple_arity_check_ok_0040
 11696 000080BD FF742410                	push qword [rsp + 8 * 2]
 11697 000080C1 6A01                    	push 1
 11698 000080C3 E9C2E90000              	jmp L_error_incorrect_arity_simple
 11699                                  .L_lambda_simple_arity_check_ok_0040:
 11700 000080C8 C8000000                	enter 0, 0
 11701                                  	; preparing a tail-call
 11702 000080CC 488B4520                	mov rax, PARAM(0)	; param b
 11703 000080D0 50                      	push rax
 11704 000080D1 488B4510                	mov rax, ENV
 11705 000080D5 488B00                  	mov rax, qword [rax + 8 * 0]
 11706 000080D8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 11707 000080DB 50                      	push rax
 11708 000080DC 6A02                    	push 2	; arg count
 11709 000080DE 488B4510                	mov rax, ENV
 11710 000080E2 488B4008                	mov rax, qword [rax + 8 * 1]
 11711 000080E6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-
 11712 000080E9 803804                  	cmp byte [rax], T_closure
 11713 000080EC 0F8536E90000            	jne L_error_non_closure
 11714 000080F2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11715 000080F5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11716 000080F8 FF7500                  	push qword[rbp]
 11717 000080FB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11718 00008100 48895D10                	mov qword[rbp + 8*2],rbx
 11719 00008104 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 11720 0000810C BF00000000              	mov rdi,0
 11721 00008111 EB00                    	jmp .L_tc_recycle_frame_loop_0061
 11722                                  .L_tc_recycle_frame_loop_0061:
 11723 00008113 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11724 00008117 740F                    	je .L_tc_recycle_frame_done_0061
 11725 00008119 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11726 0000811E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11727 00008123 48FFC7                  	inc rdi
 11728 00008126 EBEB                    	jmp .L_tc_recycle_frame_loop_0061
 11729                                  .L_tc_recycle_frame_done_0061:
 11730 00008128 4889EC                  	mov rsp, rbp	; point to last argument
 11731 0000812B 5D                      	pop rbp
 11732 0000812C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11733 0000812F C9                      	leave
 11734 00008130 C21800                  	ret AND_KILL_FRAME(1)
 11735                                  .L_lambda_simple_end_0040:	; new closure is in rax
 11736 00008133 803804                  	cmp byte [rax], T_closure
 11737 00008136 0F85ECE80000            	jne L_error_non_closure
 11738 0000813C FF7001                  	push SOB_CLOSURE_ENV(rax)
 11739 0000813F FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11740 00008142 FF7500                  	push qword[rbp]
 11741 00008145 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11742 0000814A 48895D10                	mov qword[rbp + 8*2],rbx
 11743 0000814E 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 11744 00008156 BF00000000              	mov rdi,0
 11745 0000815B EB00                    	jmp .L_tc_recycle_frame_loop_0062
 11746                                  .L_tc_recycle_frame_loop_0062:
 11747 0000815D 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11748 00008161 740F                    	je .L_tc_recycle_frame_done_0062
 11749 00008163 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11750 00008168 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11751 0000816D 48FFC7                  	inc rdi
 11752 00008170 EBEB                    	jmp .L_tc_recycle_frame_loop_0062
 11753                                  .L_tc_recycle_frame_done_0062:
 11754 00008172 4889EC                  	mov rsp, rbp	; point to last argument
 11755 00008175 5D                      	pop rbp
 11756 00008176 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11757                                  .L_if_end_002f:
 11758 00008179 C9                      	leave
 11759 0000817A C22000                  	ret AND_KILL_FRAME(2)
 11760                                  .L_lambda_opt_end_000b:	; new closure is in rax
 11761 0000817D C9                      	leave
 11762 0000817E C21800                  	ret AND_KILL_FRAME(1)
 11763                                  .L_lambda_simple_end_003f:	; new closure is in rax
 11764 00008181 803804                  	cmp byte [rax], T_closure
 11765 00008184 0F859EE80000            	jne L_error_non_closure
 11766 0000818A FF7001                  	push SOB_CLOSURE_ENV(rax)
 11767 0000818D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11768 00008190 FF7500                  	push qword[rbp]
 11769 00008193 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11770 00008198 48895D10                	mov qword[rbp + 8*2],rbx
 11771 0000819C 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 11772 000081A4 BF00000000              	mov rdi,0
 11773 000081A9 EB00                    	jmp .L_tc_recycle_frame_loop_0066
 11774                                  .L_tc_recycle_frame_loop_0066:
 11775 000081AB 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11776 000081AF 740F                    	je .L_tc_recycle_frame_done_0066
 11777 000081B1 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11778 000081B6 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11779 000081BB 48FFC7                  	inc rdi
 11780 000081BE EBEB                    	jmp .L_tc_recycle_frame_loop_0066
 11781                                  .L_tc_recycle_frame_done_0066:
 11782 000081C0 4889EC                  	mov rsp, rbp	; point to last argument
 11783 000081C3 5D                      	pop rbp
 11784 000081C4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11785 000081C7 C9                      	leave
 11786 000081C8 C21800                  	ret AND_KILL_FRAME(1)
 11787                                  .L_lambda_simple_end_003d:	; new closure is in rax
 11788 000081CB 803804                  	cmp byte [rax], T_closure
 11789 000081CE 0F8554E80000            	jne L_error_non_closure
 11790 000081D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11791 000081D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11792 000081DA 48890425[E70D0000]      	mov qword [free_var_2], rax
 11793 000081E2 48B8-                   	mov rax, sob_void
 11793 000081E4 [0000000000000000] 
 11794                                  
 11795 000081EC 4889C7                  	mov rdi, rax
 11796 000081EF E832EB0000              	call print_sexpr_if_not_void
 11797                                  	; preparing a non-tail-call
 11798 000081F4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11799 000081F9 E8D3E80000              	call malloc
 11800 000081FE 50                      	push rax
 11801 000081FF BF00000000              	mov rdi, 8 * 0	; new rib
 11802 00008204 E8C8E80000              	call malloc
 11803 00008209 50                      	push rax
 11804 0000820A BF08000000              	mov rdi, 8 * 1	; extended env
 11805 0000820F E8BDE80000              	call malloc
 11806 00008214 488B7D10                	mov rdi, ENV
 11807 00008218 BE00000000              	mov rsi, 0
 11808 0000821D BA01000000              	mov rdx, 1
 11809                                  .L_lambda_simple_env_loop_0042:	; ext_env[i + 1] <-- env[i]
 11810 00008222 4883FE00                	cmp rsi, 0
 11811 00008226 7410                    	je .L_lambda_simple_env_end_0042
 11812 00008228 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11813 0000822C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11814 00008230 48FFC6                  	inc rsi
 11815 00008233 48FFC2                  	inc rdx
 11816 00008236 EBEA                    	jmp .L_lambda_simple_env_loop_0042
 11817                                  .L_lambda_simple_env_end_0042:
 11818 00008238 5B                      	pop rbx
 11819 00008239 BE00000000              	mov rsi, 0
 11820                                  .L_lambda_simple_params_loop_0042:	; copy params
 11821 0000823E 4883FE00                	cmp rsi, 0
 11822 00008242 740E                    	je .L_lambda_simple_params_end_0042
 11823 00008244 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11824 00008249 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11825 0000824D 48FFC6                  	inc rsi
 11826 00008250 EBEC                    	jmp .L_lambda_simple_params_loop_0042
 11827                                  .L_lambda_simple_params_end_0042:
 11828 00008252 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11829 00008255 4889C3                  	mov rbx, rax
 11830 00008258 58                      	pop rax
 11831 00008259 C60004                  	mov byte [rax], T_closure
 11832 0000825C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11833 00008260 48C74009[6D820000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0042
 11834 00008268 E98A000000              	jmp .L_lambda_simple_end_0042
 11835                                  .L_lambda_simple_code_0042:	; lambda-simple body
 11836 0000826D 48837C241000            	cmp qword [rsp + 8 * 2], 0
 11837 00008273 740B                    	je .L_lambda_simple_arity_check_ok_0042
 11838 00008275 FF742410                	push qword [rsp + 8 * 2]
 11839 00008279 6A00                    	push 0
 11840 0000827B E90AE80000              	jmp L_error_incorrect_arity_simple
 11841                                  .L_lambda_simple_arity_check_ok_0042:
 11842 00008280 C8000000                	enter 0, 0
 11843                                  	; preparing a tail-call
 11844 00008284 48B8-                   	mov rax, L_constants + 2187
 11844 00008286 [8B08000000000000] 
 11845 0000828E 50                      	push rax
 11846 0000828F 48B8-                   	mov rax, L_constants + 2279
 11846 00008291 [E708000000000000] 
 11847 00008299 50                      	push rax
 11848 0000829A 6A02                    	push 2	; arg count
 11849 0000829C 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 11850 000082A4 803805                  	cmp byte [rax], T_undefined
 11851 000082A7 0F84F7E60000            	je L_error_fvar_undefined
 11852 000082AD 803804                  	cmp byte [rax], T_closure
 11853 000082B0 0F8572E70000            	jne L_error_non_closure
 11854 000082B6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 11855 000082B9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 11856 000082BC FF7500                  	push qword[rbp]
 11857 000082BF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 11858 000082C4 48895D10                	mov qword[rbp + 8*2],rbx
 11859 000082C8 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 11860 000082D0 BF00000000              	mov rdi,0
 11861 000082D5 EB00                    	jmp .L_tc_recycle_frame_loop_0067
 11862                                  .L_tc_recycle_frame_loop_0067:
 11863 000082D7 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 11864 000082DB 740F                    	je .L_tc_recycle_frame_done_0067
 11865 000082DD 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 11866 000082E2 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 11867 000082E7 48FFC7                  	inc rdi
 11868 000082EA EBEB                    	jmp .L_tc_recycle_frame_loop_0067
 11869                                  .L_tc_recycle_frame_done_0067:
 11870 000082EC 4889EC                  	mov rsp, rbp	; point to last argument
 11871 000082EF 5D                      	pop rbp
 11872 000082F0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 11873 000082F3 C9                      	leave
 11874 000082F4 C21000                  	ret AND_KILL_FRAME(0)
 11875                                  .L_lambda_simple_end_0042:	; new closure is in rax
 11876 000082F7 50                      	push rax
 11877 000082F8 6A01                    	push 1	; arg count
 11878 000082FA BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11879 000082FF E8CDE70000              	call malloc
 11880 00008304 50                      	push rax
 11881 00008305 BF00000000              	mov rdi, 8 * 0	; new rib
 11882 0000830A E8C2E70000              	call malloc
 11883 0000830F 50                      	push rax
 11884 00008310 BF08000000              	mov rdi, 8 * 1	; extended env
 11885 00008315 E8B7E70000              	call malloc
 11886 0000831A 488B7D10                	mov rdi, ENV
 11887 0000831E BE00000000              	mov rsi, 0
 11888 00008323 BA01000000              	mov rdx, 1
 11889                                  .L_lambda_simple_env_loop_0043:	; ext_env[i + 1] <-- env[i]
 11890 00008328 4883FE00                	cmp rsi, 0
 11891 0000832C 7410                    	je .L_lambda_simple_env_end_0043
 11892 0000832E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11893 00008332 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11894 00008336 48FFC6                  	inc rsi
 11895 00008339 48FFC2                  	inc rdx
 11896 0000833C EBEA                    	jmp .L_lambda_simple_env_loop_0043
 11897                                  .L_lambda_simple_env_end_0043:
 11898 0000833E 5B                      	pop rbx
 11899 0000833F BE00000000              	mov rsi, 0
 11900                                  .L_lambda_simple_params_loop_0043:	; copy params
 11901 00008344 4883FE00                	cmp rsi, 0
 11902 00008348 740E                    	je .L_lambda_simple_params_end_0043
 11903 0000834A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11904 0000834F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11905 00008353 48FFC6                  	inc rsi
 11906 00008356 EBEC                    	jmp .L_lambda_simple_params_loop_0043
 11907                                  .L_lambda_simple_params_end_0043:
 11908 00008358 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11909 0000835B 4889C3                  	mov rbx, rax
 11910 0000835E 58                      	pop rax
 11911 0000835F C60004                  	mov byte [rax], T_closure
 11912 00008362 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11913 00008366 48C74009[73830000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0043
 11914 0000836E E9000C0000              	jmp .L_lambda_simple_end_0043
 11915                                  .L_lambda_simple_code_0043:	; lambda-simple body
 11916 00008373 48837C241001            	cmp qword [rsp + 8 * 2], 1
 11917 00008379 740B                    	je .L_lambda_simple_arity_check_ok_0043
 11918 0000837B FF742410                	push qword [rsp + 8 * 2]
 11919 0000837F 6A01                    	push 1
 11920 00008381 E904E70000              	jmp L_error_incorrect_arity_simple
 11921                                  .L_lambda_simple_arity_check_ok_0043:
 11922 00008386 C8000000                	enter 0, 0
 11923                                  	; preparing a tail-call
 11924 0000838A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 11925 0000838F E83DE70000              	call malloc
 11926 00008394 50                      	push rax
 11927 00008395 BF08000000              	mov rdi, 8 * 1	; new rib
 11928 0000839A E832E70000              	call malloc
 11929 0000839F 50                      	push rax
 11930 000083A0 BF10000000              	mov rdi, 8 * 2	; extended env
 11931 000083A5 E827E70000              	call malloc
 11932 000083AA 488B7D10                	mov rdi, ENV
 11933 000083AE BE00000000              	mov rsi, 0
 11934 000083B3 BA01000000              	mov rdx, 1
 11935                                  .L_lambda_simple_env_loop_0044:	; ext_env[i + 1] <-- env[i]
 11936 000083B8 4883FE01                	cmp rsi, 1
 11937 000083BC 7410                    	je .L_lambda_simple_env_end_0044
 11938 000083BE 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 11939 000083C2 48890CD0                	mov qword [rax + 8 * rdx], rcx
 11940 000083C6 48FFC6                  	inc rsi
 11941 000083C9 48FFC2                  	inc rdx
 11942 000083CC EBEA                    	jmp .L_lambda_simple_env_loop_0044
 11943                                  .L_lambda_simple_env_end_0044:
 11944 000083CE 5B                      	pop rbx
 11945 000083CF BE00000000              	mov rsi, 0
 11946                                  .L_lambda_simple_params_loop_0044:	; copy params
 11947 000083D4 4883FE01                	cmp rsi, 1
 11948 000083D8 740E                    	je .L_lambda_simple_params_end_0044
 11949 000083DA 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 11950 000083DF 488914F3                	mov qword [rbx + 8 * rsi], rdx
 11951 000083E3 48FFC6                  	inc rsi
 11952 000083E6 EBEC                    	jmp .L_lambda_simple_params_loop_0044
 11953                                  .L_lambda_simple_params_end_0044:
 11954 000083E8 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 11955 000083EB 4889C3                  	mov rbx, rax
 11956 000083EE 58                      	pop rax
 11957 000083EF C60004                  	mov byte [rax], T_closure
 11958 000083F2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 11959 000083F6 48C74009[03840000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0044
 11960 000083FE E938080000              	jmp .L_lambda_simple_end_0044
 11961                                  .L_lambda_simple_code_0044:	; lambda-simple body
 11962 00008403 48837C241002            	cmp qword [rsp + 8 * 2], 2
 11963 00008409 740B                    	je .L_lambda_simple_arity_check_ok_0044
 11964 0000840B FF742410                	push qword [rsp + 8 * 2]
 11965 0000840F 6A02                    	push 2
 11966 00008411 E974E60000              	jmp L_error_incorrect_arity_simple
 11967                                  .L_lambda_simple_arity_check_ok_0044:
 11968 00008416 C8000000                	enter 0, 0
 11969                                  	; preparing a non-tail-call
 11970 0000841A 488B4520                	mov rax, PARAM(0)	; param a
 11971 0000841E 50                      	push rax
 11972 0000841F 6A01                    	push 1	; arg count
 11973 00008421 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11974 00008429 803805                  	cmp byte [rax], T_undefined
 11975 0000842C 0F8472E50000            	je L_error_fvar_undefined
 11976 00008432 803804                  	cmp byte [rax], T_closure
 11977 00008435 0F85EDE50000            	jne L_error_non_closure
 11978 0000843B FF7001                  	push SOB_CLOSURE_ENV(rax)
 11979 0000843E FF5009                  	call SOB_CLOSURE_CODE(rax)
 11980 00008441 483D[02000000]          	cmp rax, sob_boolean_false
 11981 00008447 0F8467020000            	je .L_if_else_003c
 11982                                  	; preparing a non-tail-call
 11983 0000844D 488B4528                	mov rax, PARAM(1)	; param b
 11984 00008451 50                      	push rax
 11985 00008452 6A01                    	push 1	; arg count
 11986 00008454 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 11987 0000845C 803805                  	cmp byte [rax], T_undefined
 11988 0000845F 0F843FE50000            	je L_error_fvar_undefined
 11989 00008465 803804                  	cmp byte [rax], T_closure
 11990 00008468 0F85BAE50000            	jne L_error_non_closure
 11991 0000846E FF7001                  	push SOB_CLOSURE_ENV(rax)
 11992 00008471 FF5009                  	call SOB_CLOSURE_CODE(rax)
 11993 00008474 483D[02000000]          	cmp rax, sob_boolean_false
 11994 0000847A 7468                    	je .L_if_else_0033
 11995                                  	; preparing a tail-call
 11996 0000847C 488B4528                	mov rax, PARAM(1)	; param b
 11997 00008480 50                      	push rax
 11998 00008481 488B4520                	mov rax, PARAM(0)	; param a
 11999 00008485 50                      	push rax
 12000 00008486 6A02                    	push 2	; arg count
 12001 00008488 488B0425[5D0F0000]      	mov rax, qword [free_var_24]	; free var __bin-mul-zz
 12002 00008490 803805                  	cmp byte [rax], T_undefined
 12003 00008493 0F840BE50000            	je L_error_fvar_undefined
 12004 00008499 803804                  	cmp byte [rax], T_closure
 12005 0000849C 0F8586E50000            	jne L_error_non_closure
 12006 000084A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12007 000084A5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12008 000084A8 FF7500                  	push qword[rbp]
 12009 000084AB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12010 000084B0 48895D10                	mov qword[rbp + 8*2],rbx
 12011 000084B4 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 12012 000084BC BF00000000              	mov rdi,0
 12013 000084C1 EB00                    	jmp .L_tc_recycle_frame_loop_0068
 12014                                  .L_tc_recycle_frame_loop_0068:
 12015 000084C3 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12016 000084C7 740F                    	je .L_tc_recycle_frame_done_0068
 12017 000084C9 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12018 000084CE 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12019 000084D3 48FFC7                  	inc rdi
 12020 000084D6 EBEB                    	jmp .L_tc_recycle_frame_loop_0068
 12021                                  .L_tc_recycle_frame_done_0068:
 12022 000084D8 4889EC                  	mov rsp, rbp	; point to last argument
 12023 000084DB 5D                      	pop rbp
 12024 000084DC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12025 000084DF E9CB010000              	jmp .L_if_end_0033
 12026                                  .L_if_else_0033:
 12027                                  	; preparing a non-tail-call
 12028 000084E4 488B4528                	mov rax, PARAM(1)	; param b
 12029 000084E8 50                      	push rax
 12030 000084E9 6A01                    	push 1	; arg count
 12031 000084EB 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12032 000084F3 803805                  	cmp byte [rax], T_undefined
 12033 000084F6 0F84A8E40000            	je L_error_fvar_undefined
 12034 000084FC 803804                  	cmp byte [rax], T_closure
 12035 000084FF 0F8523E50000            	jne L_error_non_closure
 12036 00008505 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12037 00008508 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12038 0000850B 483D[02000000]          	cmp rax, sob_boolean_false
 12039 00008511 0F848B000000            	je .L_if_else_0032
 12040                                  	; preparing a tail-call
 12041 00008517 488B4528                	mov rax, PARAM(1)	; param b
 12042 0000851B 50                      	push rax
 12043                                  	; preparing a non-tail-call
 12044 0000851C 488B4520                	mov rax, PARAM(0)	; param a
 12045 00008520 50                      	push rax
 12046 00008521 6A01                    	push 1	; arg count
 12047 00008523 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12048 0000852B 803805                  	cmp byte [rax], T_undefined
 12049 0000852E 0F8470E40000            	je L_error_fvar_undefined
 12050 00008534 803804                  	cmp byte [rax], T_closure
 12051 00008537 0F85EBE40000            	jne L_error_non_closure
 12052 0000853D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12053 00008540 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12054 00008543 50                      	push rax
 12055 00008544 6A02                    	push 2	; arg count
 12056 00008546 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 12057 0000854E 803805                  	cmp byte [rax], T_undefined
 12058 00008551 0F844DE40000            	je L_error_fvar_undefined
 12059 00008557 803804                  	cmp byte [rax], T_closure
 12060 0000855A 0F85C8E40000            	jne L_error_non_closure
 12061 00008560 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12062 00008563 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12063 00008566 FF7500                  	push qword[rbp]
 12064 00008569 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12065 0000856E 48895D10                	mov qword[rbp + 8*2],rbx
 12066 00008572 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 12067 0000857A BF00000000              	mov rdi,0
 12068 0000857F EB00                    	jmp .L_tc_recycle_frame_loop_0069
 12069                                  .L_tc_recycle_frame_loop_0069:
 12070 00008581 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12071 00008585 740F                    	je .L_tc_recycle_frame_done_0069
 12072 00008587 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12073 0000858C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12074 00008591 48FFC7                  	inc rdi
 12075 00008594 EBEB                    	jmp .L_tc_recycle_frame_loop_0069
 12076                                  .L_tc_recycle_frame_done_0069:
 12077 00008596 4889EC                  	mov rsp, rbp	; point to last argument
 12078 00008599 5D                      	pop rbp
 12079 0000859A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12080 0000859D E90D010000              	jmp .L_if_end_0032
 12081                                  .L_if_else_0032:
 12082                                  	; preparing a non-tail-call
 12083 000085A2 488B4528                	mov rax, PARAM(1)	; param b
 12084 000085A6 50                      	push rax
 12085 000085A7 6A01                    	push 1	; arg count
 12086 000085A9 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12087 000085B1 803805                  	cmp byte [rax], T_undefined
 12088 000085B4 0F84EAE30000            	je L_error_fvar_undefined
 12089 000085BA 803804                  	cmp byte [rax], T_closure
 12090 000085BD 0F8565E40000            	jne L_error_non_closure
 12091 000085C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12092 000085C6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12093 000085C9 483D[02000000]          	cmp rax, sob_boolean_false
 12094 000085CF 0F8488000000            	je .L_if_else_0031
 12095                                  	; preparing a tail-call
 12096 000085D5 488B4528                	mov rax, PARAM(1)	; param b
 12097 000085D9 50                      	push rax
 12098                                  	; preparing a non-tail-call
 12099 000085DA 488B4520                	mov rax, PARAM(0)	; param a
 12100 000085DE 50                      	push rax
 12101 000085DF 6A01                    	push 1	; arg count
 12102 000085E1 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 12103 000085E9 803805                  	cmp byte [rax], T_undefined
 12104 000085EC 0F84B2E30000            	je L_error_fvar_undefined
 12105 000085F2 803804                  	cmp byte [rax], T_closure
 12106 000085F5 0F852DE40000            	jne L_error_non_closure
 12107 000085FB FF7001                  	push SOB_CLOSURE_ENV(rax)
 12108 000085FE FF5009                  	call SOB_CLOSURE_CODE(rax)
 12109 00008601 50                      	push rax
 12110 00008602 6A02                    	push 2	; arg count
 12111 00008604 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12112 0000860C 803805                  	cmp byte [rax], T_undefined
 12113 0000860F 0F848FE30000            	je L_error_fvar_undefined
 12114 00008615 803804                  	cmp byte [rax], T_closure
 12115 00008618 0F850AE40000            	jne L_error_non_closure
 12116 0000861E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12117 00008621 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12118 00008624 FF7500                  	push qword[rbp]
 12119 00008627 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12120 0000862C 48895D10                	mov qword[rbp + 8*2],rbx
 12121 00008630 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 12122 00008638 BF00000000              	mov rdi,0
 12123 0000863D EB00                    	jmp .L_tc_recycle_frame_loop_006a
 12124                                  .L_tc_recycle_frame_loop_006a:
 12125 0000863F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12126 00008643 740F                    	je .L_tc_recycle_frame_done_006a
 12127 00008645 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12128 0000864A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12129 0000864F 48FFC7                  	inc rdi
 12130 00008652 EBEB                    	jmp .L_tc_recycle_frame_loop_006a
 12131                                  .L_tc_recycle_frame_done_006a:
 12132 00008654 4889EC                  	mov rsp, rbp	; point to last argument
 12133 00008657 5D                      	pop rbp
 12134 00008658 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12135 0000865B EB52                    	jmp .L_if_end_0031
 12136                                  .L_if_else_0031:
 12137                                  	; preparing a tail-call
 12138 0000865D 6A00                    	push 0	; arg count
 12139 0000865F 488B4510                	mov rax, ENV
 12140 00008663 488B00                  	mov rax, qword [rax + 8 * 0]
 12141 00008666 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12142 00008669 803804                  	cmp byte [rax], T_closure
 12143 0000866C 0F85B6E30000            	jne L_error_non_closure
 12144 00008672 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12145 00008675 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12146 00008678 FF7500                  	push qword[rbp]
 12147 0000867B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12148 00008680 48895D10                	mov qword[rbp + 8*2],rbx
 12149 00008684 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 12150 0000868C BF00000000              	mov rdi,0
 12151 00008691 EB00                    	jmp .L_tc_recycle_frame_loop_006b
 12152                                  .L_tc_recycle_frame_loop_006b:
 12153 00008693 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12154 00008697 740F                    	je .L_tc_recycle_frame_done_006b
 12155 00008699 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12156 0000869E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12157 000086A3 48FFC7                  	inc rdi
 12158 000086A6 EBEB                    	jmp .L_tc_recycle_frame_loop_006b
 12159                                  .L_tc_recycle_frame_done_006b:
 12160 000086A8 4889EC                  	mov rsp, rbp	; point to last argument
 12161 000086AB 5D                      	pop rbp
 12162 000086AC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12163                                  .L_if_end_0031:
 12164                                  .L_if_end_0032:
 12165                                  .L_if_end_0033:
 12166 000086AF E983050000              	jmp .L_if_end_003c
 12167                                  .L_if_else_003c:
 12168                                  	; preparing a non-tail-call
 12169 000086B4 488B4520                	mov rax, PARAM(0)	; param a
 12170 000086B8 50                      	push rax
 12171 000086B9 6A01                    	push 1	; arg count
 12172 000086BB 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12173 000086C3 803805                  	cmp byte [rax], T_undefined
 12174 000086C6 0F84D8E20000            	je L_error_fvar_undefined
 12175 000086CC 803804                  	cmp byte [rax], T_closure
 12176 000086CF 0F8553E30000            	jne L_error_non_closure
 12177 000086D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12178 000086D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12179 000086DB 483D[02000000]          	cmp rax, sob_boolean_false
 12180 000086E1 0F8467020000            	je .L_if_else_003b
 12181                                  	; preparing a non-tail-call
 12182 000086E7 488B4528                	mov rax, PARAM(1)	; param b
 12183 000086EB 50                      	push rax
 12184 000086EC 6A01                    	push 1	; arg count
 12185 000086EE 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12186 000086F6 803805                  	cmp byte [rax], T_undefined
 12187 000086F9 0F84A5E20000            	je L_error_fvar_undefined
 12188 000086FF 803804                  	cmp byte [rax], T_closure
 12189 00008702 0F8520E30000            	jne L_error_non_closure
 12190 00008708 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12191 0000870B FF5009                  	call SOB_CLOSURE_CODE(rax)
 12192 0000870E 483D[02000000]          	cmp rax, sob_boolean_false
 12193 00008714 0F848B000000            	je .L_if_else_0036
 12194                                  	; preparing a tail-call
 12195                                  	; preparing a non-tail-call
 12196 0000871A 488B4528                	mov rax, PARAM(1)	; param b
 12197 0000871E 50                      	push rax
 12198 0000871F 6A01                    	push 1	; arg count
 12199 00008721 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 12200 00008729 803805                  	cmp byte [rax], T_undefined
 12201 0000872C 0F8472E20000            	je L_error_fvar_undefined
 12202 00008732 803804                  	cmp byte [rax], T_closure
 12203 00008735 0F85EDE20000            	jne L_error_non_closure
 12204 0000873B FF7001                  	push SOB_CLOSURE_ENV(rax)
 12205 0000873E FF5009                  	call SOB_CLOSURE_CODE(rax)
 12206 00008741 50                      	push rax
 12207 00008742 488B4520                	mov rax, PARAM(0)	; param a
 12208 00008746 50                      	push rax
 12209 00008747 6A02                    	push 2	; arg count
 12210 00008749 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 12211 00008751 803805                  	cmp byte [rax], T_undefined
 12212 00008754 0F844AE20000            	je L_error_fvar_undefined
 12213 0000875A 803804                  	cmp byte [rax], T_closure
 12214 0000875D 0F85C5E20000            	jne L_error_non_closure
 12215 00008763 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12216 00008766 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12217 00008769 FF7500                  	push qword[rbp]
 12218 0000876C 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12219 00008771 48895D10                	mov qword[rbp + 8*2],rbx
 12220 00008775 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 12221 0000877D BF00000000              	mov rdi,0
 12222 00008782 EB00                    	jmp .L_tc_recycle_frame_loop_006c
 12223                                  .L_tc_recycle_frame_loop_006c:
 12224 00008784 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12225 00008788 740F                    	je .L_tc_recycle_frame_done_006c
 12226 0000878A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12227 0000878F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12228 00008794 48FFC7                  	inc rdi
 12229 00008797 EBEB                    	jmp .L_tc_recycle_frame_loop_006c
 12230                                  .L_tc_recycle_frame_done_006c:
 12231 00008799 4889EC                  	mov rsp, rbp	; point to last argument
 12232 0000879C 5D                      	pop rbp
 12233 0000879D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12234 000087A0 E9A4010000              	jmp .L_if_end_0036
 12235                                  .L_if_else_0036:
 12236                                  	; preparing a non-tail-call
 12237 000087A5 488B4528                	mov rax, PARAM(1)	; param b
 12238 000087A9 50                      	push rax
 12239 000087AA 6A01                    	push 1	; arg count
 12240 000087AC 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12241 000087B4 803805                  	cmp byte [rax], T_undefined
 12242 000087B7 0F84E7E10000            	je L_error_fvar_undefined
 12243 000087BD 803804                  	cmp byte [rax], T_closure
 12244 000087C0 0F8562E20000            	jne L_error_non_closure
 12245 000087C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12246 000087C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12247 000087CC 483D[02000000]          	cmp rax, sob_boolean_false
 12248 000087D2 7468                    	je .L_if_else_0035
 12249                                  	; preparing a tail-call
 12250 000087D4 488B4528                	mov rax, PARAM(1)	; param b
 12251 000087D8 50                      	push rax
 12252 000087D9 488B4520                	mov rax, PARAM(0)	; param a
 12253 000087DD 50                      	push rax
 12254 000087DE 6A02                    	push 2	; arg count
 12255 000087E0 488B0425[3B0F0000]      	mov rax, qword [free_var_22]	; free var __bin-mul-qq
 12256 000087E8 803805                  	cmp byte [rax], T_undefined
 12257 000087EB 0F84B3E10000            	je L_error_fvar_undefined
 12258 000087F1 803804                  	cmp byte [rax], T_closure
 12259 000087F4 0F852EE20000            	jne L_error_non_closure
 12260 000087FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 12261 000087FD FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12262 00008800 FF7500                  	push qword[rbp]
 12263 00008803 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12264 00008808 48895D10                	mov qword[rbp + 8*2],rbx
 12265 0000880C 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 12266 00008814 BF00000000              	mov rdi,0
 12267 00008819 EB00                    	jmp .L_tc_recycle_frame_loop_006d
 12268                                  .L_tc_recycle_frame_loop_006d:
 12269 0000881B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12270 0000881F 740F                    	je .L_tc_recycle_frame_done_006d
 12271 00008821 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12272 00008826 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12273 0000882B 48FFC7                  	inc rdi
 12274 0000882E EBEB                    	jmp .L_tc_recycle_frame_loop_006d
 12275                                  .L_tc_recycle_frame_done_006d:
 12276 00008830 4889EC                  	mov rsp, rbp	; point to last argument
 12277 00008833 5D                      	pop rbp
 12278 00008834 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12279 00008837 E90D010000              	jmp .L_if_end_0035
 12280                                  .L_if_else_0035:
 12281                                  	; preparing a non-tail-call
 12282 0000883C 488B4528                	mov rax, PARAM(1)	; param b
 12283 00008840 50                      	push rax
 12284 00008841 6A01                    	push 1	; arg count
 12285 00008843 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12286 0000884B 803805                  	cmp byte [rax], T_undefined
 12287 0000884E 0F8450E10000            	je L_error_fvar_undefined
 12288 00008854 803804                  	cmp byte [rax], T_closure
 12289 00008857 0F85CBE10000            	jne L_error_non_closure
 12290 0000885D FF7001                  	push SOB_CLOSURE_ENV(rax)
 12291 00008860 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12292 00008863 483D[02000000]          	cmp rax, sob_boolean_false
 12293 00008869 0F8488000000            	je .L_if_else_0034
 12294                                  	; preparing a tail-call
 12295 0000886F 488B4528                	mov rax, PARAM(1)	; param b
 12296 00008873 50                      	push rax
 12297                                  	; preparing a non-tail-call
 12298 00008874 488B4520                	mov rax, PARAM(0)	; param a
 12299 00008878 50                      	push rax
 12300 00008879 6A01                    	push 1	; arg count
 12301 0000887B 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12302 00008883 803805                  	cmp byte [rax], T_undefined
 12303 00008886 0F8418E10000            	je L_error_fvar_undefined
 12304 0000888C 803804                  	cmp byte [rax], T_closure
 12305 0000888F 0F8593E10000            	jne L_error_non_closure
 12306 00008895 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12307 00008898 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12308 0000889B 50                      	push rax
 12309 0000889C 6A02                    	push 2	; arg count
 12310 0000889E 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12311 000088A6 803805                  	cmp byte [rax], T_undefined
 12312 000088A9 0F84F5E00000            	je L_error_fvar_undefined
 12313 000088AF 803804                  	cmp byte [rax], T_closure
 12314 000088B2 0F8570E10000            	jne L_error_non_closure
 12315 000088B8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12316 000088BB FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12317 000088BE FF7500                  	push qword[rbp]
 12318 000088C1 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12319 000088C6 48895D10                	mov qword[rbp + 8*2],rbx
 12320 000088CA 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 12321 000088D2 BF00000000              	mov rdi,0
 12322 000088D7 EB00                    	jmp .L_tc_recycle_frame_loop_006e
 12323                                  .L_tc_recycle_frame_loop_006e:
 12324 000088D9 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12325 000088DD 740F                    	je .L_tc_recycle_frame_done_006e
 12326 000088DF 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12327 000088E4 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12328 000088E9 48FFC7                  	inc rdi
 12329 000088EC EBEB                    	jmp .L_tc_recycle_frame_loop_006e
 12330                                  .L_tc_recycle_frame_done_006e:
 12331 000088EE 4889EC                  	mov rsp, rbp	; point to last argument
 12332 000088F1 5D                      	pop rbp
 12333 000088F2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12334 000088F5 EB52                    	jmp .L_if_end_0034
 12335                                  .L_if_else_0034:
 12336                                  	; preparing a tail-call
 12337 000088F7 6A00                    	push 0	; arg count
 12338 000088F9 488B4510                	mov rax, ENV
 12339 000088FD 488B00                  	mov rax, qword [rax + 8 * 0]
 12340 00008900 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12341 00008903 803804                  	cmp byte [rax], T_closure
 12342 00008906 0F851CE10000            	jne L_error_non_closure
 12343 0000890C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12344 0000890F FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12345 00008912 FF7500                  	push qword[rbp]
 12346 00008915 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12347 0000891A 48895D10                	mov qword[rbp + 8*2],rbx
 12348 0000891E 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 12349 00008926 BF00000000              	mov rdi,0
 12350 0000892B EB00                    	jmp .L_tc_recycle_frame_loop_006f
 12351                                  .L_tc_recycle_frame_loop_006f:
 12352 0000892D 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12353 00008931 740F                    	je .L_tc_recycle_frame_done_006f
 12354 00008933 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12355 00008938 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12356 0000893D 48FFC7                  	inc rdi
 12357 00008940 EBEB                    	jmp .L_tc_recycle_frame_loop_006f
 12358                                  .L_tc_recycle_frame_done_006f:
 12359 00008942 4889EC                  	mov rsp, rbp	; point to last argument
 12360 00008945 5D                      	pop rbp
 12361 00008946 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12362                                  .L_if_end_0034:
 12363                                  .L_if_end_0035:
 12364                                  .L_if_end_0036:
 12365 00008949 E9E9020000              	jmp .L_if_end_003b
 12366                                  .L_if_else_003b:
 12367                                  	; preparing a non-tail-call
 12368 0000894E 488B4520                	mov rax, PARAM(0)	; param a
 12369 00008952 50                      	push rax
 12370 00008953 6A01                    	push 1	; arg count
 12371 00008955 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12372 0000895D 803805                  	cmp byte [rax], T_undefined
 12373 00008960 0F843EE00000            	je L_error_fvar_undefined
 12374 00008966 803804                  	cmp byte [rax], T_closure
 12375 00008969 0F85B9E00000            	jne L_error_non_closure
 12376 0000896F FF7001                  	push SOB_CLOSURE_ENV(rax)
 12377 00008972 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12378 00008975 483D[02000000]          	cmp rax, sob_boolean_false
 12379 0000897B 0F8464020000            	je .L_if_else_003a
 12380                                  	; preparing a non-tail-call
 12381 00008981 488B4528                	mov rax, PARAM(1)	; param b
 12382 00008985 50                      	push rax
 12383 00008986 6A01                    	push 1	; arg count
 12384 00008988 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 12385 00008990 803805                  	cmp byte [rax], T_undefined
 12386 00008993 0F840BE00000            	je L_error_fvar_undefined
 12387 00008999 803804                  	cmp byte [rax], T_closure
 12388 0000899C 0F8586E00000            	jne L_error_non_closure
 12389 000089A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12390 000089A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12391 000089A8 483D[02000000]          	cmp rax, sob_boolean_false
 12392 000089AE 0F848B000000            	je .L_if_else_0039
 12393                                  	; preparing a tail-call
 12394                                  	; preparing a non-tail-call
 12395 000089B4 488B4528                	mov rax, PARAM(1)	; param b
 12396 000089B8 50                      	push rax
 12397 000089B9 6A01                    	push 1	; arg count
 12398 000089BB 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 12399 000089C3 803805                  	cmp byte [rax], T_undefined
 12400 000089C6 0F84D8DF0000            	je L_error_fvar_undefined
 12401 000089CC 803804                  	cmp byte [rax], T_closure
 12402 000089CF 0F8553E00000            	jne L_error_non_closure
 12403 000089D5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12404 000089D8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12405 000089DB 50                      	push rax
 12406 000089DC 488B4520                	mov rax, PARAM(0)	; param a
 12407 000089E0 50                      	push rax
 12408 000089E1 6A02                    	push 2	; arg count
 12409 000089E3 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12410 000089EB 803805                  	cmp byte [rax], T_undefined
 12411 000089EE 0F84B0DF0000            	je L_error_fvar_undefined
 12412 000089F4 803804                  	cmp byte [rax], T_closure
 12413 000089F7 0F852BE00000            	jne L_error_non_closure
 12414 000089FD FF7001                  	push SOB_CLOSURE_ENV(rax)
 12415 00008A00 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12416 00008A03 FF7500                  	push qword[rbp]
 12417 00008A06 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12418 00008A0B 48895D10                	mov qword[rbp + 8*2],rbx
 12419 00008A0F 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 12420 00008A17 BF00000000              	mov rdi,0
 12421 00008A1C EB00                    	jmp .L_tc_recycle_frame_loop_0070
 12422                                  .L_tc_recycle_frame_loop_0070:
 12423 00008A1E 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12424 00008A22 740F                    	je .L_tc_recycle_frame_done_0070
 12425 00008A24 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12426 00008A29 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12427 00008A2E 48FFC7                  	inc rdi
 12428 00008A31 EBEB                    	jmp .L_tc_recycle_frame_loop_0070
 12429                                  .L_tc_recycle_frame_done_0070:
 12430 00008A33 4889EC                  	mov rsp, rbp	; point to last argument
 12431 00008A36 5D                      	pop rbp
 12432 00008A37 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12433 00008A3A E9A4010000              	jmp .L_if_end_0039
 12434                                  .L_if_else_0039:
 12435                                  	; preparing a non-tail-call
 12436 00008A3F 488B4528                	mov rax, PARAM(1)	; param b
 12437 00008A43 50                      	push rax
 12438 00008A44 6A01                    	push 1	; arg count
 12439 00008A46 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 12440 00008A4E 803805                  	cmp byte [rax], T_undefined
 12441 00008A51 0F844DDF0000            	je L_error_fvar_undefined
 12442 00008A57 803804                  	cmp byte [rax], T_closure
 12443 00008A5A 0F85C8DF0000            	jne L_error_non_closure
 12444 00008A60 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12445 00008A63 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12446 00008A66 483D[02000000]          	cmp rax, sob_boolean_false
 12447 00008A6C 0F848B000000            	je .L_if_else_0038
 12448                                  	; preparing a tail-call
 12449                                  	; preparing a non-tail-call
 12450 00008A72 488B4528                	mov rax, PARAM(1)	; param b
 12451 00008A76 50                      	push rax
 12452 00008A77 6A01                    	push 1	; arg count
 12453 00008A79 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 12454 00008A81 803805                  	cmp byte [rax], T_undefined
 12455 00008A84 0F841ADF0000            	je L_error_fvar_undefined
 12456 00008A8A 803804                  	cmp byte [rax], T_closure
 12457 00008A8D 0F8595DF0000            	jne L_error_non_closure
 12458 00008A93 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12459 00008A96 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12460 00008A99 50                      	push rax
 12461 00008A9A 488B4520                	mov rax, PARAM(0)	; param a
 12462 00008A9E 50                      	push rax
 12463 00008A9F 6A02                    	push 2	; arg count
 12464 00008AA1 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12465 00008AA9 803805                  	cmp byte [rax], T_undefined
 12466 00008AAC 0F84F2DE0000            	je L_error_fvar_undefined
 12467 00008AB2 803804                  	cmp byte [rax], T_closure
 12468 00008AB5 0F856DDF0000            	jne L_error_non_closure
 12469 00008ABB FF7001                  	push SOB_CLOSURE_ENV(rax)
 12470 00008ABE FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12471 00008AC1 FF7500                  	push qword[rbp]
 12472 00008AC4 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12473 00008AC9 48895D10                	mov qword[rbp + 8*2],rbx
 12474 00008ACD 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 12475 00008AD5 BF00000000              	mov rdi,0
 12476 00008ADA EB00                    	jmp .L_tc_recycle_frame_loop_0071
 12477                                  .L_tc_recycle_frame_loop_0071:
 12478 00008ADC 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12479 00008AE0 740F                    	je .L_tc_recycle_frame_done_0071
 12480 00008AE2 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12481 00008AE7 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12482 00008AEC 48FFC7                  	inc rdi
 12483 00008AEF EBEB                    	jmp .L_tc_recycle_frame_loop_0071
 12484                                  .L_tc_recycle_frame_done_0071:
 12485 00008AF1 4889EC                  	mov rsp, rbp	; point to last argument
 12486 00008AF4 5D                      	pop rbp
 12487 00008AF5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12488 00008AF8 E9E6000000              	jmp .L_if_end_0038
 12489                                  .L_if_else_0038:
 12490                                  	; preparing a non-tail-call
 12491 00008AFD 488B4528                	mov rax, PARAM(1)	; param b
 12492 00008B01 50                      	push rax
 12493 00008B02 6A01                    	push 1	; arg count
 12494 00008B04 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 12495 00008B0C 803805                  	cmp byte [rax], T_undefined
 12496 00008B0F 0F848FDE0000            	je L_error_fvar_undefined
 12497 00008B15 803804                  	cmp byte [rax], T_closure
 12498 00008B18 0F850ADF0000            	jne L_error_non_closure
 12499 00008B1E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12500 00008B21 FF5009                  	call SOB_CLOSURE_CODE(rax)
 12501 00008B24 483D[02000000]          	cmp rax, sob_boolean_false
 12502 00008B2A 7465                    	je .L_if_else_0037
 12503                                  	; preparing a tail-call
 12504 00008B2C 488B4528                	mov rax, PARAM(1)	; param b
 12505 00008B30 50                      	push rax
 12506 00008B31 488B4520                	mov rax, PARAM(0)	; param a
 12507 00008B35 50                      	push rax
 12508 00008B36 6A02                    	push 2	; arg count
 12509 00008B38 488B0425[4C0F0000]      	mov rax, qword [free_var_23]	; free var __bin-mul-rr
 12510 00008B40 803805                  	cmp byte [rax], T_undefined
 12511 00008B43 0F845BDE0000            	je L_error_fvar_undefined
 12512 00008B49 803804                  	cmp byte [rax], T_closure
 12513 00008B4C 0F85D6DE0000            	jne L_error_non_closure
 12514 00008B52 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12515 00008B55 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12516 00008B58 FF7500                  	push qword[rbp]
 12517 00008B5B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12518 00008B60 48895D10                	mov qword[rbp + 8*2],rbx
 12519 00008B64 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 12520 00008B6C BF00000000              	mov rdi,0
 12521 00008B71 EB00                    	jmp .L_tc_recycle_frame_loop_0072
 12522                                  .L_tc_recycle_frame_loop_0072:
 12523 00008B73 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12524 00008B77 740F                    	je .L_tc_recycle_frame_done_0072
 12525 00008B79 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12526 00008B7E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12527 00008B83 48FFC7                  	inc rdi
 12528 00008B86 EBEB                    	jmp .L_tc_recycle_frame_loop_0072
 12529                                  .L_tc_recycle_frame_done_0072:
 12530 00008B88 4889EC                  	mov rsp, rbp	; point to last argument
 12531 00008B8B 5D                      	pop rbp
 12532 00008B8C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12533 00008B8F EB52                    	jmp .L_if_end_0037
 12534                                  .L_if_else_0037:
 12535                                  	; preparing a tail-call
 12536 00008B91 6A00                    	push 0	; arg count
 12537 00008B93 488B4510                	mov rax, ENV
 12538 00008B97 488B00                  	mov rax, qword [rax + 8 * 0]
 12539 00008B9A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12540 00008B9D 803804                  	cmp byte [rax], T_closure
 12541 00008BA0 0F8582DE0000            	jne L_error_non_closure
 12542 00008BA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12543 00008BA9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12544 00008BAC FF7500                  	push qword[rbp]
 12545 00008BAF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12546 00008BB4 48895D10                	mov qword[rbp + 8*2],rbx
 12547 00008BB8 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 12548 00008BC0 BF00000000              	mov rdi,0
 12549 00008BC5 EB00                    	jmp .L_tc_recycle_frame_loop_0073
 12550                                  .L_tc_recycle_frame_loop_0073:
 12551 00008BC7 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12552 00008BCB 740F                    	je .L_tc_recycle_frame_done_0073
 12553 00008BCD 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12554 00008BD2 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12555 00008BD7 48FFC7                  	inc rdi
 12556 00008BDA EBEB                    	jmp .L_tc_recycle_frame_loop_0073
 12557                                  .L_tc_recycle_frame_done_0073:
 12558 00008BDC 4889EC                  	mov rsp, rbp	; point to last argument
 12559 00008BDF 5D                      	pop rbp
 12560 00008BE0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12561                                  .L_if_end_0037:
 12562                                  .L_if_end_0038:
 12563                                  .L_if_end_0039:
 12564 00008BE3 EB52                    	jmp .L_if_end_003a
 12565                                  .L_if_else_003a:
 12566                                  	; preparing a tail-call
 12567 00008BE5 6A00                    	push 0	; arg count
 12568 00008BE7 488B4510                	mov rax, ENV
 12569 00008BEB 488B00                  	mov rax, qword [rax + 8 * 0]
 12570 00008BEE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 12571 00008BF1 803804                  	cmp byte [rax], T_closure
 12572 00008BF4 0F852EDE0000            	jne L_error_non_closure
 12573 00008BFA FF7001                  	push SOB_CLOSURE_ENV(rax)
 12574 00008BFD FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12575 00008C00 FF7500                  	push qword[rbp]
 12576 00008C03 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12577 00008C08 48895D10                	mov qword[rbp + 8*2],rbx
 12578 00008C0C 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 12579 00008C14 BF00000000              	mov rdi,0
 12580 00008C19 EB00                    	jmp .L_tc_recycle_frame_loop_0074
 12581                                  .L_tc_recycle_frame_loop_0074:
 12582 00008C1B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12583 00008C1F 740F                    	je .L_tc_recycle_frame_done_0074
 12584 00008C21 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12585 00008C26 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12586 00008C2B 48FFC7                  	inc rdi
 12587 00008C2E EBEB                    	jmp .L_tc_recycle_frame_loop_0074
 12588                                  .L_tc_recycle_frame_done_0074:
 12589 00008C30 4889EC                  	mov rsp, rbp	; point to last argument
 12590 00008C33 5D                      	pop rbp
 12591 00008C34 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12592                                  .L_if_end_003a:
 12593                                  .L_if_end_003b:
 12594                                  .L_if_end_003c:
 12595 00008C37 C9                      	leave
 12596 00008C38 C22000                  	ret AND_KILL_FRAME(2)
 12597                                  .L_lambda_simple_end_0044:	; new closure is in rax
 12598 00008C3B 50                      	push rax
 12599 00008C3C 6A01                    	push 1	; arg count
 12600 00008C3E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12601 00008C43 E889DE0000              	call malloc
 12602 00008C48 50                      	push rax
 12603 00008C49 BF08000000              	mov rdi, 8 * 1	; new rib
 12604 00008C4E E87EDE0000              	call malloc
 12605 00008C53 50                      	push rax
 12606 00008C54 BF10000000              	mov rdi, 8 * 2	; extended env
 12607 00008C59 E873DE0000              	call malloc
 12608 00008C5E 488B7D10                	mov rdi, ENV
 12609 00008C62 BE00000000              	mov rsi, 0
 12610 00008C67 BA01000000              	mov rdx, 1
 12611                                  .L_lambda_simple_env_loop_0045:	; ext_env[i + 1] <-- env[i]
 12612 00008C6C 4883FE01                	cmp rsi, 1
 12613 00008C70 7410                    	je .L_lambda_simple_env_end_0045
 12614 00008C72 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12615 00008C76 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12616 00008C7A 48FFC6                  	inc rsi
 12617 00008C7D 48FFC2                  	inc rdx
 12618 00008C80 EBEA                    	jmp .L_lambda_simple_env_loop_0045
 12619                                  .L_lambda_simple_env_end_0045:
 12620 00008C82 5B                      	pop rbx
 12621 00008C83 BE00000000              	mov rsi, 0
 12622                                  .L_lambda_simple_params_loop_0045:	; copy params
 12623 00008C88 4883FE01                	cmp rsi, 1
 12624 00008C8C 740E                    	je .L_lambda_simple_params_end_0045
 12625 00008C8E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12626 00008C93 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12627 00008C97 48FFC6                  	inc rsi
 12628 00008C9A EBEC                    	jmp .L_lambda_simple_params_loop_0045
 12629                                  .L_lambda_simple_params_end_0045:
 12630 00008C9C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12631 00008C9F 4889C3                  	mov rbx, rax
 12632 00008CA2 58                      	pop rax
 12633 00008CA3 C60004                  	mov byte [rax], T_closure
 12634 00008CA6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12635 00008CAA 48C74009[B78C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0045
 12636 00008CB2 E972020000              	jmp .L_lambda_simple_end_0045
 12637                                  .L_lambda_simple_code_0045:	; lambda-simple body
 12638 00008CB7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12639 00008CBD 740B                    	je .L_lambda_simple_arity_check_ok_0045
 12640 00008CBF FF742410                	push qword [rsp + 8 * 2]
 12641 00008CC3 6A01                    	push 1
 12642 00008CC5 E9C0DD0000              	jmp L_error_incorrect_arity_simple
 12643                                  .L_lambda_simple_arity_check_ok_0045:
 12644 00008CCA C8000000                	enter 0, 0
 12645 00008CCE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12646 00008CD3 E8F9DD0000              	call malloc
 12647 00008CD8 50                      	push rax
 12648 00008CD9 BF08000000              	mov rdi, 8 * 1	; new rib
 12649 00008CDE E8EEDD0000              	call malloc
 12650 00008CE3 50                      	push rax
 12651 00008CE4 BF18000000              	mov rdi, 8 * 3	; extended env
 12652 00008CE9 E8E3DD0000              	call malloc
 12653 00008CEE 488B7D10                	mov rdi, ENV
 12654 00008CF2 BE00000000              	mov rsi, 0
 12655 00008CF7 BA01000000              	mov rdx, 1
 12656                                  .L_lambda_opt_env_loop_000c:	; ext_env[i + 1] <-- env[i]
 12657 00008CFC 4883FE02                	cmp rsi, 2
 12658 00008D00 7410                    	je .L_lambda_opt_env_end_000c
 12659 00008D02 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12660 00008D06 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12661 00008D0A 48FFC6                  	inc rsi
 12662 00008D0D 48FFC2                  	inc rdx
 12663 00008D10 EBEA                    	jmp .L_lambda_opt_env_loop_000c
 12664                                  .L_lambda_opt_env_end_000c:
 12665 00008D12 5B                      	pop rbx
 12666 00008D13 BE00000000              	mov rsi, 0
 12667                                  .L_lambda_opt_params_loop_000c:	; copy params
 12668 00008D18 4883FE01                	cmp rsi, 1
 12669 00008D1C 740E                    	je .L_lambda_opt_params_end_000c
 12670 00008D1E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12671 00008D23 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12672 00008D27 48FFC6                  	inc rsi
 12673 00008D2A EBEC                    	jmp .L_lambda_opt_params_loop_000c
 12674                                  .L_lambda_opt_params_end_000c:
 12675 00008D2C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12676 00008D2F 4889C3                  	mov rbx, rax
 12677 00008D32 58                      	pop rax
 12678 00008D33 C60004                  	mov byte [rax], T_closure
 12679 00008D36 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12680 00008D3A 48C74009[478D0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000c
 12681 00008D42 E9DE010000              	jmp .L_lambda_opt_end_000c
 12682                                  .L_lambda_opt_code_000c:	; lambda-opt body
 12683 00008D47 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12684 00008D4D 7411                    	je .L_lambda_opt_arity_check_exact_000c
 12685 00008D4F 0F8FBC000000            	jg .L_lambda_opt_arity_check_more_000c
 12686 00008D55 FF742410                	push qword [rsp + 8 * 2]
 12687 00008D59 6A00                    	push 0
 12688 00008D5B E93EDD0000              	jmp L_error_incorrect_arity_opt
 12689                                  .L_lambda_opt_arity_check_exact_000c:
 12690 00008D60 4883EC08                	sub rsp, 8
 12691 00008D64 488B442408              	mov rax, qword[rsp + 8 *1]
 12692 00008D69 48890424                	mov qword[rsp], rax  
 12693 00008D6D 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 12694 00008D72 4889442408              	mov qword[rsp + 8 * 1], rax
 12695 00008D77 B801000000              	mov rax, 1
 12696 00008D7C 4889442410              	mov qword[rsp + 8 *2], rax
 12697 00008D81 48B8-                   	mov rax, sob_nil
 12697 00008D83 [0100000000000000] 
 12698 00008D8B 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 12699 00008D90 C8000000                	enter 0, 0
 12700                                  	; preparing a tail-call
 12701 00008D94 488B4520                	mov rax, PARAM(0)	; param s
 12702 00008D98 50                      	push rax
 12703 00008D99 48B8-                   	mov rax, L_constants + 2270
 12703 00008D9B [DE08000000000000] 
 12704 00008DA3 50                      	push rax
 12705 00008DA4 488B4510                	mov rax, ENV
 12706 00008DA8 488B00                  	mov rax, qword [rax + 8 * 0]
 12707 00008DAB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 12708 00008DAE 50                      	push rax
 12709 00008DAF 6A03                    	push 3	; arg count
 12710 00008DB1 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 12711 00008DB9 803805                  	cmp byte [rax], T_undefined
 12712 00008DBC 0F84E2DB0000            	je L_error_fvar_undefined
 12713 00008DC2 803804                  	cmp byte [rax], T_closure
 12714 00008DC5 0F855DDC0000            	jne L_error_non_closure
 12715 00008DCB FF7001                  	push SOB_CLOSURE_ENV(rax)
 12716 00008DCE FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12717 00008DD1 FF7500                  	push qword[rbp]
 12718 00008DD4 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12719 00008DD9 48895D10                	mov qword[rbp + 8*2],rbx
 12720 00008DDD 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 12721 00008DE5 BF00000000              	mov rdi,0
 12722 00008DEA EB00                    	jmp .L_tc_recycle_frame_loop_0076
 12723                                  .L_tc_recycle_frame_loop_0076:
 12724 00008DEC 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12725 00008DF0 740F                    	je .L_tc_recycle_frame_done_0076
 12726 00008DF2 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12727 00008DF7 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12728 00008DFC 48FFC7                  	inc rdi
 12729 00008DFF EBEB                    	jmp .L_tc_recycle_frame_loop_0076
 12730                                  .L_tc_recycle_frame_done_0076:
 12731 00008E01 4889EC                  	mov rsp, rbp	; point to last argument
 12732 00008E04 5D                      	pop rbp
 12733 00008E05 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12734 00008E08 C9                      	leave
 12735 00008E09 C21800                  	ret AND_KILL_FRAME(1)
 12736 00008E0C E914010000              	jmp .L_lambda_opt_end_000c	; new closure is in rax
 12737                                  .L_lambda_opt_arity_check_more_000c:
 12738 00008E11 488B442410              	mov rax, qword[rsp + 2 * 8]
 12739 00008E16 4889C7                  	mov rdi, rax
 12740 00008E19 49B9-                   	mov r9, sob_nil
 12740 00008E1B [0100000000000000] 
 12741 00008E23 4C8B442410              	mov r8, qword[rsp+2*8]
 12742                                  .L_lambda_opt_stack_shrink_loop_000c:
 12743 00008E28 4983F800                	cmp r8, 0
 12744 00008E2C 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_000c
 12745 00008E2E 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 12746 00008E33 BF11000000              	mov rdi, 1+8+8	;for pair
 12747 00008E38 E894DC0000              	call malloc	 ;to create the pair in the stack
 12748 00008E3D C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 12749 00008E40 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 12750 00008E44 4C894809                 	mov qword[rax+1+8],r9
 12751 00008E48 4989C1                  	mov r9 , rax	 ; for the recursion 
 12752 00008E4B 49FFC8                  	dec r8
 12753 00008E4E EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_000c
 12754                                  .L_lambda_opt_stack_shrink_loop_exit_000c:
 12755 00008E50 488B442410              	mov rax, qword[rsp + 2 * 8]
 12756 00008E55 BF01000000              	mov rdi, 1
 12757 00008E5A 4829F8                  	sub rax, rdi
 12758 00008E5D 4889C7                  	mov rdi, rax
 12759 00008E60 486BC008                	imul rax,8
 12760 00008E64 4801C4                  	add rsp, rax
 12761 00008E67 4889E0                  	mov rax, rsp
 12762 00008E6A 4989F8                  	mov r8, rdi
 12763 00008E6D 4D6BC008                	imul r8, 8
 12764 00008E71 4C29C0                  	sub rax, r8
 12765 00008E74 4989C2                  	mov r10, rax	; holds the original ret in the stack
 12766 00008E77 4983C218                	add r10, 8*3
 12767 00008E7B 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 12768 00008E7F 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 12769 00008E82 4D6BC008                	imul r8,8
 12770 00008E86 4C01C0                  	add rax, r8
 12771 00008E89 4C8908                  	mov qword[rax] ,r9
 12772 00008E8C 4983EA18                 	sub r10, 8*3
 12773 00008E90 48C744241001000000      	mov qword [rsp+2*8], 1
 12774 00008E99 498B4208                	mov rax, qword[r10 + 1 * 8]
 12775 00008E9D 4889442408              	mov qword[rsp + 1*8] ,rax
 12776 00008EA2 498B02                  	mov rax, qword[r10]
 12777 00008EA5 48890424                	mov qword[rsp], rax
 12778 00008EA9 C8000000                	enter 0, 0
 12779                                  	; preparing a tail-call
 12780 00008EAD 488B4520                	mov rax, PARAM(0)	; param s
 12781 00008EB1 50                      	push rax
 12782 00008EB2 48B8-                   	mov rax, L_constants + 2270
 12782 00008EB4 [DE08000000000000] 
 12783 00008EBC 50                      	push rax
 12784 00008EBD 488B4510                	mov rax, ENV
 12785 00008EC1 488B00                  	mov rax, qword [rax + 8 * 0]
 12786 00008EC4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin*
 12787 00008EC7 50                      	push rax
 12788 00008EC8 6A03                    	push 3	; arg count
 12789 00008ECA 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 12790 00008ED2 803805                  	cmp byte [rax], T_undefined
 12791 00008ED5 0F84C9DA0000            	je L_error_fvar_undefined
 12792 00008EDB 803804                  	cmp byte [rax], T_closure
 12793 00008EDE 0F8544DB0000            	jne L_error_non_closure
 12794 00008EE4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12795 00008EE7 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12796 00008EEA FF7500                  	push qword[rbp]
 12797 00008EED 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12798 00008EF2 48895D10                	mov qword[rbp + 8*2],rbx
 12799 00008EF6 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 12800 00008EFE BF00000000              	mov rdi,0
 12801 00008F03 EB00                    	jmp .L_tc_recycle_frame_loop_0075
 12802                                  .L_tc_recycle_frame_loop_0075:
 12803 00008F05 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12804 00008F09 740F                    	je .L_tc_recycle_frame_done_0075
 12805 00008F0B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12806 00008F10 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12807 00008F15 48FFC7                  	inc rdi
 12808 00008F18 EBEB                    	jmp .L_tc_recycle_frame_loop_0075
 12809                                  .L_tc_recycle_frame_done_0075:
 12810 00008F1A 4889EC                  	mov rsp, rbp	; point to last argument
 12811 00008F1D 5D                      	pop rbp
 12812 00008F1E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12813 00008F21 C9                      	leave
 12814 00008F22 C21800                  	ret AND_KILL_FRAME(1)
 12815                                  .L_lambda_opt_end_000c:	; new closure is in rax
 12816 00008F25 C9                      	leave
 12817 00008F26 C21800                  	ret AND_KILL_FRAME(1)
 12818                                  .L_lambda_simple_end_0045:	; new closure is in rax
 12819 00008F29 803804                  	cmp byte [rax], T_closure
 12820 00008F2C 0F85F6DA0000            	jne L_error_non_closure
 12821 00008F32 FF7001                  	push SOB_CLOSURE_ENV(rax)
 12822 00008F35 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12823 00008F38 FF7500                  	push qword[rbp]
 12824 00008F3B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12825 00008F40 48895D10                	mov qword[rbp + 8*2],rbx
 12826 00008F44 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 12827 00008F4C BF00000000              	mov rdi,0
 12828 00008F51 EB00                    	jmp .L_tc_recycle_frame_loop_0077
 12829                                  .L_tc_recycle_frame_loop_0077:
 12830 00008F53 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12831 00008F57 740F                    	je .L_tc_recycle_frame_done_0077
 12832 00008F59 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12833 00008F5E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12834 00008F63 48FFC7                  	inc rdi
 12835 00008F66 EBEB                    	jmp .L_tc_recycle_frame_loop_0077
 12836                                  .L_tc_recycle_frame_done_0077:
 12837 00008F68 4889EC                  	mov rsp, rbp	; point to last argument
 12838 00008F6B 5D                      	pop rbp
 12839 00008F6C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12840 00008F6F C9                      	leave
 12841 00008F70 C21800                  	ret AND_KILL_FRAME(1)
 12842                                  .L_lambda_simple_end_0043:	; new closure is in rax
 12843 00008F73 803804                  	cmp byte [rax], T_closure
 12844 00008F76 0F85ACDA0000            	jne L_error_non_closure
 12845 00008F7C FF7001                  	push SOB_CLOSURE_ENV(rax)
 12846 00008F7F FF5009                  	call SOB_CLOSURE_CODE(rax)
 12847 00008F82 48890425[C50D0000]      	mov qword [free_var_0], rax
 12848 00008F8A 48B8-                   	mov rax, sob_void
 12848 00008F8C [0000000000000000] 
 12849                                  
 12850 00008F94 4889C7                  	mov rdi, rax
 12851 00008F97 E88ADD0000              	call print_sexpr_if_not_void
 12852                                  	; preparing a non-tail-call
 12853 00008F9C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12854 00008FA1 E82BDB0000              	call malloc
 12855 00008FA6 50                      	push rax
 12856 00008FA7 BF00000000              	mov rdi, 8 * 0	; new rib
 12857 00008FAC E820DB0000              	call malloc
 12858 00008FB1 50                      	push rax
 12859 00008FB2 BF08000000              	mov rdi, 8 * 1	; extended env
 12860 00008FB7 E815DB0000              	call malloc
 12861 00008FBC 488B7D10                	mov rdi, ENV
 12862 00008FC0 BE00000000              	mov rsi, 0
 12863 00008FC5 BA01000000              	mov rdx, 1
 12864                                  .L_lambda_simple_env_loop_0046:	; ext_env[i + 1] <-- env[i]
 12865 00008FCA 4883FE00                	cmp rsi, 0
 12866 00008FCE 7410                    	je .L_lambda_simple_env_end_0046
 12867 00008FD0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12868 00008FD4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12869 00008FD8 48FFC6                  	inc rsi
 12870 00008FDB 48FFC2                  	inc rdx
 12871 00008FDE EBEA                    	jmp .L_lambda_simple_env_loop_0046
 12872                                  .L_lambda_simple_env_end_0046:
 12873 00008FE0 5B                      	pop rbx
 12874 00008FE1 BE00000000              	mov rsi, 0
 12875                                  .L_lambda_simple_params_loop_0046:	; copy params
 12876 00008FE6 4883FE00                	cmp rsi, 0
 12877 00008FEA 740E                    	je .L_lambda_simple_params_end_0046
 12878 00008FEC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12879 00008FF1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12880 00008FF5 48FFC6                  	inc rsi
 12881 00008FF8 EBEC                    	jmp .L_lambda_simple_params_loop_0046
 12882                                  .L_lambda_simple_params_end_0046:
 12883 00008FFA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12884 00008FFD 4889C3                  	mov rbx, rax
 12885 00009000 58                      	pop rax
 12886 00009001 C60004                  	mov byte [rax], T_closure
 12887 00009004 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12888 00009008 48C74009[15900000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0046
 12889 00009010 E98A000000              	jmp .L_lambda_simple_end_0046
 12890                                  .L_lambda_simple_code_0046:	; lambda-simple body
 12891 00009015 48837C241000            	cmp qword [rsp + 8 * 2], 0
 12892 0000901B 740B                    	je .L_lambda_simple_arity_check_ok_0046
 12893 0000901D FF742410                	push qword [rsp + 8 * 2]
 12894 00009021 6A00                    	push 0
 12895 00009023 E962DA0000              	jmp L_error_incorrect_arity_simple
 12896                                  .L_lambda_simple_arity_check_ok_0046:
 12897 00009028 C8000000                	enter 0, 0
 12898                                  	; preparing a tail-call
 12899 0000902C 48B8-                   	mov rax, L_constants + 2187
 12899 0000902E [8B08000000000000] 
 12900 00009036 50                      	push rax
 12901 00009037 48B8-                   	mov rax, L_constants + 2298
 12901 00009039 [FA08000000000000] 
 12902 00009041 50                      	push rax
 12903 00009042 6A02                    	push 2	; arg count
 12904 00009044 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 12905 0000904C 803805                  	cmp byte [rax], T_undefined
 12906 0000904F 0F844FD90000            	je L_error_fvar_undefined
 12907 00009055 803804                  	cmp byte [rax], T_closure
 12908 00009058 0F85CAD90000            	jne L_error_non_closure
 12909 0000905E FF7001                  	push SOB_CLOSURE_ENV(rax)
 12910 00009061 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 12911 00009064 FF7500                  	push qword[rbp]
 12912 00009067 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 12913 0000906C 48895D10                	mov qword[rbp + 8*2],rbx
 12914 00009070 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 12915 00009078 BF00000000              	mov rdi,0
 12916 0000907D EB00                    	jmp .L_tc_recycle_frame_loop_0078
 12917                                  .L_tc_recycle_frame_loop_0078:
 12918 0000907F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 12919 00009083 740F                    	je .L_tc_recycle_frame_done_0078
 12920 00009085 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 12921 0000908A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 12922 0000908F 48FFC7                  	inc rdi
 12923 00009092 EBEB                    	jmp .L_tc_recycle_frame_loop_0078
 12924                                  .L_tc_recycle_frame_done_0078:
 12925 00009094 4889EC                  	mov rsp, rbp	; point to last argument
 12926 00009097 5D                      	pop rbp
 12927 00009098 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 12928 0000909B C9                      	leave
 12929 0000909C C21000                  	ret AND_KILL_FRAME(0)
 12930                                  .L_lambda_simple_end_0046:	; new closure is in rax
 12931 0000909F 50                      	push rax
 12932 000090A0 6A01                    	push 1	; arg count
 12933 000090A2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12934 000090A7 E825DA0000              	call malloc
 12935 000090AC 50                      	push rax
 12936 000090AD BF00000000              	mov rdi, 8 * 0	; new rib
 12937 000090B2 E81ADA0000              	call malloc
 12938 000090B7 50                      	push rax
 12939 000090B8 BF08000000              	mov rdi, 8 * 1	; extended env
 12940 000090BD E80FDA0000              	call malloc
 12941 000090C2 488B7D10                	mov rdi, ENV
 12942 000090C6 BE00000000              	mov rsi, 0
 12943 000090CB BA01000000              	mov rdx, 1
 12944                                  .L_lambda_simple_env_loop_0047:	; ext_env[i + 1] <-- env[i]
 12945 000090D0 4883FE00                	cmp rsi, 0
 12946 000090D4 7410                    	je .L_lambda_simple_env_end_0047
 12947 000090D6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12948 000090DA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12949 000090DE 48FFC6                  	inc rsi
 12950 000090E1 48FFC2                  	inc rdx
 12951 000090E4 EBEA                    	jmp .L_lambda_simple_env_loop_0047
 12952                                  .L_lambda_simple_env_end_0047:
 12953 000090E6 5B                      	pop rbx
 12954 000090E7 BE00000000              	mov rsi, 0
 12955                                  .L_lambda_simple_params_loop_0047:	; copy params
 12956 000090EC 4883FE00                	cmp rsi, 0
 12957 000090F0 740E                    	je .L_lambda_simple_params_end_0047
 12958 000090F2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 12959 000090F7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 12960 000090FB 48FFC6                  	inc rsi
 12961 000090FE EBEC                    	jmp .L_lambda_simple_params_loop_0047
 12962                                  .L_lambda_simple_params_end_0047:
 12963 00009100 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 12964 00009103 4889C3                  	mov rbx, rax
 12965 00009106 58                      	pop rax
 12966 00009107 C60004                  	mov byte [rax], T_closure
 12967 0000910A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 12968 0000910E 48C74009[1B910000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0047
 12969 00009116 E9640F0000              	jmp .L_lambda_simple_end_0047
 12970                                  .L_lambda_simple_code_0047:	; lambda-simple body
 12971 0000911B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 12972 00009121 740B                    	je .L_lambda_simple_arity_check_ok_0047
 12973 00009123 FF742410                	push qword [rsp + 8 * 2]
 12974 00009127 6A01                    	push 1
 12975 00009129 E95CD90000              	jmp L_error_incorrect_arity_simple
 12976                                  .L_lambda_simple_arity_check_ok_0047:
 12977 0000912E C8000000                	enter 0, 0
 12978                                  	; preparing a tail-call
 12979 00009132 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 12980 00009137 E895D90000              	call malloc
 12981 0000913C 50                      	push rax
 12982 0000913D BF08000000              	mov rdi, 8 * 1	; new rib
 12983 00009142 E88AD90000              	call malloc
 12984 00009147 50                      	push rax
 12985 00009148 BF10000000              	mov rdi, 8 * 2	; extended env
 12986 0000914D E87FD90000              	call malloc
 12987 00009152 488B7D10                	mov rdi, ENV
 12988 00009156 BE00000000              	mov rsi, 0
 12989 0000915B BA01000000              	mov rdx, 1
 12990                                  .L_lambda_simple_env_loop_0048:	; ext_env[i + 1] <-- env[i]
 12991 00009160 4883FE01                	cmp rsi, 1
 12992 00009164 7410                    	je .L_lambda_simple_env_end_0048
 12993 00009166 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 12994 0000916A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 12995 0000916E 48FFC6                  	inc rsi
 12996 00009171 48FFC2                  	inc rdx
 12997 00009174 EBEA                    	jmp .L_lambda_simple_env_loop_0048
 12998                                  .L_lambda_simple_env_end_0048:
 12999 00009176 5B                      	pop rbx
 13000 00009177 BE00000000              	mov rsi, 0
 13001                                  .L_lambda_simple_params_loop_0048:	; copy params
 13002 0000917C 4883FE01                	cmp rsi, 1
 13003 00009180 740E                    	je .L_lambda_simple_params_end_0048
 13004 00009182 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13005 00009187 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13006 0000918B 48FFC6                  	inc rsi
 13007 0000918E EBEC                    	jmp .L_lambda_simple_params_loop_0048
 13008                                  .L_lambda_simple_params_end_0048:
 13009 00009190 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13010 00009193 4889C3                  	mov rbx, rax
 13011 00009196 58                      	pop rax
 13012 00009197 C60004                  	mov byte [rax], T_closure
 13013 0000919A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13014 0000919E 48C74009[AB910000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0048
 13015 000091A6 E938080000              	jmp .L_lambda_simple_end_0048
 13016                                  .L_lambda_simple_code_0048:	; lambda-simple body
 13017 000091AB 48837C241002            	cmp qword [rsp + 8 * 2], 2
 13018 000091B1 740B                    	je .L_lambda_simple_arity_check_ok_0048
 13019 000091B3 FF742410                	push qword [rsp + 8 * 2]
 13020 000091B7 6A02                    	push 2
 13021 000091B9 E9CCD80000              	jmp L_error_incorrect_arity_simple
 13022                                  .L_lambda_simple_arity_check_ok_0048:
 13023 000091BE C8000000                	enter 0, 0
 13024                                  	; preparing a non-tail-call
 13025 000091C2 488B4520                	mov rax, PARAM(0)	; param a
 13026 000091C6 50                      	push rax
 13027 000091C7 6A01                    	push 1	; arg count
 13028 000091C9 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 13029 000091D1 803805                  	cmp byte [rax], T_undefined
 13030 000091D4 0F84CAD70000            	je L_error_fvar_undefined
 13031 000091DA 803804                  	cmp byte [rax], T_closure
 13032 000091DD 0F8545D80000            	jne L_error_non_closure
 13033 000091E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13034 000091E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13035 000091E9 483D[02000000]          	cmp rax, sob_boolean_false
 13036 000091EF 0F8467020000            	je .L_if_else_0048
 13037                                  	; preparing a non-tail-call
 13038 000091F5 488B4528                	mov rax, PARAM(1)	; param b
 13039 000091F9 50                      	push rax
 13040 000091FA 6A01                    	push 1	; arg count
 13041 000091FC 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 13042 00009204 803805                  	cmp byte [rax], T_undefined
 13043 00009207 0F8497D70000            	je L_error_fvar_undefined
 13044 0000920D 803804                  	cmp byte [rax], T_closure
 13045 00009210 0F8512D80000            	jne L_error_non_closure
 13046 00009216 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13047 00009219 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13048 0000921C 483D[02000000]          	cmp rax, sob_boolean_false
 13049 00009222 7468                    	je .L_if_else_003f
 13050                                  	; preparing a tail-call
 13051 00009224 488B4528                	mov rax, PARAM(1)	; param b
 13052 00009228 50                      	push rax
 13053 00009229 488B4520                	mov rax, PARAM(0)	; param a
 13054 0000922D 50                      	push rax
 13055 0000922E 6A02                    	push 2	; arg count
 13056 00009230 488B0425[C40E0000]      	mov rax, qword [free_var_15]	; free var __bin-div-zz
 13057 00009238 803805                  	cmp byte [rax], T_undefined
 13058 0000923B 0F8463D70000            	je L_error_fvar_undefined
 13059 00009241 803804                  	cmp byte [rax], T_closure
 13060 00009244 0F85DED70000            	jne L_error_non_closure
 13061 0000924A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13062 0000924D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13063 00009250 FF7500                  	push qword[rbp]
 13064 00009253 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13065 00009258 48895D10                	mov qword[rbp + 8*2],rbx
 13066 0000925C 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 13067 00009264 BF00000000              	mov rdi,0
 13068 00009269 EB00                    	jmp .L_tc_recycle_frame_loop_0079
 13069                                  .L_tc_recycle_frame_loop_0079:
 13070 0000926B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13071 0000926F 740F                    	je .L_tc_recycle_frame_done_0079
 13072 00009271 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13073 00009276 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13074 0000927B 48FFC7                  	inc rdi
 13075 0000927E EBEB                    	jmp .L_tc_recycle_frame_loop_0079
 13076                                  .L_tc_recycle_frame_done_0079:
 13077 00009280 4889EC                  	mov rsp, rbp	; point to last argument
 13078 00009283 5D                      	pop rbp
 13079 00009284 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13080 00009287 E9CB010000              	jmp .L_if_end_003f
 13081                                  .L_if_else_003f:
 13082                                  	; preparing a non-tail-call
 13083 0000928C 488B4528                	mov rax, PARAM(1)	; param b
 13084 00009290 50                      	push rax
 13085 00009291 6A01                    	push 1	; arg count
 13086 00009293 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13087 0000929B 803805                  	cmp byte [rax], T_undefined
 13088 0000929E 0F8400D70000            	je L_error_fvar_undefined
 13089 000092A4 803804                  	cmp byte [rax], T_closure
 13090 000092A7 0F857BD70000            	jne L_error_non_closure
 13091 000092AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 13092 000092B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13093 000092B3 483D[02000000]          	cmp rax, sob_boolean_false
 13094 000092B9 0F848B000000            	je .L_if_else_003e
 13095                                  	; preparing a tail-call
 13096 000092BF 488B4528                	mov rax, PARAM(1)	; param b
 13097 000092C3 50                      	push rax
 13098                                  	; preparing a non-tail-call
 13099 000092C4 488B4520                	mov rax, PARAM(0)	; param a
 13100 000092C8 50                      	push rax
 13101 000092C9 6A01                    	push 1	; arg count
 13102 000092CB 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13103 000092D3 803805                  	cmp byte [rax], T_undefined
 13104 000092D6 0F84C8D60000            	je L_error_fvar_undefined
 13105 000092DC 803804                  	cmp byte [rax], T_closure
 13106 000092DF 0F8543D70000            	jne L_error_non_closure
 13107 000092E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13108 000092E8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13109 000092EB 50                      	push rax
 13110 000092EC 6A02                    	push 2	; arg count
 13111 000092EE 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 13112 000092F6 803805                  	cmp byte [rax], T_undefined
 13113 000092F9 0F84A5D60000            	je L_error_fvar_undefined
 13114 000092FF 803804                  	cmp byte [rax], T_closure
 13115 00009302 0F8520D70000            	jne L_error_non_closure
 13116 00009308 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13117 0000930B FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13118 0000930E FF7500                  	push qword[rbp]
 13119 00009311 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13120 00009316 48895D10                	mov qword[rbp + 8*2],rbx
 13121 0000931A 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 13122 00009322 BF00000000              	mov rdi,0
 13123 00009327 EB00                    	jmp .L_tc_recycle_frame_loop_007a
 13124                                  .L_tc_recycle_frame_loop_007a:
 13125 00009329 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13126 0000932D 740F                    	je .L_tc_recycle_frame_done_007a
 13127 0000932F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13128 00009334 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13129 00009339 48FFC7                  	inc rdi
 13130 0000933C EBEB                    	jmp .L_tc_recycle_frame_loop_007a
 13131                                  .L_tc_recycle_frame_done_007a:
 13132 0000933E 4889EC                  	mov rsp, rbp	; point to last argument
 13133 00009341 5D                      	pop rbp
 13134 00009342 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13135 00009345 E90D010000              	jmp .L_if_end_003e
 13136                                  .L_if_else_003e:
 13137                                  	; preparing a non-tail-call
 13138 0000934A 488B4528                	mov rax, PARAM(1)	; param b
 13139 0000934E 50                      	push rax
 13140 0000934F 6A01                    	push 1	; arg count
 13141 00009351 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 13142 00009359 803805                  	cmp byte [rax], T_undefined
 13143 0000935C 0F8442D60000            	je L_error_fvar_undefined
 13144 00009362 803804                  	cmp byte [rax], T_closure
 13145 00009365 0F85BDD60000            	jne L_error_non_closure
 13146 0000936B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13147 0000936E FF5009                  	call SOB_CLOSURE_CODE(rax)
 13148 00009371 483D[02000000]          	cmp rax, sob_boolean_false
 13149 00009377 0F8488000000            	je .L_if_else_003d
 13150                                  	; preparing a tail-call
 13151 0000937D 488B4528                	mov rax, PARAM(1)	; param b
 13152 00009381 50                      	push rax
 13153                                  	; preparing a non-tail-call
 13154 00009382 488B4520                	mov rax, PARAM(0)	; param a
 13155 00009386 50                      	push rax
 13156 00009387 6A01                    	push 1	; arg count
 13157 00009389 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 13158 00009391 803805                  	cmp byte [rax], T_undefined
 13159 00009394 0F840AD60000            	je L_error_fvar_undefined
 13160 0000939A 803804                  	cmp byte [rax], T_closure
 13161 0000939D 0F8585D60000            	jne L_error_non_closure
 13162 000093A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13163 000093A6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13164 000093A9 50                      	push rax
 13165 000093AA 6A02                    	push 2	; arg count
 13166 000093AC 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13167 000093B4 803805                  	cmp byte [rax], T_undefined
 13168 000093B7 0F84E7D50000            	je L_error_fvar_undefined
 13169 000093BD 803804                  	cmp byte [rax], T_closure
 13170 000093C0 0F8562D60000            	jne L_error_non_closure
 13171 000093C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13172 000093C9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13173 000093CC FF7500                  	push qword[rbp]
 13174 000093CF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13175 000093D4 48895D10                	mov qword[rbp + 8*2],rbx
 13176 000093D8 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 13177 000093E0 BF00000000              	mov rdi,0
 13178 000093E5 EB00                    	jmp .L_tc_recycle_frame_loop_007b
 13179                                  .L_tc_recycle_frame_loop_007b:
 13180 000093E7 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13181 000093EB 740F                    	je .L_tc_recycle_frame_done_007b
 13182 000093ED 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13183 000093F2 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13184 000093F7 48FFC7                  	inc rdi
 13185 000093FA EBEB                    	jmp .L_tc_recycle_frame_loop_007b
 13186                                  .L_tc_recycle_frame_done_007b:
 13187 000093FC 4889EC                  	mov rsp, rbp	; point to last argument
 13188 000093FF 5D                      	pop rbp
 13189 00009400 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13190 00009403 EB52                    	jmp .L_if_end_003d
 13191                                  .L_if_else_003d:
 13192                                  	; preparing a tail-call
 13193 00009405 6A00                    	push 0	; arg count
 13194 00009407 488B4510                	mov rax, ENV
 13195 0000940B 488B00                  	mov rax, qword [rax + 8 * 0]
 13196 0000940E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13197 00009411 803804                  	cmp byte [rax], T_closure
 13198 00009414 0F850ED60000            	jne L_error_non_closure
 13199 0000941A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13200 0000941D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13201 00009420 FF7500                  	push qword[rbp]
 13202 00009423 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13203 00009428 48895D10                	mov qword[rbp + 8*2],rbx
 13204 0000942C 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 13205 00009434 BF00000000              	mov rdi,0
 13206 00009439 EB00                    	jmp .L_tc_recycle_frame_loop_007c
 13207                                  .L_tc_recycle_frame_loop_007c:
 13208 0000943B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13209 0000943F 740F                    	je .L_tc_recycle_frame_done_007c
 13210 00009441 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13211 00009446 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13212 0000944B 48FFC7                  	inc rdi
 13213 0000944E EBEB                    	jmp .L_tc_recycle_frame_loop_007c
 13214                                  .L_tc_recycle_frame_done_007c:
 13215 00009450 4889EC                  	mov rsp, rbp	; point to last argument
 13216 00009453 5D                      	pop rbp
 13217 00009454 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13218                                  .L_if_end_003d:
 13219                                  .L_if_end_003e:
 13220                                  .L_if_end_003f:
 13221 00009457 E983050000              	jmp .L_if_end_0048
 13222                                  .L_if_else_0048:
 13223                                  	; preparing a non-tail-call
 13224 0000945C 488B4520                	mov rax, PARAM(0)	; param a
 13225 00009460 50                      	push rax
 13226 00009461 6A01                    	push 1	; arg count
 13227 00009463 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13228 0000946B 803805                  	cmp byte [rax], T_undefined
 13229 0000946E 0F8430D50000            	je L_error_fvar_undefined
 13230 00009474 803804                  	cmp byte [rax], T_closure
 13231 00009477 0F85ABD50000            	jne L_error_non_closure
 13232 0000947D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13233 00009480 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13234 00009483 483D[02000000]          	cmp rax, sob_boolean_false
 13235 00009489 0F8467020000            	je .L_if_else_0047
 13236                                  	; preparing a non-tail-call
 13237 0000948F 488B4528                	mov rax, PARAM(1)	; param b
 13238 00009493 50                      	push rax
 13239 00009494 6A01                    	push 1	; arg count
 13240 00009496 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 13241 0000949E 803805                  	cmp byte [rax], T_undefined
 13242 000094A1 0F84FDD40000            	je L_error_fvar_undefined
 13243 000094A7 803804                  	cmp byte [rax], T_closure
 13244 000094AA 0F8578D50000            	jne L_error_non_closure
 13245 000094B0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13246 000094B3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13247 000094B6 483D[02000000]          	cmp rax, sob_boolean_false
 13248 000094BC 0F848B000000            	je .L_if_else_0042
 13249                                  	; preparing a tail-call
 13250                                  	; preparing a non-tail-call
 13251 000094C2 488B4528                	mov rax, PARAM(1)	; param b
 13252 000094C6 50                      	push rax
 13253 000094C7 6A01                    	push 1	; arg count
 13254 000094C9 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 13255 000094D1 803805                  	cmp byte [rax], T_undefined
 13256 000094D4 0F84CAD40000            	je L_error_fvar_undefined
 13257 000094DA 803804                  	cmp byte [rax], T_closure
 13258 000094DD 0F8545D50000            	jne L_error_non_closure
 13259 000094E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13260 000094E6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13261 000094E9 50                      	push rax
 13262 000094EA 488B4520                	mov rax, PARAM(0)	; param a
 13263 000094EE 50                      	push rax
 13264 000094EF 6A02                    	push 2	; arg count
 13265 000094F1 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 13266 000094F9 803805                  	cmp byte [rax], T_undefined
 13267 000094FC 0F84A2D40000            	je L_error_fvar_undefined
 13268 00009502 803804                  	cmp byte [rax], T_closure
 13269 00009505 0F851DD50000            	jne L_error_non_closure
 13270 0000950B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13271 0000950E FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13272 00009511 FF7500                  	push qword[rbp]
 13273 00009514 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13274 00009519 48895D10                	mov qword[rbp + 8*2],rbx
 13275 0000951D 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 13276 00009525 BF00000000              	mov rdi,0
 13277 0000952A EB00                    	jmp .L_tc_recycle_frame_loop_007d
 13278                                  .L_tc_recycle_frame_loop_007d:
 13279 0000952C 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13280 00009530 740F                    	je .L_tc_recycle_frame_done_007d
 13281 00009532 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13282 00009537 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13283 0000953C 48FFC7                  	inc rdi
 13284 0000953F EBEB                    	jmp .L_tc_recycle_frame_loop_007d
 13285                                  .L_tc_recycle_frame_done_007d:
 13286 00009541 4889EC                  	mov rsp, rbp	; point to last argument
 13287 00009544 5D                      	pop rbp
 13288 00009545 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13289 00009548 E9A4010000              	jmp .L_if_end_0042
 13290                                  .L_if_else_0042:
 13291                                  	; preparing a non-tail-call
 13292 0000954D 488B4528                	mov rax, PARAM(1)	; param b
 13293 00009551 50                      	push rax
 13294 00009552 6A01                    	push 1	; arg count
 13295 00009554 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13296 0000955C 803805                  	cmp byte [rax], T_undefined
 13297 0000955F 0F843FD40000            	je L_error_fvar_undefined
 13298 00009565 803804                  	cmp byte [rax], T_closure
 13299 00009568 0F85BAD40000            	jne L_error_non_closure
 13300 0000956E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13301 00009571 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13302 00009574 483D[02000000]          	cmp rax, sob_boolean_false
 13303 0000957A 7468                    	je .L_if_else_0041
 13304                                  	; preparing a tail-call
 13305 0000957C 488B4528                	mov rax, PARAM(1)	; param b
 13306 00009580 50                      	push rax
 13307 00009581 488B4520                	mov rax, PARAM(0)	; param a
 13308 00009585 50                      	push rax
 13309 00009586 6A02                    	push 2	; arg count
 13310 00009588 488B0425[A20E0000]      	mov rax, qword [free_var_13]	; free var __bin-div-qq
 13311 00009590 803805                  	cmp byte [rax], T_undefined
 13312 00009593 0F840BD40000            	je L_error_fvar_undefined
 13313 00009599 803804                  	cmp byte [rax], T_closure
 13314 0000959C 0F8586D40000            	jne L_error_non_closure
 13315 000095A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13316 000095A5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13317 000095A8 FF7500                  	push qword[rbp]
 13318 000095AB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13319 000095B0 48895D10                	mov qword[rbp + 8*2],rbx
 13320 000095B4 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 13321 000095BC BF00000000              	mov rdi,0
 13322 000095C1 EB00                    	jmp .L_tc_recycle_frame_loop_007e
 13323                                  .L_tc_recycle_frame_loop_007e:
 13324 000095C3 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13325 000095C7 740F                    	je .L_tc_recycle_frame_done_007e
 13326 000095C9 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13327 000095CE 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13328 000095D3 48FFC7                  	inc rdi
 13329 000095D6 EBEB                    	jmp .L_tc_recycle_frame_loop_007e
 13330                                  .L_tc_recycle_frame_done_007e:
 13331 000095D8 4889EC                  	mov rsp, rbp	; point to last argument
 13332 000095DB 5D                      	pop rbp
 13333 000095DC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13334 000095DF E90D010000              	jmp .L_if_end_0041
 13335                                  .L_if_else_0041:
 13336                                  	; preparing a non-tail-call
 13337 000095E4 488B4528                	mov rax, PARAM(1)	; param b
 13338 000095E8 50                      	push rax
 13339 000095E9 6A01                    	push 1	; arg count
 13340 000095EB 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 13341 000095F3 803805                  	cmp byte [rax], T_undefined
 13342 000095F6 0F84A8D30000            	je L_error_fvar_undefined
 13343 000095FC 803804                  	cmp byte [rax], T_closure
 13344 000095FF 0F8523D40000            	jne L_error_non_closure
 13345 00009605 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13346 00009608 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13347 0000960B 483D[02000000]          	cmp rax, sob_boolean_false
 13348 00009611 0F8488000000            	je .L_if_else_0040
 13349                                  	; preparing a tail-call
 13350 00009617 488B4528                	mov rax, PARAM(1)	; param b
 13351 0000961B 50                      	push rax
 13352                                  	; preparing a non-tail-call
 13353 0000961C 488B4520                	mov rax, PARAM(0)	; param a
 13354 00009620 50                      	push rax
 13355 00009621 6A01                    	push 1	; arg count
 13356 00009623 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 13357 0000962B 803805                  	cmp byte [rax], T_undefined
 13358 0000962E 0F8470D30000            	je L_error_fvar_undefined
 13359 00009634 803804                  	cmp byte [rax], T_closure
 13360 00009637 0F85EBD30000            	jne L_error_non_closure
 13361 0000963D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13362 00009640 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13363 00009643 50                      	push rax
 13364 00009644 6A02                    	push 2	; arg count
 13365 00009646 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13366 0000964E 803805                  	cmp byte [rax], T_undefined
 13367 00009651 0F844DD30000            	je L_error_fvar_undefined
 13368 00009657 803804                  	cmp byte [rax], T_closure
 13369 0000965A 0F85C8D30000            	jne L_error_non_closure
 13370 00009660 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13371 00009663 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13372 00009666 FF7500                  	push qword[rbp]
 13373 00009669 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13374 0000966E 48895D10                	mov qword[rbp + 8*2],rbx
 13375 00009672 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 13376 0000967A BF00000000              	mov rdi,0
 13377 0000967F EB00                    	jmp .L_tc_recycle_frame_loop_007f
 13378                                  .L_tc_recycle_frame_loop_007f:
 13379 00009681 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13380 00009685 740F                    	je .L_tc_recycle_frame_done_007f
 13381 00009687 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13382 0000968C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13383 00009691 48FFC7                  	inc rdi
 13384 00009694 EBEB                    	jmp .L_tc_recycle_frame_loop_007f
 13385                                  .L_tc_recycle_frame_done_007f:
 13386 00009696 4889EC                  	mov rsp, rbp	; point to last argument
 13387 00009699 5D                      	pop rbp
 13388 0000969A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13389 0000969D EB52                    	jmp .L_if_end_0040
 13390                                  .L_if_else_0040:
 13391                                  	; preparing a tail-call
 13392 0000969F 6A00                    	push 0	; arg count
 13393 000096A1 488B4510                	mov rax, ENV
 13394 000096A5 488B00                  	mov rax, qword [rax + 8 * 0]
 13395 000096A8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13396 000096AB 803804                  	cmp byte [rax], T_closure
 13397 000096AE 0F8574D30000            	jne L_error_non_closure
 13398 000096B4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13399 000096B7 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13400 000096BA FF7500                  	push qword[rbp]
 13401 000096BD 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13402 000096C2 48895D10                	mov qword[rbp + 8*2],rbx
 13403 000096C6 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 13404 000096CE BF00000000              	mov rdi,0
 13405 000096D3 EB00                    	jmp .L_tc_recycle_frame_loop_0080
 13406                                  .L_tc_recycle_frame_loop_0080:
 13407 000096D5 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13408 000096D9 740F                    	je .L_tc_recycle_frame_done_0080
 13409 000096DB 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13410 000096E0 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13411 000096E5 48FFC7                  	inc rdi
 13412 000096E8 EBEB                    	jmp .L_tc_recycle_frame_loop_0080
 13413                                  .L_tc_recycle_frame_done_0080:
 13414 000096EA 4889EC                  	mov rsp, rbp	; point to last argument
 13415 000096ED 5D                      	pop rbp
 13416 000096EE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13417                                  .L_if_end_0040:
 13418                                  .L_if_end_0041:
 13419                                  .L_if_end_0042:
 13420 000096F1 E9E9020000              	jmp .L_if_end_0047
 13421                                  .L_if_else_0047:
 13422                                  	; preparing a non-tail-call
 13423 000096F6 488B4520                	mov rax, PARAM(0)	; param a
 13424 000096FA 50                      	push rax
 13425 000096FB 6A01                    	push 1	; arg count
 13426 000096FD 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 13427 00009705 803805                  	cmp byte [rax], T_undefined
 13428 00009708 0F8496D20000            	je L_error_fvar_undefined
 13429 0000970E 803804                  	cmp byte [rax], T_closure
 13430 00009711 0F8511D30000            	jne L_error_non_closure
 13431 00009717 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13432 0000971A FF5009                  	call SOB_CLOSURE_CODE(rax)
 13433 0000971D 483D[02000000]          	cmp rax, sob_boolean_false
 13434 00009723 0F8464020000            	je .L_if_else_0046
 13435                                  	; preparing a non-tail-call
 13436 00009729 488B4528                	mov rax, PARAM(1)	; param b
 13437 0000972D 50                      	push rax
 13438 0000972E 6A01                    	push 1	; arg count
 13439 00009730 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 13440 00009738 803805                  	cmp byte [rax], T_undefined
 13441 0000973B 0F8463D20000            	je L_error_fvar_undefined
 13442 00009741 803804                  	cmp byte [rax], T_closure
 13443 00009744 0F85DED20000            	jne L_error_non_closure
 13444 0000974A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13445 0000974D FF5009                  	call SOB_CLOSURE_CODE(rax)
 13446 00009750 483D[02000000]          	cmp rax, sob_boolean_false
 13447 00009756 0F848B000000            	je .L_if_else_0045
 13448                                  	; preparing a tail-call
 13449                                  	; preparing a non-tail-call
 13450 0000975C 488B4528                	mov rax, PARAM(1)	; param b
 13451 00009760 50                      	push rax
 13452 00009761 6A01                    	push 1	; arg count
 13453 00009763 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 13454 0000976B 803805                  	cmp byte [rax], T_undefined
 13455 0000976E 0F8430D20000            	je L_error_fvar_undefined
 13456 00009774 803804                  	cmp byte [rax], T_closure
 13457 00009777 0F85ABD20000            	jne L_error_non_closure
 13458 0000977D FF7001                  	push SOB_CLOSURE_ENV(rax)
 13459 00009780 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13460 00009783 50                      	push rax
 13461 00009784 488B4520                	mov rax, PARAM(0)	; param a
 13462 00009788 50                      	push rax
 13463 00009789 6A02                    	push 2	; arg count
 13464 0000978B 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13465 00009793 803805                  	cmp byte [rax], T_undefined
 13466 00009796 0F8408D20000            	je L_error_fvar_undefined
 13467 0000979C 803804                  	cmp byte [rax], T_closure
 13468 0000979F 0F8583D20000            	jne L_error_non_closure
 13469 000097A5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13470 000097A8 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13471 000097AB FF7500                  	push qword[rbp]
 13472 000097AE 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13473 000097B3 48895D10                	mov qword[rbp + 8*2],rbx
 13474 000097B7 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 13475 000097BF BF00000000              	mov rdi,0
 13476 000097C4 EB00                    	jmp .L_tc_recycle_frame_loop_0081
 13477                                  .L_tc_recycle_frame_loop_0081:
 13478 000097C6 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13479 000097CA 740F                    	je .L_tc_recycle_frame_done_0081
 13480 000097CC 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13481 000097D1 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13482 000097D6 48FFC7                  	inc rdi
 13483 000097D9 EBEB                    	jmp .L_tc_recycle_frame_loop_0081
 13484                                  .L_tc_recycle_frame_done_0081:
 13485 000097DB 4889EC                  	mov rsp, rbp	; point to last argument
 13486 000097DE 5D                      	pop rbp
 13487 000097DF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13488 000097E2 E9A4010000              	jmp .L_if_end_0045
 13489                                  .L_if_else_0045:
 13490                                  	; preparing a non-tail-call
 13491 000097E7 488B4528                	mov rax, PARAM(1)	; param b
 13492 000097EB 50                      	push rax
 13493 000097EC 6A01                    	push 1	; arg count
 13494 000097EE 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 13495 000097F6 803805                  	cmp byte [rax], T_undefined
 13496 000097F9 0F84A5D10000            	je L_error_fvar_undefined
 13497 000097FF 803804                  	cmp byte [rax], T_closure
 13498 00009802 0F8520D20000            	jne L_error_non_closure
 13499 00009808 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13500 0000980B FF5009                  	call SOB_CLOSURE_CODE(rax)
 13501 0000980E 483D[02000000]          	cmp rax, sob_boolean_false
 13502 00009814 0F848B000000            	je .L_if_else_0044
 13503                                  	; preparing a tail-call
 13504                                  	; preparing a non-tail-call
 13505 0000981A 488B4528                	mov rax, PARAM(1)	; param b
 13506 0000981E 50                      	push rax
 13507 0000981F 6A01                    	push 1	; arg count
 13508 00009821 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 13509 00009829 803805                  	cmp byte [rax], T_undefined
 13510 0000982C 0F8472D10000            	je L_error_fvar_undefined
 13511 00009832 803804                  	cmp byte [rax], T_closure
 13512 00009835 0F85EDD10000            	jne L_error_non_closure
 13513 0000983B FF7001                  	push SOB_CLOSURE_ENV(rax)
 13514 0000983E FF5009                  	call SOB_CLOSURE_CODE(rax)
 13515 00009841 50                      	push rax
 13516 00009842 488B4520                	mov rax, PARAM(0)	; param a
 13517 00009846 50                      	push rax
 13518 00009847 6A02                    	push 2	; arg count
 13519 00009849 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13520 00009851 803805                  	cmp byte [rax], T_undefined
 13521 00009854 0F844AD10000            	je L_error_fvar_undefined
 13522 0000985A 803804                  	cmp byte [rax], T_closure
 13523 0000985D 0F85C5D10000            	jne L_error_non_closure
 13524 00009863 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13525 00009866 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13526 00009869 FF7500                  	push qword[rbp]
 13527 0000986C 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13528 00009871 48895D10                	mov qword[rbp + 8*2],rbx
 13529 00009875 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 13530 0000987D BF00000000              	mov rdi,0
 13531 00009882 EB00                    	jmp .L_tc_recycle_frame_loop_0082
 13532                                  .L_tc_recycle_frame_loop_0082:
 13533 00009884 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13534 00009888 740F                    	je .L_tc_recycle_frame_done_0082
 13535 0000988A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13536 0000988F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13537 00009894 48FFC7                  	inc rdi
 13538 00009897 EBEB                    	jmp .L_tc_recycle_frame_loop_0082
 13539                                  .L_tc_recycle_frame_done_0082:
 13540 00009899 4889EC                  	mov rsp, rbp	; point to last argument
 13541 0000989C 5D                      	pop rbp
 13542 0000989D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13543 000098A0 E9E6000000              	jmp .L_if_end_0044
 13544                                  .L_if_else_0044:
 13545                                  	; preparing a non-tail-call
 13546 000098A5 488B4528                	mov rax, PARAM(1)	; param b
 13547 000098A9 50                      	push rax
 13548 000098AA 6A01                    	push 1	; arg count
 13549 000098AC 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 13550 000098B4 803805                  	cmp byte [rax], T_undefined
 13551 000098B7 0F84E7D00000            	je L_error_fvar_undefined
 13552 000098BD 803804                  	cmp byte [rax], T_closure
 13553 000098C0 0F8562D10000            	jne L_error_non_closure
 13554 000098C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13555 000098C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13556 000098CC 483D[02000000]          	cmp rax, sob_boolean_false
 13557 000098D2 7465                    	je .L_if_else_0043
 13558                                  	; preparing a tail-call
 13559 000098D4 488B4528                	mov rax, PARAM(1)	; param b
 13560 000098D8 50                      	push rax
 13561 000098D9 488B4520                	mov rax, PARAM(0)	; param a
 13562 000098DD 50                      	push rax
 13563 000098DE 6A02                    	push 2	; arg count
 13564 000098E0 488B0425[B30E0000]      	mov rax, qword [free_var_14]	; free var __bin-div-rr
 13565 000098E8 803805                  	cmp byte [rax], T_undefined
 13566 000098EB 0F84B3D00000            	je L_error_fvar_undefined
 13567 000098F1 803804                  	cmp byte [rax], T_closure
 13568 000098F4 0F852ED10000            	jne L_error_non_closure
 13569 000098FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 13570 000098FD FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13571 00009900 FF7500                  	push qword[rbp]
 13572 00009903 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13573 00009908 48895D10                	mov qword[rbp + 8*2],rbx
 13574 0000990C 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 13575 00009914 BF00000000              	mov rdi,0
 13576 00009919 EB00                    	jmp .L_tc_recycle_frame_loop_0083
 13577                                  .L_tc_recycle_frame_loop_0083:
 13578 0000991B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13579 0000991F 740F                    	je .L_tc_recycle_frame_done_0083
 13580 00009921 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13581 00009926 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13582 0000992B 48FFC7                  	inc rdi
 13583 0000992E EBEB                    	jmp .L_tc_recycle_frame_loop_0083
 13584                                  .L_tc_recycle_frame_done_0083:
 13585 00009930 4889EC                  	mov rsp, rbp	; point to last argument
 13586 00009933 5D                      	pop rbp
 13587 00009934 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13588 00009937 EB52                    	jmp .L_if_end_0043
 13589                                  .L_if_else_0043:
 13590                                  	; preparing a tail-call
 13591 00009939 6A00                    	push 0	; arg count
 13592 0000993B 488B4510                	mov rax, ENV
 13593 0000993F 488B00                  	mov rax, qword [rax + 8 * 0]
 13594 00009942 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13595 00009945 803804                  	cmp byte [rax], T_closure
 13596 00009948 0F85DAD00000            	jne L_error_non_closure
 13597 0000994E FF7001                  	push SOB_CLOSURE_ENV(rax)
 13598 00009951 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13599 00009954 FF7500                  	push qword[rbp]
 13600 00009957 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13601 0000995C 48895D10                	mov qword[rbp + 8*2],rbx
 13602 00009960 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 13603 00009968 BF00000000              	mov rdi,0
 13604 0000996D EB00                    	jmp .L_tc_recycle_frame_loop_0084
 13605                                  .L_tc_recycle_frame_loop_0084:
 13606 0000996F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13607 00009973 740F                    	je .L_tc_recycle_frame_done_0084
 13608 00009975 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13609 0000997A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13610 0000997F 48FFC7                  	inc rdi
 13611 00009982 EBEB                    	jmp .L_tc_recycle_frame_loop_0084
 13612                                  .L_tc_recycle_frame_done_0084:
 13613 00009984 4889EC                  	mov rsp, rbp	; point to last argument
 13614 00009987 5D                      	pop rbp
 13615 00009988 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13616                                  .L_if_end_0043:
 13617                                  .L_if_end_0044:
 13618                                  .L_if_end_0045:
 13619 0000998B EB52                    	jmp .L_if_end_0046
 13620                                  .L_if_else_0046:
 13621                                  	; preparing a tail-call
 13622 0000998D 6A00                    	push 0	; arg count
 13623 0000998F 488B4510                	mov rax, ENV
 13624 00009993 488B00                  	mov rax, qword [rax + 8 * 0]
 13625 00009996 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var error
 13626 00009999 803804                  	cmp byte [rax], T_closure
 13627 0000999C 0F8586D00000            	jne L_error_non_closure
 13628 000099A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13629 000099A5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13630 000099A8 FF7500                  	push qword[rbp]
 13631 000099AB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13632 000099B0 48895D10                	mov qword[rbp + 8*2],rbx
 13633 000099B4 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 13634 000099BC BF00000000              	mov rdi,0
 13635 000099C1 EB00                    	jmp .L_tc_recycle_frame_loop_0085
 13636                                  .L_tc_recycle_frame_loop_0085:
 13637 000099C3 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13638 000099C7 740F                    	je .L_tc_recycle_frame_done_0085
 13639 000099C9 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13640 000099CE 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13641 000099D3 48FFC7                  	inc rdi
 13642 000099D6 EBEB                    	jmp .L_tc_recycle_frame_loop_0085
 13643                                  .L_tc_recycle_frame_done_0085:
 13644 000099D8 4889EC                  	mov rsp, rbp	; point to last argument
 13645 000099DB 5D                      	pop rbp
 13646 000099DC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13647                                  .L_if_end_0046:
 13648                                  .L_if_end_0047:
 13649                                  .L_if_end_0048:
 13650 000099DF C9                      	leave
 13651 000099E0 C22000                  	ret AND_KILL_FRAME(2)
 13652                                  .L_lambda_simple_end_0048:	; new closure is in rax
 13653 000099E3 50                      	push rax
 13654 000099E4 6A01                    	push 1	; arg count
 13655 000099E6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13656 000099EB E8E1D00000              	call malloc
 13657 000099F0 50                      	push rax
 13658 000099F1 BF08000000              	mov rdi, 8 * 1	; new rib
 13659 000099F6 E8D6D00000              	call malloc
 13660 000099FB 50                      	push rax
 13661 000099FC BF10000000              	mov rdi, 8 * 2	; extended env
 13662 00009A01 E8CBD00000              	call malloc
 13663 00009A06 488B7D10                	mov rdi, ENV
 13664 00009A0A BE00000000              	mov rsi, 0
 13665 00009A0F BA01000000              	mov rdx, 1
 13666                                  .L_lambda_simple_env_loop_0049:	; ext_env[i + 1] <-- env[i]
 13667 00009A14 4883FE01                	cmp rsi, 1
 13668 00009A18 7410                    	je .L_lambda_simple_env_end_0049
 13669 00009A1A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13670 00009A1E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13671 00009A22 48FFC6                  	inc rsi
 13672 00009A25 48FFC2                  	inc rdx
 13673 00009A28 EBEA                    	jmp .L_lambda_simple_env_loop_0049
 13674                                  .L_lambda_simple_env_end_0049:
 13675 00009A2A 5B                      	pop rbx
 13676 00009A2B BE00000000              	mov rsi, 0
 13677                                  .L_lambda_simple_params_loop_0049:	; copy params
 13678 00009A30 4883FE01                	cmp rsi, 1
 13679 00009A34 740E                    	je .L_lambda_simple_params_end_0049
 13680 00009A36 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13681 00009A3B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13682 00009A3F 48FFC6                  	inc rsi
 13683 00009A42 EBEC                    	jmp .L_lambda_simple_params_loop_0049
 13684                                  .L_lambda_simple_params_end_0049:
 13685 00009A44 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13686 00009A47 4889C3                  	mov rbx, rax
 13687 00009A4A 58                      	pop rax
 13688 00009A4B C60004                  	mov byte [rax], T_closure
 13689 00009A4E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13690 00009A52 48C74009[5F9A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0049
 13691 00009A5A E9D6050000              	jmp .L_lambda_simple_end_0049
 13692                                  .L_lambda_simple_code_0049:	; lambda-simple body
 13693 00009A5F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13694 00009A65 740B                    	je .L_lambda_simple_arity_check_ok_0049
 13695 00009A67 FF742410                	push qword [rsp + 8 * 2]
 13696 00009A6B 6A01                    	push 1
 13697 00009A6D E918D00000              	jmp L_error_incorrect_arity_simple
 13698                                  .L_lambda_simple_arity_check_ok_0049:
 13699 00009A72 C8000000                	enter 0, 0
 13700 00009A76 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13701 00009A7B E851D00000              	call malloc
 13702 00009A80 50                      	push rax
 13703 00009A81 BF08000000              	mov rdi, 8 * 1	; new rib
 13704 00009A86 E846D00000              	call malloc
 13705 00009A8B 50                      	push rax
 13706 00009A8C BF18000000              	mov rdi, 8 * 3	; extended env
 13707 00009A91 E83BD00000              	call malloc
 13708 00009A96 488B7D10                	mov rdi, ENV
 13709 00009A9A BE00000000              	mov rsi, 0
 13710 00009A9F BA01000000              	mov rdx, 1
 13711                                  .L_lambda_opt_env_loop_000d:	; ext_env[i + 1] <-- env[i]
 13712 00009AA4 4883FE02                	cmp rsi, 2
 13713 00009AA8 7410                    	je .L_lambda_opt_env_end_000d
 13714 00009AAA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13715 00009AAE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13716 00009AB2 48FFC6                  	inc rsi
 13717 00009AB5 48FFC2                  	inc rdx
 13718 00009AB8 EBEA                    	jmp .L_lambda_opt_env_loop_000d
 13719                                  .L_lambda_opt_env_end_000d:
 13720 00009ABA 5B                      	pop rbx
 13721 00009ABB BE00000000              	mov rsi, 0
 13722                                  .L_lambda_opt_params_loop_000d:	; copy params
 13723 00009AC0 4883FE01                	cmp rsi, 1
 13724 00009AC4 740E                    	je .L_lambda_opt_params_end_000d
 13725 00009AC6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13726 00009ACB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13727 00009ACF 48FFC6                  	inc rsi
 13728 00009AD2 EBEC                    	jmp .L_lambda_opt_params_loop_000d
 13729                                  .L_lambda_opt_params_end_000d:
 13730 00009AD4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13731 00009AD7 4889C3                  	mov rbx, rax
 13732 00009ADA 58                      	pop rax
 13733 00009ADB C60004                  	mov byte [rax], T_closure
 13734 00009ADE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13735 00009AE2 48C74009[EF9A0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000d
 13736 00009AEA E942050000              	jmp .L_lambda_opt_end_000d
 13737                                  .L_lambda_opt_code_000d:	; lambda-opt body
 13738 00009AEF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13739 00009AF5 7411                    	je .L_lambda_opt_arity_check_exact_000d
 13740 00009AF7 0F8F6C020000            	jg .L_lambda_opt_arity_check_more_000d
 13741 00009AFD FF742410                	push qword [rsp + 8 * 2]
 13742 00009B01 6A01                    	push 1
 13743 00009B03 E996CF0000              	jmp L_error_incorrect_arity_opt
 13744                                  .L_lambda_opt_arity_check_exact_000d:
 13745 00009B08 4883EC08                	sub rsp, 8
 13746 00009B0C 488B442408              	mov rax, qword[rsp + 8 *1]
 13747 00009B11 48890424                	mov qword[rsp], rax  
 13748 00009B15 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 13749 00009B1A 4889442408              	mov qword[rsp + 8 * 1], rax
 13750 00009B1F B802000000              	mov rax, 2
 13751 00009B24 4889442410              	mov qword[rsp + 8 *2], rax
 13752 00009B29 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 13753 00009B2E 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 13754 00009B33 48B8-                   	mov rax, sob_nil
 13754 00009B35 [0100000000000000] 
 13755 00009B3D 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 13756 00009B42 C8000000                	enter 0, 0
 13757                                  	; preparing a non-tail-call
 13758 00009B46 488B4528                	mov rax, PARAM(1)	; param s
 13759 00009B4A 50                      	push rax
 13760 00009B4B 6A01                    	push 1	; arg count
 13761 00009B4D 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 13762 00009B55 803805                  	cmp byte [rax], T_undefined
 13763 00009B58 0F8446CE0000            	je L_error_fvar_undefined
 13764 00009B5E 803804                  	cmp byte [rax], T_closure
 13765 00009B61 0F85C1CE0000            	jne L_error_non_closure
 13766 00009B67 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13767 00009B6A FF5009                  	call SOB_CLOSURE_CODE(rax)
 13768 00009B6D 483D[02000000]          	cmp rax, sob_boolean_false
 13769 00009B73 7467                    	je .L_if_else_004a
 13770                                  	; preparing a tail-call
 13771 00009B75 488B4520                	mov rax, PARAM(0)	; param a
 13772 00009B79 50                      	push rax
 13773 00009B7A 48B8-                   	mov rax, L_constants + 2270
 13773 00009B7C [DE08000000000000] 
 13774 00009B84 50                      	push rax
 13775 00009B85 6A02                    	push 2	; arg count
 13776 00009B87 488B4510                	mov rax, ENV
 13777 00009B8B 488B00                  	mov rax, qword [rax + 8 * 0]
 13778 00009B8E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13779 00009B91 803804                  	cmp byte [rax], T_closure
 13780 00009B94 0F858ECE0000            	jne L_error_non_closure
 13781 00009B9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13782 00009B9D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13783 00009BA0 FF7500                  	push qword[rbp]
 13784 00009BA3 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13785 00009BA8 48895D10                	mov qword[rbp + 8*2],rbx
 13786 00009BAC 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 13787 00009BB4 BF00000000              	mov rdi,0
 13788 00009BB9 EB00                    	jmp .L_tc_recycle_frame_loop_0089
 13789                                  .L_tc_recycle_frame_loop_0089:
 13790 00009BBB 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13791 00009BBF 740F                    	je .L_tc_recycle_frame_done_0089
 13792 00009BC1 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13793 00009BC6 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13794 00009BCB 48FFC7                  	inc rdi
 13795 00009BCE EBEB                    	jmp .L_tc_recycle_frame_loop_0089
 13796                                  .L_tc_recycle_frame_done_0089:
 13797 00009BD0 4889EC                  	mov rsp, rbp	; point to last argument
 13798 00009BD3 5D                      	pop rbp
 13799 00009BD4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13800 00009BD7 E984010000              	jmp .L_if_end_004a
 13801                                  .L_if_else_004a:
 13802                                  	; preparing a tail-call
 13803                                  	; preparing a non-tail-call
 13804 00009BDC 488B4528                	mov rax, PARAM(1)	; param s
 13805 00009BE0 50                      	push rax
 13806 00009BE1 48B8-                   	mov rax, L_constants + 2270
 13806 00009BE3 [DE08000000000000] 
 13807 00009BEB 50                      	push rax
 13808 00009BEC 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 13809 00009BF4 803805                  	cmp byte [rax], T_undefined
 13810 00009BF7 0F84A7CD0000            	je L_error_fvar_undefined
 13811 00009BFD 50                      	push rax
 13812 00009BFE 6A03                    	push 3	; arg count
 13813 00009C00 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 13814 00009C08 803805                  	cmp byte [rax], T_undefined
 13815 00009C0B 0F8493CD0000            	je L_error_fvar_undefined
 13816 00009C11 803804                  	cmp byte [rax], T_closure
 13817 00009C14 0F850ECE0000            	jne L_error_non_closure
 13818 00009C1A FF7001                  	push SOB_CLOSURE_ENV(rax)
 13819 00009C1D FF5009                  	call SOB_CLOSURE_CODE(rax)
 13820 00009C20 50                      	push rax
 13821 00009C21 6A01                    	push 1	; arg count
 13822 00009C23 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 13823 00009C28 E8A4CE0000              	call malloc
 13824 00009C2D 50                      	push rax
 13825 00009C2E BF10000000              	mov rdi, 8 * 2	; new rib
 13826 00009C33 E899CE0000              	call malloc
 13827 00009C38 50                      	push rax
 13828 00009C39 BF20000000              	mov rdi, 8 * 4	; extended env
 13829 00009C3E E88ECE0000              	call malloc
 13830 00009C43 488B7D10                	mov rdi, ENV
 13831 00009C47 BE00000000              	mov rsi, 0
 13832 00009C4C BA01000000              	mov rdx, 1
 13833                                  .L_lambda_simple_env_loop_004b:	; ext_env[i + 1] <-- env[i]
 13834 00009C51 4883FE03                	cmp rsi, 3
 13835 00009C55 7410                    	je .L_lambda_simple_env_end_004b
 13836 00009C57 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 13837 00009C5B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 13838 00009C5F 48FFC6                  	inc rsi
 13839 00009C62 48FFC2                  	inc rdx
 13840 00009C65 EBEA                    	jmp .L_lambda_simple_env_loop_004b
 13841                                  .L_lambda_simple_env_end_004b:
 13842 00009C67 5B                      	pop rbx
 13843 00009C68 BE00000000              	mov rsi, 0
 13844                                  .L_lambda_simple_params_loop_004b:	; copy params
 13845 00009C6D 4883FE02                	cmp rsi, 2
 13846 00009C71 740E                    	je .L_lambda_simple_params_end_004b
 13847 00009C73 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 13848 00009C78 488914F3                	mov qword [rbx + 8 * rsi], rdx
 13849 00009C7C 48FFC6                  	inc rsi
 13850 00009C7F EBEC                    	jmp .L_lambda_simple_params_loop_004b
 13851                                  .L_lambda_simple_params_end_004b:
 13852 00009C81 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 13853 00009C84 4889C3                  	mov rbx, rax
 13854 00009C87 58                      	pop rax
 13855 00009C88 C60004                  	mov byte [rax], T_closure
 13856 00009C8B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 13857 00009C8F 48C74009[9C9C0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004b
 13858 00009C97 E97E000000              	jmp .L_lambda_simple_end_004b
 13859                                  .L_lambda_simple_code_004b:	; lambda-simple body
 13860 00009C9C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 13861 00009CA2 740B                    	je .L_lambda_simple_arity_check_ok_004b
 13862 00009CA4 FF742410                	push qword [rsp + 8 * 2]
 13863 00009CA8 6A01                    	push 1
 13864 00009CAA E9DBCD0000              	jmp L_error_incorrect_arity_simple
 13865                                  .L_lambda_simple_arity_check_ok_004b:
 13866 00009CAF C8000000                	enter 0, 0
 13867                                  	; preparing a tail-call
 13868 00009CB3 488B4520                	mov rax, PARAM(0)	; param b
 13869 00009CB7 50                      	push rax
 13870 00009CB8 488B4510                	mov rax, ENV
 13871 00009CBC 488B00                  	mov rax, qword [rax + 8 * 0]
 13872 00009CBF 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 13873 00009CC2 50                      	push rax
 13874 00009CC3 6A02                    	push 2	; arg count
 13875 00009CC5 488B4510                	mov rax, ENV
 13876 00009CC9 488B4008                	mov rax, qword [rax + 8 * 1]
 13877 00009CCD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13878 00009CD0 803804                  	cmp byte [rax], T_closure
 13879 00009CD3 0F854FCD0000            	jne L_error_non_closure
 13880 00009CD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13881 00009CDC FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13882 00009CDF FF7500                  	push qword[rbp]
 13883 00009CE2 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13884 00009CE7 48895D10                	mov qword[rbp + 8*2],rbx
 13885 00009CEB 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 13886 00009CF3 BF00000000              	mov rdi,0
 13887 00009CF8 EB00                    	jmp .L_tc_recycle_frame_loop_008a
 13888                                  .L_tc_recycle_frame_loop_008a:
 13889 00009CFA 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13890 00009CFE 740F                    	je .L_tc_recycle_frame_done_008a
 13891 00009D00 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13892 00009D05 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13893 00009D0A 48FFC7                  	inc rdi
 13894 00009D0D EBEB                    	jmp .L_tc_recycle_frame_loop_008a
 13895                                  .L_tc_recycle_frame_done_008a:
 13896 00009D0F 4889EC                  	mov rsp, rbp	; point to last argument
 13897 00009D12 5D                      	pop rbp
 13898 00009D13 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13899 00009D16 C9                      	leave
 13900 00009D17 C21800                  	ret AND_KILL_FRAME(1)
 13901                                  .L_lambda_simple_end_004b:	; new closure is in rax
 13902 00009D1A 803804                  	cmp byte [rax], T_closure
 13903 00009D1D 0F8505CD0000            	jne L_error_non_closure
 13904 00009D23 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13905 00009D26 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13906 00009D29 FF7500                  	push qword[rbp]
 13907 00009D2C 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 13908 00009D31 48895D10                	mov qword[rbp + 8*2],rbx
 13909 00009D35 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 13910 00009D3D BF00000000              	mov rdi,0
 13911 00009D42 EB00                    	jmp .L_tc_recycle_frame_loop_008b
 13912                                  .L_tc_recycle_frame_loop_008b:
 13913 00009D44 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 13914 00009D48 740F                    	je .L_tc_recycle_frame_done_008b
 13915 00009D4A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 13916 00009D4F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 13917 00009D54 48FFC7                  	inc rdi
 13918 00009D57 EBEB                    	jmp .L_tc_recycle_frame_loop_008b
 13919                                  .L_tc_recycle_frame_done_008b:
 13920 00009D59 4889EC                  	mov rsp, rbp	; point to last argument
 13921 00009D5C 5D                      	pop rbp
 13922 00009D5D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 13923                                  .L_if_end_004a:
 13924 00009D60 C9                      	leave
 13925 00009D61 C22000                  	ret AND_KILL_FRAME(2)
 13926 00009D64 E9C8020000              	jmp .L_lambda_opt_end_000d	; new closure is in rax
 13927                                  .L_lambda_opt_arity_check_more_000d:
 13928 00009D69 488B442410              	mov rax, qword[rsp + 2 * 8]
 13929 00009D6E 4889C7                  	mov rdi, rax
 13930 00009D71 49B9-                   	mov r9, sob_nil
 13930 00009D73 [0100000000000000] 
 13931 00009D7B 4C8B442410              	mov r8, qword[rsp+2*8]
 13932                                  .L_lambda_opt_stack_shrink_loop_000d:
 13933 00009D80 4983F801                	cmp r8, 1
 13934 00009D84 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_000d
 13935 00009D86 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 13936 00009D8B BF11000000              	mov rdi, 1+8+8	;for pair
 13937 00009D90 E83CCD0000              	call malloc	 ;to create the pair in the stack
 13938 00009D95 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 13939 00009D98 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 13940 00009D9C 4C894809                 	mov qword[rax+1+8],r9
 13941 00009DA0 4989C1                  	mov r9 , rax	 ; for the recursion 
 13942 00009DA3 49FFC8                  	dec r8
 13943 00009DA6 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_000d
 13944                                  .L_lambda_opt_stack_shrink_loop_exit_000d:
 13945 00009DA8 488B442410              	mov rax, qword[rsp + 2 * 8]
 13946 00009DAD BF02000000              	mov rdi, 2
 13947 00009DB2 4829F8                  	sub rax, rdi
 13948 00009DB5 4889C7                  	mov rdi, rax
 13949 00009DB8 486BC008                	imul rax,8
 13950 00009DBC 4801C4                  	add rsp, rax
 13951 00009DBF 4889E0                  	mov rax, rsp
 13952 00009DC2 4989F8                  	mov r8, rdi
 13953 00009DC5 4D6BC008                	imul r8, 8
 13954 00009DC9 4C29C0                  	sub rax, r8
 13955 00009DCC 4989C2                  	mov r10, rax	; holds the original ret in the stack
 13956 00009DCF 4983C218                	add r10, 8*3
 13957 00009DD3 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 13958 00009DD7 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 13959 00009DDA 4D6BC008                	imul r8,8
 13960 00009DDE 4C01C0                  	add rax, r8
 13961 00009DE1 4C8908                  	mov qword[rax] ,r9
 13962 00009DE4 4D89D0                   	mov r8, r10
 13963 00009DE7 4983C000                	add r8, 8 * 0
 13964 00009DEB 4D8B08                  	mov r9,qword[r8]
 13965 00009DEE 4D890CF8                	mov qword [r8 + rdi * 8], r9
 13966 00009DF2 4983EA18                	sub r10, 8*3
 13967 00009DF6 48C744241002000000      	mov qword [rsp+2*8], 2
 13968 00009DFF 498B4208                	mov rax, qword[r10 + 1 * 8]
 13969 00009E03 4889442408              	mov qword[rsp + 1*8] ,rax
 13970 00009E08 498B02                  	mov rax, qword[r10]
 13971 00009E0B 48890424                	mov qword[rsp], rax
 13972 00009E0F C8000000                	enter 0, 0
 13973                                  	; preparing a non-tail-call
 13974 00009E13 488B4528                	mov rax, PARAM(1)	; param s
 13975 00009E17 50                      	push rax
 13976 00009E18 6A01                    	push 1	; arg count
 13977 00009E1A 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 13978 00009E22 803805                  	cmp byte [rax], T_undefined
 13979 00009E25 0F8479CB0000            	je L_error_fvar_undefined
 13980 00009E2B 803804                  	cmp byte [rax], T_closure
 13981 00009E2E 0F85F4CB0000            	jne L_error_non_closure
 13982 00009E34 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13983 00009E37 FF5009                  	call SOB_CLOSURE_CODE(rax)
 13984 00009E3A 483D[02000000]          	cmp rax, sob_boolean_false
 13985 00009E40 7467                    	je .L_if_else_0049
 13986                                  	; preparing a tail-call
 13987 00009E42 488B4520                	mov rax, PARAM(0)	; param a
 13988 00009E46 50                      	push rax
 13989 00009E47 48B8-                   	mov rax, L_constants + 2270
 13989 00009E49 [DE08000000000000] 
 13990 00009E51 50                      	push rax
 13991 00009E52 6A02                    	push 2	; arg count
 13992 00009E54 488B4510                	mov rax, ENV
 13993 00009E58 488B00                  	mov rax, qword [rax + 8 * 0]
 13994 00009E5B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 13995 00009E5E 803804                  	cmp byte [rax], T_closure
 13996 00009E61 0F85C1CB0000            	jne L_error_non_closure
 13997 00009E67 FF7001                  	push SOB_CLOSURE_ENV(rax)
 13998 00009E6A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 13999 00009E6D FF7500                  	push qword[rbp]
 14000 00009E70 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14001 00009E75 48895D10                	mov qword[rbp + 8*2],rbx
 14002 00009E79 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 14003 00009E81 BF00000000              	mov rdi,0
 14004 00009E86 EB00                    	jmp .L_tc_recycle_frame_loop_0086
 14005                                  .L_tc_recycle_frame_loop_0086:
 14006 00009E88 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14007 00009E8C 740F                    	je .L_tc_recycle_frame_done_0086
 14008 00009E8E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14009 00009E93 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14010 00009E98 48FFC7                  	inc rdi
 14011 00009E9B EBEB                    	jmp .L_tc_recycle_frame_loop_0086
 14012                                  .L_tc_recycle_frame_done_0086:
 14013 00009E9D 4889EC                  	mov rsp, rbp	; point to last argument
 14014 00009EA0 5D                      	pop rbp
 14015 00009EA1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14016 00009EA4 E984010000              	jmp .L_if_end_0049
 14017                                  .L_if_else_0049:
 14018                                  	; preparing a tail-call
 14019                                  	; preparing a non-tail-call
 14020 00009EA9 488B4528                	mov rax, PARAM(1)	; param s
 14021 00009EAD 50                      	push rax
 14022 00009EAE 48B8-                   	mov rax, L_constants + 2270
 14022 00009EB0 [DE08000000000000] 
 14023 00009EB8 50                      	push rax
 14024 00009EB9 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 14025 00009EC1 803805                  	cmp byte [rax], T_undefined
 14026 00009EC4 0F84DACA0000            	je L_error_fvar_undefined
 14027 00009ECA 50                      	push rax
 14028 00009ECB 6A03                    	push 3	; arg count
 14029 00009ECD 488B0425[6A130000]      	mov rax, qword [free_var_85]	; free var fold-left
 14030 00009ED5 803805                  	cmp byte [rax], T_undefined
 14031 00009ED8 0F84C6CA0000            	je L_error_fvar_undefined
 14032 00009EDE 803804                  	cmp byte [rax], T_closure
 14033 00009EE1 0F8541CB0000            	jne L_error_non_closure
 14034 00009EE7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14035 00009EEA FF5009                  	call SOB_CLOSURE_CODE(rax)
 14036 00009EED 50                      	push rax
 14037 00009EEE 6A01                    	push 1	; arg count
 14038 00009EF0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14039 00009EF5 E8D7CB0000              	call malloc
 14040 00009EFA 50                      	push rax
 14041 00009EFB BF10000000              	mov rdi, 8 * 2	; new rib
 14042 00009F00 E8CCCB0000              	call malloc
 14043 00009F05 50                      	push rax
 14044 00009F06 BF20000000              	mov rdi, 8 * 4	; extended env
 14045 00009F0B E8C1CB0000              	call malloc
 14046 00009F10 488B7D10                	mov rdi, ENV
 14047 00009F14 BE00000000              	mov rsi, 0
 14048 00009F19 BA01000000              	mov rdx, 1
 14049                                  .L_lambda_simple_env_loop_004a:	; ext_env[i + 1] <-- env[i]
 14050 00009F1E 4883FE03                	cmp rsi, 3
 14051 00009F22 7410                    	je .L_lambda_simple_env_end_004a
 14052 00009F24 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14053 00009F28 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14054 00009F2C 48FFC6                  	inc rsi
 14055 00009F2F 48FFC2                  	inc rdx
 14056 00009F32 EBEA                    	jmp .L_lambda_simple_env_loop_004a
 14057                                  .L_lambda_simple_env_end_004a:
 14058 00009F34 5B                      	pop rbx
 14059 00009F35 BE00000000              	mov rsi, 0
 14060                                  .L_lambda_simple_params_loop_004a:	; copy params
 14061 00009F3A 4883FE02                	cmp rsi, 2
 14062 00009F3E 740E                    	je .L_lambda_simple_params_end_004a
 14063 00009F40 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14064 00009F45 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14065 00009F49 48FFC6                  	inc rsi
 14066 00009F4C EBEC                    	jmp .L_lambda_simple_params_loop_004a
 14067                                  .L_lambda_simple_params_end_004a:
 14068 00009F4E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14069 00009F51 4889C3                  	mov rbx, rax
 14070 00009F54 58                      	pop rax
 14071 00009F55 C60004                  	mov byte [rax], T_closure
 14072 00009F58 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14073 00009F5C 48C74009[699F0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004a
 14074 00009F64 E97E000000              	jmp .L_lambda_simple_end_004a
 14075                                  .L_lambda_simple_code_004a:	; lambda-simple body
 14076 00009F69 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14077 00009F6F 740B                    	je .L_lambda_simple_arity_check_ok_004a
 14078 00009F71 FF742410                	push qword [rsp + 8 * 2]
 14079 00009F75 6A01                    	push 1
 14080 00009F77 E90ECB0000              	jmp L_error_incorrect_arity_simple
 14081                                  .L_lambda_simple_arity_check_ok_004a:
 14082 00009F7C C8000000                	enter 0, 0
 14083                                  	; preparing a tail-call
 14084 00009F80 488B4520                	mov rax, PARAM(0)	; param b
 14085 00009F84 50                      	push rax
 14086 00009F85 488B4510                	mov rax, ENV
 14087 00009F89 488B00                  	mov rax, qword [rax + 8 * 0]
 14088 00009F8C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var a
 14089 00009F8F 50                      	push rax
 14090 00009F90 6A02                    	push 2	; arg count
 14091 00009F92 488B4510                	mov rax, ENV
 14092 00009F96 488B4008                	mov rax, qword [rax + 8 * 1]
 14093 00009F9A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin/
 14094 00009F9D 803804                  	cmp byte [rax], T_closure
 14095 00009FA0 0F8582CA0000            	jne L_error_non_closure
 14096 00009FA6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14097 00009FA9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14098 00009FAC FF7500                  	push qword[rbp]
 14099 00009FAF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14100 00009FB4 48895D10                	mov qword[rbp + 8*2],rbx
 14101 00009FB8 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 14102 00009FC0 BF00000000              	mov rdi,0
 14103 00009FC5 EB00                    	jmp .L_tc_recycle_frame_loop_0087
 14104                                  .L_tc_recycle_frame_loop_0087:
 14105 00009FC7 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14106 00009FCB 740F                    	je .L_tc_recycle_frame_done_0087
 14107 00009FCD 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14108 00009FD2 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14109 00009FD7 48FFC7                  	inc rdi
 14110 00009FDA EBEB                    	jmp .L_tc_recycle_frame_loop_0087
 14111                                  .L_tc_recycle_frame_done_0087:
 14112 00009FDC 4889EC                  	mov rsp, rbp	; point to last argument
 14113 00009FDF 5D                      	pop rbp
 14114 00009FE0 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14115 00009FE3 C9                      	leave
 14116 00009FE4 C21800                  	ret AND_KILL_FRAME(1)
 14117                                  .L_lambda_simple_end_004a:	; new closure is in rax
 14118 00009FE7 803804                  	cmp byte [rax], T_closure
 14119 00009FEA 0F8538CA0000            	jne L_error_non_closure
 14120 00009FF0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14121 00009FF3 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14122 00009FF6 FF7500                  	push qword[rbp]
 14123 00009FF9 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14124 00009FFE 48895D10                	mov qword[rbp + 8*2],rbx
 14125 0000A002 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 14126 0000A00A BF00000000              	mov rdi,0
 14127 0000A00F EB00                    	jmp .L_tc_recycle_frame_loop_0088
 14128                                  .L_tc_recycle_frame_loop_0088:
 14129 0000A011 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14130 0000A015 740F                    	je .L_tc_recycle_frame_done_0088
 14131 0000A017 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14132 0000A01C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14133 0000A021 48FFC7                  	inc rdi
 14134 0000A024 EBEB                    	jmp .L_tc_recycle_frame_loop_0088
 14135                                  .L_tc_recycle_frame_done_0088:
 14136 0000A026 4889EC                  	mov rsp, rbp	; point to last argument
 14137 0000A029 5D                      	pop rbp
 14138 0000A02A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14139                                  .L_if_end_0049:
 14140 0000A02D C9                      	leave
 14141 0000A02E C22000                  	ret AND_KILL_FRAME(2)
 14142                                  .L_lambda_opt_end_000d:	; new closure is in rax
 14143 0000A031 C9                      	leave
 14144 0000A032 C21800                  	ret AND_KILL_FRAME(1)
 14145                                  .L_lambda_simple_end_0049:	; new closure is in rax
 14146 0000A035 803804                  	cmp byte [rax], T_closure
 14147 0000A038 0F85EAC90000            	jne L_error_non_closure
 14148 0000A03E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14149 0000A041 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14150 0000A044 FF7500                  	push qword[rbp]
 14151 0000A047 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14152 0000A04C 48895D10                	mov qword[rbp + 8*2],rbx
 14153 0000A050 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 14154 0000A058 BF00000000              	mov rdi,0
 14155 0000A05D EB00                    	jmp .L_tc_recycle_frame_loop_008c
 14156                                  .L_tc_recycle_frame_loop_008c:
 14157 0000A05F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14158 0000A063 740F                    	je .L_tc_recycle_frame_done_008c
 14159 0000A065 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14160 0000A06A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14161 0000A06F 48FFC7                  	inc rdi
 14162 0000A072 EBEB                    	jmp .L_tc_recycle_frame_loop_008c
 14163                                  .L_tc_recycle_frame_done_008c:
 14164 0000A074 4889EC                  	mov rsp, rbp	; point to last argument
 14165 0000A077 5D                      	pop rbp
 14166 0000A078 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14167 0000A07B C9                      	leave
 14168 0000A07C C21800                  	ret AND_KILL_FRAME(1)
 14169                                  .L_lambda_simple_end_0047:	; new closure is in rax
 14170 0000A07F 803804                  	cmp byte [rax], T_closure
 14171 0000A082 0F85A0C90000            	jne L_error_non_closure
 14172 0000A088 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14173 0000A08B FF5009                  	call SOB_CLOSURE_CODE(rax)
 14174 0000A08E 48890425[F80D0000]      	mov qword [free_var_3], rax
 14175 0000A096 48B8-                   	mov rax, sob_void
 14175 0000A098 [0000000000000000] 
 14176                                  
 14177 0000A0A0 4889C7                  	mov rdi, rax
 14178 0000A0A3 E87ECC0000              	call print_sexpr_if_not_void
 14179 0000A0A8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14180 0000A0AD E81FCA0000              	call malloc
 14181 0000A0B2 50                      	push rax
 14182 0000A0B3 BF00000000              	mov rdi, 8 * 0	; new rib
 14183 0000A0B8 E814CA0000              	call malloc
 14184 0000A0BD 50                      	push rax
 14185 0000A0BE BF08000000              	mov rdi, 8 * 1	; extended env
 14186 0000A0C3 E809CA0000              	call malloc
 14187 0000A0C8 488B7D10                	mov rdi, ENV
 14188 0000A0CC BE00000000              	mov rsi, 0
 14189 0000A0D1 BA01000000              	mov rdx, 1
 14190                                  .L_lambda_simple_env_loop_004c:	; ext_env[i + 1] <-- env[i]
 14191 0000A0D6 4883FE00                	cmp rsi, 0
 14192 0000A0DA 7410                    	je .L_lambda_simple_env_end_004c
 14193 0000A0DC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14194 0000A0E0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14195 0000A0E4 48FFC6                  	inc rsi
 14196 0000A0E7 48FFC2                  	inc rdx
 14197 0000A0EA EBEA                    	jmp .L_lambda_simple_env_loop_004c
 14198                                  .L_lambda_simple_env_end_004c:
 14199 0000A0EC 5B                      	pop rbx
 14200 0000A0ED BE00000000              	mov rsi, 0
 14201                                  .L_lambda_simple_params_loop_004c:	; copy params
 14202 0000A0F2 4883FE00                	cmp rsi, 0
 14203 0000A0F6 740E                    	je .L_lambda_simple_params_end_004c
 14204 0000A0F8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14205 0000A0FD 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14206 0000A101 48FFC6                  	inc rsi
 14207 0000A104 EBEC                    	jmp .L_lambda_simple_params_loop_004c
 14208                                  .L_lambda_simple_params_end_004c:
 14209 0000A106 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14210 0000A109 4889C3                  	mov rbx, rax
 14211 0000A10C 58                      	pop rax
 14212 0000A10D C60004                  	mov byte [rax], T_closure
 14213 0000A110 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14214 0000A114 48C74009[21A10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004c
 14215 0000A11C E90D010000              	jmp .L_lambda_simple_end_004c
 14216                                  .L_lambda_simple_code_004c:	; lambda-simple body
 14217 0000A121 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14218 0000A127 740B                    	je .L_lambda_simple_arity_check_ok_004c
 14219 0000A129 FF742410                	push qword [rsp + 8 * 2]
 14220 0000A12D 6A01                    	push 1
 14221 0000A12F E956C90000              	jmp L_error_incorrect_arity_simple
 14222                                  .L_lambda_simple_arity_check_ok_004c:
 14223 0000A134 C8000000                	enter 0, 0
 14224                                  	; preparing a non-tail-call
 14225 0000A138 488B4520                	mov rax, PARAM(0)	; param n
 14226 0000A13C 50                      	push rax
 14227 0000A13D 6A01                    	push 1	; arg count
 14228 0000A13F 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 14229 0000A147 803805                  	cmp byte [rax], T_undefined
 14230 0000A14A 0F8454C80000            	je L_error_fvar_undefined
 14231 0000A150 803804                  	cmp byte [rax], T_closure
 14232 0000A153 0F85CFC80000            	jne L_error_non_closure
 14233 0000A159 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14234 0000A15C FF5009                  	call SOB_CLOSURE_CODE(rax)
 14235 0000A15F 483D[02000000]          	cmp rax, sob_boolean_false
 14236 0000A165 740F                    	je .L_if_else_004b
 14237 0000A167 48B8-                   	mov rax, L_constants + 2270
 14237 0000A169 [DE08000000000000] 
 14238 0000A171 E9B4000000              	jmp .L_if_end_004b
 14239                                  .L_if_else_004b:
 14240                                  	; preparing a tail-call
 14241                                  	; preparing a non-tail-call
 14242                                  	; preparing a non-tail-call
 14243 0000A176 48B8-                   	mov rax, L_constants + 2270
 14243 0000A178 [DE08000000000000] 
 14244 0000A180 50                      	push rax
 14245 0000A181 488B4520                	mov rax, PARAM(0)	; param n
 14246 0000A185 50                      	push rax
 14247 0000A186 6A02                    	push 2	; arg count
 14248 0000A188 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 14249 0000A190 803805                  	cmp byte [rax], T_undefined
 14250 0000A193 0F840BC80000            	je L_error_fvar_undefined
 14251 0000A199 803804                  	cmp byte [rax], T_closure
 14252 0000A19C 0F8586C80000            	jne L_error_non_closure
 14253 0000A1A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14254 0000A1A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14255 0000A1A8 50                      	push rax
 14256 0000A1A9 6A01                    	push 1	; arg count
 14257 0000A1AB 488B0425[59130000]      	mov rax, qword [free_var_84]	; free var fact
 14258 0000A1B3 803805                  	cmp byte [rax], T_undefined
 14259 0000A1B6 0F84E8C70000            	je L_error_fvar_undefined
 14260 0000A1BC 803804                  	cmp byte [rax], T_closure
 14261 0000A1BF 0F8563C80000            	jne L_error_non_closure
 14262 0000A1C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14263 0000A1C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14264 0000A1CB 50                      	push rax
 14265 0000A1CC 488B4520                	mov rax, PARAM(0)	; param n
 14266 0000A1D0 50                      	push rax
 14267 0000A1D1 6A02                    	push 2	; arg count
 14268 0000A1D3 488B0425[C50D0000]      	mov rax, qword [free_var_0]	; free var *
 14269 0000A1DB 803805                  	cmp byte [rax], T_undefined
 14270 0000A1DE 0F84C0C70000            	je L_error_fvar_undefined
 14271 0000A1E4 803804                  	cmp byte [rax], T_closure
 14272 0000A1E7 0F853BC80000            	jne L_error_non_closure
 14273 0000A1ED FF7001                  	push SOB_CLOSURE_ENV(rax)
 14274 0000A1F0 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14275 0000A1F3 FF7500                  	push qword[rbp]
 14276 0000A1F6 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14277 0000A1FB 48895D10                	mov qword[rbp + 8*2],rbx
 14278 0000A1FF 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 14279 0000A207 BF00000000              	mov rdi,0
 14280 0000A20C EB00                    	jmp .L_tc_recycle_frame_loop_008d
 14281                                  .L_tc_recycle_frame_loop_008d:
 14282 0000A20E 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14283 0000A212 740F                    	je .L_tc_recycle_frame_done_008d
 14284 0000A214 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14285 0000A219 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14286 0000A21E 48FFC7                  	inc rdi
 14287 0000A221 EBEB                    	jmp .L_tc_recycle_frame_loop_008d
 14288                                  .L_tc_recycle_frame_done_008d:
 14289 0000A223 4889EC                  	mov rsp, rbp	; point to last argument
 14290 0000A226 5D                      	pop rbp
 14291 0000A227 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14292                                  .L_if_end_004b:
 14293 0000A22A C9                      	leave
 14294 0000A22B C21800                  	ret AND_KILL_FRAME(1)
 14295                                  .L_lambda_simple_end_004c:	; new closure is in rax
 14296 0000A22E 48890425[59130000]      	mov qword [free_var_84], rax
 14297 0000A236 48B8-                   	mov rax, sob_void
 14297 0000A238 [0000000000000000] 
 14298                                  
 14299 0000A240 4889C7                  	mov rdi, rax
 14300 0000A243 E8DECA0000              	call print_sexpr_if_not_void
 14301 0000A248 48B8-                   	mov rax, L_constants + 0
 14301 0000A24A [0000000000000000] 
 14302 0000A252 48890425[090E0000]      	mov qword [free_var_4], rax
 14303 0000A25A 48B8-                   	mov rax, sob_void
 14303 0000A25C [0000000000000000] 
 14304                                  
 14305 0000A264 4889C7                  	mov rdi, rax
 14306 0000A267 E8BACA0000              	call print_sexpr_if_not_void
 14307 0000A26C 48B8-                   	mov rax, L_constants + 0
 14307 0000A26E [0000000000000000] 
 14308 0000A276 48890425[1A0E0000]      	mov qword [free_var_5], rax
 14309 0000A27E 48B8-                   	mov rax, sob_void
 14309 0000A280 [0000000000000000] 
 14310                                  
 14311 0000A288 4889C7                  	mov rdi, rax
 14312 0000A28B E896CA0000              	call print_sexpr_if_not_void
 14313 0000A290 48B8-                   	mov rax, L_constants + 0
 14313 0000A292 [0000000000000000] 
 14314 0000A29A 48890425[3C0E0000]      	mov qword [free_var_7], rax
 14315 0000A2A2 48B8-                   	mov rax, sob_void
 14315 0000A2A4 [0000000000000000] 
 14316                                  
 14317 0000A2AC 4889C7                  	mov rdi, rax
 14318 0000A2AF E872CA0000              	call print_sexpr_if_not_void
 14319 0000A2B4 48B8-                   	mov rax, L_constants + 0
 14319 0000A2B6 [0000000000000000] 
 14320 0000A2BE 48890425[4D0E0000]      	mov qword [free_var_8], rax
 14321 0000A2C6 48B8-                   	mov rax, sob_void
 14321 0000A2C8 [0000000000000000] 
 14322                                  
 14323 0000A2D0 4889C7                  	mov rdi, rax
 14324 0000A2D3 E84ECA0000              	call print_sexpr_if_not_void
 14325 0000A2D8 48B8-                   	mov rax, L_constants + 0
 14325 0000A2DA [0000000000000000] 
 14326 0000A2E2 48890425[2B0E0000]      	mov qword [free_var_6], rax
 14327 0000A2EA 48B8-                   	mov rax, sob_void
 14327 0000A2EC [0000000000000000] 
 14328                                  
 14329 0000A2F4 4889C7                  	mov rdi, rax
 14330 0000A2F7 E82ACA0000              	call print_sexpr_if_not_void
 14331                                  	; preparing a non-tail-call
 14332 0000A2FC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14333 0000A301 E8CBC70000              	call malloc
 14334 0000A306 50                      	push rax
 14335 0000A307 BF00000000              	mov rdi, 8 * 0	; new rib
 14336 0000A30C E8C0C70000              	call malloc
 14337 0000A311 50                      	push rax
 14338 0000A312 BF08000000              	mov rdi, 8 * 1	; extended env
 14339 0000A317 E8B5C70000              	call malloc
 14340 0000A31C 488B7D10                	mov rdi, ENV
 14341 0000A320 BE00000000              	mov rsi, 0
 14342 0000A325 BA01000000              	mov rdx, 1
 14343                                  .L_lambda_simple_env_loop_004d:	; ext_env[i + 1] <-- env[i]
 14344 0000A32A 4883FE00                	cmp rsi, 0
 14345 0000A32E 7410                    	je .L_lambda_simple_env_end_004d
 14346 0000A330 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14347 0000A334 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14348 0000A338 48FFC6                  	inc rsi
 14349 0000A33B 48FFC2                  	inc rdx
 14350 0000A33E EBEA                    	jmp .L_lambda_simple_env_loop_004d
 14351                                  .L_lambda_simple_env_end_004d:
 14352 0000A340 5B                      	pop rbx
 14353 0000A341 BE00000000              	mov rsi, 0
 14354                                  .L_lambda_simple_params_loop_004d:	; copy params
 14355 0000A346 4883FE00                	cmp rsi, 0
 14356 0000A34A 740E                    	je .L_lambda_simple_params_end_004d
 14357 0000A34C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14358 0000A351 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14359 0000A355 48FFC6                  	inc rsi
 14360 0000A358 EBEC                    	jmp .L_lambda_simple_params_loop_004d
 14361                                  .L_lambda_simple_params_end_004d:
 14362 0000A35A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14363 0000A35D 4889C3                  	mov rbx, rax
 14364 0000A360 58                      	pop rax
 14365 0000A361 C60004                  	mov byte [rax], T_closure
 14366 0000A364 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14367 0000A368 48C74009[75A30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004d
 14368 0000A370 E98A000000              	jmp .L_lambda_simple_end_004d
 14369                                  .L_lambda_simple_code_004d:	; lambda-simple body
 14370 0000A375 48837C241000            	cmp qword [rsp + 8 * 2], 0
 14371 0000A37B 740B                    	je .L_lambda_simple_arity_check_ok_004d
 14372 0000A37D FF742410                	push qword [rsp + 8 * 2]
 14373 0000A381 6A00                    	push 0
 14374 0000A383 E902C70000              	jmp L_error_incorrect_arity_simple
 14375                                  .L_lambda_simple_arity_check_ok_004d:
 14376 0000A388 C8000000                	enter 0, 0
 14377                                  	; preparing a tail-call
 14378 0000A38C 48B8-                   	mov rax, L_constants + 2408
 14378 0000A38E [6809000000000000] 
 14379 0000A396 50                      	push rax
 14380 0000A397 48B8-                   	mov rax, L_constants + 2399
 14380 0000A399 [5F09000000000000] 
 14381 0000A3A1 50                      	push rax
 14382 0000A3A2 6A02                    	push 2	; arg count
 14383 0000A3A4 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 14384 0000A3AC 803805                  	cmp byte [rax], T_undefined
 14385 0000A3AF 0F84EFC50000            	je L_error_fvar_undefined
 14386 0000A3B5 803804                  	cmp byte [rax], T_closure
 14387 0000A3B8 0F856AC60000            	jne L_error_non_closure
 14388 0000A3BE FF7001                  	push SOB_CLOSURE_ENV(rax)
 14389 0000A3C1 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14390 0000A3C4 FF7500                  	push qword[rbp]
 14391 0000A3C7 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14392 0000A3CC 48895D10                	mov qword[rbp + 8*2],rbx
 14393 0000A3D0 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 14394 0000A3D8 BF00000000              	mov rdi,0
 14395 0000A3DD EB00                    	jmp .L_tc_recycle_frame_loop_008e
 14396                                  .L_tc_recycle_frame_loop_008e:
 14397 0000A3DF 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14398 0000A3E3 740F                    	je .L_tc_recycle_frame_done_008e
 14399 0000A3E5 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14400 0000A3EA 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14401 0000A3EF 48FFC7                  	inc rdi
 14402 0000A3F2 EBEB                    	jmp .L_tc_recycle_frame_loop_008e
 14403                                  .L_tc_recycle_frame_done_008e:
 14404 0000A3F4 4889EC                  	mov rsp, rbp	; point to last argument
 14405 0000A3F7 5D                      	pop rbp
 14406 0000A3F8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14407 0000A3FB C9                      	leave
 14408 0000A3FC C21000                  	ret AND_KILL_FRAME(0)
 14409                                  .L_lambda_simple_end_004d:	; new closure is in rax
 14410 0000A3FF 50                      	push rax
 14411 0000A400 6A01                    	push 1	; arg count
 14412 0000A402 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14413 0000A407 E8C5C60000              	call malloc
 14414 0000A40C 50                      	push rax
 14415 0000A40D BF00000000              	mov rdi, 8 * 0	; new rib
 14416 0000A412 E8BAC60000              	call malloc
 14417 0000A417 50                      	push rax
 14418 0000A418 BF08000000              	mov rdi, 8 * 1	; extended env
 14419 0000A41D E8AFC60000              	call malloc
 14420 0000A422 488B7D10                	mov rdi, ENV
 14421 0000A426 BE00000000              	mov rsi, 0
 14422 0000A42B BA01000000              	mov rdx, 1
 14423                                  .L_lambda_simple_env_loop_004e:	; ext_env[i + 1] <-- env[i]
 14424 0000A430 4883FE00                	cmp rsi, 0
 14425 0000A434 7410                    	je .L_lambda_simple_env_end_004e
 14426 0000A436 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14427 0000A43A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14428 0000A43E 48FFC6                  	inc rsi
 14429 0000A441 48FFC2                  	inc rdx
 14430 0000A444 EBEA                    	jmp .L_lambda_simple_env_loop_004e
 14431                                  .L_lambda_simple_env_end_004e:
 14432 0000A446 5B                      	pop rbx
 14433 0000A447 BE00000000              	mov rsi, 0
 14434                                  .L_lambda_simple_params_loop_004e:	; copy params
 14435 0000A44C 4883FE00                	cmp rsi, 0
 14436 0000A450 740E                    	je .L_lambda_simple_params_end_004e
 14437 0000A452 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14438 0000A457 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14439 0000A45B 48FFC6                  	inc rsi
 14440 0000A45E EBEC                    	jmp .L_lambda_simple_params_loop_004e
 14441                                  .L_lambda_simple_params_end_004e:
 14442 0000A460 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14443 0000A463 4889C3                  	mov rbx, rax
 14444 0000A466 58                      	pop rax
 14445 0000A467 C60004                  	mov byte [rax], T_closure
 14446 0000A46A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14447 0000A46E 48C74009[7BA40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004e
 14448 0000A476 E98C190000              	jmp .L_lambda_simple_end_004e
 14449                                  .L_lambda_simple_code_004e:	; lambda-simple body
 14450 0000A47B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 14451 0000A481 740B                    	je .L_lambda_simple_arity_check_ok_004e
 14452 0000A483 FF742410                	push qword [rsp + 8 * 2]
 14453 0000A487 6A01                    	push 1
 14454 0000A489 E9FCC50000              	jmp L_error_incorrect_arity_simple
 14455                                  .L_lambda_simple_arity_check_ok_004e:
 14456 0000A48E C8000000                	enter 0, 0
 14457                                  	; preparing a tail-call
 14458 0000A492 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14459 0000A497 E835C60000              	call malloc
 14460 0000A49C 50                      	push rax
 14461 0000A49D BF08000000              	mov rdi, 8 * 1	; new rib
 14462 0000A4A2 E82AC60000              	call malloc
 14463 0000A4A7 50                      	push rax
 14464 0000A4A8 BF10000000              	mov rdi, 8 * 2	; extended env
 14465 0000A4AD E81FC60000              	call malloc
 14466 0000A4B2 488B7D10                	mov rdi, ENV
 14467 0000A4B6 BE00000000              	mov rsi, 0
 14468 0000A4BB BA01000000              	mov rdx, 1
 14469                                  .L_lambda_simple_env_loop_004f:	; ext_env[i + 1] <-- env[i]
 14470 0000A4C0 4883FE01                	cmp rsi, 1
 14471 0000A4C4 7410                    	je .L_lambda_simple_env_end_004f
 14472 0000A4C6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14473 0000A4CA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14474 0000A4CE 48FFC6                  	inc rsi
 14475 0000A4D1 48FFC2                  	inc rdx
 14476 0000A4D4 EBEA                    	jmp .L_lambda_simple_env_loop_004f
 14477                                  .L_lambda_simple_env_end_004f:
 14478 0000A4D6 5B                      	pop rbx
 14479 0000A4D7 BE00000000              	mov rsi, 0
 14480                                  .L_lambda_simple_params_loop_004f:	; copy params
 14481 0000A4DC 4883FE01                	cmp rsi, 1
 14482 0000A4E0 740E                    	je .L_lambda_simple_params_end_004f
 14483 0000A4E2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14484 0000A4E7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14485 0000A4EB 48FFC6                  	inc rsi
 14486 0000A4EE EBEC                    	jmp .L_lambda_simple_params_loop_004f
 14487                                  .L_lambda_simple_params_end_004f:
 14488 0000A4F0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14489 0000A4F3 4889C3                  	mov rbx, rax
 14490 0000A4F6 58                      	pop rax
 14491 0000A4F7 C60004                  	mov byte [rax], T_closure
 14492 0000A4FA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14493 0000A4FE 48C74009[0BA50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_004f
 14494 0000A506 E999080000              	jmp .L_lambda_simple_end_004f
 14495                                  .L_lambda_simple_code_004f:	; lambda-simple body
 14496 0000A50B 48837C241003            	cmp qword [rsp + 8 * 2], 3
 14497 0000A511 740B                    	je .L_lambda_simple_arity_check_ok_004f
 14498 0000A513 FF742410                	push qword [rsp + 8 * 2]
 14499 0000A517 6A03                    	push 3
 14500 0000A519 E96CC50000              	jmp L_error_incorrect_arity_simple
 14501                                  .L_lambda_simple_arity_check_ok_004f:
 14502 0000A51E C8000000                	enter 0, 0
 14503 0000A522 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 14504 0000A527 E8A5C50000              	call malloc
 14505 0000A52C 50                      	push rax
 14506 0000A52D BF18000000              	mov rdi, 8 * 3	; new rib
 14507 0000A532 E89AC50000              	call malloc
 14508 0000A537 50                      	push rax
 14509 0000A538 BF18000000              	mov rdi, 8 * 3	; extended env
 14510 0000A53D E88FC50000              	call malloc
 14511 0000A542 488B7D10                	mov rdi, ENV
 14512 0000A546 BE00000000              	mov rsi, 0
 14513 0000A54B BA01000000              	mov rdx, 1
 14514                                  .L_lambda_simple_env_loop_0050:	; ext_env[i + 1] <-- env[i]
 14515 0000A550 4883FE02                	cmp rsi, 2
 14516 0000A554 7410                    	je .L_lambda_simple_env_end_0050
 14517 0000A556 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 14518 0000A55A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 14519 0000A55E 48FFC6                  	inc rsi
 14520 0000A561 48FFC2                  	inc rdx
 14521 0000A564 EBEA                    	jmp .L_lambda_simple_env_loop_0050
 14522                                  .L_lambda_simple_env_end_0050:
 14523 0000A566 5B                      	pop rbx
 14524 0000A567 BE00000000              	mov rsi, 0
 14525                                  .L_lambda_simple_params_loop_0050:	; copy params
 14526 0000A56C 4883FE03                	cmp rsi, 3
 14527 0000A570 740E                    	je .L_lambda_simple_params_end_0050
 14528 0000A572 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 14529 0000A577 488914F3                	mov qword [rbx + 8 * rsi], rdx
 14530 0000A57B 48FFC6                  	inc rsi
 14531 0000A57E EBEC                    	jmp .L_lambda_simple_params_loop_0050
 14532                                  .L_lambda_simple_params_end_0050:
 14533 0000A580 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 14534 0000A583 4889C3                  	mov rbx, rax
 14535 0000A586 58                      	pop rax
 14536 0000A587 C60004                  	mov byte [rax], T_closure
 14537 0000A58A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 14538 0000A58E 48C74009[9BA50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0050
 14539 0000A596 E905080000              	jmp .L_lambda_simple_end_0050
 14540                                  .L_lambda_simple_code_0050:	; lambda-simple body
 14541 0000A59B 48837C241002            	cmp qword [rsp + 8 * 2], 2
 14542 0000A5A1 740B                    	je .L_lambda_simple_arity_check_ok_0050
 14543 0000A5A3 FF742410                	push qword [rsp + 8 * 2]
 14544 0000A5A7 6A02                    	push 2
 14545 0000A5A9 E9DCC40000              	jmp L_error_incorrect_arity_simple
 14546                                  .L_lambda_simple_arity_check_ok_0050:
 14547 0000A5AE C8000000                	enter 0, 0
 14548                                  	; preparing a non-tail-call
 14549 0000A5B2 488B4520                	mov rax, PARAM(0)	; param a
 14550 0000A5B6 50                      	push rax
 14551 0000A5B7 6A01                    	push 1	; arg count
 14552 0000A5B9 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14553 0000A5C1 803805                  	cmp byte [rax], T_undefined
 14554 0000A5C4 0F84DAC30000            	je L_error_fvar_undefined
 14555 0000A5CA 803804                  	cmp byte [rax], T_closure
 14556 0000A5CD 0F8555C40000            	jne L_error_non_closure
 14557 0000A5D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14558 0000A5D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14559 0000A5D9 483D[02000000]          	cmp rax, sob_boolean_false
 14560 0000A5DF 0F8455020000            	je .L_if_else_0057
 14561                                  	; preparing a non-tail-call
 14562 0000A5E5 488B4528                	mov rax, PARAM(1)	; param b
 14563 0000A5E9 50                      	push rax
 14564 0000A5EA 6A01                    	push 1	; arg count
 14565 0000A5EC 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14566 0000A5F4 803805                  	cmp byte [rax], T_undefined
 14567 0000A5F7 0F84A7C30000            	je L_error_fvar_undefined
 14568 0000A5FD 803804                  	cmp byte [rax], T_closure
 14569 0000A600 0F8522C40000            	jne L_error_non_closure
 14570 0000A606 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14571 0000A609 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14572 0000A60C 483D[02000000]          	cmp rax, sob_boolean_false
 14573 0000A612 7461                    	je .L_if_else_004e
 14574                                  	; preparing a tail-call
 14575 0000A614 488B4528                	mov rax, PARAM(1)	; param b
 14576 0000A618 50                      	push rax
 14577 0000A619 488B4520                	mov rax, PARAM(0)	; param a
 14578 0000A61D 50                      	push rax
 14579 0000A61E 6A02                    	push 2	; arg count
 14580 0000A620 488B4510                	mov rax, ENV
 14581 0000A624 488B00                  	mov rax, qword [rax + 8 * 0]
 14582 0000A627 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator-zz
 14583 0000A62A 803804                  	cmp byte [rax], T_closure
 14584 0000A62D 0F85F5C30000            	jne L_error_non_closure
 14585 0000A633 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14586 0000A636 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14587 0000A639 FF7500                  	push qword[rbp]
 14588 0000A63C 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14589 0000A641 48895D10                	mov qword[rbp + 8*2],rbx
 14590 0000A645 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 14591 0000A64D BF00000000              	mov rdi,0
 14592 0000A652 EB00                    	jmp .L_tc_recycle_frame_loop_008f
 14593                                  .L_tc_recycle_frame_loop_008f:
 14594 0000A654 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14595 0000A658 740F                    	je .L_tc_recycle_frame_done_008f
 14596 0000A65A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14597 0000A65F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14598 0000A664 48FFC7                  	inc rdi
 14599 0000A667 EBEB                    	jmp .L_tc_recycle_frame_loop_008f
 14600                                  .L_tc_recycle_frame_done_008f:
 14601 0000A669 4889EC                  	mov rsp, rbp	; point to last argument
 14602 0000A66C 5D                      	pop rbp
 14603 0000A66D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14604 0000A670 E9C0010000              	jmp .L_if_end_004e
 14605                                  .L_if_else_004e:
 14606                                  	; preparing a non-tail-call
 14607 0000A675 488B4528                	mov rax, PARAM(1)	; param b
 14608 0000A679 50                      	push rax
 14609 0000A67A 6A01                    	push 1	; arg count
 14610 0000A67C 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14611 0000A684 803805                  	cmp byte [rax], T_undefined
 14612 0000A687 0F8417C30000            	je L_error_fvar_undefined
 14613 0000A68D 803804                  	cmp byte [rax], T_closure
 14614 0000A690 0F8592C30000            	jne L_error_non_closure
 14615 0000A696 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14616 0000A699 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14617 0000A69C 483D[02000000]          	cmp rax, sob_boolean_false
 14618 0000A6A2 0F8485000000            	je .L_if_else_004d
 14619                                  	; preparing a tail-call
 14620 0000A6A8 488B4528                	mov rax, PARAM(1)	; param b
 14621 0000A6AC 50                      	push rax
 14622                                  	; preparing a non-tail-call
 14623 0000A6AD 488B4520                	mov rax, PARAM(0)	; param a
 14624 0000A6B1 50                      	push rax
 14625 0000A6B2 6A01                    	push 1	; arg count
 14626 0000A6B4 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14627 0000A6BC 803805                  	cmp byte [rax], T_undefined
 14628 0000A6BF 0F84DFC20000            	je L_error_fvar_undefined
 14629 0000A6C5 803804                  	cmp byte [rax], T_closure
 14630 0000A6C8 0F855AC30000            	jne L_error_non_closure
 14631 0000A6CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 14632 0000A6D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14633 0000A6D4 50                      	push rax
 14634 0000A6D5 6A02                    	push 2	; arg count
 14635 0000A6D7 488B4510                	mov rax, ENV
 14636 0000A6DB 488B00                  	mov rax, qword [rax + 8 * 0]
 14637 0000A6DE 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14638 0000A6E2 803804                  	cmp byte [rax], T_closure
 14639 0000A6E5 0F853DC30000            	jne L_error_non_closure
 14640 0000A6EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 14641 0000A6EE FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14642 0000A6F1 FF7500                  	push qword[rbp]
 14643 0000A6F4 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14644 0000A6F9 48895D10                	mov qword[rbp + 8*2],rbx
 14645 0000A6FD 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 14646 0000A705 BF00000000              	mov rdi,0
 14647 0000A70A EB00                    	jmp .L_tc_recycle_frame_loop_0090
 14648                                  .L_tc_recycle_frame_loop_0090:
 14649 0000A70C 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14650 0000A710 740F                    	je .L_tc_recycle_frame_done_0090
 14651 0000A712 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14652 0000A717 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14653 0000A71C 48FFC7                  	inc rdi
 14654 0000A71F EBEB                    	jmp .L_tc_recycle_frame_loop_0090
 14655                                  .L_tc_recycle_frame_done_0090:
 14656 0000A721 4889EC                  	mov rsp, rbp	; point to last argument
 14657 0000A724 5D                      	pop rbp
 14658 0000A725 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14659 0000A728 E908010000              	jmp .L_if_end_004d
 14660                                  .L_if_else_004d:
 14661                                  	; preparing a non-tail-call
 14662 0000A72D 488B4528                	mov rax, PARAM(1)	; param b
 14663 0000A731 50                      	push rax
 14664 0000A732 6A01                    	push 1	; arg count
 14665 0000A734 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14666 0000A73C 803805                  	cmp byte [rax], T_undefined
 14667 0000A73F 0F845FC20000            	je L_error_fvar_undefined
 14668 0000A745 803804                  	cmp byte [rax], T_closure
 14669 0000A748 0F85DAC20000            	jne L_error_non_closure
 14670 0000A74E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14671 0000A751 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14672 0000A754 483D[02000000]          	cmp rax, sob_boolean_false
 14673 0000A75A 0F8482000000            	je .L_if_else_004c
 14674                                  	; preparing a tail-call
 14675 0000A760 488B4528                	mov rax, PARAM(1)	; param b
 14676 0000A764 50                      	push rax
 14677                                  	; preparing a non-tail-call
 14678 0000A765 488B4520                	mov rax, PARAM(0)	; param a
 14679 0000A769 50                      	push rax
 14680 0000A76A 6A01                    	push 1	; arg count
 14681 0000A76C 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 14682 0000A774 803805                  	cmp byte [rax], T_undefined
 14683 0000A777 0F8427C20000            	je L_error_fvar_undefined
 14684 0000A77D 803804                  	cmp byte [rax], T_closure
 14685 0000A780 0F85A2C20000            	jne L_error_non_closure
 14686 0000A786 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14687 0000A789 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14688 0000A78C 50                      	push rax
 14689 0000A78D 6A02                    	push 2	; arg count
 14690 0000A78F 488B4510                	mov rax, ENV
 14691 0000A793 488B00                  	mov rax, qword [rax + 8 * 0]
 14692 0000A796 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14693 0000A79A 803804                  	cmp byte [rax], T_closure
 14694 0000A79D 0F8585C20000            	jne L_error_non_closure
 14695 0000A7A3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14696 0000A7A6 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14697 0000A7A9 FF7500                  	push qword[rbp]
 14698 0000A7AC 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14699 0000A7B1 48895D10                	mov qword[rbp + 8*2],rbx
 14700 0000A7B5 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 14701 0000A7BD BF00000000              	mov rdi,0
 14702 0000A7C2 EB00                    	jmp .L_tc_recycle_frame_loop_0091
 14703                                  .L_tc_recycle_frame_loop_0091:
 14704 0000A7C4 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14705 0000A7C8 740F                    	je .L_tc_recycle_frame_done_0091
 14706 0000A7CA 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14707 0000A7CF 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14708 0000A7D4 48FFC7                  	inc rdi
 14709 0000A7D7 EBEB                    	jmp .L_tc_recycle_frame_loop_0091
 14710                                  .L_tc_recycle_frame_done_0091:
 14711 0000A7D9 4889EC                  	mov rsp, rbp	; point to last argument
 14712 0000A7DC 5D                      	pop rbp
 14713 0000A7DD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14714 0000A7E0 EB53                    	jmp .L_if_end_004c
 14715                                  .L_if_else_004c:
 14716                                  	; preparing a tail-call
 14717 0000A7E2 6A00                    	push 0	; arg count
 14718 0000A7E4 488B4510                	mov rax, ENV
 14719 0000A7E8 488B4008                	mov rax, qword [rax + 8 * 1]
 14720 0000A7EC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14721 0000A7EF 803804                  	cmp byte [rax], T_closure
 14722 0000A7F2 0F8530C20000            	jne L_error_non_closure
 14723 0000A7F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14724 0000A7FB FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14725 0000A7FE FF7500                  	push qword[rbp]
 14726 0000A801 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14727 0000A806 48895D10                	mov qword[rbp + 8*2],rbx
 14728 0000A80A 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 14729 0000A812 BF00000000              	mov rdi,0
 14730 0000A817 EB00                    	jmp .L_tc_recycle_frame_loop_0092
 14731                                  .L_tc_recycle_frame_loop_0092:
 14732 0000A819 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14733 0000A81D 740F                    	je .L_tc_recycle_frame_done_0092
 14734 0000A81F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14735 0000A824 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14736 0000A829 48FFC7                  	inc rdi
 14737 0000A82C EBEB                    	jmp .L_tc_recycle_frame_loop_0092
 14738                                  .L_tc_recycle_frame_done_0092:
 14739 0000A82E 4889EC                  	mov rsp, rbp	; point to last argument
 14740 0000A831 5D                      	pop rbp
 14741 0000A832 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14742                                  .L_if_end_004c:
 14743                                  .L_if_end_004d:
 14744                                  .L_if_end_004e:
 14745 0000A835 E962050000              	jmp .L_if_end_0057
 14746                                  .L_if_else_0057:
 14747                                  	; preparing a non-tail-call
 14748 0000A83A 488B4520                	mov rax, PARAM(0)	; param a
 14749 0000A83E 50                      	push rax
 14750 0000A83F 6A01                    	push 1	; arg count
 14751 0000A841 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14752 0000A849 803805                  	cmp byte [rax], T_undefined
 14753 0000A84C 0F8452C10000            	je L_error_fvar_undefined
 14754 0000A852 803804                  	cmp byte [rax], T_closure
 14755 0000A855 0F85CDC10000            	jne L_error_non_closure
 14756 0000A85B FF7001                  	push SOB_CLOSURE_ENV(rax)
 14757 0000A85E FF5009                  	call SOB_CLOSURE_CODE(rax)
 14758 0000A861 483D[02000000]          	cmp rax, sob_boolean_false
 14759 0000A867 0F8456020000            	je .L_if_else_0056
 14760                                  	; preparing a non-tail-call
 14761 0000A86D 488B4528                	mov rax, PARAM(1)	; param b
 14762 0000A871 50                      	push rax
 14763 0000A872 6A01                    	push 1	; arg count
 14764 0000A874 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14765 0000A87C 803805                  	cmp byte [rax], T_undefined
 14766 0000A87F 0F841FC10000            	je L_error_fvar_undefined
 14767 0000A885 803804                  	cmp byte [rax], T_closure
 14768 0000A888 0F859AC10000            	jne L_error_non_closure
 14769 0000A88E FF7001                  	push SOB_CLOSURE_ENV(rax)
 14770 0000A891 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14771 0000A894 483D[02000000]          	cmp rax, sob_boolean_false
 14772 0000A89A 0F8485000000            	je .L_if_else_0051
 14773                                  	; preparing a tail-call
 14774                                  	; preparing a non-tail-call
 14775 0000A8A0 488B4528                	mov rax, PARAM(1)	; param b
 14776 0000A8A4 50                      	push rax
 14777 0000A8A5 6A01                    	push 1	; arg count
 14778 0000A8A7 488B0425[B20F0000]      	mov rax, qword [free_var_29]	; free var __integer-to-fraction
 14779 0000A8AF 803805                  	cmp byte [rax], T_undefined
 14780 0000A8B2 0F84ECC00000            	je L_error_fvar_undefined
 14781 0000A8B8 803804                  	cmp byte [rax], T_closure
 14782 0000A8BB 0F8567C10000            	jne L_error_non_closure
 14783 0000A8C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14784 0000A8C4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14785 0000A8C7 50                      	push rax
 14786 0000A8C8 488B4520                	mov rax, PARAM(0)	; param a
 14787 0000A8CC 50                      	push rax
 14788 0000A8CD 6A02                    	push 2	; arg count
 14789 0000A8CF 488B4510                	mov rax, ENV
 14790 0000A8D3 488B00                  	mov rax, qword [rax + 8 * 0]
 14791 0000A8D6 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14792 0000A8DA 803804                  	cmp byte [rax], T_closure
 14793 0000A8DD 0F8545C10000            	jne L_error_non_closure
 14794 0000A8E3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14795 0000A8E6 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14796 0000A8E9 FF7500                  	push qword[rbp]
 14797 0000A8EC 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14798 0000A8F1 48895D10                	mov qword[rbp + 8*2],rbx
 14799 0000A8F5 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 14800 0000A8FD BF00000000              	mov rdi,0
 14801 0000A902 EB00                    	jmp .L_tc_recycle_frame_loop_0093
 14802                                  .L_tc_recycle_frame_loop_0093:
 14803 0000A904 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14804 0000A908 740F                    	je .L_tc_recycle_frame_done_0093
 14805 0000A90A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14806 0000A90F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14807 0000A914 48FFC7                  	inc rdi
 14808 0000A917 EBEB                    	jmp .L_tc_recycle_frame_loop_0093
 14809                                  .L_tc_recycle_frame_done_0093:
 14810 0000A919 4889EC                  	mov rsp, rbp	; point to last argument
 14811 0000A91C 5D                      	pop rbp
 14812 0000A91D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14813 0000A920 E999010000              	jmp .L_if_end_0051
 14814                                  .L_if_else_0051:
 14815                                  	; preparing a non-tail-call
 14816 0000A925 488B4528                	mov rax, PARAM(1)	; param b
 14817 0000A929 50                      	push rax
 14818 0000A92A 6A01                    	push 1	; arg count
 14819 0000A92C 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 14820 0000A934 803805                  	cmp byte [rax], T_undefined
 14821 0000A937 0F8467C00000            	je L_error_fvar_undefined
 14822 0000A93D 803804                  	cmp byte [rax], T_closure
 14823 0000A940 0F85E2C00000            	jne L_error_non_closure
 14824 0000A946 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14825 0000A949 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14826 0000A94C 483D[02000000]          	cmp rax, sob_boolean_false
 14827 0000A952 7462                    	je .L_if_else_0050
 14828                                  	; preparing a tail-call
 14829 0000A954 488B4528                	mov rax, PARAM(1)	; param b
 14830 0000A958 50                      	push rax
 14831 0000A959 488B4520                	mov rax, PARAM(0)	; param a
 14832 0000A95D 50                      	push rax
 14833 0000A95E 6A02                    	push 2	; arg count
 14834 0000A960 488B4510                	mov rax, ENV
 14835 0000A964 488B00                  	mov rax, qword [rax + 8 * 0]
 14836 0000A967 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var comparator-qq
 14837 0000A96B 803804                  	cmp byte [rax], T_closure
 14838 0000A96E 0F85B4C00000            	jne L_error_non_closure
 14839 0000A974 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14840 0000A977 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14841 0000A97A FF7500                  	push qword[rbp]
 14842 0000A97D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14843 0000A982 48895D10                	mov qword[rbp + 8*2],rbx
 14844 0000A986 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 14845 0000A98E BF00000000              	mov rdi,0
 14846 0000A993 EB00                    	jmp .L_tc_recycle_frame_loop_0094
 14847                                  .L_tc_recycle_frame_loop_0094:
 14848 0000A995 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14849 0000A999 740F                    	je .L_tc_recycle_frame_done_0094
 14850 0000A99B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14851 0000A9A0 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14852 0000A9A5 48FFC7                  	inc rdi
 14853 0000A9A8 EBEB                    	jmp .L_tc_recycle_frame_loop_0094
 14854                                  .L_tc_recycle_frame_done_0094:
 14855 0000A9AA 4889EC                  	mov rsp, rbp	; point to last argument
 14856 0000A9AD 5D                      	pop rbp
 14857 0000A9AE FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14858 0000A9B1 E908010000              	jmp .L_if_end_0050
 14859                                  .L_if_else_0050:
 14860                                  	; preparing a non-tail-call
 14861 0000A9B6 488B4528                	mov rax, PARAM(1)	; param b
 14862 0000A9BA 50                      	push rax
 14863 0000A9BB 6A01                    	push 1	; arg count
 14864 0000A9BD 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14865 0000A9C5 803805                  	cmp byte [rax], T_undefined
 14866 0000A9C8 0F84D6BF0000            	je L_error_fvar_undefined
 14867 0000A9CE 803804                  	cmp byte [rax], T_closure
 14868 0000A9D1 0F8551C00000            	jne L_error_non_closure
 14869 0000A9D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14870 0000A9DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 14871 0000A9DD 483D[02000000]          	cmp rax, sob_boolean_false
 14872 0000A9E3 0F8482000000            	je .L_if_else_004f
 14873                                  	; preparing a tail-call
 14874 0000A9E9 488B4528                	mov rax, PARAM(1)	; param b
 14875 0000A9ED 50                      	push rax
 14876                                  	; preparing a non-tail-call
 14877 0000A9EE 488B4520                	mov rax, PARAM(0)	; param a
 14878 0000A9F2 50                      	push rax
 14879 0000A9F3 6A01                    	push 1	; arg count
 14880 0000A9F5 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 14881 0000A9FD 803805                  	cmp byte [rax], T_undefined
 14882 0000AA00 0F849EBF0000            	je L_error_fvar_undefined
 14883 0000AA06 803804                  	cmp byte [rax], T_closure
 14884 0000AA09 0F8519C00000            	jne L_error_non_closure
 14885 0000AA0F FF7001                  	push SOB_CLOSURE_ENV(rax)
 14886 0000AA12 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14887 0000AA15 50                      	push rax
 14888 0000AA16 6A02                    	push 2	; arg count
 14889 0000AA18 488B4510                	mov rax, ENV
 14890 0000AA1C 488B00                  	mov rax, qword [rax + 8 * 0]
 14891 0000AA1F 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14892 0000AA23 803804                  	cmp byte [rax], T_closure
 14893 0000AA26 0F85FCBF0000            	jne L_error_non_closure
 14894 0000AA2C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14895 0000AA2F FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14896 0000AA32 FF7500                  	push qword[rbp]
 14897 0000AA35 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14898 0000AA3A 48895D10                	mov qword[rbp + 8*2],rbx
 14899 0000AA3E 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 14900 0000AA46 BF00000000              	mov rdi,0
 14901 0000AA4B EB00                    	jmp .L_tc_recycle_frame_loop_0095
 14902                                  .L_tc_recycle_frame_loop_0095:
 14903 0000AA4D 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14904 0000AA51 740F                    	je .L_tc_recycle_frame_done_0095
 14905 0000AA53 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14906 0000AA58 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14907 0000AA5D 48FFC7                  	inc rdi
 14908 0000AA60 EBEB                    	jmp .L_tc_recycle_frame_loop_0095
 14909                                  .L_tc_recycle_frame_done_0095:
 14910 0000AA62 4889EC                  	mov rsp, rbp	; point to last argument
 14911 0000AA65 5D                      	pop rbp
 14912 0000AA66 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14913 0000AA69 EB53                    	jmp .L_if_end_004f
 14914                                  .L_if_else_004f:
 14915                                  	; preparing a tail-call
 14916 0000AA6B 6A00                    	push 0	; arg count
 14917 0000AA6D 488B4510                	mov rax, ENV
 14918 0000AA71 488B4008                	mov rax, qword [rax + 8 * 1]
 14919 0000AA75 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 14920 0000AA78 803804                  	cmp byte [rax], T_closure
 14921 0000AA7B 0F85A7BF0000            	jne L_error_non_closure
 14922 0000AA81 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14923 0000AA84 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14924 0000AA87 FF7500                  	push qword[rbp]
 14925 0000AA8A 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14926 0000AA8F 48895D10                	mov qword[rbp + 8*2],rbx
 14927 0000AA93 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 14928 0000AA9B BF00000000              	mov rdi,0
 14929 0000AAA0 EB00                    	jmp .L_tc_recycle_frame_loop_0096
 14930                                  .L_tc_recycle_frame_loop_0096:
 14931 0000AAA2 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 14932 0000AAA6 740F                    	je .L_tc_recycle_frame_done_0096
 14933 0000AAA8 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 14934 0000AAAD 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 14935 0000AAB2 48FFC7                  	inc rdi
 14936 0000AAB5 EBEB                    	jmp .L_tc_recycle_frame_loop_0096
 14937                                  .L_tc_recycle_frame_done_0096:
 14938 0000AAB7 4889EC                  	mov rsp, rbp	; point to last argument
 14939 0000AABA 5D                      	pop rbp
 14940 0000AABB FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 14941                                  .L_if_end_004f:
 14942                                  .L_if_end_0050:
 14943                                  .L_if_end_0051:
 14944 0000AABE E9D9020000              	jmp .L_if_end_0056
 14945                                  .L_if_else_0056:
 14946                                  	; preparing a non-tail-call
 14947 0000AAC3 488B4520                	mov rax, PARAM(0)	; param a
 14948 0000AAC7 50                      	push rax
 14949 0000AAC8 6A01                    	push 1	; arg count
 14950 0000AACA 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 14951 0000AAD2 803805                  	cmp byte [rax], T_undefined
 14952 0000AAD5 0F84C9BE0000            	je L_error_fvar_undefined
 14953 0000AADB 803804                  	cmp byte [rax], T_closure
 14954 0000AADE 0F8544BF0000            	jne L_error_non_closure
 14955 0000AAE4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14956 0000AAE7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 14957 0000AAEA 483D[02000000]          	cmp rax, sob_boolean_false
 14958 0000AAF0 0F8453020000            	je .L_if_else_0055
 14959                                  	; preparing a non-tail-call
 14960 0000AAF6 488B4528                	mov rax, PARAM(1)	; param b
 14961 0000AAFA 50                      	push rax
 14962 0000AAFB 6A01                    	push 1	; arg count
 14963 0000AAFD 488B0425[D0130000]      	mov rax, qword [free_var_91]	; free var integer?
 14964 0000AB05 803805                  	cmp byte [rax], T_undefined
 14965 0000AB08 0F8496BE0000            	je L_error_fvar_undefined
 14966 0000AB0E 803804                  	cmp byte [rax], T_closure
 14967 0000AB11 0F8511BF0000            	jne L_error_non_closure
 14968 0000AB17 FF7001                  	push SOB_CLOSURE_ENV(rax)
 14969 0000AB1A FF5009                  	call SOB_CLOSURE_CODE(rax)
 14970 0000AB1D 483D[02000000]          	cmp rax, sob_boolean_false
 14971 0000AB23 0F8485000000            	je .L_if_else_0054
 14972                                  	; preparing a tail-call
 14973                                  	; preparing a non-tail-call
 14974 0000AB29 488B4528                	mov rax, PARAM(1)	; param b
 14975 0000AB2D 50                      	push rax
 14976 0000AB2E 6A01                    	push 1	; arg count
 14977 0000AB30 488B0425[BF130000]      	mov rax, qword [free_var_90]	; free var integer->real
 14978 0000AB38 803805                  	cmp byte [rax], T_undefined
 14979 0000AB3B 0F8463BE0000            	je L_error_fvar_undefined
 14980 0000AB41 803804                  	cmp byte [rax], T_closure
 14981 0000AB44 0F85DEBE0000            	jne L_error_non_closure
 14982 0000AB4A FF7001                  	push SOB_CLOSURE_ENV(rax)
 14983 0000AB4D FF5009                  	call SOB_CLOSURE_CODE(rax)
 14984 0000AB50 50                      	push rax
 14985 0000AB51 488B4520                	mov rax, PARAM(0)	; param a
 14986 0000AB55 50                      	push rax
 14987 0000AB56 6A02                    	push 2	; arg count
 14988 0000AB58 488B4510                	mov rax, ENV
 14989 0000AB5C 488B00                  	mov rax, qword [rax + 8 * 0]
 14990 0000AB5F 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 14991 0000AB63 803804                  	cmp byte [rax], T_closure
 14992 0000AB66 0F85BCBE0000            	jne L_error_non_closure
 14993 0000AB6C FF7001                  	push SOB_CLOSURE_ENV(rax)
 14994 0000AB6F FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 14995 0000AB72 FF7500                  	push qword[rbp]
 14996 0000AB75 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 14997 0000AB7A 48895D10                	mov qword[rbp + 8*2],rbx
 14998 0000AB7E 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 14999 0000AB86 BF00000000              	mov rdi,0
 15000 0000AB8B EB00                    	jmp .L_tc_recycle_frame_loop_0097
 15001                                  .L_tc_recycle_frame_loop_0097:
 15002 0000AB8D 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 15003 0000AB91 740F                    	je .L_tc_recycle_frame_done_0097
 15004 0000AB93 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 15005 0000AB98 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 15006 0000AB9D 48FFC7                  	inc rdi
 15007 0000ABA0 EBEB                    	jmp .L_tc_recycle_frame_loop_0097
 15008                                  .L_tc_recycle_frame_done_0097:
 15009 0000ABA2 4889EC                  	mov rsp, rbp	; point to last argument
 15010 0000ABA5 5D                      	pop rbp
 15011 0000ABA6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15012 0000ABA9 E999010000              	jmp .L_if_end_0054
 15013                                  .L_if_else_0054:
 15014                                  	; preparing a non-tail-call
 15015 0000ABAE 488B4528                	mov rax, PARAM(1)	; param b
 15016 0000ABB2 50                      	push rax
 15017 0000ABB3 6A01                    	push 1	; arg count
 15018 0000ABB5 488B0425[9D130000]      	mov rax, qword [free_var_88]	; free var fraction?
 15019 0000ABBD 803805                  	cmp byte [rax], T_undefined
 15020 0000ABC0 0F84DEBD0000            	je L_error_fvar_undefined
 15021 0000ABC6 803804                  	cmp byte [rax], T_closure
 15022 0000ABC9 0F8559BE0000            	jne L_error_non_closure
 15023 0000ABCF FF7001                  	push SOB_CLOSURE_ENV(rax)
 15024 0000ABD2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15025 0000ABD5 483D[02000000]          	cmp rax, sob_boolean_false
 15026 0000ABDB 0F8485000000            	je .L_if_else_0053
 15027                                  	; preparing a tail-call
 15028                                  	; preparing a non-tail-call
 15029 0000ABE1 488B4528                	mov rax, PARAM(1)	; param b
 15030 0000ABE5 50                      	push rax
 15031 0000ABE6 6A01                    	push 1	; arg count
 15032 0000ABE8 488B0425[8C130000]      	mov rax, qword [free_var_87]	; free var fraction->real
 15033 0000ABF0 803805                  	cmp byte [rax], T_undefined
 15034 0000ABF3 0F84ABBD0000            	je L_error_fvar_undefined
 15035 0000ABF9 803804                  	cmp byte [rax], T_closure
 15036 0000ABFC 0F8526BE0000            	jne L_error_non_closure
 15037 0000AC02 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15038 0000AC05 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15039 0000AC08 50                      	push rax
 15040 0000AC09 488B4520                	mov rax, PARAM(0)	; param a
 15041 0000AC0D 50                      	push rax
 15042 0000AC0E 6A02                    	push 2	; arg count
 15043 0000AC10 488B4510                	mov rax, ENV
 15044 0000AC14 488B00                  	mov rax, qword [rax + 8 * 0]
 15045 0000AC17 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 15046 0000AC1B 803804                  	cmp byte [rax], T_closure
 15047 0000AC1E 0F8504BE0000            	jne L_error_non_closure
 15048 0000AC24 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15049 0000AC27 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 15050 0000AC2A FF7500                  	push qword[rbp]
 15051 0000AC2D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 15052 0000AC32 48895D10                	mov qword[rbp + 8*2],rbx
 15053 0000AC36 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 15054 0000AC3E BF00000000              	mov rdi,0
 15055 0000AC43 EB00                    	jmp .L_tc_recycle_frame_loop_0098
 15056                                  .L_tc_recycle_frame_loop_0098:
 15057 0000AC45 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 15058 0000AC49 740F                    	je .L_tc_recycle_frame_done_0098
 15059 0000AC4B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 15060 0000AC50 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 15061 0000AC55 48FFC7                  	inc rdi
 15062 0000AC58 EBEB                    	jmp .L_tc_recycle_frame_loop_0098
 15063                                  .L_tc_recycle_frame_done_0098:
 15064 0000AC5A 4889EC                  	mov rsp, rbp	; point to last argument
 15065 0000AC5D 5D                      	pop rbp
 15066 0000AC5E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15067 0000AC61 E9E1000000              	jmp .L_if_end_0053
 15068                                  .L_if_else_0053:
 15069                                  	; preparing a non-tail-call
 15070 0000AC66 488B4528                	mov rax, PARAM(1)	; param b
 15071 0000AC6A 50                      	push rax
 15072 0000AC6B 6A01                    	push 1	; arg count
 15073 0000AC6D 488B0425[79150000]      	mov rax, qword [free_var_116]	; free var real?
 15074 0000AC75 803805                  	cmp byte [rax], T_undefined
 15075 0000AC78 0F8426BD0000            	je L_error_fvar_undefined
 15076 0000AC7E 803804                  	cmp byte [rax], T_closure
 15077 0000AC81 0F85A1BD0000            	jne L_error_non_closure
 15078 0000AC87 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15079 0000AC8A FF5009                  	call SOB_CLOSURE_CODE(rax)
 15080 0000AC8D 483D[02000000]          	cmp rax, sob_boolean_false
 15081 0000AC93 745F                    	je .L_if_else_0052
 15082                                  	; preparing a tail-call
 15083 0000AC95 488B4528                	mov rax, PARAM(1)	; param b
 15084 0000AC99 50                      	push rax
 15085 0000AC9A 488B4520                	mov rax, PARAM(0)	; param a
 15086 0000AC9E 50                      	push rax
 15087 0000AC9F 6A02                    	push 2	; arg count
 15088 0000ACA1 488B4510                	mov rax, ENV
 15089 0000ACA5 488B00                  	mov rax, qword [rax + 8 * 0]
 15090 0000ACA8 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var comparator-rr
 15091 0000ACAC 803804                  	cmp byte [rax], T_closure
 15092 0000ACAF 0F8573BD0000            	jne L_error_non_closure
 15093 0000ACB5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15094 0000ACB8 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 15095 0000ACBB FF7500                  	push qword[rbp]
 15096 0000ACBE 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 15097 0000ACC3 48895D10                	mov qword[rbp + 8*2],rbx
 15098 0000ACC7 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 15099 0000ACCF BF00000000              	mov rdi,0
 15100 0000ACD4 EB00                    	jmp .L_tc_recycle_frame_loop_0099
 15101                                  .L_tc_recycle_frame_loop_0099:
 15102 0000ACD6 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 15103 0000ACDA 740F                    	je .L_tc_recycle_frame_done_0099
 15104 0000ACDC 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 15105 0000ACE1 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 15106 0000ACE6 48FFC7                  	inc rdi
 15107 0000ACE9 EBEB                    	jmp .L_tc_recycle_frame_loop_0099
 15108                                  .L_tc_recycle_frame_done_0099:
 15109 0000ACEB 4889EC                  	mov rsp, rbp	; point to last argument
 15110 0000ACEE 5D                      	pop rbp
 15111 0000ACEF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15112 0000ACF2 EB53                    	jmp .L_if_end_0052
 15113                                  .L_if_else_0052:
 15114                                  	; preparing a tail-call
 15115 0000ACF4 6A00                    	push 0	; arg count
 15116 0000ACF6 488B4510                	mov rax, ENV
 15117 0000ACFA 488B4008                	mov rax, qword [rax + 8 * 1]
 15118 0000ACFE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 15119 0000AD01 803804                  	cmp byte [rax], T_closure
 15120 0000AD04 0F851EBD0000            	jne L_error_non_closure
 15121 0000AD0A FF7001                  	push SOB_CLOSURE_ENV(rax)
 15122 0000AD0D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 15123 0000AD10 FF7500                  	push qword[rbp]
 15124 0000AD13 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 15125 0000AD18 48895D10                	mov qword[rbp + 8*2],rbx
 15126 0000AD1C 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 15127 0000AD24 BF00000000              	mov rdi,0
 15128 0000AD29 EB00                    	jmp .L_tc_recycle_frame_loop_009a
 15129                                  .L_tc_recycle_frame_loop_009a:
 15130 0000AD2B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 15131 0000AD2F 740F                    	je .L_tc_recycle_frame_done_009a
 15132 0000AD31 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 15133 0000AD36 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 15134 0000AD3B 48FFC7                  	inc rdi
 15135 0000AD3E EBEB                    	jmp .L_tc_recycle_frame_loop_009a
 15136                                  .L_tc_recycle_frame_done_009a:
 15137 0000AD40 4889EC                  	mov rsp, rbp	; point to last argument
 15138 0000AD43 5D                      	pop rbp
 15139 0000AD44 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15140                                  .L_if_end_0052:
 15141                                  .L_if_end_0053:
 15142                                  .L_if_end_0054:
 15143 0000AD47 EB53                    	jmp .L_if_end_0055
 15144                                  .L_if_else_0055:
 15145                                  	; preparing a tail-call
 15146 0000AD49 6A00                    	push 0	; arg count
 15147 0000AD4B 488B4510                	mov rax, ENV
 15148 0000AD4F 488B4008                	mov rax, qword [rax + 8 * 1]
 15149 0000AD53 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var exit
 15150 0000AD56 803804                  	cmp byte [rax], T_closure
 15151 0000AD59 0F85C9BC0000            	jne L_error_non_closure
 15152 0000AD5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 15153 0000AD62 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 15154 0000AD65 FF7500                  	push qword[rbp]
 15155 0000AD68 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 15156 0000AD6D 48895D10                	mov qword[rbp + 8*2],rbx
 15157 0000AD71 48C7451800000000        	mov qword[rbp + 8*3], 0	 ;n turns to m
 15158 0000AD79 BF00000000              	mov rdi,0
 15159 0000AD7E EB00                    	jmp .L_tc_recycle_frame_loop_009b
 15160                                  .L_tc_recycle_frame_loop_009b:
 15161 0000AD80 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 15162 0000AD84 740F                    	je .L_tc_recycle_frame_done_009b
 15163 0000AD86 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 15164 0000AD8B 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 15165 0000AD90 48FFC7                  	inc rdi
 15166 0000AD93 EBEB                    	jmp .L_tc_recycle_frame_loop_009b
 15167                                  .L_tc_recycle_frame_done_009b:
 15168 0000AD95 4889EC                  	mov rsp, rbp	; point to last argument
 15169 0000AD98 5D                      	pop rbp
 15170 0000AD99 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15171                                  .L_if_end_0055:
 15172                                  .L_if_end_0056:
 15173                                  .L_if_end_0057:
 15174 0000AD9C C9                      	leave
 15175 0000AD9D C22000                  	ret AND_KILL_FRAME(2)
 15176                                  .L_lambda_simple_end_0050:	; new closure is in rax
 15177 0000ADA0 C9                      	leave
 15178 0000ADA1 C22800                  	ret AND_KILL_FRAME(3)
 15179                                  .L_lambda_simple_end_004f:	; new closure is in rax
 15180 0000ADA4 50                      	push rax
 15181 0000ADA5 6A01                    	push 1	; arg count
 15182 0000ADA7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15183 0000ADAC E820BD0000              	call malloc
 15184 0000ADB1 50                      	push rax
 15185 0000ADB2 BF08000000              	mov rdi, 8 * 1	; new rib
 15186 0000ADB7 E815BD0000              	call malloc
 15187 0000ADBC 50                      	push rax
 15188 0000ADBD BF10000000              	mov rdi, 8 * 2	; extended env
 15189 0000ADC2 E80ABD0000              	call malloc
 15190 0000ADC7 488B7D10                	mov rdi, ENV
 15191 0000ADCB BE00000000              	mov rsi, 0
 15192 0000ADD0 BA01000000              	mov rdx, 1
 15193                                  .L_lambda_simple_env_loop_0051:	; ext_env[i + 1] <-- env[i]
 15194 0000ADD5 4883FE01                	cmp rsi, 1
 15195 0000ADD9 7410                    	je .L_lambda_simple_env_end_0051
 15196 0000ADDB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15197 0000ADDF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15198 0000ADE3 48FFC6                  	inc rsi
 15199 0000ADE6 48FFC2                  	inc rdx
 15200 0000ADE9 EBEA                    	jmp .L_lambda_simple_env_loop_0051
 15201                                  .L_lambda_simple_env_end_0051:
 15202 0000ADEB 5B                      	pop rbx
 15203 0000ADEC BE00000000              	mov rsi, 0
 15204                                  .L_lambda_simple_params_loop_0051:	; copy params
 15205 0000ADF1 4883FE01                	cmp rsi, 1
 15206 0000ADF5 740E                    	je .L_lambda_simple_params_end_0051
 15207 0000ADF7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15208 0000ADFC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15209 0000AE00 48FFC6                  	inc rsi
 15210 0000AE03 EBEC                    	jmp .L_lambda_simple_params_loop_0051
 15211                                  .L_lambda_simple_params_end_0051:
 15212 0000AE05 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15213 0000AE08 4889C3                  	mov rbx, rax
 15214 0000AE0B 58                      	pop rax
 15215 0000AE0C C60004                  	mov byte [rax], T_closure
 15216 0000AE0F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15217 0000AE13 48C74009[20AE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0051
 15218 0000AE1B E99D0F0000              	jmp .L_lambda_simple_end_0051
 15219                                  .L_lambda_simple_code_0051:	; lambda-simple body
 15220 0000AE20 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15221 0000AE26 740B                    	je .L_lambda_simple_arity_check_ok_0051
 15222 0000AE28 FF742410                	push qword [rsp + 8 * 2]
 15223 0000AE2C 6A01                    	push 1
 15224 0000AE2E E957BC0000              	jmp L_error_incorrect_arity_simple
 15225                                  .L_lambda_simple_arity_check_ok_0051:
 15226 0000AE33 C8000000                	enter 0, 0
 15227                                  	; preparing a tail-call
 15228                                  	; preparing a non-tail-call
 15229 0000AE37 488B0425[190F0000]      	mov rax, qword [free_var_20]	; free var __bin-less-than-rr
 15230 0000AE3F 803805                  	cmp byte [rax], T_undefined
 15231 0000AE42 0F845CBB0000            	je L_error_fvar_undefined
 15232 0000AE48 50                      	push rax
 15233 0000AE49 488B0425[080F0000]      	mov rax, qword [free_var_19]	; free var __bin-less-than-qq
 15234 0000AE51 803805                  	cmp byte [rax], T_undefined
 15235 0000AE54 0F844ABB0000            	je L_error_fvar_undefined
 15236 0000AE5A 50                      	push rax
 15237 0000AE5B 488B0425[2A0F0000]      	mov rax, qword [free_var_21]	; free var __bin-less-than-zz
 15238 0000AE63 803805                  	cmp byte [rax], T_undefined
 15239 0000AE66 0F8438BB0000            	je L_error_fvar_undefined
 15240 0000AE6C 50                      	push rax
 15241 0000AE6D 6A03                    	push 3	; arg count
 15242 0000AE6F 488B4520                	mov rax, PARAM(0)	; param make-bin-comparator
 15243 0000AE73 803804                  	cmp byte [rax], T_closure
 15244 0000AE76 0F85ACBB0000            	jne L_error_non_closure
 15245 0000AE7C FF7001                  	push SOB_CLOSURE_ENV(rax)
 15246 0000AE7F FF5009                  	call SOB_CLOSURE_CODE(rax)
 15247 0000AE82 50                      	push rax
 15248 0000AE83 6A01                    	push 1	; arg count
 15249 0000AE85 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15250 0000AE8A E842BC0000              	call malloc
 15251 0000AE8F 50                      	push rax
 15252 0000AE90 BF08000000              	mov rdi, 8 * 1	; new rib
 15253 0000AE95 E837BC0000              	call malloc
 15254 0000AE9A 50                      	push rax
 15255 0000AE9B BF18000000              	mov rdi, 8 * 3	; extended env
 15256 0000AEA0 E82CBC0000              	call malloc
 15257 0000AEA5 488B7D10                	mov rdi, ENV
 15258 0000AEA9 BE00000000              	mov rsi, 0
 15259 0000AEAE BA01000000              	mov rdx, 1
 15260                                  .L_lambda_simple_env_loop_0052:	; ext_env[i + 1] <-- env[i]
 15261 0000AEB3 4883FE02                	cmp rsi, 2
 15262 0000AEB7 7410                    	je .L_lambda_simple_env_end_0052
 15263 0000AEB9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15264 0000AEBD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15265 0000AEC1 48FFC6                  	inc rsi
 15266 0000AEC4 48FFC2                  	inc rdx
 15267 0000AEC7 EBEA                    	jmp .L_lambda_simple_env_loop_0052
 15268                                  .L_lambda_simple_env_end_0052:
 15269 0000AEC9 5B                      	pop rbx
 15270 0000AECA BE00000000              	mov rsi, 0
 15271                                  .L_lambda_simple_params_loop_0052:	; copy params
 15272 0000AECF 4883FE01                	cmp rsi, 1
 15273 0000AED3 740E                    	je .L_lambda_simple_params_end_0052
 15274 0000AED5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15275 0000AEDA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15276 0000AEDE 48FFC6                  	inc rsi
 15277 0000AEE1 EBEC                    	jmp .L_lambda_simple_params_loop_0052
 15278                                  .L_lambda_simple_params_end_0052:
 15279 0000AEE3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15280 0000AEE6 4889C3                  	mov rbx, rax
 15281 0000AEE9 58                      	pop rax
 15282 0000AEEA C60004                  	mov byte [rax], T_closure
 15283 0000AEED 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15284 0000AEF1 48C74009[FEAE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0052
 15285 0000AEF9 E9750E0000              	jmp .L_lambda_simple_end_0052
 15286                                  .L_lambda_simple_code_0052:	; lambda-simple body
 15287 0000AEFE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15288 0000AF04 740B                    	je .L_lambda_simple_arity_check_ok_0052
 15289 0000AF06 FF742410                	push qword [rsp + 8 * 2]
 15290 0000AF0A 6A01                    	push 1
 15291 0000AF0C E979BB0000              	jmp L_error_incorrect_arity_simple
 15292                                  .L_lambda_simple_arity_check_ok_0052:
 15293 0000AF11 C8000000                	enter 0, 0
 15294                                  	; preparing a tail-call
 15295                                  	; preparing a non-tail-call
 15296 0000AF15 488B0425[E60E0000]      	mov rax, qword [free_var_17]	; free var __bin-equal-rr
 15297 0000AF1D 803805                  	cmp byte [rax], T_undefined
 15298 0000AF20 0F847EBA0000            	je L_error_fvar_undefined
 15299 0000AF26 50                      	push rax
 15300 0000AF27 488B0425[D50E0000]      	mov rax, qword [free_var_16]	; free var __bin-equal-qq
 15301 0000AF2F 803805                  	cmp byte [rax], T_undefined
 15302 0000AF32 0F846CBA0000            	je L_error_fvar_undefined
 15303 0000AF38 50                      	push rax
 15304 0000AF39 488B0425[F70E0000]      	mov rax, qword [free_var_18]	; free var __bin-equal-zz
 15305 0000AF41 803805                  	cmp byte [rax], T_undefined
 15306 0000AF44 0F845ABA0000            	je L_error_fvar_undefined
 15307 0000AF4A 50                      	push rax
 15308 0000AF4B 6A03                    	push 3	; arg count
 15309 0000AF4D 488B4510                	mov rax, ENV
 15310 0000AF51 488B00                  	mov rax, qword [rax + 8 * 0]
 15311 0000AF54 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var make-bin-comparator
 15312 0000AF57 803804                  	cmp byte [rax], T_closure
 15313 0000AF5A 0F85C8BA0000            	jne L_error_non_closure
 15314 0000AF60 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15315 0000AF63 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15316 0000AF66 50                      	push rax
 15317 0000AF67 6A01                    	push 1	; arg count
 15318 0000AF69 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15319 0000AF6E E85EBB0000              	call malloc
 15320 0000AF73 50                      	push rax
 15321 0000AF74 BF08000000              	mov rdi, 8 * 1	; new rib
 15322 0000AF79 E853BB0000              	call malloc
 15323 0000AF7E 50                      	push rax
 15324 0000AF7F BF20000000              	mov rdi, 8 * 4	; extended env
 15325 0000AF84 E848BB0000              	call malloc
 15326 0000AF89 488B7D10                	mov rdi, ENV
 15327 0000AF8D BE00000000              	mov rsi, 0
 15328 0000AF92 BA01000000              	mov rdx, 1
 15329                                  .L_lambda_simple_env_loop_0053:	; ext_env[i + 1] <-- env[i]
 15330 0000AF97 4883FE03                	cmp rsi, 3
 15331 0000AF9B 7410                    	je .L_lambda_simple_env_end_0053
 15332 0000AF9D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15333 0000AFA1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15334 0000AFA5 48FFC6                  	inc rsi
 15335 0000AFA8 48FFC2                  	inc rdx
 15336 0000AFAB EBEA                    	jmp .L_lambda_simple_env_loop_0053
 15337                                  .L_lambda_simple_env_end_0053:
 15338 0000AFAD 5B                      	pop rbx
 15339 0000AFAE BE00000000              	mov rsi, 0
 15340                                  .L_lambda_simple_params_loop_0053:	; copy params
 15341 0000AFB3 4883FE01                	cmp rsi, 1
 15342 0000AFB7 740E                    	je .L_lambda_simple_params_end_0053
 15343 0000AFB9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15344 0000AFBE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15345 0000AFC2 48FFC6                  	inc rsi
 15346 0000AFC5 EBEC                    	jmp .L_lambda_simple_params_loop_0053
 15347                                  .L_lambda_simple_params_end_0053:
 15348 0000AFC7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15349 0000AFCA 4889C3                  	mov rbx, rax
 15350 0000AFCD 58                      	pop rax
 15351 0000AFCE C60004                  	mov byte [rax], T_closure
 15352 0000AFD1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15353 0000AFD5 48C74009[E2AF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0053
 15354 0000AFDD E9470D0000              	jmp .L_lambda_simple_end_0053
 15355                                  .L_lambda_simple_code_0053:	; lambda-simple body
 15356 0000AFE2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15357 0000AFE8 740B                    	je .L_lambda_simple_arity_check_ok_0053
 15358 0000AFEA FF742410                	push qword [rsp + 8 * 2]
 15359 0000AFEE 6A01                    	push 1
 15360 0000AFF0 E995BA0000              	jmp L_error_incorrect_arity_simple
 15361                                  .L_lambda_simple_arity_check_ok_0053:
 15362 0000AFF5 C8000000                	enter 0, 0
 15363                                  	; preparing a tail-call
 15364 0000AFF9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15365 0000AFFE E8CEBA0000              	call malloc
 15366 0000B003 50                      	push rax
 15367 0000B004 BF08000000              	mov rdi, 8 * 1	; new rib
 15368 0000B009 E8C3BA0000              	call malloc
 15369 0000B00E 50                      	push rax
 15370 0000B00F BF28000000              	mov rdi, 8 * 5	; extended env
 15371 0000B014 E8B8BA0000              	call malloc
 15372 0000B019 488B7D10                	mov rdi, ENV
 15373 0000B01D BE00000000              	mov rsi, 0
 15374 0000B022 BA01000000              	mov rdx, 1
 15375                                  .L_lambda_simple_env_loop_0054:	; ext_env[i + 1] <-- env[i]
 15376 0000B027 4883FE04                	cmp rsi, 4
 15377 0000B02B 7410                    	je .L_lambda_simple_env_end_0054
 15378 0000B02D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15379 0000B031 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15380 0000B035 48FFC6                  	inc rsi
 15381 0000B038 48FFC2                  	inc rdx
 15382 0000B03B EBEA                    	jmp .L_lambda_simple_env_loop_0054
 15383                                  .L_lambda_simple_env_end_0054:
 15384 0000B03D 5B                      	pop rbx
 15385 0000B03E BE00000000              	mov rsi, 0
 15386                                  .L_lambda_simple_params_loop_0054:	; copy params
 15387 0000B043 4883FE01                	cmp rsi, 1
 15388 0000B047 740E                    	je .L_lambda_simple_params_end_0054
 15389 0000B049 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15390 0000B04E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15391 0000B052 48FFC6                  	inc rsi
 15392 0000B055 EBEC                    	jmp .L_lambda_simple_params_loop_0054
 15393                                  .L_lambda_simple_params_end_0054:
 15394 0000B057 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15395 0000B05A 4889C3                  	mov rbx, rax
 15396 0000B05D 58                      	pop rax
 15397 0000B05E C60004                  	mov byte [rax], T_closure
 15398 0000B061 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15399 0000B065 48C74009[72B00000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0054
 15400 0000B06D E99B000000              	jmp .L_lambda_simple_end_0054
 15401                                  .L_lambda_simple_code_0054:	; lambda-simple body
 15402 0000B072 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15403 0000B078 740B                    	je .L_lambda_simple_arity_check_ok_0054
 15404 0000B07A FF742410                	push qword [rsp + 8 * 2]
 15405 0000B07E 6A02                    	push 2
 15406 0000B080 E905BA0000              	jmp L_error_incorrect_arity_simple
 15407                                  .L_lambda_simple_arity_check_ok_0054:
 15408 0000B085 C8000000                	enter 0, 0
 15409                                  	; preparing a tail-call
 15410                                  	; preparing a non-tail-call
 15411 0000B089 488B4528                	mov rax, PARAM(1)	; param b
 15412 0000B08D 50                      	push rax
 15413 0000B08E 488B4520                	mov rax, PARAM(0)	; param a
 15414 0000B092 50                      	push rax
 15415 0000B093 6A02                    	push 2	; arg count
 15416 0000B095 488B4510                	mov rax, ENV
 15417 0000B099 488B4008                	mov rax, qword [rax + 8 * 1]
 15418 0000B09D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15419 0000B0A0 803804                  	cmp byte [rax], T_closure
 15420 0000B0A3 0F857FB90000            	jne L_error_non_closure
 15421 0000B0A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15422 0000B0AC FF5009                  	call SOB_CLOSURE_CODE(rax)
 15423 0000B0AF 50                      	push rax
 15424 0000B0B0 6A01                    	push 1	; arg count
 15425 0000B0B2 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 15426 0000B0BA 803805                  	cmp byte [rax], T_undefined
 15427 0000B0BD 0F84E1B80000            	je L_error_fvar_undefined
 15428 0000B0C3 803804                  	cmp byte [rax], T_closure
 15429 0000B0C6 0F855CB90000            	jne L_error_non_closure
 15430 0000B0CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 15431 0000B0CF FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 15432 0000B0D2 FF7500                  	push qword[rbp]
 15433 0000B0D5 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 15434 0000B0DA 48895D10                	mov qword[rbp + 8*2],rbx
 15435 0000B0DE 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 15436 0000B0E6 BF00000000              	mov rdi,0
 15437 0000B0EB EB00                    	jmp .L_tc_recycle_frame_loop_009c
 15438                                  .L_tc_recycle_frame_loop_009c:
 15439 0000B0ED 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 15440 0000B0F1 740F                    	je .L_tc_recycle_frame_done_009c
 15441 0000B0F3 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 15442 0000B0F8 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 15443 0000B0FD 48FFC7                  	inc rdi
 15444 0000B100 EBEB                    	jmp .L_tc_recycle_frame_loop_009c
 15445                                  .L_tc_recycle_frame_done_009c:
 15446 0000B102 4889EC                  	mov rsp, rbp	; point to last argument
 15447 0000B105 5D                      	pop rbp
 15448 0000B106 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15449 0000B109 C9                      	leave
 15450 0000B10A C22000                  	ret AND_KILL_FRAME(2)
 15451                                  .L_lambda_simple_end_0054:	; new closure is in rax
 15452 0000B10D 50                      	push rax
 15453 0000B10E 6A01                    	push 1	; arg count
 15454 0000B110 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15455 0000B115 E8B7B90000              	call malloc
 15456 0000B11A 50                      	push rax
 15457 0000B11B BF08000000              	mov rdi, 8 * 1	; new rib
 15458 0000B120 E8ACB90000              	call malloc
 15459 0000B125 50                      	push rax
 15460 0000B126 BF28000000              	mov rdi, 8 * 5	; extended env
 15461 0000B12B E8A1B90000              	call malloc
 15462 0000B130 488B7D10                	mov rdi, ENV
 15463 0000B134 BE00000000              	mov rsi, 0
 15464 0000B139 BA01000000              	mov rdx, 1
 15465                                  .L_lambda_simple_env_loop_0055:	; ext_env[i + 1] <-- env[i]
 15466 0000B13E 4883FE04                	cmp rsi, 4
 15467 0000B142 7410                    	je .L_lambda_simple_env_end_0055
 15468 0000B144 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15469 0000B148 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15470 0000B14C 48FFC6                  	inc rsi
 15471 0000B14F 48FFC2                  	inc rdx
 15472 0000B152 EBEA                    	jmp .L_lambda_simple_env_loop_0055
 15473                                  .L_lambda_simple_env_end_0055:
 15474 0000B154 5B                      	pop rbx
 15475 0000B155 BE00000000              	mov rsi, 0
 15476                                  .L_lambda_simple_params_loop_0055:	; copy params
 15477 0000B15A 4883FE01                	cmp rsi, 1
 15478 0000B15E 740E                    	je .L_lambda_simple_params_end_0055
 15479 0000B160 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15480 0000B165 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15481 0000B169 48FFC6                  	inc rsi
 15482 0000B16C EBEC                    	jmp .L_lambda_simple_params_loop_0055
 15483                                  .L_lambda_simple_params_end_0055:
 15484 0000B16E 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15485 0000B171 4889C3                  	mov rbx, rax
 15486 0000B174 58                      	pop rax
 15487 0000B175 C60004                  	mov byte [rax], T_closure
 15488 0000B178 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15489 0000B17C 48C74009[89B10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0055
 15490 0000B184 E9560B0000              	jmp .L_lambda_simple_end_0055
 15491                                  .L_lambda_simple_code_0055:	; lambda-simple body
 15492 0000B189 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15493 0000B18F 740B                    	je .L_lambda_simple_arity_check_ok_0055
 15494 0000B191 FF742410                	push qword [rsp + 8 * 2]
 15495 0000B195 6A01                    	push 1
 15496 0000B197 E9EEB80000              	jmp L_error_incorrect_arity_simple
 15497                                  .L_lambda_simple_arity_check_ok_0055:
 15498 0000B19C C8000000                	enter 0, 0
 15499                                  	; preparing a tail-call
 15500 0000B1A0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15501 0000B1A5 E827B90000              	call malloc
 15502 0000B1AA 50                      	push rax
 15503 0000B1AB BF08000000              	mov rdi, 8 * 1	; new rib
 15504 0000B1B0 E81CB90000              	call malloc
 15505 0000B1B5 50                      	push rax
 15506 0000B1B6 BF30000000              	mov rdi, 8 * 6	; extended env
 15507 0000B1BB E811B90000              	call malloc
 15508 0000B1C0 488B7D10                	mov rdi, ENV
 15509 0000B1C4 BE00000000              	mov rsi, 0
 15510 0000B1C9 BA01000000              	mov rdx, 1
 15511                                  .L_lambda_simple_env_loop_0056:	; ext_env[i + 1] <-- env[i]
 15512 0000B1CE 4883FE05                	cmp rsi, 5
 15513 0000B1D2 7410                    	je .L_lambda_simple_env_end_0056
 15514 0000B1D4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15515 0000B1D8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15516 0000B1DC 48FFC6                  	inc rsi
 15517 0000B1DF 48FFC2                  	inc rdx
 15518 0000B1E2 EBEA                    	jmp .L_lambda_simple_env_loop_0056
 15519                                  .L_lambda_simple_env_end_0056:
 15520 0000B1E4 5B                      	pop rbx
 15521 0000B1E5 BE00000000              	mov rsi, 0
 15522                                  .L_lambda_simple_params_loop_0056:	; copy params
 15523 0000B1EA 4883FE01                	cmp rsi, 1
 15524 0000B1EE 740E                    	je .L_lambda_simple_params_end_0056
 15525 0000B1F0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15526 0000B1F5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15527 0000B1F9 48FFC6                  	inc rsi
 15528 0000B1FC EBEC                    	jmp .L_lambda_simple_params_loop_0056
 15529                                  .L_lambda_simple_params_end_0056:
 15530 0000B1FE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15531 0000B201 4889C3                  	mov rbx, rax
 15532 0000B204 58                      	pop rax
 15533 0000B205 C60004                  	mov byte [rax], T_closure
 15534 0000B208 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15535 0000B20C 48C74009[16B20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0056
 15536 0000B214 EB78                    	jmp .L_lambda_simple_end_0056
 15537                                  .L_lambda_simple_code_0056:	; lambda-simple body
 15538 0000B216 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15539 0000B21C 740B                    	je .L_lambda_simple_arity_check_ok_0056
 15540 0000B21E FF742410                	push qword [rsp + 8 * 2]
 15541 0000B222 6A02                    	push 2
 15542 0000B224 E961B80000              	jmp L_error_incorrect_arity_simple
 15543                                  .L_lambda_simple_arity_check_ok_0056:
 15544 0000B229 C8000000                	enter 0, 0
 15545                                  	; preparing a tail-call
 15546 0000B22D 488B4520                	mov rax, PARAM(0)	; param a
 15547 0000B231 50                      	push rax
 15548 0000B232 488B4528                	mov rax, PARAM(1)	; param b
 15549 0000B236 50                      	push rax
 15550 0000B237 6A02                    	push 2	; arg count
 15551 0000B239 488B4510                	mov rax, ENV
 15552 0000B23D 488B4010                	mov rax, qword [rax + 8 * 2]
 15553 0000B241 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 15554 0000B244 803804                  	cmp byte [rax], T_closure
 15555 0000B247 0F85DBB70000            	jne L_error_non_closure
 15556 0000B24D FF7001                  	push SOB_CLOSURE_ENV(rax)
 15557 0000B250 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 15558 0000B253 FF7500                  	push qword[rbp]
 15559 0000B256 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 15560 0000B25B 48895D10                	mov qword[rbp + 8*2],rbx
 15561 0000B25F 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 15562 0000B267 BF00000000              	mov rdi,0
 15563 0000B26C EB00                    	jmp .L_tc_recycle_frame_loop_009d
 15564                                  .L_tc_recycle_frame_loop_009d:
 15565 0000B26E 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 15566 0000B272 740F                    	je .L_tc_recycle_frame_done_009d
 15567 0000B274 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 15568 0000B279 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 15569 0000B27E 48FFC7                  	inc rdi
 15570 0000B281 EBEB                    	jmp .L_tc_recycle_frame_loop_009d
 15571                                  .L_tc_recycle_frame_done_009d:
 15572 0000B283 4889EC                  	mov rsp, rbp	; point to last argument
 15573 0000B286 5D                      	pop rbp
 15574 0000B287 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15575 0000B28A C9                      	leave
 15576 0000B28B C22000                  	ret AND_KILL_FRAME(2)
 15577                                  .L_lambda_simple_end_0056:	; new closure is in rax
 15578 0000B28E 50                      	push rax
 15579 0000B28F 6A01                    	push 1	; arg count
 15580 0000B291 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15581 0000B296 E836B80000              	call malloc
 15582 0000B29B 50                      	push rax
 15583 0000B29C BF08000000              	mov rdi, 8 * 1	; new rib
 15584 0000B2A1 E82BB80000              	call malloc
 15585 0000B2A6 50                      	push rax
 15586 0000B2A7 BF30000000              	mov rdi, 8 * 6	; extended env
 15587 0000B2AC E820B80000              	call malloc
 15588 0000B2B1 488B7D10                	mov rdi, ENV
 15589 0000B2B5 BE00000000              	mov rsi, 0
 15590 0000B2BA BA01000000              	mov rdx, 1
 15591                                  .L_lambda_simple_env_loop_0057:	; ext_env[i + 1] <-- env[i]
 15592 0000B2BF 4883FE05                	cmp rsi, 5
 15593 0000B2C3 7410                    	je .L_lambda_simple_env_end_0057
 15594 0000B2C5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15595 0000B2C9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15596 0000B2CD 48FFC6                  	inc rsi
 15597 0000B2D0 48FFC2                  	inc rdx
 15598 0000B2D3 EBEA                    	jmp .L_lambda_simple_env_loop_0057
 15599                                  .L_lambda_simple_env_end_0057:
 15600 0000B2D5 5B                      	pop rbx
 15601 0000B2D6 BE00000000              	mov rsi, 0
 15602                                  .L_lambda_simple_params_loop_0057:	; copy params
 15603 0000B2DB 4883FE01                	cmp rsi, 1
 15604 0000B2DF 740E                    	je .L_lambda_simple_params_end_0057
 15605 0000B2E1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15606 0000B2E6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15607 0000B2EA 48FFC6                  	inc rsi
 15608 0000B2ED EBEC                    	jmp .L_lambda_simple_params_loop_0057
 15609                                  .L_lambda_simple_params_end_0057:
 15610 0000B2EF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15611 0000B2F2 4889C3                  	mov rbx, rax
 15612 0000B2F5 58                      	pop rax
 15613 0000B2F6 C60004                  	mov byte [rax], T_closure
 15614 0000B2F9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15615 0000B2FD 48C74009[0AB30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0057
 15616 0000B305 E98B090000              	jmp .L_lambda_simple_end_0057
 15617                                  .L_lambda_simple_code_0057:	; lambda-simple body
 15618 0000B30A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15619 0000B310 740B                    	je .L_lambda_simple_arity_check_ok_0057
 15620 0000B312 FF742410                	push qword [rsp + 8 * 2]
 15621 0000B316 6A01                    	push 1
 15622 0000B318 E96DB70000              	jmp L_error_incorrect_arity_simple
 15623                                  .L_lambda_simple_arity_check_ok_0057:
 15624 0000B31D C8000000                	enter 0, 0
 15625                                  	; preparing a tail-call
 15626 0000B321 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15627 0000B326 E8A6B70000              	call malloc
 15628 0000B32B 50                      	push rax
 15629 0000B32C BF08000000              	mov rdi, 8 * 1	; new rib
 15630 0000B331 E89BB70000              	call malloc
 15631 0000B336 50                      	push rax
 15632 0000B337 BF38000000              	mov rdi, 8 * 7	; extended env
 15633 0000B33C E890B70000              	call malloc
 15634 0000B341 488B7D10                	mov rdi, ENV
 15635 0000B345 BE00000000              	mov rsi, 0
 15636 0000B34A BA01000000              	mov rdx, 1
 15637                                  .L_lambda_simple_env_loop_0058:	; ext_env[i + 1] <-- env[i]
 15638 0000B34F 4883FE06                	cmp rsi, 6
 15639 0000B353 7410                    	je .L_lambda_simple_env_end_0058
 15640 0000B355 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15641 0000B359 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15642 0000B35D 48FFC6                  	inc rsi
 15643 0000B360 48FFC2                  	inc rdx
 15644 0000B363 EBEA                    	jmp .L_lambda_simple_env_loop_0058
 15645                                  .L_lambda_simple_env_end_0058:
 15646 0000B365 5B                      	pop rbx
 15647 0000B366 BE00000000              	mov rsi, 0
 15648                                  .L_lambda_simple_params_loop_0058:	; copy params
 15649 0000B36B 4883FE01                	cmp rsi, 1
 15650 0000B36F 740E                    	je .L_lambda_simple_params_end_0058
 15651 0000B371 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15652 0000B376 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15653 0000B37A 48FFC6                  	inc rsi
 15654 0000B37D EBEC                    	jmp .L_lambda_simple_params_loop_0058
 15655                                  .L_lambda_simple_params_end_0058:
 15656 0000B37F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15657 0000B382 4889C3                  	mov rbx, rax
 15658 0000B385 58                      	pop rax
 15659 0000B386 C60004                  	mov byte [rax], T_closure
 15660 0000B389 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15661 0000B38D 48C74009[9AB30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0058
 15662 0000B395 E99A000000              	jmp .L_lambda_simple_end_0058
 15663                                  .L_lambda_simple_code_0058:	; lambda-simple body
 15664 0000B39A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15665 0000B3A0 740B                    	je .L_lambda_simple_arity_check_ok_0058
 15666 0000B3A2 FF742410                	push qword [rsp + 8 * 2]
 15667 0000B3A6 6A02                    	push 2
 15668 0000B3A8 E9DDB60000              	jmp L_error_incorrect_arity_simple
 15669                                  .L_lambda_simple_arity_check_ok_0058:
 15670 0000B3AD C8000000                	enter 0, 0
 15671                                  	; preparing a tail-call
 15672                                  	; preparing a non-tail-call
 15673 0000B3B1 488B4528                	mov rax, PARAM(1)	; param b
 15674 0000B3B5 50                      	push rax
 15675 0000B3B6 488B4520                	mov rax, PARAM(0)	; param a
 15676 0000B3BA 50                      	push rax
 15677 0000B3BB 6A02                    	push 2	; arg count
 15678 0000B3BD 488B4510                	mov rax, ENV
 15679 0000B3C1 488B00                  	mov rax, qword [rax + 8 * 0]
 15680 0000B3C4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 15681 0000B3C7 803804                  	cmp byte [rax], T_closure
 15682 0000B3CA 0F8558B60000            	jne L_error_non_closure
 15683 0000B3D0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15684 0000B3D3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15685 0000B3D6 50                      	push rax
 15686 0000B3D7 6A01                    	push 1	; arg count
 15687 0000B3D9 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 15688 0000B3E1 803805                  	cmp byte [rax], T_undefined
 15689 0000B3E4 0F84BAB50000            	je L_error_fvar_undefined
 15690 0000B3EA 803804                  	cmp byte [rax], T_closure
 15691 0000B3ED 0F8535B60000            	jne L_error_non_closure
 15692 0000B3F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15693 0000B3F6 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 15694 0000B3F9 FF7500                  	push qword[rbp]
 15695 0000B3FC 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 15696 0000B401 48895D10                	mov qword[rbp + 8*2],rbx
 15697 0000B405 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 15698 0000B40D BF00000000              	mov rdi,0
 15699 0000B412 EB00                    	jmp .L_tc_recycle_frame_loop_009e
 15700                                  .L_tc_recycle_frame_loop_009e:
 15701 0000B414 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 15702 0000B418 740F                    	je .L_tc_recycle_frame_done_009e
 15703 0000B41A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 15704 0000B41F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 15705 0000B424 48FFC7                  	inc rdi
 15706 0000B427 EBEB                    	jmp .L_tc_recycle_frame_loop_009e
 15707                                  .L_tc_recycle_frame_done_009e:
 15708 0000B429 4889EC                  	mov rsp, rbp	; point to last argument
 15709 0000B42C 5D                      	pop rbp
 15710 0000B42D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15711 0000B430 C9                      	leave
 15712 0000B431 C22000                  	ret AND_KILL_FRAME(2)
 15713                                  .L_lambda_simple_end_0058:	; new closure is in rax
 15714 0000B434 50                      	push rax
 15715 0000B435 6A01                    	push 1	; arg count
 15716 0000B437 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15717 0000B43C E890B60000              	call malloc
 15718 0000B441 50                      	push rax
 15719 0000B442 BF08000000              	mov rdi, 8 * 1	; new rib
 15720 0000B447 E885B60000              	call malloc
 15721 0000B44C 50                      	push rax
 15722 0000B44D BF38000000              	mov rdi, 8 * 7	; extended env
 15723 0000B452 E87AB60000              	call malloc
 15724 0000B457 488B7D10                	mov rdi, ENV
 15725 0000B45B BE00000000              	mov rsi, 0
 15726 0000B460 BA01000000              	mov rdx, 1
 15727                                  .L_lambda_simple_env_loop_0059:	; ext_env[i + 1] <-- env[i]
 15728 0000B465 4883FE06                	cmp rsi, 6
 15729 0000B469 7410                    	je .L_lambda_simple_env_end_0059
 15730 0000B46B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15731 0000B46F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15732 0000B473 48FFC6                  	inc rsi
 15733 0000B476 48FFC2                  	inc rdx
 15734 0000B479 EBEA                    	jmp .L_lambda_simple_env_loop_0059
 15735                                  .L_lambda_simple_env_end_0059:
 15736 0000B47B 5B                      	pop rbx
 15737 0000B47C BE00000000              	mov rsi, 0
 15738                                  .L_lambda_simple_params_loop_0059:	; copy params
 15739 0000B481 4883FE01                	cmp rsi, 1
 15740 0000B485 740E                    	je .L_lambda_simple_params_end_0059
 15741 0000B487 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15742 0000B48C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15743 0000B490 48FFC6                  	inc rsi
 15744 0000B493 EBEC                    	jmp .L_lambda_simple_params_loop_0059
 15745                                  .L_lambda_simple_params_end_0059:
 15746 0000B495 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15747 0000B498 4889C3                  	mov rbx, rax
 15748 0000B49B 58                      	pop rax
 15749 0000B49C C60004                  	mov byte [rax], T_closure
 15750 0000B49F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15751 0000B4A3 48C74009[B0B40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0059
 15752 0000B4AB E99B070000              	jmp .L_lambda_simple_end_0059
 15753                                  .L_lambda_simple_code_0059:	; lambda-simple body
 15754 0000B4B0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15755 0000B4B6 740B                    	je .L_lambda_simple_arity_check_ok_0059
 15756 0000B4B8 FF742410                	push qword [rsp + 8 * 2]
 15757 0000B4BC 6A01                    	push 1
 15758 0000B4BE E9C7B50000              	jmp L_error_incorrect_arity_simple
 15759                                  .L_lambda_simple_arity_check_ok_0059:
 15760 0000B4C3 C8000000                	enter 0, 0
 15761                                  	; preparing a tail-call
 15762 0000B4C7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15763 0000B4CC E800B60000              	call malloc
 15764 0000B4D1 50                      	push rax
 15765 0000B4D2 BF08000000              	mov rdi, 8 * 1	; new rib
 15766 0000B4D7 E8F5B50000              	call malloc
 15767 0000B4DC 50                      	push rax
 15768 0000B4DD BF40000000              	mov rdi, 8 * 8	; extended env
 15769 0000B4E2 E8EAB50000              	call malloc
 15770 0000B4E7 488B7D10                	mov rdi, ENV
 15771 0000B4EB BE00000000              	mov rsi, 0
 15772 0000B4F0 BA01000000              	mov rdx, 1
 15773                                  .L_lambda_simple_env_loop_005a:	; ext_env[i + 1] <-- env[i]
 15774 0000B4F5 4883FE07                	cmp rsi, 7
 15775 0000B4F9 7410                    	je .L_lambda_simple_env_end_005a
 15776 0000B4FB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15777 0000B4FF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15778 0000B503 48FFC6                  	inc rsi
 15779 0000B506 48FFC2                  	inc rdx
 15780 0000B509 EBEA                    	jmp .L_lambda_simple_env_loop_005a
 15781                                  .L_lambda_simple_env_end_005a:
 15782 0000B50B 5B                      	pop rbx
 15783 0000B50C BE00000000              	mov rsi, 0
 15784                                  .L_lambda_simple_params_loop_005a:	; copy params
 15785 0000B511 4883FE01                	cmp rsi, 1
 15786 0000B515 740E                    	je .L_lambda_simple_params_end_005a
 15787 0000B517 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15788 0000B51C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15789 0000B520 48FFC6                  	inc rsi
 15790 0000B523 EBEC                    	jmp .L_lambda_simple_params_loop_005a
 15791                                  .L_lambda_simple_params_end_005a:
 15792 0000B525 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15793 0000B528 4889C3                  	mov rbx, rax
 15794 0000B52B 58                      	pop rax
 15795 0000B52C C60004                  	mov byte [rax], T_closure
 15796 0000B52F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15797 0000B533 48C74009[40B50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005a
 15798 0000B53B E92C050000              	jmp .L_lambda_simple_end_005a
 15799                                  .L_lambda_simple_code_005a:	; lambda-simple body
 15800 0000B540 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15801 0000B546 740B                    	je .L_lambda_simple_arity_check_ok_005a
 15802 0000B548 FF742410                	push qword [rsp + 8 * 2]
 15803 0000B54C 6A01                    	push 1
 15804 0000B54E E937B50000              	jmp L_error_incorrect_arity_simple
 15805                                  .L_lambda_simple_arity_check_ok_005a:
 15806 0000B553 C8000000                	enter 0, 0
 15807                                  	; preparing a tail-call
 15808 0000B557 48B8-                   	mov rax, L_constants + 1993
 15808 0000B559 [C907000000000000] 
 15809 0000B561 50                      	push rax
 15810 0000B562 6A01                    	push 1	; arg count
 15811 0000B564 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15812 0000B569 E863B50000              	call malloc
 15813 0000B56E 50                      	push rax
 15814 0000B56F BF08000000              	mov rdi, 8 * 1	; new rib
 15815 0000B574 E858B50000              	call malloc
 15816 0000B579 50                      	push rax
 15817 0000B57A BF48000000              	mov rdi, 8 * 9	; extended env
 15818 0000B57F E84DB50000              	call malloc
 15819 0000B584 488B7D10                	mov rdi, ENV
 15820 0000B588 BE00000000              	mov rsi, 0
 15821 0000B58D BA01000000              	mov rdx, 1
 15822                                  .L_lambda_simple_env_loop_005b:	; ext_env[i + 1] <-- env[i]
 15823 0000B592 4883FE08                	cmp rsi, 8
 15824 0000B596 7410                    	je .L_lambda_simple_env_end_005b
 15825 0000B598 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15826 0000B59C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15827 0000B5A0 48FFC6                  	inc rsi
 15828 0000B5A3 48FFC2                  	inc rdx
 15829 0000B5A6 EBEA                    	jmp .L_lambda_simple_env_loop_005b
 15830                                  .L_lambda_simple_env_end_005b:
 15831 0000B5A8 5B                      	pop rbx
 15832 0000B5A9 BE00000000              	mov rsi, 0
 15833                                  .L_lambda_simple_params_loop_005b:	; copy params
 15834 0000B5AE 4883FE01                	cmp rsi, 1
 15835 0000B5B2 740E                    	je .L_lambda_simple_params_end_005b
 15836 0000B5B4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15837 0000B5B9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15838 0000B5BD 48FFC6                  	inc rsi
 15839 0000B5C0 EBEC                    	jmp .L_lambda_simple_params_loop_005b
 15840                                  .L_lambda_simple_params_end_005b:
 15841 0000B5C2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15842 0000B5C5 4889C3                  	mov rbx, rax
 15843 0000B5C8 58                      	pop rax
 15844 0000B5C9 C60004                  	mov byte [rax], T_closure
 15845 0000B5CC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15846 0000B5D0 48C74009[DDB50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005b
 15847 0000B5D8 E945040000              	jmp .L_lambda_simple_end_005b
 15848                                  .L_lambda_simple_code_005b:	; lambda-simple body
 15849 0000B5DD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 15850 0000B5E3 740B                    	je .L_lambda_simple_arity_check_ok_005b
 15851 0000B5E5 FF742410                	push qword [rsp + 8 * 2]
 15852 0000B5E9 6A01                    	push 1
 15853 0000B5EB E99AB40000              	jmp L_error_incorrect_arity_simple
 15854                                  .L_lambda_simple_arity_check_ok_005b:
 15855 0000B5F0 C8000000                	enter 0, 0
 15856 0000B5F4 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 15857 0000B5F8 488903                  	mov qword [rbx], rax
 15858                                  
 15859 0000B5FB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 15860 0000B600 E8CCB40000              	call malloc
 15861 0000B605 50                      	push rax
 15862 0000B606 BF08000000              	mov rdi, 8 * 1	; new rib
 15863 0000B60B E8C1B40000              	call malloc
 15864 0000B610 50                      	push rax
 15865 0000B611 BF50000000              	mov rdi, 8 * 10	; extended env
 15866 0000B616 E8B6B40000              	call malloc
 15867 0000B61B 488B7D10                	mov rdi, ENV
 15868 0000B61F BE00000000              	mov rsi, 0
 15869 0000B624 BA01000000              	mov rdx, 1
 15870                                  .L_lambda_simple_env_loop_005c:	; ext_env[i + 1] <-- env[i]
 15871 0000B629 4883FE09                	cmp rsi, 9
 15872 0000B62D 7410                    	je .L_lambda_simple_env_end_005c
 15873 0000B62F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 15874 0000B633 48890CD0                	mov qword [rax + 8 * rdx], rcx
 15875 0000B637 48FFC6                  	inc rsi
 15876 0000B63A 48FFC2                  	inc rdx
 15877 0000B63D EBEA                    	jmp .L_lambda_simple_env_loop_005c
 15878                                  .L_lambda_simple_env_end_005c:
 15879 0000B63F 5B                      	pop rbx
 15880 0000B640 BE00000000              	mov rsi, 0
 15881                                  .L_lambda_simple_params_loop_005c:	; copy params
 15882 0000B645 4883FE01                	cmp rsi, 1
 15883 0000B649 740E                    	je .L_lambda_simple_params_end_005c
 15884 0000B64B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 15885 0000B650 488914F3                	mov qword [rbx + 8 * rsi], rdx
 15886 0000B654 48FFC6                  	inc rsi
 15887 0000B657 EBEC                    	jmp .L_lambda_simple_params_loop_005c
 15888                                  .L_lambda_simple_params_end_005c:
 15889 0000B659 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 15890 0000B65C 4889C3                  	mov rbx, rax
 15891 0000B65F 58                      	pop rax
 15892 0000B660 C60004                  	mov byte [rax], T_closure
 15893 0000B663 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 15894 0000B667 48C74009[74B60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005c
 15895 0000B66F E954010000              	jmp .L_lambda_simple_end_005c
 15896                                  .L_lambda_simple_code_005c:	; lambda-simple body
 15897 0000B674 48837C241002            	cmp qword [rsp + 8 * 2], 2
 15898 0000B67A 740B                    	je .L_lambda_simple_arity_check_ok_005c
 15899 0000B67C FF742410                	push qword [rsp + 8 * 2]
 15900 0000B680 6A02                    	push 2
 15901 0000B682 E903B40000              	jmp L_error_incorrect_arity_simple
 15902                                  .L_lambda_simple_arity_check_ok_005c:
 15903 0000B687 C8000000                	enter 0, 0
 15904                                  	; preparing a non-tail-call
 15905 0000B68B 488B4528                	mov rax, PARAM(1)	; param s
 15906 0000B68F 50                      	push rax
 15907 0000B690 6A01                    	push 1	; arg count
 15908 0000B692 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 15909 0000B69A 803805                  	cmp byte [rax], T_undefined
 15910 0000B69D 0F8401B30000            	je L_error_fvar_undefined
 15911 0000B6A3 803804                  	cmp byte [rax], T_closure
 15912 0000B6A6 0F857CB30000            	jne L_error_non_closure
 15913 0000B6AC FF7001                  	push SOB_CLOSURE_ENV(rax)
 15914 0000B6AF FF5009                  	call SOB_CLOSURE_CODE(rax)
 15915 0000B6B2 483D[02000000]          	cmp rax, sob_boolean_false
 15916 0000B6B8 0F8506010000            	jne .L_or_end_0009
 15917                                  	; preparing a non-tail-call
 15918                                  	; preparing a non-tail-call
 15919 0000B6BE 488B4528                	mov rax, PARAM(1)	; param s
 15920 0000B6C2 50                      	push rax
 15921 0000B6C3 6A01                    	push 1	; arg count
 15922 0000B6C5 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 15923 0000B6CD 803805                  	cmp byte [rax], T_undefined
 15924 0000B6D0 0F84CEB20000            	je L_error_fvar_undefined
 15925 0000B6D6 803804                  	cmp byte [rax], T_closure
 15926 0000B6D9 0F8549B30000            	jne L_error_non_closure
 15927 0000B6DF FF7001                  	push SOB_CLOSURE_ENV(rax)
 15928 0000B6E2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15929 0000B6E5 50                      	push rax
 15930 0000B6E6 488B4520                	mov rax, PARAM(0)	; param a
 15931 0000B6EA 50                      	push rax
 15932 0000B6EB 6A02                    	push 2	; arg count
 15933 0000B6ED 488B4510                	mov rax, ENV
 15934 0000B6F1 488B4008                	mov rax, qword [rax + 8 * 1]
 15935 0000B6F5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin-ordering
 15936 0000B6F8 803804                  	cmp byte [rax], T_closure
 15937 0000B6FB 0F8527B30000            	jne L_error_non_closure
 15938 0000B701 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15939 0000B704 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15940 0000B707 483D[02000000]          	cmp rax, sob_boolean_false
 15941 0000B70D 0F84A7000000            	je .L_if_else_0058
 15942                                  	; preparing a tail-call
 15943                                  	; preparing a non-tail-call
 15944 0000B713 488B4528                	mov rax, PARAM(1)	; param s
 15945 0000B717 50                      	push rax
 15946 0000B718 6A01                    	push 1	; arg count
 15947 0000B71A 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 15948 0000B722 803805                  	cmp byte [rax], T_undefined
 15949 0000B725 0F8479B20000            	je L_error_fvar_undefined
 15950 0000B72B 803804                  	cmp byte [rax], T_closure
 15951 0000B72E 0F85F4B20000            	jne L_error_non_closure
 15952 0000B734 FF7001                  	push SOB_CLOSURE_ENV(rax)
 15953 0000B737 FF5009                  	call SOB_CLOSURE_CODE(rax)
 15954 0000B73A 50                      	push rax
 15955                                  	; preparing a non-tail-call
 15956 0000B73B 488B4528                	mov rax, PARAM(1)	; param s
 15957 0000B73F 50                      	push rax
 15958 0000B740 6A01                    	push 1	; arg count
 15959 0000B742 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 15960 0000B74A 803805                  	cmp byte [rax], T_undefined
 15961 0000B74D 0F8451B20000            	je L_error_fvar_undefined
 15962 0000B753 803804                  	cmp byte [rax], T_closure
 15963 0000B756 0F85CCB20000            	jne L_error_non_closure
 15964 0000B75C FF7001                  	push SOB_CLOSURE_ENV(rax)
 15965 0000B75F FF5009                  	call SOB_CLOSURE_CODE(rax)
 15966 0000B762 50                      	push rax
 15967 0000B763 6A02                    	push 2	; arg count
 15968 0000B765 488B4510                	mov rax, ENV
 15969 0000B769 488B00                  	mov rax, qword [rax + 8 * 0]
 15970 0000B76C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 15971 0000B76F 488B00                  	mov rax, qword [rax]
 15972 0000B772 803804                  	cmp byte [rax], T_closure
 15973 0000B775 0F85ADB20000            	jne L_error_non_closure
 15974 0000B77B FF7001                  	push SOB_CLOSURE_ENV(rax)
 15975 0000B77E FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 15976 0000B781 FF7500                  	push qword[rbp]
 15977 0000B784 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 15978 0000B789 48895D10                	mov qword[rbp + 8*2],rbx
 15979 0000B78D 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 15980 0000B795 BF00000000              	mov rdi,0
 15981 0000B79A EB00                    	jmp .L_tc_recycle_frame_loop_009f
 15982                                  .L_tc_recycle_frame_loop_009f:
 15983 0000B79C 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 15984 0000B7A0 740F                    	je .L_tc_recycle_frame_done_009f
 15985 0000B7A2 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 15986 0000B7A7 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 15987 0000B7AC 48FFC7                  	inc rdi
 15988 0000B7AF EBEB                    	jmp .L_tc_recycle_frame_loop_009f
 15989                                  .L_tc_recycle_frame_done_009f:
 15990 0000B7B1 4889EC                  	mov rsp, rbp	; point to last argument
 15991 0000B7B4 5D                      	pop rbp
 15992 0000B7B5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 15993 0000B7B8 EB0A                    	jmp .L_if_end_0058
 15994                                  .L_if_else_0058:
 15995 0000B7BA 48B8-                   	mov rax, L_constants + 2
 15995 0000B7BC [0200000000000000] 
 15996                                  .L_if_end_0058:
 15997                                  .L_or_end_0009:
 15998 0000B7C4 C9                      	leave
 15999 0000B7C5 C22000                  	ret AND_KILL_FRAME(2)
 16000                                  .L_lambda_simple_end_005c:	; new closure is in rax
 16001 0000B7C8 50                      	push rax
 16002 0000B7C9 488B4520                	mov rax, PARAM(0)	; param run
 16003 0000B7CD 8F00                    	pop qword [rax]
 16004 0000B7CF 48B8-                   	mov rax, sob_void
 16004 0000B7D1 [0000000000000000] 
 16005                                  
 16006 0000B7D9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16007 0000B7DE E8EEB20000              	call malloc
 16008 0000B7E3 50                      	push rax
 16009 0000B7E4 BF08000000              	mov rdi, 8 * 1	; new rib
 16010 0000B7E9 E8E3B20000              	call malloc
 16011 0000B7EE 50                      	push rax
 16012 0000B7EF BF50000000              	mov rdi, 8 * 10	; extended env
 16013 0000B7F4 E8D8B20000              	call malloc
 16014 0000B7F9 488B7D10                	mov rdi, ENV
 16015 0000B7FD BE00000000              	mov rsi, 0
 16016 0000B802 BA01000000              	mov rdx, 1
 16017                                  .L_lambda_opt_env_loop_000e:	; ext_env[i + 1] <-- env[i]
 16018 0000B807 4883FE09                	cmp rsi, 9
 16019 0000B80B 7410                    	je .L_lambda_opt_env_end_000e
 16020 0000B80D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16021 0000B811 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16022 0000B815 48FFC6                  	inc rsi
 16023 0000B818 48FFC2                  	inc rdx
 16024 0000B81B EBEA                    	jmp .L_lambda_opt_env_loop_000e
 16025                                  .L_lambda_opt_env_end_000e:
 16026 0000B81D 5B                      	pop rbx
 16027 0000B81E BE00000000              	mov rsi, 0
 16028                                  .L_lambda_opt_params_loop_000e:	; copy params
 16029 0000B823 4883FE01                	cmp rsi, 1
 16030 0000B827 740E                    	je .L_lambda_opt_params_end_000e
 16031 0000B829 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16032 0000B82E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16033 0000B832 48FFC6                  	inc rsi
 16034 0000B835 EBEC                    	jmp .L_lambda_opt_params_loop_000e
 16035                                  .L_lambda_opt_params_end_000e:
 16036 0000B837 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16037 0000B83A 4889C3                  	mov rbx, rax
 16038 0000B83D 58                      	pop rax
 16039 0000B83E C60004                  	mov byte [rax], T_closure
 16040 0000B841 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16041 0000B845 48C74009[52B80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000e
 16042 0000B84D E9CC010000              	jmp .L_lambda_opt_end_000e
 16043                                  .L_lambda_opt_code_000e:	; lambda-opt body
 16044 0000B852 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16045 0000B858 7411                    	je .L_lambda_opt_arity_check_exact_000e
 16046 0000B85A 0F8FB1000000            	jg .L_lambda_opt_arity_check_more_000e
 16047 0000B860 FF742410                	push qword [rsp + 8 * 2]
 16048 0000B864 6A01                    	push 1
 16049 0000B866 E933B20000              	jmp L_error_incorrect_arity_opt
 16050                                  .L_lambda_opt_arity_check_exact_000e:
 16051 0000B86B 4883EC08                	sub rsp, 8
 16052 0000B86F 488B442408              	mov rax, qword[rsp + 8 *1]
 16053 0000B874 48890424                	mov qword[rsp], rax  
 16054 0000B878 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 16055 0000B87D 4889442408              	mov qword[rsp + 8 * 1], rax
 16056 0000B882 B802000000              	mov rax, 2
 16057 0000B887 4889442410              	mov qword[rsp + 8 *2], rax
 16058 0000B88C 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 16059 0000B891 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 16060 0000B896 48B8-                   	mov rax, sob_nil
 16060 0000B898 [0100000000000000] 
 16061 0000B8A0 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 16062 0000B8A5 C8000000                	enter 0, 0
 16063                                  	; preparing a tail-call
 16064 0000B8A9 488B4528                	mov rax, PARAM(1)	; param s
 16065 0000B8AD 50                      	push rax
 16066 0000B8AE 488B4520                	mov rax, PARAM(0)	; param a
 16067 0000B8B2 50                      	push rax
 16068 0000B8B3 6A02                    	push 2	; arg count
 16069 0000B8B5 488B4510                	mov rax, ENV
 16070 0000B8B9 488B00                  	mov rax, qword [rax + 8 * 0]
 16071 0000B8BC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 16072 0000B8BF 488B00                  	mov rax, qword [rax]
 16073 0000B8C2 803804                  	cmp byte [rax], T_closure
 16074 0000B8C5 0F855DB10000            	jne L_error_non_closure
 16075 0000B8CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 16076 0000B8CE FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16077 0000B8D1 FF7500                  	push qword[rbp]
 16078 0000B8D4 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16079 0000B8D9 48895D10                	mov qword[rbp + 8*2],rbx
 16080 0000B8DD 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 16081 0000B8E5 BF00000000              	mov rdi,0
 16082 0000B8EA EB00                    	jmp .L_tc_recycle_frame_loop_00a1
 16083                                  .L_tc_recycle_frame_loop_00a1:
 16084 0000B8EC 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16085 0000B8F0 740F                    	je .L_tc_recycle_frame_done_00a1
 16086 0000B8F2 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16087 0000B8F7 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16088 0000B8FC 48FFC7                  	inc rdi
 16089 0000B8FF EBEB                    	jmp .L_tc_recycle_frame_loop_00a1
 16090                                  .L_tc_recycle_frame_done_00a1:
 16091 0000B901 4889EC                  	mov rsp, rbp	; point to last argument
 16092 0000B904 5D                      	pop rbp
 16093 0000B905 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16094 0000B908 C9                      	leave
 16095 0000B909 C22000                  	ret AND_KILL_FRAME(2)
 16096 0000B90C E90D010000              	jmp .L_lambda_opt_end_000e	; new closure is in rax
 16097                                  .L_lambda_opt_arity_check_more_000e:
 16098 0000B911 488B442410              	mov rax, qword[rsp + 2 * 8]
 16099 0000B916 4889C7                  	mov rdi, rax
 16100 0000B919 49B9-                   	mov r9, sob_nil
 16100 0000B91B [0100000000000000] 
 16101 0000B923 4C8B442410              	mov r8, qword[rsp+2*8]
 16102                                  .L_lambda_opt_stack_shrink_loop_000e:
 16103 0000B928 4983F801                	cmp r8, 1
 16104 0000B92C 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_000e
 16105 0000B92E 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 16106 0000B933 BF11000000              	mov rdi, 1+8+8	;for pair
 16107 0000B938 E894B10000              	call malloc	 ;to create the pair in the stack
 16108 0000B93D C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 16109 0000B940 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 16110 0000B944 4C894809                 	mov qword[rax+1+8],r9
 16111 0000B948 4989C1                  	mov r9 , rax	 ; for the recursion 
 16112 0000B94B 49FFC8                  	dec r8
 16113 0000B94E EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_000e
 16114                                  .L_lambda_opt_stack_shrink_loop_exit_000e:
 16115 0000B950 488B442410              	mov rax, qword[rsp + 2 * 8]
 16116 0000B955 BF02000000              	mov rdi, 2
 16117 0000B95A 4829F8                  	sub rax, rdi
 16118 0000B95D 4889C7                  	mov rdi, rax
 16119 0000B960 486BC008                	imul rax,8
 16120 0000B964 4801C4                  	add rsp, rax
 16121 0000B967 4889E0                  	mov rax, rsp
 16122 0000B96A 4989F8                  	mov r8, rdi
 16123 0000B96D 4D6BC008                	imul r8, 8
 16124 0000B971 4C29C0                  	sub rax, r8
 16125 0000B974 4989C2                  	mov r10, rax	; holds the original ret in the stack
 16126 0000B977 4983C218                	add r10, 8*3
 16127 0000B97B 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 16128 0000B97F 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 16129 0000B982 4D6BC008                	imul r8,8
 16130 0000B986 4C01C0                  	add rax, r8
 16131 0000B989 4C8908                  	mov qword[rax] ,r9
 16132 0000B98C 4D89D0                   	mov r8, r10
 16133 0000B98F 4983C000                	add r8, 8 * 0
 16134 0000B993 4D8B08                  	mov r9,qword[r8]
 16135 0000B996 4D890CF8                	mov qword [r8 + rdi * 8], r9
 16136 0000B99A 4983EA18                	sub r10, 8*3
 16137 0000B99E 48C744241002000000      	mov qword [rsp+2*8], 2
 16138 0000B9A7 498B4208                	mov rax, qword[r10 + 1 * 8]
 16139 0000B9AB 4889442408              	mov qword[rsp + 1*8] ,rax
 16140 0000B9B0 498B02                  	mov rax, qword[r10]
 16141 0000B9B3 48890424                	mov qword[rsp], rax
 16142 0000B9B7 C8000000                	enter 0, 0
 16143                                  	; preparing a tail-call
 16144 0000B9BB 488B4528                	mov rax, PARAM(1)	; param s
 16145 0000B9BF 50                      	push rax
 16146 0000B9C0 488B4520                	mov rax, PARAM(0)	; param a
 16147 0000B9C4 50                      	push rax
 16148 0000B9C5 6A02                    	push 2	; arg count
 16149 0000B9C7 488B4510                	mov rax, ENV
 16150 0000B9CB 488B00                  	mov rax, qword [rax + 8 * 0]
 16151 0000B9CE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 16152 0000B9D1 488B00                  	mov rax, qword [rax]
 16153 0000B9D4 803804                  	cmp byte [rax], T_closure
 16154 0000B9D7 0F854BB00000            	jne L_error_non_closure
 16155 0000B9DD FF7001                  	push SOB_CLOSURE_ENV(rax)
 16156 0000B9E0 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16157 0000B9E3 FF7500                  	push qword[rbp]
 16158 0000B9E6 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16159 0000B9EB 48895D10                	mov qword[rbp + 8*2],rbx
 16160 0000B9EF 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 16161 0000B9F7 BF00000000              	mov rdi,0
 16162 0000B9FC EB00                    	jmp .L_tc_recycle_frame_loop_00a0
 16163                                  .L_tc_recycle_frame_loop_00a0:
 16164 0000B9FE 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16165 0000BA02 740F                    	je .L_tc_recycle_frame_done_00a0
 16166 0000BA04 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16167 0000BA09 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16168 0000BA0E 48FFC7                  	inc rdi
 16169 0000BA11 EBEB                    	jmp .L_tc_recycle_frame_loop_00a0
 16170                                  .L_tc_recycle_frame_done_00a0:
 16171 0000BA13 4889EC                  	mov rsp, rbp	; point to last argument
 16172 0000BA16 5D                      	pop rbp
 16173 0000BA17 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16174 0000BA1A C9                      	leave
 16175 0000BA1B C22000                  	ret AND_KILL_FRAME(2)
 16176                                  .L_lambda_opt_end_000e:	; new closure is in rax
 16177 0000BA1E C9                      	leave
 16178 0000BA1F C21800                  	ret AND_KILL_FRAME(1)
 16179                                  .L_lambda_simple_end_005b:	; new closure is in rax
 16180 0000BA22 803804                  	cmp byte [rax], T_closure
 16181 0000BA25 0F85FDAF0000            	jne L_error_non_closure
 16182 0000BA2B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16183 0000BA2E FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16184 0000BA31 FF7500                  	push qword[rbp]
 16185 0000BA34 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16186 0000BA39 48895D10                	mov qword[rbp + 8*2],rbx
 16187 0000BA3D 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 16188 0000BA45 BF00000000              	mov rdi,0
 16189 0000BA4A EB00                    	jmp .L_tc_recycle_frame_loop_00a2
 16190                                  .L_tc_recycle_frame_loop_00a2:
 16191 0000BA4C 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16192 0000BA50 740F                    	je .L_tc_recycle_frame_done_00a2
 16193 0000BA52 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16194 0000BA57 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16195 0000BA5C 48FFC7                  	inc rdi
 16196 0000BA5F EBEB                    	jmp .L_tc_recycle_frame_loop_00a2
 16197                                  .L_tc_recycle_frame_done_00a2:
 16198 0000BA61 4889EC                  	mov rsp, rbp	; point to last argument
 16199 0000BA64 5D                      	pop rbp
 16200 0000BA65 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16201 0000BA68 C9                      	leave
 16202 0000BA69 C21800                  	ret AND_KILL_FRAME(1)
 16203                                  .L_lambda_simple_end_005a:	; new closure is in rax
 16204 0000BA6C 50                      	push rax
 16205 0000BA6D 6A01                    	push 1	; arg count
 16206 0000BA6F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16207 0000BA74 E858B00000              	call malloc
 16208 0000BA79 50                      	push rax
 16209 0000BA7A BF08000000              	mov rdi, 8 * 1	; new rib
 16210 0000BA7F E84DB00000              	call malloc
 16211 0000BA84 50                      	push rax
 16212 0000BA85 BF40000000              	mov rdi, 8 * 8	; extended env
 16213 0000BA8A E842B00000              	call malloc
 16214 0000BA8F 488B7D10                	mov rdi, ENV
 16215 0000BA93 BE00000000              	mov rsi, 0
 16216 0000BA98 BA01000000              	mov rdx, 1
 16217                                  .L_lambda_simple_env_loop_005d:	; ext_env[i + 1] <-- env[i]
 16218 0000BA9D 4883FE07                	cmp rsi, 7
 16219 0000BAA1 7410                    	je .L_lambda_simple_env_end_005d
 16220 0000BAA3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16221 0000BAA7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16222 0000BAAB 48FFC6                  	inc rsi
 16223 0000BAAE 48FFC2                  	inc rdx
 16224 0000BAB1 EBEA                    	jmp .L_lambda_simple_env_loop_005d
 16225                                  .L_lambda_simple_env_end_005d:
 16226 0000BAB3 5B                      	pop rbx
 16227 0000BAB4 BE00000000              	mov rsi, 0
 16228                                  .L_lambda_simple_params_loop_005d:	; copy params
 16229 0000BAB9 4883FE01                	cmp rsi, 1
 16230 0000BABD 740E                    	je .L_lambda_simple_params_end_005d
 16231 0000BABF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16232 0000BAC4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16233 0000BAC8 48FFC6                  	inc rsi
 16234 0000BACB EBEC                    	jmp .L_lambda_simple_params_loop_005d
 16235                                  .L_lambda_simple_params_end_005d:
 16236 0000BACD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16237 0000BAD0 4889C3                  	mov rbx, rax
 16238 0000BAD3 58                      	pop rax
 16239 0000BAD4 C60004                  	mov byte [rax], T_closure
 16240 0000BAD7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16241 0000BADB 48C74009[E8BA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005d
 16242 0000BAE3 E919010000              	jmp .L_lambda_simple_end_005d
 16243                                  .L_lambda_simple_code_005d:	; lambda-simple body
 16244 0000BAE8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16245 0000BAEE 740B                    	je .L_lambda_simple_arity_check_ok_005d
 16246 0000BAF0 FF742410                	push qword [rsp + 8 * 2]
 16247 0000BAF4 6A01                    	push 1
 16248 0000BAF6 E98FAF0000              	jmp L_error_incorrect_arity_simple
 16249                                  .L_lambda_simple_arity_check_ok_005d:
 16250 0000BAFB C8000000                	enter 0, 0
 16251                                  	; preparing a non-tail-call
 16252 0000BAFF 488B4510                	mov rax, ENV
 16253 0000BB03 488B4020                	mov rax, qword [rax + 8 * 4]
 16254 0000BB07 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<?
 16255 0000BB0A 50                      	push rax
 16256 0000BB0B 6A01                    	push 1	; arg count
 16257 0000BB0D 488B4520                	mov rax, PARAM(0)	; param make-run
 16258 0000BB11 803804                  	cmp byte [rax], T_closure
 16259 0000BB14 0F850EAF0000            	jne L_error_non_closure
 16260 0000BB1A FF7001                  	push SOB_CLOSURE_ENV(rax)
 16261 0000BB1D FF5009                  	call SOB_CLOSURE_CODE(rax)
 16262 0000BB20 48890425[090E0000]      	mov qword [free_var_4], rax
 16263 0000BB28 48B8-                   	mov rax, sob_void
 16263 0000BB2A [0000000000000000] 
 16264                                  
 16265                                  	; preparing a non-tail-call
 16266 0000BB32 488B4510                	mov rax, ENV
 16267 0000BB36 488B00                  	mov rax, qword [rax + 8 * 0]
 16268 0000BB39 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin<=?
 16269 0000BB3C 50                      	push rax
 16270 0000BB3D 6A01                    	push 1	; arg count
 16271 0000BB3F 488B4520                	mov rax, PARAM(0)	; param make-run
 16272 0000BB43 803804                  	cmp byte [rax], T_closure
 16273 0000BB46 0F85DCAE0000            	jne L_error_non_closure
 16274 0000BB4C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16275 0000BB4F FF5009                  	call SOB_CLOSURE_CODE(rax)
 16276 0000BB52 48890425[1A0E0000]      	mov qword [free_var_5], rax
 16277 0000BB5A 48B8-                   	mov rax, sob_void
 16277 0000BB5C [0000000000000000] 
 16278                                  
 16279                                  	; preparing a non-tail-call
 16280 0000BB64 488B4510                	mov rax, ENV
 16281 0000BB68 488B4008                	mov rax, qword [rax + 8 * 1]
 16282 0000BB6C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>?
 16283 0000BB6F 50                      	push rax
 16284 0000BB70 6A01                    	push 1	; arg count
 16285 0000BB72 488B4520                	mov rax, PARAM(0)	; param make-run
 16286 0000BB76 803804                  	cmp byte [rax], T_closure
 16287 0000BB79 0F85A9AE0000            	jne L_error_non_closure
 16288 0000BB7F FF7001                  	push SOB_CLOSURE_ENV(rax)
 16289 0000BB82 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16290 0000BB85 48890425[3C0E0000]      	mov qword [free_var_7], rax
 16291 0000BB8D 48B8-                   	mov rax, sob_void
 16291 0000BB8F [0000000000000000] 
 16292                                  
 16293                                  	; preparing a non-tail-call
 16294 0000BB97 488B4510                	mov rax, ENV
 16295 0000BB9B 488B4010                	mov rax, qword [rax + 8 * 2]
 16296 0000BB9F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin>=?
 16297 0000BBA2 50                      	push rax
 16298 0000BBA3 6A01                    	push 1	; arg count
 16299 0000BBA5 488B4520                	mov rax, PARAM(0)	; param make-run
 16300 0000BBA9 803804                  	cmp byte [rax], T_closure
 16301 0000BBAC 0F8576AE0000            	jne L_error_non_closure
 16302 0000BBB2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16303 0000BBB5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16304 0000BBB8 48890425[4D0E0000]      	mov qword [free_var_8], rax
 16305 0000BBC0 48B8-                   	mov rax, sob_void
 16305 0000BBC2 [0000000000000000] 
 16306                                  
 16307                                  	; preparing a non-tail-call
 16308 0000BBCA 488B4510                	mov rax, ENV
 16309 0000BBCE 488B4018                	mov rax, qword [rax + 8 * 3]
 16310 0000BBD2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var bin=?
 16311 0000BBD5 50                      	push rax
 16312 0000BBD6 6A01                    	push 1	; arg count
 16313 0000BBD8 488B4520                	mov rax, PARAM(0)	; param make-run
 16314 0000BBDC 803804                  	cmp byte [rax], T_closure
 16315 0000BBDF 0F8543AE0000            	jne L_error_non_closure
 16316 0000BBE5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16317 0000BBE8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16318 0000BBEB 48890425[2B0E0000]      	mov qword [free_var_6], rax
 16319 0000BBF3 48B8-                   	mov rax, sob_void
 16319 0000BBF5 [0000000000000000] 
 16320 0000BBFD C9                      	leave
 16321 0000BBFE C21800                  	ret AND_KILL_FRAME(1)
 16322                                  .L_lambda_simple_end_005d:	; new closure is in rax
 16323 0000BC01 803804                  	cmp byte [rax], T_closure
 16324 0000BC04 0F851EAE0000            	jne L_error_non_closure
 16325 0000BC0A FF7001                  	push SOB_CLOSURE_ENV(rax)
 16326 0000BC0D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16327 0000BC10 FF7500                  	push qword[rbp]
 16328 0000BC13 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16329 0000BC18 48895D10                	mov qword[rbp + 8*2],rbx
 16330 0000BC1C 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 16331 0000BC24 BF00000000              	mov rdi,0
 16332 0000BC29 EB00                    	jmp .L_tc_recycle_frame_loop_00a3
 16333                                  .L_tc_recycle_frame_loop_00a3:
 16334 0000BC2B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16335 0000BC2F 740F                    	je .L_tc_recycle_frame_done_00a3
 16336 0000BC31 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16337 0000BC36 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16338 0000BC3B 48FFC7                  	inc rdi
 16339 0000BC3E EBEB                    	jmp .L_tc_recycle_frame_loop_00a3
 16340                                  .L_tc_recycle_frame_done_00a3:
 16341 0000BC40 4889EC                  	mov rsp, rbp	; point to last argument
 16342 0000BC43 5D                      	pop rbp
 16343 0000BC44 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16344 0000BC47 C9                      	leave
 16345 0000BC48 C21800                  	ret AND_KILL_FRAME(1)
 16346                                  .L_lambda_simple_end_0059:	; new closure is in rax
 16347 0000BC4B 803804                  	cmp byte [rax], T_closure
 16348 0000BC4E 0F85D4AD0000            	jne L_error_non_closure
 16349 0000BC54 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16350 0000BC57 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16351 0000BC5A FF7500                  	push qword[rbp]
 16352 0000BC5D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16353 0000BC62 48895D10                	mov qword[rbp + 8*2],rbx
 16354 0000BC66 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 16355 0000BC6E BF00000000              	mov rdi,0
 16356 0000BC73 EB00                    	jmp .L_tc_recycle_frame_loop_00a4
 16357                                  .L_tc_recycle_frame_loop_00a4:
 16358 0000BC75 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16359 0000BC79 740F                    	je .L_tc_recycle_frame_done_00a4
 16360 0000BC7B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16361 0000BC80 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16362 0000BC85 48FFC7                  	inc rdi
 16363 0000BC88 EBEB                    	jmp .L_tc_recycle_frame_loop_00a4
 16364                                  .L_tc_recycle_frame_done_00a4:
 16365 0000BC8A 4889EC                  	mov rsp, rbp	; point to last argument
 16366 0000BC8D 5D                      	pop rbp
 16367 0000BC8E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16368 0000BC91 C9                      	leave
 16369 0000BC92 C21800                  	ret AND_KILL_FRAME(1)
 16370                                  .L_lambda_simple_end_0057:	; new closure is in rax
 16371 0000BC95 803804                  	cmp byte [rax], T_closure
 16372 0000BC98 0F858AAD0000            	jne L_error_non_closure
 16373 0000BC9E FF7001                  	push SOB_CLOSURE_ENV(rax)
 16374 0000BCA1 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16375 0000BCA4 FF7500                  	push qword[rbp]
 16376 0000BCA7 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16377 0000BCAC 48895D10                	mov qword[rbp + 8*2],rbx
 16378 0000BCB0 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 16379 0000BCB8 BF00000000              	mov rdi,0
 16380 0000BCBD EB00                    	jmp .L_tc_recycle_frame_loop_00a5
 16381                                  .L_tc_recycle_frame_loop_00a5:
 16382 0000BCBF 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16383 0000BCC3 740F                    	je .L_tc_recycle_frame_done_00a5
 16384 0000BCC5 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16385 0000BCCA 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16386 0000BCCF 48FFC7                  	inc rdi
 16387 0000BCD2 EBEB                    	jmp .L_tc_recycle_frame_loop_00a5
 16388                                  .L_tc_recycle_frame_done_00a5:
 16389 0000BCD4 4889EC                  	mov rsp, rbp	; point to last argument
 16390 0000BCD7 5D                      	pop rbp
 16391 0000BCD8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16392 0000BCDB C9                      	leave
 16393 0000BCDC C21800                  	ret AND_KILL_FRAME(1)
 16394                                  .L_lambda_simple_end_0055:	; new closure is in rax
 16395 0000BCDF 803804                  	cmp byte [rax], T_closure
 16396 0000BCE2 0F8540AD0000            	jne L_error_non_closure
 16397 0000BCE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16398 0000BCEB FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16399 0000BCEE FF7500                  	push qword[rbp]
 16400 0000BCF1 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16401 0000BCF6 48895D10                	mov qword[rbp + 8*2],rbx
 16402 0000BCFA 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 16403 0000BD02 BF00000000              	mov rdi,0
 16404 0000BD07 EB00                    	jmp .L_tc_recycle_frame_loop_00a6
 16405                                  .L_tc_recycle_frame_loop_00a6:
 16406 0000BD09 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16407 0000BD0D 740F                    	je .L_tc_recycle_frame_done_00a6
 16408 0000BD0F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16409 0000BD14 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16410 0000BD19 48FFC7                  	inc rdi
 16411 0000BD1C EBEB                    	jmp .L_tc_recycle_frame_loop_00a6
 16412                                  .L_tc_recycle_frame_done_00a6:
 16413 0000BD1E 4889EC                  	mov rsp, rbp	; point to last argument
 16414 0000BD21 5D                      	pop rbp
 16415 0000BD22 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16416 0000BD25 C9                      	leave
 16417 0000BD26 C21800                  	ret AND_KILL_FRAME(1)
 16418                                  .L_lambda_simple_end_0053:	; new closure is in rax
 16419 0000BD29 803804                  	cmp byte [rax], T_closure
 16420 0000BD2C 0F85F6AC0000            	jne L_error_non_closure
 16421 0000BD32 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16422 0000BD35 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16423 0000BD38 FF7500                  	push qword[rbp]
 16424 0000BD3B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16425 0000BD40 48895D10                	mov qword[rbp + 8*2],rbx
 16426 0000BD44 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 16427 0000BD4C BF00000000              	mov rdi,0
 16428 0000BD51 EB00                    	jmp .L_tc_recycle_frame_loop_00a7
 16429                                  .L_tc_recycle_frame_loop_00a7:
 16430 0000BD53 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16431 0000BD57 740F                    	je .L_tc_recycle_frame_done_00a7
 16432 0000BD59 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16433 0000BD5E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16434 0000BD63 48FFC7                  	inc rdi
 16435 0000BD66 EBEB                    	jmp .L_tc_recycle_frame_loop_00a7
 16436                                  .L_tc_recycle_frame_done_00a7:
 16437 0000BD68 4889EC                  	mov rsp, rbp	; point to last argument
 16438 0000BD6B 5D                      	pop rbp
 16439 0000BD6C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16440 0000BD6F C9                      	leave
 16441 0000BD70 C21800                  	ret AND_KILL_FRAME(1)
 16442                                  .L_lambda_simple_end_0052:	; new closure is in rax
 16443 0000BD73 803804                  	cmp byte [rax], T_closure
 16444 0000BD76 0F85ACAC0000            	jne L_error_non_closure
 16445 0000BD7C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16446 0000BD7F FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16447 0000BD82 FF7500                  	push qword[rbp]
 16448 0000BD85 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16449 0000BD8A 48895D10                	mov qword[rbp + 8*2],rbx
 16450 0000BD8E 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 16451 0000BD96 BF00000000              	mov rdi,0
 16452 0000BD9B EB00                    	jmp .L_tc_recycle_frame_loop_00a8
 16453                                  .L_tc_recycle_frame_loop_00a8:
 16454 0000BD9D 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16455 0000BDA1 740F                    	je .L_tc_recycle_frame_done_00a8
 16456 0000BDA3 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16457 0000BDA8 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16458 0000BDAD 48FFC7                  	inc rdi
 16459 0000BDB0 EBEB                    	jmp .L_tc_recycle_frame_loop_00a8
 16460                                  .L_tc_recycle_frame_done_00a8:
 16461 0000BDB2 4889EC                  	mov rsp, rbp	; point to last argument
 16462 0000BDB5 5D                      	pop rbp
 16463 0000BDB6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16464 0000BDB9 C9                      	leave
 16465 0000BDBA C21800                  	ret AND_KILL_FRAME(1)
 16466                                  .L_lambda_simple_end_0051:	; new closure is in rax
 16467 0000BDBD 803804                  	cmp byte [rax], T_closure
 16468 0000BDC0 0F8562AC0000            	jne L_error_non_closure
 16469 0000BDC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16470 0000BDC9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16471 0000BDCC FF7500                  	push qword[rbp]
 16472 0000BDCF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16473 0000BDD4 48895D10                	mov qword[rbp + 8*2],rbx
 16474 0000BDD8 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 16475 0000BDE0 BF00000000              	mov rdi,0
 16476 0000BDE5 EB00                    	jmp .L_tc_recycle_frame_loop_00a9
 16477                                  .L_tc_recycle_frame_loop_00a9:
 16478 0000BDE7 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16479 0000BDEB 740F                    	je .L_tc_recycle_frame_done_00a9
 16480 0000BDED 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16481 0000BDF2 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16482 0000BDF7 48FFC7                  	inc rdi
 16483 0000BDFA EBEB                    	jmp .L_tc_recycle_frame_loop_00a9
 16484                                  .L_tc_recycle_frame_done_00a9:
 16485 0000BDFC 4889EC                  	mov rsp, rbp	; point to last argument
 16486 0000BDFF 5D                      	pop rbp
 16487 0000BE00 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16488 0000BE03 C9                      	leave
 16489 0000BE04 C21800                  	ret AND_KILL_FRAME(1)
 16490                                  .L_lambda_simple_end_004e:	; new closure is in rax
 16491 0000BE07 803804                  	cmp byte [rax], T_closure
 16492 0000BE0A 0F8518AC0000            	jne L_error_non_closure
 16493 0000BE10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16494 0000BE13 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16495                                  
 16496 0000BE16 4889C7                  	mov rdi, rax
 16497 0000BE19 E808AF0000              	call print_sexpr_if_not_void
 16498 0000BE1E 48B8-                   	mov rax, L_constants + 0
 16498 0000BE20 [0000000000000000] 
 16499 0000BE28 48890425[AF120000]      	mov qword [free_var_74], rax
 16500 0000BE30 48B8-                   	mov rax, sob_void
 16500 0000BE32 [0000000000000000] 
 16501                                  
 16502 0000BE3A 4889C7                  	mov rdi, rax
 16503 0000BE3D E8E4AE0000              	call print_sexpr_if_not_void
 16504 0000BE42 48B8-                   	mov rax, L_constants + 0
 16504 0000BE44 [0000000000000000] 
 16505 0000BE4C 48890425[9E120000]      	mov qword [free_var_73], rax
 16506 0000BE54 48B8-                   	mov rax, sob_void
 16506 0000BE56 [0000000000000000] 
 16507                                  
 16508 0000BE5E 4889C7                  	mov rdi, rax
 16509 0000BE61 E8C0AE0000              	call print_sexpr_if_not_void
 16510 0000BE66 48B8-                   	mov rax, L_constants + 0
 16510 0000BE68 [0000000000000000] 
 16511 0000BE70 48890425[C0120000]      	mov qword [free_var_75], rax
 16512 0000BE78 48B8-                   	mov rax, sob_void
 16512 0000BE7A [0000000000000000] 
 16513                                  
 16514 0000BE82 4889C7                  	mov rdi, rax
 16515 0000BE85 E89CAE0000              	call print_sexpr_if_not_void
 16516 0000BE8A 48B8-                   	mov rax, L_constants + 0
 16516 0000BE8C [0000000000000000] 
 16517 0000BE94 48890425[E2120000]      	mov qword [free_var_77], rax
 16518 0000BE9C 48B8-                   	mov rax, sob_void
 16518 0000BE9E [0000000000000000] 
 16519                                  
 16520 0000BEA6 4889C7                  	mov rdi, rax
 16521 0000BEA9 E878AE0000              	call print_sexpr_if_not_void
 16522 0000BEAE 48B8-                   	mov rax, L_constants + 0
 16522 0000BEB0 [0000000000000000] 
 16523 0000BEB8 48890425[D1120000]      	mov qword [free_var_76], rax
 16524 0000BEC0 48B8-                   	mov rax, sob_void
 16524 0000BEC2 [0000000000000000] 
 16525                                  
 16526 0000BECA 4889C7                  	mov rdi, rax
 16527 0000BECD E854AE0000              	call print_sexpr_if_not_void
 16528                                  	; preparing a non-tail-call
 16529 0000BED2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16530 0000BED7 E8F5AB0000              	call malloc
 16531 0000BEDC 50                      	push rax
 16532 0000BEDD BF00000000              	mov rdi, 8 * 0	; new rib
 16533 0000BEE2 E8EAAB0000              	call malloc
 16534 0000BEE7 50                      	push rax
 16535 0000BEE8 BF08000000              	mov rdi, 8 * 1	; extended env
 16536 0000BEED E8DFAB0000              	call malloc
 16537 0000BEF2 488B7D10                	mov rdi, ENV
 16538 0000BEF6 BE00000000              	mov rsi, 0
 16539 0000BEFB BA01000000              	mov rdx, 1
 16540                                  .L_lambda_simple_env_loop_005e:	; ext_env[i + 1] <-- env[i]
 16541 0000BF00 4883FE00                	cmp rsi, 0
 16542 0000BF04 7410                    	je .L_lambda_simple_env_end_005e
 16543 0000BF06 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16544 0000BF0A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16545 0000BF0E 48FFC6                  	inc rsi
 16546 0000BF11 48FFC2                  	inc rdx
 16547 0000BF14 EBEA                    	jmp .L_lambda_simple_env_loop_005e
 16548                                  .L_lambda_simple_env_end_005e:
 16549 0000BF16 5B                      	pop rbx
 16550 0000BF17 BE00000000              	mov rsi, 0
 16551                                  .L_lambda_simple_params_loop_005e:	; copy params
 16552 0000BF1C 4883FE00                	cmp rsi, 0
 16553 0000BF20 740E                    	je .L_lambda_simple_params_end_005e
 16554 0000BF22 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16555 0000BF27 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16556 0000BF2B 48FFC6                  	inc rsi
 16557 0000BF2E EBEC                    	jmp .L_lambda_simple_params_loop_005e
 16558                                  .L_lambda_simple_params_end_005e:
 16559 0000BF30 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16560 0000BF33 4889C3                  	mov rbx, rax
 16561 0000BF36 58                      	pop rax
 16562 0000BF37 C60004                  	mov byte [rax], T_closure
 16563 0000BF3A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16564 0000BF3E 48C74009[4BBF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005e
 16565 0000BF46 E9C6020000              	jmp .L_lambda_simple_end_005e
 16566                                  .L_lambda_simple_code_005e:	; lambda-simple body
 16567 0000BF4B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16568 0000BF51 740B                    	je .L_lambda_simple_arity_check_ok_005e
 16569 0000BF53 FF742410                	push qword [rsp + 8 * 2]
 16570 0000BF57 6A01                    	push 1
 16571 0000BF59 E92CAB0000              	jmp L_error_incorrect_arity_simple
 16572                                  .L_lambda_simple_arity_check_ok_005e:
 16573 0000BF5E C8000000                	enter 0, 0
 16574 0000BF62 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16575 0000BF67 E865AB0000              	call malloc
 16576 0000BF6C 50                      	push rax
 16577 0000BF6D BF08000000              	mov rdi, 8 * 1	; new rib
 16578 0000BF72 E85AAB0000              	call malloc
 16579 0000BF77 50                      	push rax
 16580 0000BF78 BF10000000              	mov rdi, 8 * 2	; extended env
 16581 0000BF7D E84FAB0000              	call malloc
 16582 0000BF82 488B7D10                	mov rdi, ENV
 16583 0000BF86 BE00000000              	mov rsi, 0
 16584 0000BF8B BA01000000              	mov rdx, 1
 16585                                  .L_lambda_opt_env_loop_000f:	; ext_env[i + 1] <-- env[i]
 16586 0000BF90 4883FE01                	cmp rsi, 1
 16587 0000BF94 7410                    	je .L_lambda_opt_env_end_000f
 16588 0000BF96 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16589 0000BF9A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16590 0000BF9E 48FFC6                  	inc rsi
 16591 0000BFA1 48FFC2                  	inc rdx
 16592 0000BFA4 EBEA                    	jmp .L_lambda_opt_env_loop_000f
 16593                                  .L_lambda_opt_env_end_000f:
 16594 0000BFA6 5B                      	pop rbx
 16595 0000BFA7 BE00000000              	mov rsi, 0
 16596                                  .L_lambda_opt_params_loop_000f:	; copy params
 16597 0000BFAC 4883FE01                	cmp rsi, 1
 16598 0000BFB0 740E                    	je .L_lambda_opt_params_end_000f
 16599 0000BFB2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16600 0000BFB7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16601 0000BFBB 48FFC6                  	inc rsi
 16602 0000BFBE EBEC                    	jmp .L_lambda_opt_params_loop_000f
 16603                                  .L_lambda_opt_params_end_000f:
 16604 0000BFC0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16605 0000BFC3 4889C3                  	mov rbx, rax
 16606 0000BFC6 58                      	pop rax
 16607 0000BFC7 C60004                  	mov byte [rax], T_closure
 16608 0000BFCA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16609 0000BFCE 48C74009[DBBF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_000f
 16610 0000BFD6 E932020000              	jmp .L_lambda_opt_end_000f
 16611                                  .L_lambda_opt_code_000f:	; lambda-opt body
 16612 0000BFDB 48837C241000            	cmp qword [rsp + 8 * 2], 0
 16613 0000BFE1 7411                    	je .L_lambda_opt_arity_check_exact_000f
 16614 0000BFE3 0F8FE6000000            	jg .L_lambda_opt_arity_check_more_000f
 16615 0000BFE9 FF742410                	push qword [rsp + 8 * 2]
 16616 0000BFED 6A00                    	push 0
 16617 0000BFEF E9AAAA0000              	jmp L_error_incorrect_arity_opt
 16618                                  .L_lambda_opt_arity_check_exact_000f:
 16619 0000BFF4 4883EC08                	sub rsp, 8
 16620 0000BFF8 488B442408              	mov rax, qword[rsp + 8 *1]
 16621 0000BFFD 48890424                	mov qword[rsp], rax  
 16622 0000C001 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 16623 0000C006 4889442408              	mov qword[rsp + 8 * 1], rax
 16624 0000C00B B801000000              	mov rax, 1
 16625 0000C010 4889442410              	mov qword[rsp + 8 *2], rax
 16626 0000C015 48B8-                   	mov rax, sob_nil
 16626 0000C017 [0100000000000000] 
 16627 0000C01F 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 16628 0000C024 C8000000                	enter 0, 0
 16629                                  	; preparing a tail-call
 16630                                  	; preparing a non-tail-call
 16631 0000C028 488B4520                	mov rax, PARAM(0)	; param s
 16632 0000C02C 50                      	push rax
 16633 0000C02D 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16634 0000C035 803805                  	cmp byte [rax], T_undefined
 16635 0000C038 0F8466A90000            	je L_error_fvar_undefined
 16636 0000C03E 50                      	push rax
 16637 0000C03F 6A02                    	push 2	; arg count
 16638 0000C041 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 16639 0000C049 803805                  	cmp byte [rax], T_undefined
 16640 0000C04C 0F8452A90000            	je L_error_fvar_undefined
 16641 0000C052 803804                  	cmp byte [rax], T_closure
 16642 0000C055 0F85CDA90000            	jne L_error_non_closure
 16643 0000C05B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16644 0000C05E FF5009                  	call SOB_CLOSURE_CODE(rax)
 16645 0000C061 50                      	push rax
 16646 0000C062 488B4510                	mov rax, ENV
 16647 0000C066 488B00                  	mov rax, qword [rax + 8 * 0]
 16648 0000C069 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 16649 0000C06C 50                      	push rax
 16650 0000C06D 6A02                    	push 2	; arg count
 16651 0000C06F 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 16652 0000C077 803805                  	cmp byte [rax], T_undefined
 16653 0000C07A 0F8424A90000            	je L_error_fvar_undefined
 16654 0000C080 803804                  	cmp byte [rax], T_closure
 16655 0000C083 0F859FA90000            	jne L_error_non_closure
 16656 0000C089 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16657 0000C08C FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16658 0000C08F FF7500                  	push qword[rbp]
 16659 0000C092 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16660 0000C097 48895D10                	mov qword[rbp + 8*2],rbx
 16661 0000C09B 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 16662 0000C0A3 BF00000000              	mov rdi,0
 16663 0000C0A8 EB00                    	jmp .L_tc_recycle_frame_loop_00ab
 16664                                  .L_tc_recycle_frame_loop_00ab:
 16665 0000C0AA 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16666 0000C0AE 740F                    	je .L_tc_recycle_frame_done_00ab
 16667 0000C0B0 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16668 0000C0B5 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16669 0000C0BA 48FFC7                  	inc rdi
 16670 0000C0BD EBEB                    	jmp .L_tc_recycle_frame_loop_00ab
 16671                                  .L_tc_recycle_frame_done_00ab:
 16672 0000C0BF 4889EC                  	mov rsp, rbp	; point to last argument
 16673 0000C0C2 5D                      	pop rbp
 16674 0000C0C3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16675 0000C0C6 C9                      	leave
 16676 0000C0C7 C21800                  	ret AND_KILL_FRAME(1)
 16677 0000C0CA E93E010000              	jmp .L_lambda_opt_end_000f	; new closure is in rax
 16678                                  .L_lambda_opt_arity_check_more_000f:
 16679 0000C0CF 488B442410              	mov rax, qword[rsp + 2 * 8]
 16680 0000C0D4 4889C7                  	mov rdi, rax
 16681 0000C0D7 49B9-                   	mov r9, sob_nil
 16681 0000C0D9 [0100000000000000] 
 16682 0000C0E1 4C8B442410              	mov r8, qword[rsp+2*8]
 16683                                  .L_lambda_opt_stack_shrink_loop_000f:
 16684 0000C0E6 4983F800                	cmp r8, 0
 16685 0000C0EA 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_000f
 16686 0000C0EC 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 16687 0000C0F1 BF11000000              	mov rdi, 1+8+8	;for pair
 16688 0000C0F6 E8D6A90000              	call malloc	 ;to create the pair in the stack
 16689 0000C0FB C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 16690 0000C0FE 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 16691 0000C102 4C894809                 	mov qword[rax+1+8],r9
 16692 0000C106 4989C1                  	mov r9 , rax	 ; for the recursion 
 16693 0000C109 49FFC8                  	dec r8
 16694 0000C10C EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_000f
 16695                                  .L_lambda_opt_stack_shrink_loop_exit_000f:
 16696 0000C10E 488B442410              	mov rax, qword[rsp + 2 * 8]
 16697 0000C113 BF01000000              	mov rdi, 1
 16698 0000C118 4829F8                  	sub rax, rdi
 16699 0000C11B 4889C7                  	mov rdi, rax
 16700 0000C11E 486BC008                	imul rax,8
 16701 0000C122 4801C4                  	add rsp, rax
 16702 0000C125 4889E0                  	mov rax, rsp
 16703 0000C128 4989F8                  	mov r8, rdi
 16704 0000C12B 4D6BC008                	imul r8, 8
 16705 0000C12F 4C29C0                  	sub rax, r8
 16706 0000C132 4989C2                  	mov r10, rax	; holds the original ret in the stack
 16707 0000C135 4983C218                	add r10, 8*3
 16708 0000C139 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 16709 0000C13D 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 16710 0000C140 4D6BC008                	imul r8,8
 16711 0000C144 4C01C0                  	add rax, r8
 16712 0000C147 4C8908                  	mov qword[rax] ,r9
 16713 0000C14A 4983EA18                 	sub r10, 8*3
 16714 0000C14E 48C744241001000000      	mov qword [rsp+2*8], 1
 16715 0000C157 498B4208                	mov rax, qword[r10 + 1 * 8]
 16716 0000C15B 4889442408              	mov qword[rsp + 1*8] ,rax
 16717 0000C160 498B02                  	mov rax, qword[r10]
 16718 0000C163 48890424                	mov qword[rsp], rax
 16719 0000C167 C8000000                	enter 0, 0
 16720                                  	; preparing a tail-call
 16721                                  	; preparing a non-tail-call
 16722 0000C16B 488B4520                	mov rax, PARAM(0)	; param s
 16723 0000C16F 50                      	push rax
 16724 0000C170 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16725 0000C178 803805                  	cmp byte [rax], T_undefined
 16726 0000C17B 0F8423A80000            	je L_error_fvar_undefined
 16727 0000C181 50                      	push rax
 16728 0000C182 6A02                    	push 2	; arg count
 16729 0000C184 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 16730 0000C18C 803805                  	cmp byte [rax], T_undefined
 16731 0000C18F 0F840FA80000            	je L_error_fvar_undefined
 16732 0000C195 803804                  	cmp byte [rax], T_closure
 16733 0000C198 0F858AA80000            	jne L_error_non_closure
 16734 0000C19E FF7001                  	push SOB_CLOSURE_ENV(rax)
 16735 0000C1A1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16736 0000C1A4 50                      	push rax
 16737 0000C1A5 488B4510                	mov rax, ENV
 16738 0000C1A9 488B00                  	mov rax, qword [rax + 8 * 0]
 16739 0000C1AC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 16740 0000C1AF 50                      	push rax
 16741 0000C1B0 6A02                    	push 2	; arg count
 16742 0000C1B2 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 16743 0000C1BA 803805                  	cmp byte [rax], T_undefined
 16744 0000C1BD 0F84E1A70000            	je L_error_fvar_undefined
 16745 0000C1C3 803804                  	cmp byte [rax], T_closure
 16746 0000C1C6 0F855CA80000            	jne L_error_non_closure
 16747 0000C1CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 16748 0000C1CF FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 16749 0000C1D2 FF7500                  	push qword[rbp]
 16750 0000C1D5 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 16751 0000C1DA 48895D10                	mov qword[rbp + 8*2],rbx
 16752 0000C1DE 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 16753 0000C1E6 BF00000000              	mov rdi,0
 16754 0000C1EB EB00                    	jmp .L_tc_recycle_frame_loop_00aa
 16755                                  .L_tc_recycle_frame_loop_00aa:
 16756 0000C1ED 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 16757 0000C1F1 740F                    	je .L_tc_recycle_frame_done_00aa
 16758 0000C1F3 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 16759 0000C1F8 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 16760 0000C1FD 48FFC7                  	inc rdi
 16761 0000C200 EBEB                    	jmp .L_tc_recycle_frame_loop_00aa
 16762                                  .L_tc_recycle_frame_done_00aa:
 16763 0000C202 4889EC                  	mov rsp, rbp	; point to last argument
 16764 0000C205 5D                      	pop rbp
 16765 0000C206 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 16766 0000C209 C9                      	leave
 16767 0000C20A C21800                  	ret AND_KILL_FRAME(1)
 16768                                  .L_lambda_opt_end_000f:	; new closure is in rax
 16769 0000C20D C9                      	leave
 16770 0000C20E C21800                  	ret AND_KILL_FRAME(1)
 16771                                  .L_lambda_simple_end_005e:	; new closure is in rax
 16772 0000C211 50                      	push rax
 16773 0000C212 6A01                    	push 1	; arg count
 16774 0000C214 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16775 0000C219 E8B3A80000              	call malloc
 16776 0000C21E 50                      	push rax
 16777 0000C21F BF00000000              	mov rdi, 8 * 0	; new rib
 16778 0000C224 E8A8A80000              	call malloc
 16779 0000C229 50                      	push rax
 16780 0000C22A BF08000000              	mov rdi, 8 * 1	; extended env
 16781 0000C22F E89DA80000              	call malloc
 16782 0000C234 488B7D10                	mov rdi, ENV
 16783 0000C238 BE00000000              	mov rsi, 0
 16784 0000C23D BA01000000              	mov rdx, 1
 16785                                  .L_lambda_simple_env_loop_005f:	; ext_env[i + 1] <-- env[i]
 16786 0000C242 4883FE00                	cmp rsi, 0
 16787 0000C246 7410                    	je .L_lambda_simple_env_end_005f
 16788 0000C248 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16789 0000C24C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16790 0000C250 48FFC6                  	inc rsi
 16791 0000C253 48FFC2                  	inc rdx
 16792 0000C256 EBEA                    	jmp .L_lambda_simple_env_loop_005f
 16793                                  .L_lambda_simple_env_end_005f:
 16794 0000C258 5B                      	pop rbx
 16795 0000C259 BE00000000              	mov rsi, 0
 16796                                  .L_lambda_simple_params_loop_005f:	; copy params
 16797 0000C25E 4883FE00                	cmp rsi, 0
 16798 0000C262 740E                    	je .L_lambda_simple_params_end_005f
 16799 0000C264 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16800 0000C269 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16801 0000C26D 48FFC6                  	inc rsi
 16802 0000C270 EBEC                    	jmp .L_lambda_simple_params_loop_005f
 16803                                  .L_lambda_simple_params_end_005f:
 16804 0000C272 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16805 0000C275 4889C3                  	mov rbx, rax
 16806 0000C278 58                      	pop rax
 16807 0000C279 C60004                  	mov byte [rax], T_closure
 16808 0000C27C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16809 0000C280 48C74009[8DC20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_005f
 16810 0000C288 E938010000              	jmp .L_lambda_simple_end_005f
 16811                                  .L_lambda_simple_code_005f:	; lambda-simple body
 16812 0000C28D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16813 0000C293 740B                    	je .L_lambda_simple_arity_check_ok_005f
 16814 0000C295 FF742410                	push qword [rsp + 8 * 2]
 16815 0000C299 6A01                    	push 1
 16816 0000C29B E9EAA70000              	jmp L_error_incorrect_arity_simple
 16817                                  .L_lambda_simple_arity_check_ok_005f:
 16818 0000C2A0 C8000000                	enter 0, 0
 16819                                  	; preparing a non-tail-call
 16820 0000C2A4 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 16821 0000C2AC 803805                  	cmp byte [rax], T_undefined
 16822 0000C2AF 0F84EFA60000            	je L_error_fvar_undefined
 16823 0000C2B5 50                      	push rax
 16824 0000C2B6 6A01                    	push 1	; arg count
 16825 0000C2B8 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16826 0000C2BC 803804                  	cmp byte [rax], T_closure
 16827 0000C2BF 0F8563A70000            	jne L_error_non_closure
 16828 0000C2C5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16829 0000C2C8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16830 0000C2CB 48890425[AF120000]      	mov qword [free_var_74], rax
 16831 0000C2D3 48B8-                   	mov rax, sob_void
 16831 0000C2D5 [0000000000000000] 
 16832                                  
 16833                                  	; preparing a non-tail-call
 16834 0000C2DD 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 16835 0000C2E5 803805                  	cmp byte [rax], T_undefined
 16836 0000C2E8 0F84B6A60000            	je L_error_fvar_undefined
 16837 0000C2EE 50                      	push rax
 16838 0000C2EF 6A01                    	push 1	; arg count
 16839 0000C2F1 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16840 0000C2F5 803804                  	cmp byte [rax], T_closure
 16841 0000C2F8 0F852AA70000            	jne L_error_non_closure
 16842 0000C2FE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16843 0000C301 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16844 0000C304 48890425[9E120000]      	mov qword [free_var_73], rax
 16845 0000C30C 48B8-                   	mov rax, sob_void
 16845 0000C30E [0000000000000000] 
 16846                                  
 16847                                  	; preparing a non-tail-call
 16848 0000C316 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 16849 0000C31E 803805                  	cmp byte [rax], T_undefined
 16850 0000C321 0F847DA60000            	je L_error_fvar_undefined
 16851 0000C327 50                      	push rax
 16852 0000C328 6A01                    	push 1	; arg count
 16853 0000C32A 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16854 0000C32E 803804                  	cmp byte [rax], T_closure
 16855 0000C331 0F85F1A60000            	jne L_error_non_closure
 16856 0000C337 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16857 0000C33A FF5009                  	call SOB_CLOSURE_CODE(rax)
 16858 0000C33D 48890425[C0120000]      	mov qword [free_var_75], rax
 16859 0000C345 48B8-                   	mov rax, sob_void
 16859 0000C347 [0000000000000000] 
 16860                                  
 16861                                  	; preparing a non-tail-call
 16862 0000C34F 488B0425[3C0E0000]      	mov rax, qword [free_var_7]	; free var >
 16863 0000C357 803805                  	cmp byte [rax], T_undefined
 16864 0000C35A 0F8444A60000            	je L_error_fvar_undefined
 16865 0000C360 50                      	push rax
 16866 0000C361 6A01                    	push 1	; arg count
 16867 0000C363 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16868 0000C367 803804                  	cmp byte [rax], T_closure
 16869 0000C36A 0F85B8A60000            	jne L_error_non_closure
 16870 0000C370 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16871 0000C373 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16872 0000C376 48890425[E2120000]      	mov qword [free_var_77], rax
 16873 0000C37E 48B8-                   	mov rax, sob_void
 16873 0000C380 [0000000000000000] 
 16874                                  
 16875                                  	; preparing a non-tail-call
 16876 0000C388 488B0425[4D0E0000]      	mov rax, qword [free_var_8]	; free var >=
 16877 0000C390 803805                  	cmp byte [rax], T_undefined
 16878 0000C393 0F840BA60000            	je L_error_fvar_undefined
 16879 0000C399 50                      	push rax
 16880 0000C39A 6A01                    	push 1	; arg count
 16881 0000C39C 488B4520                	mov rax, PARAM(0)	; param make-char-comparator
 16882 0000C3A0 803804                  	cmp byte [rax], T_closure
 16883 0000C3A3 0F857FA60000            	jne L_error_non_closure
 16884 0000C3A9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16885 0000C3AC FF5009                  	call SOB_CLOSURE_CODE(rax)
 16886 0000C3AF 48890425[D1120000]      	mov qword [free_var_76], rax
 16887 0000C3B7 48B8-                   	mov rax, sob_void
 16887 0000C3B9 [0000000000000000] 
 16888 0000C3C1 C9                      	leave
 16889 0000C3C2 C21800                  	ret AND_KILL_FRAME(1)
 16890                                  .L_lambda_simple_end_005f:	; new closure is in rax
 16891 0000C3C5 803804                  	cmp byte [rax], T_closure
 16892 0000C3C8 0F855AA60000            	jne L_error_non_closure
 16893 0000C3CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 16894 0000C3D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 16895                                  
 16896 0000C3D4 4889C7                  	mov rdi, rax
 16897 0000C3D7 E84AA90000              	call print_sexpr_if_not_void
 16898 0000C3DC 48B8-                   	mov rax, L_constants + 0
 16898 0000C3DE [0000000000000000] 
 16899 0000C3E6 48890425[7C120000]      	mov qword [free_var_71], rax
 16900 0000C3EE 48B8-                   	mov rax, sob_void
 16900 0000C3F0 [0000000000000000] 
 16901                                  
 16902 0000C3F8 4889C7                  	mov rdi, rax
 16903 0000C3FB E826A90000              	call print_sexpr_if_not_void
 16904 0000C400 48B8-                   	mov rax, L_constants + 0
 16904 0000C402 [0000000000000000] 
 16905 0000C40A 48890425[8D120000]      	mov qword [free_var_72], rax
 16906 0000C412 48B8-                   	mov rax, sob_void
 16906 0000C414 [0000000000000000] 
 16907                                  
 16908 0000C41C 4889C7                  	mov rdi, rax
 16909 0000C41F E802A90000              	call print_sexpr_if_not_void
 16910                                  	; preparing a non-tail-call
 16911                                  	; preparing a non-tail-call
 16912                                  	; preparing a non-tail-call
 16913 0000C424 48B8-                   	mov rax, L_constants + 2569
 16913 0000C426 [090A000000000000] 
 16914 0000C42E 50                      	push rax
 16915 0000C42F 6A01                    	push 1	; arg count
 16916 0000C431 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16917 0000C439 803805                  	cmp byte [rax], T_undefined
 16918 0000C43C 0F8462A50000            	je L_error_fvar_undefined
 16919 0000C442 803804                  	cmp byte [rax], T_closure
 16920 0000C445 0F85DDA50000            	jne L_error_non_closure
 16921 0000C44B FF7001                  	push SOB_CLOSURE_ENV(rax)
 16922 0000C44E FF5009                  	call SOB_CLOSURE_CODE(rax)
 16923 0000C451 50                      	push rax
 16924                                  	; preparing a non-tail-call
 16925 0000C452 48B8-                   	mov rax, L_constants + 2573
 16925 0000C454 [0D0A000000000000] 
 16926 0000C45C 50                      	push rax
 16927 0000C45D 6A01                    	push 1	; arg count
 16928 0000C45F 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 16929 0000C467 803805                  	cmp byte [rax], T_undefined
 16930 0000C46A 0F8434A50000            	je L_error_fvar_undefined
 16931 0000C470 803804                  	cmp byte [rax], T_closure
 16932 0000C473 0F85AFA50000            	jne L_error_non_closure
 16933 0000C479 FF7001                  	push SOB_CLOSURE_ENV(rax)
 16934 0000C47C FF5009                  	call SOB_CLOSURE_CODE(rax)
 16935 0000C47F 50                      	push rax
 16936 0000C480 6A02                    	push 2	; arg count
 16937 0000C482 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 16938 0000C48A 803805                  	cmp byte [rax], T_undefined
 16939 0000C48D 0F8411A50000            	je L_error_fvar_undefined
 16940 0000C493 803804                  	cmp byte [rax], T_closure
 16941 0000C496 0F858CA50000            	jne L_error_non_closure
 16942 0000C49C FF7001                  	push SOB_CLOSURE_ENV(rax)
 16943 0000C49F FF5009                  	call SOB_CLOSURE_CODE(rax)
 16944 0000C4A2 50                      	push rax
 16945 0000C4A3 6A01                    	push 1	; arg count
 16946 0000C4A5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16947 0000C4AA E822A60000              	call malloc
 16948 0000C4AF 50                      	push rax
 16949 0000C4B0 BF00000000              	mov rdi, 8 * 0	; new rib
 16950 0000C4B5 E817A60000              	call malloc
 16951 0000C4BA 50                      	push rax
 16952 0000C4BB BF08000000              	mov rdi, 8 * 1	; extended env
 16953 0000C4C0 E80CA60000              	call malloc
 16954 0000C4C5 488B7D10                	mov rdi, ENV
 16955 0000C4C9 BE00000000              	mov rsi, 0
 16956 0000C4CE BA01000000              	mov rdx, 1
 16957                                  .L_lambda_simple_env_loop_0060:	; ext_env[i + 1] <-- env[i]
 16958 0000C4D3 4883FE00                	cmp rsi, 0
 16959 0000C4D7 7410                    	je .L_lambda_simple_env_end_0060
 16960 0000C4D9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 16961 0000C4DD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 16962 0000C4E1 48FFC6                  	inc rsi
 16963 0000C4E4 48FFC2                  	inc rdx
 16964 0000C4E7 EBEA                    	jmp .L_lambda_simple_env_loop_0060
 16965                                  .L_lambda_simple_env_end_0060:
 16966 0000C4E9 5B                      	pop rbx
 16967 0000C4EA BE00000000              	mov rsi, 0
 16968                                  .L_lambda_simple_params_loop_0060:	; copy params
 16969 0000C4EF 4883FE00                	cmp rsi, 0
 16970 0000C4F3 740E                    	je .L_lambda_simple_params_end_0060
 16971 0000C4F5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 16972 0000C4FA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 16973 0000C4FE 48FFC6                  	inc rsi
 16974 0000C501 EBEC                    	jmp .L_lambda_simple_params_loop_0060
 16975                                  .L_lambda_simple_params_end_0060:
 16976 0000C503 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 16977 0000C506 4889C3                  	mov rbx, rax
 16978 0000C509 58                      	pop rax
 16979 0000C50A C60004                  	mov byte [rax], T_closure
 16980 0000C50D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 16981 0000C511 48C74009[1EC50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0060
 16982 0000C519 E963030000              	jmp .L_lambda_simple_end_0060
 16983                                  .L_lambda_simple_code_0060:	; lambda-simple body
 16984 0000C51E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 16985 0000C524 740B                    	je .L_lambda_simple_arity_check_ok_0060
 16986 0000C526 FF742410                	push qword [rsp + 8 * 2]
 16987 0000C52A 6A01                    	push 1
 16988 0000C52C E959A50000              	jmp L_error_incorrect_arity_simple
 16989                                  .L_lambda_simple_arity_check_ok_0060:
 16990 0000C531 C8000000                	enter 0, 0
 16991 0000C535 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 16992 0000C53A E892A50000              	call malloc
 16993 0000C53F 50                      	push rax
 16994 0000C540 BF08000000              	mov rdi, 8 * 1	; new rib
 16995 0000C545 E887A50000              	call malloc
 16996 0000C54A 50                      	push rax
 16997 0000C54B BF10000000              	mov rdi, 8 * 2	; extended env
 16998 0000C550 E87CA50000              	call malloc
 16999 0000C555 488B7D10                	mov rdi, ENV
 17000 0000C559 BE00000000              	mov rsi, 0
 17001 0000C55E BA01000000              	mov rdx, 1
 17002                                  .L_lambda_simple_env_loop_0061:	; ext_env[i + 1] <-- env[i]
 17003 0000C563 4883FE01                	cmp rsi, 1
 17004 0000C567 7410                    	je .L_lambda_simple_env_end_0061
 17005 0000C569 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17006 0000C56D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17007 0000C571 48FFC6                  	inc rsi
 17008 0000C574 48FFC2                  	inc rdx
 17009 0000C577 EBEA                    	jmp .L_lambda_simple_env_loop_0061
 17010                                  .L_lambda_simple_env_end_0061:
 17011 0000C579 5B                      	pop rbx
 17012 0000C57A BE00000000              	mov rsi, 0
 17013                                  .L_lambda_simple_params_loop_0061:	; copy params
 17014 0000C57F 4883FE01                	cmp rsi, 1
 17015 0000C583 740E                    	je .L_lambda_simple_params_end_0061
 17016 0000C585 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17017 0000C58A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17018 0000C58E 48FFC6                  	inc rsi
 17019 0000C591 EBEC                    	jmp .L_lambda_simple_params_loop_0061
 17020                                  .L_lambda_simple_params_end_0061:
 17021 0000C593 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17022 0000C596 4889C3                  	mov rbx, rax
 17023 0000C599 58                      	pop rax
 17024 0000C59A C60004                  	mov byte [rax], T_closure
 17025 0000C59D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17026 0000C5A1 48C74009[AEC50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0061
 17027 0000C5A9 E919010000              	jmp .L_lambda_simple_end_0061
 17028                                  .L_lambda_simple_code_0061:	; lambda-simple body
 17029 0000C5AE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17030 0000C5B4 740B                    	je .L_lambda_simple_arity_check_ok_0061
 17031 0000C5B6 FF742410                	push qword [rsp + 8 * 2]
 17032 0000C5BA 6A01                    	push 1
 17033 0000C5BC E9C9A40000              	jmp L_error_incorrect_arity_simple
 17034                                  .L_lambda_simple_arity_check_ok_0061:
 17035 0000C5C1 C8000000                	enter 0, 0
 17036                                  	; preparing a non-tail-call
 17037 0000C5C5 48B8-                   	mov rax, L_constants + 2571
 17037 0000C5C7 [0B0A000000000000] 
 17038 0000C5CF 50                      	push rax
 17039 0000C5D0 488B4520                	mov rax, PARAM(0)	; param ch
 17040 0000C5D4 50                      	push rax
 17041 0000C5D5 48B8-                   	mov rax, L_constants + 2569
 17041 0000C5D7 [090A000000000000] 
 17042 0000C5DF 50                      	push rax
 17043 0000C5E0 6A03                    	push 3	; arg count
 17044 0000C5E2 488B0425[9E120000]      	mov rax, qword [free_var_73]	; free var char<=?
 17045 0000C5EA 803805                  	cmp byte [rax], T_undefined
 17046 0000C5ED 0F84B1A30000            	je L_error_fvar_undefined
 17047 0000C5F3 803804                  	cmp byte [rax], T_closure
 17048 0000C5F6 0F852CA40000            	jne L_error_non_closure
 17049 0000C5FC FF7001                  	push SOB_CLOSURE_ENV(rax)
 17050 0000C5FF FF5009                  	call SOB_CLOSURE_CODE(rax)
 17051 0000C602 483D[02000000]          	cmp rax, sob_boolean_false
 17052 0000C608 0F84B1000000            	je .L_if_else_0059
 17053                                  	; preparing a tail-call
 17054                                  	; preparing a non-tail-call
 17055 0000C60E 488B4510                	mov rax, ENV
 17056 0000C612 488B00                  	mov rax, qword [rax + 8 * 0]
 17057 0000C615 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 17058 0000C618 50                      	push rax
 17059                                  	; preparing a non-tail-call
 17060 0000C619 488B4520                	mov rax, PARAM(0)	; param ch
 17061 0000C61D 50                      	push rax
 17062 0000C61E 6A01                    	push 1	; arg count
 17063 0000C620 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17064 0000C628 803805                  	cmp byte [rax], T_undefined
 17065 0000C62B 0F8473A30000            	je L_error_fvar_undefined
 17066 0000C631 803804                  	cmp byte [rax], T_closure
 17067 0000C634 0F85EEA30000            	jne L_error_non_closure
 17068 0000C63A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17069 0000C63D FF5009                  	call SOB_CLOSURE_CODE(rax)
 17070 0000C640 50                      	push rax
 17071 0000C641 6A02                    	push 2	; arg count
 17072 0000C643 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 17073 0000C64B 803805                  	cmp byte [rax], T_undefined
 17074 0000C64E 0F8450A30000            	je L_error_fvar_undefined
 17075 0000C654 803804                  	cmp byte [rax], T_closure
 17076 0000C657 0F85CBA30000            	jne L_error_non_closure
 17077 0000C65D FF7001                  	push SOB_CLOSURE_ENV(rax)
 17078 0000C660 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17079 0000C663 50                      	push rax
 17080 0000C664 6A01                    	push 1	; arg count
 17081 0000C666 488B0425[AE130000]      	mov rax, qword [free_var_89]	; free var integer->char
 17082 0000C66E 803805                  	cmp byte [rax], T_undefined
 17083 0000C671 0F842DA30000            	je L_error_fvar_undefined
 17084 0000C677 803804                  	cmp byte [rax], T_closure
 17085 0000C67A 0F85A8A30000            	jne L_error_non_closure
 17086 0000C680 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17087 0000C683 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 17088 0000C686 FF7500                  	push qword[rbp]
 17089 0000C689 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 17090 0000C68E 48895D10                	mov qword[rbp + 8*2],rbx
 17091 0000C692 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 17092 0000C69A BF00000000              	mov rdi,0
 17093 0000C69F EB00                    	jmp .L_tc_recycle_frame_loop_00ac
 17094                                  .L_tc_recycle_frame_loop_00ac:
 17095 0000C6A1 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 17096 0000C6A5 740F                    	je .L_tc_recycle_frame_done_00ac
 17097 0000C6A7 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 17098 0000C6AC 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 17099 0000C6B1 48FFC7                  	inc rdi
 17100 0000C6B4 EBEB                    	jmp .L_tc_recycle_frame_loop_00ac
 17101                                  .L_tc_recycle_frame_done_00ac:
 17102 0000C6B6 4889EC                  	mov rsp, rbp	; point to last argument
 17103 0000C6B9 5D                      	pop rbp
 17104 0000C6BA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17105 0000C6BD EB04                    	jmp .L_if_end_0059
 17106                                  .L_if_else_0059:
 17107 0000C6BF 488B4520                	mov rax, PARAM(0)	; param ch
 17108                                  .L_if_end_0059:
 17109 0000C6C3 C9                      	leave
 17110 0000C6C4 C21800                  	ret AND_KILL_FRAME(1)
 17111                                  .L_lambda_simple_end_0061:	; new closure is in rax
 17112 0000C6C7 48890425[7C120000]      	mov qword [free_var_71], rax
 17113 0000C6CF 48B8-                   	mov rax, sob_void
 17113 0000C6D1 [0000000000000000] 
 17114                                  
 17115 0000C6D9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17116 0000C6DE E8EEA30000              	call malloc
 17117 0000C6E3 50                      	push rax
 17118 0000C6E4 BF08000000              	mov rdi, 8 * 1	; new rib
 17119 0000C6E9 E8E3A30000              	call malloc
 17120 0000C6EE 50                      	push rax
 17121 0000C6EF BF10000000              	mov rdi, 8 * 2	; extended env
 17122 0000C6F4 E8D8A30000              	call malloc
 17123 0000C6F9 488B7D10                	mov rdi, ENV
 17124 0000C6FD BE00000000              	mov rsi, 0
 17125 0000C702 BA01000000              	mov rdx, 1
 17126                                  .L_lambda_simple_env_loop_0062:	; ext_env[i + 1] <-- env[i]
 17127 0000C707 4883FE01                	cmp rsi, 1
 17128 0000C70B 7410                    	je .L_lambda_simple_env_end_0062
 17129 0000C70D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17130 0000C711 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17131 0000C715 48FFC6                  	inc rsi
 17132 0000C718 48FFC2                  	inc rdx
 17133 0000C71B EBEA                    	jmp .L_lambda_simple_env_loop_0062
 17134                                  .L_lambda_simple_env_end_0062:
 17135 0000C71D 5B                      	pop rbx
 17136 0000C71E BE00000000              	mov rsi, 0
 17137                                  .L_lambda_simple_params_loop_0062:	; copy params
 17138 0000C723 4883FE01                	cmp rsi, 1
 17139 0000C727 740E                    	je .L_lambda_simple_params_end_0062
 17140 0000C729 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17141 0000C72E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17142 0000C732 48FFC6                  	inc rsi
 17143 0000C735 EBEC                    	jmp .L_lambda_simple_params_loop_0062
 17144                                  .L_lambda_simple_params_end_0062:
 17145 0000C737 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17146 0000C73A 4889C3                  	mov rbx, rax
 17147 0000C73D 58                      	pop rax
 17148 0000C73E C60004                  	mov byte [rax], T_closure
 17149 0000C741 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17150 0000C745 48C74009[52C70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0062
 17151 0000C74D E919010000              	jmp .L_lambda_simple_end_0062
 17152                                  .L_lambda_simple_code_0062:	; lambda-simple body
 17153 0000C752 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17154 0000C758 740B                    	je .L_lambda_simple_arity_check_ok_0062
 17155 0000C75A FF742410                	push qword [rsp + 8 * 2]
 17156 0000C75E 6A01                    	push 1
 17157 0000C760 E925A30000              	jmp L_error_incorrect_arity_simple
 17158                                  .L_lambda_simple_arity_check_ok_0062:
 17159 0000C765 C8000000                	enter 0, 0
 17160                                  	; preparing a non-tail-call
 17161 0000C769 48B8-                   	mov rax, L_constants + 2575
 17161 0000C76B [0F0A000000000000] 
 17162 0000C773 50                      	push rax
 17163 0000C774 488B4520                	mov rax, PARAM(0)	; param ch
 17164 0000C778 50                      	push rax
 17165 0000C779 48B8-                   	mov rax, L_constants + 2573
 17165 0000C77B [0D0A000000000000] 
 17166 0000C783 50                      	push rax
 17167 0000C784 6A03                    	push 3	; arg count
 17168 0000C786 488B0425[9E120000]      	mov rax, qword [free_var_73]	; free var char<=?
 17169 0000C78E 803805                  	cmp byte [rax], T_undefined
 17170 0000C791 0F840DA20000            	je L_error_fvar_undefined
 17171 0000C797 803804                  	cmp byte [rax], T_closure
 17172 0000C79A 0F8588A20000            	jne L_error_non_closure
 17173 0000C7A0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17174 0000C7A3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17175 0000C7A6 483D[02000000]          	cmp rax, sob_boolean_false
 17176 0000C7AC 0F84B1000000            	je .L_if_else_005a
 17177                                  	; preparing a tail-call
 17178                                  	; preparing a non-tail-call
 17179 0000C7B2 488B4510                	mov rax, ENV
 17180 0000C7B6 488B00                  	mov rax, qword [rax + 8 * 0]
 17181 0000C7B9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var delta
 17182 0000C7BC 50                      	push rax
 17183                                  	; preparing a non-tail-call
 17184 0000C7BD 488B4520                	mov rax, PARAM(0)	; param ch
 17185 0000C7C1 50                      	push rax
 17186 0000C7C2 6A01                    	push 1	; arg count
 17187 0000C7C4 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17188 0000C7CC 803805                  	cmp byte [rax], T_undefined
 17189 0000C7CF 0F84CFA10000            	je L_error_fvar_undefined
 17190 0000C7D5 803804                  	cmp byte [rax], T_closure
 17191 0000C7D8 0F854AA20000            	jne L_error_non_closure
 17192 0000C7DE FF7001                  	push SOB_CLOSURE_ENV(rax)
 17193 0000C7E1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17194 0000C7E4 50                      	push rax
 17195 0000C7E5 6A02                    	push 2	; arg count
 17196 0000C7E7 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 17197 0000C7EF 803805                  	cmp byte [rax], T_undefined
 17198 0000C7F2 0F84ACA10000            	je L_error_fvar_undefined
 17199 0000C7F8 803804                  	cmp byte [rax], T_closure
 17200 0000C7FB 0F8527A20000            	jne L_error_non_closure
 17201 0000C801 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17202 0000C804 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17203 0000C807 50                      	push rax
 17204 0000C808 6A01                    	push 1	; arg count
 17205 0000C80A 488B0425[AE130000]      	mov rax, qword [free_var_89]	; free var integer->char
 17206 0000C812 803805                  	cmp byte [rax], T_undefined
 17207 0000C815 0F8489A10000            	je L_error_fvar_undefined
 17208 0000C81B 803804                  	cmp byte [rax], T_closure
 17209 0000C81E 0F8504A20000            	jne L_error_non_closure
 17210 0000C824 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17211 0000C827 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 17212 0000C82A FF7500                  	push qword[rbp]
 17213 0000C82D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 17214 0000C832 48895D10                	mov qword[rbp + 8*2],rbx
 17215 0000C836 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 17216 0000C83E BF00000000              	mov rdi,0
 17217 0000C843 EB00                    	jmp .L_tc_recycle_frame_loop_00ad
 17218                                  .L_tc_recycle_frame_loop_00ad:
 17219 0000C845 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 17220 0000C849 740F                    	je .L_tc_recycle_frame_done_00ad
 17221 0000C84B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 17222 0000C850 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 17223 0000C855 48FFC7                  	inc rdi
 17224 0000C858 EBEB                    	jmp .L_tc_recycle_frame_loop_00ad
 17225                                  .L_tc_recycle_frame_done_00ad:
 17226 0000C85A 4889EC                  	mov rsp, rbp	; point to last argument
 17227 0000C85D 5D                      	pop rbp
 17228 0000C85E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17229 0000C861 EB04                    	jmp .L_if_end_005a
 17230                                  .L_if_else_005a:
 17231 0000C863 488B4520                	mov rax, PARAM(0)	; param ch
 17232                                  .L_if_end_005a:
 17233 0000C867 C9                      	leave
 17234 0000C868 C21800                  	ret AND_KILL_FRAME(1)
 17235                                  .L_lambda_simple_end_0062:	; new closure is in rax
 17236 0000C86B 48890425[8D120000]      	mov qword [free_var_72], rax
 17237 0000C873 48B8-                   	mov rax, sob_void
 17237 0000C875 [0000000000000000] 
 17238 0000C87D C9                      	leave
 17239 0000C87E C21800                  	ret AND_KILL_FRAME(1)
 17240                                  .L_lambda_simple_end_0060:	; new closure is in rax
 17241 0000C881 803804                  	cmp byte [rax], T_closure
 17242 0000C884 0F859EA10000            	jne L_error_non_closure
 17243 0000C88A FF7001                  	push SOB_CLOSURE_ENV(rax)
 17244 0000C88D FF5009                  	call SOB_CLOSURE_CODE(rax)
 17245                                  
 17246 0000C890 4889C7                  	mov rdi, rax
 17247 0000C893 E88EA40000              	call print_sexpr_if_not_void
 17248 0000C898 48B8-                   	mov rax, L_constants + 0
 17248 0000C89A [0000000000000000] 
 17249 0000C8A2 48890425[38120000]      	mov qword [free_var_67], rax
 17250 0000C8AA 48B8-                   	mov rax, sob_void
 17250 0000C8AC [0000000000000000] 
 17251                                  
 17252 0000C8B4 4889C7                  	mov rdi, rax
 17253 0000C8B7 E86AA40000              	call print_sexpr_if_not_void
 17254 0000C8BC 48B8-                   	mov rax, L_constants + 0
 17254 0000C8BE [0000000000000000] 
 17255 0000C8C6 48890425[27120000]      	mov qword [free_var_66], rax
 17256 0000C8CE 48B8-                   	mov rax, sob_void
 17256 0000C8D0 [0000000000000000] 
 17257                                  
 17258 0000C8D8 4889C7                  	mov rdi, rax
 17259 0000C8DB E846A40000              	call print_sexpr_if_not_void
 17260 0000C8E0 48B8-                   	mov rax, L_constants + 0
 17260 0000C8E2 [0000000000000000] 
 17261 0000C8EA 48890425[49120000]      	mov qword [free_var_68], rax
 17262 0000C8F2 48B8-                   	mov rax, sob_void
 17262 0000C8F4 [0000000000000000] 
 17263                                  
 17264 0000C8FC 4889C7                  	mov rdi, rax
 17265 0000C8FF E822A40000              	call print_sexpr_if_not_void
 17266 0000C904 48B8-                   	mov rax, L_constants + 0
 17266 0000C906 [0000000000000000] 
 17267 0000C90E 48890425[6B120000]      	mov qword [free_var_70], rax
 17268 0000C916 48B8-                   	mov rax, sob_void
 17268 0000C918 [0000000000000000] 
 17269                                  
 17270 0000C920 4889C7                  	mov rdi, rax
 17271 0000C923 E8FEA30000              	call print_sexpr_if_not_void
 17272 0000C928 48B8-                   	mov rax, L_constants + 0
 17272 0000C92A [0000000000000000] 
 17273 0000C932 48890425[5A120000]      	mov qword [free_var_69], rax
 17274 0000C93A 48B8-                   	mov rax, sob_void
 17274 0000C93C [0000000000000000] 
 17275                                  
 17276 0000C944 4889C7                  	mov rdi, rax
 17277 0000C947 E8DAA30000              	call print_sexpr_if_not_void
 17278                                  	; preparing a non-tail-call
 17279 0000C94C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17280 0000C951 E87BA10000              	call malloc
 17281 0000C956 50                      	push rax
 17282 0000C957 BF00000000              	mov rdi, 8 * 0	; new rib
 17283 0000C95C E870A10000              	call malloc
 17284 0000C961 50                      	push rax
 17285 0000C962 BF08000000              	mov rdi, 8 * 1	; extended env
 17286 0000C967 E865A10000              	call malloc
 17287 0000C96C 488B7D10                	mov rdi, ENV
 17288 0000C970 BE00000000              	mov rsi, 0
 17289 0000C975 BA01000000              	mov rdx, 1
 17290                                  .L_lambda_simple_env_loop_0063:	; ext_env[i + 1] <-- env[i]
 17291 0000C97A 4883FE00                	cmp rsi, 0
 17292 0000C97E 7410                    	je .L_lambda_simple_env_end_0063
 17293 0000C980 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17294 0000C984 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17295 0000C988 48FFC6                  	inc rsi
 17296 0000C98B 48FFC2                  	inc rdx
 17297 0000C98E EBEA                    	jmp .L_lambda_simple_env_loop_0063
 17298                                  .L_lambda_simple_env_end_0063:
 17299 0000C990 5B                      	pop rbx
 17300 0000C991 BE00000000              	mov rsi, 0
 17301                                  .L_lambda_simple_params_loop_0063:	; copy params
 17302 0000C996 4883FE00                	cmp rsi, 0
 17303 0000C99A 740E                    	je .L_lambda_simple_params_end_0063
 17304 0000C99C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17305 0000C9A1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17306 0000C9A5 48FFC6                  	inc rsi
 17307 0000C9A8 EBEC                    	jmp .L_lambda_simple_params_loop_0063
 17308                                  .L_lambda_simple_params_end_0063:
 17309 0000C9AA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17310 0000C9AD 4889C3                  	mov rbx, rax
 17311 0000C9B0 58                      	pop rax
 17312 0000C9B1 C60004                  	mov byte [rax], T_closure
 17313 0000C9B4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17314 0000C9B8 48C74009[C5C90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0063
 17315 0000C9C0 E9CE040000              	jmp .L_lambda_simple_end_0063
 17316                                  .L_lambda_simple_code_0063:	; lambda-simple body
 17317 0000C9C5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17318 0000C9CB 740B                    	je .L_lambda_simple_arity_check_ok_0063
 17319 0000C9CD FF742410                	push qword [rsp + 8 * 2]
 17320 0000C9D1 6A01                    	push 1
 17321 0000C9D3 E9B2A00000              	jmp L_error_incorrect_arity_simple
 17322                                  .L_lambda_simple_arity_check_ok_0063:
 17323 0000C9D8 C8000000                	enter 0, 0
 17324 0000C9DC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17325 0000C9E1 E8EBA00000              	call malloc
 17326 0000C9E6 50                      	push rax
 17327 0000C9E7 BF08000000              	mov rdi, 8 * 1	; new rib
 17328 0000C9EC E8E0A00000              	call malloc
 17329 0000C9F1 50                      	push rax
 17330 0000C9F2 BF10000000              	mov rdi, 8 * 2	; extended env
 17331 0000C9F7 E8D5A00000              	call malloc
 17332 0000C9FC 488B7D10                	mov rdi, ENV
 17333 0000CA00 BE00000000              	mov rsi, 0
 17334 0000CA05 BA01000000              	mov rdx, 1
 17335                                  .L_lambda_opt_env_loop_0010:	; ext_env[i + 1] <-- env[i]
 17336 0000CA0A 4883FE01                	cmp rsi, 1
 17337 0000CA0E 7410                    	je .L_lambda_opt_env_end_0010
 17338 0000CA10 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17339 0000CA14 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17340 0000CA18 48FFC6                  	inc rsi
 17341 0000CA1B 48FFC2                  	inc rdx
 17342 0000CA1E EBEA                    	jmp .L_lambda_opt_env_loop_0010
 17343                                  .L_lambda_opt_env_end_0010:
 17344 0000CA20 5B                      	pop rbx
 17345 0000CA21 BE00000000              	mov rsi, 0
 17346                                  .L_lambda_opt_params_loop_0010:	; copy params
 17347 0000CA26 4883FE01                	cmp rsi, 1
 17348 0000CA2A 740E                    	je .L_lambda_opt_params_end_0010
 17349 0000CA2C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17350 0000CA31 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17351 0000CA35 48FFC6                  	inc rsi
 17352 0000CA38 EBEC                    	jmp .L_lambda_opt_params_loop_0010
 17353                                  .L_lambda_opt_params_end_0010:
 17354 0000CA3A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17355 0000CA3D 4889C3                  	mov rbx, rax
 17356 0000CA40 58                      	pop rax
 17357 0000CA41 C60004                  	mov byte [rax], T_closure
 17358 0000CA44 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17359 0000CA48 48C74009[55CA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0010
 17360 0000CA50 E93A040000              	jmp .L_lambda_opt_end_0010
 17361                                  .L_lambda_opt_code_0010:	; lambda-opt body
 17362 0000CA55 48837C241000            	cmp qword [rsp + 8 * 2], 0
 17363 0000CA5B 7411                    	je .L_lambda_opt_arity_check_exact_0010
 17364 0000CA5D 0F8FEA010000            	jg .L_lambda_opt_arity_check_more_0010
 17365 0000CA63 FF742410                	push qword [rsp + 8 * 2]
 17366 0000CA67 6A00                    	push 0
 17367 0000CA69 E930A00000              	jmp L_error_incorrect_arity_opt
 17368                                  .L_lambda_opt_arity_check_exact_0010:
 17369 0000CA6E 4883EC08                	sub rsp, 8
 17370 0000CA72 488B442408              	mov rax, qword[rsp + 8 *1]
 17371 0000CA77 48890424                	mov qword[rsp], rax  
 17372 0000CA7B 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 17373 0000CA80 4889442408              	mov qword[rsp + 8 * 1], rax
 17374 0000CA85 B801000000              	mov rax, 1
 17375 0000CA8A 4889442410              	mov qword[rsp + 8 *2], rax
 17376 0000CA8F 48B8-                   	mov rax, sob_nil
 17376 0000CA91 [0100000000000000] 
 17377 0000CA99 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 17378 0000CA9E C8000000                	enter 0, 0
 17379                                  	; preparing a tail-call
 17380                                  	; preparing a non-tail-call
 17381 0000CAA2 488B4520                	mov rax, PARAM(0)	; param s
 17382 0000CAA6 50                      	push rax
 17383 0000CAA7 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17384 0000CAAC E820A00000              	call malloc
 17385 0000CAB1 50                      	push rax
 17386 0000CAB2 BF08000000              	mov rdi, 8 * 1	; new rib
 17387 0000CAB7 E815A00000              	call malloc
 17388 0000CABC 50                      	push rax
 17389 0000CABD BF18000000              	mov rdi, 8 * 3	; extended env
 17390 0000CAC2 E80AA00000              	call malloc
 17391 0000CAC7 488B7D10                	mov rdi, ENV
 17392 0000CACB BE00000000              	mov rsi, 0
 17393 0000CAD0 BA01000000              	mov rdx, 1
 17394                                  .L_lambda_simple_env_loop_0065:	; ext_env[i + 1] <-- env[i]
 17395 0000CAD5 4883FE02                	cmp rsi, 2
 17396 0000CAD9 7410                    	je .L_lambda_simple_env_end_0065
 17397 0000CADB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17398 0000CADF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17399 0000CAE3 48FFC6                  	inc rsi
 17400 0000CAE6 48FFC2                  	inc rdx
 17401 0000CAE9 EBEA                    	jmp .L_lambda_simple_env_loop_0065
 17402                                  .L_lambda_simple_env_end_0065:
 17403 0000CAEB 5B                      	pop rbx
 17404 0000CAEC BE00000000              	mov rsi, 0
 17405                                  .L_lambda_simple_params_loop_0065:	; copy params
 17406 0000CAF1 4883FE01                	cmp rsi, 1
 17407 0000CAF5 740E                    	je .L_lambda_simple_params_end_0065
 17408 0000CAF7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17409 0000CAFC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17410 0000CB00 48FFC6                  	inc rsi
 17411 0000CB03 EBEC                    	jmp .L_lambda_simple_params_loop_0065
 17412                                  .L_lambda_simple_params_end_0065:
 17413 0000CB05 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17414 0000CB08 4889C3                  	mov rbx, rax
 17415 0000CB0B 58                      	pop rax
 17416 0000CB0C C60004                  	mov byte [rax], T_closure
 17417 0000CB0F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17418 0000CB13 48C74009[20CB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0065
 17419 0000CB1B E99C000000              	jmp .L_lambda_simple_end_0065
 17420                                  .L_lambda_simple_code_0065:	; lambda-simple body
 17421 0000CB20 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17422 0000CB26 740B                    	je .L_lambda_simple_arity_check_ok_0065
 17423 0000CB28 FF742410                	push qword [rsp + 8 * 2]
 17424 0000CB2C 6A01                    	push 1
 17425 0000CB2E E9579F0000              	jmp L_error_incorrect_arity_simple
 17426                                  .L_lambda_simple_arity_check_ok_0065:
 17427 0000CB33 C8000000                	enter 0, 0
 17428                                  	; preparing a tail-call
 17429                                  	; preparing a non-tail-call
 17430 0000CB37 488B4520                	mov rax, PARAM(0)	; param ch
 17431 0000CB3B 50                      	push rax
 17432 0000CB3C 6A01                    	push 1	; arg count
 17433 0000CB3E 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 17434 0000CB46 803805                  	cmp byte [rax], T_undefined
 17435 0000CB49 0F84559E0000            	je L_error_fvar_undefined
 17436 0000CB4F 803804                  	cmp byte [rax], T_closure
 17437 0000CB52 0F85D09E0000            	jne L_error_non_closure
 17438 0000CB58 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17439 0000CB5B FF5009                  	call SOB_CLOSURE_CODE(rax)
 17440 0000CB5E 50                      	push rax
 17441 0000CB5F 6A01                    	push 1	; arg count
 17442 0000CB61 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17443 0000CB69 803805                  	cmp byte [rax], T_undefined
 17444 0000CB6C 0F84329E0000            	je L_error_fvar_undefined
 17445 0000CB72 803804                  	cmp byte [rax], T_closure
 17446 0000CB75 0F85AD9E0000            	jne L_error_non_closure
 17447 0000CB7B FF7001                  	push SOB_CLOSURE_ENV(rax)
 17448 0000CB7E FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 17449 0000CB81 FF7500                  	push qword[rbp]
 17450 0000CB84 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 17451 0000CB89 48895D10                	mov qword[rbp + 8*2],rbx
 17452 0000CB8D 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 17453 0000CB95 BF00000000              	mov rdi,0
 17454 0000CB9A EB00                    	jmp .L_tc_recycle_frame_loop_00b0
 17455                                  .L_tc_recycle_frame_loop_00b0:
 17456 0000CB9C 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 17457 0000CBA0 740F                    	je .L_tc_recycle_frame_done_00b0
 17458 0000CBA2 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 17459 0000CBA7 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 17460 0000CBAC 48FFC7                  	inc rdi
 17461 0000CBAF EBEB                    	jmp .L_tc_recycle_frame_loop_00b0
 17462                                  .L_tc_recycle_frame_done_00b0:
 17463 0000CBB1 4889EC                  	mov rsp, rbp	; point to last argument
 17464 0000CBB4 5D                      	pop rbp
 17465 0000CBB5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17466 0000CBB8 C9                      	leave
 17467 0000CBB9 C21800                  	ret AND_KILL_FRAME(1)
 17468                                  .L_lambda_simple_end_0065:	; new closure is in rax
 17469 0000CBBC 50                      	push rax
 17470 0000CBBD 6A02                    	push 2	; arg count
 17471 0000CBBF 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 17472 0000CBC7 803805                  	cmp byte [rax], T_undefined
 17473 0000CBCA 0F84D49D0000            	je L_error_fvar_undefined
 17474 0000CBD0 803804                  	cmp byte [rax], T_closure
 17475 0000CBD3 0F854F9E0000            	jne L_error_non_closure
 17476 0000CBD9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17477 0000CBDC FF5009                  	call SOB_CLOSURE_CODE(rax)
 17478 0000CBDF 50                      	push rax
 17479 0000CBE0 488B4510                	mov rax, ENV
 17480 0000CBE4 488B00                  	mov rax, qword [rax + 8 * 0]
 17481 0000CBE7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 17482 0000CBEA 50                      	push rax
 17483 0000CBEB 6A02                    	push 2	; arg count
 17484 0000CBED 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 17485 0000CBF5 803805                  	cmp byte [rax], T_undefined
 17486 0000CBF8 0F84A69D0000            	je L_error_fvar_undefined
 17487 0000CBFE 803804                  	cmp byte [rax], T_closure
 17488 0000CC01 0F85219E0000            	jne L_error_non_closure
 17489 0000CC07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17490 0000CC0A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 17491 0000CC0D FF7500                  	push qword[rbp]
 17492 0000CC10 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 17493 0000CC15 48895D10                	mov qword[rbp + 8*2],rbx
 17494 0000CC19 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 17495 0000CC21 BF00000000              	mov rdi,0
 17496 0000CC26 EB00                    	jmp .L_tc_recycle_frame_loop_00b1
 17497                                  .L_tc_recycle_frame_loop_00b1:
 17498 0000CC28 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 17499 0000CC2C 740F                    	je .L_tc_recycle_frame_done_00b1
 17500 0000CC2E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 17501 0000CC33 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 17502 0000CC38 48FFC7                  	inc rdi
 17503 0000CC3B EBEB                    	jmp .L_tc_recycle_frame_loop_00b1
 17504                                  .L_tc_recycle_frame_done_00b1:
 17505 0000CC3D 4889EC                  	mov rsp, rbp	; point to last argument
 17506 0000CC40 5D                      	pop rbp
 17507 0000CC41 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17508 0000CC44 C9                      	leave
 17509 0000CC45 C21800                  	ret AND_KILL_FRAME(1)
 17510 0000CC48 E942020000              	jmp .L_lambda_opt_end_0010	; new closure is in rax
 17511                                  .L_lambda_opt_arity_check_more_0010:
 17512 0000CC4D 488B442410              	mov rax, qword[rsp + 2 * 8]
 17513 0000CC52 4889C7                  	mov rdi, rax
 17514 0000CC55 49B9-                   	mov r9, sob_nil
 17514 0000CC57 [0100000000000000] 
 17515 0000CC5F 4C8B442410              	mov r8, qword[rsp+2*8]
 17516                                  .L_lambda_opt_stack_shrink_loop_0010:
 17517 0000CC64 4983F800                	cmp r8, 0
 17518 0000CC68 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0010
 17519 0000CC6A 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 17520 0000CC6F BF11000000              	mov rdi, 1+8+8	;for pair
 17521 0000CC74 E8589E0000              	call malloc	 ;to create the pair in the stack
 17522 0000CC79 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 17523 0000CC7C 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 17524 0000CC80 4C894809                 	mov qword[rax+1+8],r9
 17525 0000CC84 4989C1                  	mov r9 , rax	 ; for the recursion 
 17526 0000CC87 49FFC8                  	dec r8
 17527 0000CC8A EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0010
 17528                                  .L_lambda_opt_stack_shrink_loop_exit_0010:
 17529 0000CC8C 488B442410              	mov rax, qword[rsp + 2 * 8]
 17530 0000CC91 BF01000000              	mov rdi, 1
 17531 0000CC96 4829F8                  	sub rax, rdi
 17532 0000CC99 4889C7                  	mov rdi, rax
 17533 0000CC9C 486BC008                	imul rax,8
 17534 0000CCA0 4801C4                  	add rsp, rax
 17535 0000CCA3 4889E0                  	mov rax, rsp
 17536 0000CCA6 4989F8                  	mov r8, rdi
 17537 0000CCA9 4D6BC008                	imul r8, 8
 17538 0000CCAD 4C29C0                  	sub rax, r8
 17539 0000CCB0 4989C2                  	mov r10, rax	; holds the original ret in the stack
 17540 0000CCB3 4983C218                	add r10, 8*3
 17541 0000CCB7 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 17542 0000CCBB 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 17543 0000CCBE 4D6BC008                	imul r8,8
 17544 0000CCC2 4C01C0                  	add rax, r8
 17545 0000CCC5 4C8908                  	mov qword[rax] ,r9
 17546 0000CCC8 4983EA18                 	sub r10, 8*3
 17547 0000CCCC 48C744241001000000      	mov qword [rsp+2*8], 1
 17548 0000CCD5 498B4208                	mov rax, qword[r10 + 1 * 8]
 17549 0000CCD9 4889442408              	mov qword[rsp + 1*8] ,rax
 17550 0000CCDE 498B02                  	mov rax, qword[r10]
 17551 0000CCE1 48890424                	mov qword[rsp], rax
 17552 0000CCE5 C8000000                	enter 0, 0
 17553                                  	; preparing a tail-call
 17554                                  	; preparing a non-tail-call
 17555 0000CCE9 488B4520                	mov rax, PARAM(0)	; param s
 17556 0000CCED 50                      	push rax
 17557 0000CCEE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17558 0000CCF3 E8D99D0000              	call malloc
 17559 0000CCF8 50                      	push rax
 17560 0000CCF9 BF08000000              	mov rdi, 8 * 1	; new rib
 17561 0000CCFE E8CE9D0000              	call malloc
 17562 0000CD03 50                      	push rax
 17563 0000CD04 BF18000000              	mov rdi, 8 * 3	; extended env
 17564 0000CD09 E8C39D0000              	call malloc
 17565 0000CD0E 488B7D10                	mov rdi, ENV
 17566 0000CD12 BE00000000              	mov rsi, 0
 17567 0000CD17 BA01000000              	mov rdx, 1
 17568                                  .L_lambda_simple_env_loop_0064:	; ext_env[i + 1] <-- env[i]
 17569 0000CD1C 4883FE02                	cmp rsi, 2
 17570 0000CD20 7410                    	je .L_lambda_simple_env_end_0064
 17571 0000CD22 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17572 0000CD26 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17573 0000CD2A 48FFC6                  	inc rsi
 17574 0000CD2D 48FFC2                  	inc rdx
 17575 0000CD30 EBEA                    	jmp .L_lambda_simple_env_loop_0064
 17576                                  .L_lambda_simple_env_end_0064:
 17577 0000CD32 5B                      	pop rbx
 17578 0000CD33 BE00000000              	mov rsi, 0
 17579                                  .L_lambda_simple_params_loop_0064:	; copy params
 17580 0000CD38 4883FE01                	cmp rsi, 1
 17581 0000CD3C 740E                    	je .L_lambda_simple_params_end_0064
 17582 0000CD3E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17583 0000CD43 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17584 0000CD47 48FFC6                  	inc rsi
 17585 0000CD4A EBEC                    	jmp .L_lambda_simple_params_loop_0064
 17586                                  .L_lambda_simple_params_end_0064:
 17587 0000CD4C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17588 0000CD4F 4889C3                  	mov rbx, rax
 17589 0000CD52 58                      	pop rax
 17590 0000CD53 C60004                  	mov byte [rax], T_closure
 17591 0000CD56 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17592 0000CD5A 48C74009[67CD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0064
 17593 0000CD62 E99C000000              	jmp .L_lambda_simple_end_0064
 17594                                  .L_lambda_simple_code_0064:	; lambda-simple body
 17595 0000CD67 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17596 0000CD6D 740B                    	je .L_lambda_simple_arity_check_ok_0064
 17597 0000CD6F FF742410                	push qword [rsp + 8 * 2]
 17598 0000CD73 6A01                    	push 1
 17599 0000CD75 E9109D0000              	jmp L_error_incorrect_arity_simple
 17600                                  .L_lambda_simple_arity_check_ok_0064:
 17601 0000CD7A C8000000                	enter 0, 0
 17602                                  	; preparing a tail-call
 17603                                  	; preparing a non-tail-call
 17604 0000CD7E 488B4520                	mov rax, PARAM(0)	; param ch
 17605 0000CD82 50                      	push rax
 17606 0000CD83 6A01                    	push 1	; arg count
 17607 0000CD85 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 17608 0000CD8D 803805                  	cmp byte [rax], T_undefined
 17609 0000CD90 0F840E9C0000            	je L_error_fvar_undefined
 17610 0000CD96 803804                  	cmp byte [rax], T_closure
 17611 0000CD99 0F85899C0000            	jne L_error_non_closure
 17612 0000CD9F FF7001                  	push SOB_CLOSURE_ENV(rax)
 17613 0000CDA2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17614 0000CDA5 50                      	push rax
 17615 0000CDA6 6A01                    	push 1	; arg count
 17616 0000CDA8 488B0425[16120000]      	mov rax, qword [free_var_65]	; free var char->integer
 17617 0000CDB0 803805                  	cmp byte [rax], T_undefined
 17618 0000CDB3 0F84EB9B0000            	je L_error_fvar_undefined
 17619 0000CDB9 803804                  	cmp byte [rax], T_closure
 17620 0000CDBC 0F85669C0000            	jne L_error_non_closure
 17621 0000CDC2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17622 0000CDC5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 17623 0000CDC8 FF7500                  	push qword[rbp]
 17624 0000CDCB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 17625 0000CDD0 48895D10                	mov qword[rbp + 8*2],rbx
 17626 0000CDD4 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 17627 0000CDDC BF00000000              	mov rdi,0
 17628 0000CDE1 EB00                    	jmp .L_tc_recycle_frame_loop_00ae
 17629                                  .L_tc_recycle_frame_loop_00ae:
 17630 0000CDE3 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 17631 0000CDE7 740F                    	je .L_tc_recycle_frame_done_00ae
 17632 0000CDE9 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 17633 0000CDEE 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 17634 0000CDF3 48FFC7                  	inc rdi
 17635 0000CDF6 EBEB                    	jmp .L_tc_recycle_frame_loop_00ae
 17636                                  .L_tc_recycle_frame_done_00ae:
 17637 0000CDF8 4889EC                  	mov rsp, rbp	; point to last argument
 17638 0000CDFB 5D                      	pop rbp
 17639 0000CDFC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17640 0000CDFF C9                      	leave
 17641 0000CE00 C21800                  	ret AND_KILL_FRAME(1)
 17642                                  .L_lambda_simple_end_0064:	; new closure is in rax
 17643 0000CE03 50                      	push rax
 17644 0000CE04 6A02                    	push 2	; arg count
 17645 0000CE06 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 17646 0000CE0E 803805                  	cmp byte [rax], T_undefined
 17647 0000CE11 0F848D9B0000            	je L_error_fvar_undefined
 17648 0000CE17 803804                  	cmp byte [rax], T_closure
 17649 0000CE1A 0F85089C0000            	jne L_error_non_closure
 17650 0000CE20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17651 0000CE23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17652 0000CE26 50                      	push rax
 17653 0000CE27 488B4510                	mov rax, ENV
 17654 0000CE2B 488B00                  	mov rax, qword [rax + 8 * 0]
 17655 0000CE2E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var comparator
 17656 0000CE31 50                      	push rax
 17657 0000CE32 6A02                    	push 2	; arg count
 17658 0000CE34 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 17659 0000CE3C 803805                  	cmp byte [rax], T_undefined
 17660 0000CE3F 0F845F9B0000            	je L_error_fvar_undefined
 17661 0000CE45 803804                  	cmp byte [rax], T_closure
 17662 0000CE48 0F85DA9B0000            	jne L_error_non_closure
 17663 0000CE4E FF7001                  	push SOB_CLOSURE_ENV(rax)
 17664 0000CE51 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 17665 0000CE54 FF7500                  	push qword[rbp]
 17666 0000CE57 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 17667 0000CE5C 48895D10                	mov qword[rbp + 8*2],rbx
 17668 0000CE60 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 17669 0000CE68 BF00000000              	mov rdi,0
 17670 0000CE6D EB00                    	jmp .L_tc_recycle_frame_loop_00af
 17671                                  .L_tc_recycle_frame_loop_00af:
 17672 0000CE6F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 17673 0000CE73 740F                    	je .L_tc_recycle_frame_done_00af
 17674 0000CE75 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 17675 0000CE7A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 17676 0000CE7F 48FFC7                  	inc rdi
 17677 0000CE82 EBEB                    	jmp .L_tc_recycle_frame_loop_00af
 17678                                  .L_tc_recycle_frame_done_00af:
 17679 0000CE84 4889EC                  	mov rsp, rbp	; point to last argument
 17680 0000CE87 5D                      	pop rbp
 17681 0000CE88 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17682 0000CE8B C9                      	leave
 17683 0000CE8C C21800                  	ret AND_KILL_FRAME(1)
 17684                                  .L_lambda_opt_end_0010:	; new closure is in rax
 17685 0000CE8F C9                      	leave
 17686 0000CE90 C21800                  	ret AND_KILL_FRAME(1)
 17687                                  .L_lambda_simple_end_0063:	; new closure is in rax
 17688 0000CE93 50                      	push rax
 17689 0000CE94 6A01                    	push 1	; arg count
 17690 0000CE96 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17691 0000CE9B E8319C0000              	call malloc
 17692 0000CEA0 50                      	push rax
 17693 0000CEA1 BF00000000              	mov rdi, 8 * 0	; new rib
 17694 0000CEA6 E8269C0000              	call malloc
 17695 0000CEAB 50                      	push rax
 17696 0000CEAC BF08000000              	mov rdi, 8 * 1	; extended env
 17697 0000CEB1 E81B9C0000              	call malloc
 17698 0000CEB6 488B7D10                	mov rdi, ENV
 17699 0000CEBA BE00000000              	mov rsi, 0
 17700 0000CEBF BA01000000              	mov rdx, 1
 17701                                  .L_lambda_simple_env_loop_0066:	; ext_env[i + 1] <-- env[i]
 17702 0000CEC4 4883FE00                	cmp rsi, 0
 17703 0000CEC8 7410                    	je .L_lambda_simple_env_end_0066
 17704 0000CECA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17705 0000CECE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17706 0000CED2 48FFC6                  	inc rsi
 17707 0000CED5 48FFC2                  	inc rdx
 17708 0000CED8 EBEA                    	jmp .L_lambda_simple_env_loop_0066
 17709                                  .L_lambda_simple_env_end_0066:
 17710 0000CEDA 5B                      	pop rbx
 17711 0000CEDB BE00000000              	mov rsi, 0
 17712                                  .L_lambda_simple_params_loop_0066:	; copy params
 17713 0000CEE0 4883FE00                	cmp rsi, 0
 17714 0000CEE4 740E                    	je .L_lambda_simple_params_end_0066
 17715 0000CEE6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17716 0000CEEB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17717 0000CEEF 48FFC6                  	inc rsi
 17718 0000CEF2 EBEC                    	jmp .L_lambda_simple_params_loop_0066
 17719                                  .L_lambda_simple_params_end_0066:
 17720 0000CEF4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17721 0000CEF7 4889C3                  	mov rbx, rax
 17722 0000CEFA 58                      	pop rax
 17723 0000CEFB C60004                  	mov byte [rax], T_closure
 17724 0000CEFE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17725 0000CF02 48C74009[0FCF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0066
 17726 0000CF0A E938010000              	jmp .L_lambda_simple_end_0066
 17727                                  .L_lambda_simple_code_0066:	; lambda-simple body
 17728 0000CF0F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17729 0000CF15 740B                    	je .L_lambda_simple_arity_check_ok_0066
 17730 0000CF17 FF742410                	push qword [rsp + 8 * 2]
 17731 0000CF1B 6A01                    	push 1
 17732 0000CF1D E9689B0000              	jmp L_error_incorrect_arity_simple
 17733                                  .L_lambda_simple_arity_check_ok_0066:
 17734 0000CF22 C8000000                	enter 0, 0
 17735                                  	; preparing a non-tail-call
 17736 0000CF26 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 17737 0000CF2E 803805                  	cmp byte [rax], T_undefined
 17738 0000CF31 0F846D9A0000            	je L_error_fvar_undefined
 17739 0000CF37 50                      	push rax
 17740 0000CF38 6A01                    	push 1	; arg count
 17741 0000CF3A 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17742 0000CF3E 803804                  	cmp byte [rax], T_closure
 17743 0000CF41 0F85E19A0000            	jne L_error_non_closure
 17744 0000CF47 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17745 0000CF4A FF5009                  	call SOB_CLOSURE_CODE(rax)
 17746 0000CF4D 48890425[38120000]      	mov qword [free_var_67], rax
 17747 0000CF55 48B8-                   	mov rax, sob_void
 17747 0000CF57 [0000000000000000] 
 17748                                  
 17749                                  	; preparing a non-tail-call
 17750 0000CF5F 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 17751 0000CF67 803805                  	cmp byte [rax], T_undefined
 17752 0000CF6A 0F84349A0000            	je L_error_fvar_undefined
 17753 0000CF70 50                      	push rax
 17754 0000CF71 6A01                    	push 1	; arg count
 17755 0000CF73 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17756 0000CF77 803804                  	cmp byte [rax], T_closure
 17757 0000CF7A 0F85A89A0000            	jne L_error_non_closure
 17758 0000CF80 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17759 0000CF83 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17760 0000CF86 48890425[27120000]      	mov qword [free_var_66], rax
 17761 0000CF8E 48B8-                   	mov rax, sob_void
 17761 0000CF90 [0000000000000000] 
 17762                                  
 17763                                  	; preparing a non-tail-call
 17764 0000CF98 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 17765 0000CFA0 803805                  	cmp byte [rax], T_undefined
 17766 0000CFA3 0F84FB990000            	je L_error_fvar_undefined
 17767 0000CFA9 50                      	push rax
 17768 0000CFAA 6A01                    	push 1	; arg count
 17769 0000CFAC 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17770 0000CFB0 803804                  	cmp byte [rax], T_closure
 17771 0000CFB3 0F856F9A0000            	jne L_error_non_closure
 17772 0000CFB9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17773 0000CFBC FF5009                  	call SOB_CLOSURE_CODE(rax)
 17774 0000CFBF 48890425[49120000]      	mov qword [free_var_68], rax
 17775 0000CFC7 48B8-                   	mov rax, sob_void
 17775 0000CFC9 [0000000000000000] 
 17776                                  
 17777                                  	; preparing a non-tail-call
 17778 0000CFD1 488B0425[3C0E0000]      	mov rax, qword [free_var_7]	; free var >
 17779 0000CFD9 803805                  	cmp byte [rax], T_undefined
 17780 0000CFDC 0F84C2990000            	je L_error_fvar_undefined
 17781 0000CFE2 50                      	push rax
 17782 0000CFE3 6A01                    	push 1	; arg count
 17783 0000CFE5 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17784 0000CFE9 803804                  	cmp byte [rax], T_closure
 17785 0000CFEC 0F85369A0000            	jne L_error_non_closure
 17786 0000CFF2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17787 0000CFF5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17788 0000CFF8 48890425[6B120000]      	mov qword [free_var_70], rax
 17789 0000D000 48B8-                   	mov rax, sob_void
 17789 0000D002 [0000000000000000] 
 17790                                  
 17791                                  	; preparing a non-tail-call
 17792 0000D00A 488B0425[4D0E0000]      	mov rax, qword [free_var_8]	; free var >=
 17793 0000D012 803805                  	cmp byte [rax], T_undefined
 17794 0000D015 0F8489990000            	je L_error_fvar_undefined
 17795 0000D01B 50                      	push rax
 17796 0000D01C 6A01                    	push 1	; arg count
 17797 0000D01E 488B4520                	mov rax, PARAM(0)	; param make-char-ci-comparator
 17798 0000D022 803804                  	cmp byte [rax], T_closure
 17799 0000D025 0F85FD990000            	jne L_error_non_closure
 17800 0000D02B FF7001                  	push SOB_CLOSURE_ENV(rax)
 17801 0000D02E FF5009                  	call SOB_CLOSURE_CODE(rax)
 17802 0000D031 48890425[5A120000]      	mov qword [free_var_69], rax
 17803 0000D039 48B8-                   	mov rax, sob_void
 17803 0000D03B [0000000000000000] 
 17804 0000D043 C9                      	leave
 17805 0000D044 C21800                  	ret AND_KILL_FRAME(1)
 17806                                  .L_lambda_simple_end_0066:	; new closure is in rax
 17807 0000D047 803804                  	cmp byte [rax], T_closure
 17808 0000D04A 0F85D8990000            	jne L_error_non_closure
 17809 0000D050 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17810 0000D053 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17811                                  
 17812 0000D056 4889C7                  	mov rdi, rax
 17813 0000D059 E8C89C0000              	call print_sexpr_if_not_void
 17814 0000D05E 48B8-                   	mov rax, L_constants + 0
 17814 0000D060 [0000000000000000] 
 17815 0000D068 48890425[23160000]      	mov qword [free_var_126], rax
 17816 0000D070 48B8-                   	mov rax, sob_void
 17816 0000D072 [0000000000000000] 
 17817                                  
 17818 0000D07A 4889C7                  	mov rdi, rax
 17819 0000D07D E8A49C0000              	call print_sexpr_if_not_void
 17820 0000D082 48B8-                   	mov rax, L_constants + 0
 17820 0000D084 [0000000000000000] 
 17821 0000D08C 48890425[89160000]      	mov qword [free_var_132], rax
 17822 0000D094 48B8-                   	mov rax, sob_void
 17822 0000D096 [0000000000000000] 
 17823                                  
 17824 0000D09E 4889C7                  	mov rdi, rax
 17825 0000D0A1 E8809C0000              	call print_sexpr_if_not_void
 17826                                  	; preparing a non-tail-call
 17827 0000D0A6 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17828 0000D0AB E8219A0000              	call malloc
 17829 0000D0B0 50                      	push rax
 17830 0000D0B1 BF00000000              	mov rdi, 8 * 0	; new rib
 17831 0000D0B6 E8169A0000              	call malloc
 17832 0000D0BB 50                      	push rax
 17833 0000D0BC BF08000000              	mov rdi, 8 * 1	; extended env
 17834 0000D0C1 E80B9A0000              	call malloc
 17835 0000D0C6 488B7D10                	mov rdi, ENV
 17836 0000D0CA BE00000000              	mov rsi, 0
 17837 0000D0CF BA01000000              	mov rdx, 1
 17838                                  .L_lambda_simple_env_loop_0067:	; ext_env[i + 1] <-- env[i]
 17839 0000D0D4 4883FE00                	cmp rsi, 0
 17840 0000D0D8 7410                    	je .L_lambda_simple_env_end_0067
 17841 0000D0DA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17842 0000D0DE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17843 0000D0E2 48FFC6                  	inc rsi
 17844 0000D0E5 48FFC2                  	inc rdx
 17845 0000D0E8 EBEA                    	jmp .L_lambda_simple_env_loop_0067
 17846                                  .L_lambda_simple_env_end_0067:
 17847 0000D0EA 5B                      	pop rbx
 17848 0000D0EB BE00000000              	mov rsi, 0
 17849                                  .L_lambda_simple_params_loop_0067:	; copy params
 17850 0000D0F0 4883FE00                	cmp rsi, 0
 17851 0000D0F4 740E                    	je .L_lambda_simple_params_end_0067
 17852 0000D0F6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17853 0000D0FB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17854 0000D0FF 48FFC6                  	inc rsi
 17855 0000D102 EBEC                    	jmp .L_lambda_simple_params_loop_0067
 17856                                  .L_lambda_simple_params_end_0067:
 17857 0000D104 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17858 0000D107 4889C3                  	mov rbx, rax
 17859 0000D10A 58                      	pop rax
 17860 0000D10B C60004                  	mov byte [rax], T_closure
 17861 0000D10E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17862 0000D112 48C74009[1FD10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0067
 17863 0000D11A E95E010000              	jmp .L_lambda_simple_end_0067
 17864                                  .L_lambda_simple_code_0067:	; lambda-simple body
 17865 0000D11F 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17866 0000D125 740B                    	je .L_lambda_simple_arity_check_ok_0067
 17867 0000D127 FF742410                	push qword [rsp + 8 * 2]
 17868 0000D12B 6A01                    	push 1
 17869 0000D12D E958990000              	jmp L_error_incorrect_arity_simple
 17870                                  .L_lambda_simple_arity_check_ok_0067:
 17871 0000D132 C8000000                	enter 0, 0
 17872 0000D136 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17873 0000D13B E891990000              	call malloc
 17874 0000D140 50                      	push rax
 17875 0000D141 BF08000000              	mov rdi, 8 * 1	; new rib
 17876 0000D146 E886990000              	call malloc
 17877 0000D14B 50                      	push rax
 17878 0000D14C BF10000000              	mov rdi, 8 * 2	; extended env
 17879 0000D151 E87B990000              	call malloc
 17880 0000D156 488B7D10                	mov rdi, ENV
 17881 0000D15A BE00000000              	mov rsi, 0
 17882 0000D15F BA01000000              	mov rdx, 1
 17883                                  .L_lambda_simple_env_loop_0068:	; ext_env[i + 1] <-- env[i]
 17884 0000D164 4883FE01                	cmp rsi, 1
 17885 0000D168 7410                    	je .L_lambda_simple_env_end_0068
 17886 0000D16A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17887 0000D16E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17888 0000D172 48FFC6                  	inc rsi
 17889 0000D175 48FFC2                  	inc rdx
 17890 0000D178 EBEA                    	jmp .L_lambda_simple_env_loop_0068
 17891                                  .L_lambda_simple_env_end_0068:
 17892 0000D17A 5B                      	pop rbx
 17893 0000D17B BE00000000              	mov rsi, 0
 17894                                  .L_lambda_simple_params_loop_0068:	; copy params
 17895 0000D180 4883FE01                	cmp rsi, 1
 17896 0000D184 740E                    	je .L_lambda_simple_params_end_0068
 17897 0000D186 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 17898 0000D18B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 17899 0000D18F 48FFC6                  	inc rsi
 17900 0000D192 EBEC                    	jmp .L_lambda_simple_params_loop_0068
 17901                                  .L_lambda_simple_params_end_0068:
 17902 0000D194 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 17903 0000D197 4889C3                  	mov rbx, rax
 17904 0000D19A 58                      	pop rax
 17905 0000D19B C60004                  	mov byte [rax], T_closure
 17906 0000D19E 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 17907 0000D1A2 48C74009[AFD10000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0068
 17908 0000D1AA E9CA000000              	jmp .L_lambda_simple_end_0068
 17909                                  .L_lambda_simple_code_0068:	; lambda-simple body
 17910 0000D1AF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 17911 0000D1B5 740B                    	je .L_lambda_simple_arity_check_ok_0068
 17912 0000D1B7 FF742410                	push qword [rsp + 8 * 2]
 17913 0000D1BB 6A01                    	push 1
 17914 0000D1BD E9C8980000              	jmp L_error_incorrect_arity_simple
 17915                                  .L_lambda_simple_arity_check_ok_0068:
 17916 0000D1C2 C8000000                	enter 0, 0
 17917                                  	; preparing a tail-call
 17918                                  	; preparing a non-tail-call
 17919                                  	; preparing a non-tail-call
 17920 0000D1C6 488B4520                	mov rax, PARAM(0)	; param str
 17921 0000D1CA 50                      	push rax
 17922 0000D1CB 6A01                    	push 1	; arg count
 17923 0000D1CD 488B0425[AC150000]      	mov rax, qword [free_var_119]	; free var string->list
 17924 0000D1D5 803805                  	cmp byte [rax], T_undefined
 17925 0000D1D8 0F84C6970000            	je L_error_fvar_undefined
 17926 0000D1DE 803804                  	cmp byte [rax], T_closure
 17927 0000D1E1 0F8541980000            	jne L_error_non_closure
 17928 0000D1E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17929 0000D1EA FF5009                  	call SOB_CLOSURE_CODE(rax)
 17930 0000D1ED 50                      	push rax
 17931 0000D1EE 488B4510                	mov rax, ENV
 17932 0000D1F2 488B00                  	mov rax, qword [rax + 8 * 0]
 17933 0000D1F5 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char-case-converter
 17934 0000D1F8 50                      	push rax
 17935 0000D1F9 6A02                    	push 2	; arg count
 17936 0000D1FB 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 17937 0000D203 803805                  	cmp byte [rax], T_undefined
 17938 0000D206 0F8498970000            	je L_error_fvar_undefined
 17939 0000D20C 803804                  	cmp byte [rax], T_closure
 17940 0000D20F 0F8513980000            	jne L_error_non_closure
 17941 0000D215 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17942 0000D218 FF5009                  	call SOB_CLOSURE_CODE(rax)
 17943 0000D21B 50                      	push rax
 17944 0000D21C 6A01                    	push 1	; arg count
 17945 0000D21E 488B0425[03140000]      	mov rax, qword [free_var_94]	; free var list->string
 17946 0000D226 803805                  	cmp byte [rax], T_undefined
 17947 0000D229 0F8475970000            	je L_error_fvar_undefined
 17948 0000D22F 803804                  	cmp byte [rax], T_closure
 17949 0000D232 0F85F0970000            	jne L_error_non_closure
 17950 0000D238 FF7001                  	push SOB_CLOSURE_ENV(rax)
 17951 0000D23B FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 17952 0000D23E FF7500                  	push qword[rbp]
 17953 0000D241 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 17954 0000D246 48895D10                	mov qword[rbp + 8*2],rbx
 17955 0000D24A 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 17956 0000D252 BF00000000              	mov rdi,0
 17957 0000D257 EB00                    	jmp .L_tc_recycle_frame_loop_00b2
 17958                                  .L_tc_recycle_frame_loop_00b2:
 17959 0000D259 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 17960 0000D25D 740F                    	je .L_tc_recycle_frame_done_00b2
 17961 0000D25F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 17962 0000D264 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 17963 0000D269 48FFC7                  	inc rdi
 17964 0000D26C EBEB                    	jmp .L_tc_recycle_frame_loop_00b2
 17965                                  .L_tc_recycle_frame_done_00b2:
 17966 0000D26E 4889EC                  	mov rsp, rbp	; point to last argument
 17967 0000D271 5D                      	pop rbp
 17968 0000D272 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 17969 0000D275 C9                      	leave
 17970 0000D276 C21800                  	ret AND_KILL_FRAME(1)
 17971                                  .L_lambda_simple_end_0068:	; new closure is in rax
 17972 0000D279 C9                      	leave
 17973 0000D27A C21800                  	ret AND_KILL_FRAME(1)
 17974                                  .L_lambda_simple_end_0067:	; new closure is in rax
 17975 0000D27D 50                      	push rax
 17976 0000D27E 6A01                    	push 1	; arg count
 17977 0000D280 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 17978 0000D285 E847980000              	call malloc
 17979 0000D28A 50                      	push rax
 17980 0000D28B BF00000000              	mov rdi, 8 * 0	; new rib
 17981 0000D290 E83C980000              	call malloc
 17982 0000D295 50                      	push rax
 17983 0000D296 BF08000000              	mov rdi, 8 * 1	; extended env
 17984 0000D29B E831980000              	call malloc
 17985 0000D2A0 488B7D10                	mov rdi, ENV
 17986 0000D2A4 BE00000000              	mov rsi, 0
 17987 0000D2A9 BA01000000              	mov rdx, 1
 17988                                  .L_lambda_simple_env_loop_0069:	; ext_env[i + 1] <-- env[i]
 17989 0000D2AE 4883FE00                	cmp rsi, 0
 17990 0000D2B2 7410                    	je .L_lambda_simple_env_end_0069
 17991 0000D2B4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 17992 0000D2B8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 17993 0000D2BC 48FFC6                  	inc rsi
 17994 0000D2BF 48FFC2                  	inc rdx
 17995 0000D2C2 EBEA                    	jmp .L_lambda_simple_env_loop_0069
 17996                                  .L_lambda_simple_env_end_0069:
 17997 0000D2C4 5B                      	pop rbx
 17998 0000D2C5 BE00000000              	mov rsi, 0
 17999                                  .L_lambda_simple_params_loop_0069:	; copy params
 18000 0000D2CA 4883FE00                	cmp rsi, 0
 18001 0000D2CE 740E                    	je .L_lambda_simple_params_end_0069
 18002 0000D2D0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18003 0000D2D5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18004 0000D2D9 48FFC6                  	inc rsi
 18005 0000D2DC EBEC                    	jmp .L_lambda_simple_params_loop_0069
 18006                                  .L_lambda_simple_params_end_0069:
 18007 0000D2DE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18008 0000D2E1 4889C3                  	mov rbx, rax
 18009 0000D2E4 58                      	pop rax
 18010 0000D2E5 C60004                  	mov byte [rax], T_closure
 18011 0000D2E8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18012 0000D2EC 48C74009[F9D20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0069
 18013 0000D2F4 E98D000000              	jmp .L_lambda_simple_end_0069
 18014                                  .L_lambda_simple_code_0069:	; lambda-simple body
 18015 0000D2F9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18016 0000D2FF 740B                    	je .L_lambda_simple_arity_check_ok_0069
 18017 0000D301 FF742410                	push qword [rsp + 8 * 2]
 18018 0000D305 6A01                    	push 1
 18019 0000D307 E97E970000              	jmp L_error_incorrect_arity_simple
 18020                                  .L_lambda_simple_arity_check_ok_0069:
 18021 0000D30C C8000000                	enter 0, 0
 18022                                  	; preparing a non-tail-call
 18023 0000D310 488B0425[7C120000]      	mov rax, qword [free_var_71]	; free var char-downcase
 18024 0000D318 803805                  	cmp byte [rax], T_undefined
 18025 0000D31B 0F8483960000            	je L_error_fvar_undefined
 18026 0000D321 50                      	push rax
 18027 0000D322 6A01                    	push 1	; arg count
 18028 0000D324 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 18029 0000D328 803804                  	cmp byte [rax], T_closure
 18030 0000D32B 0F85F7960000            	jne L_error_non_closure
 18031 0000D331 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18032 0000D334 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18033 0000D337 48890425[23160000]      	mov qword [free_var_126], rax
 18034 0000D33F 48B8-                   	mov rax, sob_void
 18034 0000D341 [0000000000000000] 
 18035                                  
 18036                                  	; preparing a non-tail-call
 18037 0000D349 488B0425[8D120000]      	mov rax, qword [free_var_72]	; free var char-upcase
 18038 0000D351 803805                  	cmp byte [rax], T_undefined
 18039 0000D354 0F844A960000            	je L_error_fvar_undefined
 18040 0000D35A 50                      	push rax
 18041 0000D35B 6A01                    	push 1	; arg count
 18042 0000D35D 488B4520                	mov rax, PARAM(0)	; param make-string-case-converter
 18043 0000D361 803804                  	cmp byte [rax], T_closure
 18044 0000D364 0F85BE960000            	jne L_error_non_closure
 18045 0000D36A FF7001                  	push SOB_CLOSURE_ENV(rax)
 18046 0000D36D FF5009                  	call SOB_CLOSURE_CODE(rax)
 18047 0000D370 48890425[89160000]      	mov qword [free_var_132], rax
 18048 0000D378 48B8-                   	mov rax, sob_void
 18048 0000D37A [0000000000000000] 
 18049 0000D382 C9                      	leave
 18050 0000D383 C21800                  	ret AND_KILL_FRAME(1)
 18051                                  .L_lambda_simple_end_0069:	; new closure is in rax
 18052 0000D386 803804                  	cmp byte [rax], T_closure
 18053 0000D389 0F8599960000            	jne L_error_non_closure
 18054 0000D38F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18055 0000D392 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18056                                  
 18057 0000D395 4889C7                  	mov rdi, rax
 18058 0000D398 E889990000              	call print_sexpr_if_not_void
 18059 0000D39D 48B8-                   	mov rax, L_constants + 0
 18059 0000D39F [0000000000000000] 
 18060 0000D3A7 48890425[AB160000]      	mov qword [free_var_134], rax
 18061 0000D3AF 48B8-                   	mov rax, sob_void
 18061 0000D3B1 [0000000000000000] 
 18062                                  
 18063 0000D3B9 4889C7                  	mov rdi, rax
 18064 0000D3BC E865990000              	call print_sexpr_if_not_void
 18065 0000D3C1 48B8-                   	mov rax, L_constants + 0
 18065 0000D3C3 [0000000000000000] 
 18066 0000D3CB 48890425[9A160000]      	mov qword [free_var_133], rax
 18067 0000D3D3 48B8-                   	mov rax, sob_void
 18067 0000D3D5 [0000000000000000] 
 18068                                  
 18069 0000D3DD 4889C7                  	mov rdi, rax
 18070 0000D3E0 E841990000              	call print_sexpr_if_not_void
 18071 0000D3E5 48B8-                   	mov rax, L_constants + 0
 18071 0000D3E7 [0000000000000000] 
 18072 0000D3EF 48890425[BC160000]      	mov qword [free_var_135], rax
 18073 0000D3F7 48B8-                   	mov rax, sob_void
 18073 0000D3F9 [0000000000000000] 
 18074                                  
 18075 0000D401 4889C7                  	mov rdi, rax
 18076 0000D404 E81D990000              	call print_sexpr_if_not_void
 18077 0000D409 48B8-                   	mov rax, L_constants + 0
 18077 0000D40B [0000000000000000] 
 18078 0000D413 48890425[CD160000]      	mov qword [free_var_136], rax
 18079 0000D41B 48B8-                   	mov rax, sob_void
 18079 0000D41D [0000000000000000] 
 18080                                  
 18081 0000D425 4889C7                  	mov rdi, rax
 18082 0000D428 E8F9980000              	call print_sexpr_if_not_void
 18083 0000D42D 48B8-                   	mov rax, L_constants + 0
 18083 0000D42F [0000000000000000] 
 18084 0000D437 48890425[DE160000]      	mov qword [free_var_137], rax
 18085 0000D43F 48B8-                   	mov rax, sob_void
 18085 0000D441 [0000000000000000] 
 18086                                  
 18087 0000D449 4889C7                  	mov rdi, rax
 18088 0000D44C E8D5980000              	call print_sexpr_if_not_void
 18089 0000D451 48B8-                   	mov rax, L_constants + 0
 18089 0000D453 [0000000000000000] 
 18090 0000D45B 48890425[DF150000]      	mov qword [free_var_122], rax
 18091 0000D463 48B8-                   	mov rax, sob_void
 18091 0000D465 [0000000000000000] 
 18092                                  
 18093 0000D46D 4889C7                  	mov rdi, rax
 18094 0000D470 E8B1980000              	call print_sexpr_if_not_void
 18095 0000D475 48B8-                   	mov rax, L_constants + 0
 18095 0000D477 [0000000000000000] 
 18096 0000D47F 48890425[CE150000]      	mov qword [free_var_121], rax
 18097 0000D487 48B8-                   	mov rax, sob_void
 18097 0000D489 [0000000000000000] 
 18098                                  
 18099 0000D491 4889C7                  	mov rdi, rax
 18100 0000D494 E88D980000              	call print_sexpr_if_not_void
 18101 0000D499 48B8-                   	mov rax, L_constants + 0
 18101 0000D49B [0000000000000000] 
 18102 0000D4A3 48890425[F0150000]      	mov qword [free_var_123], rax
 18103 0000D4AB 48B8-                   	mov rax, sob_void
 18103 0000D4AD [0000000000000000] 
 18104                                  
 18105 0000D4B5 4889C7                  	mov rdi, rax
 18106 0000D4B8 E869980000              	call print_sexpr_if_not_void
 18107 0000D4BD 48B8-                   	mov rax, L_constants + 0
 18107 0000D4BF [0000000000000000] 
 18108 0000D4C7 48890425[01160000]      	mov qword [free_var_124], rax
 18109 0000D4CF 48B8-                   	mov rax, sob_void
 18109 0000D4D1 [0000000000000000] 
 18110                                  
 18111 0000D4D9 4889C7                  	mov rdi, rax
 18112 0000D4DC E845980000              	call print_sexpr_if_not_void
 18113 0000D4E1 48B8-                   	mov rax, L_constants + 0
 18113 0000D4E3 [0000000000000000] 
 18114 0000D4EB 48890425[12160000]      	mov qword [free_var_125], rax
 18115 0000D4F3 48B8-                   	mov rax, sob_void
 18115 0000D4F5 [0000000000000000] 
 18116                                  
 18117 0000D4FD 4889C7                  	mov rdi, rax
 18118 0000D500 E821980000              	call print_sexpr_if_not_void
 18119                                  	; preparing a non-tail-call
 18120 0000D505 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18121 0000D50A E8C2950000              	call malloc
 18122 0000D50F 50                      	push rax
 18123 0000D510 BF00000000              	mov rdi, 8 * 0	; new rib
 18124 0000D515 E8B7950000              	call malloc
 18125 0000D51A 50                      	push rax
 18126 0000D51B BF08000000              	mov rdi, 8 * 1	; extended env
 18127 0000D520 E8AC950000              	call malloc
 18128 0000D525 488B7D10                	mov rdi, ENV
 18129 0000D529 BE00000000              	mov rsi, 0
 18130 0000D52E BA01000000              	mov rdx, 1
 18131                                  .L_lambda_simple_env_loop_006a:	; ext_env[i + 1] <-- env[i]
 18132 0000D533 4883FE00                	cmp rsi, 0
 18133 0000D537 7410                    	je .L_lambda_simple_env_end_006a
 18134 0000D539 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18135 0000D53D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18136 0000D541 48FFC6                  	inc rsi
 18137 0000D544 48FFC2                  	inc rdx
 18138 0000D547 EBEA                    	jmp .L_lambda_simple_env_loop_006a
 18139                                  .L_lambda_simple_env_end_006a:
 18140 0000D549 5B                      	pop rbx
 18141 0000D54A BE00000000              	mov rsi, 0
 18142                                  .L_lambda_simple_params_loop_006a:	; copy params
 18143 0000D54F 4883FE00                	cmp rsi, 0
 18144 0000D553 740E                    	je .L_lambda_simple_params_end_006a
 18145 0000D555 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18146 0000D55A 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18147 0000D55E 48FFC6                  	inc rsi
 18148 0000D561 EBEC                    	jmp .L_lambda_simple_params_loop_006a
 18149                                  .L_lambda_simple_params_end_006a:
 18150 0000D563 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18151 0000D566 4889C3                  	mov rbx, rax
 18152 0000D569 58                      	pop rax
 18153 0000D56A C60004                  	mov byte [rax], T_closure
 18154 0000D56D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18155 0000D571 48C74009[7ED50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006a
 18156 0000D579 E9060D0000              	jmp .L_lambda_simple_end_006a
 18157                                  .L_lambda_simple_code_006a:	; lambda-simple body
 18158 0000D57E 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18159 0000D584 740B                    	je .L_lambda_simple_arity_check_ok_006a
 18160 0000D586 FF742410                	push qword [rsp + 8 * 2]
 18161 0000D58A 6A02                    	push 2
 18162 0000D58C E9F9940000              	jmp L_error_incorrect_arity_simple
 18163                                  .L_lambda_simple_arity_check_ok_006a:
 18164 0000D591 C8000000                	enter 0, 0
 18165                                  	; preparing a tail-call
 18166 0000D595 48B8-                   	mov rax, L_constants + 1993
 18166 0000D597 [C907000000000000] 
 18167 0000D59F 50                      	push rax
 18168 0000D5A0 6A01                    	push 1	; arg count
 18169 0000D5A2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18170 0000D5A7 E825950000              	call malloc
 18171 0000D5AC 50                      	push rax
 18172 0000D5AD BF10000000              	mov rdi, 8 * 2	; new rib
 18173 0000D5B2 E81A950000              	call malloc
 18174 0000D5B7 50                      	push rax
 18175 0000D5B8 BF10000000              	mov rdi, 8 * 2	; extended env
 18176 0000D5BD E80F950000              	call malloc
 18177 0000D5C2 488B7D10                	mov rdi, ENV
 18178 0000D5C6 BE00000000              	mov rsi, 0
 18179 0000D5CB BA01000000              	mov rdx, 1
 18180                                  .L_lambda_simple_env_loop_006b:	; ext_env[i + 1] <-- env[i]
 18181 0000D5D0 4883FE01                	cmp rsi, 1
 18182 0000D5D4 7410                    	je .L_lambda_simple_env_end_006b
 18183 0000D5D6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18184 0000D5DA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18185 0000D5DE 48FFC6                  	inc rsi
 18186 0000D5E1 48FFC2                  	inc rdx
 18187 0000D5E4 EBEA                    	jmp .L_lambda_simple_env_loop_006b
 18188                                  .L_lambda_simple_env_end_006b:
 18189 0000D5E6 5B                      	pop rbx
 18190 0000D5E7 BE00000000              	mov rsi, 0
 18191                                  .L_lambda_simple_params_loop_006b:	; copy params
 18192 0000D5EC 4883FE02                	cmp rsi, 2
 18193 0000D5F0 740E                    	je .L_lambda_simple_params_end_006b
 18194 0000D5F2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18195 0000D5F7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18196 0000D5FB 48FFC6                  	inc rsi
 18197 0000D5FE EBEC                    	jmp .L_lambda_simple_params_loop_006b
 18198                                  .L_lambda_simple_params_end_006b:
 18199 0000D600 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18200 0000D603 4889C3                  	mov rbx, rax
 18201 0000D606 58                      	pop rax
 18202 0000D607 C60004                  	mov byte [rax], T_closure
 18203 0000D60A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18204 0000D60E 48C74009[1BD60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006b
 18205 0000D616 E91F0C0000              	jmp .L_lambda_simple_end_006b
 18206                                  .L_lambda_simple_code_006b:	; lambda-simple body
 18207 0000D61B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18208 0000D621 740B                    	je .L_lambda_simple_arity_check_ok_006b
 18209 0000D623 FF742410                	push qword [rsp + 8 * 2]
 18210 0000D627 6A01                    	push 1
 18211 0000D629 E95C940000              	jmp L_error_incorrect_arity_simple
 18212                                  .L_lambda_simple_arity_check_ok_006b:
 18213 0000D62E C8000000                	enter 0, 0
 18214 0000D632 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 18215 0000D636 488903                  	mov qword [rbx], rax
 18216                                  
 18217 0000D639 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18218 0000D63E E88E940000              	call malloc
 18219 0000D643 50                      	push rax
 18220 0000D644 BF08000000              	mov rdi, 8 * 1	; new rib
 18221 0000D649 E883940000              	call malloc
 18222 0000D64E 50                      	push rax
 18223 0000D64F BF18000000              	mov rdi, 8 * 3	; extended env
 18224 0000D654 E878940000              	call malloc
 18225 0000D659 488B7D10                	mov rdi, ENV
 18226 0000D65D BE00000000              	mov rsi, 0
 18227 0000D662 BA01000000              	mov rdx, 1
 18228                                  .L_lambda_simple_env_loop_006c:	; ext_env[i + 1] <-- env[i]
 18229 0000D667 4883FE02                	cmp rsi, 2
 18230 0000D66B 7410                    	je .L_lambda_simple_env_end_006c
 18231 0000D66D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18232 0000D671 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18233 0000D675 48FFC6                  	inc rsi
 18234 0000D678 48FFC2                  	inc rdx
 18235 0000D67B EBEA                    	jmp .L_lambda_simple_env_loop_006c
 18236                                  .L_lambda_simple_env_end_006c:
 18237 0000D67D 5B                      	pop rbx
 18238 0000D67E BE00000000              	mov rsi, 0
 18239                                  .L_lambda_simple_params_loop_006c:	; copy params
 18240 0000D683 4883FE01                	cmp rsi, 1
 18241 0000D687 740E                    	je .L_lambda_simple_params_end_006c
 18242 0000D689 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18243 0000D68E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18244 0000D692 48FFC6                  	inc rsi
 18245 0000D695 EBEC                    	jmp .L_lambda_simple_params_loop_006c
 18246                                  .L_lambda_simple_params_end_006c:
 18247 0000D697 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18248 0000D69A 4889C3                  	mov rbx, rax
 18249 0000D69D 58                      	pop rax
 18250 0000D69E C60004                  	mov byte [rax], T_closure
 18251 0000D6A1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18252 0000D6A5 48C74009[B2D60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006c
 18253 0000D6AD E984020000              	jmp .L_lambda_simple_end_006c
 18254                                  .L_lambda_simple_code_006c:	; lambda-simple body
 18255 0000D6B2 48837C241005            	cmp qword [rsp + 8 * 2], 5
 18256 0000D6B8 740B                    	je .L_lambda_simple_arity_check_ok_006c
 18257 0000D6BA FF742410                	push qword [rsp + 8 * 2]
 18258 0000D6BE 6A05                    	push 5
 18259 0000D6C0 E9C5930000              	jmp L_error_incorrect_arity_simple
 18260                                  .L_lambda_simple_arity_check_ok_006c:
 18261 0000D6C5 C8000000                	enter 0, 0
 18262                                  	; preparing a non-tail-call
 18263 0000D6C9 488B4530                	mov rax, PARAM(2)	; param len1
 18264 0000D6CD 50                      	push rax
 18265 0000D6CE 488B4520                	mov rax, PARAM(0)	; param i
 18266 0000D6D2 50                      	push rax
 18267 0000D6D3 6A02                    	push 2	; arg count
 18268 0000D6D5 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 18269 0000D6DD 803805                  	cmp byte [rax], T_undefined
 18270 0000D6E0 0F84BE920000            	je L_error_fvar_undefined
 18271 0000D6E6 803804                  	cmp byte [rax], T_closure
 18272 0000D6E9 0F8539930000            	jne L_error_non_closure
 18273 0000D6EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18274 0000D6F2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18275 0000D6F5 483D[02000000]          	cmp rax, sob_boolean_false
 18276 0000D6FB 742E                    	je .L_if_else_005b
 18277                                  	; preparing a non-tail-call
 18278 0000D6FD 488B4540                	mov rax, PARAM(4)	; param len2
 18279 0000D701 50                      	push rax
 18280 0000D702 488B4530                	mov rax, PARAM(2)	; param len1
 18281 0000D706 50                      	push rax
 18282 0000D707 6A02                    	push 2	; arg count
 18283 0000D709 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 18284 0000D711 803805                  	cmp byte [rax], T_undefined
 18285 0000D714 0F848A920000            	je L_error_fvar_undefined
 18286 0000D71A 803804                  	cmp byte [rax], T_closure
 18287 0000D71D 0F8505930000            	jne L_error_non_closure
 18288 0000D723 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18289 0000D726 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18290 0000D729 EB0A                    	jmp .L_if_end_005b
 18291                                  .L_if_else_005b:
 18292 0000D72B 48B8-                   	mov rax, L_constants + 2
 18292 0000D72D [0200000000000000] 
 18293                                  .L_if_end_005b:
 18294 0000D735 483D[02000000]          	cmp rax, sob_boolean_false
 18295 0000D73B 0F85F1010000            	jne .L_or_end_000a
 18296                                  	; preparing a non-tail-call
 18297 0000D741 488B4530                	mov rax, PARAM(2)	; param len1
 18298 0000D745 50                      	push rax
 18299 0000D746 488B4520                	mov rax, PARAM(0)	; param i
 18300 0000D74A 50                      	push rax
 18301 0000D74B 6A02                    	push 2	; arg count
 18302 0000D74D 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 18303 0000D755 803805                  	cmp byte [rax], T_undefined
 18304 0000D758 0F8446920000            	je L_error_fvar_undefined
 18305 0000D75E 803804                  	cmp byte [rax], T_closure
 18306 0000D761 0F85C1920000            	jne L_error_non_closure
 18307 0000D767 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18308 0000D76A FF5009                  	call SOB_CLOSURE_CODE(rax)
 18309 0000D76D 483D[02000000]          	cmp rax, sob_boolean_false
 18310 0000D773 0F84AF010000            	je .L_if_else_005d
 18311                                  	; preparing a non-tail-call
 18312                                  	; preparing a non-tail-call
 18313 0000D779 488B4520                	mov rax, PARAM(0)	; param i
 18314 0000D77D 50                      	push rax
 18315 0000D77E 488B4538                	mov rax, PARAM(3)	; param str2
 18316 0000D782 50                      	push rax
 18317 0000D783 6A02                    	push 2	; arg count
 18318 0000D785 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18319 0000D78D 803805                  	cmp byte [rax], T_undefined
 18320 0000D790 0F840E920000            	je L_error_fvar_undefined
 18321 0000D796 803804                  	cmp byte [rax], T_closure
 18322 0000D799 0F8589920000            	jne L_error_non_closure
 18323 0000D79F FF7001                  	push SOB_CLOSURE_ENV(rax)
 18324 0000D7A2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18325 0000D7A5 50                      	push rax
 18326                                  	; preparing a non-tail-call
 18327 0000D7A6 488B4520                	mov rax, PARAM(0)	; param i
 18328 0000D7AA 50                      	push rax
 18329 0000D7AB 488B4528                	mov rax, PARAM(1)	; param str1
 18330 0000D7AF 50                      	push rax
 18331 0000D7B0 6A02                    	push 2	; arg count
 18332 0000D7B2 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18333 0000D7BA 803805                  	cmp byte [rax], T_undefined
 18334 0000D7BD 0F84E1910000            	je L_error_fvar_undefined
 18335 0000D7C3 803804                  	cmp byte [rax], T_closure
 18336 0000D7C6 0F855C920000            	jne L_error_non_closure
 18337 0000D7CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 18338 0000D7CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 18339 0000D7D2 50                      	push rax
 18340 0000D7D3 6A02                    	push 2	; arg count
 18341 0000D7D5 488B4510                	mov rax, ENV
 18342 0000D7D9 488B4008                	mov rax, qword [rax + 8 * 1]
 18343 0000D7DD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 18344 0000D7E0 803804                  	cmp byte [rax], T_closure
 18345 0000D7E3 0F853F920000            	jne L_error_non_closure
 18346 0000D7E9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18347 0000D7EC FF5009                  	call SOB_CLOSURE_CODE(rax)
 18348 0000D7EF 483D[02000000]          	cmp rax, sob_boolean_false
 18349 0000D7F5 0F852B010000            	jne .L_or_end_000b
 18350                                  	; preparing a non-tail-call
 18351                                  	; preparing a non-tail-call
 18352 0000D7FB 488B4520                	mov rax, PARAM(0)	; param i
 18353 0000D7FF 50                      	push rax
 18354 0000D800 488B4538                	mov rax, PARAM(3)	; param str2
 18355 0000D804 50                      	push rax
 18356 0000D805 6A02                    	push 2	; arg count
 18357 0000D807 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18358 0000D80F 803805                  	cmp byte [rax], T_undefined
 18359 0000D812 0F848C910000            	je L_error_fvar_undefined
 18360 0000D818 803804                  	cmp byte [rax], T_closure
 18361 0000D81B 0F8507920000            	jne L_error_non_closure
 18362 0000D821 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18363 0000D824 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18364 0000D827 50                      	push rax
 18365                                  	; preparing a non-tail-call
 18366 0000D828 488B4520                	mov rax, PARAM(0)	; param i
 18367 0000D82C 50                      	push rax
 18368 0000D82D 488B4528                	mov rax, PARAM(1)	; param str1
 18369 0000D831 50                      	push rax
 18370 0000D832 6A02                    	push 2	; arg count
 18371 0000D834 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 18372 0000D83C 803805                  	cmp byte [rax], T_undefined
 18373 0000D83F 0F845F910000            	je L_error_fvar_undefined
 18374 0000D845 803804                  	cmp byte [rax], T_closure
 18375 0000D848 0F85DA910000            	jne L_error_non_closure
 18376 0000D84E FF7001                  	push SOB_CLOSURE_ENV(rax)
 18377 0000D851 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18378 0000D854 50                      	push rax
 18379 0000D855 6A02                    	push 2	; arg count
 18380 0000D857 488B4510                	mov rax, ENV
 18381 0000D85B 488B4008                	mov rax, qword [rax + 8 * 1]
 18382 0000D85F 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 18383 0000D863 803804                  	cmp byte [rax], T_closure
 18384 0000D866 0F85BC910000            	jne L_error_non_closure
 18385 0000D86C FF7001                  	push SOB_CLOSURE_ENV(rax)
 18386 0000D86F FF5009                  	call SOB_CLOSURE_CODE(rax)
 18387 0000D872 483D[02000000]          	cmp rax, sob_boolean_false
 18388 0000D878 0F849E000000            	je .L_if_else_005c
 18389                                  	; preparing a tail-call
 18390 0000D87E 488B4540                	mov rax, PARAM(4)	; param len2
 18391 0000D882 50                      	push rax
 18392 0000D883 488B4538                	mov rax, PARAM(3)	; param str2
 18393 0000D887 50                      	push rax
 18394 0000D888 488B4530                	mov rax, PARAM(2)	; param len1
 18395 0000D88C 50                      	push rax
 18396 0000D88D 488B4528                	mov rax, PARAM(1)	; param str1
 18397 0000D891 50                      	push rax
 18398                                  	; preparing a non-tail-call
 18399 0000D892 48B8-                   	mov rax, L_constants + 2270
 18399 0000D894 [DE08000000000000] 
 18400 0000D89C 50                      	push rax
 18401 0000D89D 488B4520                	mov rax, PARAM(0)	; param i
 18402 0000D8A1 50                      	push rax
 18403 0000D8A2 6A02                    	push 2	; arg count
 18404 0000D8A4 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 18405 0000D8AC 803805                  	cmp byte [rax], T_undefined
 18406 0000D8AF 0F84EF900000            	je L_error_fvar_undefined
 18407 0000D8B5 803804                  	cmp byte [rax], T_closure
 18408 0000D8B8 0F856A910000            	jne L_error_non_closure
 18409 0000D8BE FF7001                  	push SOB_CLOSURE_ENV(rax)
 18410 0000D8C1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18411 0000D8C4 50                      	push rax
 18412 0000D8C5 6A05                    	push 5	; arg count
 18413 0000D8C7 488B4510                	mov rax, ENV
 18414 0000D8CB 488B00                  	mov rax, qword [rax + 8 * 0]
 18415 0000D8CE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18416 0000D8D1 488B00                  	mov rax, qword [rax]
 18417 0000D8D4 803804                  	cmp byte [rax], T_closure
 18418 0000D8D7 0F854B910000            	jne L_error_non_closure
 18419 0000D8DD FF7001                  	push SOB_CLOSURE_ENV(rax)
 18420 0000D8E0 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 18421 0000D8E3 FF7500                  	push qword[rbp]
 18422 0000D8E6 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 18423 0000D8EB 48895D10                	mov qword[rbp + 8*2],rbx
 18424 0000D8EF 48C7451805000000        	mov qword[rbp + 8*3], 5	 ;n turns to m
 18425 0000D8F7 BF00000000              	mov rdi,0
 18426 0000D8FC EB00                    	jmp .L_tc_recycle_frame_loop_00b3
 18427                                  .L_tc_recycle_frame_loop_00b3:
 18428 0000D8FE 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 18429 0000D902 740F                    	je .L_tc_recycle_frame_done_00b3
 18430 0000D904 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 18431 0000D909 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 18432 0000D90E 48FFC7                  	inc rdi
 18433 0000D911 EBEB                    	jmp .L_tc_recycle_frame_loop_00b3
 18434                                  .L_tc_recycle_frame_done_00b3:
 18435 0000D913 4889EC                  	mov rsp, rbp	; point to last argument
 18436 0000D916 5D                      	pop rbp
 18437 0000D917 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18438 0000D91A EB0A                    	jmp .L_if_end_005c
 18439                                  .L_if_else_005c:
 18440 0000D91C 48B8-                   	mov rax, L_constants + 2
 18440 0000D91E [0200000000000000] 
 18441                                  .L_if_end_005c:
 18442                                  .L_or_end_000b:
 18443 0000D926 EB0A                    	jmp .L_if_end_005d
 18444                                  .L_if_else_005d:
 18445 0000D928 48B8-                   	mov rax, L_constants + 2
 18445 0000D92A [0200000000000000] 
 18446                                  .L_if_end_005d:
 18447                                  .L_or_end_000a:
 18448 0000D932 C9                      	leave
 18449 0000D933 C23800                  	ret AND_KILL_FRAME(5)
 18450                                  .L_lambda_simple_end_006c:	; new closure is in rax
 18451 0000D936 50                      	push rax
 18452 0000D937 488B4520                	mov rax, PARAM(0)	; param run
 18453 0000D93B 8F00                    	pop qword [rax]
 18454 0000D93D 48B8-                   	mov rax, sob_void
 18454 0000D93F [0000000000000000] 
 18455                                  
 18456                                  	; preparing a tail-call
 18457 0000D947 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18458 0000D94C E880910000              	call malloc
 18459 0000D951 50                      	push rax
 18460 0000D952 BF08000000              	mov rdi, 8 * 1	; new rib
 18461 0000D957 E875910000              	call malloc
 18462 0000D95C 50                      	push rax
 18463 0000D95D BF18000000              	mov rdi, 8 * 3	; extended env
 18464 0000D962 E86A910000              	call malloc
 18465 0000D967 488B7D10                	mov rdi, ENV
 18466 0000D96B BE00000000              	mov rsi, 0
 18467 0000D970 BA01000000              	mov rdx, 1
 18468                                  .L_lambda_simple_env_loop_006d:	; ext_env[i + 1] <-- env[i]
 18469 0000D975 4883FE02                	cmp rsi, 2
 18470 0000D979 7410                    	je .L_lambda_simple_env_end_006d
 18471 0000D97B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18472 0000D97F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18473 0000D983 48FFC6                  	inc rsi
 18474 0000D986 48FFC2                  	inc rdx
 18475 0000D989 EBEA                    	jmp .L_lambda_simple_env_loop_006d
 18476                                  .L_lambda_simple_env_end_006d:
 18477 0000D98B 5B                      	pop rbx
 18478 0000D98C BE00000000              	mov rsi, 0
 18479                                  .L_lambda_simple_params_loop_006d:	; copy params
 18480 0000D991 4883FE01                	cmp rsi, 1
 18481 0000D995 740E                    	je .L_lambda_simple_params_end_006d
 18482 0000D997 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18483 0000D99C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18484 0000D9A0 48FFC6                  	inc rsi
 18485 0000D9A3 EBEC                    	jmp .L_lambda_simple_params_loop_006d
 18486                                  .L_lambda_simple_params_end_006d:
 18487 0000D9A5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18488 0000D9A8 4889C3                  	mov rbx, rax
 18489 0000D9AB 58                      	pop rax
 18490 0000D9AC C60004                  	mov byte [rax], T_closure
 18491 0000D9AF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18492 0000D9B3 48C74009[C0D90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006d
 18493 0000D9BB E988020000              	jmp .L_lambda_simple_end_006d
 18494                                  .L_lambda_simple_code_006d:	; lambda-simple body
 18495 0000D9C0 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18496 0000D9C6 740B                    	je .L_lambda_simple_arity_check_ok_006d
 18497 0000D9C8 FF742410                	push qword [rsp + 8 * 2]
 18498 0000D9CC 6A02                    	push 2
 18499 0000D9CE E9B7900000              	jmp L_error_incorrect_arity_simple
 18500                                  .L_lambda_simple_arity_check_ok_006d:
 18501 0000D9D3 C8000000                	enter 0, 0
 18502                                  	; preparing a tail-call
 18503                                  	; preparing a non-tail-call
 18504 0000D9D7 488B4528                	mov rax, PARAM(1)	; param str2
 18505 0000D9DB 50                      	push rax
 18506 0000D9DC 6A01                    	push 1	; arg count
 18507 0000D9DE 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 18508 0000D9E6 803805                  	cmp byte [rax], T_undefined
 18509 0000D9E9 0F84B58F0000            	je L_error_fvar_undefined
 18510 0000D9EF 803804                  	cmp byte [rax], T_closure
 18511 0000D9F2 0F8530900000            	jne L_error_non_closure
 18512 0000D9F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18513 0000D9FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 18514 0000D9FE 50                      	push rax
 18515                                  	; preparing a non-tail-call
 18516 0000D9FF 488B4520                	mov rax, PARAM(0)	; param str1
 18517 0000DA03 50                      	push rax
 18518 0000DA04 6A01                    	push 1	; arg count
 18519 0000DA06 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 18520 0000DA0E 803805                  	cmp byte [rax], T_undefined
 18521 0000DA11 0F848D8F0000            	je L_error_fvar_undefined
 18522 0000DA17 803804                  	cmp byte [rax], T_closure
 18523 0000DA1A 0F8508900000            	jne L_error_non_closure
 18524 0000DA20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18525 0000DA23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18526 0000DA26 50                      	push rax
 18527 0000DA27 6A02                    	push 2	; arg count
 18528 0000DA29 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18529 0000DA2E E89E900000              	call malloc
 18530 0000DA33 50                      	push rax
 18531 0000DA34 BF10000000              	mov rdi, 8 * 2	; new rib
 18532 0000DA39 E893900000              	call malloc
 18533 0000DA3E 50                      	push rax
 18534 0000DA3F BF20000000              	mov rdi, 8 * 4	; extended env
 18535 0000DA44 E888900000              	call malloc
 18536 0000DA49 488B7D10                	mov rdi, ENV
 18537 0000DA4D BE00000000              	mov rsi, 0
 18538 0000DA52 BA01000000              	mov rdx, 1
 18539                                  .L_lambda_simple_env_loop_006e:	; ext_env[i + 1] <-- env[i]
 18540 0000DA57 4883FE03                	cmp rsi, 3
 18541 0000DA5B 7410                    	je .L_lambda_simple_env_end_006e
 18542 0000DA5D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18543 0000DA61 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18544 0000DA65 48FFC6                  	inc rsi
 18545 0000DA68 48FFC2                  	inc rdx
 18546 0000DA6B EBEA                    	jmp .L_lambda_simple_env_loop_006e
 18547                                  .L_lambda_simple_env_end_006e:
 18548 0000DA6D 5B                      	pop rbx
 18549 0000DA6E BE00000000              	mov rsi, 0
 18550                                  .L_lambda_simple_params_loop_006e:	; copy params
 18551 0000DA73 4883FE02                	cmp rsi, 2
 18552 0000DA77 740E                    	je .L_lambda_simple_params_end_006e
 18553 0000DA79 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18554 0000DA7E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18555 0000DA82 48FFC6                  	inc rsi
 18556 0000DA85 EBEC                    	jmp .L_lambda_simple_params_loop_006e
 18557                                  .L_lambda_simple_params_end_006e:
 18558 0000DA87 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18559 0000DA8A 4889C3                  	mov rbx, rax
 18560 0000DA8D 58                      	pop rax
 18561 0000DA8E C60004                  	mov byte [rax], T_closure
 18562 0000DA91 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18563 0000DA95 48C74009[A2DA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006e
 18564 0000DA9D E95C010000              	jmp .L_lambda_simple_end_006e
 18565                                  .L_lambda_simple_code_006e:	; lambda-simple body
 18566 0000DAA2 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18567 0000DAA8 740B                    	je .L_lambda_simple_arity_check_ok_006e
 18568 0000DAAA FF742410                	push qword [rsp + 8 * 2]
 18569 0000DAAE 6A02                    	push 2
 18570 0000DAB0 E9D58F0000              	jmp L_error_incorrect_arity_simple
 18571                                  .L_lambda_simple_arity_check_ok_006e:
 18572 0000DAB5 C8000000                	enter 0, 0
 18573                                  	; preparing a non-tail-call
 18574 0000DAB9 488B4528                	mov rax, PARAM(1)	; param len2
 18575 0000DABD 50                      	push rax
 18576 0000DABE 488B4520                	mov rax, PARAM(0)	; param len1
 18577 0000DAC2 50                      	push rax
 18578 0000DAC3 6A02                    	push 2	; arg count
 18579 0000DAC5 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 18580 0000DACD 803805                  	cmp byte [rax], T_undefined
 18581 0000DAD0 0F84CE8E0000            	je L_error_fvar_undefined
 18582 0000DAD6 803804                  	cmp byte [rax], T_closure
 18583 0000DAD9 0F85498F0000            	jne L_error_non_closure
 18584 0000DADF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18585 0000DAE2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18586 0000DAE5 483D[02000000]          	cmp rax, sob_boolean_false
 18587 0000DAEB 0F8487000000            	je .L_if_else_005e
 18588                                  	; preparing a tail-call
 18589 0000DAF1 488B4528                	mov rax, PARAM(1)	; param len2
 18590 0000DAF5 50                      	push rax
 18591 0000DAF6 488B4510                	mov rax, ENV
 18592 0000DAFA 488B00                  	mov rax, qword [rax + 8 * 0]
 18593 0000DAFD 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18594 0000DB01 50                      	push rax
 18595 0000DB02 488B4520                	mov rax, PARAM(0)	; param len1
 18596 0000DB06 50                      	push rax
 18597 0000DB07 488B4510                	mov rax, ENV
 18598 0000DB0B 488B00                  	mov rax, qword [rax + 8 * 0]
 18599 0000DB0E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18600 0000DB11 50                      	push rax
 18601 0000DB12 48B8-                   	mov rax, L_constants + 2135
 18601 0000DB14 [5708000000000000] 
 18602 0000DB1C 50                      	push rax
 18603 0000DB1D 6A05                    	push 5	; arg count
 18604 0000DB1F 488B4510                	mov rax, ENV
 18605 0000DB23 488B4008                	mov rax, qword [rax + 8 * 1]
 18606 0000DB27 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18607 0000DB2A 488B00                  	mov rax, qword [rax]
 18608 0000DB2D 803804                  	cmp byte [rax], T_closure
 18609 0000DB30 0F85F28E0000            	jne L_error_non_closure
 18610 0000DB36 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18611 0000DB39 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 18612 0000DB3C FF7500                  	push qword[rbp]
 18613 0000DB3F 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 18614 0000DB44 48895D10                	mov qword[rbp + 8*2],rbx
 18615 0000DB48 48C7451805000000        	mov qword[rbp + 8*3], 5	 ;n turns to m
 18616 0000DB50 BF00000000              	mov rdi,0
 18617 0000DB55 EB00                    	jmp .L_tc_recycle_frame_loop_00b4
 18618                                  .L_tc_recycle_frame_loop_00b4:
 18619 0000DB57 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 18620 0000DB5B 740F                    	je .L_tc_recycle_frame_done_00b4
 18621 0000DB5D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 18622 0000DB62 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 18623 0000DB67 48FFC7                  	inc rdi
 18624 0000DB6A EBEB                    	jmp .L_tc_recycle_frame_loop_00b4
 18625                                  .L_tc_recycle_frame_done_00b4:
 18626 0000DB6C 4889EC                  	mov rsp, rbp	; point to last argument
 18627 0000DB6F 5D                      	pop rbp
 18628 0000DB70 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18629 0000DB73 E982000000              	jmp .L_if_end_005e
 18630                                  .L_if_else_005e:
 18631                                  	; preparing a tail-call
 18632 0000DB78 488B4520                	mov rax, PARAM(0)	; param len1
 18633 0000DB7C 50                      	push rax
 18634 0000DB7D 488B4510                	mov rax, ENV
 18635 0000DB81 488B00                  	mov rax, qword [rax + 8 * 0]
 18636 0000DB84 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 18637 0000DB87 50                      	push rax
 18638 0000DB88 488B4528                	mov rax, PARAM(1)	; param len2
 18639 0000DB8C 50                      	push rax
 18640 0000DB8D 488B4510                	mov rax, ENV
 18641 0000DB91 488B00                  	mov rax, qword [rax + 8 * 0]
 18642 0000DB94 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 18643 0000DB98 50                      	push rax
 18644 0000DB99 48B8-                   	mov rax, L_constants + 2135
 18644 0000DB9B [5708000000000000] 
 18645 0000DBA3 50                      	push rax
 18646 0000DBA4 6A05                    	push 5	; arg count
 18647 0000DBA6 488B4510                	mov rax, ENV
 18648 0000DBAA 488B4008                	mov rax, qword [rax + 8 * 1]
 18649 0000DBAE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18650 0000DBB1 488B00                  	mov rax, qword [rax]
 18651 0000DBB4 803804                  	cmp byte [rax], T_closure
 18652 0000DBB7 0F856B8E0000            	jne L_error_non_closure
 18653 0000DBBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 18654 0000DBC0 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 18655 0000DBC3 FF7500                  	push qword[rbp]
 18656 0000DBC6 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 18657 0000DBCB 48895D10                	mov qword[rbp + 8*2],rbx
 18658 0000DBCF 48C7451805000000        	mov qword[rbp + 8*3], 5	 ;n turns to m
 18659 0000DBD7 BF00000000              	mov rdi,0
 18660 0000DBDC EB00                    	jmp .L_tc_recycle_frame_loop_00b5
 18661                                  .L_tc_recycle_frame_loop_00b5:
 18662 0000DBDE 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 18663 0000DBE2 740F                    	je .L_tc_recycle_frame_done_00b5
 18664 0000DBE4 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 18665 0000DBE9 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 18666 0000DBEE 48FFC7                  	inc rdi
 18667 0000DBF1 EBEB                    	jmp .L_tc_recycle_frame_loop_00b5
 18668                                  .L_tc_recycle_frame_done_00b5:
 18669 0000DBF3 4889EC                  	mov rsp, rbp	; point to last argument
 18670 0000DBF6 5D                      	pop rbp
 18671 0000DBF7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18672                                  .L_if_end_005e:
 18673 0000DBFA C9                      	leave
 18674 0000DBFB C22000                  	ret AND_KILL_FRAME(2)
 18675                                  .L_lambda_simple_end_006e:	; new closure is in rax
 18676 0000DBFE 803804                  	cmp byte [rax], T_closure
 18677 0000DC01 0F85218E0000            	jne L_error_non_closure
 18678 0000DC07 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18679 0000DC0A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 18680 0000DC0D FF7500                  	push qword[rbp]
 18681 0000DC10 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 18682 0000DC15 48895D10                	mov qword[rbp + 8*2],rbx
 18683 0000DC19 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 18684 0000DC21 BF00000000              	mov rdi,0
 18685 0000DC26 EB00                    	jmp .L_tc_recycle_frame_loop_00b6
 18686                                  .L_tc_recycle_frame_loop_00b6:
 18687 0000DC28 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 18688 0000DC2C 740F                    	je .L_tc_recycle_frame_done_00b6
 18689 0000DC2E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 18690 0000DC33 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 18691 0000DC38 48FFC7                  	inc rdi
 18692 0000DC3B EBEB                    	jmp .L_tc_recycle_frame_loop_00b6
 18693                                  .L_tc_recycle_frame_done_00b6:
 18694 0000DC3D 4889EC                  	mov rsp, rbp	; point to last argument
 18695 0000DC40 5D                      	pop rbp
 18696 0000DC41 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18697 0000DC44 C9                      	leave
 18698 0000DC45 C22000                  	ret AND_KILL_FRAME(2)
 18699                                  .L_lambda_simple_end_006d:	; new closure is in rax
 18700 0000DC48 50                      	push rax
 18701 0000DC49 6A01                    	push 1	; arg count
 18702 0000DC4B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18703 0000DC50 E87C8E0000              	call malloc
 18704 0000DC55 50                      	push rax
 18705 0000DC56 BF08000000              	mov rdi, 8 * 1	; new rib
 18706 0000DC5B E8718E0000              	call malloc
 18707 0000DC60 50                      	push rax
 18708 0000DC61 BF18000000              	mov rdi, 8 * 3	; extended env
 18709 0000DC66 E8668E0000              	call malloc
 18710 0000DC6B 488B7D10                	mov rdi, ENV
 18711 0000DC6F BE00000000              	mov rsi, 0
 18712 0000DC74 BA01000000              	mov rdx, 1
 18713                                  .L_lambda_simple_env_loop_006f:	; ext_env[i + 1] <-- env[i]
 18714 0000DC79 4883FE02                	cmp rsi, 2
 18715 0000DC7D 7410                    	je .L_lambda_simple_env_end_006f
 18716 0000DC7F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18717 0000DC83 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18718 0000DC87 48FFC6                  	inc rsi
 18719 0000DC8A 48FFC2                  	inc rdx
 18720 0000DC8D EBEA                    	jmp .L_lambda_simple_env_loop_006f
 18721                                  .L_lambda_simple_env_end_006f:
 18722 0000DC8F 5B                      	pop rbx
 18723 0000DC90 BE00000000              	mov rsi, 0
 18724                                  .L_lambda_simple_params_loop_006f:	; copy params
 18725 0000DC95 4883FE01                	cmp rsi, 1
 18726 0000DC99 740E                    	je .L_lambda_simple_params_end_006f
 18727 0000DC9B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18728 0000DCA0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18729 0000DCA4 48FFC6                  	inc rsi
 18730 0000DCA7 EBEC                    	jmp .L_lambda_simple_params_loop_006f
 18731                                  .L_lambda_simple_params_end_006f:
 18732 0000DCA9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18733 0000DCAC 4889C3                  	mov rbx, rax
 18734 0000DCAF 58                      	pop rax
 18735 0000DCB0 C60004                  	mov byte [rax], T_closure
 18736 0000DCB3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18737 0000DCB7 48C74009[C4DC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_006f
 18738 0000DCBF E92C050000              	jmp .L_lambda_simple_end_006f
 18739                                  .L_lambda_simple_code_006f:	; lambda-simple body
 18740 0000DCC4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18741 0000DCCA 740B                    	je .L_lambda_simple_arity_check_ok_006f
 18742 0000DCCC FF742410                	push qword [rsp + 8 * 2]
 18743 0000DCD0 6A01                    	push 1
 18744 0000DCD2 E9B38D0000              	jmp L_error_incorrect_arity_simple
 18745                                  .L_lambda_simple_arity_check_ok_006f:
 18746 0000DCD7 C8000000                	enter 0, 0
 18747                                  	; preparing a tail-call
 18748 0000DCDB 48B8-                   	mov rax, L_constants + 1993
 18748 0000DCDD [C907000000000000] 
 18749 0000DCE5 50                      	push rax
 18750 0000DCE6 6A01                    	push 1	; arg count
 18751 0000DCE8 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18752 0000DCED E8DF8D0000              	call malloc
 18753 0000DCF2 50                      	push rax
 18754 0000DCF3 BF08000000              	mov rdi, 8 * 1	; new rib
 18755 0000DCF8 E8D48D0000              	call malloc
 18756 0000DCFD 50                      	push rax
 18757 0000DCFE BF20000000              	mov rdi, 8 * 4	; extended env
 18758 0000DD03 E8C98D0000              	call malloc
 18759 0000DD08 488B7D10                	mov rdi, ENV
 18760 0000DD0C BE00000000              	mov rsi, 0
 18761 0000DD11 BA01000000              	mov rdx, 1
 18762                                  .L_lambda_simple_env_loop_0070:	; ext_env[i + 1] <-- env[i]
 18763 0000DD16 4883FE03                	cmp rsi, 3
 18764 0000DD1A 7410                    	je .L_lambda_simple_env_end_0070
 18765 0000DD1C 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18766 0000DD20 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18767 0000DD24 48FFC6                  	inc rsi
 18768 0000DD27 48FFC2                  	inc rdx
 18769 0000DD2A EBEA                    	jmp .L_lambda_simple_env_loop_0070
 18770                                  .L_lambda_simple_env_end_0070:
 18771 0000DD2C 5B                      	pop rbx
 18772 0000DD2D BE00000000              	mov rsi, 0
 18773                                  .L_lambda_simple_params_loop_0070:	; copy params
 18774 0000DD32 4883FE01                	cmp rsi, 1
 18775 0000DD36 740E                    	je .L_lambda_simple_params_end_0070
 18776 0000DD38 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18777 0000DD3D 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18778 0000DD41 48FFC6                  	inc rsi
 18779 0000DD44 EBEC                    	jmp .L_lambda_simple_params_loop_0070
 18780                                  .L_lambda_simple_params_end_0070:
 18781 0000DD46 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18782 0000DD49 4889C3                  	mov rbx, rax
 18783 0000DD4C 58                      	pop rax
 18784 0000DD4D C60004                  	mov byte [rax], T_closure
 18785 0000DD50 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18786 0000DD54 48C74009[61DD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0070
 18787 0000DD5C E945040000              	jmp .L_lambda_simple_end_0070
 18788                                  .L_lambda_simple_code_0070:	; lambda-simple body
 18789 0000DD61 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18790 0000DD67 740B                    	je .L_lambda_simple_arity_check_ok_0070
 18791 0000DD69 FF742410                	push qword [rsp + 8 * 2]
 18792 0000DD6D 6A01                    	push 1
 18793 0000DD6F E9168D0000              	jmp L_error_incorrect_arity_simple
 18794                                  .L_lambda_simple_arity_check_ok_0070:
 18795 0000DD74 C8000000                	enter 0, 0
 18796 0000DD78 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 18797 0000DD7C 488903                  	mov qword [rbx], rax
 18798                                  
 18799 0000DD7F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18800 0000DD84 E8488D0000              	call malloc
 18801 0000DD89 50                      	push rax
 18802 0000DD8A BF08000000              	mov rdi, 8 * 1	; new rib
 18803 0000DD8F E83D8D0000              	call malloc
 18804 0000DD94 50                      	push rax
 18805 0000DD95 BF28000000              	mov rdi, 8 * 5	; extended env
 18806 0000DD9A E8328D0000              	call malloc
 18807 0000DD9F 488B7D10                	mov rdi, ENV
 18808 0000DDA3 BE00000000              	mov rsi, 0
 18809 0000DDA8 BA01000000              	mov rdx, 1
 18810                                  .L_lambda_simple_env_loop_0071:	; ext_env[i + 1] <-- env[i]
 18811 0000DDAD 4883FE04                	cmp rsi, 4
 18812 0000DDB1 7410                    	je .L_lambda_simple_env_end_0071
 18813 0000DDB3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18814 0000DDB7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18815 0000DDBB 48FFC6                  	inc rsi
 18816 0000DDBE 48FFC2                  	inc rdx
 18817 0000DDC1 EBEA                    	jmp .L_lambda_simple_env_loop_0071
 18818                                  .L_lambda_simple_env_end_0071:
 18819 0000DDC3 5B                      	pop rbx
 18820 0000DDC4 BE00000000              	mov rsi, 0
 18821                                  .L_lambda_simple_params_loop_0071:	; copy params
 18822 0000DDC9 4883FE01                	cmp rsi, 1
 18823 0000DDCD 740E                    	je .L_lambda_simple_params_end_0071
 18824 0000DDCF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18825 0000DDD4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18826 0000DDD8 48FFC6                  	inc rsi
 18827 0000DDDB EBEC                    	jmp .L_lambda_simple_params_loop_0071
 18828                                  .L_lambda_simple_params_end_0071:
 18829 0000DDDD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18830 0000DDE0 4889C3                  	mov rbx, rax
 18831 0000DDE3 58                      	pop rax
 18832 0000DDE4 C60004                  	mov byte [rax], T_closure
 18833 0000DDE7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18834 0000DDEB 48C74009[F8DD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0071
 18835 0000DDF3 E954010000              	jmp .L_lambda_simple_end_0071
 18836                                  .L_lambda_simple_code_0071:	; lambda-simple body
 18837 0000DDF8 48837C241002            	cmp qword [rsp + 8 * 2], 2
 18838 0000DDFE 740B                    	je .L_lambda_simple_arity_check_ok_0071
 18839 0000DE00 FF742410                	push qword [rsp + 8 * 2]
 18840 0000DE04 6A02                    	push 2
 18841 0000DE06 E97F8C0000              	jmp L_error_incorrect_arity_simple
 18842                                  .L_lambda_simple_arity_check_ok_0071:
 18843 0000DE0B C8000000                	enter 0, 0
 18844                                  	; preparing a non-tail-call
 18845 0000DE0F 488B4528                	mov rax, PARAM(1)	; param strs
 18846 0000DE13 50                      	push rax
 18847 0000DE14 6A01                    	push 1	; arg count
 18848 0000DE16 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 18849 0000DE1E 803805                  	cmp byte [rax], T_undefined
 18850 0000DE21 0F847D8B0000            	je L_error_fvar_undefined
 18851 0000DE27 803804                  	cmp byte [rax], T_closure
 18852 0000DE2A 0F85F88B0000            	jne L_error_non_closure
 18853 0000DE30 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18854 0000DE33 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18855 0000DE36 483D[02000000]          	cmp rax, sob_boolean_false
 18856 0000DE3C 0F8506010000            	jne .L_or_end_000c
 18857                                  	; preparing a non-tail-call
 18858                                  	; preparing a non-tail-call
 18859 0000DE42 488B4528                	mov rax, PARAM(1)	; param strs
 18860 0000DE46 50                      	push rax
 18861 0000DE47 6A01                    	push 1	; arg count
 18862 0000DE49 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18863 0000DE51 803805                  	cmp byte [rax], T_undefined
 18864 0000DE54 0F844A8B0000            	je L_error_fvar_undefined
 18865 0000DE5A 803804                  	cmp byte [rax], T_closure
 18866 0000DE5D 0F85C58B0000            	jne L_error_non_closure
 18867 0000DE63 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18868 0000DE66 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18869 0000DE69 50                      	push rax
 18870 0000DE6A 488B4520                	mov rax, PARAM(0)	; param str
 18871 0000DE6E 50                      	push rax
 18872 0000DE6F 6A02                    	push 2	; arg count
 18873 0000DE71 488B4510                	mov rax, ENV
 18874 0000DE75 488B4008                	mov rax, qword [rax + 8 * 1]
 18875 0000DE79 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<?
 18876 0000DE7C 803804                  	cmp byte [rax], T_closure
 18877 0000DE7F 0F85A38B0000            	jne L_error_non_closure
 18878 0000DE85 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18879 0000DE88 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18880 0000DE8B 483D[02000000]          	cmp rax, sob_boolean_false
 18881 0000DE91 0F84A7000000            	je .L_if_else_005f
 18882                                  	; preparing a tail-call
 18883                                  	; preparing a non-tail-call
 18884 0000DE97 488B4528                	mov rax, PARAM(1)	; param strs
 18885 0000DE9B 50                      	push rax
 18886 0000DE9C 6A01                    	push 1	; arg count
 18887 0000DE9E 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 18888 0000DEA6 803805                  	cmp byte [rax], T_undefined
 18889 0000DEA9 0F84F58A0000            	je L_error_fvar_undefined
 18890 0000DEAF 803804                  	cmp byte [rax], T_closure
 18891 0000DEB2 0F85708B0000            	jne L_error_non_closure
 18892 0000DEB8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18893 0000DEBB FF5009                  	call SOB_CLOSURE_CODE(rax)
 18894 0000DEBE 50                      	push rax
 18895                                  	; preparing a non-tail-call
 18896 0000DEBF 488B4528                	mov rax, PARAM(1)	; param strs
 18897 0000DEC3 50                      	push rax
 18898 0000DEC4 6A01                    	push 1	; arg count
 18899 0000DEC6 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 18900 0000DECE 803805                  	cmp byte [rax], T_undefined
 18901 0000DED1 0F84CD8A0000            	je L_error_fvar_undefined
 18902 0000DED7 803804                  	cmp byte [rax], T_closure
 18903 0000DEDA 0F85488B0000            	jne L_error_non_closure
 18904 0000DEE0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 18905 0000DEE3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 18906 0000DEE6 50                      	push rax
 18907 0000DEE7 6A02                    	push 2	; arg count
 18908 0000DEE9 488B4510                	mov rax, ENV
 18909 0000DEED 488B00                  	mov rax, qword [rax + 8 * 0]
 18910 0000DEF0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 18911 0000DEF3 488B00                  	mov rax, qword [rax]
 18912 0000DEF6 803804                  	cmp byte [rax], T_closure
 18913 0000DEF9 0F85298B0000            	jne L_error_non_closure
 18914 0000DEFF FF7001                  	push SOB_CLOSURE_ENV(rax)
 18915 0000DF02 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 18916 0000DF05 FF7500                  	push qword[rbp]
 18917 0000DF08 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 18918 0000DF0D 48895D10                	mov qword[rbp + 8*2],rbx
 18919 0000DF11 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 18920 0000DF19 BF00000000              	mov rdi,0
 18921 0000DF1E EB00                    	jmp .L_tc_recycle_frame_loop_00b7
 18922                                  .L_tc_recycle_frame_loop_00b7:
 18923 0000DF20 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 18924 0000DF24 740F                    	je .L_tc_recycle_frame_done_00b7
 18925 0000DF26 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 18926 0000DF2B 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 18927 0000DF30 48FFC7                  	inc rdi
 18928 0000DF33 EBEB                    	jmp .L_tc_recycle_frame_loop_00b7
 18929                                  .L_tc_recycle_frame_done_00b7:
 18930 0000DF35 4889EC                  	mov rsp, rbp	; point to last argument
 18931 0000DF38 5D                      	pop rbp
 18932 0000DF39 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 18933 0000DF3C EB0A                    	jmp .L_if_end_005f
 18934                                  .L_if_else_005f:
 18935 0000DF3E 48B8-                   	mov rax, L_constants + 2
 18935 0000DF40 [0200000000000000] 
 18936                                  .L_if_end_005f:
 18937                                  .L_or_end_000c:
 18938 0000DF48 C9                      	leave
 18939 0000DF49 C22000                  	ret AND_KILL_FRAME(2)
 18940                                  .L_lambda_simple_end_0071:	; new closure is in rax
 18941 0000DF4C 50                      	push rax
 18942 0000DF4D 488B4520                	mov rax, PARAM(0)	; param run
 18943 0000DF51 8F00                    	pop qword [rax]
 18944 0000DF53 48B8-                   	mov rax, sob_void
 18944 0000DF55 [0000000000000000] 
 18945                                  
 18946 0000DF5D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 18947 0000DF62 E86A8B0000              	call malloc
 18948 0000DF67 50                      	push rax
 18949 0000DF68 BF08000000              	mov rdi, 8 * 1	; new rib
 18950 0000DF6D E85F8B0000              	call malloc
 18951 0000DF72 50                      	push rax
 18952 0000DF73 BF28000000              	mov rdi, 8 * 5	; extended env
 18953 0000DF78 E8548B0000              	call malloc
 18954 0000DF7D 488B7D10                	mov rdi, ENV
 18955 0000DF81 BE00000000              	mov rsi, 0
 18956 0000DF86 BA01000000              	mov rdx, 1
 18957                                  .L_lambda_opt_env_loop_0011:	; ext_env[i + 1] <-- env[i]
 18958 0000DF8B 4883FE04                	cmp rsi, 4
 18959 0000DF8F 7410                    	je .L_lambda_opt_env_end_0011
 18960 0000DF91 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 18961 0000DF95 48890CD0                	mov qword [rax + 8 * rdx], rcx
 18962 0000DF99 48FFC6                  	inc rsi
 18963 0000DF9C 48FFC2                  	inc rdx
 18964 0000DF9F EBEA                    	jmp .L_lambda_opt_env_loop_0011
 18965                                  .L_lambda_opt_env_end_0011:
 18966 0000DFA1 5B                      	pop rbx
 18967 0000DFA2 BE00000000              	mov rsi, 0
 18968                                  .L_lambda_opt_params_loop_0011:	; copy params
 18969 0000DFA7 4883FE01                	cmp rsi, 1
 18970 0000DFAB 740E                    	je .L_lambda_opt_params_end_0011
 18971 0000DFAD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 18972 0000DFB2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 18973 0000DFB6 48FFC6                  	inc rsi
 18974 0000DFB9 EBEC                    	jmp .L_lambda_opt_params_loop_0011
 18975                                  .L_lambda_opt_params_end_0011:
 18976 0000DFBB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 18977 0000DFBE 4889C3                  	mov rbx, rax
 18978 0000DFC1 58                      	pop rax
 18979 0000DFC2 C60004                  	mov byte [rax], T_closure
 18980 0000DFC5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 18981 0000DFC9 48C74009[D6DF0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0011
 18982 0000DFD1 E9CC010000              	jmp .L_lambda_opt_end_0011
 18983                                  .L_lambda_opt_code_0011:	; lambda-opt body
 18984 0000DFD6 48837C241001            	cmp qword [rsp + 8 * 2], 1
 18985 0000DFDC 7411                    	je .L_lambda_opt_arity_check_exact_0011
 18986 0000DFDE 0F8FB1000000            	jg .L_lambda_opt_arity_check_more_0011
 18987 0000DFE4 FF742410                	push qword [rsp + 8 * 2]
 18988 0000DFE8 6A01                    	push 1
 18989 0000DFEA E9AF8A0000              	jmp L_error_incorrect_arity_opt
 18990                                  .L_lambda_opt_arity_check_exact_0011:
 18991 0000DFEF 4883EC08                	sub rsp, 8
 18992 0000DFF3 488B442408              	mov rax, qword[rsp + 8 *1]
 18993 0000DFF8 48890424                	mov qword[rsp], rax  
 18994 0000DFFC 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 18995 0000E001 4889442408              	mov qword[rsp + 8 * 1], rax
 18996 0000E006 B802000000              	mov rax, 2
 18997 0000E00B 4889442410              	mov qword[rsp + 8 *2], rax
 18998 0000E010 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 18999 0000E015 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 19000 0000E01A 48B8-                   	mov rax, sob_nil
 19000 0000E01C [0100000000000000] 
 19001 0000E024 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 19002 0000E029 C8000000                	enter 0, 0
 19003                                  	; preparing a tail-call
 19004 0000E02D 488B4528                	mov rax, PARAM(1)	; param strs
 19005 0000E031 50                      	push rax
 19006 0000E032 488B4520                	mov rax, PARAM(0)	; param str
 19007 0000E036 50                      	push rax
 19008 0000E037 6A02                    	push 2	; arg count
 19009 0000E039 488B4510                	mov rax, ENV
 19010 0000E03D 488B00                  	mov rax, qword [rax + 8 * 0]
 19011 0000E040 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19012 0000E043 488B00                  	mov rax, qword [rax]
 19013 0000E046 803804                  	cmp byte [rax], T_closure
 19014 0000E049 0F85D9890000            	jne L_error_non_closure
 19015 0000E04F FF7001                  	push SOB_CLOSURE_ENV(rax)
 19016 0000E052 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 19017 0000E055 FF7500                  	push qword[rbp]
 19018 0000E058 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 19019 0000E05D 48895D10                	mov qword[rbp + 8*2],rbx
 19020 0000E061 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 19021 0000E069 BF00000000              	mov rdi,0
 19022 0000E06E EB00                    	jmp .L_tc_recycle_frame_loop_00b9
 19023                                  .L_tc_recycle_frame_loop_00b9:
 19024 0000E070 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 19025 0000E074 740F                    	je .L_tc_recycle_frame_done_00b9
 19026 0000E076 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 19027 0000E07B 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 19028 0000E080 48FFC7                  	inc rdi
 19029 0000E083 EBEB                    	jmp .L_tc_recycle_frame_loop_00b9
 19030                                  .L_tc_recycle_frame_done_00b9:
 19031 0000E085 4889EC                  	mov rsp, rbp	; point to last argument
 19032 0000E088 5D                      	pop rbp
 19033 0000E089 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19034 0000E08C C9                      	leave
 19035 0000E08D C22000                  	ret AND_KILL_FRAME(2)
 19036 0000E090 E90D010000              	jmp .L_lambda_opt_end_0011	; new closure is in rax
 19037                                  .L_lambda_opt_arity_check_more_0011:
 19038 0000E095 488B442410              	mov rax, qword[rsp + 2 * 8]
 19039 0000E09A 4889C7                  	mov rdi, rax
 19040 0000E09D 49B9-                   	mov r9, sob_nil
 19040 0000E09F [0100000000000000] 
 19041 0000E0A7 4C8B442410              	mov r8, qword[rsp+2*8]
 19042                                  .L_lambda_opt_stack_shrink_loop_0011:
 19043 0000E0AC 4983F801                	cmp r8, 1
 19044 0000E0B0 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0011
 19045 0000E0B2 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 19046 0000E0B7 BF11000000              	mov rdi, 1+8+8	;for pair
 19047 0000E0BC E8108A0000              	call malloc	 ;to create the pair in the stack
 19048 0000E0C1 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 19049 0000E0C4 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 19050 0000E0C8 4C894809                 	mov qword[rax+1+8],r9
 19051 0000E0CC 4989C1                  	mov r9 , rax	 ; for the recursion 
 19052 0000E0CF 49FFC8                  	dec r8
 19053 0000E0D2 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0011
 19054                                  .L_lambda_opt_stack_shrink_loop_exit_0011:
 19055 0000E0D4 488B442410              	mov rax, qword[rsp + 2 * 8]
 19056 0000E0D9 BF02000000              	mov rdi, 2
 19057 0000E0DE 4829F8                  	sub rax, rdi
 19058 0000E0E1 4889C7                  	mov rdi, rax
 19059 0000E0E4 486BC008                	imul rax,8
 19060 0000E0E8 4801C4                  	add rsp, rax
 19061 0000E0EB 4889E0                  	mov rax, rsp
 19062 0000E0EE 4989F8                  	mov r8, rdi
 19063 0000E0F1 4D6BC008                	imul r8, 8
 19064 0000E0F5 4C29C0                  	sub rax, r8
 19065 0000E0F8 4989C2                  	mov r10, rax	; holds the original ret in the stack
 19066 0000E0FB 4983C218                	add r10, 8*3
 19067 0000E0FF 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 19068 0000E103 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 19069 0000E106 4D6BC008                	imul r8,8
 19070 0000E10A 4C01C0                  	add rax, r8
 19071 0000E10D 4C8908                  	mov qword[rax] ,r9
 19072 0000E110 4D89D0                   	mov r8, r10
 19073 0000E113 4983C000                	add r8, 8 * 0
 19074 0000E117 4D8B08                  	mov r9,qword[r8]
 19075 0000E11A 4D890CF8                	mov qword [r8 + rdi * 8], r9
 19076 0000E11E 4983EA18                	sub r10, 8*3
 19077 0000E122 48C744241002000000      	mov qword [rsp+2*8], 2
 19078 0000E12B 498B4208                	mov rax, qword[r10 + 1 * 8]
 19079 0000E12F 4889442408              	mov qword[rsp + 1*8] ,rax
 19080 0000E134 498B02                  	mov rax, qword[r10]
 19081 0000E137 48890424                	mov qword[rsp], rax
 19082 0000E13B C8000000                	enter 0, 0
 19083                                  	; preparing a tail-call
 19084 0000E13F 488B4528                	mov rax, PARAM(1)	; param strs
 19085 0000E143 50                      	push rax
 19086 0000E144 488B4520                	mov rax, PARAM(0)	; param str
 19087 0000E148 50                      	push rax
 19088 0000E149 6A02                    	push 2	; arg count
 19089 0000E14B 488B4510                	mov rax, ENV
 19090 0000E14F 488B00                  	mov rax, qword [rax + 8 * 0]
 19091 0000E152 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19092 0000E155 488B00                  	mov rax, qword [rax]
 19093 0000E158 803804                  	cmp byte [rax], T_closure
 19094 0000E15B 0F85C7880000            	jne L_error_non_closure
 19095 0000E161 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19096 0000E164 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 19097 0000E167 FF7500                  	push qword[rbp]
 19098 0000E16A 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 19099 0000E16F 48895D10                	mov qword[rbp + 8*2],rbx
 19100 0000E173 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 19101 0000E17B BF00000000              	mov rdi,0
 19102 0000E180 EB00                    	jmp .L_tc_recycle_frame_loop_00b8
 19103                                  .L_tc_recycle_frame_loop_00b8:
 19104 0000E182 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 19105 0000E186 740F                    	je .L_tc_recycle_frame_done_00b8
 19106 0000E188 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 19107 0000E18D 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 19108 0000E192 48FFC7                  	inc rdi
 19109 0000E195 EBEB                    	jmp .L_tc_recycle_frame_loop_00b8
 19110                                  .L_tc_recycle_frame_done_00b8:
 19111 0000E197 4889EC                  	mov rsp, rbp	; point to last argument
 19112 0000E19A 5D                      	pop rbp
 19113 0000E19B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19114 0000E19E C9                      	leave
 19115 0000E19F C22000                  	ret AND_KILL_FRAME(2)
 19116                                  .L_lambda_opt_end_0011:	; new closure is in rax
 19117 0000E1A2 C9                      	leave
 19118 0000E1A3 C21800                  	ret AND_KILL_FRAME(1)
 19119                                  .L_lambda_simple_end_0070:	; new closure is in rax
 19120 0000E1A6 803804                  	cmp byte [rax], T_closure
 19121 0000E1A9 0F8579880000            	jne L_error_non_closure
 19122 0000E1AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 19123 0000E1B2 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 19124 0000E1B5 FF7500                  	push qword[rbp]
 19125 0000E1B8 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 19126 0000E1BD 48895D10                	mov qword[rbp + 8*2],rbx
 19127 0000E1C1 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 19128 0000E1C9 BF00000000              	mov rdi,0
 19129 0000E1CE EB00                    	jmp .L_tc_recycle_frame_loop_00ba
 19130                                  .L_tc_recycle_frame_loop_00ba:
 19131 0000E1D0 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 19132 0000E1D4 740F                    	je .L_tc_recycle_frame_done_00ba
 19133 0000E1D6 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 19134 0000E1DB 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 19135 0000E1E0 48FFC7                  	inc rdi
 19136 0000E1E3 EBEB                    	jmp .L_tc_recycle_frame_loop_00ba
 19137                                  .L_tc_recycle_frame_done_00ba:
 19138 0000E1E5 4889EC                  	mov rsp, rbp	; point to last argument
 19139 0000E1E8 5D                      	pop rbp
 19140 0000E1E9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19141 0000E1EC C9                      	leave
 19142 0000E1ED C21800                  	ret AND_KILL_FRAME(1)
 19143                                  .L_lambda_simple_end_006f:	; new closure is in rax
 19144 0000E1F0 803804                  	cmp byte [rax], T_closure
 19145 0000E1F3 0F852F880000            	jne L_error_non_closure
 19146 0000E1F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19147 0000E1FC FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 19148 0000E1FF FF7500                  	push qword[rbp]
 19149 0000E202 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 19150 0000E207 48895D10                	mov qword[rbp + 8*2],rbx
 19151 0000E20B 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 19152 0000E213 BF00000000              	mov rdi,0
 19153 0000E218 EB00                    	jmp .L_tc_recycle_frame_loop_00bb
 19154                                  .L_tc_recycle_frame_loop_00bb:
 19155 0000E21A 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 19156 0000E21E 740F                    	je .L_tc_recycle_frame_done_00bb
 19157 0000E220 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 19158 0000E225 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 19159 0000E22A 48FFC7                  	inc rdi
 19160 0000E22D EBEB                    	jmp .L_tc_recycle_frame_loop_00bb
 19161                                  .L_tc_recycle_frame_done_00bb:
 19162 0000E22F 4889EC                  	mov rsp, rbp	; point to last argument
 19163 0000E232 5D                      	pop rbp
 19164 0000E233 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19165 0000E236 C9                      	leave
 19166 0000E237 C21800                  	ret AND_KILL_FRAME(1)
 19167                                  .L_lambda_simple_end_006b:	; new closure is in rax
 19168 0000E23A 803804                  	cmp byte [rax], T_closure
 19169 0000E23D 0F85E5870000            	jne L_error_non_closure
 19170 0000E243 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19171 0000E246 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 19172 0000E249 FF7500                  	push qword[rbp]
 19173 0000E24C 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 19174 0000E251 48895D10                	mov qword[rbp + 8*2],rbx
 19175 0000E255 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 19176 0000E25D BF00000000              	mov rdi,0
 19177 0000E262 EB00                    	jmp .L_tc_recycle_frame_loop_00bc
 19178                                  .L_tc_recycle_frame_loop_00bc:
 19179 0000E264 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 19180 0000E268 740F                    	je .L_tc_recycle_frame_done_00bc
 19181 0000E26A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 19182 0000E26F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 19183 0000E274 48FFC7                  	inc rdi
 19184 0000E277 EBEB                    	jmp .L_tc_recycle_frame_loop_00bc
 19185                                  .L_tc_recycle_frame_done_00bc:
 19186 0000E279 4889EC                  	mov rsp, rbp	; point to last argument
 19187 0000E27C 5D                      	pop rbp
 19188 0000E27D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19189 0000E280 C9                      	leave
 19190 0000E281 C22000                  	ret AND_KILL_FRAME(2)
 19191                                  .L_lambda_simple_end_006a:	; new closure is in rax
 19192 0000E284 50                      	push rax
 19193 0000E285 6A01                    	push 1	; arg count
 19194 0000E287 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19195 0000E28C E840880000              	call malloc
 19196 0000E291 50                      	push rax
 19197 0000E292 BF00000000              	mov rdi, 8 * 0	; new rib
 19198 0000E297 E835880000              	call malloc
 19199 0000E29C 50                      	push rax
 19200 0000E29D BF08000000              	mov rdi, 8 * 1	; extended env
 19201 0000E2A2 E82A880000              	call malloc
 19202 0000E2A7 488B7D10                	mov rdi, ENV
 19203 0000E2AB BE00000000              	mov rsi, 0
 19204 0000E2B0 BA01000000              	mov rdx, 1
 19205                                  .L_lambda_simple_env_loop_0072:	; ext_env[i + 1] <-- env[i]
 19206 0000E2B5 4883FE00                	cmp rsi, 0
 19207 0000E2B9 7410                    	je .L_lambda_simple_env_end_0072
 19208 0000E2BB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19209 0000E2BF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19210 0000E2C3 48FFC6                  	inc rsi
 19211 0000E2C6 48FFC2                  	inc rdx
 19212 0000E2C9 EBEA                    	jmp .L_lambda_simple_env_loop_0072
 19213                                  .L_lambda_simple_env_end_0072:
 19214 0000E2CB 5B                      	pop rbx
 19215 0000E2CC BE00000000              	mov rsi, 0
 19216                                  .L_lambda_simple_params_loop_0072:	; copy params
 19217 0000E2D1 4883FE00                	cmp rsi, 0
 19218 0000E2D5 740E                    	je .L_lambda_simple_params_end_0072
 19219 0000E2D7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19220 0000E2DC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19221 0000E2E0 48FFC6                  	inc rsi
 19222 0000E2E3 EBEC                    	jmp .L_lambda_simple_params_loop_0072
 19223                                  .L_lambda_simple_params_end_0072:
 19224 0000E2E5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19225 0000E2E8 4889C3                  	mov rbx, rax
 19226 0000E2EB 58                      	pop rax
 19227 0000E2EC C60004                  	mov byte [rax], T_closure
 19228 0000E2EF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19229 0000E2F3 48C74009[00E30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0072
 19230 0000E2FB E947010000              	jmp .L_lambda_simple_end_0072
 19231                                  .L_lambda_simple_code_0072:	; lambda-simple body
 19232 0000E300 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19233 0000E306 740B                    	je .L_lambda_simple_arity_check_ok_0072
 19234 0000E308 FF742410                	push qword [rsp + 8 * 2]
 19235 0000E30C 6A01                    	push 1
 19236 0000E30E E977870000              	jmp L_error_incorrect_arity_simple
 19237                                  .L_lambda_simple_arity_check_ok_0072:
 19238 0000E313 C8000000                	enter 0, 0
 19239                                  	; preparing a non-tail-call
 19240 0000E317 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 19241 0000E31F 803805                  	cmp byte [rax], T_undefined
 19242 0000E322 0F847C860000            	je L_error_fvar_undefined
 19243 0000E328 50                      	push rax
 19244 0000E329 488B0425[AF120000]      	mov rax, qword [free_var_74]	; free var char<?
 19245 0000E331 803805                  	cmp byte [rax], T_undefined
 19246 0000E334 0F846A860000            	je L_error_fvar_undefined
 19247 0000E33A 50                      	push rax
 19248 0000E33B 6A02                    	push 2	; arg count
 19249 0000E33D 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19250 0000E341 803804                  	cmp byte [rax], T_closure
 19251 0000E344 0F85DE860000            	jne L_error_non_closure
 19252 0000E34A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19253 0000E34D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19254 0000E350 48890425[AB160000]      	mov qword [free_var_134], rax
 19255 0000E358 48B8-                   	mov rax, sob_void
 19255 0000E35A [0000000000000000] 
 19256                                  
 19257                                  	; preparing a non-tail-call
 19258 0000E362 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19259 0000E36A 803805                  	cmp byte [rax], T_undefined
 19260 0000E36D 0F8431860000            	je L_error_fvar_undefined
 19261 0000E373 50                      	push rax
 19262 0000E374 488B0425[38120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 19263 0000E37C 803805                  	cmp byte [rax], T_undefined
 19264 0000E37F 0F841F860000            	je L_error_fvar_undefined
 19265 0000E385 50                      	push rax
 19266 0000E386 6A02                    	push 2	; arg count
 19267 0000E388 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19268 0000E38C 803804                  	cmp byte [rax], T_closure
 19269 0000E38F 0F8593860000            	jne L_error_non_closure
 19270 0000E395 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19271 0000E398 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19272 0000E39B 48890425[DF150000]      	mov qword [free_var_122], rax
 19273 0000E3A3 48B8-                   	mov rax, sob_void
 19273 0000E3A5 [0000000000000000] 
 19274                                  
 19275                                  	; preparing a non-tail-call
 19276 0000E3AD 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 19277 0000E3B5 803805                  	cmp byte [rax], T_undefined
 19278 0000E3B8 0F84E6850000            	je L_error_fvar_undefined
 19279 0000E3BE 50                      	push rax
 19280 0000E3BF 488B0425[E2120000]      	mov rax, qword [free_var_77]	; free var char>?
 19281 0000E3C7 803805                  	cmp byte [rax], T_undefined
 19282 0000E3CA 0F84D4850000            	je L_error_fvar_undefined
 19283 0000E3D0 50                      	push rax
 19284 0000E3D1 6A02                    	push 2	; arg count
 19285 0000E3D3 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19286 0000E3D7 803804                  	cmp byte [rax], T_closure
 19287 0000E3DA 0F8548860000            	jne L_error_non_closure
 19288 0000E3E0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19289 0000E3E3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19290 0000E3E6 48890425[DE160000]      	mov qword [free_var_137], rax
 19291 0000E3EE 48B8-                   	mov rax, sob_void
 19291 0000E3F0 [0000000000000000] 
 19292                                  
 19293                                  	; preparing a non-tail-call
 19294 0000E3F8 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 19295 0000E400 803805                  	cmp byte [rax], T_undefined
 19296 0000E403 0F849B850000            	je L_error_fvar_undefined
 19297 0000E409 50                      	push rax
 19298 0000E40A 488B0425[6B120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 19299 0000E412 803805                  	cmp byte [rax], T_undefined
 19300 0000E415 0F8489850000            	je L_error_fvar_undefined
 19301 0000E41B 50                      	push rax
 19302 0000E41C 6A02                    	push 2	; arg count
 19303 0000E41E 488B4520                	mov rax, PARAM(0)	; param make-string<?
 19304 0000E422 803804                  	cmp byte [rax], T_closure
 19305 0000E425 0F85FD850000            	jne L_error_non_closure
 19306 0000E42B FF7001                  	push SOB_CLOSURE_ENV(rax)
 19307 0000E42E FF5009                  	call SOB_CLOSURE_CODE(rax)
 19308 0000E431 48890425[12160000]      	mov qword [free_var_125], rax
 19309 0000E439 48B8-                   	mov rax, sob_void
 19309 0000E43B [0000000000000000] 
 19310 0000E443 C9                      	leave
 19311 0000E444 C21800                  	ret AND_KILL_FRAME(1)
 19312                                  .L_lambda_simple_end_0072:	; new closure is in rax
 19313 0000E447 803804                  	cmp byte [rax], T_closure
 19314 0000E44A 0F85D8850000            	jne L_error_non_closure
 19315 0000E450 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19316 0000E453 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19317                                  
 19318 0000E456 4889C7                  	mov rdi, rax
 19319 0000E459 E8C8880000              	call print_sexpr_if_not_void
 19320                                  	; preparing a non-tail-call
 19321 0000E45E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19322 0000E463 E869860000              	call malloc
 19323 0000E468 50                      	push rax
 19324 0000E469 BF00000000              	mov rdi, 8 * 0	; new rib
 19325 0000E46E E85E860000              	call malloc
 19326 0000E473 50                      	push rax
 19327 0000E474 BF08000000              	mov rdi, 8 * 1	; extended env
 19328 0000E479 E853860000              	call malloc
 19329 0000E47E 488B7D10                	mov rdi, ENV
 19330 0000E482 BE00000000              	mov rsi, 0
 19331 0000E487 BA01000000              	mov rdx, 1
 19332                                  .L_lambda_simple_env_loop_0073:	; ext_env[i + 1] <-- env[i]
 19333 0000E48C 4883FE00                	cmp rsi, 0
 19334 0000E490 7410                    	je .L_lambda_simple_env_end_0073
 19335 0000E492 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19336 0000E496 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19337 0000E49A 48FFC6                  	inc rsi
 19338 0000E49D 48FFC2                  	inc rdx
 19339 0000E4A0 EBEA                    	jmp .L_lambda_simple_env_loop_0073
 19340                                  .L_lambda_simple_env_end_0073:
 19341 0000E4A2 5B                      	pop rbx
 19342 0000E4A3 BE00000000              	mov rsi, 0
 19343                                  .L_lambda_simple_params_loop_0073:	; copy params
 19344 0000E4A8 4883FE00                	cmp rsi, 0
 19345 0000E4AC 740E                    	je .L_lambda_simple_params_end_0073
 19346 0000E4AE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19347 0000E4B3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19348 0000E4B7 48FFC6                  	inc rsi
 19349 0000E4BA EBEC                    	jmp .L_lambda_simple_params_loop_0073
 19350                                  .L_lambda_simple_params_end_0073:
 19351 0000E4BC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19352 0000E4BF 4889C3                  	mov rbx, rax
 19353 0000E4C2 58                      	pop rax
 19354 0000E4C3 C60004                  	mov byte [rax], T_closure
 19355 0000E4C6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19356 0000E4CA 48C74009[D7E40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0073
 19357 0000E4D2 E9C60C0000              	jmp .L_lambda_simple_end_0073
 19358                                  .L_lambda_simple_code_0073:	; lambda-simple body
 19359 0000E4D7 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19360 0000E4DD 740B                    	je .L_lambda_simple_arity_check_ok_0073
 19361 0000E4DF FF742410                	push qword [rsp + 8 * 2]
 19362 0000E4E3 6A02                    	push 2
 19363 0000E4E5 E9A0850000              	jmp L_error_incorrect_arity_simple
 19364                                  .L_lambda_simple_arity_check_ok_0073:
 19365 0000E4EA C8000000                	enter 0, 0
 19366                                  	; preparing a tail-call
 19367 0000E4EE 48B8-                   	mov rax, L_constants + 1993
 19367 0000E4F0 [C907000000000000] 
 19368 0000E4F8 50                      	push rax
 19369 0000E4F9 6A01                    	push 1	; arg count
 19370 0000E4FB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19371 0000E500 E8CC850000              	call malloc
 19372 0000E505 50                      	push rax
 19373 0000E506 BF10000000              	mov rdi, 8 * 2	; new rib
 19374 0000E50B E8C1850000              	call malloc
 19375 0000E510 50                      	push rax
 19376 0000E511 BF10000000              	mov rdi, 8 * 2	; extended env
 19377 0000E516 E8B6850000              	call malloc
 19378 0000E51B 488B7D10                	mov rdi, ENV
 19379 0000E51F BE00000000              	mov rsi, 0
 19380 0000E524 BA01000000              	mov rdx, 1
 19381                                  .L_lambda_simple_env_loop_0074:	; ext_env[i + 1] <-- env[i]
 19382 0000E529 4883FE01                	cmp rsi, 1
 19383 0000E52D 7410                    	je .L_lambda_simple_env_end_0074
 19384 0000E52F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19385 0000E533 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19386 0000E537 48FFC6                  	inc rsi
 19387 0000E53A 48FFC2                  	inc rdx
 19388 0000E53D EBEA                    	jmp .L_lambda_simple_env_loop_0074
 19389                                  .L_lambda_simple_env_end_0074:
 19390 0000E53F 5B                      	pop rbx
 19391 0000E540 BE00000000              	mov rsi, 0
 19392                                  .L_lambda_simple_params_loop_0074:	; copy params
 19393 0000E545 4883FE02                	cmp rsi, 2
 19394 0000E549 740E                    	je .L_lambda_simple_params_end_0074
 19395 0000E54B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19396 0000E550 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19397 0000E554 48FFC6                  	inc rsi
 19398 0000E557 EBEC                    	jmp .L_lambda_simple_params_loop_0074
 19399                                  .L_lambda_simple_params_end_0074:
 19400 0000E559 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19401 0000E55C 4889C3                  	mov rbx, rax
 19402 0000E55F 58                      	pop rax
 19403 0000E560 C60004                  	mov byte [rax], T_closure
 19404 0000E563 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19405 0000E567 48C74009[74E50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0074
 19406 0000E56F E9DF0B0000              	jmp .L_lambda_simple_end_0074
 19407                                  .L_lambda_simple_code_0074:	; lambda-simple body
 19408 0000E574 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19409 0000E57A 740B                    	je .L_lambda_simple_arity_check_ok_0074
 19410 0000E57C FF742410                	push qword [rsp + 8 * 2]
 19411 0000E580 6A01                    	push 1
 19412 0000E582 E903850000              	jmp L_error_incorrect_arity_simple
 19413                                  .L_lambda_simple_arity_check_ok_0074:
 19414 0000E587 C8000000                	enter 0, 0
 19415 0000E58B 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 19416 0000E58F 488903                  	mov qword [rbx], rax
 19417                                  
 19418 0000E592 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19419 0000E597 E835850000              	call malloc
 19420 0000E59C 50                      	push rax
 19421 0000E59D BF08000000              	mov rdi, 8 * 1	; new rib
 19422 0000E5A2 E82A850000              	call malloc
 19423 0000E5A7 50                      	push rax
 19424 0000E5A8 BF18000000              	mov rdi, 8 * 3	; extended env
 19425 0000E5AD E81F850000              	call malloc
 19426 0000E5B2 488B7D10                	mov rdi, ENV
 19427 0000E5B6 BE00000000              	mov rsi, 0
 19428 0000E5BB BA01000000              	mov rdx, 1
 19429                                  .L_lambda_simple_env_loop_0075:	; ext_env[i + 1] <-- env[i]
 19430 0000E5C0 4883FE02                	cmp rsi, 2
 19431 0000E5C4 7410                    	je .L_lambda_simple_env_end_0075
 19432 0000E5C6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19433 0000E5CA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19434 0000E5CE 48FFC6                  	inc rsi
 19435 0000E5D1 48FFC2                  	inc rdx
 19436 0000E5D4 EBEA                    	jmp .L_lambda_simple_env_loop_0075
 19437                                  .L_lambda_simple_env_end_0075:
 19438 0000E5D6 5B                      	pop rbx
 19439 0000E5D7 BE00000000              	mov rsi, 0
 19440                                  .L_lambda_simple_params_loop_0075:	; copy params
 19441 0000E5DC 4883FE01                	cmp rsi, 1
 19442 0000E5E0 740E                    	je .L_lambda_simple_params_end_0075
 19443 0000E5E2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19444 0000E5E7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19445 0000E5EB 48FFC6                  	inc rsi
 19446 0000E5EE EBEC                    	jmp .L_lambda_simple_params_loop_0075
 19447                                  .L_lambda_simple_params_end_0075:
 19448 0000E5F0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19449 0000E5F3 4889C3                  	mov rbx, rax
 19450 0000E5F6 58                      	pop rax
 19451 0000E5F7 C60004                  	mov byte [rax], T_closure
 19452 0000E5FA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19453 0000E5FE 48C74009[0BE60000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0075
 19454 0000E606 E944020000              	jmp .L_lambda_simple_end_0075
 19455                                  .L_lambda_simple_code_0075:	; lambda-simple body
 19456 0000E60B 48837C241005            	cmp qword [rsp + 8 * 2], 5
 19457 0000E611 740B                    	je .L_lambda_simple_arity_check_ok_0075
 19458 0000E613 FF742410                	push qword [rsp + 8 * 2]
 19459 0000E617 6A05                    	push 5
 19460 0000E619 E96C840000              	jmp L_error_incorrect_arity_simple
 19461                                  .L_lambda_simple_arity_check_ok_0075:
 19462 0000E61E C8000000                	enter 0, 0
 19463                                  	; preparing a non-tail-call
 19464 0000E622 488B4530                	mov rax, PARAM(2)	; param len1
 19465 0000E626 50                      	push rax
 19466 0000E627 488B4520                	mov rax, PARAM(0)	; param i
 19467 0000E62B 50                      	push rax
 19468 0000E62C 6A02                    	push 2	; arg count
 19469 0000E62E 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 19470 0000E636 803805                  	cmp byte [rax], T_undefined
 19471 0000E639 0F8465830000            	je L_error_fvar_undefined
 19472 0000E63F 803804                  	cmp byte [rax], T_closure
 19473 0000E642 0F85E0830000            	jne L_error_non_closure
 19474 0000E648 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19475 0000E64B FF5009                  	call SOB_CLOSURE_CODE(rax)
 19476 0000E64E 483D[02000000]          	cmp rax, sob_boolean_false
 19477 0000E654 0F85F1010000            	jne .L_or_end_000d
 19478                                  	; preparing a non-tail-call
 19479                                  	; preparing a non-tail-call
 19480 0000E65A 488B4520                	mov rax, PARAM(0)	; param i
 19481 0000E65E 50                      	push rax
 19482 0000E65F 488B4538                	mov rax, PARAM(3)	; param str2
 19483 0000E663 50                      	push rax
 19484 0000E664 6A02                    	push 2	; arg count
 19485 0000E666 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19486 0000E66E 803805                  	cmp byte [rax], T_undefined
 19487 0000E671 0F842D830000            	je L_error_fvar_undefined
 19488 0000E677 803804                  	cmp byte [rax], T_closure
 19489 0000E67A 0F85A8830000            	jne L_error_non_closure
 19490 0000E680 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19491 0000E683 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19492 0000E686 50                      	push rax
 19493                                  	; preparing a non-tail-call
 19494 0000E687 488B4520                	mov rax, PARAM(0)	; param i
 19495 0000E68B 50                      	push rax
 19496 0000E68C 488B4528                	mov rax, PARAM(1)	; param str1
 19497 0000E690 50                      	push rax
 19498 0000E691 6A02                    	push 2	; arg count
 19499 0000E693 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19500 0000E69B 803805                  	cmp byte [rax], T_undefined
 19501 0000E69E 0F8400830000            	je L_error_fvar_undefined
 19502 0000E6A4 803804                  	cmp byte [rax], T_closure
 19503 0000E6A7 0F857B830000            	jne L_error_non_closure
 19504 0000E6AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 19505 0000E6B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19506 0000E6B3 50                      	push rax
 19507 0000E6B4 6A02                    	push 2	; arg count
 19508 0000E6B6 488B4510                	mov rax, ENV
 19509 0000E6BA 488B4008                	mov rax, qword [rax + 8 * 1]
 19510 0000E6BE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char<?
 19511 0000E6C1 803804                  	cmp byte [rax], T_closure
 19512 0000E6C4 0F855E830000            	jne L_error_non_closure
 19513 0000E6CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 19514 0000E6CD FF5009                  	call SOB_CLOSURE_CODE(rax)
 19515 0000E6D0 483D[02000000]          	cmp rax, sob_boolean_false
 19516 0000E6D6 0F856F010000            	jne .L_or_end_000d
 19517                                  	; preparing a non-tail-call
 19518 0000E6DC 488B4530                	mov rax, PARAM(2)	; param len1
 19519 0000E6E0 50                      	push rax
 19520 0000E6E1 488B4520                	mov rax, PARAM(0)	; param i
 19521 0000E6E5 50                      	push rax
 19522 0000E6E6 6A02                    	push 2	; arg count
 19523 0000E6E8 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 19524 0000E6F0 803805                  	cmp byte [rax], T_undefined
 19525 0000E6F3 0F84AB820000            	je L_error_fvar_undefined
 19526 0000E6F9 803804                  	cmp byte [rax], T_closure
 19527 0000E6FC 0F8526830000            	jne L_error_non_closure
 19528 0000E702 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19529 0000E705 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19530 0000E708 483D[02000000]          	cmp rax, sob_boolean_false
 19531 0000E70E 0F842D010000            	je .L_if_else_0061
 19532                                  	; preparing a non-tail-call
 19533                                  	; preparing a non-tail-call
 19534 0000E714 488B4520                	mov rax, PARAM(0)	; param i
 19535 0000E718 50                      	push rax
 19536 0000E719 488B4538                	mov rax, PARAM(3)	; param str2
 19537 0000E71D 50                      	push rax
 19538 0000E71E 6A02                    	push 2	; arg count
 19539 0000E720 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19540 0000E728 803805                  	cmp byte [rax], T_undefined
 19541 0000E72B 0F8473820000            	je L_error_fvar_undefined
 19542 0000E731 803804                  	cmp byte [rax], T_closure
 19543 0000E734 0F85EE820000            	jne L_error_non_closure
 19544 0000E73A FF7001                  	push SOB_CLOSURE_ENV(rax)
 19545 0000E73D FF5009                  	call SOB_CLOSURE_CODE(rax)
 19546 0000E740 50                      	push rax
 19547                                  	; preparing a non-tail-call
 19548 0000E741 488B4520                	mov rax, PARAM(0)	; param i
 19549 0000E745 50                      	push rax
 19550 0000E746 488B4528                	mov rax, PARAM(1)	; param str1
 19551 0000E74A 50                      	push rax
 19552 0000E74B 6A02                    	push 2	; arg count
 19553 0000E74D 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 19554 0000E755 803805                  	cmp byte [rax], T_undefined
 19555 0000E758 0F8446820000            	je L_error_fvar_undefined
 19556 0000E75E 803804                  	cmp byte [rax], T_closure
 19557 0000E761 0F85C1820000            	jne L_error_non_closure
 19558 0000E767 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19559 0000E76A FF5009                  	call SOB_CLOSURE_CODE(rax)
 19560 0000E76D 50                      	push rax
 19561 0000E76E 6A02                    	push 2	; arg count
 19562 0000E770 488B4510                	mov rax, ENV
 19563 0000E774 488B4008                	mov rax, qword [rax + 8 * 1]
 19564 0000E778 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var char=?
 19565 0000E77C 803804                  	cmp byte [rax], T_closure
 19566 0000E77F 0F85A3820000            	jne L_error_non_closure
 19567 0000E785 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19568 0000E788 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19569 0000E78B 483D[02000000]          	cmp rax, sob_boolean_false
 19570 0000E791 0F849E000000            	je .L_if_else_0060
 19571                                  	; preparing a tail-call
 19572 0000E797 488B4540                	mov rax, PARAM(4)	; param len2
 19573 0000E79B 50                      	push rax
 19574 0000E79C 488B4538                	mov rax, PARAM(3)	; param str2
 19575 0000E7A0 50                      	push rax
 19576 0000E7A1 488B4530                	mov rax, PARAM(2)	; param len1
 19577 0000E7A5 50                      	push rax
 19578 0000E7A6 488B4528                	mov rax, PARAM(1)	; param str1
 19579 0000E7AA 50                      	push rax
 19580                                  	; preparing a non-tail-call
 19581 0000E7AB 48B8-                   	mov rax, L_constants + 2270
 19581 0000E7AD [DE08000000000000] 
 19582 0000E7B5 50                      	push rax
 19583 0000E7B6 488B4520                	mov rax, PARAM(0)	; param i
 19584 0000E7BA 50                      	push rax
 19585 0000E7BB 6A02                    	push 2	; arg count
 19586 0000E7BD 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 19587 0000E7C5 803805                  	cmp byte [rax], T_undefined
 19588 0000E7C8 0F84D6810000            	je L_error_fvar_undefined
 19589 0000E7CE 803804                  	cmp byte [rax], T_closure
 19590 0000E7D1 0F8551820000            	jne L_error_non_closure
 19591 0000E7D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19592 0000E7DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 19593 0000E7DD 50                      	push rax
 19594 0000E7DE 6A05                    	push 5	; arg count
 19595 0000E7E0 488B4510                	mov rax, ENV
 19596 0000E7E4 488B00                  	mov rax, qword [rax + 8 * 0]
 19597 0000E7E7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19598 0000E7EA 488B00                  	mov rax, qword [rax]
 19599 0000E7ED 803804                  	cmp byte [rax], T_closure
 19600 0000E7F0 0F8532820000            	jne L_error_non_closure
 19601 0000E7F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19602 0000E7F9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 19603 0000E7FC FF7500                  	push qword[rbp]
 19604 0000E7FF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 19605 0000E804 48895D10                	mov qword[rbp + 8*2],rbx
 19606 0000E808 48C7451805000000        	mov qword[rbp + 8*3], 5	 ;n turns to m
 19607 0000E810 BF00000000              	mov rdi,0
 19608 0000E815 EB00                    	jmp .L_tc_recycle_frame_loop_00bd
 19609                                  .L_tc_recycle_frame_loop_00bd:
 19610 0000E817 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 19611 0000E81B 740F                    	je .L_tc_recycle_frame_done_00bd
 19612 0000E81D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 19613 0000E822 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 19614 0000E827 48FFC7                  	inc rdi
 19615 0000E82A EBEB                    	jmp .L_tc_recycle_frame_loop_00bd
 19616                                  .L_tc_recycle_frame_done_00bd:
 19617 0000E82C 4889EC                  	mov rsp, rbp	; point to last argument
 19618 0000E82F 5D                      	pop rbp
 19619 0000E830 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19620 0000E833 EB0A                    	jmp .L_if_end_0060
 19621                                  .L_if_else_0060:
 19622 0000E835 48B8-                   	mov rax, L_constants + 2
 19622 0000E837 [0200000000000000] 
 19623                                  .L_if_end_0060:
 19624 0000E83F EB0A                    	jmp .L_if_end_0061
 19625                                  .L_if_else_0061:
 19626 0000E841 48B8-                   	mov rax, L_constants + 2
 19626 0000E843 [0200000000000000] 
 19627                                  .L_if_end_0061:
 19628                                  .L_or_end_000d:
 19629 0000E84B C9                      	leave
 19630 0000E84C C23800                  	ret AND_KILL_FRAME(5)
 19631                                  .L_lambda_simple_end_0075:	; new closure is in rax
 19632 0000E84F 50                      	push rax
 19633 0000E850 488B4520                	mov rax, PARAM(0)	; param run
 19634 0000E854 8F00                    	pop qword [rax]
 19635 0000E856 48B8-                   	mov rax, sob_void
 19635 0000E858 [0000000000000000] 
 19636                                  
 19637                                  	; preparing a tail-call
 19638 0000E860 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19639 0000E865 E867820000              	call malloc
 19640 0000E86A 50                      	push rax
 19641 0000E86B BF08000000              	mov rdi, 8 * 1	; new rib
 19642 0000E870 E85C820000              	call malloc
 19643 0000E875 50                      	push rax
 19644 0000E876 BF18000000              	mov rdi, 8 * 3	; extended env
 19645 0000E87B E851820000              	call malloc
 19646 0000E880 488B7D10                	mov rdi, ENV
 19647 0000E884 BE00000000              	mov rsi, 0
 19648 0000E889 BA01000000              	mov rdx, 1
 19649                                  .L_lambda_simple_env_loop_0076:	; ext_env[i + 1] <-- env[i]
 19650 0000E88E 4883FE02                	cmp rsi, 2
 19651 0000E892 7410                    	je .L_lambda_simple_env_end_0076
 19652 0000E894 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19653 0000E898 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19654 0000E89C 48FFC6                  	inc rsi
 19655 0000E89F 48FFC2                  	inc rdx
 19656 0000E8A2 EBEA                    	jmp .L_lambda_simple_env_loop_0076
 19657                                  .L_lambda_simple_env_end_0076:
 19658 0000E8A4 5B                      	pop rbx
 19659 0000E8A5 BE00000000              	mov rsi, 0
 19660                                  .L_lambda_simple_params_loop_0076:	; copy params
 19661 0000E8AA 4883FE01                	cmp rsi, 1
 19662 0000E8AE 740E                    	je .L_lambda_simple_params_end_0076
 19663 0000E8B0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19664 0000E8B5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19665 0000E8B9 48FFC6                  	inc rsi
 19666 0000E8BC EBEC                    	jmp .L_lambda_simple_params_loop_0076
 19667                                  .L_lambda_simple_params_end_0076:
 19668 0000E8BE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19669 0000E8C1 4889C3                  	mov rbx, rax
 19670 0000E8C4 58                      	pop rax
 19671 0000E8C5 C60004                  	mov byte [rax], T_closure
 19672 0000E8C8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19673 0000E8CC 48C74009[D9E80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0076
 19674 0000E8D4 E988020000              	jmp .L_lambda_simple_end_0076
 19675                                  .L_lambda_simple_code_0076:	; lambda-simple body
 19676 0000E8D9 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19677 0000E8DF 740B                    	je .L_lambda_simple_arity_check_ok_0076
 19678 0000E8E1 FF742410                	push qword [rsp + 8 * 2]
 19679 0000E8E5 6A02                    	push 2
 19680 0000E8E7 E99E810000              	jmp L_error_incorrect_arity_simple
 19681                                  .L_lambda_simple_arity_check_ok_0076:
 19682 0000E8EC C8000000                	enter 0, 0
 19683                                  	; preparing a tail-call
 19684                                  	; preparing a non-tail-call
 19685 0000E8F0 488B4528                	mov rax, PARAM(1)	; param str2
 19686 0000E8F4 50                      	push rax
 19687 0000E8F5 6A01                    	push 1	; arg count
 19688 0000E8F7 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 19689 0000E8FF 803805                  	cmp byte [rax], T_undefined
 19690 0000E902 0F849C800000            	je L_error_fvar_undefined
 19691 0000E908 803804                  	cmp byte [rax], T_closure
 19692 0000E90B 0F8517810000            	jne L_error_non_closure
 19693 0000E911 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19694 0000E914 FF5009                  	call SOB_CLOSURE_CODE(rax)
 19695 0000E917 50                      	push rax
 19696                                  	; preparing a non-tail-call
 19697 0000E918 488B4520                	mov rax, PARAM(0)	; param str1
 19698 0000E91C 50                      	push rax
 19699 0000E91D 6A01                    	push 1	; arg count
 19700 0000E91F 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 19701 0000E927 803805                  	cmp byte [rax], T_undefined
 19702 0000E92A 0F8474800000            	je L_error_fvar_undefined
 19703 0000E930 803804                  	cmp byte [rax], T_closure
 19704 0000E933 0F85EF800000            	jne L_error_non_closure
 19705 0000E939 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19706 0000E93C FF5009                  	call SOB_CLOSURE_CODE(rax)
 19707 0000E93F 50                      	push rax
 19708 0000E940 6A02                    	push 2	; arg count
 19709 0000E942 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19710 0000E947 E885810000              	call malloc
 19711 0000E94C 50                      	push rax
 19712 0000E94D BF10000000              	mov rdi, 8 * 2	; new rib
 19713 0000E952 E87A810000              	call malloc
 19714 0000E957 50                      	push rax
 19715 0000E958 BF20000000              	mov rdi, 8 * 4	; extended env
 19716 0000E95D E86F810000              	call malloc
 19717 0000E962 488B7D10                	mov rdi, ENV
 19718 0000E966 BE00000000              	mov rsi, 0
 19719 0000E96B BA01000000              	mov rdx, 1
 19720                                  .L_lambda_simple_env_loop_0077:	; ext_env[i + 1] <-- env[i]
 19721 0000E970 4883FE03                	cmp rsi, 3
 19722 0000E974 7410                    	je .L_lambda_simple_env_end_0077
 19723 0000E976 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19724 0000E97A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19725 0000E97E 48FFC6                  	inc rsi
 19726 0000E981 48FFC2                  	inc rdx
 19727 0000E984 EBEA                    	jmp .L_lambda_simple_env_loop_0077
 19728                                  .L_lambda_simple_env_end_0077:
 19729 0000E986 5B                      	pop rbx
 19730 0000E987 BE00000000              	mov rsi, 0
 19731                                  .L_lambda_simple_params_loop_0077:	; copy params
 19732 0000E98C 4883FE02                	cmp rsi, 2
 19733 0000E990 740E                    	je .L_lambda_simple_params_end_0077
 19734 0000E992 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19735 0000E997 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19736 0000E99B 48FFC6                  	inc rsi
 19737 0000E99E EBEC                    	jmp .L_lambda_simple_params_loop_0077
 19738                                  .L_lambda_simple_params_end_0077:
 19739 0000E9A0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19740 0000E9A3 4889C3                  	mov rbx, rax
 19741 0000E9A6 58                      	pop rax
 19742 0000E9A7 C60004                  	mov byte [rax], T_closure
 19743 0000E9AA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19744 0000E9AE 48C74009[BBE90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0077
 19745 0000E9B6 E95C010000              	jmp .L_lambda_simple_end_0077
 19746                                  .L_lambda_simple_code_0077:	; lambda-simple body
 19747 0000E9BB 48837C241002            	cmp qword [rsp + 8 * 2], 2
 19748 0000E9C1 740B                    	je .L_lambda_simple_arity_check_ok_0077
 19749 0000E9C3 FF742410                	push qword [rsp + 8 * 2]
 19750 0000E9C7 6A02                    	push 2
 19751 0000E9C9 E9BC800000              	jmp L_error_incorrect_arity_simple
 19752                                  .L_lambda_simple_arity_check_ok_0077:
 19753 0000E9CE C8000000                	enter 0, 0
 19754                                  	; preparing a non-tail-call
 19755 0000E9D2 488B4528                	mov rax, PARAM(1)	; param len2
 19756 0000E9D6 50                      	push rax
 19757 0000E9D7 488B4520                	mov rax, PARAM(0)	; param len1
 19758 0000E9DB 50                      	push rax
 19759 0000E9DC 6A02                    	push 2	; arg count
 19760 0000E9DE 488B0425[1A0E0000]      	mov rax, qword [free_var_5]	; free var <=
 19761 0000E9E6 803805                  	cmp byte [rax], T_undefined
 19762 0000E9E9 0F84B57F0000            	je L_error_fvar_undefined
 19763 0000E9EF 803804                  	cmp byte [rax], T_closure
 19764 0000E9F2 0F8530800000            	jne L_error_non_closure
 19765 0000E9F8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19766 0000E9FB FF5009                  	call SOB_CLOSURE_CODE(rax)
 19767 0000E9FE 483D[02000000]          	cmp rax, sob_boolean_false
 19768 0000EA04 0F8487000000            	je .L_if_else_0062
 19769                                  	; preparing a tail-call
 19770 0000EA0A 488B4528                	mov rax, PARAM(1)	; param len2
 19771 0000EA0E 50                      	push rax
 19772 0000EA0F 488B4510                	mov rax, ENV
 19773 0000EA13 488B00                  	mov rax, qword [rax + 8 * 0]
 19774 0000EA16 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19775 0000EA1A 50                      	push rax
 19776 0000EA1B 488B4520                	mov rax, PARAM(0)	; param len1
 19777 0000EA1F 50                      	push rax
 19778 0000EA20 488B4510                	mov rax, ENV
 19779 0000EA24 488B00                  	mov rax, qword [rax + 8 * 0]
 19780 0000EA27 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19781 0000EA2A 50                      	push rax
 19782 0000EA2B 48B8-                   	mov rax, L_constants + 2135
 19782 0000EA2D [5708000000000000] 
 19783 0000EA35 50                      	push rax
 19784 0000EA36 6A05                    	push 5	; arg count
 19785 0000EA38 488B4510                	mov rax, ENV
 19786 0000EA3C 488B4008                	mov rax, qword [rax + 8 * 1]
 19787 0000EA40 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19788 0000EA43 488B00                  	mov rax, qword [rax]
 19789 0000EA46 803804                  	cmp byte [rax], T_closure
 19790 0000EA49 0F85D97F0000            	jne L_error_non_closure
 19791 0000EA4F FF7001                  	push SOB_CLOSURE_ENV(rax)
 19792 0000EA52 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 19793 0000EA55 FF7500                  	push qword[rbp]
 19794 0000EA58 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 19795 0000EA5D 48895D10                	mov qword[rbp + 8*2],rbx
 19796 0000EA61 48C7451805000000        	mov qword[rbp + 8*3], 5	 ;n turns to m
 19797 0000EA69 BF00000000              	mov rdi,0
 19798 0000EA6E EB00                    	jmp .L_tc_recycle_frame_loop_00be
 19799                                  .L_tc_recycle_frame_loop_00be:
 19800 0000EA70 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 19801 0000EA74 740F                    	je .L_tc_recycle_frame_done_00be
 19802 0000EA76 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 19803 0000EA7B 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 19804 0000EA80 48FFC7                  	inc rdi
 19805 0000EA83 EBEB                    	jmp .L_tc_recycle_frame_loop_00be
 19806                                  .L_tc_recycle_frame_done_00be:
 19807 0000EA85 4889EC                  	mov rsp, rbp	; point to last argument
 19808 0000EA88 5D                      	pop rbp
 19809 0000EA89 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19810 0000EA8C E982000000              	jmp .L_if_end_0062
 19811                                  .L_if_else_0062:
 19812                                  	; preparing a tail-call
 19813 0000EA91 488B4520                	mov rax, PARAM(0)	; param len1
 19814 0000EA95 50                      	push rax
 19815 0000EA96 488B4510                	mov rax, ENV
 19816 0000EA9A 488B00                  	mov rax, qword [rax + 8 * 0]
 19817 0000EA9D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 19818 0000EAA0 50                      	push rax
 19819 0000EAA1 488B4528                	mov rax, PARAM(1)	; param len2
 19820 0000EAA5 50                      	push rax
 19821 0000EAA6 488B4510                	mov rax, ENV
 19822 0000EAAA 488B00                  	mov rax, qword [rax + 8 * 0]
 19823 0000EAAD 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 19824 0000EAB1 50                      	push rax
 19825 0000EAB2 48B8-                   	mov rax, L_constants + 2135
 19825 0000EAB4 [5708000000000000] 
 19826 0000EABC 50                      	push rax
 19827 0000EABD 6A05                    	push 5	; arg count
 19828 0000EABF 488B4510                	mov rax, ENV
 19829 0000EAC3 488B4008                	mov rax, qword [rax + 8 * 1]
 19830 0000EAC7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 19831 0000EACA 488B00                  	mov rax, qword [rax]
 19832 0000EACD 803804                  	cmp byte [rax], T_closure
 19833 0000EAD0 0F85527F0000            	jne L_error_non_closure
 19834 0000EAD6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19835 0000EAD9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 19836 0000EADC FF7500                  	push qword[rbp]
 19837 0000EADF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 19838 0000EAE4 48895D10                	mov qword[rbp + 8*2],rbx
 19839 0000EAE8 48C7451805000000        	mov qword[rbp + 8*3], 5	 ;n turns to m
 19840 0000EAF0 BF00000000              	mov rdi,0
 19841 0000EAF5 EB00                    	jmp .L_tc_recycle_frame_loop_00bf
 19842                                  .L_tc_recycle_frame_loop_00bf:
 19843 0000EAF7 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 19844 0000EAFB 740F                    	je .L_tc_recycle_frame_done_00bf
 19845 0000EAFD 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 19846 0000EB02 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 19847 0000EB07 48FFC7                  	inc rdi
 19848 0000EB0A EBEB                    	jmp .L_tc_recycle_frame_loop_00bf
 19849                                  .L_tc_recycle_frame_done_00bf:
 19850 0000EB0C 4889EC                  	mov rsp, rbp	; point to last argument
 19851 0000EB0F 5D                      	pop rbp
 19852 0000EB10 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19853                                  .L_if_end_0062:
 19854 0000EB13 C9                      	leave
 19855 0000EB14 C22000                  	ret AND_KILL_FRAME(2)
 19856                                  .L_lambda_simple_end_0077:	; new closure is in rax
 19857 0000EB17 803804                  	cmp byte [rax], T_closure
 19858 0000EB1A 0F85087F0000            	jne L_error_non_closure
 19859 0000EB20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 19860 0000EB23 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 19861 0000EB26 FF7500                  	push qword[rbp]
 19862 0000EB29 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 19863 0000EB2E 48895D10                	mov qword[rbp + 8*2],rbx
 19864 0000EB32 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 19865 0000EB3A BF00000000              	mov rdi,0
 19866 0000EB3F EB00                    	jmp .L_tc_recycle_frame_loop_00c0
 19867                                  .L_tc_recycle_frame_loop_00c0:
 19868 0000EB41 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 19869 0000EB45 740F                    	je .L_tc_recycle_frame_done_00c0
 19870 0000EB47 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 19871 0000EB4C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 19872 0000EB51 48FFC7                  	inc rdi
 19873 0000EB54 EBEB                    	jmp .L_tc_recycle_frame_loop_00c0
 19874                                  .L_tc_recycle_frame_done_00c0:
 19875 0000EB56 4889EC                  	mov rsp, rbp	; point to last argument
 19876 0000EB59 5D                      	pop rbp
 19877 0000EB5A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 19878 0000EB5D C9                      	leave
 19879 0000EB5E C22000                  	ret AND_KILL_FRAME(2)
 19880                                  .L_lambda_simple_end_0076:	; new closure is in rax
 19881 0000EB61 50                      	push rax
 19882 0000EB62 6A01                    	push 1	; arg count
 19883 0000EB64 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19884 0000EB69 E8637F0000              	call malloc
 19885 0000EB6E 50                      	push rax
 19886 0000EB6F BF08000000              	mov rdi, 8 * 1	; new rib
 19887 0000EB74 E8587F0000              	call malloc
 19888 0000EB79 50                      	push rax
 19889 0000EB7A BF18000000              	mov rdi, 8 * 3	; extended env
 19890 0000EB7F E84D7F0000              	call malloc
 19891 0000EB84 488B7D10                	mov rdi, ENV
 19892 0000EB88 BE00000000              	mov rsi, 0
 19893 0000EB8D BA01000000              	mov rdx, 1
 19894                                  .L_lambda_simple_env_loop_0078:	; ext_env[i + 1] <-- env[i]
 19895 0000EB92 4883FE02                	cmp rsi, 2
 19896 0000EB96 7410                    	je .L_lambda_simple_env_end_0078
 19897 0000EB98 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19898 0000EB9C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19899 0000EBA0 48FFC6                  	inc rsi
 19900 0000EBA3 48FFC2                  	inc rdx
 19901 0000EBA6 EBEA                    	jmp .L_lambda_simple_env_loop_0078
 19902                                  .L_lambda_simple_env_end_0078:
 19903 0000EBA8 5B                      	pop rbx
 19904 0000EBA9 BE00000000              	mov rsi, 0
 19905                                  .L_lambda_simple_params_loop_0078:	; copy params
 19906 0000EBAE 4883FE01                	cmp rsi, 1
 19907 0000EBB2 740E                    	je .L_lambda_simple_params_end_0078
 19908 0000EBB4 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19909 0000EBB9 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19910 0000EBBD 48FFC6                  	inc rsi
 19911 0000EBC0 EBEC                    	jmp .L_lambda_simple_params_loop_0078
 19912                                  .L_lambda_simple_params_end_0078:
 19913 0000EBC2 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19914 0000EBC5 4889C3                  	mov rbx, rax
 19915 0000EBC8 58                      	pop rax
 19916 0000EBC9 C60004                  	mov byte [rax], T_closure
 19917 0000EBCC 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19918 0000EBD0 48C74009[DDEB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0078
 19919 0000EBD8 E92C050000              	jmp .L_lambda_simple_end_0078
 19920                                  .L_lambda_simple_code_0078:	; lambda-simple body
 19921 0000EBDD 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19922 0000EBE3 740B                    	je .L_lambda_simple_arity_check_ok_0078
 19923 0000EBE5 FF742410                	push qword [rsp + 8 * 2]
 19924 0000EBE9 6A01                    	push 1
 19925 0000EBEB E99A7E0000              	jmp L_error_incorrect_arity_simple
 19926                                  .L_lambda_simple_arity_check_ok_0078:
 19927 0000EBF0 C8000000                	enter 0, 0
 19928                                  	; preparing a tail-call
 19929 0000EBF4 48B8-                   	mov rax, L_constants + 1993
 19929 0000EBF6 [C907000000000000] 
 19930 0000EBFE 50                      	push rax
 19931 0000EBFF 6A01                    	push 1	; arg count
 19932 0000EC01 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19933 0000EC06 E8C67E0000              	call malloc
 19934 0000EC0B 50                      	push rax
 19935 0000EC0C BF08000000              	mov rdi, 8 * 1	; new rib
 19936 0000EC11 E8BB7E0000              	call malloc
 19937 0000EC16 50                      	push rax
 19938 0000EC17 BF20000000              	mov rdi, 8 * 4	; extended env
 19939 0000EC1C E8B07E0000              	call malloc
 19940 0000EC21 488B7D10                	mov rdi, ENV
 19941 0000EC25 BE00000000              	mov rsi, 0
 19942 0000EC2A BA01000000              	mov rdx, 1
 19943                                  .L_lambda_simple_env_loop_0079:	; ext_env[i + 1] <-- env[i]
 19944 0000EC2F 4883FE03                	cmp rsi, 3
 19945 0000EC33 7410                    	je .L_lambda_simple_env_end_0079
 19946 0000EC35 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19947 0000EC39 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19948 0000EC3D 48FFC6                  	inc rsi
 19949 0000EC40 48FFC2                  	inc rdx
 19950 0000EC43 EBEA                    	jmp .L_lambda_simple_env_loop_0079
 19951                                  .L_lambda_simple_env_end_0079:
 19952 0000EC45 5B                      	pop rbx
 19953 0000EC46 BE00000000              	mov rsi, 0
 19954                                  .L_lambda_simple_params_loop_0079:	; copy params
 19955 0000EC4B 4883FE01                	cmp rsi, 1
 19956 0000EC4F 740E                    	je .L_lambda_simple_params_end_0079
 19957 0000EC51 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 19958 0000EC56 488914F3                	mov qword [rbx + 8 * rsi], rdx
 19959 0000EC5A 48FFC6                  	inc rsi
 19960 0000EC5D EBEC                    	jmp .L_lambda_simple_params_loop_0079
 19961                                  .L_lambda_simple_params_end_0079:
 19962 0000EC5F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 19963 0000EC62 4889C3                  	mov rbx, rax
 19964 0000EC65 58                      	pop rax
 19965 0000EC66 C60004                  	mov byte [rax], T_closure
 19966 0000EC69 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 19967 0000EC6D 48C74009[7AEC0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0079
 19968 0000EC75 E945040000              	jmp .L_lambda_simple_end_0079
 19969                                  .L_lambda_simple_code_0079:	; lambda-simple body
 19970 0000EC7A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 19971 0000EC80 740B                    	je .L_lambda_simple_arity_check_ok_0079
 19972 0000EC82 FF742410                	push qword [rsp + 8 * 2]
 19973 0000EC86 6A01                    	push 1
 19974 0000EC88 E9FD7D0000              	jmp L_error_incorrect_arity_simple
 19975                                  .L_lambda_simple_arity_check_ok_0079:
 19976 0000EC8D C8000000                	enter 0, 0
 19977 0000EC91 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 19978 0000EC95 488903                  	mov qword [rbx], rax
 19979                                  
 19980 0000EC98 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 19981 0000EC9D E82F7E0000              	call malloc
 19982 0000ECA2 50                      	push rax
 19983 0000ECA3 BF08000000              	mov rdi, 8 * 1	; new rib
 19984 0000ECA8 E8247E0000              	call malloc
 19985 0000ECAD 50                      	push rax
 19986 0000ECAE BF28000000              	mov rdi, 8 * 5	; extended env
 19987 0000ECB3 E8197E0000              	call malloc
 19988 0000ECB8 488B7D10                	mov rdi, ENV
 19989 0000ECBC BE00000000              	mov rsi, 0
 19990 0000ECC1 BA01000000              	mov rdx, 1
 19991                                  .L_lambda_simple_env_loop_007a:	; ext_env[i + 1] <-- env[i]
 19992 0000ECC6 4883FE04                	cmp rsi, 4
 19993 0000ECCA 7410                    	je .L_lambda_simple_env_end_007a
 19994 0000ECCC 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 19995 0000ECD0 48890CD0                	mov qword [rax + 8 * rdx], rcx
 19996 0000ECD4 48FFC6                  	inc rsi
 19997 0000ECD7 48FFC2                  	inc rdx
 19998 0000ECDA EBEA                    	jmp .L_lambda_simple_env_loop_007a
 19999                                  .L_lambda_simple_env_end_007a:
 20000 0000ECDC 5B                      	pop rbx
 20001 0000ECDD BE00000000              	mov rsi, 0
 20002                                  .L_lambda_simple_params_loop_007a:	; copy params
 20003 0000ECE2 4883FE01                	cmp rsi, 1
 20004 0000ECE6 740E                    	je .L_lambda_simple_params_end_007a
 20005 0000ECE8 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20006 0000ECED 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20007 0000ECF1 48FFC6                  	inc rsi
 20008 0000ECF4 EBEC                    	jmp .L_lambda_simple_params_loop_007a
 20009                                  .L_lambda_simple_params_end_007a:
 20010 0000ECF6 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20011 0000ECF9 4889C3                  	mov rbx, rax
 20012 0000ECFC 58                      	pop rax
 20013 0000ECFD C60004                  	mov byte [rax], T_closure
 20014 0000ED00 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20015 0000ED04 48C74009[11ED0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007a
 20016 0000ED0C E954010000              	jmp .L_lambda_simple_end_007a
 20017                                  .L_lambda_simple_code_007a:	; lambda-simple body
 20018 0000ED11 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20019 0000ED17 740B                    	je .L_lambda_simple_arity_check_ok_007a
 20020 0000ED19 FF742410                	push qword [rsp + 8 * 2]
 20021 0000ED1D 6A02                    	push 2
 20022 0000ED1F E9667D0000              	jmp L_error_incorrect_arity_simple
 20023                                  .L_lambda_simple_arity_check_ok_007a:
 20024 0000ED24 C8000000                	enter 0, 0
 20025                                  	; preparing a non-tail-call
 20026 0000ED28 488B4528                	mov rax, PARAM(1)	; param strs
 20027 0000ED2C 50                      	push rax
 20028 0000ED2D 6A01                    	push 1	; arg count
 20029 0000ED2F 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 20030 0000ED37 803805                  	cmp byte [rax], T_undefined
 20031 0000ED3A 0F84647C0000            	je L_error_fvar_undefined
 20032 0000ED40 803804                  	cmp byte [rax], T_closure
 20033 0000ED43 0F85DF7C0000            	jne L_error_non_closure
 20034 0000ED49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20035 0000ED4C FF5009                  	call SOB_CLOSURE_CODE(rax)
 20036 0000ED4F 483D[02000000]          	cmp rax, sob_boolean_false
 20037 0000ED55 0F8506010000            	jne .L_or_end_000e
 20038                                  	; preparing a non-tail-call
 20039                                  	; preparing a non-tail-call
 20040 0000ED5B 488B4528                	mov rax, PARAM(1)	; param strs
 20041 0000ED5F 50                      	push rax
 20042 0000ED60 6A01                    	push 1	; arg count
 20043 0000ED62 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 20044 0000ED6A 803805                  	cmp byte [rax], T_undefined
 20045 0000ED6D 0F84317C0000            	je L_error_fvar_undefined
 20046 0000ED73 803804                  	cmp byte [rax], T_closure
 20047 0000ED76 0F85AC7C0000            	jne L_error_non_closure
 20048 0000ED7C FF7001                  	push SOB_CLOSURE_ENV(rax)
 20049 0000ED7F FF5009                  	call SOB_CLOSURE_CODE(rax)
 20050 0000ED82 50                      	push rax
 20051 0000ED83 488B4520                	mov rax, PARAM(0)	; param str
 20052 0000ED87 50                      	push rax
 20053 0000ED88 6A02                    	push 2	; arg count
 20054 0000ED8A 488B4510                	mov rax, ENV
 20055 0000ED8E 488B4008                	mov rax, qword [rax + 8 * 1]
 20056 0000ED92 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string<=?
 20057 0000ED95 803804                  	cmp byte [rax], T_closure
 20058 0000ED98 0F858A7C0000            	jne L_error_non_closure
 20059 0000ED9E FF7001                  	push SOB_CLOSURE_ENV(rax)
 20060 0000EDA1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20061 0000EDA4 483D[02000000]          	cmp rax, sob_boolean_false
 20062 0000EDAA 0F84A7000000            	je .L_if_else_0063
 20063                                  	; preparing a tail-call
 20064                                  	; preparing a non-tail-call
 20065 0000EDB0 488B4528                	mov rax, PARAM(1)	; param strs
 20066 0000EDB4 50                      	push rax
 20067 0000EDB5 6A01                    	push 1	; arg count
 20068 0000EDB7 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 20069 0000EDBF 803805                  	cmp byte [rax], T_undefined
 20070 0000EDC2 0F84DC7B0000            	je L_error_fvar_undefined
 20071 0000EDC8 803804                  	cmp byte [rax], T_closure
 20072 0000EDCB 0F85577C0000            	jne L_error_non_closure
 20073 0000EDD1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20074 0000EDD4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20075 0000EDD7 50                      	push rax
 20076                                  	; preparing a non-tail-call
 20077 0000EDD8 488B4528                	mov rax, PARAM(1)	; param strs
 20078 0000EDDC 50                      	push rax
 20079 0000EDDD 6A01                    	push 1	; arg count
 20080 0000EDDF 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 20081 0000EDE7 803805                  	cmp byte [rax], T_undefined
 20082 0000EDEA 0F84B47B0000            	je L_error_fvar_undefined
 20083 0000EDF0 803804                  	cmp byte [rax], T_closure
 20084 0000EDF3 0F852F7C0000            	jne L_error_non_closure
 20085 0000EDF9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20086 0000EDFC FF5009                  	call SOB_CLOSURE_CODE(rax)
 20087 0000EDFF 50                      	push rax
 20088 0000EE00 6A02                    	push 2	; arg count
 20089 0000EE02 488B4510                	mov rax, ENV
 20090 0000EE06 488B00                  	mov rax, qword [rax + 8 * 0]
 20091 0000EE09 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20092 0000EE0C 488B00                  	mov rax, qword [rax]
 20093 0000EE0F 803804                  	cmp byte [rax], T_closure
 20094 0000EE12 0F85107C0000            	jne L_error_non_closure
 20095 0000EE18 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20096 0000EE1B FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 20097 0000EE1E FF7500                  	push qword[rbp]
 20098 0000EE21 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 20099 0000EE26 48895D10                	mov qword[rbp + 8*2],rbx
 20100 0000EE2A 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 20101 0000EE32 BF00000000              	mov rdi,0
 20102 0000EE37 EB00                    	jmp .L_tc_recycle_frame_loop_00c1
 20103                                  .L_tc_recycle_frame_loop_00c1:
 20104 0000EE39 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 20105 0000EE3D 740F                    	je .L_tc_recycle_frame_done_00c1
 20106 0000EE3F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 20107 0000EE44 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 20108 0000EE49 48FFC7                  	inc rdi
 20109 0000EE4C EBEB                    	jmp .L_tc_recycle_frame_loop_00c1
 20110                                  .L_tc_recycle_frame_done_00c1:
 20111 0000EE4E 4889EC                  	mov rsp, rbp	; point to last argument
 20112 0000EE51 5D                      	pop rbp
 20113 0000EE52 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20114 0000EE55 EB0A                    	jmp .L_if_end_0063
 20115                                  .L_if_else_0063:
 20116 0000EE57 48B8-                   	mov rax, L_constants + 2
 20116 0000EE59 [0200000000000000] 
 20117                                  .L_if_end_0063:
 20118                                  .L_or_end_000e:
 20119 0000EE61 C9                      	leave
 20120 0000EE62 C22000                  	ret AND_KILL_FRAME(2)
 20121                                  .L_lambda_simple_end_007a:	; new closure is in rax
 20122 0000EE65 50                      	push rax
 20123 0000EE66 488B4520                	mov rax, PARAM(0)	; param run
 20124 0000EE6A 8F00                    	pop qword [rax]
 20125 0000EE6C 48B8-                   	mov rax, sob_void
 20125 0000EE6E [0000000000000000] 
 20126                                  
 20127 0000EE76 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20128 0000EE7B E8517C0000              	call malloc
 20129 0000EE80 50                      	push rax
 20130 0000EE81 BF08000000              	mov rdi, 8 * 1	; new rib
 20131 0000EE86 E8467C0000              	call malloc
 20132 0000EE8B 50                      	push rax
 20133 0000EE8C BF28000000              	mov rdi, 8 * 5	; extended env
 20134 0000EE91 E83B7C0000              	call malloc
 20135 0000EE96 488B7D10                	mov rdi, ENV
 20136 0000EE9A BE00000000              	mov rsi, 0
 20137 0000EE9F BA01000000              	mov rdx, 1
 20138                                  .L_lambda_opt_env_loop_0012:	; ext_env[i + 1] <-- env[i]
 20139 0000EEA4 4883FE04                	cmp rsi, 4
 20140 0000EEA8 7410                    	je .L_lambda_opt_env_end_0012
 20141 0000EEAA 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20142 0000EEAE 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20143 0000EEB2 48FFC6                  	inc rsi
 20144 0000EEB5 48FFC2                  	inc rdx
 20145 0000EEB8 EBEA                    	jmp .L_lambda_opt_env_loop_0012
 20146                                  .L_lambda_opt_env_end_0012:
 20147 0000EEBA 5B                      	pop rbx
 20148 0000EEBB BE00000000              	mov rsi, 0
 20149                                  .L_lambda_opt_params_loop_0012:	; copy params
 20150 0000EEC0 4883FE01                	cmp rsi, 1
 20151 0000EEC4 740E                    	je .L_lambda_opt_params_end_0012
 20152 0000EEC6 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20153 0000EECB 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20154 0000EECF 48FFC6                  	inc rsi
 20155 0000EED2 EBEC                    	jmp .L_lambda_opt_params_loop_0012
 20156                                  .L_lambda_opt_params_end_0012:
 20157 0000EED4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20158 0000EED7 4889C3                  	mov rbx, rax
 20159 0000EEDA 58                      	pop rax
 20160 0000EEDB C60004                  	mov byte [rax], T_closure
 20161 0000EEDE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20162 0000EEE2 48C74009[EFEE0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0012
 20163 0000EEEA E9CC010000              	jmp .L_lambda_opt_end_0012
 20164                                  .L_lambda_opt_code_0012:	; lambda-opt body
 20165 0000EEEF 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20166 0000EEF5 7411                    	je .L_lambda_opt_arity_check_exact_0012
 20167 0000EEF7 0F8FB1000000            	jg .L_lambda_opt_arity_check_more_0012
 20168 0000EEFD FF742410                	push qword [rsp + 8 * 2]
 20169 0000EF01 6A01                    	push 1
 20170 0000EF03 E9967B0000              	jmp L_error_incorrect_arity_opt
 20171                                  .L_lambda_opt_arity_check_exact_0012:
 20172 0000EF08 4883EC08                	sub rsp, 8
 20173 0000EF0C 488B442408              	mov rax, qword[rsp + 8 *1]
 20174 0000EF11 48890424                	mov qword[rsp], rax  
 20175 0000EF15 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 20176 0000EF1A 4889442408              	mov qword[rsp + 8 * 1], rax
 20177 0000EF1F B802000000              	mov rax, 2
 20178 0000EF24 4889442410              	mov qword[rsp + 8 *2], rax
 20179 0000EF29 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 20180 0000EF2E 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 20181 0000EF33 48B8-                   	mov rax, sob_nil
 20181 0000EF35 [0100000000000000] 
 20182 0000EF3D 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 20183 0000EF42 C8000000                	enter 0, 0
 20184                                  	; preparing a tail-call
 20185 0000EF46 488B4528                	mov rax, PARAM(1)	; param strs
 20186 0000EF4A 50                      	push rax
 20187 0000EF4B 488B4520                	mov rax, PARAM(0)	; param str
 20188 0000EF4F 50                      	push rax
 20189 0000EF50 6A02                    	push 2	; arg count
 20190 0000EF52 488B4510                	mov rax, ENV
 20191 0000EF56 488B00                  	mov rax, qword [rax + 8 * 0]
 20192 0000EF59 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20193 0000EF5C 488B00                  	mov rax, qword [rax]
 20194 0000EF5F 803804                  	cmp byte [rax], T_closure
 20195 0000EF62 0F85C07A0000            	jne L_error_non_closure
 20196 0000EF68 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20197 0000EF6B FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 20198 0000EF6E FF7500                  	push qword[rbp]
 20199 0000EF71 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 20200 0000EF76 48895D10                	mov qword[rbp + 8*2],rbx
 20201 0000EF7A 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 20202 0000EF82 BF00000000              	mov rdi,0
 20203 0000EF87 EB00                    	jmp .L_tc_recycle_frame_loop_00c3
 20204                                  .L_tc_recycle_frame_loop_00c3:
 20205 0000EF89 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 20206 0000EF8D 740F                    	je .L_tc_recycle_frame_done_00c3
 20207 0000EF8F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 20208 0000EF94 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 20209 0000EF99 48FFC7                  	inc rdi
 20210 0000EF9C EBEB                    	jmp .L_tc_recycle_frame_loop_00c3
 20211                                  .L_tc_recycle_frame_done_00c3:
 20212 0000EF9E 4889EC                  	mov rsp, rbp	; point to last argument
 20213 0000EFA1 5D                      	pop rbp
 20214 0000EFA2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20215 0000EFA5 C9                      	leave
 20216 0000EFA6 C22000                  	ret AND_KILL_FRAME(2)
 20217 0000EFA9 E90D010000              	jmp .L_lambda_opt_end_0012	; new closure is in rax
 20218                                  .L_lambda_opt_arity_check_more_0012:
 20219 0000EFAE 488B442410              	mov rax, qword[rsp + 2 * 8]
 20220 0000EFB3 4889C7                  	mov rdi, rax
 20221 0000EFB6 49B9-                   	mov r9, sob_nil
 20221 0000EFB8 [0100000000000000] 
 20222 0000EFC0 4C8B442410              	mov r8, qword[rsp+2*8]
 20223                                  .L_lambda_opt_stack_shrink_loop_0012:
 20224 0000EFC5 4983F801                	cmp r8, 1
 20225 0000EFC9 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0012
 20226 0000EFCB 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 20227 0000EFD0 BF11000000              	mov rdi, 1+8+8	;for pair
 20228 0000EFD5 E8F77A0000              	call malloc	 ;to create the pair in the stack
 20229 0000EFDA C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 20230 0000EFDD 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 20231 0000EFE1 4C894809                 	mov qword[rax+1+8],r9
 20232 0000EFE5 4989C1                  	mov r9 , rax	 ; for the recursion 
 20233 0000EFE8 49FFC8                  	dec r8
 20234 0000EFEB EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0012
 20235                                  .L_lambda_opt_stack_shrink_loop_exit_0012:
 20236 0000EFED 488B442410              	mov rax, qword[rsp + 2 * 8]
 20237 0000EFF2 BF02000000              	mov rdi, 2
 20238 0000EFF7 4829F8                  	sub rax, rdi
 20239 0000EFFA 4889C7                  	mov rdi, rax
 20240 0000EFFD 486BC008                	imul rax,8
 20241 0000F001 4801C4                  	add rsp, rax
 20242 0000F004 4889E0                  	mov rax, rsp
 20243 0000F007 4989F8                  	mov r8, rdi
 20244 0000F00A 4D6BC008                	imul r8, 8
 20245 0000F00E 4C29C0                  	sub rax, r8
 20246 0000F011 4989C2                  	mov r10, rax	; holds the original ret in the stack
 20247 0000F014 4983C218                	add r10, 8*3
 20248 0000F018 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 20249 0000F01C 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 20250 0000F01F 4D6BC008                	imul r8,8
 20251 0000F023 4C01C0                  	add rax, r8
 20252 0000F026 4C8908                  	mov qword[rax] ,r9
 20253 0000F029 4D89D0                   	mov r8, r10
 20254 0000F02C 4983C000                	add r8, 8 * 0
 20255 0000F030 4D8B08                  	mov r9,qword[r8]
 20256 0000F033 4D890CF8                	mov qword [r8 + rdi * 8], r9
 20257 0000F037 4983EA18                	sub r10, 8*3
 20258 0000F03B 48C744241002000000      	mov qword [rsp+2*8], 2
 20259 0000F044 498B4208                	mov rax, qword[r10 + 1 * 8]
 20260 0000F048 4889442408              	mov qword[rsp + 1*8] ,rax
 20261 0000F04D 498B02                  	mov rax, qword[r10]
 20262 0000F050 48890424                	mov qword[rsp], rax
 20263 0000F054 C8000000                	enter 0, 0
 20264                                  	; preparing a tail-call
 20265 0000F058 488B4528                	mov rax, PARAM(1)	; param strs
 20266 0000F05C 50                      	push rax
 20267 0000F05D 488B4520                	mov rax, PARAM(0)	; param str
 20268 0000F061 50                      	push rax
 20269 0000F062 6A02                    	push 2	; arg count
 20270 0000F064 488B4510                	mov rax, ENV
 20271 0000F068 488B00                  	mov rax, qword [rax + 8 * 0]
 20272 0000F06B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20273 0000F06E 488B00                  	mov rax, qword [rax]
 20274 0000F071 803804                  	cmp byte [rax], T_closure
 20275 0000F074 0F85AE790000            	jne L_error_non_closure
 20276 0000F07A FF7001                  	push SOB_CLOSURE_ENV(rax)
 20277 0000F07D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 20278 0000F080 FF7500                  	push qword[rbp]
 20279 0000F083 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 20280 0000F088 48895D10                	mov qword[rbp + 8*2],rbx
 20281 0000F08C 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 20282 0000F094 BF00000000              	mov rdi,0
 20283 0000F099 EB00                    	jmp .L_tc_recycle_frame_loop_00c2
 20284                                  .L_tc_recycle_frame_loop_00c2:
 20285 0000F09B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 20286 0000F09F 740F                    	je .L_tc_recycle_frame_done_00c2
 20287 0000F0A1 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 20288 0000F0A6 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 20289 0000F0AB 48FFC7                  	inc rdi
 20290 0000F0AE EBEB                    	jmp .L_tc_recycle_frame_loop_00c2
 20291                                  .L_tc_recycle_frame_done_00c2:
 20292 0000F0B0 4889EC                  	mov rsp, rbp	; point to last argument
 20293 0000F0B3 5D                      	pop rbp
 20294 0000F0B4 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20295 0000F0B7 C9                      	leave
 20296 0000F0B8 C22000                  	ret AND_KILL_FRAME(2)
 20297                                  .L_lambda_opt_end_0012:	; new closure is in rax
 20298 0000F0BB C9                      	leave
 20299 0000F0BC C21800                  	ret AND_KILL_FRAME(1)
 20300                                  .L_lambda_simple_end_0079:	; new closure is in rax
 20301 0000F0BF 803804                  	cmp byte [rax], T_closure
 20302 0000F0C2 0F8560790000            	jne L_error_non_closure
 20303 0000F0C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20304 0000F0CB FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 20305 0000F0CE FF7500                  	push qword[rbp]
 20306 0000F0D1 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 20307 0000F0D6 48895D10                	mov qword[rbp + 8*2],rbx
 20308 0000F0DA 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 20309 0000F0E2 BF00000000              	mov rdi,0
 20310 0000F0E7 EB00                    	jmp .L_tc_recycle_frame_loop_00c4
 20311                                  .L_tc_recycle_frame_loop_00c4:
 20312 0000F0E9 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 20313 0000F0ED 740F                    	je .L_tc_recycle_frame_done_00c4
 20314 0000F0EF 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 20315 0000F0F4 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 20316 0000F0F9 48FFC7                  	inc rdi
 20317 0000F0FC EBEB                    	jmp .L_tc_recycle_frame_loop_00c4
 20318                                  .L_tc_recycle_frame_done_00c4:
 20319 0000F0FE 4889EC                  	mov rsp, rbp	; point to last argument
 20320 0000F101 5D                      	pop rbp
 20321 0000F102 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20322 0000F105 C9                      	leave
 20323 0000F106 C21800                  	ret AND_KILL_FRAME(1)
 20324                                  .L_lambda_simple_end_0078:	; new closure is in rax
 20325 0000F109 803804                  	cmp byte [rax], T_closure
 20326 0000F10C 0F8516790000            	jne L_error_non_closure
 20327 0000F112 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20328 0000F115 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 20329 0000F118 FF7500                  	push qword[rbp]
 20330 0000F11B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 20331 0000F120 48895D10                	mov qword[rbp + 8*2],rbx
 20332 0000F124 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 20333 0000F12C BF00000000              	mov rdi,0
 20334 0000F131 EB00                    	jmp .L_tc_recycle_frame_loop_00c5
 20335                                  .L_tc_recycle_frame_loop_00c5:
 20336 0000F133 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 20337 0000F137 740F                    	je .L_tc_recycle_frame_done_00c5
 20338 0000F139 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 20339 0000F13E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 20340 0000F143 48FFC7                  	inc rdi
 20341 0000F146 EBEB                    	jmp .L_tc_recycle_frame_loop_00c5
 20342                                  .L_tc_recycle_frame_done_00c5:
 20343 0000F148 4889EC                  	mov rsp, rbp	; point to last argument
 20344 0000F14B 5D                      	pop rbp
 20345 0000F14C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20346 0000F14F C9                      	leave
 20347 0000F150 C21800                  	ret AND_KILL_FRAME(1)
 20348                                  .L_lambda_simple_end_0074:	; new closure is in rax
 20349 0000F153 803804                  	cmp byte [rax], T_closure
 20350 0000F156 0F85CC780000            	jne L_error_non_closure
 20351 0000F15C FF7001                  	push SOB_CLOSURE_ENV(rax)
 20352 0000F15F FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 20353 0000F162 FF7500                  	push qword[rbp]
 20354 0000F165 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 20355 0000F16A 48895D10                	mov qword[rbp + 8*2],rbx
 20356 0000F16E 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 20357 0000F176 BF00000000              	mov rdi,0
 20358 0000F17B EB00                    	jmp .L_tc_recycle_frame_loop_00c6
 20359                                  .L_tc_recycle_frame_loop_00c6:
 20360 0000F17D 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 20361 0000F181 740F                    	je .L_tc_recycle_frame_done_00c6
 20362 0000F183 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 20363 0000F188 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 20364 0000F18D 48FFC7                  	inc rdi
 20365 0000F190 EBEB                    	jmp .L_tc_recycle_frame_loop_00c6
 20366                                  .L_tc_recycle_frame_done_00c6:
 20367 0000F192 4889EC                  	mov rsp, rbp	; point to last argument
 20368 0000F195 5D                      	pop rbp
 20369 0000F196 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20370 0000F199 C9                      	leave
 20371 0000F19A C22000                  	ret AND_KILL_FRAME(2)
 20372                                  .L_lambda_simple_end_0073:	; new closure is in rax
 20373 0000F19D 50                      	push rax
 20374 0000F19E 6A01                    	push 1	; arg count
 20375 0000F1A0 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20376 0000F1A5 E827790000              	call malloc
 20377 0000F1AA 50                      	push rax
 20378 0000F1AB BF00000000              	mov rdi, 8 * 0	; new rib
 20379 0000F1B0 E81C790000              	call malloc
 20380 0000F1B5 50                      	push rax
 20381 0000F1B6 BF08000000              	mov rdi, 8 * 1	; extended env
 20382 0000F1BB E811790000              	call malloc
 20383 0000F1C0 488B7D10                	mov rdi, ENV
 20384 0000F1C4 BE00000000              	mov rsi, 0
 20385 0000F1C9 BA01000000              	mov rdx, 1
 20386                                  .L_lambda_simple_env_loop_007b:	; ext_env[i + 1] <-- env[i]
 20387 0000F1CE 4883FE00                	cmp rsi, 0
 20388 0000F1D2 7410                    	je .L_lambda_simple_env_end_007b
 20389 0000F1D4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20390 0000F1D8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20391 0000F1DC 48FFC6                  	inc rsi
 20392 0000F1DF 48FFC2                  	inc rdx
 20393 0000F1E2 EBEA                    	jmp .L_lambda_simple_env_loop_007b
 20394                                  .L_lambda_simple_env_end_007b:
 20395 0000F1E4 5B                      	pop rbx
 20396 0000F1E5 BE00000000              	mov rsi, 0
 20397                                  .L_lambda_simple_params_loop_007b:	; copy params
 20398 0000F1EA 4883FE00                	cmp rsi, 0
 20399 0000F1EE 740E                    	je .L_lambda_simple_params_end_007b
 20400 0000F1F0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20401 0000F1F5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20402 0000F1F9 48FFC6                  	inc rsi
 20403 0000F1FC EBEC                    	jmp .L_lambda_simple_params_loop_007b
 20404                                  .L_lambda_simple_params_end_007b:
 20405 0000F1FE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20406 0000F201 4889C3                  	mov rbx, rax
 20407 0000F204 58                      	pop rax
 20408 0000F205 C60004                  	mov byte [rax], T_closure
 20409 0000F208 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20410 0000F20C 48C74009[19F20000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007b
 20411 0000F214 E947010000              	jmp .L_lambda_simple_end_007b
 20412                                  .L_lambda_simple_code_007b:	; lambda-simple body
 20413 0000F219 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20414 0000F21F 740B                    	je .L_lambda_simple_arity_check_ok_007b
 20415 0000F221 FF742410                	push qword [rsp + 8 * 2]
 20416 0000F225 6A01                    	push 1
 20417 0000F227 E95E780000              	jmp L_error_incorrect_arity_simple
 20418                                  .L_lambda_simple_arity_check_ok_007b:
 20419 0000F22C C8000000                	enter 0, 0
 20420                                  	; preparing a non-tail-call
 20421 0000F230 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 20422 0000F238 803805                  	cmp byte [rax], T_undefined
 20423 0000F23B 0F8463770000            	je L_error_fvar_undefined
 20424 0000F241 50                      	push rax
 20425 0000F242 488B0425[AF120000]      	mov rax, qword [free_var_74]	; free var char<?
 20426 0000F24A 803805                  	cmp byte [rax], T_undefined
 20427 0000F24D 0F8451770000            	je L_error_fvar_undefined
 20428 0000F253 50                      	push rax
 20429 0000F254 6A02                    	push 2	; arg count
 20430 0000F256 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20431 0000F25A 803804                  	cmp byte [rax], T_closure
 20432 0000F25D 0F85C5770000            	jne L_error_non_closure
 20433 0000F263 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20434 0000F266 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20435 0000F269 48890425[9A160000]      	mov qword [free_var_133], rax
 20436 0000F271 48B8-                   	mov rax, sob_void
 20436 0000F273 [0000000000000000] 
 20437                                  
 20438                                  	; preparing a non-tail-call
 20439 0000F27B 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 20440 0000F283 803805                  	cmp byte [rax], T_undefined
 20441 0000F286 0F8418770000            	je L_error_fvar_undefined
 20442 0000F28C 50                      	push rax
 20443 0000F28D 488B0425[38120000]      	mov rax, qword [free_var_67]	; free var char-ci<?
 20444 0000F295 803805                  	cmp byte [rax], T_undefined
 20445 0000F298 0F8406770000            	je L_error_fvar_undefined
 20446 0000F29E 50                      	push rax
 20447 0000F29F 6A02                    	push 2	; arg count
 20448 0000F2A1 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20449 0000F2A5 803804                  	cmp byte [rax], T_closure
 20450 0000F2A8 0F857A770000            	jne L_error_non_closure
 20451 0000F2AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 20452 0000F2B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20453 0000F2B4 48890425[CE150000]      	mov qword [free_var_121], rax
 20454 0000F2BC 48B8-                   	mov rax, sob_void
 20454 0000F2BE [0000000000000000] 
 20455                                  
 20456                                  	; preparing a non-tail-call
 20457 0000F2C6 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 20458 0000F2CE 803805                  	cmp byte [rax], T_undefined
 20459 0000F2D1 0F84CD760000            	je L_error_fvar_undefined
 20460 0000F2D7 50                      	push rax
 20461 0000F2D8 488B0425[E2120000]      	mov rax, qword [free_var_77]	; free var char>?
 20462 0000F2E0 803805                  	cmp byte [rax], T_undefined
 20463 0000F2E3 0F84BB760000            	je L_error_fvar_undefined
 20464 0000F2E9 50                      	push rax
 20465 0000F2EA 6A02                    	push 2	; arg count
 20466 0000F2EC 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20467 0000F2F0 803804                  	cmp byte [rax], T_closure
 20468 0000F2F3 0F852F770000            	jne L_error_non_closure
 20469 0000F2F9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20470 0000F2FC FF5009                  	call SOB_CLOSURE_CODE(rax)
 20471 0000F2FF 48890425[CD160000]      	mov qword [free_var_136], rax
 20472 0000F307 48B8-                   	mov rax, sob_void
 20472 0000F309 [0000000000000000] 
 20473                                  
 20474                                  	; preparing a non-tail-call
 20475 0000F311 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 20476 0000F319 803805                  	cmp byte [rax], T_undefined
 20477 0000F31C 0F8482760000            	je L_error_fvar_undefined
 20478 0000F322 50                      	push rax
 20479 0000F323 488B0425[6B120000]      	mov rax, qword [free_var_70]	; free var char-ci>?
 20480 0000F32B 803805                  	cmp byte [rax], T_undefined
 20481 0000F32E 0F8470760000            	je L_error_fvar_undefined
 20482 0000F334 50                      	push rax
 20483 0000F335 6A02                    	push 2	; arg count
 20484 0000F337 488B4520                	mov rax, PARAM(0)	; param make-string<=?
 20485 0000F33B 803804                  	cmp byte [rax], T_closure
 20486 0000F33E 0F85E4760000            	jne L_error_non_closure
 20487 0000F344 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20488 0000F347 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20489 0000F34A 48890425[01160000]      	mov qword [free_var_124], rax
 20490 0000F352 48B8-                   	mov rax, sob_void
 20490 0000F354 [0000000000000000] 
 20491 0000F35C C9                      	leave
 20492 0000F35D C21800                  	ret AND_KILL_FRAME(1)
 20493                                  .L_lambda_simple_end_007b:	; new closure is in rax
 20494 0000F360 803804                  	cmp byte [rax], T_closure
 20495 0000F363 0F85BF760000            	jne L_error_non_closure
 20496 0000F369 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20497 0000F36C FF5009                  	call SOB_CLOSURE_CODE(rax)
 20498                                  
 20499 0000F36F 4889C7                  	mov rdi, rax
 20500 0000F372 E8AF790000              	call print_sexpr_if_not_void
 20501                                  	; preparing a non-tail-call
 20502 0000F377 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20503 0000F37C E850770000              	call malloc
 20504 0000F381 50                      	push rax
 20505 0000F382 BF00000000              	mov rdi, 8 * 0	; new rib
 20506 0000F387 E845770000              	call malloc
 20507 0000F38C 50                      	push rax
 20508 0000F38D BF08000000              	mov rdi, 8 * 1	; extended env
 20509 0000F392 E83A770000              	call malloc
 20510 0000F397 488B7D10                	mov rdi, ENV
 20511 0000F39B BE00000000              	mov rsi, 0
 20512 0000F3A0 BA01000000              	mov rdx, 1
 20513                                  .L_lambda_simple_env_loop_007c:	; ext_env[i + 1] <-- env[i]
 20514 0000F3A5 4883FE00                	cmp rsi, 0
 20515 0000F3A9 7410                    	je .L_lambda_simple_env_end_007c
 20516 0000F3AB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20517 0000F3AF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20518 0000F3B3 48FFC6                  	inc rsi
 20519 0000F3B6 48FFC2                  	inc rdx
 20520 0000F3B9 EBEA                    	jmp .L_lambda_simple_env_loop_007c
 20521                                  .L_lambda_simple_env_end_007c:
 20522 0000F3BB 5B                      	pop rbx
 20523 0000F3BC BE00000000              	mov rsi, 0
 20524                                  .L_lambda_simple_params_loop_007c:	; copy params
 20525 0000F3C1 4883FE00                	cmp rsi, 0
 20526 0000F3C5 740E                    	je .L_lambda_simple_params_end_007c
 20527 0000F3C7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20528 0000F3CC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20529 0000F3D0 48FFC6                  	inc rsi
 20530 0000F3D3 EBEC                    	jmp .L_lambda_simple_params_loop_007c
 20531                                  .L_lambda_simple_params_end_007c:
 20532 0000F3D5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20533 0000F3D8 4889C3                  	mov rbx, rax
 20534 0000F3DB 58                      	pop rax
 20535 0000F3DC C60004                  	mov byte [rax], T_closure
 20536 0000F3DF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20537 0000F3E3 48C74009[F0F30000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007c
 20538 0000F3EB E9BE0B0000              	jmp .L_lambda_simple_end_007c
 20539                                  .L_lambda_simple_code_007c:	; lambda-simple body
 20540 0000F3F0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20541 0000F3F6 740B                    	je .L_lambda_simple_arity_check_ok_007c
 20542 0000F3F8 FF742410                	push qword [rsp + 8 * 2]
 20543 0000F3FC 6A01                    	push 1
 20544 0000F3FE E987760000              	jmp L_error_incorrect_arity_simple
 20545                                  .L_lambda_simple_arity_check_ok_007c:
 20546 0000F403 C8000000                	enter 0, 0
 20547                                  	; preparing a tail-call
 20548 0000F407 48B8-                   	mov rax, L_constants + 1993
 20548 0000F409 [C907000000000000] 
 20549 0000F411 50                      	push rax
 20550 0000F412 6A01                    	push 1	; arg count
 20551 0000F414 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20552 0000F419 E8B3760000              	call malloc
 20553 0000F41E 50                      	push rax
 20554 0000F41F BF08000000              	mov rdi, 8 * 1	; new rib
 20555 0000F424 E8A8760000              	call malloc
 20556 0000F429 50                      	push rax
 20557 0000F42A BF10000000              	mov rdi, 8 * 2	; extended env
 20558 0000F42F E89D760000              	call malloc
 20559 0000F434 488B7D10                	mov rdi, ENV
 20560 0000F438 BE00000000              	mov rsi, 0
 20561 0000F43D BA01000000              	mov rdx, 1
 20562                                  .L_lambda_simple_env_loop_007d:	; ext_env[i + 1] <-- env[i]
 20563 0000F442 4883FE01                	cmp rsi, 1
 20564 0000F446 7410                    	je .L_lambda_simple_env_end_007d
 20565 0000F448 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20566 0000F44C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20567 0000F450 48FFC6                  	inc rsi
 20568 0000F453 48FFC2                  	inc rdx
 20569 0000F456 EBEA                    	jmp .L_lambda_simple_env_loop_007d
 20570                                  .L_lambda_simple_env_end_007d:
 20571 0000F458 5B                      	pop rbx
 20572 0000F459 BE00000000              	mov rsi, 0
 20573                                  .L_lambda_simple_params_loop_007d:	; copy params
 20574 0000F45E 4883FE01                	cmp rsi, 1
 20575 0000F462 740E                    	je .L_lambda_simple_params_end_007d
 20576 0000F464 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20577 0000F469 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20578 0000F46D 48FFC6                  	inc rsi
 20579 0000F470 EBEC                    	jmp .L_lambda_simple_params_loop_007d
 20580                                  .L_lambda_simple_params_end_007d:
 20581 0000F472 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20582 0000F475 4889C3                  	mov rbx, rax
 20583 0000F478 58                      	pop rax
 20584 0000F479 C60004                  	mov byte [rax], T_closure
 20585 0000F47C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20586 0000F480 48C74009[8DF40000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007d
 20587 0000F488 E9D70A0000              	jmp .L_lambda_simple_end_007d
 20588                                  .L_lambda_simple_code_007d:	; lambda-simple body
 20589 0000F48D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 20590 0000F493 740B                    	je .L_lambda_simple_arity_check_ok_007d
 20591 0000F495 FF742410                	push qword [rsp + 8 * 2]
 20592 0000F499 6A01                    	push 1
 20593 0000F49B E9EA750000              	jmp L_error_incorrect_arity_simple
 20594                                  .L_lambda_simple_arity_check_ok_007d:
 20595 0000F4A0 C8000000                	enter 0, 0
 20596 0000F4A4 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 20597 0000F4A8 488903                  	mov qword [rbx], rax
 20598                                  
 20599 0000F4AB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20600 0000F4B0 E81C760000              	call malloc
 20601 0000F4B5 50                      	push rax
 20602 0000F4B6 BF08000000              	mov rdi, 8 * 1	; new rib
 20603 0000F4BB E811760000              	call malloc
 20604 0000F4C0 50                      	push rax
 20605 0000F4C1 BF18000000              	mov rdi, 8 * 3	; extended env
 20606 0000F4C6 E806760000              	call malloc
 20607 0000F4CB 488B7D10                	mov rdi, ENV
 20608 0000F4CF BE00000000              	mov rsi, 0
 20609 0000F4D4 BA01000000              	mov rdx, 1
 20610                                  .L_lambda_simple_env_loop_007e:	; ext_env[i + 1] <-- env[i]
 20611 0000F4D9 4883FE02                	cmp rsi, 2
 20612 0000F4DD 7410                    	je .L_lambda_simple_env_end_007e
 20613 0000F4DF 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20614 0000F4E3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20615 0000F4E7 48FFC6                  	inc rsi
 20616 0000F4EA 48FFC2                  	inc rdx
 20617 0000F4ED EBEA                    	jmp .L_lambda_simple_env_loop_007e
 20618                                  .L_lambda_simple_env_end_007e:
 20619 0000F4EF 5B                      	pop rbx
 20620 0000F4F0 BE00000000              	mov rsi, 0
 20621                                  .L_lambda_simple_params_loop_007e:	; copy params
 20622 0000F4F5 4883FE01                	cmp rsi, 1
 20623 0000F4F9 740E                    	je .L_lambda_simple_params_end_007e
 20624 0000F4FB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20625 0000F500 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20626 0000F504 48FFC6                  	inc rsi
 20627 0000F507 EBEC                    	jmp .L_lambda_simple_params_loop_007e
 20628                                  .L_lambda_simple_params_end_007e:
 20629 0000F509 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20630 0000F50C 4889C3                  	mov rbx, rax
 20631 0000F50F 58                      	pop rax
 20632 0000F510 C60004                  	mov byte [rax], T_closure
 20633 0000F513 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20634 0000F517 48C74009[24F50000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007e
 20635 0000F51F E9BC010000              	jmp .L_lambda_simple_end_007e
 20636                                  .L_lambda_simple_code_007e:	; lambda-simple body
 20637 0000F524 48837C241004            	cmp qword [rsp + 8 * 2], 4
 20638 0000F52A 740B                    	je .L_lambda_simple_arity_check_ok_007e
 20639 0000F52C FF742410                	push qword [rsp + 8 * 2]
 20640 0000F530 6A04                    	push 4
 20641 0000F532 E953750000              	jmp L_error_incorrect_arity_simple
 20642                                  .L_lambda_simple_arity_check_ok_007e:
 20643 0000F537 C8000000                	enter 0, 0
 20644                                  	; preparing a non-tail-call
 20645 0000F53B 488B4538                	mov rax, PARAM(3)	; param len
 20646 0000F53F 50                      	push rax
 20647 0000F540 488B4520                	mov rax, PARAM(0)	; param i
 20648 0000F544 50                      	push rax
 20649 0000F545 6A02                    	push 2	; arg count
 20650 0000F547 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 20651 0000F54F 803805                  	cmp byte [rax], T_undefined
 20652 0000F552 0F844C740000            	je L_error_fvar_undefined
 20653 0000F558 803804                  	cmp byte [rax], T_closure
 20654 0000F55B 0F85C7740000            	jne L_error_non_closure
 20655 0000F561 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20656 0000F564 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20657 0000F567 483D[02000000]          	cmp rax, sob_boolean_false
 20658 0000F56D 0F8569010000            	jne .L_or_end_000f
 20659                                  	; preparing a non-tail-call
 20660 0000F573 488B4538                	mov rax, PARAM(3)	; param len
 20661 0000F577 50                      	push rax
 20662 0000F578 488B4520                	mov rax, PARAM(0)	; param i
 20663 0000F57C 50                      	push rax
 20664 0000F57D 6A02                    	push 2	; arg count
 20665 0000F57F 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 20666 0000F587 803805                  	cmp byte [rax], T_undefined
 20667 0000F58A 0F8414740000            	je L_error_fvar_undefined
 20668 0000F590 803804                  	cmp byte [rax], T_closure
 20669 0000F593 0F858F740000            	jne L_error_non_closure
 20670 0000F599 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20671 0000F59C FF5009                  	call SOB_CLOSURE_CODE(rax)
 20672 0000F59F 483D[02000000]          	cmp rax, sob_boolean_false
 20673 0000F5A5 0F8427010000            	je .L_if_else_0065
 20674                                  	; preparing a non-tail-call
 20675                                  	; preparing a non-tail-call
 20676 0000F5AB 488B4520                	mov rax, PARAM(0)	; param i
 20677 0000F5AF 50                      	push rax
 20678 0000F5B0 488B4530                	mov rax, PARAM(2)	; param str2
 20679 0000F5B4 50                      	push rax
 20680 0000F5B5 6A02                    	push 2	; arg count
 20681 0000F5B7 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 20682 0000F5BF 803805                  	cmp byte [rax], T_undefined
 20683 0000F5C2 0F84DC730000            	je L_error_fvar_undefined
 20684 0000F5C8 803804                  	cmp byte [rax], T_closure
 20685 0000F5CB 0F8557740000            	jne L_error_non_closure
 20686 0000F5D1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20687 0000F5D4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20688 0000F5D7 50                      	push rax
 20689                                  	; preparing a non-tail-call
 20690 0000F5D8 488B4520                	mov rax, PARAM(0)	; param i
 20691 0000F5DC 50                      	push rax
 20692 0000F5DD 488B4528                	mov rax, PARAM(1)	; param str1
 20693 0000F5E1 50                      	push rax
 20694 0000F5E2 6A02                    	push 2	; arg count
 20695 0000F5E4 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 20696 0000F5EC 803805                  	cmp byte [rax], T_undefined
 20697 0000F5EF 0F84AF730000            	je L_error_fvar_undefined
 20698 0000F5F5 803804                  	cmp byte [rax], T_closure
 20699 0000F5F8 0F852A740000            	jne L_error_non_closure
 20700 0000F5FE FF7001                  	push SOB_CLOSURE_ENV(rax)
 20701 0000F601 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20702 0000F604 50                      	push rax
 20703 0000F605 6A02                    	push 2	; arg count
 20704 0000F607 488B4510                	mov rax, ENV
 20705 0000F60B 488B4008                	mov rax, qword [rax + 8 * 1]
 20706 0000F60F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var char=?
 20707 0000F612 803804                  	cmp byte [rax], T_closure
 20708 0000F615 0F850D740000            	jne L_error_non_closure
 20709 0000F61B FF7001                  	push SOB_CLOSURE_ENV(rax)
 20710 0000F61E FF5009                  	call SOB_CLOSURE_CODE(rax)
 20711 0000F621 483D[02000000]          	cmp rax, sob_boolean_false
 20712 0000F627 0F8499000000            	je .L_if_else_0064
 20713                                  	; preparing a tail-call
 20714 0000F62D 488B4538                	mov rax, PARAM(3)	; param len
 20715 0000F631 50                      	push rax
 20716 0000F632 488B4530                	mov rax, PARAM(2)	; param str2
 20717 0000F636 50                      	push rax
 20718 0000F637 488B4528                	mov rax, PARAM(1)	; param str1
 20719 0000F63B 50                      	push rax
 20720                                  	; preparing a non-tail-call
 20721 0000F63C 48B8-                   	mov rax, L_constants + 2270
 20721 0000F63E [DE08000000000000] 
 20722 0000F646 50                      	push rax
 20723 0000F647 488B4520                	mov rax, PARAM(0)	; param i
 20724 0000F64B 50                      	push rax
 20725 0000F64C 6A02                    	push 2	; arg count
 20726 0000F64E 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 20727 0000F656 803805                  	cmp byte [rax], T_undefined
 20728 0000F659 0F8445730000            	je L_error_fvar_undefined
 20729 0000F65F 803804                  	cmp byte [rax], T_closure
 20730 0000F662 0F85C0730000            	jne L_error_non_closure
 20731 0000F668 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20732 0000F66B FF5009                  	call SOB_CLOSURE_CODE(rax)
 20733 0000F66E 50                      	push rax
 20734 0000F66F 6A04                    	push 4	; arg count
 20735 0000F671 488B4510                	mov rax, ENV
 20736 0000F675 488B00                  	mov rax, qword [rax + 8 * 0]
 20737 0000F678 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20738 0000F67B 488B00                  	mov rax, qword [rax]
 20739 0000F67E 803804                  	cmp byte [rax], T_closure
 20740 0000F681 0F85A1730000            	jne L_error_non_closure
 20741 0000F687 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20742 0000F68A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 20743 0000F68D FF7500                  	push qword[rbp]
 20744 0000F690 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 20745 0000F695 48895D10                	mov qword[rbp + 8*2],rbx
 20746 0000F699 48C7451804000000        	mov qword[rbp + 8*3], 4	 ;n turns to m
 20747 0000F6A1 BF00000000              	mov rdi,0
 20748 0000F6A6 EB00                    	jmp .L_tc_recycle_frame_loop_00c7
 20749                                  .L_tc_recycle_frame_loop_00c7:
 20750 0000F6A8 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 20751 0000F6AC 740F                    	je .L_tc_recycle_frame_done_00c7
 20752 0000F6AE 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 20753 0000F6B3 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 20754 0000F6B8 48FFC7                  	inc rdi
 20755 0000F6BB EBEB                    	jmp .L_tc_recycle_frame_loop_00c7
 20756                                  .L_tc_recycle_frame_done_00c7:
 20757 0000F6BD 4889EC                  	mov rsp, rbp	; point to last argument
 20758 0000F6C0 5D                      	pop rbp
 20759 0000F6C1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20760 0000F6C4 EB0A                    	jmp .L_if_end_0064
 20761                                  .L_if_else_0064:
 20762 0000F6C6 48B8-                   	mov rax, L_constants + 2
 20762 0000F6C8 [0200000000000000] 
 20763                                  .L_if_end_0064:
 20764 0000F6D0 EB0A                    	jmp .L_if_end_0065
 20765                                  .L_if_else_0065:
 20766 0000F6D2 48B8-                   	mov rax, L_constants + 2
 20766 0000F6D4 [0200000000000000] 
 20767                                  .L_if_end_0065:
 20768                                  .L_or_end_000f:
 20769 0000F6DC C9                      	leave
 20770 0000F6DD C23000                  	ret AND_KILL_FRAME(4)
 20771                                  .L_lambda_simple_end_007e:	; new closure is in rax
 20772 0000F6E0 50                      	push rax
 20773 0000F6E1 488B4520                	mov rax, PARAM(0)	; param run
 20774 0000F6E5 8F00                    	pop qword [rax]
 20775 0000F6E7 48B8-                   	mov rax, sob_void
 20775 0000F6E9 [0000000000000000] 
 20776                                  
 20777                                  	; preparing a tail-call
 20778 0000F6F1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20779 0000F6F6 E8D6730000              	call malloc
 20780 0000F6FB 50                      	push rax
 20781 0000F6FC BF08000000              	mov rdi, 8 * 1	; new rib
 20782 0000F701 E8CB730000              	call malloc
 20783 0000F706 50                      	push rax
 20784 0000F707 BF18000000              	mov rdi, 8 * 3	; extended env
 20785 0000F70C E8C0730000              	call malloc
 20786 0000F711 488B7D10                	mov rdi, ENV
 20787 0000F715 BE00000000              	mov rsi, 0
 20788 0000F71A BA01000000              	mov rdx, 1
 20789                                  .L_lambda_simple_env_loop_007f:	; ext_env[i + 1] <-- env[i]
 20790 0000F71F 4883FE02                	cmp rsi, 2
 20791 0000F723 7410                    	je .L_lambda_simple_env_end_007f
 20792 0000F725 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20793 0000F729 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20794 0000F72D 48FFC6                  	inc rsi
 20795 0000F730 48FFC2                  	inc rdx
 20796 0000F733 EBEA                    	jmp .L_lambda_simple_env_loop_007f
 20797                                  .L_lambda_simple_env_end_007f:
 20798 0000F735 5B                      	pop rbx
 20799 0000F736 BE00000000              	mov rsi, 0
 20800                                  .L_lambda_simple_params_loop_007f:	; copy params
 20801 0000F73B 4883FE01                	cmp rsi, 1
 20802 0000F73F 740E                    	je .L_lambda_simple_params_end_007f
 20803 0000F741 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20804 0000F746 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20805 0000F74A 48FFC6                  	inc rsi
 20806 0000F74D EBEC                    	jmp .L_lambda_simple_params_loop_007f
 20807                                  .L_lambda_simple_params_end_007f:
 20808 0000F74F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20809 0000F752 4889C3                  	mov rbx, rax
 20810 0000F755 58                      	pop rax
 20811 0000F756 C60004                  	mov byte [rax], T_closure
 20812 0000F759 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20813 0000F75D 48C74009[6AF70000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_007f
 20814 0000F765 E908020000              	jmp .L_lambda_simple_end_007f
 20815                                  .L_lambda_simple_code_007f:	; lambda-simple body
 20816 0000F76A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20817 0000F770 740B                    	je .L_lambda_simple_arity_check_ok_007f
 20818 0000F772 FF742410                	push qword [rsp + 8 * 2]
 20819 0000F776 6A02                    	push 2
 20820 0000F778 E90D730000              	jmp L_error_incorrect_arity_simple
 20821                                  .L_lambda_simple_arity_check_ok_007f:
 20822 0000F77D C8000000                	enter 0, 0
 20823                                  	; preparing a tail-call
 20824                                  	; preparing a non-tail-call
 20825 0000F781 488B4528                	mov rax, PARAM(1)	; param str2
 20826 0000F785 50                      	push rax
 20827 0000F786 6A01                    	push 1	; arg count
 20828 0000F788 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 20829 0000F790 803805                  	cmp byte [rax], T_undefined
 20830 0000F793 0F840B720000            	je L_error_fvar_undefined
 20831 0000F799 803804                  	cmp byte [rax], T_closure
 20832 0000F79C 0F8586720000            	jne L_error_non_closure
 20833 0000F7A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20834 0000F7A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 20835 0000F7A8 50                      	push rax
 20836                                  	; preparing a non-tail-call
 20837 0000F7A9 488B4520                	mov rax, PARAM(0)	; param str1
 20838 0000F7AD 50                      	push rax
 20839 0000F7AE 6A01                    	push 1	; arg count
 20840 0000F7B0 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 20841 0000F7B8 803805                  	cmp byte [rax], T_undefined
 20842 0000F7BB 0F84E3710000            	je L_error_fvar_undefined
 20843 0000F7C1 803804                  	cmp byte [rax], T_closure
 20844 0000F7C4 0F855E720000            	jne L_error_non_closure
 20845 0000F7CA FF7001                  	push SOB_CLOSURE_ENV(rax)
 20846 0000F7CD FF5009                  	call SOB_CLOSURE_CODE(rax)
 20847 0000F7D0 50                      	push rax
 20848 0000F7D1 6A02                    	push 2	; arg count
 20849 0000F7D3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20850 0000F7D8 E8F4720000              	call malloc
 20851 0000F7DD 50                      	push rax
 20852 0000F7DE BF10000000              	mov rdi, 8 * 2	; new rib
 20853 0000F7E3 E8E9720000              	call malloc
 20854 0000F7E8 50                      	push rax
 20855 0000F7E9 BF20000000              	mov rdi, 8 * 4	; extended env
 20856 0000F7EE E8DE720000              	call malloc
 20857 0000F7F3 488B7D10                	mov rdi, ENV
 20858 0000F7F7 BE00000000              	mov rsi, 0
 20859 0000F7FC BA01000000              	mov rdx, 1
 20860                                  .L_lambda_simple_env_loop_0080:	; ext_env[i + 1] <-- env[i]
 20861 0000F801 4883FE03                	cmp rsi, 3
 20862 0000F805 7410                    	je .L_lambda_simple_env_end_0080
 20863 0000F807 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20864 0000F80B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20865 0000F80F 48FFC6                  	inc rsi
 20866 0000F812 48FFC2                  	inc rdx
 20867 0000F815 EBEA                    	jmp .L_lambda_simple_env_loop_0080
 20868                                  .L_lambda_simple_env_end_0080:
 20869 0000F817 5B                      	pop rbx
 20870 0000F818 BE00000000              	mov rsi, 0
 20871                                  .L_lambda_simple_params_loop_0080:	; copy params
 20872 0000F81D 4883FE02                	cmp rsi, 2
 20873 0000F821 740E                    	je .L_lambda_simple_params_end_0080
 20874 0000F823 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 20875 0000F828 488914F3                	mov qword [rbx + 8 * rsi], rdx
 20876 0000F82C 48FFC6                  	inc rsi
 20877 0000F82F EBEC                    	jmp .L_lambda_simple_params_loop_0080
 20878                                  .L_lambda_simple_params_end_0080:
 20879 0000F831 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 20880 0000F834 4889C3                  	mov rbx, rax
 20881 0000F837 58                      	pop rax
 20882 0000F838 C60004                  	mov byte [rax], T_closure
 20883 0000F83B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 20884 0000F83F 48C74009[4CF80000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0080
 20885 0000F847 E9DC000000              	jmp .L_lambda_simple_end_0080
 20886                                  .L_lambda_simple_code_0080:	; lambda-simple body
 20887 0000F84C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 20888 0000F852 740B                    	je .L_lambda_simple_arity_check_ok_0080
 20889 0000F854 FF742410                	push qword [rsp + 8 * 2]
 20890 0000F858 6A02                    	push 2
 20891 0000F85A E92B720000              	jmp L_error_incorrect_arity_simple
 20892                                  .L_lambda_simple_arity_check_ok_0080:
 20893 0000F85F C8000000                	enter 0, 0
 20894                                  	; preparing a non-tail-call
 20895 0000F863 488B4528                	mov rax, PARAM(1)	; param len2
 20896 0000F867 50                      	push rax
 20897 0000F868 488B4520                	mov rax, PARAM(0)	; param len1
 20898 0000F86C 50                      	push rax
 20899 0000F86D 6A02                    	push 2	; arg count
 20900 0000F86F 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 20901 0000F877 803805                  	cmp byte [rax], T_undefined
 20902 0000F87A 0F8424710000            	je L_error_fvar_undefined
 20903 0000F880 803804                  	cmp byte [rax], T_closure
 20904 0000F883 0F859F710000            	jne L_error_non_closure
 20905 0000F889 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20906 0000F88C FF5009                  	call SOB_CLOSURE_CODE(rax)
 20907 0000F88F 483D[02000000]          	cmp rax, sob_boolean_false
 20908 0000F895 0F847F000000            	je .L_if_else_0066
 20909                                  	; preparing a tail-call
 20910 0000F89B 488B4520                	mov rax, PARAM(0)	; param len1
 20911 0000F89F 50                      	push rax
 20912 0000F8A0 488B4510                	mov rax, ENV
 20913 0000F8A4 488B00                  	mov rax, qword [rax + 8 * 0]
 20914 0000F8A7 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var str2
 20915 0000F8AB 50                      	push rax
 20916 0000F8AC 488B4510                	mov rax, ENV
 20917 0000F8B0 488B00                  	mov rax, qword [rax + 8 * 0]
 20918 0000F8B3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str1
 20919 0000F8B6 50                      	push rax
 20920 0000F8B7 48B8-                   	mov rax, L_constants + 2135
 20920 0000F8B9 [5708000000000000] 
 20921 0000F8C1 50                      	push rax
 20922 0000F8C2 6A04                    	push 4	; arg count
 20923 0000F8C4 488B4510                	mov rax, ENV
 20924 0000F8C8 488B4008                	mov rax, qword [rax + 8 * 1]
 20925 0000F8CC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 20926 0000F8CF 488B00                  	mov rax, qword [rax]
 20927 0000F8D2 803804                  	cmp byte [rax], T_closure
 20928 0000F8D5 0F854D710000            	jne L_error_non_closure
 20929 0000F8DB FF7001                  	push SOB_CLOSURE_ENV(rax)
 20930 0000F8DE FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 20931 0000F8E1 FF7500                  	push qword[rbp]
 20932 0000F8E4 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 20933 0000F8E9 48895D10                	mov qword[rbp + 8*2],rbx
 20934 0000F8ED 48C7451804000000        	mov qword[rbp + 8*3], 4	 ;n turns to m
 20935 0000F8F5 BF00000000              	mov rdi,0
 20936 0000F8FA EB00                    	jmp .L_tc_recycle_frame_loop_00c8
 20937                                  .L_tc_recycle_frame_loop_00c8:
 20938 0000F8FC 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 20939 0000F900 740F                    	je .L_tc_recycle_frame_done_00c8
 20940 0000F902 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 20941 0000F907 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 20942 0000F90C 48FFC7                  	inc rdi
 20943 0000F90F EBEB                    	jmp .L_tc_recycle_frame_loop_00c8
 20944                                  .L_tc_recycle_frame_done_00c8:
 20945 0000F911 4889EC                  	mov rsp, rbp	; point to last argument
 20946 0000F914 5D                      	pop rbp
 20947 0000F915 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20948 0000F918 EB0A                    	jmp .L_if_end_0066
 20949                                  .L_if_else_0066:
 20950 0000F91A 48B8-                   	mov rax, L_constants + 2
 20950 0000F91C [0200000000000000] 
 20951                                  .L_if_end_0066:
 20952 0000F924 C9                      	leave
 20953 0000F925 C22000                  	ret AND_KILL_FRAME(2)
 20954                                  .L_lambda_simple_end_0080:	; new closure is in rax
 20955 0000F928 803804                  	cmp byte [rax], T_closure
 20956 0000F92B 0F85F7700000            	jne L_error_non_closure
 20957 0000F931 FF7001                  	push SOB_CLOSURE_ENV(rax)
 20958 0000F934 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 20959 0000F937 FF7500                  	push qword[rbp]
 20960 0000F93A 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 20961 0000F93F 48895D10                	mov qword[rbp + 8*2],rbx
 20962 0000F943 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 20963 0000F94B BF00000000              	mov rdi,0
 20964 0000F950 EB00                    	jmp .L_tc_recycle_frame_loop_00c9
 20965                                  .L_tc_recycle_frame_loop_00c9:
 20966 0000F952 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 20967 0000F956 740F                    	je .L_tc_recycle_frame_done_00c9
 20968 0000F958 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 20969 0000F95D 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 20970 0000F962 48FFC7                  	inc rdi
 20971 0000F965 EBEB                    	jmp .L_tc_recycle_frame_loop_00c9
 20972                                  .L_tc_recycle_frame_done_00c9:
 20973 0000F967 4889EC                  	mov rsp, rbp	; point to last argument
 20974 0000F96A 5D                      	pop rbp
 20975 0000F96B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 20976 0000F96E C9                      	leave
 20977 0000F96F C22000                  	ret AND_KILL_FRAME(2)
 20978                                  .L_lambda_simple_end_007f:	; new closure is in rax
 20979 0000F972 50                      	push rax
 20980 0000F973 6A01                    	push 1	; arg count
 20981 0000F975 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 20982 0000F97A E852710000              	call malloc
 20983 0000F97F 50                      	push rax
 20984 0000F980 BF08000000              	mov rdi, 8 * 1	; new rib
 20985 0000F985 E847710000              	call malloc
 20986 0000F98A 50                      	push rax
 20987 0000F98B BF18000000              	mov rdi, 8 * 3	; extended env
 20988 0000F990 E83C710000              	call malloc
 20989 0000F995 488B7D10                	mov rdi, ENV
 20990 0000F999 BE00000000              	mov rsi, 0
 20991 0000F99E BA01000000              	mov rdx, 1
 20992                                  .L_lambda_simple_env_loop_0081:	; ext_env[i + 1] <-- env[i]
 20993 0000F9A3 4883FE02                	cmp rsi, 2
 20994 0000F9A7 7410                    	je .L_lambda_simple_env_end_0081
 20995 0000F9A9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 20996 0000F9AD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 20997 0000F9B1 48FFC6                  	inc rsi
 20998 0000F9B4 48FFC2                  	inc rdx
 20999 0000F9B7 EBEA                    	jmp .L_lambda_simple_env_loop_0081
 21000                                  .L_lambda_simple_env_end_0081:
 21001 0000F9B9 5B                      	pop rbx
 21002 0000F9BA BE00000000              	mov rsi, 0
 21003                                  .L_lambda_simple_params_loop_0081:	; copy params
 21004 0000F9BF 4883FE01                	cmp rsi, 1
 21005 0000F9C3 740E                    	je .L_lambda_simple_params_end_0081
 21006 0000F9C5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21007 0000F9CA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21008 0000F9CE 48FFC6                  	inc rsi
 21009 0000F9D1 EBEC                    	jmp .L_lambda_simple_params_loop_0081
 21010                                  .L_lambda_simple_params_end_0081:
 21011 0000F9D3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21012 0000F9D6 4889C3                  	mov rbx, rax
 21013 0000F9D9 58                      	pop rax
 21014 0000F9DA C60004                  	mov byte [rax], T_closure
 21015 0000F9DD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21016 0000F9E1 48C74009[EEF90000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0081
 21017 0000F9E9 E92C050000              	jmp .L_lambda_simple_end_0081
 21018                                  .L_lambda_simple_code_0081:	; lambda-simple body
 21019 0000F9EE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21020 0000F9F4 740B                    	je .L_lambda_simple_arity_check_ok_0081
 21021 0000F9F6 FF742410                	push qword [rsp + 8 * 2]
 21022 0000F9FA 6A01                    	push 1
 21023 0000F9FC E989700000              	jmp L_error_incorrect_arity_simple
 21024                                  .L_lambda_simple_arity_check_ok_0081:
 21025 0000FA01 C8000000                	enter 0, 0
 21026                                  	; preparing a tail-call
 21027 0000FA05 48B8-                   	mov rax, L_constants + 1993
 21027 0000FA07 [C907000000000000] 
 21028 0000FA0F 50                      	push rax
 21029 0000FA10 6A01                    	push 1	; arg count
 21030 0000FA12 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21031 0000FA17 E8B5700000              	call malloc
 21032 0000FA1C 50                      	push rax
 21033 0000FA1D BF08000000              	mov rdi, 8 * 1	; new rib
 21034 0000FA22 E8AA700000              	call malloc
 21035 0000FA27 50                      	push rax
 21036 0000FA28 BF20000000              	mov rdi, 8 * 4	; extended env
 21037 0000FA2D E89F700000              	call malloc
 21038 0000FA32 488B7D10                	mov rdi, ENV
 21039 0000FA36 BE00000000              	mov rsi, 0
 21040 0000FA3B BA01000000              	mov rdx, 1
 21041                                  .L_lambda_simple_env_loop_0082:	; ext_env[i + 1] <-- env[i]
 21042 0000FA40 4883FE03                	cmp rsi, 3
 21043 0000FA44 7410                    	je .L_lambda_simple_env_end_0082
 21044 0000FA46 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21045 0000FA4A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21046 0000FA4E 48FFC6                  	inc rsi
 21047 0000FA51 48FFC2                  	inc rdx
 21048 0000FA54 EBEA                    	jmp .L_lambda_simple_env_loop_0082
 21049                                  .L_lambda_simple_env_end_0082:
 21050 0000FA56 5B                      	pop rbx
 21051 0000FA57 BE00000000              	mov rsi, 0
 21052                                  .L_lambda_simple_params_loop_0082:	; copy params
 21053 0000FA5C 4883FE01                	cmp rsi, 1
 21054 0000FA60 740E                    	je .L_lambda_simple_params_end_0082
 21055 0000FA62 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21056 0000FA67 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21057 0000FA6B 48FFC6                  	inc rsi
 21058 0000FA6E EBEC                    	jmp .L_lambda_simple_params_loop_0082
 21059                                  .L_lambda_simple_params_end_0082:
 21060 0000FA70 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21061 0000FA73 4889C3                  	mov rbx, rax
 21062 0000FA76 58                      	pop rax
 21063 0000FA77 C60004                  	mov byte [rax], T_closure
 21064 0000FA7A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21065 0000FA7E 48C74009[8BFA0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0082
 21066 0000FA86 E945040000              	jmp .L_lambda_simple_end_0082
 21067                                  .L_lambda_simple_code_0082:	; lambda-simple body
 21068 0000FA8B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21069 0000FA91 740B                    	je .L_lambda_simple_arity_check_ok_0082
 21070 0000FA93 FF742410                	push qword [rsp + 8 * 2]
 21071 0000FA97 6A01                    	push 1
 21072 0000FA99 E9EC6F0000              	jmp L_error_incorrect_arity_simple
 21073                                  .L_lambda_simple_arity_check_ok_0082:
 21074 0000FA9E C8000000                	enter 0, 0
 21075 0000FAA2 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 21076 0000FAA6 488903                  	mov qword [rbx], rax
 21077                                  
 21078 0000FAA9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21079 0000FAAE E81E700000              	call malloc
 21080 0000FAB3 50                      	push rax
 21081 0000FAB4 BF08000000              	mov rdi, 8 * 1	; new rib
 21082 0000FAB9 E813700000              	call malloc
 21083 0000FABE 50                      	push rax
 21084 0000FABF BF28000000              	mov rdi, 8 * 5	; extended env
 21085 0000FAC4 E808700000              	call malloc
 21086 0000FAC9 488B7D10                	mov rdi, ENV
 21087 0000FACD BE00000000              	mov rsi, 0
 21088 0000FAD2 BA01000000              	mov rdx, 1
 21089                                  .L_lambda_simple_env_loop_0083:	; ext_env[i + 1] <-- env[i]
 21090 0000FAD7 4883FE04                	cmp rsi, 4
 21091 0000FADB 7410                    	je .L_lambda_simple_env_end_0083
 21092 0000FADD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21093 0000FAE1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21094 0000FAE5 48FFC6                  	inc rsi
 21095 0000FAE8 48FFC2                  	inc rdx
 21096 0000FAEB EBEA                    	jmp .L_lambda_simple_env_loop_0083
 21097                                  .L_lambda_simple_env_end_0083:
 21098 0000FAED 5B                      	pop rbx
 21099 0000FAEE BE00000000              	mov rsi, 0
 21100                                  .L_lambda_simple_params_loop_0083:	; copy params
 21101 0000FAF3 4883FE01                	cmp rsi, 1
 21102 0000FAF7 740E                    	je .L_lambda_simple_params_end_0083
 21103 0000FAF9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21104 0000FAFE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21105 0000FB02 48FFC6                  	inc rsi
 21106 0000FB05 EBEC                    	jmp .L_lambda_simple_params_loop_0083
 21107                                  .L_lambda_simple_params_end_0083:
 21108 0000FB07 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21109 0000FB0A 4889C3                  	mov rbx, rax
 21110 0000FB0D 58                      	pop rax
 21111 0000FB0E C60004                  	mov byte [rax], T_closure
 21112 0000FB11 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21113 0000FB15 48C74009[22FB0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0083
 21114 0000FB1D E954010000              	jmp .L_lambda_simple_end_0083
 21115                                  .L_lambda_simple_code_0083:	; lambda-simple body
 21116 0000FB22 48837C241002            	cmp qword [rsp + 8 * 2], 2
 21117 0000FB28 740B                    	je .L_lambda_simple_arity_check_ok_0083
 21118 0000FB2A FF742410                	push qword [rsp + 8 * 2]
 21119 0000FB2E 6A02                    	push 2
 21120 0000FB30 E9556F0000              	jmp L_error_incorrect_arity_simple
 21121                                  .L_lambda_simple_arity_check_ok_0083:
 21122 0000FB35 C8000000                	enter 0, 0
 21123                                  	; preparing a non-tail-call
 21124 0000FB39 488B4528                	mov rax, PARAM(1)	; param strs
 21125 0000FB3D 50                      	push rax
 21126 0000FB3E 6A01                    	push 1	; arg count
 21127 0000FB40 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21128 0000FB48 803805                  	cmp byte [rax], T_undefined
 21129 0000FB4B 0F84536E0000            	je L_error_fvar_undefined
 21130 0000FB51 803804                  	cmp byte [rax], T_closure
 21131 0000FB54 0F85CE6E0000            	jne L_error_non_closure
 21132 0000FB5A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21133 0000FB5D FF5009                  	call SOB_CLOSURE_CODE(rax)
 21134 0000FB60 483D[02000000]          	cmp rax, sob_boolean_false
 21135 0000FB66 0F8506010000            	jne .L_or_end_0010
 21136                                  	; preparing a non-tail-call
 21137                                  	; preparing a non-tail-call
 21138 0000FB6C 488B4528                	mov rax, PARAM(1)	; param strs
 21139 0000FB70 50                      	push rax
 21140 0000FB71 6A01                    	push 1	; arg count
 21141 0000FB73 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21142 0000FB7B 803805                  	cmp byte [rax], T_undefined
 21143 0000FB7E 0F84206E0000            	je L_error_fvar_undefined
 21144 0000FB84 803804                  	cmp byte [rax], T_closure
 21145 0000FB87 0F859B6E0000            	jne L_error_non_closure
 21146 0000FB8D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21147 0000FB90 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21148 0000FB93 50                      	push rax
 21149 0000FB94 488B4520                	mov rax, PARAM(0)	; param str
 21150 0000FB98 50                      	push rax
 21151 0000FB99 6A02                    	push 2	; arg count
 21152 0000FB9B 488B4510                	mov rax, ENV
 21153 0000FB9F 488B4008                	mov rax, qword [rax + 8 * 1]
 21154 0000FBA3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var binary-string=?
 21155 0000FBA6 803804                  	cmp byte [rax], T_closure
 21156 0000FBA9 0F85796E0000            	jne L_error_non_closure
 21157 0000FBAF FF7001                  	push SOB_CLOSURE_ENV(rax)
 21158 0000FBB2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21159 0000FBB5 483D[02000000]          	cmp rax, sob_boolean_false
 21160 0000FBBB 0F84A7000000            	je .L_if_else_0067
 21161                                  	; preparing a tail-call
 21162                                  	; preparing a non-tail-call
 21163 0000FBC1 488B4528                	mov rax, PARAM(1)	; param strs
 21164 0000FBC5 50                      	push rax
 21165 0000FBC6 6A01                    	push 1	; arg count
 21166 0000FBC8 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21167 0000FBD0 803805                  	cmp byte [rax], T_undefined
 21168 0000FBD3 0F84CB6D0000            	je L_error_fvar_undefined
 21169 0000FBD9 803804                  	cmp byte [rax], T_closure
 21170 0000FBDC 0F85466E0000            	jne L_error_non_closure
 21171 0000FBE2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21172 0000FBE5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21173 0000FBE8 50                      	push rax
 21174                                  	; preparing a non-tail-call
 21175 0000FBE9 488B4528                	mov rax, PARAM(1)	; param strs
 21176 0000FBED 50                      	push rax
 21177 0000FBEE 6A01                    	push 1	; arg count
 21178 0000FBF0 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21179 0000FBF8 803805                  	cmp byte [rax], T_undefined
 21180 0000FBFB 0F84A36D0000            	je L_error_fvar_undefined
 21181 0000FC01 803804                  	cmp byte [rax], T_closure
 21182 0000FC04 0F851E6E0000            	jne L_error_non_closure
 21183 0000FC0A FF7001                  	push SOB_CLOSURE_ENV(rax)
 21184 0000FC0D FF5009                  	call SOB_CLOSURE_CODE(rax)
 21185 0000FC10 50                      	push rax
 21186 0000FC11 6A02                    	push 2	; arg count
 21187 0000FC13 488B4510                	mov rax, ENV
 21188 0000FC17 488B00                  	mov rax, qword [rax + 8 * 0]
 21189 0000FC1A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21190 0000FC1D 488B00                  	mov rax, qword [rax]
 21191 0000FC20 803804                  	cmp byte [rax], T_closure
 21192 0000FC23 0F85FF6D0000            	jne L_error_non_closure
 21193 0000FC29 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21194 0000FC2C FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 21195 0000FC2F FF7500                  	push qword[rbp]
 21196 0000FC32 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 21197 0000FC37 48895D10                	mov qword[rbp + 8*2],rbx
 21198 0000FC3B 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 21199 0000FC43 BF00000000              	mov rdi,0
 21200 0000FC48 EB00                    	jmp .L_tc_recycle_frame_loop_00ca
 21201                                  .L_tc_recycle_frame_loop_00ca:
 21202 0000FC4A 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 21203 0000FC4E 740F                    	je .L_tc_recycle_frame_done_00ca
 21204 0000FC50 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 21205 0000FC55 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 21206 0000FC5A 48FFC7                  	inc rdi
 21207 0000FC5D EBEB                    	jmp .L_tc_recycle_frame_loop_00ca
 21208                                  .L_tc_recycle_frame_done_00ca:
 21209 0000FC5F 4889EC                  	mov rsp, rbp	; point to last argument
 21210 0000FC62 5D                      	pop rbp
 21211 0000FC63 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21212 0000FC66 EB0A                    	jmp .L_if_end_0067
 21213                                  .L_if_else_0067:
 21214 0000FC68 48B8-                   	mov rax, L_constants + 2
 21214 0000FC6A [0200000000000000] 
 21215                                  .L_if_end_0067:
 21216                                  .L_or_end_0010:
 21217 0000FC72 C9                      	leave
 21218 0000FC73 C22000                  	ret AND_KILL_FRAME(2)
 21219                                  .L_lambda_simple_end_0083:	; new closure is in rax
 21220 0000FC76 50                      	push rax
 21221 0000FC77 488B4520                	mov rax, PARAM(0)	; param run
 21222 0000FC7B 8F00                    	pop qword [rax]
 21223 0000FC7D 48B8-                   	mov rax, sob_void
 21223 0000FC7F [0000000000000000] 
 21224                                  
 21225 0000FC87 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21226 0000FC8C E8406E0000              	call malloc
 21227 0000FC91 50                      	push rax
 21228 0000FC92 BF08000000              	mov rdi, 8 * 1	; new rib
 21229 0000FC97 E8356E0000              	call malloc
 21230 0000FC9C 50                      	push rax
 21231 0000FC9D BF28000000              	mov rdi, 8 * 5	; extended env
 21232 0000FCA2 E82A6E0000              	call malloc
 21233 0000FCA7 488B7D10                	mov rdi, ENV
 21234 0000FCAB BE00000000              	mov rsi, 0
 21235 0000FCB0 BA01000000              	mov rdx, 1
 21236                                  .L_lambda_opt_env_loop_0013:	; ext_env[i + 1] <-- env[i]
 21237 0000FCB5 4883FE04                	cmp rsi, 4
 21238 0000FCB9 7410                    	je .L_lambda_opt_env_end_0013
 21239 0000FCBB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21240 0000FCBF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21241 0000FCC3 48FFC6                  	inc rsi
 21242 0000FCC6 48FFC2                  	inc rdx
 21243 0000FCC9 EBEA                    	jmp .L_lambda_opt_env_loop_0013
 21244                                  .L_lambda_opt_env_end_0013:
 21245 0000FCCB 5B                      	pop rbx
 21246 0000FCCC BE00000000              	mov rsi, 0
 21247                                  .L_lambda_opt_params_loop_0013:	; copy params
 21248 0000FCD1 4883FE01                	cmp rsi, 1
 21249 0000FCD5 740E                    	je .L_lambda_opt_params_end_0013
 21250 0000FCD7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21251 0000FCDC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21252 0000FCE0 48FFC6                  	inc rsi
 21253 0000FCE3 EBEC                    	jmp .L_lambda_opt_params_loop_0013
 21254                                  .L_lambda_opt_params_end_0013:
 21255 0000FCE5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21256 0000FCE8 4889C3                  	mov rbx, rax
 21257 0000FCEB 58                      	pop rax
 21258 0000FCEC C60004                  	mov byte [rax], T_closure
 21259 0000FCEF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21260 0000FCF3 48C74009[00FD0000]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0013
 21261 0000FCFB E9CC010000              	jmp .L_lambda_opt_end_0013
 21262                                  .L_lambda_opt_code_0013:	; lambda-opt body
 21263 0000FD00 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21264 0000FD06 7411                    	je .L_lambda_opt_arity_check_exact_0013
 21265 0000FD08 0F8FB1000000            	jg .L_lambda_opt_arity_check_more_0013
 21266 0000FD0E FF742410                	push qword [rsp + 8 * 2]
 21267 0000FD12 6A01                    	push 1
 21268 0000FD14 E9856D0000              	jmp L_error_incorrect_arity_opt
 21269                                  .L_lambda_opt_arity_check_exact_0013:
 21270 0000FD19 4883EC08                	sub rsp, 8
 21271 0000FD1D 488B442408              	mov rax, qword[rsp + 8 *1]
 21272 0000FD22 48890424                	mov qword[rsp], rax  
 21273 0000FD26 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 21274 0000FD2B 4889442408              	mov qword[rsp + 8 * 1], rax
 21275 0000FD30 B802000000              	mov rax, 2
 21276 0000FD35 4889442410              	mov qword[rsp + 8 *2], rax
 21277 0000FD3A 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 21278 0000FD3F 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 21279 0000FD44 48B8-                   	mov rax, sob_nil
 21279 0000FD46 [0100000000000000] 
 21280 0000FD4E 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 21281 0000FD53 C8000000                	enter 0, 0
 21282                                  	; preparing a tail-call
 21283 0000FD57 488B4528                	mov rax, PARAM(1)	; param strs
 21284 0000FD5B 50                      	push rax
 21285 0000FD5C 488B4520                	mov rax, PARAM(0)	; param str
 21286 0000FD60 50                      	push rax
 21287 0000FD61 6A02                    	push 2	; arg count
 21288 0000FD63 488B4510                	mov rax, ENV
 21289 0000FD67 488B00                  	mov rax, qword [rax + 8 * 0]
 21290 0000FD6A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21291 0000FD6D 488B00                  	mov rax, qword [rax]
 21292 0000FD70 803804                  	cmp byte [rax], T_closure
 21293 0000FD73 0F85AF6C0000            	jne L_error_non_closure
 21294 0000FD79 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21295 0000FD7C FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 21296 0000FD7F FF7500                  	push qword[rbp]
 21297 0000FD82 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 21298 0000FD87 48895D10                	mov qword[rbp + 8*2],rbx
 21299 0000FD8B 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 21300 0000FD93 BF00000000              	mov rdi,0
 21301 0000FD98 EB00                    	jmp .L_tc_recycle_frame_loop_00cc
 21302                                  .L_tc_recycle_frame_loop_00cc:
 21303 0000FD9A 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 21304 0000FD9E 740F                    	je .L_tc_recycle_frame_done_00cc
 21305 0000FDA0 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 21306 0000FDA5 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 21307 0000FDAA 48FFC7                  	inc rdi
 21308 0000FDAD EBEB                    	jmp .L_tc_recycle_frame_loop_00cc
 21309                                  .L_tc_recycle_frame_done_00cc:
 21310 0000FDAF 4889EC                  	mov rsp, rbp	; point to last argument
 21311 0000FDB2 5D                      	pop rbp
 21312 0000FDB3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21313 0000FDB6 C9                      	leave
 21314 0000FDB7 C22000                  	ret AND_KILL_FRAME(2)
 21315 0000FDBA E90D010000              	jmp .L_lambda_opt_end_0013	; new closure is in rax
 21316                                  .L_lambda_opt_arity_check_more_0013:
 21317 0000FDBF 488B442410              	mov rax, qword[rsp + 2 * 8]
 21318 0000FDC4 4889C7                  	mov rdi, rax
 21319 0000FDC7 49B9-                   	mov r9, sob_nil
 21319 0000FDC9 [0100000000000000] 
 21320 0000FDD1 4C8B442410              	mov r8, qword[rsp+2*8]
 21321                                  .L_lambda_opt_stack_shrink_loop_0013:
 21322 0000FDD6 4983F801                	cmp r8, 1
 21323 0000FDDA 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0013
 21324 0000FDDC 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 21325 0000FDE1 BF11000000              	mov rdi, 1+8+8	;for pair
 21326 0000FDE6 E8E66C0000              	call malloc	 ;to create the pair in the stack
 21327 0000FDEB C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 21328 0000FDEE 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 21329 0000FDF2 4C894809                 	mov qword[rax+1+8],r9
 21330 0000FDF6 4989C1                  	mov r9 , rax	 ; for the recursion 
 21331 0000FDF9 49FFC8                  	dec r8
 21332 0000FDFC EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0013
 21333                                  .L_lambda_opt_stack_shrink_loop_exit_0013:
 21334 0000FDFE 488B442410              	mov rax, qword[rsp + 2 * 8]
 21335 0000FE03 BF02000000              	mov rdi, 2
 21336 0000FE08 4829F8                  	sub rax, rdi
 21337 0000FE0B 4889C7                  	mov rdi, rax
 21338 0000FE0E 486BC008                	imul rax,8
 21339 0000FE12 4801C4                  	add rsp, rax
 21340 0000FE15 4889E0                  	mov rax, rsp
 21341 0000FE18 4989F8                  	mov r8, rdi
 21342 0000FE1B 4D6BC008                	imul r8, 8
 21343 0000FE1F 4C29C0                  	sub rax, r8
 21344 0000FE22 4989C2                  	mov r10, rax	; holds the original ret in the stack
 21345 0000FE25 4983C218                	add r10, 8*3
 21346 0000FE29 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 21347 0000FE2D 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 21348 0000FE30 4D6BC008                	imul r8,8
 21349 0000FE34 4C01C0                  	add rax, r8
 21350 0000FE37 4C8908                  	mov qword[rax] ,r9
 21351 0000FE3A 4D89D0                   	mov r8, r10
 21352 0000FE3D 4983C000                	add r8, 8 * 0
 21353 0000FE41 4D8B08                  	mov r9,qword[r8]
 21354 0000FE44 4D890CF8                	mov qword [r8 + rdi * 8], r9
 21355 0000FE48 4983EA18                	sub r10, 8*3
 21356 0000FE4C 48C744241002000000      	mov qword [rsp+2*8], 2
 21357 0000FE55 498B4208                	mov rax, qword[r10 + 1 * 8]
 21358 0000FE59 4889442408              	mov qword[rsp + 1*8] ,rax
 21359 0000FE5E 498B02                  	mov rax, qword[r10]
 21360 0000FE61 48890424                	mov qword[rsp], rax
 21361 0000FE65 C8000000                	enter 0, 0
 21362                                  	; preparing a tail-call
 21363 0000FE69 488B4528                	mov rax, PARAM(1)	; param strs
 21364 0000FE6D 50                      	push rax
 21365 0000FE6E 488B4520                	mov rax, PARAM(0)	; param str
 21366 0000FE72 50                      	push rax
 21367 0000FE73 6A02                    	push 2	; arg count
 21368 0000FE75 488B4510                	mov rax, ENV
 21369 0000FE79 488B00                  	mov rax, qword [rax + 8 * 0]
 21370 0000FE7C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 21371 0000FE7F 488B00                  	mov rax, qword [rax]
 21372 0000FE82 803804                  	cmp byte [rax], T_closure
 21373 0000FE85 0F859D6B0000            	jne L_error_non_closure
 21374 0000FE8B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21375 0000FE8E FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 21376 0000FE91 FF7500                  	push qword[rbp]
 21377 0000FE94 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 21378 0000FE99 48895D10                	mov qword[rbp + 8*2],rbx
 21379 0000FE9D 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 21380 0000FEA5 BF00000000              	mov rdi,0
 21381 0000FEAA EB00                    	jmp .L_tc_recycle_frame_loop_00cb
 21382                                  .L_tc_recycle_frame_loop_00cb:
 21383 0000FEAC 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 21384 0000FEB0 740F                    	je .L_tc_recycle_frame_done_00cb
 21385 0000FEB2 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 21386 0000FEB7 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 21387 0000FEBC 48FFC7                  	inc rdi
 21388 0000FEBF EBEB                    	jmp .L_tc_recycle_frame_loop_00cb
 21389                                  .L_tc_recycle_frame_done_00cb:
 21390 0000FEC1 4889EC                  	mov rsp, rbp	; point to last argument
 21391 0000FEC4 5D                      	pop rbp
 21392 0000FEC5 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21393 0000FEC8 C9                      	leave
 21394 0000FEC9 C22000                  	ret AND_KILL_FRAME(2)
 21395                                  .L_lambda_opt_end_0013:	; new closure is in rax
 21396 0000FECC C9                      	leave
 21397 0000FECD C21800                  	ret AND_KILL_FRAME(1)
 21398                                  .L_lambda_simple_end_0082:	; new closure is in rax
 21399 0000FED0 803804                  	cmp byte [rax], T_closure
 21400 0000FED3 0F854F6B0000            	jne L_error_non_closure
 21401 0000FED9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21402 0000FEDC FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 21403 0000FEDF FF7500                  	push qword[rbp]
 21404 0000FEE2 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 21405 0000FEE7 48895D10                	mov qword[rbp + 8*2],rbx
 21406 0000FEEB 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 21407 0000FEF3 BF00000000              	mov rdi,0
 21408 0000FEF8 EB00                    	jmp .L_tc_recycle_frame_loop_00cd
 21409                                  .L_tc_recycle_frame_loop_00cd:
 21410 0000FEFA 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 21411 0000FEFE 740F                    	je .L_tc_recycle_frame_done_00cd
 21412 0000FF00 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 21413 0000FF05 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 21414 0000FF0A 48FFC7                  	inc rdi
 21415 0000FF0D EBEB                    	jmp .L_tc_recycle_frame_loop_00cd
 21416                                  .L_tc_recycle_frame_done_00cd:
 21417 0000FF0F 4889EC                  	mov rsp, rbp	; point to last argument
 21418 0000FF12 5D                      	pop rbp
 21419 0000FF13 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21420 0000FF16 C9                      	leave
 21421 0000FF17 C21800                  	ret AND_KILL_FRAME(1)
 21422                                  .L_lambda_simple_end_0081:	; new closure is in rax
 21423 0000FF1A 803804                  	cmp byte [rax], T_closure
 21424 0000FF1D 0F85056B0000            	jne L_error_non_closure
 21425 0000FF23 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21426 0000FF26 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 21427 0000FF29 FF7500                  	push qword[rbp]
 21428 0000FF2C 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 21429 0000FF31 48895D10                	mov qword[rbp + 8*2],rbx
 21430 0000FF35 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 21431 0000FF3D BF00000000              	mov rdi,0
 21432 0000FF42 EB00                    	jmp .L_tc_recycle_frame_loop_00ce
 21433                                  .L_tc_recycle_frame_loop_00ce:
 21434 0000FF44 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 21435 0000FF48 740F                    	je .L_tc_recycle_frame_done_00ce
 21436 0000FF4A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 21437 0000FF4F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 21438 0000FF54 48FFC7                  	inc rdi
 21439 0000FF57 EBEB                    	jmp .L_tc_recycle_frame_loop_00ce
 21440                                  .L_tc_recycle_frame_done_00ce:
 21441 0000FF59 4889EC                  	mov rsp, rbp	; point to last argument
 21442 0000FF5C 5D                      	pop rbp
 21443 0000FF5D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21444 0000FF60 C9                      	leave
 21445 0000FF61 C21800                  	ret AND_KILL_FRAME(1)
 21446                                  .L_lambda_simple_end_007d:	; new closure is in rax
 21447 0000FF64 803804                  	cmp byte [rax], T_closure
 21448 0000FF67 0F85BB6A0000            	jne L_error_non_closure
 21449 0000FF6D FF7001                  	push SOB_CLOSURE_ENV(rax)
 21450 0000FF70 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 21451 0000FF73 FF7500                  	push qword[rbp]
 21452 0000FF76 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 21453 0000FF7B 48895D10                	mov qword[rbp + 8*2],rbx
 21454 0000FF7F 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 21455 0000FF87 BF00000000              	mov rdi,0
 21456 0000FF8C EB00                    	jmp .L_tc_recycle_frame_loop_00cf
 21457                                  .L_tc_recycle_frame_loop_00cf:
 21458 0000FF8E 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 21459 0000FF92 740F                    	je .L_tc_recycle_frame_done_00cf
 21460 0000FF94 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 21461 0000FF99 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 21462 0000FF9E 48FFC7                  	inc rdi
 21463 0000FFA1 EBEB                    	jmp .L_tc_recycle_frame_loop_00cf
 21464                                  .L_tc_recycle_frame_done_00cf:
 21465 0000FFA3 4889EC                  	mov rsp, rbp	; point to last argument
 21466 0000FFA6 5D                      	pop rbp
 21467 0000FFA7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21468 0000FFAA C9                      	leave
 21469 0000FFAB C21800                  	ret AND_KILL_FRAME(1)
 21470                                  .L_lambda_simple_end_007c:	; new closure is in rax
 21471 0000FFAE 50                      	push rax
 21472 0000FFAF 6A01                    	push 1	; arg count
 21473 0000FFB1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21474 0000FFB6 E8166B0000              	call malloc
 21475 0000FFBB 50                      	push rax
 21476 0000FFBC BF00000000              	mov rdi, 8 * 0	; new rib
 21477 0000FFC1 E80B6B0000              	call malloc
 21478 0000FFC6 50                      	push rax
 21479 0000FFC7 BF08000000              	mov rdi, 8 * 1	; extended env
 21480 0000FFCC E8006B0000              	call malloc
 21481 0000FFD1 488B7D10                	mov rdi, ENV
 21482 0000FFD5 BE00000000              	mov rsi, 0
 21483 0000FFDA BA01000000              	mov rdx, 1
 21484                                  .L_lambda_simple_env_loop_0084:	; ext_env[i + 1] <-- env[i]
 21485 0000FFDF 4883FE00                	cmp rsi, 0
 21486 0000FFE3 7410                    	je .L_lambda_simple_env_end_0084
 21487 0000FFE5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21488 0000FFE9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21489 0000FFED 48FFC6                  	inc rsi
 21490 0000FFF0 48FFC2                  	inc rdx
 21491 0000FFF3 EBEA                    	jmp .L_lambda_simple_env_loop_0084
 21492                                  .L_lambda_simple_env_end_0084:
 21493 0000FFF5 5B                      	pop rbx
 21494 0000FFF6 BE00000000              	mov rsi, 0
 21495                                  .L_lambda_simple_params_loop_0084:	; copy params
 21496 0000FFFB 4883FE00                	cmp rsi, 0
 21497 0000FFFF 740E                    	je .L_lambda_simple_params_end_0084
 21498 00010001 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21499 00010006 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21500 0001000A 48FFC6                  	inc rsi
 21501 0001000D EBEC                    	jmp .L_lambda_simple_params_loop_0084
 21502                                  .L_lambda_simple_params_end_0084:
 21503 0001000F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21504 00010012 4889C3                  	mov rbx, rax
 21505 00010015 58                      	pop rax
 21506 00010016 C60004                  	mov byte [rax], T_closure
 21507 00010019 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21508 0001001D 48C74009[2A000100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0084
 21509 00010025 E98D000000              	jmp .L_lambda_simple_end_0084
 21510                                  .L_lambda_simple_code_0084:	; lambda-simple body
 21511 0001002A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21512 00010030 740B                    	je .L_lambda_simple_arity_check_ok_0084
 21513 00010032 FF742410                	push qword [rsp + 8 * 2]
 21514 00010036 6A01                    	push 1
 21515 00010038 E94D6A0000              	jmp L_error_incorrect_arity_simple
 21516                                  .L_lambda_simple_arity_check_ok_0084:
 21517 0001003D C8000000                	enter 0, 0
 21518                                  	; preparing a non-tail-call
 21519 00010041 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 21520 00010049 803805                  	cmp byte [rax], T_undefined
 21521 0001004C 0F8452690000            	je L_error_fvar_undefined
 21522 00010052 50                      	push rax
 21523 00010053 6A01                    	push 1	; arg count
 21524 00010055 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21525 00010059 803804                  	cmp byte [rax], T_closure
 21526 0001005C 0F85C6690000            	jne L_error_non_closure
 21527 00010062 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21528 00010065 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21529 00010068 48890425[BC160000]      	mov qword [free_var_135], rax
 21530 00010070 48B8-                   	mov rax, sob_void
 21530 00010072 [0000000000000000] 
 21531                                  
 21532                                  	; preparing a non-tail-call
 21533 0001007A 488B0425[49120000]      	mov rax, qword [free_var_68]	; free var char-ci=?
 21534 00010082 803805                  	cmp byte [rax], T_undefined
 21535 00010085 0F8419690000            	je L_error_fvar_undefined
 21536 0001008B 50                      	push rax
 21537 0001008C 6A01                    	push 1	; arg count
 21538 0001008E 488B4520                	mov rax, PARAM(0)	; param make-string=?
 21539 00010092 803804                  	cmp byte [rax], T_closure
 21540 00010095 0F858D690000            	jne L_error_non_closure
 21541 0001009B FF7001                  	push SOB_CLOSURE_ENV(rax)
 21542 0001009E FF5009                  	call SOB_CLOSURE_CODE(rax)
 21543 000100A1 48890425[F0150000]      	mov qword [free_var_123], rax
 21544 000100A9 48B8-                   	mov rax, sob_void
 21544 000100AB [0000000000000000] 
 21545 000100B3 C9                      	leave
 21546 000100B4 C21800                  	ret AND_KILL_FRAME(1)
 21547                                  .L_lambda_simple_end_0084:	; new closure is in rax
 21548 000100B7 803804                  	cmp byte [rax], T_closure
 21549 000100BA 0F8568690000            	jne L_error_non_closure
 21550 000100C0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21551 000100C3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21552                                  
 21553 000100C6 4889C7                  	mov rdi, rax
 21554 000100C9 E8586C0000              	call print_sexpr_if_not_void
 21555 000100CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21556 000100D3 E8F9690000              	call malloc
 21557 000100D8 50                      	push rax
 21558 000100D9 BF00000000              	mov rdi, 8 * 0	; new rib
 21559 000100DE E8EE690000              	call malloc
 21560 000100E3 50                      	push rax
 21561 000100E4 BF08000000              	mov rdi, 8 * 1	; extended env
 21562 000100E9 E8E3690000              	call malloc
 21563 000100EE 488B7D10                	mov rdi, ENV
 21564 000100F2 BE00000000              	mov rsi, 0
 21565 000100F7 BA01000000              	mov rdx, 1
 21566                                  .L_lambda_simple_env_loop_0085:	; ext_env[i + 1] <-- env[i]
 21567 000100FC 4883FE00                	cmp rsi, 0
 21568 00010100 7410                    	je .L_lambda_simple_env_end_0085
 21569 00010102 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21570 00010106 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21571 0001010A 48FFC6                  	inc rsi
 21572 0001010D 48FFC2                  	inc rdx
 21573 00010110 EBEA                    	jmp .L_lambda_simple_env_loop_0085
 21574                                  .L_lambda_simple_env_end_0085:
 21575 00010112 5B                      	pop rbx
 21576 00010113 BE00000000              	mov rsi, 0
 21577                                  .L_lambda_simple_params_loop_0085:	; copy params
 21578 00010118 4883FE00                	cmp rsi, 0
 21579 0001011C 740E                    	je .L_lambda_simple_params_end_0085
 21580 0001011E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21581 00010123 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21582 00010127 48FFC6                  	inc rsi
 21583 0001012A EBEC                    	jmp .L_lambda_simple_params_loop_0085
 21584                                  .L_lambda_simple_params_end_0085:
 21585 0001012C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21586 0001012F 4889C3                  	mov rbx, rax
 21587 00010132 58                      	pop rax
 21588 00010133 C60004                  	mov byte [rax], T_closure
 21589 00010136 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21590 0001013A 48C74009[47010100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0085
 21591 00010142 E90E010000              	jmp .L_lambda_simple_end_0085
 21592                                  .L_lambda_simple_code_0085:	; lambda-simple body
 21593 00010147 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21594 0001014D 740B                    	je .L_lambda_simple_arity_check_ok_0085
 21595 0001014F FF742410                	push qword [rsp + 8 * 2]
 21596 00010153 6A01                    	push 1
 21597 00010155 E930690000              	jmp L_error_incorrect_arity_simple
 21598                                  .L_lambda_simple_arity_check_ok_0085:
 21599 0001015A C8000000                	enter 0, 0
 21600                                  	; preparing a non-tail-call
 21601 0001015E 488B4520                	mov rax, PARAM(0)	; param e
 21602 00010162 50                      	push rax
 21603 00010163 6A01                    	push 1	; arg count
 21604 00010165 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21605 0001016D 803805                  	cmp byte [rax], T_undefined
 21606 00010170 0F842E680000            	je L_error_fvar_undefined
 21607 00010176 803804                  	cmp byte [rax], T_closure
 21608 00010179 0F85A9680000            	jne L_error_non_closure
 21609 0001017F FF7001                  	push SOB_CLOSURE_ENV(rax)
 21610 00010182 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21611 00010185 483D[02000000]          	cmp rax, sob_boolean_false
 21612 0001018B 0F85C0000000            	jne .L_or_end_0011
 21613                                  	; preparing a non-tail-call
 21614 00010191 488B4520                	mov rax, PARAM(0)	; param e
 21615 00010195 50                      	push rax
 21616 00010196 6A01                    	push 1	; arg count
 21617 00010198 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 21618 000101A0 803805                  	cmp byte [rax], T_undefined
 21619 000101A3 0F84FB670000            	je L_error_fvar_undefined
 21620 000101A9 803804                  	cmp byte [rax], T_closure
 21621 000101AC 0F8576680000            	jne L_error_non_closure
 21622 000101B2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21623 000101B5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21624 000101B8 483D[02000000]          	cmp rax, sob_boolean_false
 21625 000101BE 0F8483000000            	je .L_if_else_0068
 21626                                  	; preparing a tail-call
 21627                                  	; preparing a non-tail-call
 21628 000101C4 488B4520                	mov rax, PARAM(0)	; param e
 21629 000101C8 50                      	push rax
 21630 000101C9 6A01                    	push 1	; arg count
 21631 000101CB 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21632 000101D3 803805                  	cmp byte [rax], T_undefined
 21633 000101D6 0F84C8670000            	je L_error_fvar_undefined
 21634 000101DC 803804                  	cmp byte [rax], T_closure
 21635 000101DF 0F8543680000            	jne L_error_non_closure
 21636 000101E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21637 000101E8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21638 000101EB 50                      	push rax
 21639 000101EC 6A01                    	push 1	; arg count
 21640 000101EE 488B0425[25140000]      	mov rax, qword [free_var_96]	; free var list?
 21641 000101F6 803805                  	cmp byte [rax], T_undefined
 21642 000101F9 0F84A5670000            	je L_error_fvar_undefined
 21643 000101FF 803804                  	cmp byte [rax], T_closure
 21644 00010202 0F8520680000            	jne L_error_non_closure
 21645 00010208 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21646 0001020B FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 21647 0001020E FF7500                  	push qword[rbp]
 21648 00010211 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 21649 00010216 48895D10                	mov qword[rbp + 8*2],rbx
 21650 0001021A 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 21651 00010222 BF00000000              	mov rdi,0
 21652 00010227 EB00                    	jmp .L_tc_recycle_frame_loop_00d0
 21653                                  .L_tc_recycle_frame_loop_00d0:
 21654 00010229 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 21655 0001022D 740F                    	je .L_tc_recycle_frame_done_00d0
 21656 0001022F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 21657 00010234 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 21658 00010239 48FFC7                  	inc rdi
 21659 0001023C EBEB                    	jmp .L_tc_recycle_frame_loop_00d0
 21660                                  .L_tc_recycle_frame_done_00d0:
 21661 0001023E 4889EC                  	mov rsp, rbp	; point to last argument
 21662 00010241 5D                      	pop rbp
 21663 00010242 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21664 00010245 EB0A                    	jmp .L_if_end_0068
 21665                                  .L_if_else_0068:
 21666 00010247 48B8-                   	mov rax, L_constants + 2
 21666 00010249 [0200000000000000] 
 21667                                  .L_if_end_0068:
 21668                                  .L_or_end_0011:
 21669 00010251 C9                      	leave
 21670 00010252 C21800                  	ret AND_KILL_FRAME(1)
 21671                                  .L_lambda_simple_end_0085:	; new closure is in rax
 21672 00010255 48890425[25140000]      	mov qword [free_var_96], rax
 21673 0001025D 48B8-                   	mov rax, sob_void
 21673 0001025F [0000000000000000] 
 21674                                  
 21675 00010267 4889C7                  	mov rdi, rax
 21676 0001026A E8B76A0000              	call print_sexpr_if_not_void
 21677                                  	; preparing a non-tail-call
 21678 0001026F 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 21679 00010277 803805                  	cmp byte [rax], T_undefined
 21680 0001027A 0F8424670000            	je L_error_fvar_undefined
 21681 00010280 50                      	push rax
 21682 00010281 6A01                    	push 1	; arg count
 21683 00010283 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21684 00010288 E844680000              	call malloc
 21685 0001028D 50                      	push rax
 21686 0001028E BF00000000              	mov rdi, 8 * 0	; new rib
 21687 00010293 E839680000              	call malloc
 21688 00010298 50                      	push rax
 21689 00010299 BF08000000              	mov rdi, 8 * 1	; extended env
 21690 0001029E E82E680000              	call malloc
 21691 000102A3 488B7D10                	mov rdi, ENV
 21692 000102A7 BE00000000              	mov rsi, 0
 21693 000102AC BA01000000              	mov rdx, 1
 21694                                  .L_lambda_simple_env_loop_0086:	; ext_env[i + 1] <-- env[i]
 21695 000102B1 4883FE00                	cmp rsi, 0
 21696 000102B5 7410                    	je .L_lambda_simple_env_end_0086
 21697 000102B7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21698 000102BB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21699 000102BF 48FFC6                  	inc rsi
 21700 000102C2 48FFC2                  	inc rdx
 21701 000102C5 EBEA                    	jmp .L_lambda_simple_env_loop_0086
 21702                                  .L_lambda_simple_env_end_0086:
 21703 000102C7 5B                      	pop rbx
 21704 000102C8 BE00000000              	mov rsi, 0
 21705                                  .L_lambda_simple_params_loop_0086:	; copy params
 21706 000102CD 4883FE00                	cmp rsi, 0
 21707 000102D1 740E                    	je .L_lambda_simple_params_end_0086
 21708 000102D3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21709 000102D8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21710 000102DC 48FFC6                  	inc rsi
 21711 000102DF EBEC                    	jmp .L_lambda_simple_params_loop_0086
 21712                                  .L_lambda_simple_params_end_0086:
 21713 000102E1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21714 000102E4 4889C3                  	mov rbx, rax
 21715 000102E7 58                      	pop rax
 21716 000102E8 C60004                  	mov byte [rax], T_closure
 21717 000102EB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21718 000102EF 48C74009[FC020100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0086
 21719 000102F7 E97A060000              	jmp .L_lambda_simple_end_0086
 21720                                  .L_lambda_simple_code_0086:	; lambda-simple body
 21721 000102FC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21722 00010302 740B                    	je .L_lambda_simple_arity_check_ok_0086
 21723 00010304 FF742410                	push qword [rsp + 8 * 2]
 21724 00010308 6A01                    	push 1
 21725 0001030A E97B670000              	jmp L_error_incorrect_arity_simple
 21726                                  .L_lambda_simple_arity_check_ok_0086:
 21727 0001030F C8000000                	enter 0, 0
 21728 00010313 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21729 00010318 E8B4670000              	call malloc
 21730 0001031D 50                      	push rax
 21731 0001031E BF08000000              	mov rdi, 8 * 1	; new rib
 21732 00010323 E8A9670000              	call malloc
 21733 00010328 50                      	push rax
 21734 00010329 BF10000000              	mov rdi, 8 * 2	; extended env
 21735 0001032E E89E670000              	call malloc
 21736 00010333 488B7D10                	mov rdi, ENV
 21737 00010337 BE00000000              	mov rsi, 0
 21738 0001033C BA01000000              	mov rdx, 1
 21739                                  .L_lambda_opt_env_loop_0014:	; ext_env[i + 1] <-- env[i]
 21740 00010341 4883FE01                	cmp rsi, 1
 21741 00010345 7410                    	je .L_lambda_opt_env_end_0014
 21742 00010347 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21743 0001034B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21744 0001034F 48FFC6                  	inc rsi
 21745 00010352 48FFC2                  	inc rdx
 21746 00010355 EBEA                    	jmp .L_lambda_opt_env_loop_0014
 21747                                  .L_lambda_opt_env_end_0014:
 21748 00010357 5B                      	pop rbx
 21749 00010358 BE00000000              	mov rsi, 0
 21750                                  .L_lambda_opt_params_loop_0014:	; copy params
 21751 0001035D 4883FE01                	cmp rsi, 1
 21752 00010361 740E                    	je .L_lambda_opt_params_end_0014
 21753 00010363 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21754 00010368 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21755 0001036C 48FFC6                  	inc rsi
 21756 0001036F EBEC                    	jmp .L_lambda_opt_params_loop_0014
 21757                                  .L_lambda_opt_params_end_0014:
 21758 00010371 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21759 00010374 4889C3                  	mov rbx, rax
 21760 00010377 58                      	pop rax
 21761 00010378 C60004                  	mov byte [rax], T_closure
 21762 0001037B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21763 0001037F 48C74009[8C030100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0014
 21764 00010387 E9E6050000              	jmp .L_lambda_opt_end_0014
 21765                                  .L_lambda_opt_code_0014:	; lambda-opt body
 21766 0001038C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21767 00010392 7411                    	je .L_lambda_opt_arity_check_exact_0014
 21768 00010394 0F8FBE020000            	jg .L_lambda_opt_arity_check_more_0014
 21769 0001039A FF742410                	push qword [rsp + 8 * 2]
 21770 0001039E 6A01                    	push 1
 21771 000103A0 E9F9660000              	jmp L_error_incorrect_arity_opt
 21772                                  .L_lambda_opt_arity_check_exact_0014:
 21773 000103A5 4883EC08                	sub rsp, 8
 21774 000103A9 488B442408              	mov rax, qword[rsp + 8 *1]
 21775 000103AE 48890424                	mov qword[rsp], rax  
 21776 000103B2 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 21777 000103B7 4889442408              	mov qword[rsp + 8 * 1], rax
 21778 000103BC B802000000              	mov rax, 2
 21779 000103C1 4889442410              	mov qword[rsp + 8 *2], rax
 21780 000103C6 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 21781 000103CB 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 21782 000103D0 48B8-                   	mov rax, sob_nil
 21782 000103D2 [0100000000000000] 
 21783 000103DA 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 21784 000103DF C8000000                	enter 0, 0
 21785                                  	; preparing a tail-call
 21786                                  	; preparing a non-tail-call
 21787 000103E3 488B4528                	mov rax, PARAM(1)	; param xs
 21788 000103E7 50                      	push rax
 21789 000103E8 6A01                    	push 1	; arg count
 21790 000103EA 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21791 000103F2 803805                  	cmp byte [rax], T_undefined
 21792 000103F5 0F84A9650000            	je L_error_fvar_undefined
 21793 000103FB 803804                  	cmp byte [rax], T_closure
 21794 000103FE 0F8524660000            	jne L_error_non_closure
 21795 00010404 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21796 00010407 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21797 0001040A 483D[02000000]          	cmp rax, sob_boolean_false
 21798 00010410 740F                    	je .L_if_else_006e
 21799 00010412 48B8-                   	mov rax, L_constants + 0
 21799 00010414 [0000000000000000] 
 21800 0001041C E9EE000000              	jmp .L_if_end_006e
 21801                                  .L_if_else_006e:
 21802                                  	; preparing a non-tail-call
 21803 00010421 488B4528                	mov rax, PARAM(1)	; param xs
 21804 00010425 50                      	push rax
 21805 00010426 6A01                    	push 1	; arg count
 21806 00010428 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 21807 00010430 803805                  	cmp byte [rax], T_undefined
 21808 00010433 0F846B650000            	je L_error_fvar_undefined
 21809 00010439 803804                  	cmp byte [rax], T_closure
 21810 0001043C 0F85E6650000            	jne L_error_non_closure
 21811 00010442 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21812 00010445 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21813 00010448 483D[02000000]          	cmp rax, sob_boolean_false
 21814 0001044E 744C                    	je .L_if_else_006c
 21815                                  	; preparing a non-tail-call
 21816                                  	; preparing a non-tail-call
 21817 00010450 488B4528                	mov rax, PARAM(1)	; param xs
 21818 00010454 50                      	push rax
 21819 00010455 6A01                    	push 1	; arg count
 21820 00010457 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 21821 0001045F 803805                  	cmp byte [rax], T_undefined
 21822 00010462 0F843C650000            	je L_error_fvar_undefined
 21823 00010468 803804                  	cmp byte [rax], T_closure
 21824 0001046B 0F85B7650000            	jne L_error_non_closure
 21825 00010471 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21826 00010474 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21827 00010477 50                      	push rax
 21828 00010478 6A01                    	push 1	; arg count
 21829 0001047A 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 21830 00010482 803805                  	cmp byte [rax], T_undefined
 21831 00010485 0F8419650000            	je L_error_fvar_undefined
 21832 0001048B 803804                  	cmp byte [rax], T_closure
 21833 0001048E 0F8594650000            	jne L_error_non_closure
 21834 00010494 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21835 00010497 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21836 0001049A EB0A                    	jmp .L_if_end_006c
 21837                                  .L_if_else_006c:
 21838 0001049C 48B8-                   	mov rax, L_constants + 2
 21838 0001049E [0200000000000000] 
 21839                                  .L_if_end_006c:
 21840 000104A6 483D[02000000]          	cmp rax, sob_boolean_false
 21841 000104AC 7429                    	je .L_if_else_006d
 21842                                  	; preparing a non-tail-call
 21843 000104AE 488B4528                	mov rax, PARAM(1)	; param xs
 21844 000104B2 50                      	push rax
 21845 000104B3 6A01                    	push 1	; arg count
 21846 000104B5 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 21847 000104BD 803805                  	cmp byte [rax], T_undefined
 21848 000104C0 0F84DE640000            	je L_error_fvar_undefined
 21849 000104C6 803804                  	cmp byte [rax], T_closure
 21850 000104C9 0F8559650000            	jne L_error_non_closure
 21851 000104CF FF7001                  	push SOB_CLOSURE_ENV(rax)
 21852 000104D2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 21853 000104D5 EB38                    	jmp .L_if_end_006d
 21854                                  .L_if_else_006d:
 21855                                  	; preparing a non-tail-call
 21856 000104D7 48B8-                   	mov rax, L_constants + 2955
 21856 000104D9 [8B0B000000000000] 
 21857 000104E1 50                      	push rax
 21858 000104E2 48B8-                   	mov rax, L_constants + 2946
 21858 000104E4 [820B000000000000] 
 21859 000104EC 50                      	push rax
 21860 000104ED 6A02                    	push 2	; arg count
 21861 000104EF 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 21862 000104F7 803805                  	cmp byte [rax], T_undefined
 21863 000104FA 0F84A4640000            	je L_error_fvar_undefined
 21864 00010500 803804                  	cmp byte [rax], T_closure
 21865 00010503 0F851F650000            	jne L_error_non_closure
 21866 00010509 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21867 0001050C FF5009                  	call SOB_CLOSURE_CODE(rax)
 21868                                  .L_if_end_006d:
 21869                                  .L_if_end_006e:
 21870 0001050F 50                      	push rax
 21871 00010510 6A01                    	push 1	; arg count
 21872 00010512 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 21873 00010517 E8B5650000              	call malloc
 21874 0001051C 50                      	push rax
 21875 0001051D BF10000000              	mov rdi, 8 * 2	; new rib
 21876 00010522 E8AA650000              	call malloc
 21877 00010527 50                      	push rax
 21878 00010528 BF18000000              	mov rdi, 8 * 3	; extended env
 21879 0001052D E89F650000              	call malloc
 21880 00010532 488B7D10                	mov rdi, ENV
 21881 00010536 BE00000000              	mov rsi, 0
 21882 0001053B BA01000000              	mov rdx, 1
 21883                                  .L_lambda_simple_env_loop_0088:	; ext_env[i + 1] <-- env[i]
 21884 00010540 4883FE02                	cmp rsi, 2
 21885 00010544 7410                    	je .L_lambda_simple_env_end_0088
 21886 00010546 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 21887 0001054A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 21888 0001054E 48FFC6                  	inc rsi
 21889 00010551 48FFC2                  	inc rdx
 21890 00010554 EBEA                    	jmp .L_lambda_simple_env_loop_0088
 21891                                  .L_lambda_simple_env_end_0088:
 21892 00010556 5B                      	pop rbx
 21893 00010557 BE00000000              	mov rsi, 0
 21894                                  .L_lambda_simple_params_loop_0088:	; copy params
 21895 0001055C 4883FE02                	cmp rsi, 2
 21896 00010560 740E                    	je .L_lambda_simple_params_end_0088
 21897 00010562 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 21898 00010567 488914F3                	mov qword [rbx + 8 * rsi], rdx
 21899 0001056B 48FFC6                  	inc rsi
 21900 0001056E EBEC                    	jmp .L_lambda_simple_params_loop_0088
 21901                                  .L_lambda_simple_params_end_0088:
 21902 00010570 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 21903 00010573 4889C3                  	mov rbx, rax
 21904 00010576 58                      	pop rax
 21905 00010577 C60004                  	mov byte [rax], T_closure
 21906 0001057A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 21907 0001057E 48C74009[8B050100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0088
 21908 00010586 E97E000000              	jmp .L_lambda_simple_end_0088
 21909                                  .L_lambda_simple_code_0088:	; lambda-simple body
 21910 0001058B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 21911 00010591 740B                    	je .L_lambda_simple_arity_check_ok_0088
 21912 00010593 FF742410                	push qword [rsp + 8 * 2]
 21913 00010597 6A01                    	push 1
 21914 00010599 E9EC640000              	jmp L_error_incorrect_arity_simple
 21915                                  .L_lambda_simple_arity_check_ok_0088:
 21916 0001059E C8000000                	enter 0, 0
 21917                                  	; preparing a tail-call
 21918 000105A2 488B4520                	mov rax, PARAM(0)	; param x
 21919 000105A6 50                      	push rax
 21920 000105A7 488B4510                	mov rax, ENV
 21921 000105AB 488B00                  	mov rax, qword [rax + 8 * 0]
 21922 000105AE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 21923 000105B1 50                      	push rax
 21924 000105B2 6A02                    	push 2	; arg count
 21925 000105B4 488B4510                	mov rax, ENV
 21926 000105B8 488B4008                	mov rax, qword [rax + 8 * 1]
 21927 000105BC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 21928 000105BF 803804                  	cmp byte [rax], T_closure
 21929 000105C2 0F8560640000            	jne L_error_non_closure
 21930 000105C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21931 000105CB FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 21932 000105CE FF7500                  	push qword[rbp]
 21933 000105D1 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 21934 000105D6 48895D10                	mov qword[rbp + 8*2],rbx
 21935 000105DA 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 21936 000105E2 BF00000000              	mov rdi,0
 21937 000105E7 EB00                    	jmp .L_tc_recycle_frame_loop_00d3
 21938                                  .L_tc_recycle_frame_loop_00d3:
 21939 000105E9 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 21940 000105ED 740F                    	je .L_tc_recycle_frame_done_00d3
 21941 000105EF 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 21942 000105F4 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 21943 000105F9 48FFC7                  	inc rdi
 21944 000105FC EBEB                    	jmp .L_tc_recycle_frame_loop_00d3
 21945                                  .L_tc_recycle_frame_done_00d3:
 21946 000105FE 4889EC                  	mov rsp, rbp	; point to last argument
 21947 00010601 5D                      	pop rbp
 21948 00010602 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21949 00010605 C9                      	leave
 21950 00010606 C21800                  	ret AND_KILL_FRAME(1)
 21951                                  .L_lambda_simple_end_0088:	; new closure is in rax
 21952 00010609 803804                  	cmp byte [rax], T_closure
 21953 0001060C 0F8516640000            	jne L_error_non_closure
 21954 00010612 FF7001                  	push SOB_CLOSURE_ENV(rax)
 21955 00010615 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 21956 00010618 FF7500                  	push qword[rbp]
 21957 0001061B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 21958 00010620 48895D10                	mov qword[rbp + 8*2],rbx
 21959 00010624 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 21960 0001062C BF00000000              	mov rdi,0
 21961 00010631 EB00                    	jmp .L_tc_recycle_frame_loop_00d4
 21962                                  .L_tc_recycle_frame_loop_00d4:
 21963 00010633 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 21964 00010637 740F                    	je .L_tc_recycle_frame_done_00d4
 21965 00010639 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 21966 0001063E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 21967 00010643 48FFC7                  	inc rdi
 21968 00010646 EBEB                    	jmp .L_tc_recycle_frame_loop_00d4
 21969                                  .L_tc_recycle_frame_done_00d4:
 21970 00010648 4889EC                  	mov rsp, rbp	; point to last argument
 21971 0001064B 5D                      	pop rbp
 21972 0001064C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 21973 0001064F C9                      	leave
 21974 00010650 C22000                  	ret AND_KILL_FRAME(2)
 21975 00010653 E91A030000              	jmp .L_lambda_opt_end_0014	; new closure is in rax
 21976                                  .L_lambda_opt_arity_check_more_0014:
 21977 00010658 488B442410              	mov rax, qword[rsp + 2 * 8]
 21978 0001065D 4889C7                  	mov rdi, rax
 21979 00010660 49B9-                   	mov r9, sob_nil
 21979 00010662 [0100000000000000] 
 21980 0001066A 4C8B442410              	mov r8, qword[rsp+2*8]
 21981                                  .L_lambda_opt_stack_shrink_loop_0014:
 21982 0001066F 4983F801                	cmp r8, 1
 21983 00010673 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0014
 21984 00010675 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 21985 0001067A BF11000000              	mov rdi, 1+8+8	;for pair
 21986 0001067F E84D640000              	call malloc	 ;to create the pair in the stack
 21987 00010684 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 21988 00010687 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 21989 0001068B 4C894809                 	mov qword[rax+1+8],r9
 21990 0001068F 4989C1                  	mov r9 , rax	 ; for the recursion 
 21991 00010692 49FFC8                  	dec r8
 21992 00010695 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0014
 21993                                  .L_lambda_opt_stack_shrink_loop_exit_0014:
 21994 00010697 488B442410              	mov rax, qword[rsp + 2 * 8]
 21995 0001069C BF02000000              	mov rdi, 2
 21996 000106A1 4829F8                  	sub rax, rdi
 21997 000106A4 4889C7                  	mov rdi, rax
 21998 000106A7 486BC008                	imul rax,8
 21999 000106AB 4801C4                  	add rsp, rax
 22000 000106AE 4889E0                  	mov rax, rsp
 22001 000106B1 4989F8                  	mov r8, rdi
 22002 000106B4 4D6BC008                	imul r8, 8
 22003 000106B8 4C29C0                  	sub rax, r8
 22004 000106BB 4989C2                  	mov r10, rax	; holds the original ret in the stack
 22005 000106BE 4983C218                	add r10, 8*3
 22006 000106C2 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 22007 000106C6 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 22008 000106C9 4D6BC008                	imul r8,8
 22009 000106CD 4C01C0                  	add rax, r8
 22010 000106D0 4C8908                  	mov qword[rax] ,r9
 22011 000106D3 4D89D0                   	mov r8, r10
 22012 000106D6 4983C000                	add r8, 8 * 0
 22013 000106DA 4D8B08                  	mov r9,qword[r8]
 22014 000106DD 4D890CF8                	mov qword [r8 + rdi * 8], r9
 22015 000106E1 4983EA18                	sub r10, 8*3
 22016 000106E5 48C744241002000000      	mov qword [rsp+2*8], 2
 22017 000106EE 498B4208                	mov rax, qword[r10 + 1 * 8]
 22018 000106F2 4889442408              	mov qword[rsp + 1*8] ,rax
 22019 000106F7 498B02                  	mov rax, qword[r10]
 22020 000106FA 48890424                	mov qword[rsp], rax
 22021 000106FE C8000000                	enter 0, 0
 22022                                  	; preparing a tail-call
 22023                                  	; preparing a non-tail-call
 22024 00010702 488B4528                	mov rax, PARAM(1)	; param xs
 22025 00010706 50                      	push rax
 22026 00010707 6A01                    	push 1	; arg count
 22027 00010709 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22028 00010711 803805                  	cmp byte [rax], T_undefined
 22029 00010714 0F848A620000            	je L_error_fvar_undefined
 22030 0001071A 803804                  	cmp byte [rax], T_closure
 22031 0001071D 0F8505630000            	jne L_error_non_closure
 22032 00010723 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22033 00010726 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22034 00010729 483D[02000000]          	cmp rax, sob_boolean_false
 22035 0001072F 740F                    	je .L_if_else_006b
 22036 00010731 48B8-                   	mov rax, L_constants + 0
 22036 00010733 [0000000000000000] 
 22037 0001073B E9EE000000              	jmp .L_if_end_006b
 22038                                  .L_if_else_006b:
 22039                                  	; preparing a non-tail-call
 22040 00010740 488B4528                	mov rax, PARAM(1)	; param xs
 22041 00010744 50                      	push rax
 22042 00010745 6A01                    	push 1	; arg count
 22043 00010747 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 22044 0001074F 803805                  	cmp byte [rax], T_undefined
 22045 00010752 0F844C620000            	je L_error_fvar_undefined
 22046 00010758 803804                  	cmp byte [rax], T_closure
 22047 0001075B 0F85C7620000            	jne L_error_non_closure
 22048 00010761 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22049 00010764 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22050 00010767 483D[02000000]          	cmp rax, sob_boolean_false
 22051 0001076D 744C                    	je .L_if_else_0069
 22052                                  	; preparing a non-tail-call
 22053                                  	; preparing a non-tail-call
 22054 0001076F 488B4528                	mov rax, PARAM(1)	; param xs
 22055 00010773 50                      	push rax
 22056 00010774 6A01                    	push 1	; arg count
 22057 00010776 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 22058 0001077E 803805                  	cmp byte [rax], T_undefined
 22059 00010781 0F841D620000            	je L_error_fvar_undefined
 22060 00010787 803804                  	cmp byte [rax], T_closure
 22061 0001078A 0F8598620000            	jne L_error_non_closure
 22062 00010790 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22063 00010793 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22064 00010796 50                      	push rax
 22065 00010797 6A01                    	push 1	; arg count
 22066 00010799 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22067 000107A1 803805                  	cmp byte [rax], T_undefined
 22068 000107A4 0F84FA610000            	je L_error_fvar_undefined
 22069 000107AA 803804                  	cmp byte [rax], T_closure
 22070 000107AD 0F8575620000            	jne L_error_non_closure
 22071 000107B3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22072 000107B6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22073 000107B9 EB0A                    	jmp .L_if_end_0069
 22074                                  .L_if_else_0069:
 22075 000107BB 48B8-                   	mov rax, L_constants + 2
 22075 000107BD [0200000000000000] 
 22076                                  .L_if_end_0069:
 22077 000107C5 483D[02000000]          	cmp rax, sob_boolean_false
 22078 000107CB 7429                    	je .L_if_else_006a
 22079                                  	; preparing a non-tail-call
 22080 000107CD 488B4528                	mov rax, PARAM(1)	; param xs
 22081 000107D1 50                      	push rax
 22082 000107D2 6A01                    	push 1	; arg count
 22083 000107D4 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 22084 000107DC 803805                  	cmp byte [rax], T_undefined
 22085 000107DF 0F84BF610000            	je L_error_fvar_undefined
 22086 000107E5 803804                  	cmp byte [rax], T_closure
 22087 000107E8 0F853A620000            	jne L_error_non_closure
 22088 000107EE FF7001                  	push SOB_CLOSURE_ENV(rax)
 22089 000107F1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22090 000107F4 EB38                    	jmp .L_if_end_006a
 22091                                  .L_if_else_006a:
 22092                                  	; preparing a non-tail-call
 22093 000107F6 48B8-                   	mov rax, L_constants + 2955
 22093 000107F8 [8B0B000000000000] 
 22094 00010800 50                      	push rax
 22095 00010801 48B8-                   	mov rax, L_constants + 2946
 22095 00010803 [820B000000000000] 
 22096 0001080B 50                      	push rax
 22097 0001080C 6A02                    	push 2	; arg count
 22098 0001080E 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 22099 00010816 803805                  	cmp byte [rax], T_undefined
 22100 00010819 0F8485610000            	je L_error_fvar_undefined
 22101 0001081F 803804                  	cmp byte [rax], T_closure
 22102 00010822 0F8500620000            	jne L_error_non_closure
 22103 00010828 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22104 0001082B FF5009                  	call SOB_CLOSURE_CODE(rax)
 22105                                  .L_if_end_006a:
 22106                                  .L_if_end_006b:
 22107 0001082E 50                      	push rax
 22108 0001082F 6A01                    	push 1	; arg count
 22109 00010831 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22110 00010836 E896620000              	call malloc
 22111 0001083B 50                      	push rax
 22112 0001083C BF10000000              	mov rdi, 8 * 2	; new rib
 22113 00010841 E88B620000              	call malloc
 22114 00010846 50                      	push rax
 22115 00010847 BF18000000              	mov rdi, 8 * 3	; extended env
 22116 0001084C E880620000              	call malloc
 22117 00010851 488B7D10                	mov rdi, ENV
 22118 00010855 BE00000000              	mov rsi, 0
 22119 0001085A BA01000000              	mov rdx, 1
 22120                                  .L_lambda_simple_env_loop_0087:	; ext_env[i + 1] <-- env[i]
 22121 0001085F 4883FE02                	cmp rsi, 2
 22122 00010863 7410                    	je .L_lambda_simple_env_end_0087
 22123 00010865 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22124 00010869 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22125 0001086D 48FFC6                  	inc rsi
 22126 00010870 48FFC2                  	inc rdx
 22127 00010873 EBEA                    	jmp .L_lambda_simple_env_loop_0087
 22128                                  .L_lambda_simple_env_end_0087:
 22129 00010875 5B                      	pop rbx
 22130 00010876 BE00000000              	mov rsi, 0
 22131                                  .L_lambda_simple_params_loop_0087:	; copy params
 22132 0001087B 4883FE02                	cmp rsi, 2
 22133 0001087F 740E                    	je .L_lambda_simple_params_end_0087
 22134 00010881 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22135 00010886 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22136 0001088A 48FFC6                  	inc rsi
 22137 0001088D EBEC                    	jmp .L_lambda_simple_params_loop_0087
 22138                                  .L_lambda_simple_params_end_0087:
 22139 0001088F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22140 00010892 4889C3                  	mov rbx, rax
 22141 00010895 58                      	pop rax
 22142 00010896 C60004                  	mov byte [rax], T_closure
 22143 00010899 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22144 0001089D 48C74009[AA080100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0087
 22145 000108A5 E97E000000              	jmp .L_lambda_simple_end_0087
 22146                                  .L_lambda_simple_code_0087:	; lambda-simple body
 22147 000108AA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22148 000108B0 740B                    	je .L_lambda_simple_arity_check_ok_0087
 22149 000108B2 FF742410                	push qword [rsp + 8 * 2]
 22150 000108B6 6A01                    	push 1
 22151 000108B8 E9CD610000              	jmp L_error_incorrect_arity_simple
 22152                                  .L_lambda_simple_arity_check_ok_0087:
 22153 000108BD C8000000                	enter 0, 0
 22154                                  	; preparing a tail-call
 22155 000108C1 488B4520                	mov rax, PARAM(0)	; param x
 22156 000108C5 50                      	push rax
 22157 000108C6 488B4510                	mov rax, ENV
 22158 000108CA 488B00                  	mov rax, qword [rax + 8 * 0]
 22159 000108CD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 22160 000108D0 50                      	push rax
 22161 000108D1 6A02                    	push 2	; arg count
 22162 000108D3 488B4510                	mov rax, ENV
 22163 000108D7 488B4008                	mov rax, qword [rax + 8 * 1]
 22164 000108DB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-vector
 22165 000108DE 803804                  	cmp byte [rax], T_closure
 22166 000108E1 0F8541610000            	jne L_error_non_closure
 22167 000108E7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22168 000108EA FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 22169 000108ED FF7500                  	push qword[rbp]
 22170 000108F0 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 22171 000108F5 48895D10                	mov qword[rbp + 8*2],rbx
 22172 000108F9 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 22173 00010901 BF00000000              	mov rdi,0
 22174 00010906 EB00                    	jmp .L_tc_recycle_frame_loop_00d1
 22175                                  .L_tc_recycle_frame_loop_00d1:
 22176 00010908 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 22177 0001090C 740F                    	je .L_tc_recycle_frame_done_00d1
 22178 0001090E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 22179 00010913 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 22180 00010918 48FFC7                  	inc rdi
 22181 0001091B EBEB                    	jmp .L_tc_recycle_frame_loop_00d1
 22182                                  .L_tc_recycle_frame_done_00d1:
 22183 0001091D 4889EC                  	mov rsp, rbp	; point to last argument
 22184 00010920 5D                      	pop rbp
 22185 00010921 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22186 00010924 C9                      	leave
 22187 00010925 C21800                  	ret AND_KILL_FRAME(1)
 22188                                  .L_lambda_simple_end_0087:	; new closure is in rax
 22189 00010928 803804                  	cmp byte [rax], T_closure
 22190 0001092B 0F85F7600000            	jne L_error_non_closure
 22191 00010931 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22192 00010934 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 22193 00010937 FF7500                  	push qword[rbp]
 22194 0001093A 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 22195 0001093F 48895D10                	mov qword[rbp + 8*2],rbx
 22196 00010943 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 22197 0001094B BF00000000              	mov rdi,0
 22198 00010950 EB00                    	jmp .L_tc_recycle_frame_loop_00d2
 22199                                  .L_tc_recycle_frame_loop_00d2:
 22200 00010952 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 22201 00010956 740F                    	je .L_tc_recycle_frame_done_00d2
 22202 00010958 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 22203 0001095D 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 22204 00010962 48FFC7                  	inc rdi
 22205 00010965 EBEB                    	jmp .L_tc_recycle_frame_loop_00d2
 22206                                  .L_tc_recycle_frame_done_00d2:
 22207 00010967 4889EC                  	mov rsp, rbp	; point to last argument
 22208 0001096A 5D                      	pop rbp
 22209 0001096B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22210 0001096E C9                      	leave
 22211 0001096F C22000                  	ret AND_KILL_FRAME(2)
 22212                                  .L_lambda_opt_end_0014:	; new closure is in rax
 22213 00010972 C9                      	leave
 22214 00010973 C21800                  	ret AND_KILL_FRAME(1)
 22215                                  .L_lambda_simple_end_0086:	; new closure is in rax
 22216 00010976 803804                  	cmp byte [rax], T_closure
 22217 00010979 0F85A9600000            	jne L_error_non_closure
 22218 0001097F FF7001                  	push SOB_CLOSURE_ENV(rax)
 22219 00010982 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22220 00010985 48890425[7A140000]      	mov qword [free_var_101], rax
 22221 0001098D 48B8-                   	mov rax, sob_void
 22221 0001098F [0000000000000000] 
 22222                                  
 22223 00010997 4889C7                  	mov rdi, rax
 22224 0001099A E887630000              	call print_sexpr_if_not_void
 22225                                  	; preparing a non-tail-call
 22226 0001099F 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 22227 000109A7 803805                  	cmp byte [rax], T_undefined
 22228 000109AA 0F84F45F0000            	je L_error_fvar_undefined
 22229 000109B0 50                      	push rax
 22230 000109B1 6A01                    	push 1	; arg count
 22231 000109B3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22232 000109B8 E814610000              	call malloc
 22233 000109BD 50                      	push rax
 22234 000109BE BF00000000              	mov rdi, 8 * 0	; new rib
 22235 000109C3 E809610000              	call malloc
 22236 000109C8 50                      	push rax
 22237 000109C9 BF08000000              	mov rdi, 8 * 1	; extended env
 22238 000109CE E8FE600000              	call malloc
 22239 000109D3 488B7D10                	mov rdi, ENV
 22240 000109D7 BE00000000              	mov rsi, 0
 22241 000109DC BA01000000              	mov rdx, 1
 22242                                  .L_lambda_simple_env_loop_0089:	; ext_env[i + 1] <-- env[i]
 22243 000109E1 4883FE00                	cmp rsi, 0
 22244 000109E5 7410                    	je .L_lambda_simple_env_end_0089
 22245 000109E7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22246 000109EB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22247 000109EF 48FFC6                  	inc rsi
 22248 000109F2 48FFC2                  	inc rdx
 22249 000109F5 EBEA                    	jmp .L_lambda_simple_env_loop_0089
 22250                                  .L_lambda_simple_env_end_0089:
 22251 000109F7 5B                      	pop rbx
 22252 000109F8 BE00000000              	mov rsi, 0
 22253                                  .L_lambda_simple_params_loop_0089:	; copy params
 22254 000109FD 4883FE00                	cmp rsi, 0
 22255 00010A01 740E                    	je .L_lambda_simple_params_end_0089
 22256 00010A03 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22257 00010A08 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22258 00010A0C 48FFC6                  	inc rsi
 22259 00010A0F EBEC                    	jmp .L_lambda_simple_params_loop_0089
 22260                                  .L_lambda_simple_params_end_0089:
 22261 00010A11 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22262 00010A14 4889C3                  	mov rbx, rax
 22263 00010A17 58                      	pop rax
 22264 00010A18 C60004                  	mov byte [rax], T_closure
 22265 00010A1B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22266 00010A1F 48C74009[2C0A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0089
 22267 00010A27 E97A060000              	jmp .L_lambda_simple_end_0089
 22268                                  .L_lambda_simple_code_0089:	; lambda-simple body
 22269 00010A2C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22270 00010A32 740B                    	je .L_lambda_simple_arity_check_ok_0089
 22271 00010A34 FF742410                	push qword [rsp + 8 * 2]
 22272 00010A38 6A01                    	push 1
 22273 00010A3A E94B600000              	jmp L_error_incorrect_arity_simple
 22274                                  .L_lambda_simple_arity_check_ok_0089:
 22275 00010A3F C8000000                	enter 0, 0
 22276 00010A43 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22277 00010A48 E884600000              	call malloc
 22278 00010A4D 50                      	push rax
 22279 00010A4E BF08000000              	mov rdi, 8 * 1	; new rib
 22280 00010A53 E879600000              	call malloc
 22281 00010A58 50                      	push rax
 22282 00010A59 BF10000000              	mov rdi, 8 * 2	; extended env
 22283 00010A5E E86E600000              	call malloc
 22284 00010A63 488B7D10                	mov rdi, ENV
 22285 00010A67 BE00000000              	mov rsi, 0
 22286 00010A6C BA01000000              	mov rdx, 1
 22287                                  .L_lambda_opt_env_loop_0015:	; ext_env[i + 1] <-- env[i]
 22288 00010A71 4883FE01                	cmp rsi, 1
 22289 00010A75 7410                    	je .L_lambda_opt_env_end_0015
 22290 00010A77 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22291 00010A7B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22292 00010A7F 48FFC6                  	inc rsi
 22293 00010A82 48FFC2                  	inc rdx
 22294 00010A85 EBEA                    	jmp .L_lambda_opt_env_loop_0015
 22295                                  .L_lambda_opt_env_end_0015:
 22296 00010A87 5B                      	pop rbx
 22297 00010A88 BE00000000              	mov rsi, 0
 22298                                  .L_lambda_opt_params_loop_0015:	; copy params
 22299 00010A8D 4883FE01                	cmp rsi, 1
 22300 00010A91 740E                    	je .L_lambda_opt_params_end_0015
 22301 00010A93 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22302 00010A98 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22303 00010A9C 48FFC6                  	inc rsi
 22304 00010A9F EBEC                    	jmp .L_lambda_opt_params_loop_0015
 22305                                  .L_lambda_opt_params_end_0015:
 22306 00010AA1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22307 00010AA4 4889C3                  	mov rbx, rax
 22308 00010AA7 58                      	pop rax
 22309 00010AA8 C60004                  	mov byte [rax], T_closure
 22310 00010AAB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22311 00010AAF 48C74009[BC0A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0015
 22312 00010AB7 E9E6050000              	jmp .L_lambda_opt_end_0015
 22313                                  .L_lambda_opt_code_0015:	; lambda-opt body
 22314 00010ABC 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22315 00010AC2 7411                    	je .L_lambda_opt_arity_check_exact_0015
 22316 00010AC4 0F8FBE020000            	jg .L_lambda_opt_arity_check_more_0015
 22317 00010ACA FF742410                	push qword [rsp + 8 * 2]
 22318 00010ACE 6A01                    	push 1
 22319 00010AD0 E9C95F0000              	jmp L_error_incorrect_arity_opt
 22320                                  .L_lambda_opt_arity_check_exact_0015:
 22321 00010AD5 4883EC08                	sub rsp, 8
 22322 00010AD9 488B442408              	mov rax, qword[rsp + 8 *1]
 22323 00010ADE 48890424                	mov qword[rsp], rax  
 22324 00010AE2 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 22325 00010AE7 4889442408              	mov qword[rsp + 8 * 1], rax
 22326 00010AEC B802000000              	mov rax, 2
 22327 00010AF1 4889442410              	mov qword[rsp + 8 *2], rax
 22328 00010AF6 488B442420              	mov rax, qword[rsp + 8 * (4 + 0)]
 22329 00010AFB 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 22330 00010B00 48B8-                   	mov rax, sob_nil
 22330 00010B02 [0100000000000000] 
 22331 00010B0A 4889442420              	mov qword[rsp + 8 * (3 + 1)], rax
 22332 00010B0F C8000000                	enter 0, 0
 22333                                  	; preparing a tail-call
 22334                                  	; preparing a non-tail-call
 22335 00010B13 488B4528                	mov rax, PARAM(1)	; param chs
 22336 00010B17 50                      	push rax
 22337 00010B18 6A01                    	push 1	; arg count
 22338 00010B1A 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22339 00010B22 803805                  	cmp byte [rax], T_undefined
 22340 00010B25 0F84795E0000            	je L_error_fvar_undefined
 22341 00010B2B 803804                  	cmp byte [rax], T_closure
 22342 00010B2E 0F85F45E0000            	jne L_error_non_closure
 22343 00010B34 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22344 00010B37 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22345 00010B3A 483D[02000000]          	cmp rax, sob_boolean_false
 22346 00010B40 740F                    	je .L_if_else_0074
 22347 00010B42 48B8-                   	mov rax, L_constants + 4
 22347 00010B44 [0400000000000000] 
 22348 00010B4C E9EE000000              	jmp .L_if_end_0074
 22349                                  .L_if_else_0074:
 22350                                  	; preparing a non-tail-call
 22351 00010B51 488B4528                	mov rax, PARAM(1)	; param chs
 22352 00010B55 50                      	push rax
 22353 00010B56 6A01                    	push 1	; arg count
 22354 00010B58 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 22355 00010B60 803805                  	cmp byte [rax], T_undefined
 22356 00010B63 0F843B5E0000            	je L_error_fvar_undefined
 22357 00010B69 803804                  	cmp byte [rax], T_closure
 22358 00010B6C 0F85B65E0000            	jne L_error_non_closure
 22359 00010B72 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22360 00010B75 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22361 00010B78 483D[02000000]          	cmp rax, sob_boolean_false
 22362 00010B7E 744C                    	je .L_if_else_0072
 22363                                  	; preparing a non-tail-call
 22364                                  	; preparing a non-tail-call
 22365 00010B80 488B4528                	mov rax, PARAM(1)	; param chs
 22366 00010B84 50                      	push rax
 22367 00010B85 6A01                    	push 1	; arg count
 22368 00010B87 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 22369 00010B8F 803805                  	cmp byte [rax], T_undefined
 22370 00010B92 0F840C5E0000            	je L_error_fvar_undefined
 22371 00010B98 803804                  	cmp byte [rax], T_closure
 22372 00010B9B 0F85875E0000            	jne L_error_non_closure
 22373 00010BA1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22374 00010BA4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22375 00010BA7 50                      	push rax
 22376 00010BA8 6A01                    	push 1	; arg count
 22377 00010BAA 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22378 00010BB2 803805                  	cmp byte [rax], T_undefined
 22379 00010BB5 0F84E95D0000            	je L_error_fvar_undefined
 22380 00010BBB 803804                  	cmp byte [rax], T_closure
 22381 00010BBE 0F85645E0000            	jne L_error_non_closure
 22382 00010BC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22383 00010BC7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22384 00010BCA EB0A                    	jmp .L_if_end_0072
 22385                                  .L_if_else_0072:
 22386 00010BCC 48B8-                   	mov rax, L_constants + 2
 22386 00010BCE [0200000000000000] 
 22387                                  .L_if_end_0072:
 22388 00010BD6 483D[02000000]          	cmp rax, sob_boolean_false
 22389 00010BDC 7429                    	je .L_if_else_0073
 22390                                  	; preparing a non-tail-call
 22391 00010BDE 488B4528                	mov rax, PARAM(1)	; param chs
 22392 00010BE2 50                      	push rax
 22393 00010BE3 6A01                    	push 1	; arg count
 22394 00010BE5 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 22395 00010BED 803805                  	cmp byte [rax], T_undefined
 22396 00010BF0 0F84AE5D0000            	je L_error_fvar_undefined
 22397 00010BF6 803804                  	cmp byte [rax], T_closure
 22398 00010BF9 0F85295E0000            	jne L_error_non_closure
 22399 00010BFF FF7001                  	push SOB_CLOSURE_ENV(rax)
 22400 00010C02 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22401 00010C05 EB38                    	jmp .L_if_end_0073
 22402                                  .L_if_else_0073:
 22403                                  	; preparing a non-tail-call
 22404 00010C07 48B8-                   	mov rax, L_constants + 3016
 22404 00010C09 [C80B000000000000] 
 22405 00010C11 50                      	push rax
 22406 00010C12 48B8-                   	mov rax, L_constants + 3007
 22406 00010C14 [BF0B000000000000] 
 22407 00010C1C 50                      	push rax
 22408 00010C1D 6A02                    	push 2	; arg count
 22409 00010C1F 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 22410 00010C27 803805                  	cmp byte [rax], T_undefined
 22411 00010C2A 0F84745D0000            	je L_error_fvar_undefined
 22412 00010C30 803804                  	cmp byte [rax], T_closure
 22413 00010C33 0F85EF5D0000            	jne L_error_non_closure
 22414 00010C39 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22415 00010C3C FF5009                  	call SOB_CLOSURE_CODE(rax)
 22416                                  .L_if_end_0073:
 22417                                  .L_if_end_0074:
 22418 00010C3F 50                      	push rax
 22419 00010C40 6A01                    	push 1	; arg count
 22420 00010C42 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22421 00010C47 E8855E0000              	call malloc
 22422 00010C4C 50                      	push rax
 22423 00010C4D BF10000000              	mov rdi, 8 * 2	; new rib
 22424 00010C52 E87A5E0000              	call malloc
 22425 00010C57 50                      	push rax
 22426 00010C58 BF18000000              	mov rdi, 8 * 3	; extended env
 22427 00010C5D E86F5E0000              	call malloc
 22428 00010C62 488B7D10                	mov rdi, ENV
 22429 00010C66 BE00000000              	mov rsi, 0
 22430 00010C6B BA01000000              	mov rdx, 1
 22431                                  .L_lambda_simple_env_loop_008b:	; ext_env[i + 1] <-- env[i]
 22432 00010C70 4883FE02                	cmp rsi, 2
 22433 00010C74 7410                    	je .L_lambda_simple_env_end_008b
 22434 00010C76 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22435 00010C7A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22436 00010C7E 48FFC6                  	inc rsi
 22437 00010C81 48FFC2                  	inc rdx
 22438 00010C84 EBEA                    	jmp .L_lambda_simple_env_loop_008b
 22439                                  .L_lambda_simple_env_end_008b:
 22440 00010C86 5B                      	pop rbx
 22441 00010C87 BE00000000              	mov rsi, 0
 22442                                  .L_lambda_simple_params_loop_008b:	; copy params
 22443 00010C8C 4883FE02                	cmp rsi, 2
 22444 00010C90 740E                    	je .L_lambda_simple_params_end_008b
 22445 00010C92 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22446 00010C97 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22447 00010C9B 48FFC6                  	inc rsi
 22448 00010C9E EBEC                    	jmp .L_lambda_simple_params_loop_008b
 22449                                  .L_lambda_simple_params_end_008b:
 22450 00010CA0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22451 00010CA3 4889C3                  	mov rbx, rax
 22452 00010CA6 58                      	pop rax
 22453 00010CA7 C60004                  	mov byte [rax], T_closure
 22454 00010CAA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22455 00010CAE 48C74009[BB0C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008b
 22456 00010CB6 E97E000000              	jmp .L_lambda_simple_end_008b
 22457                                  .L_lambda_simple_code_008b:	; lambda-simple body
 22458 00010CBB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22459 00010CC1 740B                    	je .L_lambda_simple_arity_check_ok_008b
 22460 00010CC3 FF742410                	push qword [rsp + 8 * 2]
 22461 00010CC7 6A01                    	push 1
 22462 00010CC9 E9BC5D0000              	jmp L_error_incorrect_arity_simple
 22463                                  .L_lambda_simple_arity_check_ok_008b:
 22464 00010CCE C8000000                	enter 0, 0
 22465                                  	; preparing a tail-call
 22466 00010CD2 488B4520                	mov rax, PARAM(0)	; param ch
 22467 00010CD6 50                      	push rax
 22468 00010CD7 488B4510                	mov rax, ENV
 22469 00010CDB 488B00                  	mov rax, qword [rax + 8 * 0]
 22470 00010CDE 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 22471 00010CE1 50                      	push rax
 22472 00010CE2 6A02                    	push 2	; arg count
 22473 00010CE4 488B4510                	mov rax, ENV
 22474 00010CE8 488B4008                	mov rax, qword [rax + 8 * 1]
 22475 00010CEC 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 22476 00010CEF 803804                  	cmp byte [rax], T_closure
 22477 00010CF2 0F85305D0000            	jne L_error_non_closure
 22478 00010CF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22479 00010CFB FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 22480 00010CFE FF7500                  	push qword[rbp]
 22481 00010D01 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 22482 00010D06 48895D10                	mov qword[rbp + 8*2],rbx
 22483 00010D0A 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 22484 00010D12 BF00000000              	mov rdi,0
 22485 00010D17 EB00                    	jmp .L_tc_recycle_frame_loop_00d7
 22486                                  .L_tc_recycle_frame_loop_00d7:
 22487 00010D19 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 22488 00010D1D 740F                    	je .L_tc_recycle_frame_done_00d7
 22489 00010D1F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 22490 00010D24 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 22491 00010D29 48FFC7                  	inc rdi
 22492 00010D2C EBEB                    	jmp .L_tc_recycle_frame_loop_00d7
 22493                                  .L_tc_recycle_frame_done_00d7:
 22494 00010D2E 4889EC                  	mov rsp, rbp	; point to last argument
 22495 00010D31 5D                      	pop rbp
 22496 00010D32 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22497 00010D35 C9                      	leave
 22498 00010D36 C21800                  	ret AND_KILL_FRAME(1)
 22499                                  .L_lambda_simple_end_008b:	; new closure is in rax
 22500 00010D39 803804                  	cmp byte [rax], T_closure
 22501 00010D3C 0F85E65C0000            	jne L_error_non_closure
 22502 00010D42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22503 00010D45 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 22504 00010D48 FF7500                  	push qword[rbp]
 22505 00010D4B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 22506 00010D50 48895D10                	mov qword[rbp + 8*2],rbx
 22507 00010D54 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 22508 00010D5C BF00000000              	mov rdi,0
 22509 00010D61 EB00                    	jmp .L_tc_recycle_frame_loop_00d8
 22510                                  .L_tc_recycle_frame_loop_00d8:
 22511 00010D63 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 22512 00010D67 740F                    	je .L_tc_recycle_frame_done_00d8
 22513 00010D69 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 22514 00010D6E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 22515 00010D73 48FFC7                  	inc rdi
 22516 00010D76 EBEB                    	jmp .L_tc_recycle_frame_loop_00d8
 22517                                  .L_tc_recycle_frame_done_00d8:
 22518 00010D78 4889EC                  	mov rsp, rbp	; point to last argument
 22519 00010D7B 5D                      	pop rbp
 22520 00010D7C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22521 00010D7F C9                      	leave
 22522 00010D80 C22000                  	ret AND_KILL_FRAME(2)
 22523 00010D83 E91A030000              	jmp .L_lambda_opt_end_0015	; new closure is in rax
 22524                                  .L_lambda_opt_arity_check_more_0015:
 22525 00010D88 488B442410              	mov rax, qword[rsp + 2 * 8]
 22526 00010D8D 4889C7                  	mov rdi, rax
 22527 00010D90 49B9-                   	mov r9, sob_nil
 22527 00010D92 [0100000000000000] 
 22528 00010D9A 4C8B442410              	mov r8, qword[rsp+2*8]
 22529                                  .L_lambda_opt_stack_shrink_loop_0015:
 22530 00010D9F 4983F801                	cmp r8, 1
 22531 00010DA3 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0015
 22532 00010DA5 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 22533 00010DAA BF11000000              	mov rdi, 1+8+8	;for pair
 22534 00010DAF E81D5D0000              	call malloc	 ;to create the pair in the stack
 22535 00010DB4 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 22536 00010DB7 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 22537 00010DBB 4C894809                 	mov qword[rax+1+8],r9
 22538 00010DBF 4989C1                  	mov r9 , rax	 ; for the recursion 
 22539 00010DC2 49FFC8                  	dec r8
 22540 00010DC5 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0015
 22541                                  .L_lambda_opt_stack_shrink_loop_exit_0015:
 22542 00010DC7 488B442410              	mov rax, qword[rsp + 2 * 8]
 22543 00010DCC BF02000000              	mov rdi, 2
 22544 00010DD1 4829F8                  	sub rax, rdi
 22545 00010DD4 4889C7                  	mov rdi, rax
 22546 00010DD7 486BC008                	imul rax,8
 22547 00010DDB 4801C4                  	add rsp, rax
 22548 00010DDE 4889E0                  	mov rax, rsp
 22549 00010DE1 4989F8                  	mov r8, rdi
 22550 00010DE4 4D6BC008                	imul r8, 8
 22551 00010DE8 4C29C0                  	sub rax, r8
 22552 00010DEB 4989C2                  	mov r10, rax	; holds the original ret in the stack
 22553 00010DEE 4983C218                	add r10, 8*3
 22554 00010DF2 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 22555 00010DF6 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 22556 00010DF9 4D6BC008                	imul r8,8
 22557 00010DFD 4C01C0                  	add rax, r8
 22558 00010E00 4C8908                  	mov qword[rax] ,r9
 22559 00010E03 4D89D0                   	mov r8, r10
 22560 00010E06 4983C000                	add r8, 8 * 0
 22561 00010E0A 4D8B08                  	mov r9,qword[r8]
 22562 00010E0D 4D890CF8                	mov qword [r8 + rdi * 8], r9
 22563 00010E11 4983EA18                	sub r10, 8*3
 22564 00010E15 48C744241002000000      	mov qword [rsp+2*8], 2
 22565 00010E1E 498B4208                	mov rax, qword[r10 + 1 * 8]
 22566 00010E22 4889442408              	mov qword[rsp + 1*8] ,rax
 22567 00010E27 498B02                  	mov rax, qword[r10]
 22568 00010E2A 48890424                	mov qword[rsp], rax
 22569 00010E2E C8000000                	enter 0, 0
 22570                                  	; preparing a tail-call
 22571                                  	; preparing a non-tail-call
 22572 00010E32 488B4528                	mov rax, PARAM(1)	; param chs
 22573 00010E36 50                      	push rax
 22574 00010E37 6A01                    	push 1	; arg count
 22575 00010E39 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22576 00010E41 803805                  	cmp byte [rax], T_undefined
 22577 00010E44 0F845A5B0000            	je L_error_fvar_undefined
 22578 00010E4A 803804                  	cmp byte [rax], T_closure
 22579 00010E4D 0F85D55B0000            	jne L_error_non_closure
 22580 00010E53 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22581 00010E56 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22582 00010E59 483D[02000000]          	cmp rax, sob_boolean_false
 22583 00010E5F 740F                    	je .L_if_else_0071
 22584 00010E61 48B8-                   	mov rax, L_constants + 4
 22584 00010E63 [0400000000000000] 
 22585 00010E6B E9EE000000              	jmp .L_if_end_0071
 22586                                  .L_if_else_0071:
 22587                                  	; preparing a non-tail-call
 22588 00010E70 488B4528                	mov rax, PARAM(1)	; param chs
 22589 00010E74 50                      	push rax
 22590 00010E75 6A01                    	push 1	; arg count
 22591 00010E77 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 22592 00010E7F 803805                  	cmp byte [rax], T_undefined
 22593 00010E82 0F841C5B0000            	je L_error_fvar_undefined
 22594 00010E88 803804                  	cmp byte [rax], T_closure
 22595 00010E8B 0F85975B0000            	jne L_error_non_closure
 22596 00010E91 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22597 00010E94 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22598 00010E97 483D[02000000]          	cmp rax, sob_boolean_false
 22599 00010E9D 744C                    	je .L_if_else_006f
 22600                                  	; preparing a non-tail-call
 22601                                  	; preparing a non-tail-call
 22602 00010E9F 488B4528                	mov rax, PARAM(1)	; param chs
 22603 00010EA3 50                      	push rax
 22604 00010EA4 6A01                    	push 1	; arg count
 22605 00010EA6 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 22606 00010EAE 803805                  	cmp byte [rax], T_undefined
 22607 00010EB1 0F84ED5A0000            	je L_error_fvar_undefined
 22608 00010EB7 803804                  	cmp byte [rax], T_closure
 22609 00010EBA 0F85685B0000            	jne L_error_non_closure
 22610 00010EC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22611 00010EC3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22612 00010EC6 50                      	push rax
 22613 00010EC7 6A01                    	push 1	; arg count
 22614 00010EC9 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22615 00010ED1 803805                  	cmp byte [rax], T_undefined
 22616 00010ED4 0F84CA5A0000            	je L_error_fvar_undefined
 22617 00010EDA 803804                  	cmp byte [rax], T_closure
 22618 00010EDD 0F85455B0000            	jne L_error_non_closure
 22619 00010EE3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22620 00010EE6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22621 00010EE9 EB0A                    	jmp .L_if_end_006f
 22622                                  .L_if_else_006f:
 22623 00010EEB 48B8-                   	mov rax, L_constants + 2
 22623 00010EED [0200000000000000] 
 22624                                  .L_if_end_006f:
 22625 00010EF5 483D[02000000]          	cmp rax, sob_boolean_false
 22626 00010EFB 7429                    	je .L_if_else_0070
 22627                                  	; preparing a non-tail-call
 22628 00010EFD 488B4528                	mov rax, PARAM(1)	; param chs
 22629 00010F01 50                      	push rax
 22630 00010F02 6A01                    	push 1	; arg count
 22631 00010F04 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 22632 00010F0C 803805                  	cmp byte [rax], T_undefined
 22633 00010F0F 0F848F5A0000            	je L_error_fvar_undefined
 22634 00010F15 803804                  	cmp byte [rax], T_closure
 22635 00010F18 0F850A5B0000            	jne L_error_non_closure
 22636 00010F1E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22637 00010F21 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22638 00010F24 EB38                    	jmp .L_if_end_0070
 22639                                  .L_if_else_0070:
 22640                                  	; preparing a non-tail-call
 22641 00010F26 48B8-                   	mov rax, L_constants + 3016
 22641 00010F28 [C80B000000000000] 
 22642 00010F30 50                      	push rax
 22643 00010F31 48B8-                   	mov rax, L_constants + 3007
 22643 00010F33 [BF0B000000000000] 
 22644 00010F3B 50                      	push rax
 22645 00010F3C 6A02                    	push 2	; arg count
 22646 00010F3E 488B0425[37130000]      	mov rax, qword [free_var_82]	; free var error
 22647 00010F46 803805                  	cmp byte [rax], T_undefined
 22648 00010F49 0F84555A0000            	je L_error_fvar_undefined
 22649 00010F4F 803804                  	cmp byte [rax], T_closure
 22650 00010F52 0F85D05A0000            	jne L_error_non_closure
 22651 00010F58 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22652 00010F5B FF5009                  	call SOB_CLOSURE_CODE(rax)
 22653                                  .L_if_end_0070:
 22654                                  .L_if_end_0071:
 22655 00010F5E 50                      	push rax
 22656 00010F5F 6A01                    	push 1	; arg count
 22657 00010F61 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22658 00010F66 E8665B0000              	call malloc
 22659 00010F6B 50                      	push rax
 22660 00010F6C BF10000000              	mov rdi, 8 * 2	; new rib
 22661 00010F71 E85B5B0000              	call malloc
 22662 00010F76 50                      	push rax
 22663 00010F77 BF18000000              	mov rdi, 8 * 3	; extended env
 22664 00010F7C E8505B0000              	call malloc
 22665 00010F81 488B7D10                	mov rdi, ENV
 22666 00010F85 BE00000000              	mov rsi, 0
 22667 00010F8A BA01000000              	mov rdx, 1
 22668                                  .L_lambda_simple_env_loop_008a:	; ext_env[i + 1] <-- env[i]
 22669 00010F8F 4883FE02                	cmp rsi, 2
 22670 00010F93 7410                    	je .L_lambda_simple_env_end_008a
 22671 00010F95 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22672 00010F99 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22673 00010F9D 48FFC6                  	inc rsi
 22674 00010FA0 48FFC2                  	inc rdx
 22675 00010FA3 EBEA                    	jmp .L_lambda_simple_env_loop_008a
 22676                                  .L_lambda_simple_env_end_008a:
 22677 00010FA5 5B                      	pop rbx
 22678 00010FA6 BE00000000              	mov rsi, 0
 22679                                  .L_lambda_simple_params_loop_008a:	; copy params
 22680 00010FAB 4883FE02                	cmp rsi, 2
 22681 00010FAF 740E                    	je .L_lambda_simple_params_end_008a
 22682 00010FB1 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22683 00010FB6 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22684 00010FBA 48FFC6                  	inc rsi
 22685 00010FBD EBEC                    	jmp .L_lambda_simple_params_loop_008a
 22686                                  .L_lambda_simple_params_end_008a:
 22687 00010FBF 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22688 00010FC2 4889C3                  	mov rbx, rax
 22689 00010FC5 58                      	pop rax
 22690 00010FC6 C60004                  	mov byte [rax], T_closure
 22691 00010FC9 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22692 00010FCD 48C74009[DA0F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008a
 22693 00010FD5 E97E000000              	jmp .L_lambda_simple_end_008a
 22694                                  .L_lambda_simple_code_008a:	; lambda-simple body
 22695 00010FDA 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22696 00010FE0 740B                    	je .L_lambda_simple_arity_check_ok_008a
 22697 00010FE2 FF742410                	push qword [rsp + 8 * 2]
 22698 00010FE6 6A01                    	push 1
 22699 00010FE8 E99D5A0000              	jmp L_error_incorrect_arity_simple
 22700                                  .L_lambda_simple_arity_check_ok_008a:
 22701 00010FED C8000000                	enter 0, 0
 22702                                  	; preparing a tail-call
 22703 00010FF1 488B4520                	mov rax, PARAM(0)	; param ch
 22704 00010FF5 50                      	push rax
 22705 00010FF6 488B4510                	mov rax, ENV
 22706 00010FFA 488B00                  	mov rax, qword [rax + 8 * 0]
 22707 00010FFD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 22708 00011000 50                      	push rax
 22709 00011001 6A02                    	push 2	; arg count
 22710 00011003 488B4510                	mov rax, ENV
 22711 00011007 488B4008                	mov rax, qword [rax + 8 * 1]
 22712 0001100B 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var asm-make-string
 22713 0001100E 803804                  	cmp byte [rax], T_closure
 22714 00011011 0F85115A0000            	jne L_error_non_closure
 22715 00011017 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22716 0001101A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 22717 0001101D FF7500                  	push qword[rbp]
 22718 00011020 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 22719 00011025 48895D10                	mov qword[rbp + 8*2],rbx
 22720 00011029 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 22721 00011031 BF00000000              	mov rdi,0
 22722 00011036 EB00                    	jmp .L_tc_recycle_frame_loop_00d5
 22723                                  .L_tc_recycle_frame_loop_00d5:
 22724 00011038 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 22725 0001103C 740F                    	je .L_tc_recycle_frame_done_00d5
 22726 0001103E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 22727 00011043 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 22728 00011048 48FFC7                  	inc rdi
 22729 0001104B EBEB                    	jmp .L_tc_recycle_frame_loop_00d5
 22730                                  .L_tc_recycle_frame_done_00d5:
 22731 0001104D 4889EC                  	mov rsp, rbp	; point to last argument
 22732 00011050 5D                      	pop rbp
 22733 00011051 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22734 00011054 C9                      	leave
 22735 00011055 C21800                  	ret AND_KILL_FRAME(1)
 22736                                  .L_lambda_simple_end_008a:	; new closure is in rax
 22737 00011058 803804                  	cmp byte [rax], T_closure
 22738 0001105B 0F85C7590000            	jne L_error_non_closure
 22739 00011061 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22740 00011064 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 22741 00011067 FF7500                  	push qword[rbp]
 22742 0001106A 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 22743 0001106F 48895D10                	mov qword[rbp + 8*2],rbx
 22744 00011073 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 22745 0001107B BF00000000              	mov rdi,0
 22746 00011080 EB00                    	jmp .L_tc_recycle_frame_loop_00d6
 22747                                  .L_tc_recycle_frame_loop_00d6:
 22748 00011082 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 22749 00011086 740F                    	je .L_tc_recycle_frame_done_00d6
 22750 00011088 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 22751 0001108D 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 22752 00011092 48FFC7                  	inc rdi
 22753 00011095 EBEB                    	jmp .L_tc_recycle_frame_loop_00d6
 22754                                  .L_tc_recycle_frame_done_00d6:
 22755 00011097 4889EC                  	mov rsp, rbp	; point to last argument
 22756 0001109A 5D                      	pop rbp
 22757 0001109B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22758 0001109E C9                      	leave
 22759 0001109F C22000                  	ret AND_KILL_FRAME(2)
 22760                                  .L_lambda_opt_end_0015:	; new closure is in rax
 22761 000110A2 C9                      	leave
 22762 000110A3 C21800                  	ret AND_KILL_FRAME(1)
 22763                                  .L_lambda_simple_end_0089:	; new closure is in rax
 22764 000110A6 803804                  	cmp byte [rax], T_closure
 22765 000110A9 0F8579590000            	jne L_error_non_closure
 22766 000110AF FF7001                  	push SOB_CLOSURE_ENV(rax)
 22767 000110B2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22768 000110B5 48890425[58140000]      	mov qword [free_var_99], rax
 22769 000110BD 48B8-                   	mov rax, sob_void
 22769 000110BF [0000000000000000] 
 22770                                  
 22771 000110C7 4889C7                  	mov rdi, rax
 22772 000110CA E8575C0000              	call print_sexpr_if_not_void
 22773                                  	; preparing a non-tail-call
 22774 000110CF 48B8-                   	mov rax, L_constants + 1993
 22774 000110D1 [C907000000000000] 
 22775 000110D9 50                      	push rax
 22776 000110DA 6A01                    	push 1	; arg count
 22777 000110DC BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22778 000110E1 E8EB590000              	call malloc
 22779 000110E6 50                      	push rax
 22780 000110E7 BF00000000              	mov rdi, 8 * 0	; new rib
 22781 000110EC E8E0590000              	call malloc
 22782 000110F1 50                      	push rax
 22783 000110F2 BF08000000              	mov rdi, 8 * 1	; extended env
 22784 000110F7 E8D5590000              	call malloc
 22785 000110FC 488B7D10                	mov rdi, ENV
 22786 00011100 BE00000000              	mov rsi, 0
 22787 00011105 BA01000000              	mov rdx, 1
 22788                                  .L_lambda_simple_env_loop_008c:	; ext_env[i + 1] <-- env[i]
 22789 0001110A 4883FE00                	cmp rsi, 0
 22790 0001110E 7410                    	je .L_lambda_simple_env_end_008c
 22791 00011110 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22792 00011114 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22793 00011118 48FFC6                  	inc rsi
 22794 0001111B 48FFC2                  	inc rdx
 22795 0001111E EBEA                    	jmp .L_lambda_simple_env_loop_008c
 22796                                  .L_lambda_simple_env_end_008c:
 22797 00011120 5B                      	pop rbx
 22798 00011121 BE00000000              	mov rsi, 0
 22799                                  .L_lambda_simple_params_loop_008c:	; copy params
 22800 00011126 4883FE00                	cmp rsi, 0
 22801 0001112A 740E                    	je .L_lambda_simple_params_end_008c
 22802 0001112C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22803 00011131 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22804 00011135 48FFC6                  	inc rsi
 22805 00011138 EBEC                    	jmp .L_lambda_simple_params_loop_008c
 22806                                  .L_lambda_simple_params_end_008c:
 22807 0001113A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22808 0001113D 4889C3                  	mov rbx, rax
 22809 00011140 58                      	pop rax
 22810 00011141 C60004                  	mov byte [rax], T_closure
 22811 00011144 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22812 00011148 48C74009[55110100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008c
 22813 00011150 E918040000              	jmp .L_lambda_simple_end_008c
 22814                                  .L_lambda_simple_code_008c:	; lambda-simple body
 22815 00011155 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22816 0001115B 740B                    	je .L_lambda_simple_arity_check_ok_008c
 22817 0001115D FF742410                	push qword [rsp + 8 * 2]
 22818 00011161 6A01                    	push 1
 22819 00011163 E922590000              	jmp L_error_incorrect_arity_simple
 22820                                  .L_lambda_simple_arity_check_ok_008c:
 22821 00011168 C8000000                	enter 0, 0
 22822 0001116C 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 22823 00011170 488903                  	mov qword [rbx], rax
 22824                                  
 22825 00011173 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22826 00011178 E854590000              	call malloc
 22827 0001117D 50                      	push rax
 22828 0001117E BF08000000              	mov rdi, 8 * 1	; new rib
 22829 00011183 E849590000              	call malloc
 22830 00011188 50                      	push rax
 22831 00011189 BF10000000              	mov rdi, 8 * 2	; extended env
 22832 0001118E E83E590000              	call malloc
 22833 00011193 488B7D10                	mov rdi, ENV
 22834 00011197 BE00000000              	mov rsi, 0
 22835 0001119C BA01000000              	mov rdx, 1
 22836                                  .L_lambda_simple_env_loop_008d:	; ext_env[i + 1] <-- env[i]
 22837 000111A1 4883FE01                	cmp rsi, 1
 22838 000111A5 7410                    	je .L_lambda_simple_env_end_008d
 22839 000111A7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22840 000111AB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22841 000111AF 48FFC6                  	inc rsi
 22842 000111B2 48FFC2                  	inc rdx
 22843 000111B5 EBEA                    	jmp .L_lambda_simple_env_loop_008d
 22844                                  .L_lambda_simple_env_end_008d:
 22845 000111B7 5B                      	pop rbx
 22846 000111B8 BE00000000              	mov rsi, 0
 22847                                  .L_lambda_simple_params_loop_008d:	; copy params
 22848 000111BD 4883FE01                	cmp rsi, 1
 22849 000111C1 740E                    	je .L_lambda_simple_params_end_008d
 22850 000111C3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22851 000111C8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22852 000111CC 48FFC6                  	inc rsi
 22853 000111CF EBEC                    	jmp .L_lambda_simple_params_loop_008d
 22854                                  .L_lambda_simple_params_end_008d:
 22855 000111D1 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22856 000111D4 4889C3                  	mov rbx, rax
 22857 000111D7 58                      	pop rax
 22858 000111D8 C60004                  	mov byte [rax], T_closure
 22859 000111DB 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22860 000111DF 48C74009[EC110100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008d
 22861 000111E7 E973020000              	jmp .L_lambda_simple_end_008d
 22862                                  .L_lambda_simple_code_008d:	; lambda-simple body
 22863 000111EC 48837C241002            	cmp qword [rsp + 8 * 2], 2
 22864 000111F2 740B                    	je .L_lambda_simple_arity_check_ok_008d
 22865 000111F4 FF742410                	push qword [rsp + 8 * 2]
 22866 000111F8 6A02                    	push 2
 22867 000111FA E98B580000              	jmp L_error_incorrect_arity_simple
 22868                                  .L_lambda_simple_arity_check_ok_008d:
 22869 000111FF C8000000                	enter 0, 0
 22870                                  	; preparing a non-tail-call
 22871 00011203 488B4520                	mov rax, PARAM(0)	; param s
 22872 00011207 50                      	push rax
 22873 00011208 6A01                    	push 1	; arg count
 22874 0001120A 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 22875 00011212 803805                  	cmp byte [rax], T_undefined
 22876 00011215 0F8489570000            	je L_error_fvar_undefined
 22877 0001121B 803804                  	cmp byte [rax], T_closure
 22878 0001121E 0F8504580000            	jne L_error_non_closure
 22879 00011224 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22880 00011227 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22881 0001122A 483D[02000000]          	cmp rax, sob_boolean_false
 22882 00011230 746E                    	je .L_if_else_0075
 22883                                  	; preparing a tail-call
 22884 00011232 48B8-                   	mov rax, L_constants + 0
 22884 00011234 [0000000000000000] 
 22885 0001123C 50                      	push rax
 22886 0001123D 488B4528                	mov rax, PARAM(1)	; param i
 22887 00011241 50                      	push rax
 22888 00011242 6A02                    	push 2	; arg count
 22889 00011244 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 22890 0001124C 803805                  	cmp byte [rax], T_undefined
 22891 0001124F 0F844F570000            	je L_error_fvar_undefined
 22892 00011255 803804                  	cmp byte [rax], T_closure
 22893 00011258 0F85CA570000            	jne L_error_non_closure
 22894 0001125E FF7001                  	push SOB_CLOSURE_ENV(rax)
 22895 00011261 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 22896 00011264 FF7500                  	push qword[rbp]
 22897 00011267 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 22898 0001126C 48895D10                	mov qword[rbp + 8*2],rbx
 22899 00011270 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 22900 00011278 BF00000000              	mov rdi,0
 22901 0001127D EB00                    	jmp .L_tc_recycle_frame_loop_00d9
 22902                                  .L_tc_recycle_frame_loop_00d9:
 22903 0001127F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 22904 00011283 740F                    	je .L_tc_recycle_frame_done_00d9
 22905 00011285 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 22906 0001128A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 22907 0001128F 48FFC7                  	inc rdi
 22908 00011292 EBEB                    	jmp .L_tc_recycle_frame_loop_00d9
 22909                                  .L_tc_recycle_frame_done_00d9:
 22910 00011294 4889EC                  	mov rsp, rbp	; point to last argument
 22911 00011297 5D                      	pop rbp
 22912 00011298 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 22913 0001129B E9BB010000              	jmp .L_if_end_0075
 22914                                  .L_if_else_0075:
 22915                                  	; preparing a tail-call
 22916                                  	; preparing a non-tail-call
 22917                                  	; preparing a non-tail-call
 22918 000112A0 48B8-                   	mov rax, L_constants + 2270
 22918 000112A2 [DE08000000000000] 
 22919 000112AA 50                      	push rax
 22920 000112AB 488B4528                	mov rax, PARAM(1)	; param i
 22921 000112AF 50                      	push rax
 22922 000112B0 6A02                    	push 2	; arg count
 22923 000112B2 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 22924 000112BA 803805                  	cmp byte [rax], T_undefined
 22925 000112BD 0F84E1560000            	je L_error_fvar_undefined
 22926 000112C3 803804                  	cmp byte [rax], T_closure
 22927 000112C6 0F855C570000            	jne L_error_non_closure
 22928 000112CC FF7001                  	push SOB_CLOSURE_ENV(rax)
 22929 000112CF FF5009                  	call SOB_CLOSURE_CODE(rax)
 22930 000112D2 50                      	push rax
 22931                                  	; preparing a non-tail-call
 22932 000112D3 488B4520                	mov rax, PARAM(0)	; param s
 22933 000112D7 50                      	push rax
 22934 000112D8 6A01                    	push 1	; arg count
 22935 000112DA 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 22936 000112E2 803805                  	cmp byte [rax], T_undefined
 22937 000112E5 0F84B9560000            	je L_error_fvar_undefined
 22938 000112EB 803804                  	cmp byte [rax], T_closure
 22939 000112EE 0F8534570000            	jne L_error_non_closure
 22940 000112F4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22941 000112F7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22942 000112FA 50                      	push rax
 22943 000112FB 6A02                    	push 2	; arg count
 22944 000112FD 488B4510                	mov rax, ENV
 22945 00011301 488B00                  	mov rax, qword [rax + 8 * 0]
 22946 00011304 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 22947 00011307 488B00                  	mov rax, qword [rax]
 22948 0001130A 803804                  	cmp byte [rax], T_closure
 22949 0001130D 0F8515570000            	jne L_error_non_closure
 22950 00011313 FF7001                  	push SOB_CLOSURE_ENV(rax)
 22951 00011316 FF5009                  	call SOB_CLOSURE_CODE(rax)
 22952 00011319 50                      	push rax
 22953 0001131A 6A01                    	push 1	; arg count
 22954 0001131C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 22955 00011321 E8AB570000              	call malloc
 22956 00011326 50                      	push rax
 22957 00011327 BF10000000              	mov rdi, 8 * 2	; new rib
 22958 0001132C E8A0570000              	call malloc
 22959 00011331 50                      	push rax
 22960 00011332 BF18000000              	mov rdi, 8 * 3	; extended env
 22961 00011337 E895570000              	call malloc
 22962 0001133C 488B7D10                	mov rdi, ENV
 22963 00011340 BE00000000              	mov rsi, 0
 22964 00011345 BA01000000              	mov rdx, 1
 22965                                  .L_lambda_simple_env_loop_008e:	; ext_env[i + 1] <-- env[i]
 22966 0001134A 4883FE02                	cmp rsi, 2
 22967 0001134E 7410                    	je .L_lambda_simple_env_end_008e
 22968 00011350 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 22969 00011354 48890CD0                	mov qword [rax + 8 * rdx], rcx
 22970 00011358 48FFC6                  	inc rsi
 22971 0001135B 48FFC2                  	inc rdx
 22972 0001135E EBEA                    	jmp .L_lambda_simple_env_loop_008e
 22973                                  .L_lambda_simple_env_end_008e:
 22974 00011360 5B                      	pop rbx
 22975 00011361 BE00000000              	mov rsi, 0
 22976                                  .L_lambda_simple_params_loop_008e:	; copy params
 22977 00011366 4883FE02                	cmp rsi, 2
 22978 0001136A 740E                    	je .L_lambda_simple_params_end_008e
 22979 0001136C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 22980 00011371 488914F3                	mov qword [rbx + 8 * rsi], rdx
 22981 00011375 48FFC6                  	inc rsi
 22982 00011378 EBEC                    	jmp .L_lambda_simple_params_loop_008e
 22983                                  .L_lambda_simple_params_end_008e:
 22984 0001137A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 22985 0001137D 4889C3                  	mov rbx, rax
 22986 00011380 58                      	pop rax
 22987 00011381 C60004                  	mov byte [rax], T_closure
 22988 00011384 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 22989 00011388 48C74009[95130100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008e
 22990 00011390 E980000000              	jmp .L_lambda_simple_end_008e
 22991                                  .L_lambda_simple_code_008e:	; lambda-simple body
 22992 00011395 48837C241001            	cmp qword [rsp + 8 * 2], 1
 22993 0001139B 740B                    	je .L_lambda_simple_arity_check_ok_008e
 22994 0001139D FF742410                	push qword [rsp + 8 * 2]
 22995 000113A1 6A01                    	push 1
 22996 000113A3 E9E2560000              	jmp L_error_incorrect_arity_simple
 22997                                  .L_lambda_simple_arity_check_ok_008e:
 22998 000113A8 C8000000                	enter 0, 0
 22999                                  	; preparing a non-tail-call
 23000                                  	; preparing a non-tail-call
 23001 000113AC 488B4510                	mov rax, ENV
 23002 000113B0 488B00                  	mov rax, qword [rax + 8 * 0]
 23003 000113B3 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 23004 000113B6 50                      	push rax
 23005 000113B7 6A01                    	push 1	; arg count
 23006 000113B9 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 23007 000113C1 803805                  	cmp byte [rax], T_undefined
 23008 000113C4 0F84DA550000            	je L_error_fvar_undefined
 23009 000113CA 803804                  	cmp byte [rax], T_closure
 23010 000113CD 0F8555560000            	jne L_error_non_closure
 23011 000113D3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23012 000113D6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23013 000113D9 50                      	push rax
 23014 000113DA 488B4510                	mov rax, ENV
 23015 000113DE 488B00                  	mov rax, qword [rax + 8 * 0]
 23016 000113E1 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 23017 000113E5 50                      	push rax
 23018 000113E6 488B4520                	mov rax, PARAM(0)	; param v
 23019 000113EA 50                      	push rax
 23020 000113EB 6A03                    	push 3	; arg count
 23021 000113ED 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 23022 000113F5 803805                  	cmp byte [rax], T_undefined
 23023 000113F8 0F84A6550000            	je L_error_fvar_undefined
 23024 000113FE 803804                  	cmp byte [rax], T_closure
 23025 00011401 0F8521560000            	jne L_error_non_closure
 23026 00011407 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23027 0001140A FF5009                  	call SOB_CLOSURE_CODE(rax)
 23028                                  
 23029 0001140D 488B4520                	mov rax, PARAM(0)	; param v
 23030 00011411 C9                      	leave
 23031 00011412 C21800                  	ret AND_KILL_FRAME(1)
 23032                                  .L_lambda_simple_end_008e:	; new closure is in rax
 23033 00011415 803804                  	cmp byte [rax], T_closure
 23034 00011418 0F850A560000            	jne L_error_non_closure
 23035 0001141E FF7001                  	push SOB_CLOSURE_ENV(rax)
 23036 00011421 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 23037 00011424 FF7500                  	push qword[rbp]
 23038 00011427 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 23039 0001142C 48895D10                	mov qword[rbp + 8*2],rbx
 23040 00011430 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 23041 00011438 BF00000000              	mov rdi,0
 23042 0001143D EB00                    	jmp .L_tc_recycle_frame_loop_00da
 23043                                  .L_tc_recycle_frame_loop_00da:
 23044 0001143F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 23045 00011443 740F                    	je .L_tc_recycle_frame_done_00da
 23046 00011445 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 23047 0001144A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 23048 0001144F 48FFC7                  	inc rdi
 23049 00011452 EBEB                    	jmp .L_tc_recycle_frame_loop_00da
 23050                                  .L_tc_recycle_frame_done_00da:
 23051 00011454 4889EC                  	mov rsp, rbp	; point to last argument
 23052 00011457 5D                      	pop rbp
 23053 00011458 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23054                                  .L_if_end_0075:
 23055 0001145B C9                      	leave
 23056 0001145C C22000                  	ret AND_KILL_FRAME(2)
 23057                                  .L_lambda_simple_end_008d:	; new closure is in rax
 23058 0001145F 50                      	push rax
 23059 00011460 488B4520                	mov rax, PARAM(0)	; param run
 23060 00011464 8F00                    	pop qword [rax]
 23061 00011466 48B8-                   	mov rax, sob_void
 23061 00011468 [0000000000000000] 
 23062                                  
 23063 00011470 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23064 00011475 E857560000              	call malloc
 23065 0001147A 50                      	push rax
 23066 0001147B BF08000000              	mov rdi, 8 * 1	; new rib
 23067 00011480 E84C560000              	call malloc
 23068 00011485 50                      	push rax
 23069 00011486 BF10000000              	mov rdi, 8 * 2	; extended env
 23070 0001148B E841560000              	call malloc
 23071 00011490 488B7D10                	mov rdi, ENV
 23072 00011494 BE00000000              	mov rsi, 0
 23073 00011499 BA01000000              	mov rdx, 1
 23074                                  .L_lambda_simple_env_loop_008f:	; ext_env[i + 1] <-- env[i]
 23075 0001149E 4883FE01                	cmp rsi, 1
 23076 000114A2 7410                    	je .L_lambda_simple_env_end_008f
 23077 000114A4 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23078 000114A8 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23079 000114AC 48FFC6                  	inc rsi
 23080 000114AF 48FFC2                  	inc rdx
 23081 000114B2 EBEA                    	jmp .L_lambda_simple_env_loop_008f
 23082                                  .L_lambda_simple_env_end_008f:
 23083 000114B4 5B                      	pop rbx
 23084 000114B5 BE00000000              	mov rsi, 0
 23085                                  .L_lambda_simple_params_loop_008f:	; copy params
 23086 000114BA 4883FE01                	cmp rsi, 1
 23087 000114BE 740E                    	je .L_lambda_simple_params_end_008f
 23088 000114C0 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23089 000114C5 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23090 000114C9 48FFC6                  	inc rsi
 23091 000114CC EBEC                    	jmp .L_lambda_simple_params_loop_008f
 23092                                  .L_lambda_simple_params_end_008f:
 23093 000114CE 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23094 000114D1 4889C3                  	mov rbx, rax
 23095 000114D4 58                      	pop rax
 23096 000114D5 C60004                  	mov byte [rax], T_closure
 23097 000114D8 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23098 000114DC 48C74009[E9140100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_008f
 23099 000114E4 E980000000              	jmp .L_lambda_simple_end_008f
 23100                                  .L_lambda_simple_code_008f:	; lambda-simple body
 23101 000114E9 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23102 000114EF 740B                    	je .L_lambda_simple_arity_check_ok_008f
 23103 000114F1 FF742410                	push qword [rsp + 8 * 2]
 23104 000114F5 6A01                    	push 1
 23105 000114F7 E98E550000              	jmp L_error_incorrect_arity_simple
 23106                                  .L_lambda_simple_arity_check_ok_008f:
 23107 000114FC C8000000                	enter 0, 0
 23108                                  	; preparing a tail-call
 23109 00011500 48B8-                   	mov rax, L_constants + 2135
 23109 00011502 [5708000000000000] 
 23110 0001150A 50                      	push rax
 23111 0001150B 488B4520                	mov rax, PARAM(0)	; param s
 23112 0001150F 50                      	push rax
 23113 00011510 6A02                    	push 2	; arg count
 23114 00011512 488B4510                	mov rax, ENV
 23115 00011516 488B00                  	mov rax, qword [rax + 8 * 0]
 23116 00011519 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23117 0001151C 488B00                  	mov rax, qword [rax]
 23118 0001151F 803804                  	cmp byte [rax], T_closure
 23119 00011522 0F8500550000            	jne L_error_non_closure
 23120 00011528 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23121 0001152B FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 23122 0001152E FF7500                  	push qword[rbp]
 23123 00011531 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 23124 00011536 48895D10                	mov qword[rbp + 8*2],rbx
 23125 0001153A 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 23126 00011542 BF00000000              	mov rdi,0
 23127 00011547 EB00                    	jmp .L_tc_recycle_frame_loop_00db
 23128                                  .L_tc_recycle_frame_loop_00db:
 23129 00011549 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 23130 0001154D 740F                    	je .L_tc_recycle_frame_done_00db
 23131 0001154F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 23132 00011554 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 23133 00011559 48FFC7                  	inc rdi
 23134 0001155C EBEB                    	jmp .L_tc_recycle_frame_loop_00db
 23135                                  .L_tc_recycle_frame_done_00db:
 23136 0001155E 4889EC                  	mov rsp, rbp	; point to last argument
 23137 00011561 5D                      	pop rbp
 23138 00011562 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23139 00011565 C9                      	leave
 23140 00011566 C21800                  	ret AND_KILL_FRAME(1)
 23141                                  .L_lambda_simple_end_008f:	; new closure is in rax
 23142 00011569 C9                      	leave
 23143 0001156A C21800                  	ret AND_KILL_FRAME(1)
 23144                                  .L_lambda_simple_end_008c:	; new closure is in rax
 23145 0001156D 803804                  	cmp byte [rax], T_closure
 23146 00011570 0F85B2540000            	jne L_error_non_closure
 23147 00011576 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23148 00011579 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23149 0001157C 48890425[14140000]      	mov qword [free_var_95], rax
 23150 00011584 48B8-                   	mov rax, sob_void
 23150 00011586 [0000000000000000] 
 23151                                  
 23152 0001158E 4889C7                  	mov rdi, rax
 23153 00011591 E890570000              	call print_sexpr_if_not_void
 23154                                  	; preparing a non-tail-call
 23155 00011596 48B8-                   	mov rax, L_constants + 1993
 23155 00011598 [C907000000000000] 
 23156 000115A0 50                      	push rax
 23157 000115A1 6A01                    	push 1	; arg count
 23158 000115A3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23159 000115A8 E824550000              	call malloc
 23160 000115AD 50                      	push rax
 23161 000115AE BF00000000              	mov rdi, 8 * 0	; new rib
 23162 000115B3 E819550000              	call malloc
 23163 000115B8 50                      	push rax
 23164 000115B9 BF08000000              	mov rdi, 8 * 1	; extended env
 23165 000115BE E80E550000              	call malloc
 23166 000115C3 488B7D10                	mov rdi, ENV
 23167 000115C7 BE00000000              	mov rsi, 0
 23168 000115CC BA01000000              	mov rdx, 1
 23169                                  .L_lambda_simple_env_loop_0090:	; ext_env[i + 1] <-- env[i]
 23170 000115D1 4883FE00                	cmp rsi, 0
 23171 000115D5 7410                    	je .L_lambda_simple_env_end_0090
 23172 000115D7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23173 000115DB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23174 000115DF 48FFC6                  	inc rsi
 23175 000115E2 48FFC2                  	inc rdx
 23176 000115E5 EBEA                    	jmp .L_lambda_simple_env_loop_0090
 23177                                  .L_lambda_simple_env_end_0090:
 23178 000115E7 5B                      	pop rbx
 23179 000115E8 BE00000000              	mov rsi, 0
 23180                                  .L_lambda_simple_params_loop_0090:	; copy params
 23181 000115ED 4883FE00                	cmp rsi, 0
 23182 000115F1 740E                    	je .L_lambda_simple_params_end_0090
 23183 000115F3 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23184 000115F8 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23185 000115FC 48FFC6                  	inc rsi
 23186 000115FF EBEC                    	jmp .L_lambda_simple_params_loop_0090
 23187                                  .L_lambda_simple_params_end_0090:
 23188 00011601 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23189 00011604 4889C3                  	mov rbx, rax
 23190 00011607 58                      	pop rax
 23191 00011608 C60004                  	mov byte [rax], T_closure
 23192 0001160B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23193 0001160F 48C74009[1C160100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0090
 23194 00011617 E918040000              	jmp .L_lambda_simple_end_0090
 23195                                  .L_lambda_simple_code_0090:	; lambda-simple body
 23196 0001161C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23197 00011622 740B                    	je .L_lambda_simple_arity_check_ok_0090
 23198 00011624 FF742410                	push qword [rsp + 8 * 2]
 23199 00011628 6A01                    	push 1
 23200 0001162A E95B540000              	jmp L_error_incorrect_arity_simple
 23201                                  .L_lambda_simple_arity_check_ok_0090:
 23202 0001162F C8000000                	enter 0, 0
 23203 00011633 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 23204 00011637 488903                  	mov qword [rbx], rax
 23205                                  
 23206 0001163A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23207 0001163F E88D540000              	call malloc
 23208 00011644 50                      	push rax
 23209 00011645 BF08000000              	mov rdi, 8 * 1	; new rib
 23210 0001164A E882540000              	call malloc
 23211 0001164F 50                      	push rax
 23212 00011650 BF10000000              	mov rdi, 8 * 2	; extended env
 23213 00011655 E877540000              	call malloc
 23214 0001165A 488B7D10                	mov rdi, ENV
 23215 0001165E BE00000000              	mov rsi, 0
 23216 00011663 BA01000000              	mov rdx, 1
 23217                                  .L_lambda_simple_env_loop_0091:	; ext_env[i + 1] <-- env[i]
 23218 00011668 4883FE01                	cmp rsi, 1
 23219 0001166C 7410                    	je .L_lambda_simple_env_end_0091
 23220 0001166E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23221 00011672 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23222 00011676 48FFC6                  	inc rsi
 23223 00011679 48FFC2                  	inc rdx
 23224 0001167C EBEA                    	jmp .L_lambda_simple_env_loop_0091
 23225                                  .L_lambda_simple_env_end_0091:
 23226 0001167E 5B                      	pop rbx
 23227 0001167F BE00000000              	mov rsi, 0
 23228                                  .L_lambda_simple_params_loop_0091:	; copy params
 23229 00011684 4883FE01                	cmp rsi, 1
 23230 00011688 740E                    	je .L_lambda_simple_params_end_0091
 23231 0001168A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23232 0001168F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23233 00011693 48FFC6                  	inc rsi
 23234 00011696 EBEC                    	jmp .L_lambda_simple_params_loop_0091
 23235                                  .L_lambda_simple_params_end_0091:
 23236 00011698 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23237 0001169B 4889C3                  	mov rbx, rax
 23238 0001169E 58                      	pop rax
 23239 0001169F C60004                  	mov byte [rax], T_closure
 23240 000116A2 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23241 000116A6 48C74009[B3160100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0091
 23242 000116AE E973020000              	jmp .L_lambda_simple_end_0091
 23243                                  .L_lambda_simple_code_0091:	; lambda-simple body
 23244 000116B3 48837C241002            	cmp qword [rsp + 8 * 2], 2
 23245 000116B9 740B                    	je .L_lambda_simple_arity_check_ok_0091
 23246 000116BB FF742410                	push qword [rsp + 8 * 2]
 23247 000116BF 6A02                    	push 2
 23248 000116C1 E9C4530000              	jmp L_error_incorrect_arity_simple
 23249                                  .L_lambda_simple_arity_check_ok_0091:
 23250 000116C6 C8000000                	enter 0, 0
 23251                                  	; preparing a non-tail-call
 23252 000116CA 488B4520                	mov rax, PARAM(0)	; param s
 23253 000116CE 50                      	push rax
 23254 000116CF 6A01                    	push 1	; arg count
 23255 000116D1 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 23256 000116D9 803805                  	cmp byte [rax], T_undefined
 23257 000116DC 0F84C2520000            	je L_error_fvar_undefined
 23258 000116E2 803804                  	cmp byte [rax], T_closure
 23259 000116E5 0F853D530000            	jne L_error_non_closure
 23260 000116EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 23261 000116EE FF5009                  	call SOB_CLOSURE_CODE(rax)
 23262 000116F1 483D[02000000]          	cmp rax, sob_boolean_false
 23263 000116F7 746E                    	je .L_if_else_0076
 23264                                  	; preparing a tail-call
 23265 000116F9 48B8-                   	mov rax, L_constants + 4
 23265 000116FB [0400000000000000] 
 23266 00011703 50                      	push rax
 23267 00011704 488B4528                	mov rax, PARAM(1)	; param i
 23268 00011708 50                      	push rax
 23269 00011709 6A02                    	push 2	; arg count
 23270 0001170B 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 23271 00011713 803805                  	cmp byte [rax], T_undefined
 23272 00011716 0F8488520000            	je L_error_fvar_undefined
 23273 0001171C 803804                  	cmp byte [rax], T_closure
 23274 0001171F 0F8503530000            	jne L_error_non_closure
 23275 00011725 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23276 00011728 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 23277 0001172B FF7500                  	push qword[rbp]
 23278 0001172E 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 23279 00011733 48895D10                	mov qword[rbp + 8*2],rbx
 23280 00011737 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 23281 0001173F BF00000000              	mov rdi,0
 23282 00011744 EB00                    	jmp .L_tc_recycle_frame_loop_00dc
 23283                                  .L_tc_recycle_frame_loop_00dc:
 23284 00011746 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 23285 0001174A 740F                    	je .L_tc_recycle_frame_done_00dc
 23286 0001174C 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 23287 00011751 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 23288 00011756 48FFC7                  	inc rdi
 23289 00011759 EBEB                    	jmp .L_tc_recycle_frame_loop_00dc
 23290                                  .L_tc_recycle_frame_done_00dc:
 23291 0001175B 4889EC                  	mov rsp, rbp	; point to last argument
 23292 0001175E 5D                      	pop rbp
 23293 0001175F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23294 00011762 E9BB010000              	jmp .L_if_end_0076
 23295                                  .L_if_else_0076:
 23296                                  	; preparing a tail-call
 23297                                  	; preparing a non-tail-call
 23298                                  	; preparing a non-tail-call
 23299 00011767 48B8-                   	mov rax, L_constants + 2270
 23299 00011769 [DE08000000000000] 
 23300 00011771 50                      	push rax
 23301 00011772 488B4528                	mov rax, PARAM(1)	; param i
 23302 00011776 50                      	push rax
 23303 00011777 6A02                    	push 2	; arg count
 23304 00011779 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 23305 00011781 803805                  	cmp byte [rax], T_undefined
 23306 00011784 0F841A520000            	je L_error_fvar_undefined
 23307 0001178A 803804                  	cmp byte [rax], T_closure
 23308 0001178D 0F8595520000            	jne L_error_non_closure
 23309 00011793 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23310 00011796 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23311 00011799 50                      	push rax
 23312                                  	; preparing a non-tail-call
 23313 0001179A 488B4520                	mov rax, PARAM(0)	; param s
 23314 0001179E 50                      	push rax
 23315 0001179F 6A01                    	push 1	; arg count
 23316 000117A1 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 23317 000117A9 803805                  	cmp byte [rax], T_undefined
 23318 000117AC 0F84F2510000            	je L_error_fvar_undefined
 23319 000117B2 803804                  	cmp byte [rax], T_closure
 23320 000117B5 0F856D520000            	jne L_error_non_closure
 23321 000117BB FF7001                  	push SOB_CLOSURE_ENV(rax)
 23322 000117BE FF5009                  	call SOB_CLOSURE_CODE(rax)
 23323 000117C1 50                      	push rax
 23324 000117C2 6A02                    	push 2	; arg count
 23325 000117C4 488B4510                	mov rax, ENV
 23326 000117C8 488B00                  	mov rax, qword [rax + 8 * 0]
 23327 000117CB 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23328 000117CE 488B00                  	mov rax, qword [rax]
 23329 000117D1 803804                  	cmp byte [rax], T_closure
 23330 000117D4 0F854E520000            	jne L_error_non_closure
 23331 000117DA FF7001                  	push SOB_CLOSURE_ENV(rax)
 23332 000117DD FF5009                  	call SOB_CLOSURE_CODE(rax)
 23333 000117E0 50                      	push rax
 23334 000117E1 6A01                    	push 1	; arg count
 23335 000117E3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23336 000117E8 E8E4520000              	call malloc
 23337 000117ED 50                      	push rax
 23338 000117EE BF10000000              	mov rdi, 8 * 2	; new rib
 23339 000117F3 E8D9520000              	call malloc
 23340 000117F8 50                      	push rax
 23341 000117F9 BF18000000              	mov rdi, 8 * 3	; extended env
 23342 000117FE E8CE520000              	call malloc
 23343 00011803 488B7D10                	mov rdi, ENV
 23344 00011807 BE00000000              	mov rsi, 0
 23345 0001180C BA01000000              	mov rdx, 1
 23346                                  .L_lambda_simple_env_loop_0092:	; ext_env[i + 1] <-- env[i]
 23347 00011811 4883FE02                	cmp rsi, 2
 23348 00011815 7410                    	je .L_lambda_simple_env_end_0092
 23349 00011817 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23350 0001181B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23351 0001181F 48FFC6                  	inc rsi
 23352 00011822 48FFC2                  	inc rdx
 23353 00011825 EBEA                    	jmp .L_lambda_simple_env_loop_0092
 23354                                  .L_lambda_simple_env_end_0092:
 23355 00011827 5B                      	pop rbx
 23356 00011828 BE00000000              	mov rsi, 0
 23357                                  .L_lambda_simple_params_loop_0092:	; copy params
 23358 0001182D 4883FE02                	cmp rsi, 2
 23359 00011831 740E                    	je .L_lambda_simple_params_end_0092
 23360 00011833 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23361 00011838 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23362 0001183C 48FFC6                  	inc rsi
 23363 0001183F EBEC                    	jmp .L_lambda_simple_params_loop_0092
 23364                                  .L_lambda_simple_params_end_0092:
 23365 00011841 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23366 00011844 4889C3                  	mov rbx, rax
 23367 00011847 58                      	pop rax
 23368 00011848 C60004                  	mov byte [rax], T_closure
 23369 0001184B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23370 0001184F 48C74009[5C180100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0092
 23371 00011857 E980000000              	jmp .L_lambda_simple_end_0092
 23372                                  .L_lambda_simple_code_0092:	; lambda-simple body
 23373 0001185C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23374 00011862 740B                    	je .L_lambda_simple_arity_check_ok_0092
 23375 00011864 FF742410                	push qword [rsp + 8 * 2]
 23376 00011868 6A01                    	push 1
 23377 0001186A E91B520000              	jmp L_error_incorrect_arity_simple
 23378                                  .L_lambda_simple_arity_check_ok_0092:
 23379 0001186F C8000000                	enter 0, 0
 23380                                  	; preparing a non-tail-call
 23381                                  	; preparing a non-tail-call
 23382 00011873 488B4510                	mov rax, ENV
 23383 00011877 488B00                  	mov rax, qword [rax + 8 * 0]
 23384 0001187A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var s
 23385 0001187D 50                      	push rax
 23386 0001187E 6A01                    	push 1	; arg count
 23387 00011880 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 23388 00011888 803805                  	cmp byte [rax], T_undefined
 23389 0001188B 0F8413510000            	je L_error_fvar_undefined
 23390 00011891 803804                  	cmp byte [rax], T_closure
 23391 00011894 0F858E510000            	jne L_error_non_closure
 23392 0001189A FF7001                  	push SOB_CLOSURE_ENV(rax)
 23393 0001189D FF5009                  	call SOB_CLOSURE_CODE(rax)
 23394 000118A0 50                      	push rax
 23395 000118A1 488B4510                	mov rax, ENV
 23396 000118A5 488B00                  	mov rax, qword [rax + 8 * 0]
 23397 000118A8 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 23398 000118AC 50                      	push rax
 23399 000118AD 488B4520                	mov rax, PARAM(0)	; param str
 23400 000118B1 50                      	push rax
 23401 000118B2 6A03                    	push 3	; arg count
 23402 000118B4 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 23403 000118BC 803805                  	cmp byte [rax], T_undefined
 23404 000118BF 0F84DF500000            	je L_error_fvar_undefined
 23405 000118C5 803804                  	cmp byte [rax], T_closure
 23406 000118C8 0F855A510000            	jne L_error_non_closure
 23407 000118CE FF7001                  	push SOB_CLOSURE_ENV(rax)
 23408 000118D1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23409                                  
 23410 000118D4 488B4520                	mov rax, PARAM(0)	; param str
 23411 000118D8 C9                      	leave
 23412 000118D9 C21800                  	ret AND_KILL_FRAME(1)
 23413                                  .L_lambda_simple_end_0092:	; new closure is in rax
 23414 000118DC 803804                  	cmp byte [rax], T_closure
 23415 000118DF 0F8543510000            	jne L_error_non_closure
 23416 000118E5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23417 000118E8 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 23418 000118EB FF7500                  	push qword[rbp]
 23419 000118EE 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 23420 000118F3 48895D10                	mov qword[rbp + 8*2],rbx
 23421 000118F7 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 23422 000118FF BF00000000              	mov rdi,0
 23423 00011904 EB00                    	jmp .L_tc_recycle_frame_loop_00dd
 23424                                  .L_tc_recycle_frame_loop_00dd:
 23425 00011906 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 23426 0001190A 740F                    	je .L_tc_recycle_frame_done_00dd
 23427 0001190C 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 23428 00011911 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 23429 00011916 48FFC7                  	inc rdi
 23430 00011919 EBEB                    	jmp .L_tc_recycle_frame_loop_00dd
 23431                                  .L_tc_recycle_frame_done_00dd:
 23432 0001191B 4889EC                  	mov rsp, rbp	; point to last argument
 23433 0001191E 5D                      	pop rbp
 23434 0001191F FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23435                                  .L_if_end_0076:
 23436 00011922 C9                      	leave
 23437 00011923 C22000                  	ret AND_KILL_FRAME(2)
 23438                                  .L_lambda_simple_end_0091:	; new closure is in rax
 23439 00011926 50                      	push rax
 23440 00011927 488B4520                	mov rax, PARAM(0)	; param run
 23441 0001192B 8F00                    	pop qword [rax]
 23442 0001192D 48B8-                   	mov rax, sob_void
 23442 0001192F [0000000000000000] 
 23443                                  
 23444 00011937 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23445 0001193C E890510000              	call malloc
 23446 00011941 50                      	push rax
 23447 00011942 BF08000000              	mov rdi, 8 * 1	; new rib
 23448 00011947 E885510000              	call malloc
 23449 0001194C 50                      	push rax
 23450 0001194D BF10000000              	mov rdi, 8 * 2	; extended env
 23451 00011952 E87A510000              	call malloc
 23452 00011957 488B7D10                	mov rdi, ENV
 23453 0001195B BE00000000              	mov rsi, 0
 23454 00011960 BA01000000              	mov rdx, 1
 23455                                  .L_lambda_simple_env_loop_0093:	; ext_env[i + 1] <-- env[i]
 23456 00011965 4883FE01                	cmp rsi, 1
 23457 00011969 7410                    	je .L_lambda_simple_env_end_0093
 23458 0001196B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23459 0001196F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23460 00011973 48FFC6                  	inc rsi
 23461 00011976 48FFC2                  	inc rdx
 23462 00011979 EBEA                    	jmp .L_lambda_simple_env_loop_0093
 23463                                  .L_lambda_simple_env_end_0093:
 23464 0001197B 5B                      	pop rbx
 23465 0001197C BE00000000              	mov rsi, 0
 23466                                  .L_lambda_simple_params_loop_0093:	; copy params
 23467 00011981 4883FE01                	cmp rsi, 1
 23468 00011985 740E                    	je .L_lambda_simple_params_end_0093
 23469 00011987 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23470 0001198C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23471 00011990 48FFC6                  	inc rsi
 23472 00011993 EBEC                    	jmp .L_lambda_simple_params_loop_0093
 23473                                  .L_lambda_simple_params_end_0093:
 23474 00011995 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23475 00011998 4889C3                  	mov rbx, rax
 23476 0001199B 58                      	pop rax
 23477 0001199C C60004                  	mov byte [rax], T_closure
 23478 0001199F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23479 000119A3 48C74009[B0190100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0093
 23480 000119AB E980000000              	jmp .L_lambda_simple_end_0093
 23481                                  .L_lambda_simple_code_0093:	; lambda-simple body
 23482 000119B0 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23483 000119B6 740B                    	je .L_lambda_simple_arity_check_ok_0093
 23484 000119B8 FF742410                	push qword [rsp + 8 * 2]
 23485 000119BC 6A01                    	push 1
 23486 000119BE E9C7500000              	jmp L_error_incorrect_arity_simple
 23487                                  .L_lambda_simple_arity_check_ok_0093:
 23488 000119C3 C8000000                	enter 0, 0
 23489                                  	; preparing a tail-call
 23490 000119C7 48B8-                   	mov rax, L_constants + 2135
 23490 000119C9 [5708000000000000] 
 23491 000119D1 50                      	push rax
 23492 000119D2 488B4520                	mov rax, PARAM(0)	; param s
 23493 000119D6 50                      	push rax
 23494 000119D7 6A02                    	push 2	; arg count
 23495 000119D9 488B4510                	mov rax, ENV
 23496 000119DD 488B00                  	mov rax, qword [rax + 8 * 0]
 23497 000119E0 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23498 000119E3 488B00                  	mov rax, qword [rax]
 23499 000119E6 803804                  	cmp byte [rax], T_closure
 23500 000119E9 0F8539500000            	jne L_error_non_closure
 23501 000119EF FF7001                  	push SOB_CLOSURE_ENV(rax)
 23502 000119F2 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 23503 000119F5 FF7500                  	push qword[rbp]
 23504 000119F8 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 23505 000119FD 48895D10                	mov qword[rbp + 8*2],rbx
 23506 00011A01 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 23507 00011A09 BF00000000              	mov rdi,0
 23508 00011A0E EB00                    	jmp .L_tc_recycle_frame_loop_00de
 23509                                  .L_tc_recycle_frame_loop_00de:
 23510 00011A10 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 23511 00011A14 740F                    	je .L_tc_recycle_frame_done_00de
 23512 00011A16 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 23513 00011A1B 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 23514 00011A20 48FFC7                  	inc rdi
 23515 00011A23 EBEB                    	jmp .L_tc_recycle_frame_loop_00de
 23516                                  .L_tc_recycle_frame_done_00de:
 23517 00011A25 4889EC                  	mov rsp, rbp	; point to last argument
 23518 00011A28 5D                      	pop rbp
 23519 00011A29 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23520 00011A2C C9                      	leave
 23521 00011A2D C21800                  	ret AND_KILL_FRAME(1)
 23522                                  .L_lambda_simple_end_0093:	; new closure is in rax
 23523 00011A30 C9                      	leave
 23524 00011A31 C21800                  	ret AND_KILL_FRAME(1)
 23525                                  .L_lambda_simple_end_0090:	; new closure is in rax
 23526 00011A34 803804                  	cmp byte [rax], T_closure
 23527 00011A37 0F85EB4F0000            	jne L_error_non_closure
 23528 00011A3D FF7001                  	push SOB_CLOSURE_ENV(rax)
 23529 00011A40 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23530 00011A43 48890425[03140000]      	mov qword [free_var_94], rax
 23531 00011A4B 48B8-                   	mov rax, sob_void
 23531 00011A4D [0000000000000000] 
 23532                                  
 23533 00011A55 4889C7                  	mov rdi, rax
 23534 00011A58 E8C9520000              	call print_sexpr_if_not_void
 23535 00011A5D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23536 00011A62 E86A500000              	call malloc
 23537 00011A67 50                      	push rax
 23538 00011A68 BF00000000              	mov rdi, 8 * 0	; new rib
 23539 00011A6D E85F500000              	call malloc
 23540 00011A72 50                      	push rax
 23541 00011A73 BF08000000              	mov rdi, 8 * 1	; extended env
 23542 00011A78 E854500000              	call malloc
 23543 00011A7D 488B7D10                	mov rdi, ENV
 23544 00011A81 BE00000000              	mov rsi, 0
 23545 00011A86 BA01000000              	mov rdx, 1
 23546                                  .L_lambda_opt_env_loop_0016:	; ext_env[i + 1] <-- env[i]
 23547 00011A8B 4883FE00                	cmp rsi, 0
 23548 00011A8F 7410                    	je .L_lambda_opt_env_end_0016
 23549 00011A91 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23550 00011A95 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23551 00011A99 48FFC6                  	inc rsi
 23552 00011A9C 48FFC2                  	inc rdx
 23553 00011A9F EBEA                    	jmp .L_lambda_opt_env_loop_0016
 23554                                  .L_lambda_opt_env_end_0016:
 23555 00011AA1 5B                      	pop rbx
 23556 00011AA2 BE00000000              	mov rsi, 0
 23557                                  .L_lambda_opt_params_loop_0016:	; copy params
 23558 00011AA7 4883FE00                	cmp rsi, 0
 23559 00011AAB 740E                    	je .L_lambda_opt_params_end_0016
 23560 00011AAD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23561 00011AB2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23562 00011AB6 48FFC6                  	inc rsi
 23563 00011AB9 EBEC                    	jmp .L_lambda_opt_params_loop_0016
 23564                                  .L_lambda_opt_params_end_0016:
 23565 00011ABB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23566 00011ABE 4889C3                  	mov rbx, rax
 23567 00011AC1 58                      	pop rax
 23568 00011AC2 C60004                  	mov byte [rax], T_closure
 23569 00011AC5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23570 00011AC9 48C74009[D61A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0016
 23571 00011AD1 E9B2010000              	jmp .L_lambda_opt_end_0016
 23572                                  .L_lambda_opt_code_0016:	; lambda-opt body
 23573 00011AD6 48837C241000            	cmp qword [rsp + 8 * 2], 0
 23574 00011ADC 7411                    	je .L_lambda_opt_arity_check_exact_0016
 23575 00011ADE 0F8FA6000000            	jg .L_lambda_opt_arity_check_more_0016
 23576 00011AE4 FF742410                	push qword [rsp + 8 * 2]
 23577 00011AE8 6A00                    	push 0
 23578 00011AEA E9AF4F0000              	jmp L_error_incorrect_arity_opt
 23579                                  .L_lambda_opt_arity_check_exact_0016:
 23580 00011AEF 4883EC08                	sub rsp, 8
 23581 00011AF3 488B442408              	mov rax, qword[rsp + 8 *1]
 23582 00011AF8 48890424                	mov qword[rsp], rax  
 23583 00011AFC 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 23584 00011B01 4889442408              	mov qword[rsp + 8 * 1], rax
 23585 00011B06 B801000000              	mov rax, 1
 23586 00011B0B 4889442410              	mov qword[rsp + 8 *2], rax
 23587 00011B10 48B8-                   	mov rax, sob_nil
 23587 00011B12 [0100000000000000] 
 23588 00011B1A 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 23589 00011B1F C8000000                	enter 0, 0
 23590                                  	; preparing a tail-call
 23591 00011B23 488B4520                	mov rax, PARAM(0)	; param s
 23592 00011B27 50                      	push rax
 23593 00011B28 6A01                    	push 1	; arg count
 23594 00011B2A 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 23595 00011B32 803805                  	cmp byte [rax], T_undefined
 23596 00011B35 0F84694E0000            	je L_error_fvar_undefined
 23597 00011B3B 803804                  	cmp byte [rax], T_closure
 23598 00011B3E 0F85E44E0000            	jne L_error_non_closure
 23599 00011B44 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23600 00011B47 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 23601 00011B4A FF7500                  	push qword[rbp]
 23602 00011B4D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 23603 00011B52 48895D10                	mov qword[rbp + 8*2],rbx
 23604 00011B56 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 23605 00011B5E BF00000000              	mov rdi,0
 23606 00011B63 EB00                    	jmp .L_tc_recycle_frame_loop_00e0
 23607                                  .L_tc_recycle_frame_loop_00e0:
 23608 00011B65 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 23609 00011B69 740F                    	je .L_tc_recycle_frame_done_00e0
 23610 00011B6B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 23611 00011B70 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 23612 00011B75 48FFC7                  	inc rdi
 23613 00011B78 EBEB                    	jmp .L_tc_recycle_frame_loop_00e0
 23614                                  .L_tc_recycle_frame_done_00e0:
 23615 00011B7A 4889EC                  	mov rsp, rbp	; point to last argument
 23616 00011B7D 5D                      	pop rbp
 23617 00011B7E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23618 00011B81 C9                      	leave
 23619 00011B82 C21800                  	ret AND_KILL_FRAME(1)
 23620 00011B85 E9FE000000              	jmp .L_lambda_opt_end_0016	; new closure is in rax
 23621                                  .L_lambda_opt_arity_check_more_0016:
 23622 00011B8A 488B442410              	mov rax, qword[rsp + 2 * 8]
 23623 00011B8F 4889C7                  	mov rdi, rax
 23624 00011B92 49B9-                   	mov r9, sob_nil
 23624 00011B94 [0100000000000000] 
 23625 00011B9C 4C8B442410              	mov r8, qword[rsp+2*8]
 23626                                  .L_lambda_opt_stack_shrink_loop_0016:
 23627 00011BA1 4983F800                	cmp r8, 0
 23628 00011BA5 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0016
 23629 00011BA7 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 23630 00011BAC BF11000000              	mov rdi, 1+8+8	;for pair
 23631 00011BB1 E81B4F0000              	call malloc	 ;to create the pair in the stack
 23632 00011BB6 C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 23633 00011BB9 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 23634 00011BBD 4C894809                 	mov qword[rax+1+8],r9
 23635 00011BC1 4989C1                  	mov r9 , rax	 ; for the recursion 
 23636 00011BC4 49FFC8                  	dec r8
 23637 00011BC7 EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0016
 23638                                  .L_lambda_opt_stack_shrink_loop_exit_0016:
 23639 00011BC9 488B442410              	mov rax, qword[rsp + 2 * 8]
 23640 00011BCE BF01000000              	mov rdi, 1
 23641 00011BD3 4829F8                  	sub rax, rdi
 23642 00011BD6 4889C7                  	mov rdi, rax
 23643 00011BD9 486BC008                	imul rax,8
 23644 00011BDD 4801C4                  	add rsp, rax
 23645 00011BE0 4889E0                  	mov rax, rsp
 23646 00011BE3 4989F8                  	mov r8, rdi
 23647 00011BE6 4D6BC008                	imul r8, 8
 23648 00011BEA 4C29C0                  	sub rax, r8
 23649 00011BED 4989C2                  	mov r10, rax	; holds the original ret in the stack
 23650 00011BF0 4983C218                	add r10, 8*3
 23651 00011BF4 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 23652 00011BF8 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 23653 00011BFB 4D6BC008                	imul r8,8
 23654 00011BFF 4C01C0                  	add rax, r8
 23655 00011C02 4C8908                  	mov qword[rax] ,r9
 23656 00011C05 4983EA18                 	sub r10, 8*3
 23657 00011C09 48C744241001000000      	mov qword [rsp+2*8], 1
 23658 00011C12 498B4208                	mov rax, qword[r10 + 1 * 8]
 23659 00011C16 4889442408              	mov qword[rsp + 1*8] ,rax
 23660 00011C1B 498B02                  	mov rax, qword[r10]
 23661 00011C1E 48890424                	mov qword[rsp], rax
 23662 00011C22 C8000000                	enter 0, 0
 23663                                  	; preparing a tail-call
 23664 00011C26 488B4520                	mov rax, PARAM(0)	; param s
 23665 00011C2A 50                      	push rax
 23666 00011C2B 6A01                    	push 1	; arg count
 23667 00011C2D 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 23668 00011C35 803805                  	cmp byte [rax], T_undefined
 23669 00011C38 0F84664D0000            	je L_error_fvar_undefined
 23670 00011C3E 803804                  	cmp byte [rax], T_closure
 23671 00011C41 0F85E14D0000            	jne L_error_non_closure
 23672 00011C47 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23673 00011C4A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 23674 00011C4D FF7500                  	push qword[rbp]
 23675 00011C50 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 23676 00011C55 48895D10                	mov qword[rbp + 8*2],rbx
 23677 00011C59 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 23678 00011C61 BF00000000              	mov rdi,0
 23679 00011C66 EB00                    	jmp .L_tc_recycle_frame_loop_00df
 23680                                  .L_tc_recycle_frame_loop_00df:
 23681 00011C68 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 23682 00011C6C 740F                    	je .L_tc_recycle_frame_done_00df
 23683 00011C6E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 23684 00011C73 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 23685 00011C78 48FFC7                  	inc rdi
 23686 00011C7B EBEB                    	jmp .L_tc_recycle_frame_loop_00df
 23687                                  .L_tc_recycle_frame_done_00df:
 23688 00011C7D 4889EC                  	mov rsp, rbp	; point to last argument
 23689 00011C80 5D                      	pop rbp
 23690 00011C81 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23691 00011C84 C9                      	leave
 23692 00011C85 C21800                  	ret AND_KILL_FRAME(1)
 23693                                  .L_lambda_opt_end_0016:	; new closure is in rax
 23694 00011C88 48890425[11170000]      	mov qword [free_var_140], rax
 23695 00011C90 48B8-                   	mov rax, sob_void
 23695 00011C92 [0000000000000000] 
 23696                                  
 23697 00011C9A 4889C7                  	mov rdi, rax
 23698 00011C9D E884500000              	call print_sexpr_if_not_void
 23699                                  	; preparing a non-tail-call
 23700 00011CA2 48B8-                   	mov rax, L_constants + 1993
 23700 00011CA4 [C907000000000000] 
 23701 00011CAC 50                      	push rax
 23702 00011CAD 6A01                    	push 1	; arg count
 23703 00011CAF BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23704 00011CB4 E8184E0000              	call malloc
 23705 00011CB9 50                      	push rax
 23706 00011CBA BF00000000              	mov rdi, 8 * 0	; new rib
 23707 00011CBF E80D4E0000              	call malloc
 23708 00011CC4 50                      	push rax
 23709 00011CC5 BF08000000              	mov rdi, 8 * 1	; extended env
 23710 00011CCA E8024E0000              	call malloc
 23711 00011CCF 488B7D10                	mov rdi, ENV
 23712 00011CD3 BE00000000              	mov rsi, 0
 23713 00011CD8 BA01000000              	mov rdx, 1
 23714                                  .L_lambda_simple_env_loop_0094:	; ext_env[i + 1] <-- env[i]
 23715 00011CDD 4883FE00                	cmp rsi, 0
 23716 00011CE1 7410                    	je .L_lambda_simple_env_end_0094
 23717 00011CE3 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23718 00011CE7 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23719 00011CEB 48FFC6                  	inc rsi
 23720 00011CEE 48FFC2                  	inc rdx
 23721 00011CF1 EBEA                    	jmp .L_lambda_simple_env_loop_0094
 23722                                  .L_lambda_simple_env_end_0094:
 23723 00011CF3 5B                      	pop rbx
 23724 00011CF4 BE00000000              	mov rsi, 0
 23725                                  .L_lambda_simple_params_loop_0094:	; copy params
 23726 00011CF9 4883FE00                	cmp rsi, 0
 23727 00011CFD 740E                    	je .L_lambda_simple_params_end_0094
 23728 00011CFF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23729 00011D04 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23730 00011D08 48FFC6                  	inc rsi
 23731 00011D0B EBEC                    	jmp .L_lambda_simple_params_loop_0094
 23732                                  .L_lambda_simple_params_end_0094:
 23733 00011D0D 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23734 00011D10 4889C3                  	mov rbx, rax
 23735 00011D13 58                      	pop rax
 23736 00011D14 C60004                  	mov byte [rax], T_closure
 23737 00011D17 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23738 00011D1B 48C74009[281D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0094
 23739 00011D23 E90E030000              	jmp .L_lambda_simple_end_0094
 23740                                  .L_lambda_simple_code_0094:	; lambda-simple body
 23741 00011D28 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23742 00011D2E 740B                    	je .L_lambda_simple_arity_check_ok_0094
 23743 00011D30 FF742410                	push qword [rsp + 8 * 2]
 23744 00011D34 6A01                    	push 1
 23745 00011D36 E94F4D0000              	jmp L_error_incorrect_arity_simple
 23746                                  .L_lambda_simple_arity_check_ok_0094:
 23747 00011D3B C8000000                	enter 0, 0
 23748 00011D3F 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 23749 00011D43 488903                  	mov qword [rbx], rax
 23750                                  
 23751 00011D46 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23752 00011D4B E8814D0000              	call malloc
 23753 00011D50 50                      	push rax
 23754 00011D51 BF08000000              	mov rdi, 8 * 1	; new rib
 23755 00011D56 E8764D0000              	call malloc
 23756 00011D5B 50                      	push rax
 23757 00011D5C BF10000000              	mov rdi, 8 * 2	; extended env
 23758 00011D61 E86B4D0000              	call malloc
 23759 00011D66 488B7D10                	mov rdi, ENV
 23760 00011D6A BE00000000              	mov rsi, 0
 23761 00011D6F BA01000000              	mov rdx, 1
 23762                                  .L_lambda_simple_env_loop_0095:	; ext_env[i + 1] <-- env[i]
 23763 00011D74 4883FE01                	cmp rsi, 1
 23764 00011D78 7410                    	je .L_lambda_simple_env_end_0095
 23765 00011D7A 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23766 00011D7E 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23767 00011D82 48FFC6                  	inc rsi
 23768 00011D85 48FFC2                  	inc rdx
 23769 00011D88 EBEA                    	jmp .L_lambda_simple_env_loop_0095
 23770                                  .L_lambda_simple_env_end_0095:
 23771 00011D8A 5B                      	pop rbx
 23772 00011D8B BE00000000              	mov rsi, 0
 23773                                  .L_lambda_simple_params_loop_0095:	; copy params
 23774 00011D90 4883FE01                	cmp rsi, 1
 23775 00011D94 740E                    	je .L_lambda_simple_params_end_0095
 23776 00011D96 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23777 00011D9B 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23778 00011D9F 48FFC6                  	inc rsi
 23779 00011DA2 EBEC                    	jmp .L_lambda_simple_params_loop_0095
 23780                                  .L_lambda_simple_params_end_0095:
 23781 00011DA4 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23782 00011DA7 4889C3                  	mov rbx, rax
 23783 00011DAA 58                      	pop rax
 23784 00011DAB C60004                  	mov byte [rax], T_closure
 23785 00011DAE 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23786 00011DB2 48C74009[BF1D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0095
 23787 00011DBA E941010000              	jmp .L_lambda_simple_end_0095
 23788                                  .L_lambda_simple_code_0095:	; lambda-simple body
 23789 00011DBF 48837C241003            	cmp qword [rsp + 8 * 2], 3
 23790 00011DC5 740B                    	je .L_lambda_simple_arity_check_ok_0095
 23791 00011DC7 FF742410                	push qword [rsp + 8 * 2]
 23792 00011DCB 6A03                    	push 3
 23793 00011DCD E9B84C0000              	jmp L_error_incorrect_arity_simple
 23794                                  .L_lambda_simple_arity_check_ok_0095:
 23795 00011DD2 C8000000                	enter 0, 0
 23796                                  	; preparing a non-tail-call
 23797 00011DD6 488B4530                	mov rax, PARAM(2)	; param n
 23798 00011DDA 50                      	push rax
 23799 00011DDB 488B4528                	mov rax, PARAM(1)	; param i
 23800 00011DDF 50                      	push rax
 23801 00011DE0 6A02                    	push 2	; arg count
 23802 00011DE2 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 23803 00011DEA 803805                  	cmp byte [rax], T_undefined
 23804 00011DED 0F84B14B0000            	je L_error_fvar_undefined
 23805 00011DF3 803804                  	cmp byte [rax], T_closure
 23806 00011DF6 0F852C4C0000            	jne L_error_non_closure
 23807 00011DFC FF7001                  	push SOB_CLOSURE_ENV(rax)
 23808 00011DFF FF5009                  	call SOB_CLOSURE_CODE(rax)
 23809 00011E02 483D[02000000]          	cmp rax, sob_boolean_false
 23810 00011E08 0F84E4000000            	je .L_if_else_0077
 23811                                  	; preparing a tail-call
 23812                                  	; preparing a non-tail-call
 23813 00011E0E 488B4530                	mov rax, PARAM(2)	; param n
 23814 00011E12 50                      	push rax
 23815                                  	; preparing a non-tail-call
 23816 00011E13 48B8-                   	mov rax, L_constants + 2270
 23816 00011E15 [DE08000000000000] 
 23817 00011E1D 50                      	push rax
 23818 00011E1E 488B4528                	mov rax, PARAM(1)	; param i
 23819 00011E22 50                      	push rax
 23820 00011E23 6A02                    	push 2	; arg count
 23821 00011E25 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 23822 00011E2D 803805                  	cmp byte [rax], T_undefined
 23823 00011E30 0F846E4B0000            	je L_error_fvar_undefined
 23824 00011E36 803804                  	cmp byte [rax], T_closure
 23825 00011E39 0F85E94B0000            	jne L_error_non_closure
 23826 00011E3F FF7001                  	push SOB_CLOSURE_ENV(rax)
 23827 00011E42 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23828 00011E45 50                      	push rax
 23829 00011E46 488B4520                	mov rax, PARAM(0)	; param str
 23830 00011E4A 50                      	push rax
 23831 00011E4B 6A03                    	push 3	; arg count
 23832 00011E4D 488B4510                	mov rax, ENV
 23833 00011E51 488B00                  	mov rax, qword [rax + 8 * 0]
 23834 00011E54 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23835 00011E57 488B00                  	mov rax, qword [rax]
 23836 00011E5A 803804                  	cmp byte [rax], T_closure
 23837 00011E5D 0F85C54B0000            	jne L_error_non_closure
 23838 00011E63 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23839 00011E66 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23840 00011E69 50                      	push rax
 23841                                  	; preparing a non-tail-call
 23842 00011E6A 488B4528                	mov rax, PARAM(1)	; param i
 23843 00011E6E 50                      	push rax
 23844 00011E6F 488B4520                	mov rax, PARAM(0)	; param str
 23845 00011E73 50                      	push rax
 23846 00011E74 6A02                    	push 2	; arg count
 23847 00011E76 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 23848 00011E7E 803805                  	cmp byte [rax], T_undefined
 23849 00011E81 0F841D4B0000            	je L_error_fvar_undefined
 23850 00011E87 803804                  	cmp byte [rax], T_closure
 23851 00011E8A 0F85984B0000            	jne L_error_non_closure
 23852 00011E90 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23853 00011E93 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23854 00011E96 50                      	push rax
 23855 00011E97 6A02                    	push 2	; arg count
 23856 00011E99 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 23857 00011EA1 803805                  	cmp byte [rax], T_undefined
 23858 00011EA4 0F84FA4A0000            	je L_error_fvar_undefined
 23859 00011EAA 803804                  	cmp byte [rax], T_closure
 23860 00011EAD 0F85754B0000            	jne L_error_non_closure
 23861 00011EB3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23862 00011EB6 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 23863 00011EB9 FF7500                  	push qword[rbp]
 23864 00011EBC 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 23865 00011EC1 48895D10                	mov qword[rbp + 8*2],rbx
 23866 00011EC5 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 23867 00011ECD BF00000000              	mov rdi,0
 23868 00011ED2 EB00                    	jmp .L_tc_recycle_frame_loop_00e1
 23869                                  .L_tc_recycle_frame_loop_00e1:
 23870 00011ED4 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 23871 00011ED8 740F                    	je .L_tc_recycle_frame_done_00e1
 23872 00011EDA 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 23873 00011EDF 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 23874 00011EE4 48FFC7                  	inc rdi
 23875 00011EE7 EBEB                    	jmp .L_tc_recycle_frame_loop_00e1
 23876                                  .L_tc_recycle_frame_done_00e1:
 23877 00011EE9 4889EC                  	mov rsp, rbp	; point to last argument
 23878 00011EEC 5D                      	pop rbp
 23879 00011EED FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23880 00011EF0 EB0A                    	jmp .L_if_end_0077
 23881                                  .L_if_else_0077:
 23882 00011EF2 48B8-                   	mov rax, L_constants + 1
 23882 00011EF4 [0100000000000000] 
 23883                                  .L_if_end_0077:
 23884 00011EFC C9                      	leave
 23885 00011EFD C22800                  	ret AND_KILL_FRAME(3)
 23886                                  .L_lambda_simple_end_0095:	; new closure is in rax
 23887 00011F00 50                      	push rax
 23888 00011F01 488B4520                	mov rax, PARAM(0)	; param run
 23889 00011F05 8F00                    	pop qword [rax]
 23890 00011F07 48B8-                   	mov rax, sob_void
 23890 00011F09 [0000000000000000] 
 23891                                  
 23892 00011F11 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 23893 00011F16 E8B64B0000              	call malloc
 23894 00011F1B 50                      	push rax
 23895 00011F1C BF08000000              	mov rdi, 8 * 1	; new rib
 23896 00011F21 E8AB4B0000              	call malloc
 23897 00011F26 50                      	push rax
 23898 00011F27 BF10000000              	mov rdi, 8 * 2	; extended env
 23899 00011F2C E8A04B0000              	call malloc
 23900 00011F31 488B7D10                	mov rdi, ENV
 23901 00011F35 BE00000000              	mov rsi, 0
 23902 00011F3A BA01000000              	mov rdx, 1
 23903                                  .L_lambda_simple_env_loop_0096:	; ext_env[i + 1] <-- env[i]
 23904 00011F3F 4883FE01                	cmp rsi, 1
 23905 00011F43 7410                    	je .L_lambda_simple_env_end_0096
 23906 00011F45 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 23907 00011F49 48890CD0                	mov qword [rax + 8 * rdx], rcx
 23908 00011F4D 48FFC6                  	inc rsi
 23909 00011F50 48FFC2                  	inc rdx
 23910 00011F53 EBEA                    	jmp .L_lambda_simple_env_loop_0096
 23911                                  .L_lambda_simple_env_end_0096:
 23912 00011F55 5B                      	pop rbx
 23913 00011F56 BE00000000              	mov rsi, 0
 23914                                  .L_lambda_simple_params_loop_0096:	; copy params
 23915 00011F5B 4883FE01                	cmp rsi, 1
 23916 00011F5F 740E                    	je .L_lambda_simple_params_end_0096
 23917 00011F61 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 23918 00011F66 488914F3                	mov qword [rbx + 8 * rsi], rdx
 23919 00011F6A 48FFC6                  	inc rsi
 23920 00011F6D EBEC                    	jmp .L_lambda_simple_params_loop_0096
 23921                                  .L_lambda_simple_params_end_0096:
 23922 00011F6F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 23923 00011F72 4889C3                  	mov rbx, rax
 23924 00011F75 58                      	pop rax
 23925 00011F76 C60004                  	mov byte [rax], T_closure
 23926 00011F79 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 23927 00011F7D 48C74009[8A1F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0096
 23928 00011F85 E9A8000000              	jmp .L_lambda_simple_end_0096
 23929                                  .L_lambda_simple_code_0096:	; lambda-simple body
 23930 00011F8A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 23931 00011F90 740B                    	je .L_lambda_simple_arity_check_ok_0096
 23932 00011F92 FF742410                	push qword [rsp + 8 * 2]
 23933 00011F96 6A01                    	push 1
 23934 00011F98 E9ED4A0000              	jmp L_error_incorrect_arity_simple
 23935                                  .L_lambda_simple_arity_check_ok_0096:
 23936 00011F9D C8000000                	enter 0, 0
 23937                                  	; preparing a tail-call
 23938                                  	; preparing a non-tail-call
 23939 00011FA1 488B4520                	mov rax, PARAM(0)	; param str
 23940 00011FA5 50                      	push rax
 23941 00011FA6 6A01                    	push 1	; arg count
 23942 00011FA8 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 23943 00011FB0 803805                  	cmp byte [rax], T_undefined
 23944 00011FB3 0F84EB490000            	je L_error_fvar_undefined
 23945 00011FB9 803804                  	cmp byte [rax], T_closure
 23946 00011FBC 0F85664A0000            	jne L_error_non_closure
 23947 00011FC2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23948 00011FC5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23949 00011FC8 50                      	push rax
 23950 00011FC9 48B8-                   	mov rax, L_constants + 2135
 23950 00011FCB [5708000000000000] 
 23951 00011FD3 50                      	push rax
 23952 00011FD4 488B4520                	mov rax, PARAM(0)	; param str
 23953 00011FD8 50                      	push rax
 23954 00011FD9 6A03                    	push 3	; arg count
 23955 00011FDB 488B4510                	mov rax, ENV
 23956 00011FDF 488B00                  	mov rax, qword [rax + 8 * 0]
 23957 00011FE2 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 23958 00011FE5 488B00                  	mov rax, qword [rax]
 23959 00011FE8 803804                  	cmp byte [rax], T_closure
 23960 00011FEB 0F85374A0000            	jne L_error_non_closure
 23961 00011FF1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 23962 00011FF4 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 23963 00011FF7 FF7500                  	push qword[rbp]
 23964 00011FFA 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 23965 00011FFF 48895D10                	mov qword[rbp + 8*2],rbx
 23966 00012003 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 23967 0001200B BF00000000              	mov rdi,0
 23968 00012010 EB00                    	jmp .L_tc_recycle_frame_loop_00e2
 23969                                  .L_tc_recycle_frame_loop_00e2:
 23970 00012012 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 23971 00012016 740F                    	je .L_tc_recycle_frame_done_00e2
 23972 00012018 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 23973 0001201D 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 23974 00012022 48FFC7                  	inc rdi
 23975 00012025 EBEB                    	jmp .L_tc_recycle_frame_loop_00e2
 23976                                  .L_tc_recycle_frame_done_00e2:
 23977 00012027 4889EC                  	mov rsp, rbp	; point to last argument
 23978 0001202A 5D                      	pop rbp
 23979 0001202B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 23980 0001202E C9                      	leave
 23981 0001202F C21800                  	ret AND_KILL_FRAME(1)
 23982                                  .L_lambda_simple_end_0096:	; new closure is in rax
 23983 00012032 C9                      	leave
 23984 00012033 C21800                  	ret AND_KILL_FRAME(1)
 23985                                  .L_lambda_simple_end_0094:	; new closure is in rax
 23986 00012036 803804                  	cmp byte [rax], T_closure
 23987 00012039 0F85E9490000            	jne L_error_non_closure
 23988 0001203F FF7001                  	push SOB_CLOSURE_ENV(rax)
 23989 00012042 FF5009                  	call SOB_CLOSURE_CODE(rax)
 23990 00012045 48890425[AC150000]      	mov qword [free_var_119], rax
 23991 0001204D 48B8-                   	mov rax, sob_void
 23991 0001204F [0000000000000000] 
 23992                                  
 23993 00012057 4889C7                  	mov rdi, rax
 23994 0001205A E8C74C0000              	call print_sexpr_if_not_void
 23995                                  	; preparing a non-tail-call
 23996 0001205F 48B8-                   	mov rax, L_constants + 1993
 23996 00012061 [C907000000000000] 
 23997 00012069 50                      	push rax
 23998 0001206A 6A01                    	push 1	; arg count
 23999 0001206C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24000 00012071 E85B4A0000              	call malloc
 24001 00012076 50                      	push rax
 24002 00012077 BF00000000              	mov rdi, 8 * 0	; new rib
 24003 0001207C E8504A0000              	call malloc
 24004 00012081 50                      	push rax
 24005 00012082 BF08000000              	mov rdi, 8 * 1	; extended env
 24006 00012087 E8454A0000              	call malloc
 24007 0001208C 488B7D10                	mov rdi, ENV
 24008 00012090 BE00000000              	mov rsi, 0
 24009 00012095 BA01000000              	mov rdx, 1
 24010                                  .L_lambda_simple_env_loop_0097:	; ext_env[i + 1] <-- env[i]
 24011 0001209A 4883FE00                	cmp rsi, 0
 24012 0001209E 7410                    	je .L_lambda_simple_env_end_0097
 24013 000120A0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24014 000120A4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24015 000120A8 48FFC6                  	inc rsi
 24016 000120AB 48FFC2                  	inc rdx
 24017 000120AE EBEA                    	jmp .L_lambda_simple_env_loop_0097
 24018                                  .L_lambda_simple_env_end_0097:
 24019 000120B0 5B                      	pop rbx
 24020 000120B1 BE00000000              	mov rsi, 0
 24021                                  .L_lambda_simple_params_loop_0097:	; copy params
 24022 000120B6 4883FE00                	cmp rsi, 0
 24023 000120BA 740E                    	je .L_lambda_simple_params_end_0097
 24024 000120BC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24025 000120C1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24026 000120C5 48FFC6                  	inc rsi
 24027 000120C8 EBEC                    	jmp .L_lambda_simple_params_loop_0097
 24028                                  .L_lambda_simple_params_end_0097:
 24029 000120CA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24030 000120CD 4889C3                  	mov rbx, rax
 24031 000120D0 58                      	pop rax
 24032 000120D1 C60004                  	mov byte [rax], T_closure
 24033 000120D4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24034 000120D8 48C74009[E5200100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0097
 24035 000120E0 E90E030000              	jmp .L_lambda_simple_end_0097
 24036                                  .L_lambda_simple_code_0097:	; lambda-simple body
 24037 000120E5 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24038 000120EB 740B                    	je .L_lambda_simple_arity_check_ok_0097
 24039 000120ED FF742410                	push qword [rsp + 8 * 2]
 24040 000120F1 6A01                    	push 1
 24041 000120F3 E992490000              	jmp L_error_incorrect_arity_simple
 24042                                  .L_lambda_simple_arity_check_ok_0097:
 24043 000120F8 C8000000                	enter 0, 0
 24044 000120FC 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 24045 00012100 488903                  	mov qword [rbx], rax
 24046                                  
 24047 00012103 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24048 00012108 E8C4490000              	call malloc
 24049 0001210D 50                      	push rax
 24050 0001210E BF08000000              	mov rdi, 8 * 1	; new rib
 24051 00012113 E8B9490000              	call malloc
 24052 00012118 50                      	push rax
 24053 00012119 BF10000000              	mov rdi, 8 * 2	; extended env
 24054 0001211E E8AE490000              	call malloc
 24055 00012123 488B7D10                	mov rdi, ENV
 24056 00012127 BE00000000              	mov rsi, 0
 24057 0001212C BA01000000              	mov rdx, 1
 24058                                  .L_lambda_simple_env_loop_0098:	; ext_env[i + 1] <-- env[i]
 24059 00012131 4883FE01                	cmp rsi, 1
 24060 00012135 7410                    	je .L_lambda_simple_env_end_0098
 24061 00012137 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24062 0001213B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24063 0001213F 48FFC6                  	inc rsi
 24064 00012142 48FFC2                  	inc rdx
 24065 00012145 EBEA                    	jmp .L_lambda_simple_env_loop_0098
 24066                                  .L_lambda_simple_env_end_0098:
 24067 00012147 5B                      	pop rbx
 24068 00012148 BE00000000              	mov rsi, 0
 24069                                  .L_lambda_simple_params_loop_0098:	; copy params
 24070 0001214D 4883FE01                	cmp rsi, 1
 24071 00012151 740E                    	je .L_lambda_simple_params_end_0098
 24072 00012153 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24073 00012158 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24074 0001215C 48FFC6                  	inc rsi
 24075 0001215F EBEC                    	jmp .L_lambda_simple_params_loop_0098
 24076                                  .L_lambda_simple_params_end_0098:
 24077 00012161 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24078 00012164 4889C3                  	mov rbx, rax
 24079 00012167 58                      	pop rax
 24080 00012168 C60004                  	mov byte [rax], T_closure
 24081 0001216B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24082 0001216F 48C74009[7C210100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0098
 24083 00012177 E941010000              	jmp .L_lambda_simple_end_0098
 24084                                  .L_lambda_simple_code_0098:	; lambda-simple body
 24085 0001217C 48837C241003            	cmp qword [rsp + 8 * 2], 3
 24086 00012182 740B                    	je .L_lambda_simple_arity_check_ok_0098
 24087 00012184 FF742410                	push qword [rsp + 8 * 2]
 24088 00012188 6A03                    	push 3
 24089 0001218A E9FB480000              	jmp L_error_incorrect_arity_simple
 24090                                  .L_lambda_simple_arity_check_ok_0098:
 24091 0001218F C8000000                	enter 0, 0
 24092                                  	; preparing a non-tail-call
 24093 00012193 488B4530                	mov rax, PARAM(2)	; param n
 24094 00012197 50                      	push rax
 24095 00012198 488B4528                	mov rax, PARAM(1)	; param i
 24096 0001219C 50                      	push rax
 24097 0001219D 6A02                    	push 2	; arg count
 24098 0001219F 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 24099 000121A7 803805                  	cmp byte [rax], T_undefined
 24100 000121AA 0F84F4470000            	je L_error_fvar_undefined
 24101 000121B0 803804                  	cmp byte [rax], T_closure
 24102 000121B3 0F856F480000            	jne L_error_non_closure
 24103 000121B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24104 000121BC FF5009                  	call SOB_CLOSURE_CODE(rax)
 24105 000121BF 483D[02000000]          	cmp rax, sob_boolean_false
 24106 000121C5 0F84E4000000            	je .L_if_else_0078
 24107                                  	; preparing a tail-call
 24108                                  	; preparing a non-tail-call
 24109 000121CB 488B4530                	mov rax, PARAM(2)	; param n
 24110 000121CF 50                      	push rax
 24111                                  	; preparing a non-tail-call
 24112 000121D0 48B8-                   	mov rax, L_constants + 2270
 24112 000121D2 [DE08000000000000] 
 24113 000121DA 50                      	push rax
 24114 000121DB 488B4528                	mov rax, PARAM(1)	; param i
 24115 000121DF 50                      	push rax
 24116 000121E0 6A02                    	push 2	; arg count
 24117 000121E2 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 24118 000121EA 803805                  	cmp byte [rax], T_undefined
 24119 000121ED 0F84B1470000            	je L_error_fvar_undefined
 24120 000121F3 803804                  	cmp byte [rax], T_closure
 24121 000121F6 0F852C480000            	jne L_error_non_closure
 24122 000121FC FF7001                  	push SOB_CLOSURE_ENV(rax)
 24123 000121FF FF5009                  	call SOB_CLOSURE_CODE(rax)
 24124 00012202 50                      	push rax
 24125 00012203 488B4520                	mov rax, PARAM(0)	; param v
 24126 00012207 50                      	push rax
 24127 00012208 6A03                    	push 3	; arg count
 24128 0001220A 488B4510                	mov rax, ENV
 24129 0001220E 488B00                  	mov rax, qword [rax + 8 * 0]
 24130 00012211 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 24131 00012214 488B00                  	mov rax, qword [rax]
 24132 00012217 803804                  	cmp byte [rax], T_closure
 24133 0001221A 0F8508480000            	jne L_error_non_closure
 24134 00012220 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24135 00012223 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24136 00012226 50                      	push rax
 24137                                  	; preparing a non-tail-call
 24138 00012227 488B4528                	mov rax, PARAM(1)	; param i
 24139 0001222B 50                      	push rax
 24140 0001222C 488B4520                	mov rax, PARAM(0)	; param v
 24141 00012230 50                      	push rax
 24142 00012231 6A02                    	push 2	; arg count
 24143 00012233 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 24144 0001223B 803805                  	cmp byte [rax], T_undefined
 24145 0001223E 0F8460470000            	je L_error_fvar_undefined
 24146 00012244 803804                  	cmp byte [rax], T_closure
 24147 00012247 0F85DB470000            	jne L_error_non_closure
 24148 0001224D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24149 00012250 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24150 00012253 50                      	push rax
 24151 00012254 6A02                    	push 2	; arg count
 24152 00012256 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 24153 0001225E 803805                  	cmp byte [rax], T_undefined
 24154 00012261 0F843D470000            	je L_error_fvar_undefined
 24155 00012267 803804                  	cmp byte [rax], T_closure
 24156 0001226A 0F85B8470000            	jne L_error_non_closure
 24157 00012270 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24158 00012273 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 24159 00012276 FF7500                  	push qword[rbp]
 24160 00012279 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 24161 0001227E 48895D10                	mov qword[rbp + 8*2],rbx
 24162 00012282 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 24163 0001228A BF00000000              	mov rdi,0
 24164 0001228F EB00                    	jmp .L_tc_recycle_frame_loop_00e3
 24165                                  .L_tc_recycle_frame_loop_00e3:
 24166 00012291 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 24167 00012295 740F                    	je .L_tc_recycle_frame_done_00e3
 24168 00012297 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 24169 0001229C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 24170 000122A1 48FFC7                  	inc rdi
 24171 000122A4 EBEB                    	jmp .L_tc_recycle_frame_loop_00e3
 24172                                  .L_tc_recycle_frame_done_00e3:
 24173 000122A6 4889EC                  	mov rsp, rbp	; point to last argument
 24174 000122A9 5D                      	pop rbp
 24175 000122AA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24176 000122AD EB0A                    	jmp .L_if_end_0078
 24177                                  .L_if_else_0078:
 24178 000122AF 48B8-                   	mov rax, L_constants + 1
 24178 000122B1 [0100000000000000] 
 24179                                  .L_if_end_0078:
 24180 000122B9 C9                      	leave
 24181 000122BA C22800                  	ret AND_KILL_FRAME(3)
 24182                                  .L_lambda_simple_end_0098:	; new closure is in rax
 24183 000122BD 50                      	push rax
 24184 000122BE 488B4520                	mov rax, PARAM(0)	; param run
 24185 000122C2 8F00                    	pop qword [rax]
 24186 000122C4 48B8-                   	mov rax, sob_void
 24186 000122C6 [0000000000000000] 
 24187                                  
 24188 000122CE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24189 000122D3 E8F9470000              	call malloc
 24190 000122D8 50                      	push rax
 24191 000122D9 BF08000000              	mov rdi, 8 * 1	; new rib
 24192 000122DE E8EE470000              	call malloc
 24193 000122E3 50                      	push rax
 24194 000122E4 BF10000000              	mov rdi, 8 * 2	; extended env
 24195 000122E9 E8E3470000              	call malloc
 24196 000122EE 488B7D10                	mov rdi, ENV
 24197 000122F2 BE00000000              	mov rsi, 0
 24198 000122F7 BA01000000              	mov rdx, 1
 24199                                  .L_lambda_simple_env_loop_0099:	; ext_env[i + 1] <-- env[i]
 24200 000122FC 4883FE01                	cmp rsi, 1
 24201 00012300 7410                    	je .L_lambda_simple_env_end_0099
 24202 00012302 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24203 00012306 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24204 0001230A 48FFC6                  	inc rsi
 24205 0001230D 48FFC2                  	inc rdx
 24206 00012310 EBEA                    	jmp .L_lambda_simple_env_loop_0099
 24207                                  .L_lambda_simple_env_end_0099:
 24208 00012312 5B                      	pop rbx
 24209 00012313 BE00000000              	mov rsi, 0
 24210                                  .L_lambda_simple_params_loop_0099:	; copy params
 24211 00012318 4883FE01                	cmp rsi, 1
 24212 0001231C 740E                    	je .L_lambda_simple_params_end_0099
 24213 0001231E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24214 00012323 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24215 00012327 48FFC6                  	inc rsi
 24216 0001232A EBEC                    	jmp .L_lambda_simple_params_loop_0099
 24217                                  .L_lambda_simple_params_end_0099:
 24218 0001232C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24219 0001232F 4889C3                  	mov rbx, rax
 24220 00012332 58                      	pop rax
 24221 00012333 C60004                  	mov byte [rax], T_closure
 24222 00012336 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24223 0001233A 48C74009[47230100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_0099
 24224 00012342 E9A8000000              	jmp .L_lambda_simple_end_0099
 24225                                  .L_lambda_simple_code_0099:	; lambda-simple body
 24226 00012347 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24227 0001234D 740B                    	je .L_lambda_simple_arity_check_ok_0099
 24228 0001234F FF742410                	push qword [rsp + 8 * 2]
 24229 00012353 6A01                    	push 1
 24230 00012355 E930470000              	jmp L_error_incorrect_arity_simple
 24231                                  .L_lambda_simple_arity_check_ok_0099:
 24232 0001235A C8000000                	enter 0, 0
 24233                                  	; preparing a tail-call
 24234                                  	; preparing a non-tail-call
 24235 0001235E 488B4520                	mov rax, PARAM(0)	; param v
 24236 00012362 50                      	push rax
 24237 00012363 6A01                    	push 1	; arg count
 24238 00012365 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 24239 0001236D 803805                  	cmp byte [rax], T_undefined
 24240 00012370 0F842E460000            	je L_error_fvar_undefined
 24241 00012376 803804                  	cmp byte [rax], T_closure
 24242 00012379 0F85A9460000            	jne L_error_non_closure
 24243 0001237F FF7001                  	push SOB_CLOSURE_ENV(rax)
 24244 00012382 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24245 00012385 50                      	push rax
 24246 00012386 48B8-                   	mov rax, L_constants + 2135
 24246 00012388 [5708000000000000] 
 24247 00012390 50                      	push rax
 24248 00012391 488B4520                	mov rax, PARAM(0)	; param v
 24249 00012395 50                      	push rax
 24250 00012396 6A03                    	push 3	; arg count
 24251 00012398 488B4510                	mov rax, ENV
 24252 0001239C 488B00                  	mov rax, qword [rax + 8 * 0]
 24253 0001239F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 24254 000123A2 488B00                  	mov rax, qword [rax]
 24255 000123A5 803804                  	cmp byte [rax], T_closure
 24256 000123A8 0F857A460000            	jne L_error_non_closure
 24257 000123AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 24258 000123B1 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 24259 000123B4 FF7500                  	push qword[rbp]
 24260 000123B7 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 24261 000123BC 48895D10                	mov qword[rbp + 8*2],rbx
 24262 000123C0 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 24263 000123C8 BF00000000              	mov rdi,0
 24264 000123CD EB00                    	jmp .L_tc_recycle_frame_loop_00e4
 24265                                  .L_tc_recycle_frame_loop_00e4:
 24266 000123CF 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 24267 000123D3 740F                    	je .L_tc_recycle_frame_done_00e4
 24268 000123D5 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 24269 000123DA 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 24270 000123DF 48FFC7                  	inc rdi
 24271 000123E2 EBEB                    	jmp .L_tc_recycle_frame_loop_00e4
 24272                                  .L_tc_recycle_frame_done_00e4:
 24273 000123E4 4889EC                  	mov rsp, rbp	; point to last argument
 24274 000123E7 5D                      	pop rbp
 24275 000123E8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24276 000123EB C9                      	leave
 24277 000123EC C21800                  	ret AND_KILL_FRAME(1)
 24278                                  .L_lambda_simple_end_0099:	; new closure is in rax
 24279 000123EF C9                      	leave
 24280 000123F0 C21800                  	ret AND_KILL_FRAME(1)
 24281                                  .L_lambda_simple_end_0097:	; new closure is in rax
 24282 000123F3 803804                  	cmp byte [rax], T_closure
 24283 000123F6 0F852C460000            	jne L_error_non_closure
 24284 000123FC FF7001                  	push SOB_CLOSURE_ENV(rax)
 24285 000123FF FF5009                  	call SOB_CLOSURE_CODE(rax)
 24286 00012402 48890425[22170000]      	mov qword [free_var_141], rax
 24287 0001240A 48B8-                   	mov rax, sob_void
 24287 0001240C [0000000000000000] 
 24288                                  
 24289 00012414 4889C7                  	mov rdi, rax
 24290 00012417 E80A490000              	call print_sexpr_if_not_void
 24291 0001241C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24292 00012421 E8AB460000              	call malloc
 24293 00012426 50                      	push rax
 24294 00012427 BF00000000              	mov rdi, 8 * 0	; new rib
 24295 0001242C E8A0460000              	call malloc
 24296 00012431 50                      	push rax
 24297 00012432 BF08000000              	mov rdi, 8 * 1	; extended env
 24298 00012437 E895460000              	call malloc
 24299 0001243C 488B7D10                	mov rdi, ENV
 24300 00012440 BE00000000              	mov rsi, 0
 24301 00012445 BA01000000              	mov rdx, 1
 24302                                  .L_lambda_simple_env_loop_009a:	; ext_env[i + 1] <-- env[i]
 24303 0001244A 4883FE00                	cmp rsi, 0
 24304 0001244E 7410                    	je .L_lambda_simple_env_end_009a
 24305 00012450 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24306 00012454 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24307 00012458 48FFC6                  	inc rsi
 24308 0001245B 48FFC2                  	inc rdx
 24309 0001245E EBEA                    	jmp .L_lambda_simple_env_loop_009a
 24310                                  .L_lambda_simple_env_end_009a:
 24311 00012460 5B                      	pop rbx
 24312 00012461 BE00000000              	mov rsi, 0
 24313                                  .L_lambda_simple_params_loop_009a:	; copy params
 24314 00012466 4883FE00                	cmp rsi, 0
 24315 0001246A 740E                    	je .L_lambda_simple_params_end_009a
 24316 0001246C 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24317 00012471 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24318 00012475 48FFC6                  	inc rsi
 24319 00012478 EBEC                    	jmp .L_lambda_simple_params_loop_009a
 24320                                  .L_lambda_simple_params_end_009a:
 24321 0001247A 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24322 0001247D 4889C3                  	mov rbx, rax
 24323 00012480 58                      	pop rax
 24324 00012481 C60004                  	mov byte [rax], T_closure
 24325 00012484 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24326 00012488 48C74009[95240100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009a
 24327 00012490 E99C000000              	jmp .L_lambda_simple_end_009a
 24328                                  .L_lambda_simple_code_009a:	; lambda-simple body
 24329 00012495 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24330 0001249B 740B                    	je .L_lambda_simple_arity_check_ok_009a
 24331 0001249D FF742410                	push qword [rsp + 8 * 2]
 24332 000124A1 6A01                    	push 1
 24333 000124A3 E9E2450000              	jmp L_error_incorrect_arity_simple
 24334                                  .L_lambda_simple_arity_check_ok_009a:
 24335 000124A8 C8000000                	enter 0, 0
 24336                                  	; preparing a tail-call
 24337 000124AC 488B4520                	mov rax, PARAM(0)	; param n
 24338 000124B0 50                      	push rax
 24339                                  	; preparing a non-tail-call
 24340 000124B1 6A00                    	push 0	; arg count
 24341 000124B3 488B0425[00170000]      	mov rax, qword [free_var_139]	; free var trng
 24342 000124BB 803805                  	cmp byte [rax], T_undefined
 24343 000124BE 0F84E0440000            	je L_error_fvar_undefined
 24344 000124C4 803804                  	cmp byte [rax], T_closure
 24345 000124C7 0F855B450000            	jne L_error_non_closure
 24346 000124CD FF7001                  	push SOB_CLOSURE_ENV(rax)
 24347 000124D0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24348 000124D3 50                      	push rax
 24349 000124D4 6A02                    	push 2	; arg count
 24350 000124D6 488B0425[8A150000]      	mov rax, qword [free_var_117]	; free var remainder
 24351 000124DE 803805                  	cmp byte [rax], T_undefined
 24352 000124E1 0F84BD440000            	je L_error_fvar_undefined
 24353 000124E7 803804                  	cmp byte [rax], T_closure
 24354 000124EA 0F8538450000            	jne L_error_non_closure
 24355 000124F0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24356 000124F3 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 24357 000124F6 FF7500                  	push qword[rbp]
 24358 000124F9 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 24359 000124FE 48895D10                	mov qword[rbp + 8*2],rbx
 24360 00012502 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 24361 0001250A BF00000000              	mov rdi,0
 24362 0001250F EB00                    	jmp .L_tc_recycle_frame_loop_00e5
 24363                                  .L_tc_recycle_frame_loop_00e5:
 24364 00012511 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 24365 00012515 740F                    	je .L_tc_recycle_frame_done_00e5
 24366 00012517 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 24367 0001251C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 24368 00012521 48FFC7                  	inc rdi
 24369 00012524 EBEB                    	jmp .L_tc_recycle_frame_loop_00e5
 24370                                  .L_tc_recycle_frame_done_00e5:
 24371 00012526 4889EC                  	mov rsp, rbp	; point to last argument
 24372 00012529 5D                      	pop rbp
 24373 0001252A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24374 0001252D C9                      	leave
 24375 0001252E C21800                  	ret AND_KILL_FRAME(1)
 24376                                  .L_lambda_simple_end_009a:	; new closure is in rax
 24377 00012531 48890425[46150000]      	mov qword [free_var_113], rax
 24378 00012539 48B8-                   	mov rax, sob_void
 24378 0001253B [0000000000000000] 
 24379                                  
 24380 00012543 4889C7                  	mov rdi, rax
 24381 00012546 E8DB470000              	call print_sexpr_if_not_void
 24382 0001254B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24383 00012550 E87C450000              	call malloc
 24384 00012555 50                      	push rax
 24385 00012556 BF00000000              	mov rdi, 8 * 0	; new rib
 24386 0001255B E871450000              	call malloc
 24387 00012560 50                      	push rax
 24388 00012561 BF08000000              	mov rdi, 8 * 1	; extended env
 24389 00012566 E866450000              	call malloc
 24390 0001256B 488B7D10                	mov rdi, ENV
 24391 0001256F BE00000000              	mov rsi, 0
 24392 00012574 BA01000000              	mov rdx, 1
 24393                                  .L_lambda_simple_env_loop_009b:	; ext_env[i + 1] <-- env[i]
 24394 00012579 4883FE00                	cmp rsi, 0
 24395 0001257D 7410                    	je .L_lambda_simple_env_end_009b
 24396 0001257F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24397 00012583 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24398 00012587 48FFC6                  	inc rsi
 24399 0001258A 48FFC2                  	inc rdx
 24400 0001258D EBEA                    	jmp .L_lambda_simple_env_loop_009b
 24401                                  .L_lambda_simple_env_end_009b:
 24402 0001258F 5B                      	pop rbx
 24403 00012590 BE00000000              	mov rsi, 0
 24404                                  .L_lambda_simple_params_loop_009b:	; copy params
 24405 00012595 4883FE00                	cmp rsi, 0
 24406 00012599 740E                    	je .L_lambda_simple_params_end_009b
 24407 0001259B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24408 000125A0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24409 000125A4 48FFC6                  	inc rsi
 24410 000125A7 EBEC                    	jmp .L_lambda_simple_params_loop_009b
 24411                                  .L_lambda_simple_params_end_009b:
 24412 000125A9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24413 000125AC 4889C3                  	mov rbx, rax
 24414 000125AF 58                      	pop rax
 24415 000125B0 C60004                  	mov byte [rax], T_closure
 24416 000125B3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24417 000125B7 48C74009[C4250100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009b
 24418 000125BF E984000000              	jmp .L_lambda_simple_end_009b
 24419                                  .L_lambda_simple_code_009b:	; lambda-simple body
 24420 000125C4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24421 000125CA 740B                    	je .L_lambda_simple_arity_check_ok_009b
 24422 000125CC FF742410                	push qword [rsp + 8 * 2]
 24423 000125D0 6A01                    	push 1
 24424 000125D2 E9B3440000              	jmp L_error_incorrect_arity_simple
 24425                                  .L_lambda_simple_arity_check_ok_009b:
 24426 000125D7 C8000000                	enter 0, 0
 24427                                  	; preparing a tail-call
 24428 000125DB 488B4520                	mov rax, PARAM(0)	; param x
 24429 000125DF 50                      	push rax
 24430 000125E0 48B8-                   	mov rax, L_constants + 2135
 24430 000125E2 [5708000000000000] 
 24431 000125EA 50                      	push rax
 24432 000125EB 6A02                    	push 2	; arg count
 24433 000125ED 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 24434 000125F5 803805                  	cmp byte [rax], T_undefined
 24435 000125F8 0F84A6430000            	je L_error_fvar_undefined
 24436 000125FE 803804                  	cmp byte [rax], T_closure
 24437 00012601 0F8521440000            	jne L_error_non_closure
 24438 00012607 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24439 0001260A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 24440 0001260D FF7500                  	push qword[rbp]
 24441 00012610 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 24442 00012615 48895D10                	mov qword[rbp + 8*2],rbx
 24443 00012619 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 24444 00012621 BF00000000              	mov rdi,0
 24445 00012626 EB00                    	jmp .L_tc_recycle_frame_loop_00e6
 24446                                  .L_tc_recycle_frame_loop_00e6:
 24447 00012628 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 24448 0001262C 740F                    	je .L_tc_recycle_frame_done_00e6
 24449 0001262E 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 24450 00012633 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 24451 00012638 48FFC7                  	inc rdi
 24452 0001263B EBEB                    	jmp .L_tc_recycle_frame_loop_00e6
 24453                                  .L_tc_recycle_frame_done_00e6:
 24454 0001263D 4889EC                  	mov rsp, rbp	; point to last argument
 24455 00012640 5D                      	pop rbp
 24456 00012641 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24457 00012644 C9                      	leave
 24458 00012645 C21800                  	ret AND_KILL_FRAME(1)
 24459                                  .L_lambda_simple_end_009b:	; new closure is in rax
 24460 00012648 48890425[35150000]      	mov qword [free_var_112], rax
 24461 00012650 48B8-                   	mov rax, sob_void
 24461 00012652 [0000000000000000] 
 24462                                  
 24463 0001265A 4889C7                  	mov rdi, rax
 24464 0001265D E8C4460000              	call print_sexpr_if_not_void
 24465 00012662 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24466 00012667 E865440000              	call malloc
 24467 0001266C 50                      	push rax
 24468 0001266D BF00000000              	mov rdi, 8 * 0	; new rib
 24469 00012672 E85A440000              	call malloc
 24470 00012677 50                      	push rax
 24471 00012678 BF08000000              	mov rdi, 8 * 1	; extended env
 24472 0001267D E84F440000              	call malloc
 24473 00012682 488B7D10                	mov rdi, ENV
 24474 00012686 BE00000000              	mov rsi, 0
 24475 0001268B BA01000000              	mov rdx, 1
 24476                                  .L_lambda_simple_env_loop_009c:	; ext_env[i + 1] <-- env[i]
 24477 00012690 4883FE00                	cmp rsi, 0
 24478 00012694 7410                    	je .L_lambda_simple_env_end_009c
 24479 00012696 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24480 0001269A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24481 0001269E 48FFC6                  	inc rsi
 24482 000126A1 48FFC2                  	inc rdx
 24483 000126A4 EBEA                    	jmp .L_lambda_simple_env_loop_009c
 24484                                  .L_lambda_simple_env_end_009c:
 24485 000126A6 5B                      	pop rbx
 24486 000126A7 BE00000000              	mov rsi, 0
 24487                                  .L_lambda_simple_params_loop_009c:	; copy params
 24488 000126AC 4883FE00                	cmp rsi, 0
 24489 000126B0 740E                    	je .L_lambda_simple_params_end_009c
 24490 000126B2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24491 000126B7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24492 000126BB 48FFC6                  	inc rsi
 24493 000126BE EBEC                    	jmp .L_lambda_simple_params_loop_009c
 24494                                  .L_lambda_simple_params_end_009c:
 24495 000126C0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24496 000126C3 4889C3                  	mov rbx, rax
 24497 000126C6 58                      	pop rax
 24498 000126C7 C60004                  	mov byte [rax], T_closure
 24499 000126CA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24500 000126CE 48C74009[DB260100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009c
 24501 000126D6 E984000000              	jmp .L_lambda_simple_end_009c
 24502                                  .L_lambda_simple_code_009c:	; lambda-simple body
 24503 000126DB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24504 000126E1 740B                    	je .L_lambda_simple_arity_check_ok_009c
 24505 000126E3 FF742410                	push qword [rsp + 8 * 2]
 24506 000126E7 6A01                    	push 1
 24507 000126E9 E99C430000              	jmp L_error_incorrect_arity_simple
 24508                                  .L_lambda_simple_arity_check_ok_009c:
 24509 000126EE C8000000                	enter 0, 0
 24510                                  	; preparing a tail-call
 24511 000126F2 48B8-                   	mov rax, L_constants + 2135
 24511 000126F4 [5708000000000000] 
 24512 000126FC 50                      	push rax
 24513 000126FD 488B4520                	mov rax, PARAM(0)	; param x
 24514 00012701 50                      	push rax
 24515 00012702 6A02                    	push 2	; arg count
 24516 00012704 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 24517 0001270C 803805                  	cmp byte [rax], T_undefined
 24518 0001270F 0F848F420000            	je L_error_fvar_undefined
 24519 00012715 803804                  	cmp byte [rax], T_closure
 24520 00012718 0F850A430000            	jne L_error_non_closure
 24521 0001271E FF7001                  	push SOB_CLOSURE_ENV(rax)
 24522 00012721 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 24523 00012724 FF7500                  	push qword[rbp]
 24524 00012727 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 24525 0001272C 48895D10                	mov qword[rbp + 8*2],rbx
 24526 00012730 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 24527 00012738 BF00000000              	mov rdi,0
 24528 0001273D EB00                    	jmp .L_tc_recycle_frame_loop_00e7
 24529                                  .L_tc_recycle_frame_loop_00e7:
 24530 0001273F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 24531 00012743 740F                    	je .L_tc_recycle_frame_done_00e7
 24532 00012745 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 24533 0001274A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 24534 0001274F 48FFC7                  	inc rdi
 24535 00012752 EBEB                    	jmp .L_tc_recycle_frame_loop_00e7
 24536                                  .L_tc_recycle_frame_done_00e7:
 24537 00012754 4889EC                  	mov rsp, rbp	; point to last argument
 24538 00012757 5D                      	pop rbp
 24539 00012758 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24540 0001275B C9                      	leave
 24541 0001275C C21800                  	ret AND_KILL_FRAME(1)
 24542                                  .L_lambda_simple_end_009c:	; new closure is in rax
 24543 0001275F 48890425[AD140000]      	mov qword [free_var_104], rax
 24544 00012767 48B8-                   	mov rax, sob_void
 24544 00012769 [0000000000000000] 
 24545                                  
 24546 00012771 4889C7                  	mov rdi, rax
 24547 00012774 E8AD450000              	call print_sexpr_if_not_void
 24548 00012779 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24549 0001277E E84E430000              	call malloc
 24550 00012783 50                      	push rax
 24551 00012784 BF00000000              	mov rdi, 8 * 0	; new rib
 24552 00012789 E843430000              	call malloc
 24553 0001278E 50                      	push rax
 24554 0001278F BF08000000              	mov rdi, 8 * 1	; extended env
 24555 00012794 E838430000              	call malloc
 24556 00012799 488B7D10                	mov rdi, ENV
 24557 0001279D BE00000000              	mov rsi, 0
 24558 000127A2 BA01000000              	mov rdx, 1
 24559                                  .L_lambda_simple_env_loop_009d:	; ext_env[i + 1] <-- env[i]
 24560 000127A7 4883FE00                	cmp rsi, 0
 24561 000127AB 7410                    	je .L_lambda_simple_env_end_009d
 24562 000127AD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24563 000127B1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24564 000127B5 48FFC6                  	inc rsi
 24565 000127B8 48FFC2                  	inc rdx
 24566 000127BB EBEA                    	jmp .L_lambda_simple_env_loop_009d
 24567                                  .L_lambda_simple_env_end_009d:
 24568 000127BD 5B                      	pop rbx
 24569 000127BE BE00000000              	mov rsi, 0
 24570                                  .L_lambda_simple_params_loop_009d:	; copy params
 24571 000127C3 4883FE00                	cmp rsi, 0
 24572 000127C7 740E                    	je .L_lambda_simple_params_end_009d
 24573 000127C9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24574 000127CE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24575 000127D2 48FFC6                  	inc rsi
 24576 000127D5 EBEC                    	jmp .L_lambda_simple_params_loop_009d
 24577                                  .L_lambda_simple_params_end_009d:
 24578 000127D7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24579 000127DA 4889C3                  	mov rbx, rax
 24580 000127DD 58                      	pop rax
 24581 000127DE C60004                  	mov byte [rax], T_closure
 24582 000127E1 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24583 000127E5 48C74009[F2270100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009d
 24584 000127ED E9A7000000              	jmp .L_lambda_simple_end_009d
 24585                                  .L_lambda_simple_code_009d:	; lambda-simple body
 24586 000127F2 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24587 000127F8 740B                    	je .L_lambda_simple_arity_check_ok_009d
 24588 000127FA FF742410                	push qword [rsp + 8 * 2]
 24589 000127FE 6A01                    	push 1
 24590 00012800 E985420000              	jmp L_error_incorrect_arity_simple
 24591                                  .L_lambda_simple_arity_check_ok_009d:
 24592 00012805 C8000000                	enter 0, 0
 24593                                  	; preparing a tail-call
 24594                                  	; preparing a non-tail-call
 24595 00012809 48B8-                   	mov rax, L_constants + 3190
 24595 0001280B [760C000000000000] 
 24596 00012813 50                      	push rax
 24597 00012814 488B4520                	mov rax, PARAM(0)	; param n
 24598 00012818 50                      	push rax
 24599 00012819 6A02                    	push 2	; arg count
 24600 0001281B 488B0425[8A150000]      	mov rax, qword [free_var_117]	; free var remainder
 24601 00012823 803805                  	cmp byte [rax], T_undefined
 24602 00012826 0F8478410000            	je L_error_fvar_undefined
 24603 0001282C 803804                  	cmp byte [rax], T_closure
 24604 0001282F 0F85F3410000            	jne L_error_non_closure
 24605 00012835 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24606 00012838 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24607 0001283B 50                      	push rax
 24608 0001283C 6A01                    	push 1	; arg count
 24609 0001283E 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 24610 00012846 803805                  	cmp byte [rax], T_undefined
 24611 00012849 0F8455410000            	je L_error_fvar_undefined
 24612 0001284F 803804                  	cmp byte [rax], T_closure
 24613 00012852 0F85D0410000            	jne L_error_non_closure
 24614 00012858 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24615 0001285B FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 24616 0001285E FF7500                  	push qword[rbp]
 24617 00012861 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 24618 00012866 48895D10                	mov qword[rbp + 8*2],rbx
 24619 0001286A 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 24620 00012872 BF00000000              	mov rdi,0
 24621 00012877 EB00                    	jmp .L_tc_recycle_frame_loop_00e8
 24622                                  .L_tc_recycle_frame_loop_00e8:
 24623 00012879 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 24624 0001287D 740F                    	je .L_tc_recycle_frame_done_00e8
 24625 0001287F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 24626 00012884 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 24627 00012889 48FFC7                  	inc rdi
 24628 0001288C EBEB                    	jmp .L_tc_recycle_frame_loop_00e8
 24629                                  .L_tc_recycle_frame_done_00e8:
 24630 0001288E 4889EC                  	mov rsp, rbp	; point to last argument
 24631 00012891 5D                      	pop rbp
 24632 00012892 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24633 00012895 C9                      	leave
 24634 00012896 C21800                  	ret AND_KILL_FRAME(1)
 24635                                  .L_lambda_simple_end_009d:	; new closure is in rax
 24636 00012899 48890425[48130000]      	mov qword [free_var_83], rax
 24637 000128A1 48B8-                   	mov rax, sob_void
 24637 000128A3 [0000000000000000] 
 24638                                  
 24639 000128AB 4889C7                  	mov rdi, rax
 24640 000128AE E873440000              	call print_sexpr_if_not_void
 24641 000128B3 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24642 000128B8 E814420000              	call malloc
 24643 000128BD 50                      	push rax
 24644 000128BE BF00000000              	mov rdi, 8 * 0	; new rib
 24645 000128C3 E809420000              	call malloc
 24646 000128C8 50                      	push rax
 24647 000128C9 BF08000000              	mov rdi, 8 * 1	; extended env
 24648 000128CE E8FE410000              	call malloc
 24649 000128D3 488B7D10                	mov rdi, ENV
 24650 000128D7 BE00000000              	mov rsi, 0
 24651 000128DC BA01000000              	mov rdx, 1
 24652                                  .L_lambda_simple_env_loop_009e:	; ext_env[i + 1] <-- env[i]
 24653 000128E1 4883FE00                	cmp rsi, 0
 24654 000128E5 7410                    	je .L_lambda_simple_env_end_009e
 24655 000128E7 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24656 000128EB 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24657 000128EF 48FFC6                  	inc rsi
 24658 000128F2 48FFC2                  	inc rdx
 24659 000128F5 EBEA                    	jmp .L_lambda_simple_env_loop_009e
 24660                                  .L_lambda_simple_env_end_009e:
 24661 000128F7 5B                      	pop rbx
 24662 000128F8 BE00000000              	mov rsi, 0
 24663                                  .L_lambda_simple_params_loop_009e:	; copy params
 24664 000128FD 4883FE00                	cmp rsi, 0
 24665 00012901 740E                    	je .L_lambda_simple_params_end_009e
 24666 00012903 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24667 00012908 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24668 0001290C 48FFC6                  	inc rsi
 24669 0001290F EBEC                    	jmp .L_lambda_simple_params_loop_009e
 24670                                  .L_lambda_simple_params_end_009e:
 24671 00012911 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24672 00012914 4889C3                  	mov rbx, rax
 24673 00012917 58                      	pop rax
 24674 00012918 C60004                  	mov byte [rax], T_closure
 24675 0001291B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24676 0001291F 48C74009[2C290100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009e
 24677 00012927 E99C000000              	jmp .L_lambda_simple_end_009e
 24678                                  .L_lambda_simple_code_009e:	; lambda-simple body
 24679 0001292C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24680 00012932 740B                    	je .L_lambda_simple_arity_check_ok_009e
 24681 00012934 FF742410                	push qword [rsp + 8 * 2]
 24682 00012938 6A01                    	push 1
 24683 0001293A E94B410000              	jmp L_error_incorrect_arity_simple
 24684                                  .L_lambda_simple_arity_check_ok_009e:
 24685 0001293F C8000000                	enter 0, 0
 24686                                  	; preparing a tail-call
 24687                                  	; preparing a non-tail-call
 24688 00012943 488B4520                	mov rax, PARAM(0)	; param n
 24689 00012947 50                      	push rax
 24690 00012948 6A01                    	push 1	; arg count
 24691 0001294A 488B0425[48130000]      	mov rax, qword [free_var_83]	; free var even?
 24692 00012952 803805                  	cmp byte [rax], T_undefined
 24693 00012955 0F8449400000            	je L_error_fvar_undefined
 24694 0001295B 803804                  	cmp byte [rax], T_closure
 24695 0001295E 0F85C4400000            	jne L_error_non_closure
 24696 00012964 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24697 00012967 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24698 0001296A 50                      	push rax
 24699 0001296B 6A01                    	push 1	; arg count
 24700 0001296D 488B0425[CF140000]      	mov rax, qword [free_var_106]	; free var not
 24701 00012975 803805                  	cmp byte [rax], T_undefined
 24702 00012978 0F8426400000            	je L_error_fvar_undefined
 24703 0001297E 803804                  	cmp byte [rax], T_closure
 24704 00012981 0F85A1400000            	jne L_error_non_closure
 24705 00012987 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24706 0001298A FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 24707 0001298D FF7500                  	push qword[rbp]
 24708 00012990 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 24709 00012995 48895D10                	mov qword[rbp + 8*2],rbx
 24710 00012999 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 24711 000129A1 BF00000000              	mov rdi,0
 24712 000129A6 EB00                    	jmp .L_tc_recycle_frame_loop_00e9
 24713                                  .L_tc_recycle_frame_loop_00e9:
 24714 000129A8 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 24715 000129AC 740F                    	je .L_tc_recycle_frame_done_00e9
 24716 000129AE 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 24717 000129B3 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 24718 000129B8 48FFC7                  	inc rdi
 24719 000129BB EBEB                    	jmp .L_tc_recycle_frame_loop_00e9
 24720                                  .L_tc_recycle_frame_done_00e9:
 24721 000129BD 4889EC                  	mov rsp, rbp	; point to last argument
 24722 000129C0 5D                      	pop rbp
 24723 000129C1 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24724 000129C4 C9                      	leave
 24725 000129C5 C21800                  	ret AND_KILL_FRAME(1)
 24726                                  .L_lambda_simple_end_009e:	; new closure is in rax
 24727 000129C8 48890425[02150000]      	mov qword [free_var_109], rax
 24728 000129D0 48B8-                   	mov rax, sob_void
 24728 000129D2 [0000000000000000] 
 24729                                  
 24730 000129DA 4889C7                  	mov rdi, rax
 24731 000129DD E844430000              	call print_sexpr_if_not_void
 24732 000129E2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24733 000129E7 E8E5400000              	call malloc
 24734 000129EC 50                      	push rax
 24735 000129ED BF00000000              	mov rdi, 8 * 0	; new rib
 24736 000129F2 E8DA400000              	call malloc
 24737 000129F7 50                      	push rax
 24738 000129F8 BF08000000              	mov rdi, 8 * 1	; extended env
 24739 000129FD E8CF400000              	call malloc
 24740 00012A02 488B7D10                	mov rdi, ENV
 24741 00012A06 BE00000000              	mov rsi, 0
 24742 00012A0B BA01000000              	mov rdx, 1
 24743                                  .L_lambda_simple_env_loop_009f:	; ext_env[i + 1] <-- env[i]
 24744 00012A10 4883FE00                	cmp rsi, 0
 24745 00012A14 7410                    	je .L_lambda_simple_env_end_009f
 24746 00012A16 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24747 00012A1A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24748 00012A1E 48FFC6                  	inc rsi
 24749 00012A21 48FFC2                  	inc rdx
 24750 00012A24 EBEA                    	jmp .L_lambda_simple_env_loop_009f
 24751                                  .L_lambda_simple_env_end_009f:
 24752 00012A26 5B                      	pop rbx
 24753 00012A27 BE00000000              	mov rsi, 0
 24754                                  .L_lambda_simple_params_loop_009f:	; copy params
 24755 00012A2C 4883FE00                	cmp rsi, 0
 24756 00012A30 740E                    	je .L_lambda_simple_params_end_009f
 24757 00012A32 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24758 00012A37 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24759 00012A3B 48FFC6                  	inc rsi
 24760 00012A3E EBEC                    	jmp .L_lambda_simple_params_loop_009f
 24761                                  .L_lambda_simple_params_end_009f:
 24762 00012A40 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24763 00012A43 4889C3                  	mov rbx, rax
 24764 00012A46 58                      	pop rax
 24765 00012A47 C60004                  	mov byte [rax], T_closure
 24766 00012A4A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24767 00012A4E 48C74009[5B2A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_009f
 24768 00012A56 E9AE000000              	jmp .L_lambda_simple_end_009f
 24769                                  .L_lambda_simple_code_009f:	; lambda-simple body
 24770 00012A5B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 24771 00012A61 740B                    	je .L_lambda_simple_arity_check_ok_009f
 24772 00012A63 FF742410                	push qword [rsp + 8 * 2]
 24773 00012A67 6A01                    	push 1
 24774 00012A69 E91C400000              	jmp L_error_incorrect_arity_simple
 24775                                  .L_lambda_simple_arity_check_ok_009f:
 24776 00012A6E C8000000                	enter 0, 0
 24777                                  	; preparing a non-tail-call
 24778 00012A72 488B4520                	mov rax, PARAM(0)	; param x
 24779 00012A76 50                      	push rax
 24780 00012A77 6A01                    	push 1	; arg count
 24781 00012A79 488B0425[AD140000]      	mov rax, qword [free_var_104]	; free var negative?
 24782 00012A81 803805                  	cmp byte [rax], T_undefined
 24783 00012A84 0F841A3F0000            	je L_error_fvar_undefined
 24784 00012A8A 803804                  	cmp byte [rax], T_closure
 24785 00012A8D 0F85953F0000            	jne L_error_non_closure
 24786 00012A93 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24787 00012A96 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24788 00012A99 483D[02000000]          	cmp rax, sob_boolean_false
 24789 00012A9F 7460                    	je .L_if_else_0079
 24790                                  	; preparing a tail-call
 24791 00012AA1 488B4520                	mov rax, PARAM(0)	; param x
 24792 00012AA5 50                      	push rax
 24793 00012AA6 6A01                    	push 1	; arg count
 24794 00012AA8 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 24795 00012AB0 803805                  	cmp byte [rax], T_undefined
 24796 00012AB3 0F84EB3E0000            	je L_error_fvar_undefined
 24797 00012AB9 803804                  	cmp byte [rax], T_closure
 24798 00012ABC 0F85663F0000            	jne L_error_non_closure
 24799 00012AC2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24800 00012AC5 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 24801 00012AC8 FF7500                  	push qword[rbp]
 24802 00012ACB 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 24803 00012AD0 48895D10                	mov qword[rbp + 8*2],rbx
 24804 00012AD4 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 24805 00012ADC BF00000000              	mov rdi,0
 24806 00012AE1 EB00                    	jmp .L_tc_recycle_frame_loop_00ea
 24807                                  .L_tc_recycle_frame_loop_00ea:
 24808 00012AE3 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 24809 00012AE7 740F                    	je .L_tc_recycle_frame_done_00ea
 24810 00012AE9 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 24811 00012AEE 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 24812 00012AF3 48FFC7                  	inc rdi
 24813 00012AF6 EBEB                    	jmp .L_tc_recycle_frame_loop_00ea
 24814                                  .L_tc_recycle_frame_done_00ea:
 24815 00012AF8 4889EC                  	mov rsp, rbp	; point to last argument
 24816 00012AFB 5D                      	pop rbp
 24817 00012AFC FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24818 00012AFF EB04                    	jmp .L_if_end_0079
 24819                                  .L_if_else_0079:
 24820 00012B01 488B4520                	mov rax, PARAM(0)	; param x
 24821                                  .L_if_end_0079:
 24822 00012B05 C9                      	leave
 24823 00012B06 C21800                  	ret AND_KILL_FRAME(1)
 24824                                  .L_lambda_simple_end_009f:	; new closure is in rax
 24825 00012B09 48890425[C30F0000]      	mov qword [free_var_30], rax
 24826 00012B11 48B8-                   	mov rax, sob_void
 24826 00012B13 [0000000000000000] 
 24827                                  
 24828 00012B1B 4889C7                  	mov rdi, rax
 24829 00012B1E E803420000              	call print_sexpr_if_not_void
 24830 00012B23 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 24831 00012B28 E8A43F0000              	call malloc
 24832 00012B2D 50                      	push rax
 24833 00012B2E BF00000000              	mov rdi, 8 * 0	; new rib
 24834 00012B33 E8993F0000              	call malloc
 24835 00012B38 50                      	push rax
 24836 00012B39 BF08000000              	mov rdi, 8 * 1	; extended env
 24837 00012B3E E88E3F0000              	call malloc
 24838 00012B43 488B7D10                	mov rdi, ENV
 24839 00012B47 BE00000000              	mov rsi, 0
 24840 00012B4C BA01000000              	mov rdx, 1
 24841                                  .L_lambda_simple_env_loop_00a0:	; ext_env[i + 1] <-- env[i]
 24842 00012B51 4883FE00                	cmp rsi, 0
 24843 00012B55 7410                    	je .L_lambda_simple_env_end_00a0
 24844 00012B57 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 24845 00012B5B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 24846 00012B5F 48FFC6                  	inc rsi
 24847 00012B62 48FFC2                  	inc rdx
 24848 00012B65 EBEA                    	jmp .L_lambda_simple_env_loop_00a0
 24849                                  .L_lambda_simple_env_end_00a0:
 24850 00012B67 5B                      	pop rbx
 24851 00012B68 BE00000000              	mov rsi, 0
 24852                                  .L_lambda_simple_params_loop_00a0:	; copy params
 24853 00012B6D 4883FE00                	cmp rsi, 0
 24854 00012B71 740E                    	je .L_lambda_simple_params_end_00a0
 24855 00012B73 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 24856 00012B78 488914F3                	mov qword [rbx + 8 * rsi], rdx
 24857 00012B7C 48FFC6                  	inc rsi
 24858 00012B7F EBEC                    	jmp .L_lambda_simple_params_loop_00a0
 24859                                  .L_lambda_simple_params_end_00a0:
 24860 00012B81 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 24861 00012B84 4889C3                  	mov rbx, rax
 24862 00012B87 58                      	pop rax
 24863 00012B88 C60004                  	mov byte [rax], T_closure
 24864 00012B8B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 24865 00012B8F 48C74009[9C2B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a0
 24866 00012B97 E9C7060000              	jmp .L_lambda_simple_end_00a0
 24867                                  .L_lambda_simple_code_00a0:	; lambda-simple body
 24868 00012B9C 48837C241002            	cmp qword [rsp + 8 * 2], 2
 24869 00012BA2 740B                    	je .L_lambda_simple_arity_check_ok_00a0
 24870 00012BA4 FF742410                	push qword [rsp + 8 * 2]
 24871 00012BA8 6A02                    	push 2
 24872 00012BAA E9DB3E0000              	jmp L_error_incorrect_arity_simple
 24873                                  .L_lambda_simple_arity_check_ok_00a0:
 24874 00012BAF C8000000                	enter 0, 0
 24875                                  	; preparing a non-tail-call
 24876 00012BB3 488B4520                	mov rax, PARAM(0)	; param e1
 24877 00012BB7 50                      	push rax
 24878 00012BB8 6A01                    	push 1	; arg count
 24879 00012BBA 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 24880 00012BC2 803805                  	cmp byte [rax], T_undefined
 24881 00012BC5 0F84D93D0000            	je L_error_fvar_undefined
 24882 00012BCB 803804                  	cmp byte [rax], T_closure
 24883 00012BCE 0F85543E0000            	jne L_error_non_closure
 24884 00012BD4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24885 00012BD7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24886 00012BDA 483D[02000000]          	cmp rax, sob_boolean_false
 24887 00012BE0 7429                    	je .L_if_else_007a
 24888                                  	; preparing a non-tail-call
 24889 00012BE2 488B4528                	mov rax, PARAM(1)	; param e2
 24890 00012BE6 50                      	push rax
 24891 00012BE7 6A01                    	push 1	; arg count
 24892 00012BE9 488B0425[24150000]      	mov rax, qword [free_var_111]	; free var pair?
 24893 00012BF1 803805                  	cmp byte [rax], T_undefined
 24894 00012BF4 0F84AA3D0000            	je L_error_fvar_undefined
 24895 00012BFA 803804                  	cmp byte [rax], T_closure
 24896 00012BFD 0F85253E0000            	jne L_error_non_closure
 24897 00012C03 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24898 00012C06 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24899 00012C09 EB0A                    	jmp .L_if_end_007a
 24900                                  .L_if_else_007a:
 24901 00012C0B 48B8-                   	mov rax, L_constants + 2
 24901 00012C0D [0200000000000000] 
 24902                                  .L_if_end_007a:
 24903 00012C15 483D[02000000]          	cmp rax, sob_boolean_false
 24904 00012C1B 0F8438010000            	je .L_if_else_0086
 24905                                  	; preparing a non-tail-call
 24906                                  	; preparing a non-tail-call
 24907 00012C21 488B4528                	mov rax, PARAM(1)	; param e2
 24908 00012C25 50                      	push rax
 24909 00012C26 6A01                    	push 1	; arg count
 24910 00012C28 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24911 00012C30 803805                  	cmp byte [rax], T_undefined
 24912 00012C33 0F846B3D0000            	je L_error_fvar_undefined
 24913 00012C39 803804                  	cmp byte [rax], T_closure
 24914 00012C3C 0F85E63D0000            	jne L_error_non_closure
 24915 00012C42 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24916 00012C45 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24917 00012C48 50                      	push rax
 24918                                  	; preparing a non-tail-call
 24919 00012C49 488B4520                	mov rax, PARAM(0)	; param e1
 24920 00012C4D 50                      	push rax
 24921 00012C4E 6A01                    	push 1	; arg count
 24922 00012C50 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 24923 00012C58 803805                  	cmp byte [rax], T_undefined
 24924 00012C5B 0F84433D0000            	je L_error_fvar_undefined
 24925 00012C61 803804                  	cmp byte [rax], T_closure
 24926 00012C64 0F85BE3D0000            	jne L_error_non_closure
 24927 00012C6A FF7001                  	push SOB_CLOSURE_ENV(rax)
 24928 00012C6D FF5009                  	call SOB_CLOSURE_CODE(rax)
 24929 00012C70 50                      	push rax
 24930 00012C71 6A02                    	push 2	; arg count
 24931 00012C73 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 24932 00012C7B 803805                  	cmp byte [rax], T_undefined
 24933 00012C7E 0F84203D0000            	je L_error_fvar_undefined
 24934 00012C84 803804                  	cmp byte [rax], T_closure
 24935 00012C87 0F859B3D0000            	jne L_error_non_closure
 24936 00012C8D FF7001                  	push SOB_CLOSURE_ENV(rax)
 24937 00012C90 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24938 00012C93 483D[02000000]          	cmp rax, sob_boolean_false
 24939 00012C99 0F84AB000000            	je .L_if_else_007b
 24940                                  	; preparing a tail-call
 24941                                  	; preparing a non-tail-call
 24942 00012C9F 488B4528                	mov rax, PARAM(1)	; param e2
 24943 00012CA3 50                      	push rax
 24944 00012CA4 6A01                    	push 1	; arg count
 24945 00012CA6 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 24946 00012CAE 803805                  	cmp byte [rax], T_undefined
 24947 00012CB1 0F84ED3C0000            	je L_error_fvar_undefined
 24948 00012CB7 803804                  	cmp byte [rax], T_closure
 24949 00012CBA 0F85683D0000            	jne L_error_non_closure
 24950 00012CC0 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24951 00012CC3 FF5009                  	call SOB_CLOSURE_CODE(rax)
 24952 00012CC6 50                      	push rax
 24953                                  	; preparing a non-tail-call
 24954 00012CC7 488B4520                	mov rax, PARAM(0)	; param e1
 24955 00012CCB 50                      	push rax
 24956 00012CCC 6A01                    	push 1	; arg count
 24957 00012CCE 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 24958 00012CD6 803805                  	cmp byte [rax], T_undefined
 24959 00012CD9 0F84C53C0000            	je L_error_fvar_undefined
 24960 00012CDF 803804                  	cmp byte [rax], T_closure
 24961 00012CE2 0F85403D0000            	jne L_error_non_closure
 24962 00012CE8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 24963 00012CEB FF5009                  	call SOB_CLOSURE_CODE(rax)
 24964 00012CEE 50                      	push rax
 24965 00012CEF 6A02                    	push 2	; arg count
 24966 00012CF1 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 24967 00012CF9 803805                  	cmp byte [rax], T_undefined
 24968 00012CFC 0F84A23C0000            	je L_error_fvar_undefined
 24969 00012D02 803804                  	cmp byte [rax], T_closure
 24970 00012D05 0F851D3D0000            	jne L_error_non_closure
 24971 00012D0B FF7001                  	push SOB_CLOSURE_ENV(rax)
 24972 00012D0E FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 24973 00012D11 FF7500                  	push qword[rbp]
 24974 00012D14 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 24975 00012D19 48895D10                	mov qword[rbp + 8*2],rbx
 24976 00012D1D 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 24977 00012D25 BF00000000              	mov rdi,0
 24978 00012D2A EB00                    	jmp .L_tc_recycle_frame_loop_00eb
 24979                                  .L_tc_recycle_frame_loop_00eb:
 24980 00012D2C 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 24981 00012D30 740F                    	je .L_tc_recycle_frame_done_00eb
 24982 00012D32 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 24983 00012D37 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 24984 00012D3C 48FFC7                  	inc rdi
 24985 00012D3F EBEB                    	jmp .L_tc_recycle_frame_loop_00eb
 24986                                  .L_tc_recycle_frame_done_00eb:
 24987 00012D41 4889EC                  	mov rsp, rbp	; point to last argument
 24988 00012D44 5D                      	pop rbp
 24989 00012D45 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 24990 00012D48 EB0A                    	jmp .L_if_end_007b
 24991                                  .L_if_else_007b:
 24992 00012D4A 48B8-                   	mov rax, L_constants + 2
 24992 00012D4C [0200000000000000] 
 24993                                  .L_if_end_007b:
 24994 00012D54 E906050000              	jmp .L_if_end_0086
 24995                                  .L_if_else_0086:
 24996                                  	; preparing a non-tail-call
 24997 00012D59 488B4520                	mov rax, PARAM(0)	; param e1
 24998 00012D5D 50                      	push rax
 24999 00012D5E 6A01                    	push 1	; arg count
 25000 00012D60 488B0425[99170000]      	mov rax, qword [free_var_148]	; free var vector?
 25001 00012D68 803805                  	cmp byte [rax], T_undefined
 25002 00012D6B 0F84333C0000            	je L_error_fvar_undefined
 25003 00012D71 803804                  	cmp byte [rax], T_closure
 25004 00012D74 0F85AE3C0000            	jne L_error_non_closure
 25005 00012D7A FF7001                  	push SOB_CLOSURE_ENV(rax)
 25006 00012D7D FF5009                  	call SOB_CLOSURE_CODE(rax)
 25007 00012D80 483D[02000000]          	cmp rax, sob_boolean_false
 25008 00012D86 0F84AF000000            	je .L_if_else_007d
 25009                                  	; preparing a non-tail-call
 25010 00012D8C 488B4528                	mov rax, PARAM(1)	; param e2
 25011 00012D90 50                      	push rax
 25012 00012D91 6A01                    	push 1	; arg count
 25013 00012D93 488B0425[99170000]      	mov rax, qword [free_var_148]	; free var vector?
 25014 00012D9B 803805                  	cmp byte [rax], T_undefined
 25015 00012D9E 0F84003C0000            	je L_error_fvar_undefined
 25016 00012DA4 803804                  	cmp byte [rax], T_closure
 25017 00012DA7 0F857B3C0000            	jne L_error_non_closure
 25018 00012DAD FF7001                  	push SOB_CLOSURE_ENV(rax)
 25019 00012DB0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25020 00012DB3 483D[02000000]          	cmp rax, sob_boolean_false
 25021 00012DB9 7474                    	je .L_if_else_007c
 25022                                  	; preparing a non-tail-call
 25023                                  	; preparing a non-tail-call
 25024 00012DBB 488B4528                	mov rax, PARAM(1)	; param e2
 25025 00012DBF 50                      	push rax
 25026 00012DC0 6A01                    	push 1	; arg count
 25027 00012DC2 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 25028 00012DCA 803805                  	cmp byte [rax], T_undefined
 25029 00012DCD 0F84D13B0000            	je L_error_fvar_undefined
 25030 00012DD3 803804                  	cmp byte [rax], T_closure
 25031 00012DD6 0F854C3C0000            	jne L_error_non_closure
 25032 00012DDC FF7001                  	push SOB_CLOSURE_ENV(rax)
 25033 00012DDF FF5009                  	call SOB_CLOSURE_CODE(rax)
 25034 00012DE2 50                      	push rax
 25035                                  	; preparing a non-tail-call
 25036 00012DE3 488B4520                	mov rax, PARAM(0)	; param e1
 25037 00012DE7 50                      	push rax
 25038 00012DE8 6A01                    	push 1	; arg count
 25039 00012DEA 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 25040 00012DF2 803805                  	cmp byte [rax], T_undefined
 25041 00012DF5 0F84A93B0000            	je L_error_fvar_undefined
 25042 00012DFB 803804                  	cmp byte [rax], T_closure
 25043 00012DFE 0F85243C0000            	jne L_error_non_closure
 25044 00012E04 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25045 00012E07 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25046 00012E0A 50                      	push rax
 25047 00012E0B 6A02                    	push 2	; arg count
 25048 00012E0D 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 25049 00012E15 803805                  	cmp byte [rax], T_undefined
 25050 00012E18 0F84863B0000            	je L_error_fvar_undefined
 25051 00012E1E 803804                  	cmp byte [rax], T_closure
 25052 00012E21 0F85013C0000            	jne L_error_non_closure
 25053 00012E27 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25054 00012E2A FF5009                  	call SOB_CLOSURE_CODE(rax)
 25055 00012E2D EB0A                    	jmp .L_if_end_007c
 25056                                  .L_if_else_007c:
 25057 00012E2F 48B8-                   	mov rax, L_constants + 2
 25057 00012E31 [0200000000000000] 
 25058                                  .L_if_end_007c:
 25059 00012E39 EB0A                    	jmp .L_if_end_007d
 25060                                  .L_if_else_007d:
 25061 00012E3B 48B8-                   	mov rax, L_constants + 2
 25061 00012E3D [0200000000000000] 
 25062                                  .L_if_end_007d:
 25063 00012E45 483D[02000000]          	cmp rax, sob_boolean_false
 25064 00012E4B 0F84AE000000            	je .L_if_else_0085
 25065                                  	; preparing a tail-call
 25066                                  	; preparing a non-tail-call
 25067 00012E51 488B4528                	mov rax, PARAM(1)	; param e2
 25068 00012E55 50                      	push rax
 25069 00012E56 6A01                    	push 1	; arg count
 25070 00012E58 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 25071 00012E60 803805                  	cmp byte [rax], T_undefined
 25072 00012E63 0F843B3B0000            	je L_error_fvar_undefined
 25073 00012E69 803804                  	cmp byte [rax], T_closure
 25074 00012E6C 0F85B63B0000            	jne L_error_non_closure
 25075 00012E72 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25076 00012E75 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25077 00012E78 50                      	push rax
 25078                                  	; preparing a non-tail-call
 25079 00012E79 488B4520                	mov rax, PARAM(0)	; param e1
 25080 00012E7D 50                      	push rax
 25081 00012E7E 6A01                    	push 1	; arg count
 25082 00012E80 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 25083 00012E88 803805                  	cmp byte [rax], T_undefined
 25084 00012E8B 0F84133B0000            	je L_error_fvar_undefined
 25085 00012E91 803804                  	cmp byte [rax], T_closure
 25086 00012E94 0F858E3B0000            	jne L_error_non_closure
 25087 00012E9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 25088 00012E9D FF5009                  	call SOB_CLOSURE_CODE(rax)
 25089 00012EA0 50                      	push rax
 25090 00012EA1 6A02                    	push 2	; arg count
 25091 00012EA3 488B0425[26130000]      	mov rax, qword [free_var_81]	; free var equal?
 25092 00012EAB 803805                  	cmp byte [rax], T_undefined
 25093 00012EAE 0F84F03A0000            	je L_error_fvar_undefined
 25094 00012EB4 803804                  	cmp byte [rax], T_closure
 25095 00012EB7 0F856B3B0000            	jne L_error_non_closure
 25096 00012EBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 25097 00012EC0 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 25098 00012EC3 FF7500                  	push qword[rbp]
 25099 00012EC6 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 25100 00012ECB 48895D10                	mov qword[rbp + 8*2],rbx
 25101 00012ECF 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 25102 00012ED7 BF00000000              	mov rdi,0
 25103 00012EDC EB00                    	jmp .L_tc_recycle_frame_loop_00ec
 25104                                  .L_tc_recycle_frame_loop_00ec:
 25105 00012EDE 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 25106 00012EE2 740F                    	je .L_tc_recycle_frame_done_00ec
 25107 00012EE4 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 25108 00012EE9 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 25109 00012EEE 48FFC7                  	inc rdi
 25110 00012EF1 EBEB                    	jmp .L_tc_recycle_frame_loop_00ec
 25111                                  .L_tc_recycle_frame_done_00ec:
 25112 00012EF3 4889EC                  	mov rsp, rbp	; point to last argument
 25113 00012EF6 5D                      	pop rbp
 25114 00012EF7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25115 00012EFA E960030000              	jmp .L_if_end_0085
 25116                                  .L_if_else_0085:
 25117                                  	; preparing a non-tail-call
 25118 00012EFF 488B4520                	mov rax, PARAM(0)	; param e1
 25119 00012F03 50                      	push rax
 25120 00012F04 6A01                    	push 1	; arg count
 25121 00012F06 488B0425[EF160000]      	mov rax, qword [free_var_138]	; free var string?
 25122 00012F0E 803805                  	cmp byte [rax], T_undefined
 25123 00012F11 0F848D3A0000            	je L_error_fvar_undefined
 25124 00012F17 803804                  	cmp byte [rax], T_closure
 25125 00012F1A 0F85083B0000            	jne L_error_non_closure
 25126 00012F20 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25127 00012F23 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25128 00012F26 483D[02000000]          	cmp rax, sob_boolean_false
 25129 00012F2C 0F84AF000000            	je .L_if_else_007f
 25130                                  	; preparing a non-tail-call
 25131 00012F32 488B4528                	mov rax, PARAM(1)	; param e2
 25132 00012F36 50                      	push rax
 25133 00012F37 6A01                    	push 1	; arg count
 25134 00012F39 488B0425[EF160000]      	mov rax, qword [free_var_138]	; free var string?
 25135 00012F41 803805                  	cmp byte [rax], T_undefined
 25136 00012F44 0F845A3A0000            	je L_error_fvar_undefined
 25137 00012F4A 803804                  	cmp byte [rax], T_closure
 25138 00012F4D 0F85D53A0000            	jne L_error_non_closure
 25139 00012F53 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25140 00012F56 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25141 00012F59 483D[02000000]          	cmp rax, sob_boolean_false
 25142 00012F5F 7474                    	je .L_if_else_007e
 25143                                  	; preparing a non-tail-call
 25144                                  	; preparing a non-tail-call
 25145 00012F61 488B4528                	mov rax, PARAM(1)	; param e2
 25146 00012F65 50                      	push rax
 25147 00012F66 6A01                    	push 1	; arg count
 25148 00012F68 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 25149 00012F70 803805                  	cmp byte [rax], T_undefined
 25150 00012F73 0F842B3A0000            	je L_error_fvar_undefined
 25151 00012F79 803804                  	cmp byte [rax], T_closure
 25152 00012F7C 0F85A63A0000            	jne L_error_non_closure
 25153 00012F82 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25154 00012F85 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25155 00012F88 50                      	push rax
 25156                                  	; preparing a non-tail-call
 25157 00012F89 488B4520                	mov rax, PARAM(0)	; param e1
 25158 00012F8D 50                      	push rax
 25159 00012F8E 6A01                    	push 1	; arg count
 25160 00012F90 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 25161 00012F98 803805                  	cmp byte [rax], T_undefined
 25162 00012F9B 0F84033A0000            	je L_error_fvar_undefined
 25163 00012FA1 803804                  	cmp byte [rax], T_closure
 25164 00012FA4 0F857E3A0000            	jne L_error_non_closure
 25165 00012FAA FF7001                  	push SOB_CLOSURE_ENV(rax)
 25166 00012FAD FF5009                  	call SOB_CLOSURE_CODE(rax)
 25167 00012FB0 50                      	push rax
 25168 00012FB1 6A02                    	push 2	; arg count
 25169 00012FB3 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 25170 00012FBB 803805                  	cmp byte [rax], T_undefined
 25171 00012FBE 0F84E0390000            	je L_error_fvar_undefined
 25172 00012FC4 803804                  	cmp byte [rax], T_closure
 25173 00012FC7 0F855B3A0000            	jne L_error_non_closure
 25174 00012FCD FF7001                  	push SOB_CLOSURE_ENV(rax)
 25175 00012FD0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25176 00012FD3 EB0A                    	jmp .L_if_end_007e
 25177                                  .L_if_else_007e:
 25178 00012FD5 48B8-                   	mov rax, L_constants + 2
 25178 00012FD7 [0200000000000000] 
 25179                                  .L_if_end_007e:
 25180 00012FDF EB0A                    	jmp .L_if_end_007f
 25181                                  .L_if_else_007f:
 25182 00012FE1 48B8-                   	mov rax, L_constants + 2
 25182 00012FE3 [0200000000000000] 
 25183                                  .L_if_end_007f:
 25184 00012FEB 483D[02000000]          	cmp rax, sob_boolean_false
 25185 00012FF1 7468                    	je .L_if_else_0084
 25186                                  	; preparing a tail-call
 25187 00012FF3 488B4528                	mov rax, PARAM(1)	; param e2
 25188 00012FF7 50                      	push rax
 25189 00012FF8 488B4520                	mov rax, PARAM(0)	; param e1
 25190 00012FFC 50                      	push rax
 25191 00012FFD 6A02                    	push 2	; arg count
 25192 00012FFF 488B0425[BC160000]      	mov rax, qword [free_var_135]	; free var string=?
 25193 00013007 803805                  	cmp byte [rax], T_undefined
 25194 0001300A 0F8494390000            	je L_error_fvar_undefined
 25195 00013010 803804                  	cmp byte [rax], T_closure
 25196 00013013 0F850F3A0000            	jne L_error_non_closure
 25197 00013019 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25198 0001301C FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 25199 0001301F FF7500                  	push qword[rbp]
 25200 00013022 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 25201 00013027 48895D10                	mov qword[rbp + 8*2],rbx
 25202 0001302B 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 25203 00013033 BF00000000              	mov rdi,0
 25204 00013038 EB00                    	jmp .L_tc_recycle_frame_loop_00ed
 25205                                  .L_tc_recycle_frame_loop_00ed:
 25206 0001303A 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 25207 0001303E 740F                    	je .L_tc_recycle_frame_done_00ed
 25208 00013040 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 25209 00013045 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 25210 0001304A 48FFC7                  	inc rdi
 25211 0001304D EBEB                    	jmp .L_tc_recycle_frame_loop_00ed
 25212                                  .L_tc_recycle_frame_done_00ed:
 25213 0001304F 4889EC                  	mov rsp, rbp	; point to last argument
 25214 00013052 5D                      	pop rbp
 25215 00013053 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25216 00013056 E904020000              	jmp .L_if_end_0084
 25217                                  .L_if_else_0084:
 25218                                  	; preparing a non-tail-call
 25219 0001305B 488B4520                	mov rax, PARAM(0)	; param e1
 25220 0001305F 50                      	push rax
 25221 00013060 6A01                    	push 1	; arg count
 25222 00013062 488B0425[F1140000]      	mov rax, qword [free_var_108]	; free var number?
 25223 0001306A 803805                  	cmp byte [rax], T_undefined
 25224 0001306D 0F8431390000            	je L_error_fvar_undefined
 25225 00013073 803804                  	cmp byte [rax], T_closure
 25226 00013076 0F85AC390000            	jne L_error_non_closure
 25227 0001307C FF7001                  	push SOB_CLOSURE_ENV(rax)
 25228 0001307F FF5009                  	call SOB_CLOSURE_CODE(rax)
 25229 00013082 483D[02000000]          	cmp rax, sob_boolean_false
 25230 00013088 7429                    	je .L_if_else_0080
 25231                                  	; preparing a non-tail-call
 25232 0001308A 488B4528                	mov rax, PARAM(1)	; param e2
 25233 0001308E 50                      	push rax
 25234 0001308F 6A01                    	push 1	; arg count
 25235 00013091 488B0425[F1140000]      	mov rax, qword [free_var_108]	; free var number?
 25236 00013099 803805                  	cmp byte [rax], T_undefined
 25237 0001309C 0F8402390000            	je L_error_fvar_undefined
 25238 000130A2 803804                  	cmp byte [rax], T_closure
 25239 000130A5 0F857D390000            	jne L_error_non_closure
 25240 000130AB FF7001                  	push SOB_CLOSURE_ENV(rax)
 25241 000130AE FF5009                  	call SOB_CLOSURE_CODE(rax)
 25242 000130B1 EB0A                    	jmp .L_if_end_0080
 25243                                  .L_if_else_0080:
 25244 000130B3 48B8-                   	mov rax, L_constants + 2
 25244 000130B5 [0200000000000000] 
 25245                                  .L_if_end_0080:
 25246 000130BD 483D[02000000]          	cmp rax, sob_boolean_false
 25247 000130C3 7468                    	je .L_if_else_0083
 25248                                  	; preparing a tail-call
 25249 000130C5 488B4528                	mov rax, PARAM(1)	; param e2
 25250 000130C9 50                      	push rax
 25251 000130CA 488B4520                	mov rax, PARAM(0)	; param e1
 25252 000130CE 50                      	push rax
 25253 000130CF 6A02                    	push 2	; arg count
 25254 000130D1 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 25255 000130D9 803805                  	cmp byte [rax], T_undefined
 25256 000130DC 0F84C2380000            	je L_error_fvar_undefined
 25257 000130E2 803804                  	cmp byte [rax], T_closure
 25258 000130E5 0F853D390000            	jne L_error_non_closure
 25259 000130EB FF7001                  	push SOB_CLOSURE_ENV(rax)
 25260 000130EE FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 25261 000130F1 FF7500                  	push qword[rbp]
 25262 000130F4 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 25263 000130F9 48895D10                	mov qword[rbp + 8*2],rbx
 25264 000130FD 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 25265 00013105 BF00000000              	mov rdi,0
 25266 0001310A EB00                    	jmp .L_tc_recycle_frame_loop_00ee
 25267                                  .L_tc_recycle_frame_loop_00ee:
 25268 0001310C 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 25269 00013110 740F                    	je .L_tc_recycle_frame_done_00ee
 25270 00013112 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 25271 00013117 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 25272 0001311C 48FFC7                  	inc rdi
 25273 0001311F EBEB                    	jmp .L_tc_recycle_frame_loop_00ee
 25274                                  .L_tc_recycle_frame_done_00ee:
 25275 00013121 4889EC                  	mov rsp, rbp	; point to last argument
 25276 00013124 5D                      	pop rbp
 25277 00013125 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25278 00013128 E932010000              	jmp .L_if_end_0083
 25279                                  .L_if_else_0083:
 25280                                  	; preparing a non-tail-call
 25281 0001312D 488B4520                	mov rax, PARAM(0)	; param e1
 25282 00013131 50                      	push rax
 25283 00013132 6A01                    	push 1	; arg count
 25284 00013134 488B0425[F3120000]      	mov rax, qword [free_var_78]	; free var char?
 25285 0001313C 803805                  	cmp byte [rax], T_undefined
 25286 0001313F 0F845F380000            	je L_error_fvar_undefined
 25287 00013145 803804                  	cmp byte [rax], T_closure
 25288 00013148 0F85DA380000            	jne L_error_non_closure
 25289 0001314E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25290 00013151 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25291 00013154 483D[02000000]          	cmp rax, sob_boolean_false
 25292 0001315A 7429                    	je .L_if_else_0081
 25293                                  	; preparing a non-tail-call
 25294 0001315C 488B4528                	mov rax, PARAM(1)	; param e2
 25295 00013160 50                      	push rax
 25296 00013161 6A01                    	push 1	; arg count
 25297 00013163 488B0425[F3120000]      	mov rax, qword [free_var_78]	; free var char?
 25298 0001316B 803805                  	cmp byte [rax], T_undefined
 25299 0001316E 0F8430380000            	je L_error_fvar_undefined
 25300 00013174 803804                  	cmp byte [rax], T_closure
 25301 00013177 0F85AB380000            	jne L_error_non_closure
 25302 0001317D FF7001                  	push SOB_CLOSURE_ENV(rax)
 25303 00013180 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25304 00013183 EB0A                    	jmp .L_if_end_0081
 25305                                  .L_if_else_0081:
 25306 00013185 48B8-                   	mov rax, L_constants + 2
 25306 00013187 [0200000000000000] 
 25307                                  .L_if_end_0081:
 25308 0001318F 483D[02000000]          	cmp rax, sob_boolean_false
 25309 00013195 7465                    	je .L_if_else_0082
 25310                                  	; preparing a tail-call
 25311 00013197 488B4528                	mov rax, PARAM(1)	; param e2
 25312 0001319B 50                      	push rax
 25313 0001319C 488B4520                	mov rax, PARAM(0)	; param e1
 25314 000131A0 50                      	push rax
 25315 000131A1 6A02                    	push 2	; arg count
 25316 000131A3 488B0425[C0120000]      	mov rax, qword [free_var_75]	; free var char=?
 25317 000131AB 803805                  	cmp byte [rax], T_undefined
 25318 000131AE 0F84F0370000            	je L_error_fvar_undefined
 25319 000131B4 803804                  	cmp byte [rax], T_closure
 25320 000131B7 0F856B380000            	jne L_error_non_closure
 25321 000131BD FF7001                  	push SOB_CLOSURE_ENV(rax)
 25322 000131C0 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 25323 000131C3 FF7500                  	push qword[rbp]
 25324 000131C6 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 25325 000131CB 48895D10                	mov qword[rbp + 8*2],rbx
 25326 000131CF 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 25327 000131D7 BF00000000              	mov rdi,0
 25328 000131DC EB00                    	jmp .L_tc_recycle_frame_loop_00ef
 25329                                  .L_tc_recycle_frame_loop_00ef:
 25330 000131DE 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 25331 000131E2 740F                    	je .L_tc_recycle_frame_done_00ef
 25332 000131E4 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 25333 000131E9 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 25334 000131EE 48FFC7                  	inc rdi
 25335 000131F1 EBEB                    	jmp .L_tc_recycle_frame_loop_00ef
 25336                                  .L_tc_recycle_frame_done_00ef:
 25337 000131F3 4889EC                  	mov rsp, rbp	; point to last argument
 25338 000131F6 5D                      	pop rbp
 25339 000131F7 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25340 000131FA EB63                    	jmp .L_if_end_0082
 25341                                  .L_if_else_0082:
 25342                                  	; preparing a tail-call
 25343 000131FC 488B4528                	mov rax, PARAM(1)	; param e2
 25344 00013200 50                      	push rax
 25345 00013201 488B4520                	mov rax, PARAM(0)	; param e1
 25346 00013205 50                      	push rax
 25347 00013206 6A02                    	push 2	; arg count
 25348 00013208 488B0425[15130000]      	mov rax, qword [free_var_80]	; free var eq?
 25349 00013210 803805                  	cmp byte [rax], T_undefined
 25350 00013213 0F848B370000            	je L_error_fvar_undefined
 25351 00013219 803804                  	cmp byte [rax], T_closure
 25352 0001321C 0F8506380000            	jne L_error_non_closure
 25353 00013222 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25354 00013225 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 25355 00013228 FF7500                  	push qword[rbp]
 25356 0001322B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 25357 00013230 48895D10                	mov qword[rbp + 8*2],rbx
 25358 00013234 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 25359 0001323C BF00000000              	mov rdi,0
 25360 00013241 EB00                    	jmp .L_tc_recycle_frame_loop_00f0
 25361                                  .L_tc_recycle_frame_loop_00f0:
 25362 00013243 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 25363 00013247 740F                    	je .L_tc_recycle_frame_done_00f0
 25364 00013249 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 25365 0001324E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 25366 00013253 48FFC7                  	inc rdi
 25367 00013256 EBEB                    	jmp .L_tc_recycle_frame_loop_00f0
 25368                                  .L_tc_recycle_frame_done_00f0:
 25369 00013258 4889EC                  	mov rsp, rbp	; point to last argument
 25370 0001325B 5D                      	pop rbp
 25371 0001325C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25372                                  .L_if_end_0082:
 25373                                  .L_if_end_0083:
 25374                                  .L_if_end_0084:
 25375                                  .L_if_end_0085:
 25376                                  .L_if_end_0086:
 25377 0001325F C9                      	leave
 25378 00013260 C22000                  	ret AND_KILL_FRAME(2)
 25379                                  .L_lambda_simple_end_00a0:	; new closure is in rax
 25380 00013263 48890425[26130000]      	mov qword [free_var_81], rax
 25381 0001326B 48B8-                   	mov rax, sob_void
 25381 0001326D [0000000000000000] 
 25382                                  
 25383 00013275 4889C7                  	mov rdi, rax
 25384 00013278 E8A93A0000              	call print_sexpr_if_not_void
 25385 0001327D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25386 00013282 E84A380000              	call malloc
 25387 00013287 50                      	push rax
 25388 00013288 BF00000000              	mov rdi, 8 * 0	; new rib
 25389 0001328D E83F380000              	call malloc
 25390 00013292 50                      	push rax
 25391 00013293 BF08000000              	mov rdi, 8 * 1	; extended env
 25392 00013298 E834380000              	call malloc
 25393 0001329D 488B7D10                	mov rdi, ENV
 25394 000132A1 BE00000000              	mov rsi, 0
 25395 000132A6 BA01000000              	mov rdx, 1
 25396                                  .L_lambda_simple_env_loop_00a1:	; ext_env[i + 1] <-- env[i]
 25397 000132AB 4883FE00                	cmp rsi, 0
 25398 000132AF 7410                    	je .L_lambda_simple_env_end_00a1
 25399 000132B1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25400 000132B5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25401 000132B9 48FFC6                  	inc rsi
 25402 000132BC 48FFC2                  	inc rdx
 25403 000132BF EBEA                    	jmp .L_lambda_simple_env_loop_00a1
 25404                                  .L_lambda_simple_env_end_00a1:
 25405 000132C1 5B                      	pop rbx
 25406 000132C2 BE00000000              	mov rsi, 0
 25407                                  .L_lambda_simple_params_loop_00a1:	; copy params
 25408 000132C7 4883FE00                	cmp rsi, 0
 25409 000132CB 740E                    	je .L_lambda_simple_params_end_00a1
 25410 000132CD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25411 000132D2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25412 000132D6 48FFC6                  	inc rsi
 25413 000132D9 EBEC                    	jmp .L_lambda_simple_params_loop_00a1
 25414                                  .L_lambda_simple_params_end_00a1:
 25415 000132DB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25416 000132DE 4889C3                  	mov rbx, rax
 25417 000132E1 58                      	pop rax
 25418 000132E2 C60004                  	mov byte [rax], T_closure
 25419 000132E5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25420 000132E9 48C74009[F6320100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a1
 25421 000132F1 E999010000              	jmp .L_lambda_simple_end_00a1
 25422                                  .L_lambda_simple_code_00a1:	; lambda-simple body
 25423 000132F6 48837C241002            	cmp qword [rsp + 8 * 2], 2
 25424 000132FC 740B                    	je .L_lambda_simple_arity_check_ok_00a1
 25425 000132FE FF742410                	push qword [rsp + 8 * 2]
 25426 00013302 6A02                    	push 2
 25427 00013304 E981370000              	jmp L_error_incorrect_arity_simple
 25428                                  .L_lambda_simple_arity_check_ok_00a1:
 25429 00013309 C8000000                	enter 0, 0
 25430                                  	; preparing a non-tail-call
 25431 0001330D 488B4528                	mov rax, PARAM(1)	; param s
 25432 00013311 50                      	push rax
 25433 00013312 6A01                    	push 1	; arg count
 25434 00013314 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 25435 0001331C 803805                  	cmp byte [rax], T_undefined
 25436 0001331F 0F847F360000            	je L_error_fvar_undefined
 25437 00013325 803804                  	cmp byte [rax], T_closure
 25438 00013328 0F85FA360000            	jne L_error_non_closure
 25439 0001332E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25440 00013331 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25441 00013334 483D[02000000]          	cmp rax, sob_boolean_false
 25442 0001333A 740F                    	je .L_if_else_0088
 25443 0001333C 48B8-                   	mov rax, L_constants + 2
 25443 0001333E [0200000000000000] 
 25444 00013346 E940010000              	jmp .L_if_end_0088
 25445                                  .L_if_else_0088:
 25446                                  	; preparing a non-tail-call
 25447 0001334B 488B4520                	mov rax, PARAM(0)	; param a
 25448 0001334F 50                      	push rax
 25449                                  	; preparing a non-tail-call
 25450 00013350 488B4528                	mov rax, PARAM(1)	; param s
 25451 00013354 50                      	push rax
 25452 00013355 6A01                    	push 1	; arg count
 25453 00013357 488B0425[7E100000]      	mov rax, qword [free_var_41]	; free var caar
 25454 0001335F 803805                  	cmp byte [rax], T_undefined
 25455 00013362 0F843C360000            	je L_error_fvar_undefined
 25456 00013368 803804                  	cmp byte [rax], T_closure
 25457 0001336B 0F85B7360000            	jne L_error_non_closure
 25458 00013371 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25459 00013374 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25460 00013377 50                      	push rax
 25461 00013378 6A02                    	push 2	; arg count
 25462 0001337A 488B0425[15130000]      	mov rax, qword [free_var_80]	; free var eq?
 25463 00013382 803805                  	cmp byte [rax], T_undefined
 25464 00013385 0F8419360000            	je L_error_fvar_undefined
 25465 0001338B 803804                  	cmp byte [rax], T_closure
 25466 0001338E 0F8594360000            	jne L_error_non_closure
 25467 00013394 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25468 00013397 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25469 0001339A 483D[02000000]          	cmp rax, sob_boolean_false
 25470 000133A0 7463                    	je .L_if_else_0087
 25471                                  	; preparing a tail-call
 25472 000133A2 488B4528                	mov rax, PARAM(1)	; param s
 25473 000133A6 50                      	push rax
 25474 000133A7 6A01                    	push 1	; arg count
 25475 000133A9 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 25476 000133B1 803805                  	cmp byte [rax], T_undefined
 25477 000133B4 0F84EA350000            	je L_error_fvar_undefined
 25478 000133BA 803804                  	cmp byte [rax], T_closure
 25479 000133BD 0F8565360000            	jne L_error_non_closure
 25480 000133C3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25481 000133C6 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 25482 000133C9 FF7500                  	push qword[rbp]
 25483 000133CC 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 25484 000133D1 48895D10                	mov qword[rbp + 8*2],rbx
 25485 000133D5 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 25486 000133DD BF00000000              	mov rdi,0
 25487 000133E2 EB00                    	jmp .L_tc_recycle_frame_loop_00f1
 25488                                  .L_tc_recycle_frame_loop_00f1:
 25489 000133E4 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 25490 000133E8 740F                    	je .L_tc_recycle_frame_done_00f1
 25491 000133EA 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 25492 000133EF 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 25493 000133F4 48FFC7                  	inc rdi
 25494 000133F7 EBEB                    	jmp .L_tc_recycle_frame_loop_00f1
 25495                                  .L_tc_recycle_frame_done_00f1:
 25496 000133F9 4889EC                  	mov rsp, rbp	; point to last argument
 25497 000133FC 5D                      	pop rbp
 25498 000133FD FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25499 00013400 E986000000              	jmp .L_if_end_0087
 25500                                  .L_if_else_0087:
 25501                                  	; preparing a tail-call
 25502                                  	; preparing a non-tail-call
 25503 00013405 488B4528                	mov rax, PARAM(1)	; param s
 25504 00013409 50                      	push rax
 25505 0001340A 6A01                    	push 1	; arg count
 25506 0001340C 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 25507 00013414 803805                  	cmp byte [rax], T_undefined
 25508 00013417 0F8487350000            	je L_error_fvar_undefined
 25509 0001341D 803804                  	cmp byte [rax], T_closure
 25510 00013420 0F8502360000            	jne L_error_non_closure
 25511 00013426 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25512 00013429 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25513 0001342C 50                      	push rax
 25514 0001342D 488B4520                	mov rax, PARAM(0)	; param a
 25515 00013431 50                      	push rax
 25516 00013432 6A02                    	push 2	; arg count
 25517 00013434 488B0425[07100000]      	mov rax, qword [free_var_34]	; free var assoc
 25518 0001343C 803805                  	cmp byte [rax], T_undefined
 25519 0001343F 0F845F350000            	je L_error_fvar_undefined
 25520 00013445 803804                  	cmp byte [rax], T_closure
 25521 00013448 0F85DA350000            	jne L_error_non_closure
 25522 0001344E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25523 00013451 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 25524 00013454 FF7500                  	push qword[rbp]
 25525 00013457 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 25526 0001345C 48895D10                	mov qword[rbp + 8*2],rbx
 25527 00013460 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 25528 00013468 BF00000000              	mov rdi,0
 25529 0001346D EB00                    	jmp .L_tc_recycle_frame_loop_00f2
 25530                                  .L_tc_recycle_frame_loop_00f2:
 25531 0001346F 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 25532 00013473 740F                    	je .L_tc_recycle_frame_done_00f2
 25533 00013475 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 25534 0001347A 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 25535 0001347F 48FFC7                  	inc rdi
 25536 00013482 EBEB                    	jmp .L_tc_recycle_frame_loop_00f2
 25537                                  .L_tc_recycle_frame_done_00f2:
 25538 00013484 4889EC                  	mov rsp, rbp	; point to last argument
 25539 00013487 5D                      	pop rbp
 25540 00013488 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25541                                  .L_if_end_0087:
 25542                                  .L_if_end_0088:
 25543 0001348B C9                      	leave
 25544 0001348C C22000                  	ret AND_KILL_FRAME(2)
 25545                                  .L_lambda_simple_end_00a1:	; new closure is in rax
 25546 0001348F 48890425[07100000]      	mov qword [free_var_34], rax
 25547 00013497 48B8-                   	mov rax, sob_void
 25547 00013499 [0000000000000000] 
 25548                                  
 25549 000134A1 4889C7                  	mov rdi, rax
 25550 000134A4 E87D380000              	call print_sexpr_if_not_void
 25551                                  	; preparing a non-tail-call
 25552 000134A9 48B8-                   	mov rax, L_constants + 1993
 25552 000134AB [C907000000000000] 
 25553 000134B3 50                      	push rax
 25554 000134B4 48B8-                   	mov rax, L_constants + 1993
 25554 000134B6 [C907000000000000] 
 25555 000134BE 50                      	push rax
 25556 000134BF 6A02                    	push 2	; arg count
 25557 000134C1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25558 000134C6 E806360000              	call malloc
 25559 000134CB 50                      	push rax
 25560 000134CC BF00000000              	mov rdi, 8 * 0	; new rib
 25561 000134D1 E8FB350000              	call malloc
 25562 000134D6 50                      	push rax
 25563 000134D7 BF08000000              	mov rdi, 8 * 1	; extended env
 25564 000134DC E8F0350000              	call malloc
 25565 000134E1 488B7D10                	mov rdi, ENV
 25566 000134E5 BE00000000              	mov rsi, 0
 25567 000134EA BA01000000              	mov rdx, 1
 25568                                  .L_lambda_simple_env_loop_00a2:	; ext_env[i + 1] <-- env[i]
 25569 000134EF 4883FE00                	cmp rsi, 0
 25570 000134F3 7410                    	je .L_lambda_simple_env_end_00a2
 25571 000134F5 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25572 000134F9 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25573 000134FD 48FFC6                  	inc rsi
 25574 00013500 48FFC2                  	inc rdx
 25575 00013503 EBEA                    	jmp .L_lambda_simple_env_loop_00a2
 25576                                  .L_lambda_simple_env_end_00a2:
 25577 00013505 5B                      	pop rbx
 25578 00013506 BE00000000              	mov rsi, 0
 25579                                  .L_lambda_simple_params_loop_00a2:	; copy params
 25580 0001350B 4883FE00                	cmp rsi, 0
 25581 0001350F 740E                    	je .L_lambda_simple_params_end_00a2
 25582 00013511 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25583 00013516 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25584 0001351A 48FFC6                  	inc rsi
 25585 0001351D EBEC                    	jmp .L_lambda_simple_params_loop_00a2
 25586                                  .L_lambda_simple_params_end_00a2:
 25587 0001351F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25588 00013522 4889C3                  	mov rbx, rax
 25589 00013525 58                      	pop rax
 25590 00013526 C60004                  	mov byte [rax], T_closure
 25591 00013529 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25592 0001352D 48C74009[3A350100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a2
 25593 00013535 E983080000              	jmp .L_lambda_simple_end_00a2
 25594                                  .L_lambda_simple_code_00a2:	; lambda-simple body
 25595 0001353A 48837C241002            	cmp qword [rsp + 8 * 2], 2
 25596 00013540 740B                    	je .L_lambda_simple_arity_check_ok_00a2
 25597 00013542 FF742410                	push qword [rsp + 8 * 2]
 25598 00013546 6A02                    	push 2
 25599 00013548 E93D350000              	jmp L_error_incorrect_arity_simple
 25600                                  .L_lambda_simple_arity_check_ok_00a2:
 25601 0001354D C8000000                	enter 0, 0
 25602 00013551 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 25603 00013555 488903                  	mov qword [rbx], rax
 25604                                  
 25605 00013558 488B5D28                	mov rbx, qword [rbp + 8 * (4 + 1)]
 25606 0001355C 488903                  	mov qword [rbx], rax
 25607                                  
 25608 0001355F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25609 00013564 E868350000              	call malloc
 25610 00013569 50                      	push rax
 25611 0001356A BF10000000              	mov rdi, 8 * 2	; new rib
 25612 0001356F E85D350000              	call malloc
 25613 00013574 50                      	push rax
 25614 00013575 BF10000000              	mov rdi, 8 * 2	; extended env
 25615 0001357A E852350000              	call malloc
 25616 0001357F 488B7D10                	mov rdi, ENV
 25617 00013583 BE00000000              	mov rsi, 0
 25618 00013588 BA01000000              	mov rdx, 1
 25619                                  .L_lambda_simple_env_loop_00a3:	; ext_env[i + 1] <-- env[i]
 25620 0001358D 4883FE01                	cmp rsi, 1
 25621 00013591 7410                    	je .L_lambda_simple_env_end_00a3
 25622 00013593 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25623 00013597 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25624 0001359B 48FFC6                  	inc rsi
 25625 0001359E 48FFC2                  	inc rdx
 25626 000135A1 EBEA                    	jmp .L_lambda_simple_env_loop_00a3
 25627                                  .L_lambda_simple_env_end_00a3:
 25628 000135A3 5B                      	pop rbx
 25629 000135A4 BE00000000              	mov rsi, 0
 25630                                  .L_lambda_simple_params_loop_00a3:	; copy params
 25631 000135A9 4883FE02                	cmp rsi, 2
 25632 000135AD 740E                    	je .L_lambda_simple_params_end_00a3
 25633 000135AF 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25634 000135B4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25635 000135B8 48FFC6                  	inc rsi
 25636 000135BB EBEC                    	jmp .L_lambda_simple_params_loop_00a3
 25637                                  .L_lambda_simple_params_end_00a3:
 25638 000135BD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25639 000135C0 4889C3                  	mov rbx, rax
 25640 000135C3 58                      	pop rax
 25641 000135C4 C60004                  	mov byte [rax], T_closure
 25642 000135C7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25643 000135CB 48C74009[D8350100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a3
 25644 000135D3 E96C020000              	jmp .L_lambda_simple_end_00a3
 25645                                  .L_lambda_simple_code_00a3:	; lambda-simple body
 25646 000135D8 48837C241003            	cmp qword [rsp + 8 * 2], 3
 25647 000135DE 740B                    	je .L_lambda_simple_arity_check_ok_00a3
 25648 000135E0 FF742410                	push qword [rsp + 8 * 2]
 25649 000135E4 6A03                    	push 3
 25650 000135E6 E99F340000              	jmp L_error_incorrect_arity_simple
 25651                                  .L_lambda_simple_arity_check_ok_00a3:
 25652 000135EB C8000000                	enter 0, 0
 25653                                  	; preparing a non-tail-call
 25654 000135EF 488B4530                	mov rax, PARAM(2)	; param s
 25655 000135F3 50                      	push rax
 25656 000135F4 6A01                    	push 1	; arg count
 25657 000135F6 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 25658 000135FE 803805                  	cmp byte [rax], T_undefined
 25659 00013601 0F849D330000            	je L_error_fvar_undefined
 25660 00013607 803804                  	cmp byte [rax], T_closure
 25661 0001360A 0F8518340000            	jne L_error_non_closure
 25662 00013610 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25663 00013613 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25664 00013616 483D[02000000]          	cmp rax, sob_boolean_false
 25665 0001361C 7409                    	je .L_if_else_0089
 25666 0001361E 488B4520                	mov rax, PARAM(0)	; param target
 25667 00013622 E919020000              	jmp .L_if_end_0089
 25668                                  .L_if_else_0089:
 25669                                  	; preparing a tail-call
 25670                                  	; preparing a non-tail-call
 25671                                  	; preparing a non-tail-call
 25672                                  	; preparing a non-tail-call
 25673 00013627 488B4530                	mov rax, PARAM(2)	; param s
 25674 0001362B 50                      	push rax
 25675 0001362C 6A01                    	push 1	; arg count
 25676 0001362E 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 25677 00013636 803805                  	cmp byte [rax], T_undefined
 25678 00013639 0F8465330000            	je L_error_fvar_undefined
 25679 0001363F 803804                  	cmp byte [rax], T_closure
 25680 00013642 0F85E0330000            	jne L_error_non_closure
 25681 00013648 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25682 0001364B FF5009                  	call SOB_CLOSURE_CODE(rax)
 25683 0001364E 50                      	push rax
 25684 0001364F 6A01                    	push 1	; arg count
 25685 00013651 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 25686 00013659 803805                  	cmp byte [rax], T_undefined
 25687 0001365C 0F8442330000            	je L_error_fvar_undefined
 25688 00013662 803804                  	cmp byte [rax], T_closure
 25689 00013665 0F85BD330000            	jne L_error_non_closure
 25690 0001366B FF7001                  	push SOB_CLOSURE_ENV(rax)
 25691 0001366E FF5009                  	call SOB_CLOSURE_CODE(rax)
 25692 00013671 50                      	push rax
 25693 00013672 48B8-                   	mov rax, L_constants + 2135
 25693 00013674 [5708000000000000] 
 25694 0001367C 50                      	push rax
 25695                                  	; preparing a non-tail-call
 25696 0001367D 488B4530                	mov rax, PARAM(2)	; param s
 25697 00013681 50                      	push rax
 25698 00013682 6A01                    	push 1	; arg count
 25699 00013684 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 25700 0001368C 803805                  	cmp byte [rax], T_undefined
 25701 0001368F 0F840F330000            	je L_error_fvar_undefined
 25702 00013695 803804                  	cmp byte [rax], T_closure
 25703 00013698 0F858A330000            	jne L_error_non_closure
 25704 0001369E FF7001                  	push SOB_CLOSURE_ENV(rax)
 25705 000136A1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25706 000136A4 50                      	push rax
 25707 000136A5 488B4528                	mov rax, PARAM(1)	; param i
 25708 000136A9 50                      	push rax
 25709 000136AA 488B4520                	mov rax, PARAM(0)	; param target
 25710 000136AE 50                      	push rax
 25711 000136AF 6A05                    	push 5	; arg count
 25712 000136B1 488B4510                	mov rax, ENV
 25713 000136B5 488B00                  	mov rax, qword [rax + 8 * 0]
 25714 000136B8 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25715 000136BC 488B00                  	mov rax, qword [rax]
 25716 000136BF 803804                  	cmp byte [rax], T_closure
 25717 000136C2 0F8560330000            	jne L_error_non_closure
 25718 000136C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25719 000136CB FF5009                  	call SOB_CLOSURE_CODE(rax)
 25720 000136CE 50                      	push rax
 25721 000136CF 6A01                    	push 1	; arg count
 25722 000136D1 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25723 000136D6 E8F6330000              	call malloc
 25724 000136DB 50                      	push rax
 25725 000136DC BF18000000              	mov rdi, 8 * 3	; new rib
 25726 000136E1 E8EB330000              	call malloc
 25727 000136E6 50                      	push rax
 25728 000136E7 BF18000000              	mov rdi, 8 * 3	; extended env
 25729 000136EC E8E0330000              	call malloc
 25730 000136F1 488B7D10                	mov rdi, ENV
 25731 000136F5 BE00000000              	mov rsi, 0
 25732 000136FA BA01000000              	mov rdx, 1
 25733                                  .L_lambda_simple_env_loop_00a4:	; ext_env[i + 1] <-- env[i]
 25734 000136FF 4883FE02                	cmp rsi, 2
 25735 00013703 7410                    	je .L_lambda_simple_env_end_00a4
 25736 00013705 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25737 00013709 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25738 0001370D 48FFC6                  	inc rsi
 25739 00013710 48FFC2                  	inc rdx
 25740 00013713 EBEA                    	jmp .L_lambda_simple_env_loop_00a4
 25741                                  .L_lambda_simple_env_end_00a4:
 25742 00013715 5B                      	pop rbx
 25743 00013716 BE00000000              	mov rsi, 0
 25744                                  .L_lambda_simple_params_loop_00a4:	; copy params
 25745 0001371B 4883FE03                	cmp rsi, 3
 25746 0001371F 740E                    	je .L_lambda_simple_params_end_00a4
 25747 00013721 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25748 00013726 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25749 0001372A 48FFC6                  	inc rsi
 25750 0001372D EBEC                    	jmp .L_lambda_simple_params_loop_00a4
 25751                                  .L_lambda_simple_params_end_00a4:
 25752 0001372F 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25753 00013732 4889C3                  	mov rbx, rax
 25754 00013735 58                      	pop rax
 25755 00013736 C60004                  	mov byte [rax], T_closure
 25756 00013739 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25757 0001373D 48C74009[4A370100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a4
 25758 00013745 E9B0000000              	jmp .L_lambda_simple_end_00a4
 25759                                  .L_lambda_simple_code_00a4:	; lambda-simple body
 25760 0001374A 48837C241001            	cmp qword [rsp + 8 * 2], 1
 25761 00013750 740B                    	je .L_lambda_simple_arity_check_ok_00a4
 25762 00013752 FF742410                	push qword [rsp + 8 * 2]
 25763 00013756 6A01                    	push 1
 25764 00013758 E92D330000              	jmp L_error_incorrect_arity_simple
 25765                                  .L_lambda_simple_arity_check_ok_00a4:
 25766 0001375D C8000000                	enter 0, 0
 25767                                  	; preparing a tail-call
 25768                                  	; preparing a non-tail-call
 25769 00013761 488B4510                	mov rax, ENV
 25770 00013765 488B00                  	mov rax, qword [rax + 8 * 0]
 25771 00013768 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 25772 0001376C 50                      	push rax
 25773 0001376D 6A01                    	push 1	; arg count
 25774 0001376F 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 25775 00013777 803805                  	cmp byte [rax], T_undefined
 25776 0001377A 0F8424320000            	je L_error_fvar_undefined
 25777 00013780 803804                  	cmp byte [rax], T_closure
 25778 00013783 0F859F320000            	jne L_error_non_closure
 25779 00013789 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25780 0001378C FF5009                  	call SOB_CLOSURE_CODE(rax)
 25781 0001378F 50                      	push rax
 25782 00013790 488B4520                	mov rax, PARAM(0)	; param i
 25783 00013794 50                      	push rax
 25784 00013795 488B4510                	mov rax, ENV
 25785 00013799 488B00                  	mov rax, qword [rax + 8 * 0]
 25786 0001379C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 25787 0001379F 50                      	push rax
 25788 000137A0 6A03                    	push 3	; arg count
 25789 000137A2 488B4510                	mov rax, ENV
 25790 000137A6 488B4008                	mov rax, qword [rax + 8 * 1]
 25791 000137AA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 25792 000137AD 488B00                  	mov rax, qword [rax]
 25793 000137B0 803804                  	cmp byte [rax], T_closure
 25794 000137B3 0F856F320000            	jne L_error_non_closure
 25795 000137B9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25796 000137BC FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 25797 000137BF FF7500                  	push qword[rbp]
 25798 000137C2 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 25799 000137C7 48895D10                	mov qword[rbp + 8*2],rbx
 25800 000137CB 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 25801 000137D3 BF00000000              	mov rdi,0
 25802 000137D8 EB00                    	jmp .L_tc_recycle_frame_loop_00f3
 25803                                  .L_tc_recycle_frame_loop_00f3:
 25804 000137DA 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 25805 000137DE 740F                    	je .L_tc_recycle_frame_done_00f3
 25806 000137E0 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 25807 000137E5 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 25808 000137EA 48FFC7                  	inc rdi
 25809 000137ED EBEB                    	jmp .L_tc_recycle_frame_loop_00f3
 25810                                  .L_tc_recycle_frame_done_00f3:
 25811 000137EF 4889EC                  	mov rsp, rbp	; point to last argument
 25812 000137F2 5D                      	pop rbp
 25813 000137F3 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25814 000137F6 C9                      	leave
 25815 000137F7 C21800                  	ret AND_KILL_FRAME(1)
 25816                                  .L_lambda_simple_end_00a4:	; new closure is in rax
 25817 000137FA 803804                  	cmp byte [rax], T_closure
 25818 000137FD 0F8525320000            	jne L_error_non_closure
 25819 00013803 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25820 00013806 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 25821 00013809 FF7500                  	push qword[rbp]
 25822 0001380C 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 25823 00013811 48895D10                	mov qword[rbp + 8*2],rbx
 25824 00013815 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 25825 0001381D BF00000000              	mov rdi,0
 25826 00013822 EB00                    	jmp .L_tc_recycle_frame_loop_00f4
 25827                                  .L_tc_recycle_frame_loop_00f4:
 25828 00013824 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 25829 00013828 740F                    	je .L_tc_recycle_frame_done_00f4
 25830 0001382A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 25831 0001382F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 25832 00013834 48FFC7                  	inc rdi
 25833 00013837 EBEB                    	jmp .L_tc_recycle_frame_loop_00f4
 25834                                  .L_tc_recycle_frame_done_00f4:
 25835 00013839 4889EC                  	mov rsp, rbp	; point to last argument
 25836 0001383C 5D                      	pop rbp
 25837 0001383D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25838                                  .L_if_end_0089:
 25839 00013840 C9                      	leave
 25840 00013841 C22800                  	ret AND_KILL_FRAME(3)
 25841                                  .L_lambda_simple_end_00a3:	; new closure is in rax
 25842 00013844 50                      	push rax
 25843 00013845 488B4520                	mov rax, PARAM(0)	; param run
 25844 00013849 8F00                    	pop qword [rax]
 25845 0001384B 48B8-                   	mov rax, sob_void
 25845 0001384D [0000000000000000] 
 25846                                  
 25847 00013855 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 25848 0001385A E872320000              	call malloc
 25849 0001385F 50                      	push rax
 25850 00013860 BF10000000              	mov rdi, 8 * 2	; new rib
 25851 00013865 E867320000              	call malloc
 25852 0001386A 50                      	push rax
 25853 0001386B BF10000000              	mov rdi, 8 * 2	; extended env
 25854 00013870 E85C320000              	call malloc
 25855 00013875 488B7D10                	mov rdi, ENV
 25856 00013879 BE00000000              	mov rsi, 0
 25857 0001387E BA01000000              	mov rdx, 1
 25858                                  .L_lambda_simple_env_loop_00a5:	; ext_env[i + 1] <-- env[i]
 25859 00013883 4883FE01                	cmp rsi, 1
 25860 00013887 7410                    	je .L_lambda_simple_env_end_00a5
 25861 00013889 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 25862 0001388D 48890CD0                	mov qword [rax + 8 * rdx], rcx
 25863 00013891 48FFC6                  	inc rsi
 25864 00013894 48FFC2                  	inc rdx
 25865 00013897 EBEA                    	jmp .L_lambda_simple_env_loop_00a5
 25866                                  .L_lambda_simple_env_end_00a5:
 25867 00013899 5B                      	pop rbx
 25868 0001389A BE00000000              	mov rsi, 0
 25869                                  .L_lambda_simple_params_loop_00a5:	; copy params
 25870 0001389F 4883FE02                	cmp rsi, 2
 25871 000138A3 740E                    	je .L_lambda_simple_params_end_00a5
 25872 000138A5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 25873 000138AA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 25874 000138AE 48FFC6                  	inc rsi
 25875 000138B1 EBEC                    	jmp .L_lambda_simple_params_loop_00a5
 25876                                  .L_lambda_simple_params_end_00a5:
 25877 000138B3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 25878 000138B6 4889C3                  	mov rbx, rax
 25879 000138B9 58                      	pop rax
 25880 000138BA C60004                  	mov byte [rax], T_closure
 25881 000138BD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 25882 000138C1 48C74009[CE380100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a5
 25883 000138C9 E97D010000              	jmp .L_lambda_simple_end_00a5
 25884                                  .L_lambda_simple_code_00a5:	; lambda-simple body
 25885 000138CE 48837C241005            	cmp qword [rsp + 8 * 2], 5
 25886 000138D4 740B                    	je .L_lambda_simple_arity_check_ok_00a5
 25887 000138D6 FF742410                	push qword [rsp + 8 * 2]
 25888 000138DA 6A05                    	push 5
 25889 000138DC E9A9310000              	jmp L_error_incorrect_arity_simple
 25890                                  .L_lambda_simple_arity_check_ok_00a5:
 25891 000138E1 C8000000                	enter 0, 0
 25892                                  	; preparing a non-tail-call
 25893 000138E5 488B4540                	mov rax, PARAM(4)	; param limit
 25894 000138E9 50                      	push rax
 25895 000138EA 488B4538                	mov rax, PARAM(3)	; param j
 25896 000138EE 50                      	push rax
 25897 000138EF 6A02                    	push 2	; arg count
 25898 000138F1 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 25899 000138F9 803805                  	cmp byte [rax], T_undefined
 25900 000138FC 0F84A2300000            	je L_error_fvar_undefined
 25901 00013902 803804                  	cmp byte [rax], T_closure
 25902 00013905 0F851D310000            	jne L_error_non_closure
 25903 0001390B FF7001                  	push SOB_CLOSURE_ENV(rax)
 25904 0001390E FF5009                  	call SOB_CLOSURE_CODE(rax)
 25905 00013911 483D[02000000]          	cmp rax, sob_boolean_false
 25906 00013917 0F8426010000            	je .L_if_else_008a
 25907                                  	; preparing a non-tail-call
 25908                                  	; preparing a non-tail-call
 25909 0001391D 488B4538                	mov rax, PARAM(3)	; param j
 25910 00013921 50                      	push rax
 25911 00013922 488B4530                	mov rax, PARAM(2)	; param str
 25912 00013926 50                      	push rax
 25913 00013927 6A02                    	push 2	; arg count
 25914 00013929 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 25915 00013931 803805                  	cmp byte [rax], T_undefined
 25916 00013934 0F846A300000            	je L_error_fvar_undefined
 25917 0001393A 803804                  	cmp byte [rax], T_closure
 25918 0001393D 0F85E5300000            	jne L_error_non_closure
 25919 00013943 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25920 00013946 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25921 00013949 50                      	push rax
 25922 0001394A 488B4528                	mov rax, PARAM(1)	; param i
 25923 0001394E 50                      	push rax
 25924 0001394F 488B4520                	mov rax, PARAM(0)	; param target
 25925 00013953 50                      	push rax
 25926 00013954 6A03                    	push 3	; arg count
 25927 00013956 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 25928 0001395E 803805                  	cmp byte [rax], T_undefined
 25929 00013961 0F843D300000            	je L_error_fvar_undefined
 25930 00013967 803804                  	cmp byte [rax], T_closure
 25931 0001396A 0F85B8300000            	jne L_error_non_closure
 25932 00013970 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25933 00013973 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25934                                  
 25935                                  	; preparing a tail-call
 25936 00013976 488B4540                	mov rax, PARAM(4)	; param limit
 25937 0001397A 50                      	push rax
 25938                                  	; preparing a non-tail-call
 25939 0001397B 48B8-                   	mov rax, L_constants + 2270
 25939 0001397D [DE08000000000000] 
 25940 00013985 50                      	push rax
 25941 00013986 488B4538                	mov rax, PARAM(3)	; param j
 25942 0001398A 50                      	push rax
 25943 0001398B 6A02                    	push 2	; arg count
 25944 0001398D 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25945 00013995 803805                  	cmp byte [rax], T_undefined
 25946 00013998 0F8406300000            	je L_error_fvar_undefined
 25947 0001399E 803804                  	cmp byte [rax], T_closure
 25948 000139A1 0F8581300000            	jne L_error_non_closure
 25949 000139A7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25950 000139AA FF5009                  	call SOB_CLOSURE_CODE(rax)
 25951 000139AD 50                      	push rax
 25952 000139AE 488B4530                	mov rax, PARAM(2)	; param str
 25953 000139B2 50                      	push rax
 25954                                  	; preparing a non-tail-call
 25955 000139B3 48B8-                   	mov rax, L_constants + 2270
 25955 000139B5 [DE08000000000000] 
 25956 000139BD 50                      	push rax
 25957 000139BE 488B4528                	mov rax, PARAM(1)	; param i
 25958 000139C2 50                      	push rax
 25959 000139C3 6A02                    	push 2	; arg count
 25960 000139C5 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 25961 000139CD 803805                  	cmp byte [rax], T_undefined
 25962 000139D0 0F84CE2F0000            	je L_error_fvar_undefined
 25963 000139D6 803804                  	cmp byte [rax], T_closure
 25964 000139D9 0F8549300000            	jne L_error_non_closure
 25965 000139DF FF7001                  	push SOB_CLOSURE_ENV(rax)
 25966 000139E2 FF5009                  	call SOB_CLOSURE_CODE(rax)
 25967 000139E5 50                      	push rax
 25968 000139E6 488B4520                	mov rax, PARAM(0)	; param target
 25969 000139EA 50                      	push rax
 25970 000139EB 6A05                    	push 5	; arg count
 25971 000139ED 488B4510                	mov rax, ENV
 25972 000139F1 488B00                  	mov rax, qword [rax + 8 * 0]
 25973 000139F4 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 25974 000139F8 488B00                  	mov rax, qword [rax]
 25975 000139FB 803804                  	cmp byte [rax], T_closure
 25976 000139FE 0F8524300000            	jne L_error_non_closure
 25977 00013A04 FF7001                  	push SOB_CLOSURE_ENV(rax)
 25978 00013A07 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 25979 00013A0A FF7500                  	push qword[rbp]
 25980 00013A0D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 25981 00013A12 48895D10                	mov qword[rbp + 8*2],rbx
 25982 00013A16 48C7451805000000        	mov qword[rbp + 8*3], 5	 ;n turns to m
 25983 00013A1E BF00000000              	mov rdi,0
 25984 00013A23 EB00                    	jmp .L_tc_recycle_frame_loop_00f5
 25985                                  .L_tc_recycle_frame_loop_00f5:
 25986 00013A25 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 25987 00013A29 740F                    	je .L_tc_recycle_frame_done_00f5
 25988 00013A2B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 25989 00013A30 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 25990 00013A35 48FFC7                  	inc rdi
 25991 00013A38 EBEB                    	jmp .L_tc_recycle_frame_loop_00f5
 25992                                  .L_tc_recycle_frame_done_00f5:
 25993 00013A3A 4889EC                  	mov rsp, rbp	; point to last argument
 25994 00013A3D 5D                      	pop rbp
 25995 00013A3E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 25996 00013A41 EB04                    	jmp .L_if_end_008a
 25997                                  .L_if_else_008a:
 25998 00013A43 488B4528                	mov rax, PARAM(1)	; param i
 25999                                  .L_if_end_008a:
 26000 00013A47 C9                      	leave
 26001 00013A48 C23800                  	ret AND_KILL_FRAME(5)
 26002                                  .L_lambda_simple_end_00a5:	; new closure is in rax
 26003 00013A4B 50                      	push rax
 26004 00013A4C 488B4528                	mov rax, PARAM(1)	; param add
 26005 00013A50 8F00                    	pop qword [rax]
 26006 00013A52 48B8-                   	mov rax, sob_void
 26006 00013A54 [0000000000000000] 
 26007                                  
 26008 00013A5C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26009 00013A61 E86B300000              	call malloc
 26010 00013A66 50                      	push rax
 26011 00013A67 BF10000000              	mov rdi, 8 * 2	; new rib
 26012 00013A6C E860300000              	call malloc
 26013 00013A71 50                      	push rax
 26014 00013A72 BF10000000              	mov rdi, 8 * 2	; extended env
 26015 00013A77 E855300000              	call malloc
 26016 00013A7C 488B7D10                	mov rdi, ENV
 26017 00013A80 BE00000000              	mov rsi, 0
 26018 00013A85 BA01000000              	mov rdx, 1
 26019                                  .L_lambda_opt_env_loop_0017:	; ext_env[i + 1] <-- env[i]
 26020 00013A8A 4883FE01                	cmp rsi, 1
 26021 00013A8E 7410                    	je .L_lambda_opt_env_end_0017
 26022 00013A90 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26023 00013A94 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26024 00013A98 48FFC6                  	inc rsi
 26025 00013A9B 48FFC2                  	inc rdx
 26026 00013A9E EBEA                    	jmp .L_lambda_opt_env_loop_0017
 26027                                  .L_lambda_opt_env_end_0017:
 26028 00013AA0 5B                      	pop rbx
 26029 00013AA1 BE00000000              	mov rsi, 0
 26030                                  .L_lambda_opt_params_loop_0017:	; copy params
 26031 00013AA6 4883FE02                	cmp rsi, 2
 26032 00013AAA 740E                    	je .L_lambda_opt_params_end_0017
 26033 00013AAC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26034 00013AB1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26035 00013AB5 48FFC6                  	inc rsi
 26036 00013AB8 EBEC                    	jmp .L_lambda_opt_params_loop_0017
 26037                                  .L_lambda_opt_params_end_0017:
 26038 00013ABA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26039 00013ABD 4889C3                  	mov rbx, rax
 26040 00013AC0 58                      	pop rax
 26041 00013AC1 C60004                  	mov byte [rax], T_closure
 26042 00013AC4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26043 00013AC8 48C74009[D53A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0017
 26044 00013AD0 E9E4020000              	jmp .L_lambda_opt_end_0017
 26045                                  .L_lambda_opt_code_0017:	; lambda-opt body
 26046 00013AD5 48837C241000            	cmp qword [rsp + 8 * 2], 0
 26047 00013ADB 7411                    	je .L_lambda_opt_arity_check_exact_0017
 26048 00013ADD 0F8F3F010000            	jg .L_lambda_opt_arity_check_more_0017
 26049 00013AE3 FF742410                	push qword [rsp + 8 * 2]
 26050 00013AE7 6A00                    	push 0
 26051 00013AE9 E9B02F0000              	jmp L_error_incorrect_arity_opt
 26052                                  .L_lambda_opt_arity_check_exact_0017:
 26053 00013AEE 4883EC08                	sub rsp, 8
 26054 00013AF2 488B442408              	mov rax, qword[rsp + 8 *1]
 26055 00013AF7 48890424                	mov qword[rsp], rax  
 26056 00013AFB 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 26057 00013B00 4889442408              	mov qword[rsp + 8 * 1], rax
 26058 00013B05 B801000000              	mov rax, 1
 26059 00013B0A 4889442410              	mov qword[rsp + 8 *2], rax
 26060 00013B0F 48B8-                   	mov rax, sob_nil
 26060 00013B11 [0100000000000000] 
 26061 00013B19 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 26062 00013B1E C8000000                	enter 0, 0
 26063                                  	; preparing a tail-call
 26064 00013B22 488B4520                	mov rax, PARAM(0)	; param strings
 26065 00013B26 50                      	push rax
 26066 00013B27 48B8-                   	mov rax, L_constants + 2135
 26066 00013B29 [5708000000000000] 
 26067 00013B31 50                      	push rax
 26068                                  	; preparing a non-tail-call
 26069                                  	; preparing a non-tail-call
 26070                                  	; preparing a non-tail-call
 26071 00013B32 488B4520                	mov rax, PARAM(0)	; param strings
 26072 00013B36 50                      	push rax
 26073 00013B37 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 26074 00013B3F 803805                  	cmp byte [rax], T_undefined
 26075 00013B42 0F845C2E0000            	je L_error_fvar_undefined
 26076 00013B48 50                      	push rax
 26077 00013B49 6A02                    	push 2	; arg count
 26078 00013B4B 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 26079 00013B53 803805                  	cmp byte [rax], T_undefined
 26080 00013B56 0F84482E0000            	je L_error_fvar_undefined
 26081 00013B5C 803804                  	cmp byte [rax], T_closure
 26082 00013B5F 0F85C32E0000            	jne L_error_non_closure
 26083 00013B65 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26084 00013B68 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26085 00013B6B 50                      	push rax
 26086 00013B6C 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26087 00013B74 803805                  	cmp byte [rax], T_undefined
 26088 00013B77 0F84272E0000            	je L_error_fvar_undefined
 26089 00013B7D 50                      	push rax
 26090 00013B7E 6A02                    	push 2	; arg count
 26091 00013B80 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 26092 00013B88 803805                  	cmp byte [rax], T_undefined
 26093 00013B8B 0F84132E0000            	je L_error_fvar_undefined
 26094 00013B91 803804                  	cmp byte [rax], T_closure
 26095 00013B94 0F858E2E0000            	jne L_error_non_closure
 26096 00013B9A FF7001                  	push SOB_CLOSURE_ENV(rax)
 26097 00013B9D FF5009                  	call SOB_CLOSURE_CODE(rax)
 26098 00013BA0 50                      	push rax
 26099 00013BA1 6A01                    	push 1	; arg count
 26100 00013BA3 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 26101 00013BAB 803805                  	cmp byte [rax], T_undefined
 26102 00013BAE 0F84F02D0000            	je L_error_fvar_undefined
 26103 00013BB4 803804                  	cmp byte [rax], T_closure
 26104 00013BB7 0F856B2E0000            	jne L_error_non_closure
 26105 00013BBD FF7001                  	push SOB_CLOSURE_ENV(rax)
 26106 00013BC0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26107 00013BC3 50                      	push rax
 26108 00013BC4 6A03                    	push 3	; arg count
 26109 00013BC6 488B4510                	mov rax, ENV
 26110 00013BCA 488B00                  	mov rax, qword [rax + 8 * 0]
 26111 00013BCD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26112 00013BD0 488B00                  	mov rax, qword [rax]
 26113 00013BD3 803804                  	cmp byte [rax], T_closure
 26114 00013BD6 0F854C2E0000            	jne L_error_non_closure
 26115 00013BDC FF7001                  	push SOB_CLOSURE_ENV(rax)
 26116 00013BDF FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 26117 00013BE2 FF7500                  	push qword[rbp]
 26118 00013BE5 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 26119 00013BEA 48895D10                	mov qword[rbp + 8*2],rbx
 26120 00013BEE 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 26121 00013BF6 BF00000000              	mov rdi,0
 26122 00013BFB EB00                    	jmp .L_tc_recycle_frame_loop_00f7
 26123                                  .L_tc_recycle_frame_loop_00f7:
 26124 00013BFD 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 26125 00013C01 740F                    	je .L_tc_recycle_frame_done_00f7
 26126 00013C03 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 26127 00013C08 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 26128 00013C0D 48FFC7                  	inc rdi
 26129 00013C10 EBEB                    	jmp .L_tc_recycle_frame_loop_00f7
 26130                                  .L_tc_recycle_frame_done_00f7:
 26131 00013C12 4889EC                  	mov rsp, rbp	; point to last argument
 26132 00013C15 5D                      	pop rbp
 26133 00013C16 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26134 00013C19 C9                      	leave
 26135 00013C1A C21800                  	ret AND_KILL_FRAME(1)
 26136 00013C1D E997010000              	jmp .L_lambda_opt_end_0017	; new closure is in rax
 26137                                  .L_lambda_opt_arity_check_more_0017:
 26138 00013C22 488B442410              	mov rax, qword[rsp + 2 * 8]
 26139 00013C27 4889C7                  	mov rdi, rax
 26140 00013C2A 49B9-                   	mov r9, sob_nil
 26140 00013C2C [0100000000000000] 
 26141 00013C34 4C8B442410              	mov r8, qword[rsp+2*8]
 26142                                  .L_lambda_opt_stack_shrink_loop_0017:
 26143 00013C39 4983F800                	cmp r8, 0
 26144 00013C3D 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0017
 26145 00013C3F 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 26146 00013C44 BF11000000              	mov rdi, 1+8+8	;for pair
 26147 00013C49 E8832E0000              	call malloc	 ;to create the pair in the stack
 26148 00013C4E C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 26149 00013C51 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 26150 00013C55 4C894809                 	mov qword[rax+1+8],r9
 26151 00013C59 4989C1                  	mov r9 , rax	 ; for the recursion 
 26152 00013C5C 49FFC8                  	dec r8
 26153 00013C5F EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0017
 26154                                  .L_lambda_opt_stack_shrink_loop_exit_0017:
 26155 00013C61 488B442410              	mov rax, qword[rsp + 2 * 8]
 26156 00013C66 BF01000000              	mov rdi, 1
 26157 00013C6B 4829F8                  	sub rax, rdi
 26158 00013C6E 4889C7                  	mov rdi, rax
 26159 00013C71 486BC008                	imul rax,8
 26160 00013C75 4801C4                  	add rsp, rax
 26161 00013C78 4889E0                  	mov rax, rsp
 26162 00013C7B 4989F8                  	mov r8, rdi
 26163 00013C7E 4D6BC008                	imul r8, 8
 26164 00013C82 4C29C0                  	sub rax, r8
 26165 00013C85 4989C2                  	mov r10, rax	; holds the original ret in the stack
 26166 00013C88 4983C218                	add r10, 8*3
 26167 00013C8C 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 26168 00013C90 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 26169 00013C93 4D6BC008                	imul r8,8
 26170 00013C97 4C01C0                  	add rax, r8
 26171 00013C9A 4C8908                  	mov qword[rax] ,r9
 26172 00013C9D 4983EA18                 	sub r10, 8*3
 26173 00013CA1 48C744241001000000      	mov qword [rsp+2*8], 1
 26174 00013CAA 498B4208                	mov rax, qword[r10 + 1 * 8]
 26175 00013CAE 4889442408              	mov qword[rsp + 1*8] ,rax
 26176 00013CB3 498B02                  	mov rax, qword[r10]
 26177 00013CB6 48890424                	mov qword[rsp], rax
 26178 00013CBA C8000000                	enter 0, 0
 26179                                  	; preparing a tail-call
 26180 00013CBE 488B4520                	mov rax, PARAM(0)	; param strings
 26181 00013CC2 50                      	push rax
 26182 00013CC3 48B8-                   	mov rax, L_constants + 2135
 26182 00013CC5 [5708000000000000] 
 26183 00013CCD 50                      	push rax
 26184                                  	; preparing a non-tail-call
 26185                                  	; preparing a non-tail-call
 26186                                  	; preparing a non-tail-call
 26187 00013CCE 488B4520                	mov rax, PARAM(0)	; param strings
 26188 00013CD2 50                      	push rax
 26189 00013CD3 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 26190 00013CDB 803805                  	cmp byte [rax], T_undefined
 26191 00013CDE 0F84C02C0000            	je L_error_fvar_undefined
 26192 00013CE4 50                      	push rax
 26193 00013CE5 6A02                    	push 2	; arg count
 26194 00013CE7 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 26195 00013CEF 803805                  	cmp byte [rax], T_undefined
 26196 00013CF2 0F84AC2C0000            	je L_error_fvar_undefined
 26197 00013CF8 803804                  	cmp byte [rax], T_closure
 26198 00013CFB 0F85272D0000            	jne L_error_non_closure
 26199 00013D01 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26200 00013D04 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26201 00013D07 50                      	push rax
 26202 00013D08 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26203 00013D10 803805                  	cmp byte [rax], T_undefined
 26204 00013D13 0F848B2C0000            	je L_error_fvar_undefined
 26205 00013D19 50                      	push rax
 26206 00013D1A 6A02                    	push 2	; arg count
 26207 00013D1C 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 26208 00013D24 803805                  	cmp byte [rax], T_undefined
 26209 00013D27 0F84772C0000            	je L_error_fvar_undefined
 26210 00013D2D 803804                  	cmp byte [rax], T_closure
 26211 00013D30 0F85F22C0000            	jne L_error_non_closure
 26212 00013D36 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26213 00013D39 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26214 00013D3C 50                      	push rax
 26215 00013D3D 6A01                    	push 1	; arg count
 26216 00013D3F 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 26217 00013D47 803805                  	cmp byte [rax], T_undefined
 26218 00013D4A 0F84542C0000            	je L_error_fvar_undefined
 26219 00013D50 803804                  	cmp byte [rax], T_closure
 26220 00013D53 0F85CF2C0000            	jne L_error_non_closure
 26221 00013D59 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26222 00013D5C FF5009                  	call SOB_CLOSURE_CODE(rax)
 26223 00013D5F 50                      	push rax
 26224 00013D60 6A03                    	push 3	; arg count
 26225 00013D62 488B4510                	mov rax, ENV
 26226 00013D66 488B00                  	mov rax, qword [rax + 8 * 0]
 26227 00013D69 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26228 00013D6C 488B00                  	mov rax, qword [rax]
 26229 00013D6F 803804                  	cmp byte [rax], T_closure
 26230 00013D72 0F85B02C0000            	jne L_error_non_closure
 26231 00013D78 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26232 00013D7B FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 26233 00013D7E FF7500                  	push qword[rbp]
 26234 00013D81 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 26235 00013D86 48895D10                	mov qword[rbp + 8*2],rbx
 26236 00013D8A 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 26237 00013D92 BF00000000              	mov rdi,0
 26238 00013D97 EB00                    	jmp .L_tc_recycle_frame_loop_00f6
 26239                                  .L_tc_recycle_frame_loop_00f6:
 26240 00013D99 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 26241 00013D9D 740F                    	je .L_tc_recycle_frame_done_00f6
 26242 00013D9F 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 26243 00013DA4 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 26244 00013DA9 48FFC7                  	inc rdi
 26245 00013DAC EBEB                    	jmp .L_tc_recycle_frame_loop_00f6
 26246                                  .L_tc_recycle_frame_done_00f6:
 26247 00013DAE 4889EC                  	mov rsp, rbp	; point to last argument
 26248 00013DB1 5D                      	pop rbp
 26249 00013DB2 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26250 00013DB5 C9                      	leave
 26251 00013DB6 C21800                  	ret AND_KILL_FRAME(1)
 26252                                  .L_lambda_opt_end_0017:	; new closure is in rax
 26253 00013DB9 C9                      	leave
 26254 00013DBA C22000                  	ret AND_KILL_FRAME(2)
 26255                                  .L_lambda_simple_end_00a2:	; new closure is in rax
 26256 00013DBD 803804                  	cmp byte [rax], T_closure
 26257 00013DC0 0F85622C0000            	jne L_error_non_closure
 26258 00013DC6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26259 00013DC9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26260 00013DCC 48890425[BD150000]      	mov qword [free_var_120], rax
 26261 00013DD4 48B8-                   	mov rax, sob_void
 26261 00013DD6 [0000000000000000] 
 26262                                  
 26263 00013DDE 4889C7                  	mov rdi, rax
 26264 00013DE1 E8402F0000              	call print_sexpr_if_not_void
 26265                                  	; preparing a non-tail-call
 26266 00013DE6 48B8-                   	mov rax, L_constants + 1993
 26266 00013DE8 [C907000000000000] 
 26267 00013DF0 50                      	push rax
 26268 00013DF1 48B8-                   	mov rax, L_constants + 1993
 26268 00013DF3 [C907000000000000] 
 26269 00013DFB 50                      	push rax
 26270 00013DFC 6A02                    	push 2	; arg count
 26271 00013DFE BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26272 00013E03 E8C92C0000              	call malloc
 26273 00013E08 50                      	push rax
 26274 00013E09 BF00000000              	mov rdi, 8 * 0	; new rib
 26275 00013E0E E8BE2C0000              	call malloc
 26276 00013E13 50                      	push rax
 26277 00013E14 BF08000000              	mov rdi, 8 * 1	; extended env
 26278 00013E19 E8B32C0000              	call malloc
 26279 00013E1E 488B7D10                	mov rdi, ENV
 26280 00013E22 BE00000000              	mov rsi, 0
 26281 00013E27 BA01000000              	mov rdx, 1
 26282                                  .L_lambda_simple_env_loop_00a6:	; ext_env[i + 1] <-- env[i]
 26283 00013E2C 4883FE00                	cmp rsi, 0
 26284 00013E30 7410                    	je .L_lambda_simple_env_end_00a6
 26285 00013E32 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26286 00013E36 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26287 00013E3A 48FFC6                  	inc rsi
 26288 00013E3D 48FFC2                  	inc rdx
 26289 00013E40 EBEA                    	jmp .L_lambda_simple_env_loop_00a6
 26290                                  .L_lambda_simple_env_end_00a6:
 26291 00013E42 5B                      	pop rbx
 26292 00013E43 BE00000000              	mov rsi, 0
 26293                                  .L_lambda_simple_params_loop_00a6:	; copy params
 26294 00013E48 4883FE00                	cmp rsi, 0
 26295 00013E4C 740E                    	je .L_lambda_simple_params_end_00a6
 26296 00013E4E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26297 00013E53 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26298 00013E57 48FFC6                  	inc rsi
 26299 00013E5A EBEC                    	jmp .L_lambda_simple_params_loop_00a6
 26300                                  .L_lambda_simple_params_end_00a6:
 26301 00013E5C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26302 00013E5F 4889C3                  	mov rbx, rax
 26303 00013E62 58                      	pop rax
 26304 00013E63 C60004                  	mov byte [rax], T_closure
 26305 00013E66 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26306 00013E6A 48C74009[773E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a6
 26307 00013E72 E983080000              	jmp .L_lambda_simple_end_00a6
 26308                                  .L_lambda_simple_code_00a6:	; lambda-simple body
 26309 00013E77 48837C241002            	cmp qword [rsp + 8 * 2], 2
 26310 00013E7D 740B                    	je .L_lambda_simple_arity_check_ok_00a6
 26311 00013E7F FF742410                	push qword [rsp + 8 * 2]
 26312 00013E83 6A02                    	push 2
 26313 00013E85 E9002C0000              	jmp L_error_incorrect_arity_simple
 26314                                  .L_lambda_simple_arity_check_ok_00a6:
 26315 00013E8A C8000000                	enter 0, 0
 26316 00013E8E 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 26317 00013E92 488903                  	mov qword [rbx], rax
 26318                                  
 26319 00013E95 488B5D28                	mov rbx, qword [rbp + 8 * (4 + 1)]
 26320 00013E99 488903                  	mov qword [rbx], rax
 26321                                  
 26322 00013E9C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26323 00013EA1 E82B2C0000              	call malloc
 26324 00013EA6 50                      	push rax
 26325 00013EA7 BF10000000              	mov rdi, 8 * 2	; new rib
 26326 00013EAC E8202C0000              	call malloc
 26327 00013EB1 50                      	push rax
 26328 00013EB2 BF10000000              	mov rdi, 8 * 2	; extended env
 26329 00013EB7 E8152C0000              	call malloc
 26330 00013EBC 488B7D10                	mov rdi, ENV
 26331 00013EC0 BE00000000              	mov rsi, 0
 26332 00013EC5 BA01000000              	mov rdx, 1
 26333                                  .L_lambda_simple_env_loop_00a7:	; ext_env[i + 1] <-- env[i]
 26334 00013ECA 4883FE01                	cmp rsi, 1
 26335 00013ECE 7410                    	je .L_lambda_simple_env_end_00a7
 26336 00013ED0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26337 00013ED4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26338 00013ED8 48FFC6                  	inc rsi
 26339 00013EDB 48FFC2                  	inc rdx
 26340 00013EDE EBEA                    	jmp .L_lambda_simple_env_loop_00a7
 26341                                  .L_lambda_simple_env_end_00a7:
 26342 00013EE0 5B                      	pop rbx
 26343 00013EE1 BE00000000              	mov rsi, 0
 26344                                  .L_lambda_simple_params_loop_00a7:	; copy params
 26345 00013EE6 4883FE02                	cmp rsi, 2
 26346 00013EEA 740E                    	je .L_lambda_simple_params_end_00a7
 26347 00013EEC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26348 00013EF1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26349 00013EF5 48FFC6                  	inc rsi
 26350 00013EF8 EBEC                    	jmp .L_lambda_simple_params_loop_00a7
 26351                                  .L_lambda_simple_params_end_00a7:
 26352 00013EFA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26353 00013EFD 4889C3                  	mov rbx, rax
 26354 00013F00 58                      	pop rax
 26355 00013F01 C60004                  	mov byte [rax], T_closure
 26356 00013F04 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26357 00013F08 48C74009[153F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a7
 26358 00013F10 E96C020000              	jmp .L_lambda_simple_end_00a7
 26359                                  .L_lambda_simple_code_00a7:	; lambda-simple body
 26360 00013F15 48837C241003            	cmp qword [rsp + 8 * 2], 3
 26361 00013F1B 740B                    	je .L_lambda_simple_arity_check_ok_00a7
 26362 00013F1D FF742410                	push qword [rsp + 8 * 2]
 26363 00013F21 6A03                    	push 3
 26364 00013F23 E9622B0000              	jmp L_error_incorrect_arity_simple
 26365                                  .L_lambda_simple_arity_check_ok_00a7:
 26366 00013F28 C8000000                	enter 0, 0
 26367                                  	; preparing a non-tail-call
 26368 00013F2C 488B4530                	mov rax, PARAM(2)	; param s
 26369 00013F30 50                      	push rax
 26370 00013F31 6A01                    	push 1	; arg count
 26371 00013F33 488B0425[E0140000]      	mov rax, qword [free_var_107]	; free var null?
 26372 00013F3B 803805                  	cmp byte [rax], T_undefined
 26373 00013F3E 0F84602A0000            	je L_error_fvar_undefined
 26374 00013F44 803804                  	cmp byte [rax], T_closure
 26375 00013F47 0F85DB2A0000            	jne L_error_non_closure
 26376 00013F4D FF7001                  	push SOB_CLOSURE_ENV(rax)
 26377 00013F50 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26378 00013F53 483D[02000000]          	cmp rax, sob_boolean_false
 26379 00013F59 7409                    	je .L_if_else_008b
 26380 00013F5B 488B4520                	mov rax, PARAM(0)	; param target
 26381 00013F5F E919020000              	jmp .L_if_end_008b
 26382                                  .L_if_else_008b:
 26383                                  	; preparing a tail-call
 26384                                  	; preparing a non-tail-call
 26385                                  	; preparing a non-tail-call
 26386                                  	; preparing a non-tail-call
 26387 00013F64 488B4530                	mov rax, PARAM(2)	; param s
 26388 00013F68 50                      	push rax
 26389 00013F69 6A01                    	push 1	; arg count
 26390 00013F6B 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 26391 00013F73 803805                  	cmp byte [rax], T_undefined
 26392 00013F76 0F84282A0000            	je L_error_fvar_undefined
 26393 00013F7C 803804                  	cmp byte [rax], T_closure
 26394 00013F7F 0F85A32A0000            	jne L_error_non_closure
 26395 00013F85 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26396 00013F88 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26397 00013F8B 50                      	push rax
 26398 00013F8C 6A01                    	push 1	; arg count
 26399 00013F8E 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 26400 00013F96 803805                  	cmp byte [rax], T_undefined
 26401 00013F99 0F84052A0000            	je L_error_fvar_undefined
 26402 00013F9F 803804                  	cmp byte [rax], T_closure
 26403 00013FA2 0F85802A0000            	jne L_error_non_closure
 26404 00013FA8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26405 00013FAB FF5009                  	call SOB_CLOSURE_CODE(rax)
 26406 00013FAE 50                      	push rax
 26407 00013FAF 48B8-                   	mov rax, L_constants + 2135
 26407 00013FB1 [5708000000000000] 
 26408 00013FB9 50                      	push rax
 26409                                  	; preparing a non-tail-call
 26410 00013FBA 488B4530                	mov rax, PARAM(2)	; param s
 26411 00013FBE 50                      	push rax
 26412 00013FBF 6A01                    	push 1	; arg count
 26413 00013FC1 488B0425[06110000]      	mov rax, qword [free_var_49]	; free var car
 26414 00013FC9 803805                  	cmp byte [rax], T_undefined
 26415 00013FCC 0F84D2290000            	je L_error_fvar_undefined
 26416 00013FD2 803804                  	cmp byte [rax], T_closure
 26417 00013FD5 0F854D2A0000            	jne L_error_non_closure
 26418 00013FDB FF7001                  	push SOB_CLOSURE_ENV(rax)
 26419 00013FDE FF5009                  	call SOB_CLOSURE_CODE(rax)
 26420 00013FE1 50                      	push rax
 26421 00013FE2 488B4528                	mov rax, PARAM(1)	; param i
 26422 00013FE6 50                      	push rax
 26423 00013FE7 488B4520                	mov rax, PARAM(0)	; param target
 26424 00013FEB 50                      	push rax
 26425 00013FEC 6A05                    	push 5	; arg count
 26426 00013FEE 488B4510                	mov rax, ENV
 26427 00013FF2 488B00                  	mov rax, qword [rax + 8 * 0]
 26428 00013FF5 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 26429 00013FF9 488B00                  	mov rax, qword [rax]
 26430 00013FFC 803804                  	cmp byte [rax], T_closure
 26431 00013FFF 0F85232A0000            	jne L_error_non_closure
 26432 00014005 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26433 00014008 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26434 0001400B 50                      	push rax
 26435 0001400C 6A01                    	push 1	; arg count
 26436 0001400E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26437 00014013 E8B92A0000              	call malloc
 26438 00014018 50                      	push rax
 26439 00014019 BF18000000              	mov rdi, 8 * 3	; new rib
 26440 0001401E E8AE2A0000              	call malloc
 26441 00014023 50                      	push rax
 26442 00014024 BF18000000              	mov rdi, 8 * 3	; extended env
 26443 00014029 E8A32A0000              	call malloc
 26444 0001402E 488B7D10                	mov rdi, ENV
 26445 00014032 BE00000000              	mov rsi, 0
 26446 00014037 BA01000000              	mov rdx, 1
 26447                                  .L_lambda_simple_env_loop_00a8:	; ext_env[i + 1] <-- env[i]
 26448 0001403C 4883FE02                	cmp rsi, 2
 26449 00014040 7410                    	je .L_lambda_simple_env_end_00a8
 26450 00014042 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26451 00014046 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26452 0001404A 48FFC6                  	inc rsi
 26453 0001404D 48FFC2                  	inc rdx
 26454 00014050 EBEA                    	jmp .L_lambda_simple_env_loop_00a8
 26455                                  .L_lambda_simple_env_end_00a8:
 26456 00014052 5B                      	pop rbx
 26457 00014053 BE00000000              	mov rsi, 0
 26458                                  .L_lambda_simple_params_loop_00a8:	; copy params
 26459 00014058 4883FE03                	cmp rsi, 3
 26460 0001405C 740E                    	je .L_lambda_simple_params_end_00a8
 26461 0001405E 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26462 00014063 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26463 00014067 48FFC6                  	inc rsi
 26464 0001406A EBEC                    	jmp .L_lambda_simple_params_loop_00a8
 26465                                  .L_lambda_simple_params_end_00a8:
 26466 0001406C 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26467 0001406F 4889C3                  	mov rbx, rax
 26468 00014072 58                      	pop rax
 26469 00014073 C60004                  	mov byte [rax], T_closure
 26470 00014076 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26471 0001407A 48C74009[87400100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a8
 26472 00014082 E9B0000000              	jmp .L_lambda_simple_end_00a8
 26473                                  .L_lambda_simple_code_00a8:	; lambda-simple body
 26474 00014087 48837C241001            	cmp qword [rsp + 8 * 2], 1
 26475 0001408D 740B                    	je .L_lambda_simple_arity_check_ok_00a8
 26476 0001408F FF742410                	push qword [rsp + 8 * 2]
 26477 00014093 6A01                    	push 1
 26478 00014095 E9F0290000              	jmp L_error_incorrect_arity_simple
 26479                                  .L_lambda_simple_arity_check_ok_00a8:
 26480 0001409A C8000000                	enter 0, 0
 26481                                  	; preparing a tail-call
 26482                                  	; preparing a non-tail-call
 26483 0001409E 488B4510                	mov rax, ENV
 26484 000140A2 488B00                  	mov rax, qword [rax + 8 * 0]
 26485 000140A5 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var s
 26486 000140A9 50                      	push rax
 26487 000140AA 6A01                    	push 1	; arg count
 26488 000140AC 488B0425[05120000]      	mov rax, qword [free_var_64]	; free var cdr
 26489 000140B4 803805                  	cmp byte [rax], T_undefined
 26490 000140B7 0F84E7280000            	je L_error_fvar_undefined
 26491 000140BD 803804                  	cmp byte [rax], T_closure
 26492 000140C0 0F8562290000            	jne L_error_non_closure
 26493 000140C6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26494 000140C9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26495 000140CC 50                      	push rax
 26496 000140CD 488B4520                	mov rax, PARAM(0)	; param i
 26497 000140D1 50                      	push rax
 26498 000140D2 488B4510                	mov rax, ENV
 26499 000140D6 488B00                  	mov rax, qword [rax + 8 * 0]
 26500 000140D9 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var target
 26501 000140DC 50                      	push rax
 26502 000140DD 6A03                    	push 3	; arg count
 26503 000140DF 488B4510                	mov rax, ENV
 26504 000140E3 488B4008                	mov rax, qword [rax + 8 * 1]
 26505 000140E7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26506 000140EA 488B00                  	mov rax, qword [rax]
 26507 000140ED 803804                  	cmp byte [rax], T_closure
 26508 000140F0 0F8532290000            	jne L_error_non_closure
 26509 000140F6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26510 000140F9 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 26511 000140FC FF7500                  	push qword[rbp]
 26512 000140FF 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 26513 00014104 48895D10                	mov qword[rbp + 8*2],rbx
 26514 00014108 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 26515 00014110 BF00000000              	mov rdi,0
 26516 00014115 EB00                    	jmp .L_tc_recycle_frame_loop_00f8
 26517                                  .L_tc_recycle_frame_loop_00f8:
 26518 00014117 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 26519 0001411B 740F                    	je .L_tc_recycle_frame_done_00f8
 26520 0001411D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 26521 00014122 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 26522 00014127 48FFC7                  	inc rdi
 26523 0001412A EBEB                    	jmp .L_tc_recycle_frame_loop_00f8
 26524                                  .L_tc_recycle_frame_done_00f8:
 26525 0001412C 4889EC                  	mov rsp, rbp	; point to last argument
 26526 0001412F 5D                      	pop rbp
 26527 00014130 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26528 00014133 C9                      	leave
 26529 00014134 C21800                  	ret AND_KILL_FRAME(1)
 26530                                  .L_lambda_simple_end_00a8:	; new closure is in rax
 26531 00014137 803804                  	cmp byte [rax], T_closure
 26532 0001413A 0F85E8280000            	jne L_error_non_closure
 26533 00014140 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26534 00014143 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 26535 00014146 FF7500                  	push qword[rbp]
 26536 00014149 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 26537 0001414E 48895D10                	mov qword[rbp + 8*2],rbx
 26538 00014152 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 26539 0001415A BF00000000              	mov rdi,0
 26540 0001415F EB00                    	jmp .L_tc_recycle_frame_loop_00f9
 26541                                  .L_tc_recycle_frame_loop_00f9:
 26542 00014161 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 26543 00014165 740F                    	je .L_tc_recycle_frame_done_00f9
 26544 00014167 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 26545 0001416C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 26546 00014171 48FFC7                  	inc rdi
 26547 00014174 EBEB                    	jmp .L_tc_recycle_frame_loop_00f9
 26548                                  .L_tc_recycle_frame_done_00f9:
 26549 00014176 4889EC                  	mov rsp, rbp	; point to last argument
 26550 00014179 5D                      	pop rbp
 26551 0001417A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26552                                  .L_if_end_008b:
 26553 0001417D C9                      	leave
 26554 0001417E C22800                  	ret AND_KILL_FRAME(3)
 26555                                  .L_lambda_simple_end_00a7:	; new closure is in rax
 26556 00014181 50                      	push rax
 26557 00014182 488B4520                	mov rax, PARAM(0)	; param run
 26558 00014186 8F00                    	pop qword [rax]
 26559 00014188 48B8-                   	mov rax, sob_void
 26559 0001418A [0000000000000000] 
 26560                                  
 26561 00014192 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26562 00014197 E835290000              	call malloc
 26563 0001419C 50                      	push rax
 26564 0001419D BF10000000              	mov rdi, 8 * 2	; new rib
 26565 000141A2 E82A290000              	call malloc
 26566 000141A7 50                      	push rax
 26567 000141A8 BF10000000              	mov rdi, 8 * 2	; extended env
 26568 000141AD E81F290000              	call malloc
 26569 000141B2 488B7D10                	mov rdi, ENV
 26570 000141B6 BE00000000              	mov rsi, 0
 26571 000141BB BA01000000              	mov rdx, 1
 26572                                  .L_lambda_simple_env_loop_00a9:	; ext_env[i + 1] <-- env[i]
 26573 000141C0 4883FE01                	cmp rsi, 1
 26574 000141C4 7410                    	je .L_lambda_simple_env_end_00a9
 26575 000141C6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26576 000141CA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26577 000141CE 48FFC6                  	inc rsi
 26578 000141D1 48FFC2                  	inc rdx
 26579 000141D4 EBEA                    	jmp .L_lambda_simple_env_loop_00a9
 26580                                  .L_lambda_simple_env_end_00a9:
 26581 000141D6 5B                      	pop rbx
 26582 000141D7 BE00000000              	mov rsi, 0
 26583                                  .L_lambda_simple_params_loop_00a9:	; copy params
 26584 000141DC 4883FE02                	cmp rsi, 2
 26585 000141E0 740E                    	je .L_lambda_simple_params_end_00a9
 26586 000141E2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26587 000141E7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26588 000141EB 48FFC6                  	inc rsi
 26589 000141EE EBEC                    	jmp .L_lambda_simple_params_loop_00a9
 26590                                  .L_lambda_simple_params_end_00a9:
 26591 000141F0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26592 000141F3 4889C3                  	mov rbx, rax
 26593 000141F6 58                      	pop rax
 26594 000141F7 C60004                  	mov byte [rax], T_closure
 26595 000141FA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26596 000141FE 48C74009[0B420100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00a9
 26597 00014206 E97D010000              	jmp .L_lambda_simple_end_00a9
 26598                                  .L_lambda_simple_code_00a9:	; lambda-simple body
 26599 0001420B 48837C241005            	cmp qword [rsp + 8 * 2], 5
 26600 00014211 740B                    	je .L_lambda_simple_arity_check_ok_00a9
 26601 00014213 FF742410                	push qword [rsp + 8 * 2]
 26602 00014217 6A05                    	push 5
 26603 00014219 E96C280000              	jmp L_error_incorrect_arity_simple
 26604                                  .L_lambda_simple_arity_check_ok_00a9:
 26605 0001421E C8000000                	enter 0, 0
 26606                                  	; preparing a non-tail-call
 26607 00014222 488B4540                	mov rax, PARAM(4)	; param limit
 26608 00014226 50                      	push rax
 26609 00014227 488B4538                	mov rax, PARAM(3)	; param j
 26610 0001422B 50                      	push rax
 26611 0001422C 6A02                    	push 2	; arg count
 26612 0001422E 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 26613 00014236 803805                  	cmp byte [rax], T_undefined
 26614 00014239 0F8465270000            	je L_error_fvar_undefined
 26615 0001423F 803804                  	cmp byte [rax], T_closure
 26616 00014242 0F85E0270000            	jne L_error_non_closure
 26617 00014248 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26618 0001424B FF5009                  	call SOB_CLOSURE_CODE(rax)
 26619 0001424E 483D[02000000]          	cmp rax, sob_boolean_false
 26620 00014254 0F8426010000            	je .L_if_else_008c
 26621                                  	; preparing a non-tail-call
 26622                                  	; preparing a non-tail-call
 26623 0001425A 488B4538                	mov rax, PARAM(3)	; param j
 26624 0001425E 50                      	push rax
 26625 0001425F 488B4530                	mov rax, PARAM(2)	; param vec
 26626 00014263 50                      	push rax
 26627 00014264 6A02                    	push 2	; arg count
 26628 00014266 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 26629 0001426E 803805                  	cmp byte [rax], T_undefined
 26630 00014271 0F842D270000            	je L_error_fvar_undefined
 26631 00014277 803804                  	cmp byte [rax], T_closure
 26632 0001427A 0F85A8270000            	jne L_error_non_closure
 26633 00014280 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26634 00014283 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26635 00014286 50                      	push rax
 26636 00014287 488B4528                	mov rax, PARAM(1)	; param i
 26637 0001428B 50                      	push rax
 26638 0001428C 488B4520                	mov rax, PARAM(0)	; param target
 26639 00014290 50                      	push rax
 26640 00014291 6A03                    	push 3	; arg count
 26641 00014293 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 26642 0001429B 803805                  	cmp byte [rax], T_undefined
 26643 0001429E 0F8400270000            	je L_error_fvar_undefined
 26644 000142A4 803804                  	cmp byte [rax], T_closure
 26645 000142A7 0F857B270000            	jne L_error_non_closure
 26646 000142AD FF7001                  	push SOB_CLOSURE_ENV(rax)
 26647 000142B0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26648                                  
 26649                                  	; preparing a tail-call
 26650 000142B3 488B4540                	mov rax, PARAM(4)	; param limit
 26651 000142B7 50                      	push rax
 26652                                  	; preparing a non-tail-call
 26653 000142B8 48B8-                   	mov rax, L_constants + 2270
 26653 000142BA [DE08000000000000] 
 26654 000142C2 50                      	push rax
 26655 000142C3 488B4538                	mov rax, PARAM(3)	; param j
 26656 000142C7 50                      	push rax
 26657 000142C8 6A02                    	push 2	; arg count
 26658 000142CA 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26659 000142D2 803805                  	cmp byte [rax], T_undefined
 26660 000142D5 0F84C9260000            	je L_error_fvar_undefined
 26661 000142DB 803804                  	cmp byte [rax], T_closure
 26662 000142DE 0F8544270000            	jne L_error_non_closure
 26663 000142E4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26664 000142E7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26665 000142EA 50                      	push rax
 26666 000142EB 488B4530                	mov rax, PARAM(2)	; param vec
 26667 000142EF 50                      	push rax
 26668                                  	; preparing a non-tail-call
 26669 000142F0 48B8-                   	mov rax, L_constants + 2270
 26669 000142F2 [DE08000000000000] 
 26670 000142FA 50                      	push rax
 26671 000142FB 488B4528                	mov rax, PARAM(1)	; param i
 26672 000142FF 50                      	push rax
 26673 00014300 6A02                    	push 2	; arg count
 26674 00014302 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26675 0001430A 803805                  	cmp byte [rax], T_undefined
 26676 0001430D 0F8491260000            	je L_error_fvar_undefined
 26677 00014313 803804                  	cmp byte [rax], T_closure
 26678 00014316 0F850C270000            	jne L_error_non_closure
 26679 0001431C FF7001                  	push SOB_CLOSURE_ENV(rax)
 26680 0001431F FF5009                  	call SOB_CLOSURE_CODE(rax)
 26681 00014322 50                      	push rax
 26682 00014323 488B4520                	mov rax, PARAM(0)	; param target
 26683 00014327 50                      	push rax
 26684 00014328 6A05                    	push 5	; arg count
 26685 0001432A 488B4510                	mov rax, ENV
 26686 0001432E 488B00                  	mov rax, qword [rax + 8 * 0]
 26687 00014331 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var add
 26688 00014335 488B00                  	mov rax, qword [rax]
 26689 00014338 803804                  	cmp byte [rax], T_closure
 26690 0001433B 0F85E7260000            	jne L_error_non_closure
 26691 00014341 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26692 00014344 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 26693 00014347 FF7500                  	push qword[rbp]
 26694 0001434A 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 26695 0001434F 48895D10                	mov qword[rbp + 8*2],rbx
 26696 00014353 48C7451805000000        	mov qword[rbp + 8*3], 5	 ;n turns to m
 26697 0001435B BF00000000              	mov rdi,0
 26698 00014360 EB00                    	jmp .L_tc_recycle_frame_loop_00fa
 26699                                  .L_tc_recycle_frame_loop_00fa:
 26700 00014362 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 26701 00014366 740F                    	je .L_tc_recycle_frame_done_00fa
 26702 00014368 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 26703 0001436D 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 26704 00014372 48FFC7                  	inc rdi
 26705 00014375 EBEB                    	jmp .L_tc_recycle_frame_loop_00fa
 26706                                  .L_tc_recycle_frame_done_00fa:
 26707 00014377 4889EC                  	mov rsp, rbp	; point to last argument
 26708 0001437A 5D                      	pop rbp
 26709 0001437B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26710 0001437E EB04                    	jmp .L_if_end_008c
 26711                                  .L_if_else_008c:
 26712 00014380 488B4528                	mov rax, PARAM(1)	; param i
 26713                                  .L_if_end_008c:
 26714 00014384 C9                      	leave
 26715 00014385 C23800                  	ret AND_KILL_FRAME(5)
 26716                                  .L_lambda_simple_end_00a9:	; new closure is in rax
 26717 00014388 50                      	push rax
 26718 00014389 488B4528                	mov rax, PARAM(1)	; param add
 26719 0001438D 8F00                    	pop qword [rax]
 26720 0001438F 48B8-                   	mov rax, sob_void
 26720 00014391 [0000000000000000] 
 26721                                  
 26722 00014399 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26723 0001439E E82E270000              	call malloc
 26724 000143A3 50                      	push rax
 26725 000143A4 BF10000000              	mov rdi, 8 * 2	; new rib
 26726 000143A9 E823270000              	call malloc
 26727 000143AE 50                      	push rax
 26728 000143AF BF10000000              	mov rdi, 8 * 2	; extended env
 26729 000143B4 E818270000              	call malloc
 26730 000143B9 488B7D10                	mov rdi, ENV
 26731 000143BD BE00000000              	mov rsi, 0
 26732 000143C2 BA01000000              	mov rdx, 1
 26733                                  .L_lambda_opt_env_loop_0018:	; ext_env[i + 1] <-- env[i]
 26734 000143C7 4883FE01                	cmp rsi, 1
 26735 000143CB 7410                    	je .L_lambda_opt_env_end_0018
 26736 000143CD 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26737 000143D1 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26738 000143D5 48FFC6                  	inc rsi
 26739 000143D8 48FFC2                  	inc rdx
 26740 000143DB EBEA                    	jmp .L_lambda_opt_env_loop_0018
 26741                                  .L_lambda_opt_env_end_0018:
 26742 000143DD 5B                      	pop rbx
 26743 000143DE BE00000000              	mov rsi, 0
 26744                                  .L_lambda_opt_params_loop_0018:	; copy params
 26745 000143E3 4883FE02                	cmp rsi, 2
 26746 000143E7 740E                    	je .L_lambda_opt_params_end_0018
 26747 000143E9 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 26748 000143EE 488914F3                	mov qword [rbx + 8 * rsi], rdx
 26749 000143F2 48FFC6                  	inc rsi
 26750 000143F5 EBEC                    	jmp .L_lambda_opt_params_loop_0018
 26751                                  .L_lambda_opt_params_end_0018:
 26752 000143F7 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 26753 000143FA 4889C3                  	mov rbx, rax
 26754 000143FD 58                      	pop rax
 26755 000143FE C60004                  	mov byte [rax], T_closure
 26756 00014401 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 26757 00014405 48C74009[12440100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_opt_code_0018
 26758 0001440D E9E4020000              	jmp .L_lambda_opt_end_0018
 26759                                  .L_lambda_opt_code_0018:	; lambda-opt body
 26760 00014412 48837C241000            	cmp qword [rsp + 8 * 2], 0
 26761 00014418 7411                    	je .L_lambda_opt_arity_check_exact_0018
 26762 0001441A 0F8F3F010000            	jg .L_lambda_opt_arity_check_more_0018
 26763 00014420 FF742410                	push qword [rsp + 8 * 2]
 26764 00014424 6A00                    	push 0
 26765 00014426 E973260000              	jmp L_error_incorrect_arity_opt
 26766                                  .L_lambda_opt_arity_check_exact_0018:
 26767 0001442B 4883EC08                	sub rsp, 8
 26768 0001442F 488B442408              	mov rax, qword[rsp + 8 *1]
 26769 00014434 48890424                	mov qword[rsp], rax  
 26770 00014438 488B442410              	mov rax, qword[rsp + 8 *2] ;rax now holds env 
 26771 0001443D 4889442408              	mov qword[rsp + 8 * 1], rax
 26772 00014442 B801000000              	mov rax, 1
 26773 00014447 4889442410              	mov qword[rsp + 8 *2], rax
 26774 0001444C 48B8-                   	mov rax, sob_nil
 26774 0001444E [0100000000000000] 
 26775 00014456 4889442418              	mov qword[rsp + 8 * (3 + 0)], rax
 26776 0001445B C8000000                	enter 0, 0
 26777                                  	; preparing a tail-call
 26778 0001445F 488B4520                	mov rax, PARAM(0)	; param vectors
 26779 00014463 50                      	push rax
 26780 00014464 48B8-                   	mov rax, L_constants + 2135
 26780 00014466 [5708000000000000] 
 26781 0001446E 50                      	push rax
 26782                                  	; preparing a non-tail-call
 26783                                  	; preparing a non-tail-call
 26784                                  	; preparing a non-tail-call
 26785 0001446F 488B4520                	mov rax, PARAM(0)	; param vectors
 26786 00014473 50                      	push rax
 26787 00014474 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 26788 0001447C 803805                  	cmp byte [rax], T_undefined
 26789 0001447F 0F841F250000            	je L_error_fvar_undefined
 26790 00014485 50                      	push rax
 26791 00014486 6A02                    	push 2	; arg count
 26792 00014488 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 26793 00014490 803805                  	cmp byte [rax], T_undefined
 26794 00014493 0F840B250000            	je L_error_fvar_undefined
 26795 00014499 803804                  	cmp byte [rax], T_closure
 26796 0001449C 0F8586250000            	jne L_error_non_closure
 26797 000144A2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26798 000144A5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26799 000144A8 50                      	push rax
 26800 000144A9 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26801 000144B1 803805                  	cmp byte [rax], T_undefined
 26802 000144B4 0F84EA240000            	je L_error_fvar_undefined
 26803 000144BA 50                      	push rax
 26804 000144BB 6A02                    	push 2	; arg count
 26805 000144BD 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 26806 000144C5 803805                  	cmp byte [rax], T_undefined
 26807 000144C8 0F84D6240000            	je L_error_fvar_undefined
 26808 000144CE 803804                  	cmp byte [rax], T_closure
 26809 000144D1 0F8551250000            	jne L_error_non_closure
 26810 000144D7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26811 000144DA FF5009                  	call SOB_CLOSURE_CODE(rax)
 26812 000144DD 50                      	push rax
 26813 000144DE 6A01                    	push 1	; arg count
 26814 000144E0 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 26815 000144E8 803805                  	cmp byte [rax], T_undefined
 26816 000144EB 0F84B3240000            	je L_error_fvar_undefined
 26817 000144F1 803804                  	cmp byte [rax], T_closure
 26818 000144F4 0F852E250000            	jne L_error_non_closure
 26819 000144FA FF7001                  	push SOB_CLOSURE_ENV(rax)
 26820 000144FD FF5009                  	call SOB_CLOSURE_CODE(rax)
 26821 00014500 50                      	push rax
 26822 00014501 6A03                    	push 3	; arg count
 26823 00014503 488B4510                	mov rax, ENV
 26824 00014507 488B00                  	mov rax, qword [rax + 8 * 0]
 26825 0001450A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26826 0001450D 488B00                  	mov rax, qword [rax]
 26827 00014510 803804                  	cmp byte [rax], T_closure
 26828 00014513 0F850F250000            	jne L_error_non_closure
 26829 00014519 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26830 0001451C FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 26831 0001451F FF7500                  	push qword[rbp]
 26832 00014522 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 26833 00014527 48895D10                	mov qword[rbp + 8*2],rbx
 26834 0001452B 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 26835 00014533 BF00000000              	mov rdi,0
 26836 00014538 EB00                    	jmp .L_tc_recycle_frame_loop_00fc
 26837                                  .L_tc_recycle_frame_loop_00fc:
 26838 0001453A 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 26839 0001453E 740F                    	je .L_tc_recycle_frame_done_00fc
 26840 00014540 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 26841 00014545 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 26842 0001454A 48FFC7                  	inc rdi
 26843 0001454D EBEB                    	jmp .L_tc_recycle_frame_loop_00fc
 26844                                  .L_tc_recycle_frame_done_00fc:
 26845 0001454F 4889EC                  	mov rsp, rbp	; point to last argument
 26846 00014552 5D                      	pop rbp
 26847 00014553 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26848 00014556 C9                      	leave
 26849 00014557 C21800                  	ret AND_KILL_FRAME(1)
 26850 0001455A E997010000              	jmp .L_lambda_opt_end_0018	; new closure is in rax
 26851                                  .L_lambda_opt_arity_check_more_0018:
 26852 0001455F 488B442410              	mov rax, qword[rsp + 2 * 8]
 26853 00014564 4889C7                  	mov rdi, rax
 26854 00014567 49B9-                   	mov r9, sob_nil
 26854 00014569 [0100000000000000] 
 26855 00014571 4C8B442410              	mov r8, qword[rsp+2*8]
 26856                                  .L_lambda_opt_stack_shrink_loop_0018:
 26857 00014576 4983F800                	cmp r8, 0
 26858 0001457A 7422                    	je .L_lambda_opt_stack_shrink_loop_exit_0018
 26859 0001457C 4A8B5CC410              	mov rbx, qword[rsp + 8 * (2 + r8)]
 26860 00014581 BF11000000              	mov rdi, 1+8+8	;for pair
 26861 00014586 E846250000              	call malloc	 ;to create the pair in the stack
 26862 0001458B C60021                  	mov byte [rax], T_pair	 ; to make it a pair
 26863 0001458E 48895801                	mov qword[rax+1],rbx	 ;put the car in the last (not inside of the list yet) in the pair
 26864 00014592 4C894809                 	mov qword[rax+1+8],r9
 26865 00014596 4989C1                  	mov r9 , rax	 ; for the recursion 
 26866 00014599 49FFC8                  	dec r8
 26867 0001459C EBD8                    	jmp .L_lambda_opt_stack_shrink_loop_0018
 26868                                  .L_lambda_opt_stack_shrink_loop_exit_0018:
 26869 0001459E 488B442410              	mov rax, qword[rsp + 2 * 8]
 26870 000145A3 BF01000000              	mov rdi, 1
 26871 000145A8 4829F8                  	sub rax, rdi
 26872 000145AB 4889C7                  	mov rdi, rax
 26873 000145AE 486BC008                	imul rax,8
 26874 000145B2 4801C4                  	add rsp, rax
 26875 000145B5 4889E0                  	mov rax, rsp
 26876 000145B8 4989F8                  	mov r8, rdi
 26877 000145BB 4D6BC008                	imul r8, 8
 26878 000145BF 4C29C0                  	sub rax, r8
 26879 000145C2 4989C2                  	mov r10, rax	; holds the original ret in the stack
 26880 000145C5 4983C218                	add r10, 8*3
 26881 000145C9 4883C010                	add rax, 2* 8	; rax holds arg count [rsp+ 2*8] in the original 
 26882 000145CD 4C8B00                  	mov r8, qword[rax] ;arg count = r8
 26883 000145D0 4D6BC008                	imul r8,8
 26884 000145D4 4C01C0                  	add rax, r8
 26885 000145D7 4C8908                  	mov qword[rax] ,r9
 26886 000145DA 4983EA18                 	sub r10, 8*3
 26887 000145DE 48C744241001000000      	mov qword [rsp+2*8], 1
 26888 000145E7 498B4208                	mov rax, qword[r10 + 1 * 8]
 26889 000145EB 4889442408              	mov qword[rsp + 1*8] ,rax
 26890 000145F0 498B02                  	mov rax, qword[r10]
 26891 000145F3 48890424                	mov qword[rsp], rax
 26892 000145F7 C8000000                	enter 0, 0
 26893                                  	; preparing a tail-call
 26894 000145FB 488B4520                	mov rax, PARAM(0)	; param vectors
 26895 000145FF 50                      	push rax
 26896 00014600 48B8-                   	mov rax, L_constants + 2135
 26896 00014602 [5708000000000000] 
 26897 0001460A 50                      	push rax
 26898                                  	; preparing a non-tail-call
 26899                                  	; preparing a non-tail-call
 26900                                  	; preparing a non-tail-call
 26901 0001460B 488B4520                	mov rax, PARAM(0)	; param vectors
 26902 0001460F 50                      	push rax
 26903 00014610 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 26904 00014618 803805                  	cmp byte [rax], T_undefined
 26905 0001461B 0F8483230000            	je L_error_fvar_undefined
 26906 00014621 50                      	push rax
 26907 00014622 6A02                    	push 2	; arg count
 26908 00014624 488B0425[9C140000]      	mov rax, qword [free_var_103]	; free var map
 26909 0001462C 803805                  	cmp byte [rax], T_undefined
 26910 0001462F 0F846F230000            	je L_error_fvar_undefined
 26911 00014635 803804                  	cmp byte [rax], T_closure
 26912 00014638 0F85EA230000            	jne L_error_non_closure
 26913 0001463E FF7001                  	push SOB_CLOSURE_ENV(rax)
 26914 00014641 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26915 00014644 50                      	push rax
 26916 00014645 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 26917 0001464D 803805                  	cmp byte [rax], T_undefined
 26918 00014650 0F844E230000            	je L_error_fvar_undefined
 26919 00014656 50                      	push rax
 26920 00014657 6A02                    	push 2	; arg count
 26921 00014659 488B0425[F60F0000]      	mov rax, qword [free_var_33]	; free var apply
 26922 00014661 803805                  	cmp byte [rax], T_undefined
 26923 00014664 0F843A230000            	je L_error_fvar_undefined
 26924 0001466A 803804                  	cmp byte [rax], T_closure
 26925 0001466D 0F85B5230000            	jne L_error_non_closure
 26926 00014673 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26927 00014676 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26928 00014679 50                      	push rax
 26929 0001467A 6A01                    	push 1	; arg count
 26930 0001467C 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 26931 00014684 803805                  	cmp byte [rax], T_undefined
 26932 00014687 0F8417230000            	je L_error_fvar_undefined
 26933 0001468D 803804                  	cmp byte [rax], T_closure
 26934 00014690 0F8592230000            	jne L_error_non_closure
 26935 00014696 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26936 00014699 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26937 0001469C 50                      	push rax
 26938 0001469D 6A03                    	push 3	; arg count
 26939 0001469F 488B4510                	mov rax, ENV
 26940 000146A3 488B00                  	mov rax, qword [rax + 8 * 0]
 26941 000146A6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 26942 000146A9 488B00                  	mov rax, qword [rax]
 26943 000146AC 803804                  	cmp byte [rax], T_closure
 26944 000146AF 0F8573230000            	jne L_error_non_closure
 26945 000146B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26946 000146B8 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 26947 000146BB FF7500                  	push qword[rbp]
 26948 000146BE 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 26949 000146C3 48895D10                	mov qword[rbp + 8*2],rbx
 26950 000146C7 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 26951 000146CF BF00000000              	mov rdi,0
 26952 000146D4 EB00                    	jmp .L_tc_recycle_frame_loop_00fb
 26953                                  .L_tc_recycle_frame_loop_00fb:
 26954 000146D6 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 26955 000146DA 740F                    	je .L_tc_recycle_frame_done_00fb
 26956 000146DC 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 26957 000146E1 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 26958 000146E6 48FFC7                  	inc rdi
 26959 000146E9 EBEB                    	jmp .L_tc_recycle_frame_loop_00fb
 26960                                  .L_tc_recycle_frame_done_00fb:
 26961 000146EB 4889EC                  	mov rsp, rbp	; point to last argument
 26962 000146EE 5D                      	pop rbp
 26963 000146EF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 26964 000146F2 C9                      	leave
 26965 000146F3 C21800                  	ret AND_KILL_FRAME(1)
 26966                                  .L_lambda_opt_end_0018:	; new closure is in rax
 26967 000146F6 C9                      	leave
 26968 000146F7 C22000                  	ret AND_KILL_FRAME(2)
 26969                                  .L_lambda_simple_end_00a6:	; new closure is in rax
 26970 000146FA 803804                  	cmp byte [rax], T_closure
 26971 000146FD 0F8525230000            	jne L_error_non_closure
 26972 00014703 FF7001                  	push SOB_CLOSURE_ENV(rax)
 26973 00014706 FF5009                  	call SOB_CLOSURE_CODE(rax)
 26974 00014709 48890425[33170000]      	mov qword [free_var_142], rax
 26975 00014711 48B8-                   	mov rax, sob_void
 26975 00014713 [0000000000000000] 
 26976                                  
 26977 0001471B 4889C7                  	mov rdi, rax
 26978 0001471E E803260000              	call print_sexpr_if_not_void
 26979 00014723 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 26980 00014728 E8A4230000              	call malloc
 26981 0001472D 50                      	push rax
 26982 0001472E BF00000000              	mov rdi, 8 * 0	; new rib
 26983 00014733 E899230000              	call malloc
 26984 00014738 50                      	push rax
 26985 00014739 BF08000000              	mov rdi, 8 * 1	; extended env
 26986 0001473E E88E230000              	call malloc
 26987 00014743 488B7D10                	mov rdi, ENV
 26988 00014747 BE00000000              	mov rsi, 0
 26989 0001474C BA01000000              	mov rdx, 1
 26990                                  .L_lambda_simple_env_loop_00aa:	; ext_env[i + 1] <-- env[i]
 26991 00014751 4883FE00                	cmp rsi, 0
 26992 00014755 7410                    	je .L_lambda_simple_env_end_00aa
 26993 00014757 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 26994 0001475B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 26995 0001475F 48FFC6                  	inc rsi
 26996 00014762 48FFC2                  	inc rdx
 26997 00014765 EBEA                    	jmp .L_lambda_simple_env_loop_00aa
 26998                                  .L_lambda_simple_env_end_00aa:
 26999 00014767 5B                      	pop rbx
 27000 00014768 BE00000000              	mov rsi, 0
 27001                                  .L_lambda_simple_params_loop_00aa:	; copy params
 27002 0001476D 4883FE00                	cmp rsi, 0
 27003 00014771 740E                    	je .L_lambda_simple_params_end_00aa
 27004 00014773 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27005 00014778 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27006 0001477C 48FFC6                  	inc rsi
 27007 0001477F EBEC                    	jmp .L_lambda_simple_params_loop_00aa
 27008                                  .L_lambda_simple_params_end_00aa:
 27009 00014781 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27010 00014784 4889C3                  	mov rbx, rax
 27011 00014787 58                      	pop rax
 27012 00014788 C60004                  	mov byte [rax], T_closure
 27013 0001478B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27014 0001478F 48C74009[9C470100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00aa
 27015 00014797 E9BF000000              	jmp .L_lambda_simple_end_00aa
 27016                                  .L_lambda_simple_code_00aa:	; lambda-simple body
 27017 0001479C 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27018 000147A2 740B                    	je .L_lambda_simple_arity_check_ok_00aa
 27019 000147A4 FF742410                	push qword [rsp + 8 * 2]
 27020 000147A8 6A01                    	push 1
 27021 000147AA E9DB220000              	jmp L_error_incorrect_arity_simple
 27022                                  .L_lambda_simple_arity_check_ok_00aa:
 27023 000147AF C8000000                	enter 0, 0
 27024                                  	; preparing a tail-call
 27025                                  	; preparing a non-tail-call
 27026                                  	; preparing a non-tail-call
 27027 000147B3 488B4520                	mov rax, PARAM(0)	; param str
 27028 000147B7 50                      	push rax
 27029 000147B8 6A01                    	push 1	; arg count
 27030 000147BA 488B0425[AC150000]      	mov rax, qword [free_var_119]	; free var string->list
 27031 000147C2 803805                  	cmp byte [rax], T_undefined
 27032 000147C5 0F84D9210000            	je L_error_fvar_undefined
 27033 000147CB 803804                  	cmp byte [rax], T_closure
 27034 000147CE 0F8554220000            	jne L_error_non_closure
 27035 000147D4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27036 000147D7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27037 000147DA 50                      	push rax
 27038 000147DB 6A01                    	push 1	; arg count
 27039 000147DD 488B0425[9B150000]      	mov rax, qword [free_var_118]	; free var reverse
 27040 000147E5 803805                  	cmp byte [rax], T_undefined
 27041 000147E8 0F84B6210000            	je L_error_fvar_undefined
 27042 000147EE 803804                  	cmp byte [rax], T_closure
 27043 000147F1 0F8531220000            	jne L_error_non_closure
 27044 000147F7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27045 000147FA FF5009                  	call SOB_CLOSURE_CODE(rax)
 27046 000147FD 50                      	push rax
 27047 000147FE 6A01                    	push 1	; arg count
 27048 00014800 488B0425[03140000]      	mov rax, qword [free_var_94]	; free var list->string
 27049 00014808 803805                  	cmp byte [rax], T_undefined
 27050 0001480B 0F8493210000            	je L_error_fvar_undefined
 27051 00014811 803804                  	cmp byte [rax], T_closure
 27052 00014814 0F850E220000            	jne L_error_non_closure
 27053 0001481A FF7001                  	push SOB_CLOSURE_ENV(rax)
 27054 0001481D FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 27055 00014820 FF7500                  	push qword[rbp]
 27056 00014823 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 27057 00014828 48895D10                	mov qword[rbp + 8*2],rbx
 27058 0001482C 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 27059 00014834 BF00000000              	mov rdi,0
 27060 00014839 EB00                    	jmp .L_tc_recycle_frame_loop_00fd
 27061                                  .L_tc_recycle_frame_loop_00fd:
 27062 0001483B 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 27063 0001483F 740F                    	je .L_tc_recycle_frame_done_00fd
 27064 00014841 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 27065 00014846 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 27066 0001484B 48FFC7                  	inc rdi
 27067 0001484E EBEB                    	jmp .L_tc_recycle_frame_loop_00fd
 27068                                  .L_tc_recycle_frame_done_00fd:
 27069 00014850 4889EC                  	mov rsp, rbp	; point to last argument
 27070 00014853 5D                      	pop rbp
 27071 00014854 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27072 00014857 C9                      	leave
 27073 00014858 C21800                  	ret AND_KILL_FRAME(1)
 27074                                  .L_lambda_simple_end_00aa:	; new closure is in rax
 27075 0001485B 48890425[56160000]      	mov qword [free_var_129], rax
 27076 00014863 48B8-                   	mov rax, sob_void
 27076 00014865 [0000000000000000] 
 27077                                  
 27078 0001486D 4889C7                  	mov rdi, rax
 27079 00014870 E8B1240000              	call print_sexpr_if_not_void
 27080 00014875 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27081 0001487A E852220000              	call malloc
 27082 0001487F 50                      	push rax
 27083 00014880 BF00000000              	mov rdi, 8 * 0	; new rib
 27084 00014885 E847220000              	call malloc
 27085 0001488A 50                      	push rax
 27086 0001488B BF08000000              	mov rdi, 8 * 1	; extended env
 27087 00014890 E83C220000              	call malloc
 27088 00014895 488B7D10                	mov rdi, ENV
 27089 00014899 BE00000000              	mov rsi, 0
 27090 0001489E BA01000000              	mov rdx, 1
 27091                                  .L_lambda_simple_env_loop_00ab:	; ext_env[i + 1] <-- env[i]
 27092 000148A3 4883FE00                	cmp rsi, 0
 27093 000148A7 7410                    	je .L_lambda_simple_env_end_00ab
 27094 000148A9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27095 000148AD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27096 000148B1 48FFC6                  	inc rsi
 27097 000148B4 48FFC2                  	inc rdx
 27098 000148B7 EBEA                    	jmp .L_lambda_simple_env_loop_00ab
 27099                                  .L_lambda_simple_env_end_00ab:
 27100 000148B9 5B                      	pop rbx
 27101 000148BA BE00000000              	mov rsi, 0
 27102                                  .L_lambda_simple_params_loop_00ab:	; copy params
 27103 000148BF 4883FE00                	cmp rsi, 0
 27104 000148C3 740E                    	je .L_lambda_simple_params_end_00ab
 27105 000148C5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27106 000148CA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27107 000148CE 48FFC6                  	inc rsi
 27108 000148D1 EBEC                    	jmp .L_lambda_simple_params_loop_00ab
 27109                                  .L_lambda_simple_params_end_00ab:
 27110 000148D3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27111 000148D6 4889C3                  	mov rbx, rax
 27112 000148D9 58                      	pop rax
 27113 000148DA C60004                  	mov byte [rax], T_closure
 27114 000148DD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27115 000148E1 48C74009[EE480100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ab
 27116 000148E9 E9BF000000              	jmp .L_lambda_simple_end_00ab
 27117                                  .L_lambda_simple_code_00ab:	; lambda-simple body
 27118 000148EE 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27119 000148F4 740B                    	je .L_lambda_simple_arity_check_ok_00ab
 27120 000148F6 FF742410                	push qword [rsp + 8 * 2]
 27121 000148FA 6A01                    	push 1
 27122 000148FC E989210000              	jmp L_error_incorrect_arity_simple
 27123                                  .L_lambda_simple_arity_check_ok_00ab:
 27124 00014901 C8000000                	enter 0, 0
 27125                                  	; preparing a tail-call
 27126                                  	; preparing a non-tail-call
 27127                                  	; preparing a non-tail-call
 27128 00014905 488B4520                	mov rax, PARAM(0)	; param vec
 27129 00014909 50                      	push rax
 27130 0001490A 6A01                    	push 1	; arg count
 27131 0001490C 488B0425[22170000]      	mov rax, qword [free_var_141]	; free var vector->list
 27132 00014914 803805                  	cmp byte [rax], T_undefined
 27133 00014917 0F8487200000            	je L_error_fvar_undefined
 27134 0001491D 803804                  	cmp byte [rax], T_closure
 27135 00014920 0F8502210000            	jne L_error_non_closure
 27136 00014926 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27137 00014929 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27138 0001492C 50                      	push rax
 27139 0001492D 6A01                    	push 1	; arg count
 27140 0001492F 488B0425[9B150000]      	mov rax, qword [free_var_118]	; free var reverse
 27141 00014937 803805                  	cmp byte [rax], T_undefined
 27142 0001493A 0F8464200000            	je L_error_fvar_undefined
 27143 00014940 803804                  	cmp byte [rax], T_closure
 27144 00014943 0F85DF200000            	jne L_error_non_closure
 27145 00014949 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27146 0001494C FF5009                  	call SOB_CLOSURE_CODE(rax)
 27147 0001494F 50                      	push rax
 27148 00014950 6A01                    	push 1	; arg count
 27149 00014952 488B0425[14140000]      	mov rax, qword [free_var_95]	; free var list->vector
 27150 0001495A 803805                  	cmp byte [rax], T_undefined
 27151 0001495D 0F8441200000            	je L_error_fvar_undefined
 27152 00014963 803804                  	cmp byte [rax], T_closure
 27153 00014966 0F85BC200000            	jne L_error_non_closure
 27154 0001496C FF7001                  	push SOB_CLOSURE_ENV(rax)
 27155 0001496F FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 27156 00014972 FF7500                  	push qword[rbp]
 27157 00014975 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 27158 0001497A 48895D10                	mov qword[rbp + 8*2],rbx
 27159 0001497E 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 27160 00014986 BF00000000              	mov rdi,0
 27161 0001498B EB00                    	jmp .L_tc_recycle_frame_loop_00fe
 27162                                  .L_tc_recycle_frame_loop_00fe:
 27163 0001498D 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 27164 00014991 740F                    	je .L_tc_recycle_frame_done_00fe
 27165 00014993 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 27166 00014998 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 27167 0001499D 48FFC7                  	inc rdi
 27168 000149A0 EBEB                    	jmp .L_tc_recycle_frame_loop_00fe
 27169                                  .L_tc_recycle_frame_done_00fe:
 27170 000149A2 4889EC                  	mov rsp, rbp	; point to last argument
 27171 000149A5 5D                      	pop rbp
 27172 000149A6 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27173 000149A9 C9                      	leave
 27174 000149AA C21800                  	ret AND_KILL_FRAME(1)
 27175                                  .L_lambda_simple_end_00ab:	; new closure is in rax
 27176 000149AD 48890425[66170000]      	mov qword [free_var_145], rax
 27177 000149B5 48B8-                   	mov rax, sob_void
 27177 000149B7 [0000000000000000] 
 27178                                  
 27179 000149BF 4889C7                  	mov rdi, rax
 27180 000149C2 E85F230000              	call print_sexpr_if_not_void
 27181                                  	; preparing a non-tail-call
 27182 000149C7 48B8-                   	mov rax, L_constants + 1993
 27182 000149C9 [C907000000000000] 
 27183 000149D1 50                      	push rax
 27184 000149D2 6A01                    	push 1	; arg count
 27185 000149D4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27186 000149D9 E8F3200000              	call malloc
 27187 000149DE 50                      	push rax
 27188 000149DF BF00000000              	mov rdi, 8 * 0	; new rib
 27189 000149E4 E8E8200000              	call malloc
 27190 000149E9 50                      	push rax
 27191 000149EA BF08000000              	mov rdi, 8 * 1	; extended env
 27192 000149EF E8DD200000              	call malloc
 27193 000149F4 488B7D10                	mov rdi, ENV
 27194 000149F8 BE00000000              	mov rsi, 0
 27195 000149FD BA01000000              	mov rdx, 1
 27196                                  .L_lambda_simple_env_loop_00ac:	; ext_env[i + 1] <-- env[i]
 27197 00014A02 4883FE00                	cmp rsi, 0
 27198 00014A06 7410                    	je .L_lambda_simple_env_end_00ac
 27199 00014A08 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27200 00014A0C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27201 00014A10 48FFC6                  	inc rsi
 27202 00014A13 48FFC2                  	inc rdx
 27203 00014A16 EBEA                    	jmp .L_lambda_simple_env_loop_00ac
 27204                                  .L_lambda_simple_env_end_00ac:
 27205 00014A18 5B                      	pop rbx
 27206 00014A19 BE00000000              	mov rsi, 0
 27207                                  .L_lambda_simple_params_loop_00ac:	; copy params
 27208 00014A1E 4883FE00                	cmp rsi, 0
 27209 00014A22 740E                    	je .L_lambda_simple_params_end_00ac
 27210 00014A24 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27211 00014A29 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27212 00014A2D 48FFC6                  	inc rsi
 27213 00014A30 EBEC                    	jmp .L_lambda_simple_params_loop_00ac
 27214                                  .L_lambda_simple_params_end_00ac:
 27215 00014A32 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27216 00014A35 4889C3                  	mov rbx, rax
 27217 00014A38 58                      	pop rax
 27218 00014A39 C60004                  	mov byte [rax], T_closure
 27219 00014A3C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27220 00014A40 48C74009[4D4A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ac
 27221 00014A48 E909060000              	jmp .L_lambda_simple_end_00ac
 27222                                  .L_lambda_simple_code_00ac:	; lambda-simple body
 27223 00014A4D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27224 00014A53 740B                    	je .L_lambda_simple_arity_check_ok_00ac
 27225 00014A55 FF742410                	push qword [rsp + 8 * 2]
 27226 00014A59 6A01                    	push 1
 27227 00014A5B E92A200000              	jmp L_error_incorrect_arity_simple
 27228                                  .L_lambda_simple_arity_check_ok_00ac:
 27229 00014A60 C8000000                	enter 0, 0
 27230 00014A64 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 27231 00014A68 488903                  	mov qword [rbx], rax
 27232                                  
 27233 00014A6B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27234 00014A70 E85C200000              	call malloc
 27235 00014A75 50                      	push rax
 27236 00014A76 BF08000000              	mov rdi, 8 * 1	; new rib
 27237 00014A7B E851200000              	call malloc
 27238 00014A80 50                      	push rax
 27239 00014A81 BF10000000              	mov rdi, 8 * 2	; extended env
 27240 00014A86 E846200000              	call malloc
 27241 00014A8B 488B7D10                	mov rdi, ENV
 27242 00014A8F BE00000000              	mov rsi, 0
 27243 00014A94 BA01000000              	mov rdx, 1
 27244                                  .L_lambda_simple_env_loop_00ad:	; ext_env[i + 1] <-- env[i]
 27245 00014A99 4883FE01                	cmp rsi, 1
 27246 00014A9D 7410                    	je .L_lambda_simple_env_end_00ad
 27247 00014A9F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27248 00014AA3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27249 00014AA7 48FFC6                  	inc rsi
 27250 00014AAA 48FFC2                  	inc rdx
 27251 00014AAD EBEA                    	jmp .L_lambda_simple_env_loop_00ad
 27252                                  .L_lambda_simple_env_end_00ad:
 27253 00014AAF 5B                      	pop rbx
 27254 00014AB0 BE00000000              	mov rsi, 0
 27255                                  .L_lambda_simple_params_loop_00ad:	; copy params
 27256 00014AB5 4883FE01                	cmp rsi, 1
 27257 00014AB9 740E                    	je .L_lambda_simple_params_end_00ad
 27258 00014ABB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27259 00014AC0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27260 00014AC4 48FFC6                  	inc rsi
 27261 00014AC7 EBEC                    	jmp .L_lambda_simple_params_loop_00ad
 27262                                  .L_lambda_simple_params_end_00ad:
 27263 00014AC9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27264 00014ACC 4889C3                  	mov rbx, rax
 27265 00014ACF 58                      	pop rax
 27266 00014AD0 C60004                  	mov byte [rax], T_closure
 27267 00014AD3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27268 00014AD7 48C74009[E44A0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ad
 27269 00014ADF E9E8020000              	jmp .L_lambda_simple_end_00ad
 27270                                  .L_lambda_simple_code_00ad:	; lambda-simple body
 27271 00014AE4 48837C241003            	cmp qword [rsp + 8 * 2], 3
 27272 00014AEA 740B                    	je .L_lambda_simple_arity_check_ok_00ad
 27273 00014AEC FF742410                	push qword [rsp + 8 * 2]
 27274 00014AF0 6A03                    	push 3
 27275 00014AF2 E9931F0000              	jmp L_error_incorrect_arity_simple
 27276                                  .L_lambda_simple_arity_check_ok_00ad:
 27277 00014AF7 C8000000                	enter 0, 0
 27278                                  	; preparing a non-tail-call
 27279 00014AFB 488B4530                	mov rax, PARAM(2)	; param j
 27280 00014AFF 50                      	push rax
 27281 00014B00 488B4528                	mov rax, PARAM(1)	; param i
 27282 00014B04 50                      	push rax
 27283 00014B05 6A02                    	push 2	; arg count
 27284 00014B07 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 27285 00014B0F 803805                  	cmp byte [rax], T_undefined
 27286 00014B12 0F848C1E0000            	je L_error_fvar_undefined
 27287 00014B18 803804                  	cmp byte [rax], T_closure
 27288 00014B1B 0F85071F0000            	jne L_error_non_closure
 27289 00014B21 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27290 00014B24 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27291 00014B27 483D[02000000]          	cmp rax, sob_boolean_false
 27292 00014B2D 0F8491020000            	je .L_if_else_008d
 27293                                  	; preparing a tail-call
 27294                                  	; preparing a non-tail-call
 27295 00014B33 488B4528                	mov rax, PARAM(1)	; param i
 27296 00014B37 50                      	push rax
 27297 00014B38 488B4520                	mov rax, PARAM(0)	; param str
 27298 00014B3C 50                      	push rax
 27299 00014B3D 6A02                    	push 2	; arg count
 27300 00014B3F 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 27301 00014B47 803805                  	cmp byte [rax], T_undefined
 27302 00014B4A 0F84541E0000            	je L_error_fvar_undefined
 27303 00014B50 803804                  	cmp byte [rax], T_closure
 27304 00014B53 0F85CF1E0000            	jne L_error_non_closure
 27305 00014B59 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27306 00014B5C FF5009                  	call SOB_CLOSURE_CODE(rax)
 27307 00014B5F 50                      	push rax
 27308 00014B60 6A01                    	push 1	; arg count
 27309 00014B62 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27310 00014B67 E8651F0000              	call malloc
 27311 00014B6C 50                      	push rax
 27312 00014B6D BF18000000              	mov rdi, 8 * 3	; new rib
 27313 00014B72 E85A1F0000              	call malloc
 27314 00014B77 50                      	push rax
 27315 00014B78 BF18000000              	mov rdi, 8 * 3	; extended env
 27316 00014B7D E84F1F0000              	call malloc
 27317 00014B82 488B7D10                	mov rdi, ENV
 27318 00014B86 BE00000000              	mov rsi, 0
 27319 00014B8B BA01000000              	mov rdx, 1
 27320                                  .L_lambda_simple_env_loop_00ae:	; ext_env[i + 1] <-- env[i]
 27321 00014B90 4883FE02                	cmp rsi, 2
 27322 00014B94 7410                    	je .L_lambda_simple_env_end_00ae
 27323 00014B96 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27324 00014B9A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27325 00014B9E 48FFC6                  	inc rsi
 27326 00014BA1 48FFC2                  	inc rdx
 27327 00014BA4 EBEA                    	jmp .L_lambda_simple_env_loop_00ae
 27328                                  .L_lambda_simple_env_end_00ae:
 27329 00014BA6 5B                      	pop rbx
 27330 00014BA7 BE00000000              	mov rsi, 0
 27331                                  .L_lambda_simple_params_loop_00ae:	; copy params
 27332 00014BAC 4883FE03                	cmp rsi, 3
 27333 00014BB0 740E                    	je .L_lambda_simple_params_end_00ae
 27334 00014BB2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27335 00014BB7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27336 00014BBB 48FFC6                  	inc rsi
 27337 00014BBE EBEC                    	jmp .L_lambda_simple_params_loop_00ae
 27338                                  .L_lambda_simple_params_end_00ae:
 27339 00014BC0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27340 00014BC3 4889C3                  	mov rbx, rax
 27341 00014BC6 58                      	pop rax
 27342 00014BC7 C60004                  	mov byte [rax], T_closure
 27343 00014BCA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27344 00014BCE 48C74009[DB4B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ae
 27345 00014BD6 E9A1010000              	jmp .L_lambda_simple_end_00ae
 27346                                  .L_lambda_simple_code_00ae:	; lambda-simple body
 27347 00014BDB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27348 00014BE1 740B                    	je .L_lambda_simple_arity_check_ok_00ae
 27349 00014BE3 FF742410                	push qword [rsp + 8 * 2]
 27350 00014BE7 6A01                    	push 1
 27351 00014BE9 E99C1E0000              	jmp L_error_incorrect_arity_simple
 27352                                  .L_lambda_simple_arity_check_ok_00ae:
 27353 00014BEE C8000000                	enter 0, 0
 27354                                  	; preparing a non-tail-call
 27355                                  	; preparing a non-tail-call
 27356 00014BF2 488B4510                	mov rax, ENV
 27357 00014BF6 488B00                  	mov rax, qword [rax + 8 * 0]
 27358 00014BF9 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27359 00014BFD 50                      	push rax
 27360 00014BFE 488B4510                	mov rax, ENV
 27361 00014C02 488B00                  	mov rax, qword [rax + 8 * 0]
 27362 00014C05 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27363 00014C08 50                      	push rax
 27364 00014C09 6A02                    	push 2	; arg count
 27365 00014C0B 488B0425[45160000]      	mov rax, qword [free_var_128]	; free var string-ref
 27366 00014C13 803805                  	cmp byte [rax], T_undefined
 27367 00014C16 0F84881D0000            	je L_error_fvar_undefined
 27368 00014C1C 803804                  	cmp byte [rax], T_closure
 27369 00014C1F 0F85031E0000            	jne L_error_non_closure
 27370 00014C25 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27371 00014C28 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27372 00014C2B 50                      	push rax
 27373 00014C2C 488B4510                	mov rax, ENV
 27374 00014C30 488B00                  	mov rax, qword [rax + 8 * 0]
 27375 00014C33 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27376 00014C37 50                      	push rax
 27377 00014C38 488B4510                	mov rax, ENV
 27378 00014C3C 488B00                  	mov rax, qword [rax + 8 * 0]
 27379 00014C3F 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27380 00014C42 50                      	push rax
 27381 00014C43 6A03                    	push 3	; arg count
 27382 00014C45 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 27383 00014C4D 803805                  	cmp byte [rax], T_undefined
 27384 00014C50 0F844E1D0000            	je L_error_fvar_undefined
 27385 00014C56 803804                  	cmp byte [rax], T_closure
 27386 00014C59 0F85C91D0000            	jne L_error_non_closure
 27387 00014C5F FF7001                  	push SOB_CLOSURE_ENV(rax)
 27388 00014C62 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27389                                  
 27390                                  	; preparing a non-tail-call
 27391 00014C65 488B4520                	mov rax, PARAM(0)	; param ch
 27392 00014C69 50                      	push rax
 27393 00014C6A 488B4510                	mov rax, ENV
 27394 00014C6E 488B00                  	mov rax, qword [rax + 8 * 0]
 27395 00014C71 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27396 00014C75 50                      	push rax
 27397 00014C76 488B4510                	mov rax, ENV
 27398 00014C7A 488B00                  	mov rax, qword [rax + 8 * 0]
 27399 00014C7D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27400 00014C80 50                      	push rax
 27401 00014C81 6A03                    	push 3	; arg count
 27402 00014C83 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 27403 00014C8B 803805                  	cmp byte [rax], T_undefined
 27404 00014C8E 0F84101D0000            	je L_error_fvar_undefined
 27405 00014C94 803804                  	cmp byte [rax], T_closure
 27406 00014C97 0F858B1D0000            	jne L_error_non_closure
 27407 00014C9D FF7001                  	push SOB_CLOSURE_ENV(rax)
 27408 00014CA0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27409                                  
 27410                                  	; preparing a tail-call
 27411                                  	; preparing a non-tail-call
 27412 00014CA3 48B8-                   	mov rax, L_constants + 2270
 27412 00014CA5 [DE08000000000000] 
 27413 00014CAD 50                      	push rax
 27414 00014CAE 488B4510                	mov rax, ENV
 27415 00014CB2 488B00                  	mov rax, qword [rax + 8 * 0]
 27416 00014CB5 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27417 00014CB9 50                      	push rax
 27418 00014CBA 6A02                    	push 2	; arg count
 27419 00014CBC 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 27420 00014CC4 803805                  	cmp byte [rax], T_undefined
 27421 00014CC7 0F84D71C0000            	je L_error_fvar_undefined
 27422 00014CCD 803804                  	cmp byte [rax], T_closure
 27423 00014CD0 0F85521D0000            	jne L_error_non_closure
 27424 00014CD6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27425 00014CD9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27426 00014CDC 50                      	push rax
 27427                                  	; preparing a non-tail-call
 27428 00014CDD 48B8-                   	mov rax, L_constants + 2270
 27428 00014CDF [DE08000000000000] 
 27429 00014CE7 50                      	push rax
 27430 00014CE8 488B4510                	mov rax, ENV
 27431 00014CEC 488B00                  	mov rax, qword [rax + 8 * 0]
 27432 00014CEF 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27433 00014CF3 50                      	push rax
 27434 00014CF4 6A02                    	push 2	; arg count
 27435 00014CF6 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 27436 00014CFE 803805                  	cmp byte [rax], T_undefined
 27437 00014D01 0F849D1C0000            	je L_error_fvar_undefined
 27438 00014D07 803804                  	cmp byte [rax], T_closure
 27439 00014D0A 0F85181D0000            	jne L_error_non_closure
 27440 00014D10 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27441 00014D13 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27442 00014D16 50                      	push rax
 27443 00014D17 488B4510                	mov rax, ENV
 27444 00014D1B 488B00                  	mov rax, qword [rax + 8 * 0]
 27445 00014D1E 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27446 00014D21 50                      	push rax
 27447 00014D22 6A03                    	push 3	; arg count
 27448 00014D24 488B4510                	mov rax, ENV
 27449 00014D28 488B4008                	mov rax, qword [rax + 8 * 1]
 27450 00014D2C 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27451 00014D2F 488B00                  	mov rax, qword [rax]
 27452 00014D32 803804                  	cmp byte [rax], T_closure
 27453 00014D35 0F85ED1C0000            	jne L_error_non_closure
 27454 00014D3B FF7001                  	push SOB_CLOSURE_ENV(rax)
 27455 00014D3E FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 27456 00014D41 FF7500                  	push qword[rbp]
 27457 00014D44 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 27458 00014D49 48895D10                	mov qword[rbp + 8*2],rbx
 27459 00014D4D 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 27460 00014D55 BF00000000              	mov rdi,0
 27461 00014D5A EB00                    	jmp .L_tc_recycle_frame_loop_00ff
 27462                                  .L_tc_recycle_frame_loop_00ff:
 27463 00014D5C 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 27464 00014D60 740F                    	je .L_tc_recycle_frame_done_00ff
 27465 00014D62 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 27466 00014D67 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 27467 00014D6C 48FFC7                  	inc rdi
 27468 00014D6F EBEB                    	jmp .L_tc_recycle_frame_loop_00ff
 27469                                  .L_tc_recycle_frame_done_00ff:
 27470 00014D71 4889EC                  	mov rsp, rbp	; point to last argument
 27471 00014D74 5D                      	pop rbp
 27472 00014D75 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27473 00014D78 C9                      	leave
 27474 00014D79 C21800                  	ret AND_KILL_FRAME(1)
 27475                                  .L_lambda_simple_end_00ae:	; new closure is in rax
 27476 00014D7C 803804                  	cmp byte [rax], T_closure
 27477 00014D7F 0F85A31C0000            	jne L_error_non_closure
 27478 00014D85 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27479 00014D88 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 27480 00014D8B FF7500                  	push qword[rbp]
 27481 00014D8E 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 27482 00014D93 48895D10                	mov qword[rbp + 8*2],rbx
 27483 00014D97 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 27484 00014D9F BF00000000              	mov rdi,0
 27485 00014DA4 EB00                    	jmp .L_tc_recycle_frame_loop_0100
 27486                                  .L_tc_recycle_frame_loop_0100:
 27487 00014DA6 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 27488 00014DAA 740F                    	je .L_tc_recycle_frame_done_0100
 27489 00014DAC 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 27490 00014DB1 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 27491 00014DB6 48FFC7                  	inc rdi
 27492 00014DB9 EBEB                    	jmp .L_tc_recycle_frame_loop_0100
 27493                                  .L_tc_recycle_frame_done_0100:
 27494 00014DBB 4889EC                  	mov rsp, rbp	; point to last argument
 27495 00014DBE 5D                      	pop rbp
 27496 00014DBF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27497 00014DC2 EB04                    	jmp .L_if_end_008d
 27498                                  .L_if_else_008d:
 27499 00014DC4 488B4520                	mov rax, PARAM(0)	; param str
 27500                                  .L_if_end_008d:
 27501 00014DC8 C9                      	leave
 27502 00014DC9 C22800                  	ret AND_KILL_FRAME(3)
 27503                                  .L_lambda_simple_end_00ad:	; new closure is in rax
 27504 00014DCC 50                      	push rax
 27505 00014DCD 488B4520                	mov rax, PARAM(0)	; param run
 27506 00014DD1 8F00                    	pop qword [rax]
 27507 00014DD3 48B8-                   	mov rax, sob_void
 27507 00014DD5 [0000000000000000] 
 27508                                  
 27509 00014DDD BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27510 00014DE2 E8EA1C0000              	call malloc
 27511 00014DE7 50                      	push rax
 27512 00014DE8 BF08000000              	mov rdi, 8 * 1	; new rib
 27513 00014DED E8DF1C0000              	call malloc
 27514 00014DF2 50                      	push rax
 27515 00014DF3 BF10000000              	mov rdi, 8 * 2	; extended env
 27516 00014DF8 E8D41C0000              	call malloc
 27517 00014DFD 488B7D10                	mov rdi, ENV
 27518 00014E01 BE00000000              	mov rsi, 0
 27519 00014E06 BA01000000              	mov rdx, 1
 27520                                  .L_lambda_simple_env_loop_00af:	; ext_env[i + 1] <-- env[i]
 27521 00014E0B 4883FE01                	cmp rsi, 1
 27522 00014E0F 7410                    	je .L_lambda_simple_env_end_00af
 27523 00014E11 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27524 00014E15 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27525 00014E19 48FFC6                  	inc rsi
 27526 00014E1C 48FFC2                  	inc rdx
 27527 00014E1F EBEA                    	jmp .L_lambda_simple_env_loop_00af
 27528                                  .L_lambda_simple_env_end_00af:
 27529 00014E21 5B                      	pop rbx
 27530 00014E22 BE00000000              	mov rsi, 0
 27531                                  .L_lambda_simple_params_loop_00af:	; copy params
 27532 00014E27 4883FE01                	cmp rsi, 1
 27533 00014E2B 740E                    	je .L_lambda_simple_params_end_00af
 27534 00014E2D 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27535 00014E32 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27536 00014E36 48FFC6                  	inc rsi
 27537 00014E39 EBEC                    	jmp .L_lambda_simple_params_loop_00af
 27538                                  .L_lambda_simple_params_end_00af:
 27539 00014E3B 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27540 00014E3E 4889C3                  	mov rbx, rax
 27541 00014E41 58                      	pop rax
 27542 00014E42 C60004                  	mov byte [rax], T_closure
 27543 00014E45 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27544 00014E49 48C74009[564E0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00af
 27545 00014E51 E9FC010000              	jmp .L_lambda_simple_end_00af
 27546                                  .L_lambda_simple_code_00af:	; lambda-simple body
 27547 00014E56 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27548 00014E5C 740B                    	je .L_lambda_simple_arity_check_ok_00af
 27549 00014E5E FF742410                	push qword [rsp + 8 * 2]
 27550 00014E62 6A01                    	push 1
 27551 00014E64 E9211C0000              	jmp L_error_incorrect_arity_simple
 27552                                  .L_lambda_simple_arity_check_ok_00af:
 27553 00014E69 C8000000                	enter 0, 0
 27554                                  	; preparing a tail-call
 27555                                  	; preparing a non-tail-call
 27556 00014E6D 488B4520                	mov rax, PARAM(0)	; param str
 27557 00014E71 50                      	push rax
 27558 00014E72 6A01                    	push 1	; arg count
 27559 00014E74 488B0425[34160000]      	mov rax, qword [free_var_127]	; free var string-length
 27560 00014E7C 803805                  	cmp byte [rax], T_undefined
 27561 00014E7F 0F841F1B0000            	je L_error_fvar_undefined
 27562 00014E85 803804                  	cmp byte [rax], T_closure
 27563 00014E88 0F859A1B0000            	jne L_error_non_closure
 27564 00014E8E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27565 00014E91 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27566 00014E94 50                      	push rax
 27567 00014E95 6A01                    	push 1	; arg count
 27568 00014E97 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27569 00014E9C E8301C0000              	call malloc
 27570 00014EA1 50                      	push rax
 27571 00014EA2 BF08000000              	mov rdi, 8 * 1	; new rib
 27572 00014EA7 E8251C0000              	call malloc
 27573 00014EAC 50                      	push rax
 27574 00014EAD BF18000000              	mov rdi, 8 * 3	; extended env
 27575 00014EB2 E81A1C0000              	call malloc
 27576 00014EB7 488B7D10                	mov rdi, ENV
 27577 00014EBB BE00000000              	mov rsi, 0
 27578 00014EC0 BA01000000              	mov rdx, 1
 27579                                  .L_lambda_simple_env_loop_00b0:	; ext_env[i + 1] <-- env[i]
 27580 00014EC5 4883FE02                	cmp rsi, 2
 27581 00014EC9 7410                    	je .L_lambda_simple_env_end_00b0
 27582 00014ECB 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27583 00014ECF 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27584 00014ED3 48FFC6                  	inc rsi
 27585 00014ED6 48FFC2                  	inc rdx
 27586 00014ED9 EBEA                    	jmp .L_lambda_simple_env_loop_00b0
 27587                                  .L_lambda_simple_env_end_00b0:
 27588 00014EDB 5B                      	pop rbx
 27589 00014EDC BE00000000              	mov rsi, 0
 27590                                  .L_lambda_simple_params_loop_00b0:	; copy params
 27591 00014EE1 4883FE01                	cmp rsi, 1
 27592 00014EE5 740E                    	je .L_lambda_simple_params_end_00b0
 27593 00014EE7 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27594 00014EEC 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27595 00014EF0 48FFC6                  	inc rsi
 27596 00014EF3 EBEC                    	jmp .L_lambda_simple_params_loop_00b0
 27597                                  .L_lambda_simple_params_end_00b0:
 27598 00014EF5 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27599 00014EF8 4889C3                  	mov rbx, rax
 27600 00014EFB 58                      	pop rax
 27601 00014EFC C60004                  	mov byte [rax], T_closure
 27602 00014EFF 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27603 00014F03 48C74009[104F0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b0
 27604 00014F0B E9F8000000              	jmp .L_lambda_simple_end_00b0
 27605                                  .L_lambda_simple_code_00b0:	; lambda-simple body
 27606 00014F10 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27607 00014F16 740B                    	je .L_lambda_simple_arity_check_ok_00b0
 27608 00014F18 FF742410                	push qword [rsp + 8 * 2]
 27609 00014F1C 6A01                    	push 1
 27610 00014F1E E9671B0000              	jmp L_error_incorrect_arity_simple
 27611                                  .L_lambda_simple_arity_check_ok_00b0:
 27612 00014F23 C8000000                	enter 0, 0
 27613                                  	; preparing a non-tail-call
 27614 00014F27 488B4520                	mov rax, PARAM(0)	; param n
 27615 00014F2B 50                      	push rax
 27616 00014F2C 6A01                    	push 1	; arg count
 27617 00014F2E 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 27618 00014F36 803805                  	cmp byte [rax], T_undefined
 27619 00014F39 0F84651A0000            	je L_error_fvar_undefined
 27620 00014F3F 803804                  	cmp byte [rax], T_closure
 27621 00014F42 0F85E01A0000            	jne L_error_non_closure
 27622 00014F48 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27623 00014F4B FF5009                  	call SOB_CLOSURE_CODE(rax)
 27624 00014F4E 483D[02000000]          	cmp rax, sob_boolean_false
 27625 00014F54 740F                    	je .L_if_else_008e
 27626 00014F56 488B4510                	mov rax, ENV
 27627 00014F5A 488B00                  	mov rax, qword [rax + 8 * 0]
 27628 00014F5D 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27629 00014F60 E99F000000              	jmp .L_if_end_008e
 27630                                  .L_if_else_008e:
 27631                                  	; preparing a tail-call
 27632                                  	; preparing a non-tail-call
 27633 00014F65 48B8-                   	mov rax, L_constants + 2270
 27633 00014F67 [DE08000000000000] 
 27634 00014F6F 50                      	push rax
 27635 00014F70 488B4520                	mov rax, PARAM(0)	; param n
 27636 00014F74 50                      	push rax
 27637 00014F75 6A02                    	push 2	; arg count
 27638 00014F77 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 27639 00014F7F 803805                  	cmp byte [rax], T_undefined
 27640 00014F82 0F841C1A0000            	je L_error_fvar_undefined
 27641 00014F88 803804                  	cmp byte [rax], T_closure
 27642 00014F8B 0F85971A0000            	jne L_error_non_closure
 27643 00014F91 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27644 00014F94 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27645 00014F97 50                      	push rax
 27646 00014F98 48B8-                   	mov rax, L_constants + 2135
 27646 00014F9A [5708000000000000] 
 27647 00014FA2 50                      	push rax
 27648 00014FA3 488B4510                	mov rax, ENV
 27649 00014FA7 488B00                  	mov rax, qword [rax + 8 * 0]
 27650 00014FAA 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 27651 00014FAD 50                      	push rax
 27652 00014FAE 6A03                    	push 3	; arg count
 27653 00014FB0 488B4510                	mov rax, ENV
 27654 00014FB4 488B4008                	mov rax, qword [rax + 8 * 1]
 27655 00014FB8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27656 00014FBB 488B00                  	mov rax, qword [rax]
 27657 00014FBE 803804                  	cmp byte [rax], T_closure
 27658 00014FC1 0F85611A0000            	jne L_error_non_closure
 27659 00014FC7 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27660 00014FCA FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 27661 00014FCD FF7500                  	push qword[rbp]
 27662 00014FD0 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 27663 00014FD5 48895D10                	mov qword[rbp + 8*2],rbx
 27664 00014FD9 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 27665 00014FE1 BF00000000              	mov rdi,0
 27666 00014FE6 EB00                    	jmp .L_tc_recycle_frame_loop_0101
 27667                                  .L_tc_recycle_frame_loop_0101:
 27668 00014FE8 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 27669 00014FEC 740F                    	je .L_tc_recycle_frame_done_0101
 27670 00014FEE 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 27671 00014FF3 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 27672 00014FF8 48FFC7                  	inc rdi
 27673 00014FFB EBEB                    	jmp .L_tc_recycle_frame_loop_0101
 27674                                  .L_tc_recycle_frame_done_0101:
 27675 00014FFD 4889EC                  	mov rsp, rbp	; point to last argument
 27676 00015000 5D                      	pop rbp
 27677 00015001 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27678                                  .L_if_end_008e:
 27679 00015004 C9                      	leave
 27680 00015005 C21800                  	ret AND_KILL_FRAME(1)
 27681                                  .L_lambda_simple_end_00b0:	; new closure is in rax
 27682 00015008 803804                  	cmp byte [rax], T_closure
 27683 0001500B 0F85171A0000            	jne L_error_non_closure
 27684 00015011 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27685 00015014 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 27686 00015017 FF7500                  	push qword[rbp]
 27687 0001501A 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 27688 0001501F 48895D10                	mov qword[rbp + 8*2],rbx
 27689 00015023 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 27690 0001502B BF00000000              	mov rdi,0
 27691 00015030 EB00                    	jmp .L_tc_recycle_frame_loop_0102
 27692                                  .L_tc_recycle_frame_loop_0102:
 27693 00015032 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 27694 00015036 740F                    	je .L_tc_recycle_frame_done_0102
 27695 00015038 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 27696 0001503D 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 27697 00015042 48FFC7                  	inc rdi
 27698 00015045 EBEB                    	jmp .L_tc_recycle_frame_loop_0102
 27699                                  .L_tc_recycle_frame_done_0102:
 27700 00015047 4889EC                  	mov rsp, rbp	; point to last argument
 27701 0001504A 5D                      	pop rbp
 27702 0001504B FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 27703 0001504E C9                      	leave
 27704 0001504F C21800                  	ret AND_KILL_FRAME(1)
 27705                                  .L_lambda_simple_end_00af:	; new closure is in rax
 27706 00015052 C9                      	leave
 27707 00015053 C21800                  	ret AND_KILL_FRAME(1)
 27708                                  .L_lambda_simple_end_00ac:	; new closure is in rax
 27709 00015056 803804                  	cmp byte [rax], T_closure
 27710 00015059 0F85C9190000            	jne L_error_non_closure
 27711 0001505F FF7001                  	push SOB_CLOSURE_ENV(rax)
 27712 00015062 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27713 00015065 48890425[67160000]      	mov qword [free_var_130], rax
 27714 0001506D 48B8-                   	mov rax, sob_void
 27714 0001506F [0000000000000000] 
 27715                                  
 27716 00015077 4889C7                  	mov rdi, rax
 27717 0001507A E8A71C0000              	call print_sexpr_if_not_void
 27718                                  	; preparing a non-tail-call
 27719 0001507F 48B8-                   	mov rax, L_constants + 1993
 27719 00015081 [C907000000000000] 
 27720 00015089 50                      	push rax
 27721 0001508A 6A01                    	push 1	; arg count
 27722 0001508C BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27723 00015091 E83B1A0000              	call malloc
 27724 00015096 50                      	push rax
 27725 00015097 BF00000000              	mov rdi, 8 * 0	; new rib
 27726 0001509C E8301A0000              	call malloc
 27727 000150A1 50                      	push rax
 27728 000150A2 BF08000000              	mov rdi, 8 * 1	; extended env
 27729 000150A7 E8251A0000              	call malloc
 27730 000150AC 488B7D10                	mov rdi, ENV
 27731 000150B0 BE00000000              	mov rsi, 0
 27732 000150B5 BA01000000              	mov rdx, 1
 27733                                  .L_lambda_simple_env_loop_00b1:	; ext_env[i + 1] <-- env[i]
 27734 000150BA 4883FE00                	cmp rsi, 0
 27735 000150BE 7410                    	je .L_lambda_simple_env_end_00b1
 27736 000150C0 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27737 000150C4 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27738 000150C8 48FFC6                  	inc rsi
 27739 000150CB 48FFC2                  	inc rdx
 27740 000150CE EBEA                    	jmp .L_lambda_simple_env_loop_00b1
 27741                                  .L_lambda_simple_env_end_00b1:
 27742 000150D0 5B                      	pop rbx
 27743 000150D1 BE00000000              	mov rsi, 0
 27744                                  .L_lambda_simple_params_loop_00b1:	; copy params
 27745 000150D6 4883FE00                	cmp rsi, 0
 27746 000150DA 740E                    	je .L_lambda_simple_params_end_00b1
 27747 000150DC 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27748 000150E1 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27749 000150E5 48FFC6                  	inc rsi
 27750 000150E8 EBEC                    	jmp .L_lambda_simple_params_loop_00b1
 27751                                  .L_lambda_simple_params_end_00b1:
 27752 000150EA 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27753 000150ED 4889C3                  	mov rbx, rax
 27754 000150F0 58                      	pop rax
 27755 000150F1 C60004                  	mov byte [rax], T_closure
 27756 000150F4 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27757 000150F8 48C74009[05510100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b1
 27758 00015100 E909060000              	jmp .L_lambda_simple_end_00b1
 27759                                  .L_lambda_simple_code_00b1:	; lambda-simple body
 27760 00015105 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27761 0001510B 740B                    	je .L_lambda_simple_arity_check_ok_00b1
 27762 0001510D FF742410                	push qword [rsp + 8 * 2]
 27763 00015111 6A01                    	push 1
 27764 00015113 E972190000              	jmp L_error_incorrect_arity_simple
 27765                                  .L_lambda_simple_arity_check_ok_00b1:
 27766 00015118 C8000000                	enter 0, 0
 27767 0001511C 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 27768 00015120 488903                  	mov qword [rbx], rax
 27769                                  
 27770 00015123 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27771 00015128 E8A4190000              	call malloc
 27772 0001512D 50                      	push rax
 27773 0001512E BF08000000              	mov rdi, 8 * 1	; new rib
 27774 00015133 E899190000              	call malloc
 27775 00015138 50                      	push rax
 27776 00015139 BF10000000              	mov rdi, 8 * 2	; extended env
 27777 0001513E E88E190000              	call malloc
 27778 00015143 488B7D10                	mov rdi, ENV
 27779 00015147 BE00000000              	mov rsi, 0
 27780 0001514C BA01000000              	mov rdx, 1
 27781                                  .L_lambda_simple_env_loop_00b2:	; ext_env[i + 1] <-- env[i]
 27782 00015151 4883FE01                	cmp rsi, 1
 27783 00015155 7410                    	je .L_lambda_simple_env_end_00b2
 27784 00015157 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27785 0001515B 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27786 0001515F 48FFC6                  	inc rsi
 27787 00015162 48FFC2                  	inc rdx
 27788 00015165 EBEA                    	jmp .L_lambda_simple_env_loop_00b2
 27789                                  .L_lambda_simple_env_end_00b2:
 27790 00015167 5B                      	pop rbx
 27791 00015168 BE00000000              	mov rsi, 0
 27792                                  .L_lambda_simple_params_loop_00b2:	; copy params
 27793 0001516D 4883FE01                	cmp rsi, 1
 27794 00015171 740E                    	je .L_lambda_simple_params_end_00b2
 27795 00015173 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27796 00015178 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27797 0001517C 48FFC6                  	inc rsi
 27798 0001517F EBEC                    	jmp .L_lambda_simple_params_loop_00b2
 27799                                  .L_lambda_simple_params_end_00b2:
 27800 00015181 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27801 00015184 4889C3                  	mov rbx, rax
 27802 00015187 58                      	pop rax
 27803 00015188 C60004                  	mov byte [rax], T_closure
 27804 0001518B 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27805 0001518F 48C74009[9C510100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b2
 27806 00015197 E9E8020000              	jmp .L_lambda_simple_end_00b2
 27807                                  .L_lambda_simple_code_00b2:	; lambda-simple body
 27808 0001519C 48837C241003            	cmp qword [rsp + 8 * 2], 3
 27809 000151A2 740B                    	je .L_lambda_simple_arity_check_ok_00b2
 27810 000151A4 FF742410                	push qword [rsp + 8 * 2]
 27811 000151A8 6A03                    	push 3
 27812 000151AA E9DB180000              	jmp L_error_incorrect_arity_simple
 27813                                  .L_lambda_simple_arity_check_ok_00b2:
 27814 000151AF C8000000                	enter 0, 0
 27815                                  	; preparing a non-tail-call
 27816 000151B3 488B4530                	mov rax, PARAM(2)	; param j
 27817 000151B7 50                      	push rax
 27818 000151B8 488B4528                	mov rax, PARAM(1)	; param i
 27819 000151BC 50                      	push rax
 27820 000151BD 6A02                    	push 2	; arg count
 27821 000151BF 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 27822 000151C7 803805                  	cmp byte [rax], T_undefined
 27823 000151CA 0F84D4170000            	je L_error_fvar_undefined
 27824 000151D0 803804                  	cmp byte [rax], T_closure
 27825 000151D3 0F854F180000            	jne L_error_non_closure
 27826 000151D9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27827 000151DC FF5009                  	call SOB_CLOSURE_CODE(rax)
 27828 000151DF 483D[02000000]          	cmp rax, sob_boolean_false
 27829 000151E5 0F8491020000            	je .L_if_else_008f
 27830                                  	; preparing a tail-call
 27831                                  	; preparing a non-tail-call
 27832 000151EB 488B4528                	mov rax, PARAM(1)	; param i
 27833 000151EF 50                      	push rax
 27834 000151F0 488B4520                	mov rax, PARAM(0)	; param vec
 27835 000151F4 50                      	push rax
 27836 000151F5 6A02                    	push 2	; arg count
 27837 000151F7 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 27838 000151FF 803805                  	cmp byte [rax], T_undefined
 27839 00015202 0F849C170000            	je L_error_fvar_undefined
 27840 00015208 803804                  	cmp byte [rax], T_closure
 27841 0001520B 0F8517180000            	jne L_error_non_closure
 27842 00015211 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27843 00015214 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27844 00015217 50                      	push rax
 27845 00015218 6A01                    	push 1	; arg count
 27846 0001521A BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 27847 0001521F E8AD180000              	call malloc
 27848 00015224 50                      	push rax
 27849 00015225 BF18000000              	mov rdi, 8 * 3	; new rib
 27850 0001522A E8A2180000              	call malloc
 27851 0001522F 50                      	push rax
 27852 00015230 BF18000000              	mov rdi, 8 * 3	; extended env
 27853 00015235 E897180000              	call malloc
 27854 0001523A 488B7D10                	mov rdi, ENV
 27855 0001523E BE00000000              	mov rsi, 0
 27856 00015243 BA01000000              	mov rdx, 1
 27857                                  .L_lambda_simple_env_loop_00b3:	; ext_env[i + 1] <-- env[i]
 27858 00015248 4883FE02                	cmp rsi, 2
 27859 0001524C 7410                    	je .L_lambda_simple_env_end_00b3
 27860 0001524E 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 27861 00015252 48890CD0                	mov qword [rax + 8 * rdx], rcx
 27862 00015256 48FFC6                  	inc rsi
 27863 00015259 48FFC2                  	inc rdx
 27864 0001525C EBEA                    	jmp .L_lambda_simple_env_loop_00b3
 27865                                  .L_lambda_simple_env_end_00b3:
 27866 0001525E 5B                      	pop rbx
 27867 0001525F BE00000000              	mov rsi, 0
 27868                                  .L_lambda_simple_params_loop_00b3:	; copy params
 27869 00015264 4883FE03                	cmp rsi, 3
 27870 00015268 740E                    	je .L_lambda_simple_params_end_00b3
 27871 0001526A 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 27872 0001526F 488914F3                	mov qword [rbx + 8 * rsi], rdx
 27873 00015273 48FFC6                  	inc rsi
 27874 00015276 EBEC                    	jmp .L_lambda_simple_params_loop_00b3
 27875                                  .L_lambda_simple_params_end_00b3:
 27876 00015278 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 27877 0001527B 4889C3                  	mov rbx, rax
 27878 0001527E 58                      	pop rax
 27879 0001527F C60004                  	mov byte [rax], T_closure
 27880 00015282 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 27881 00015286 48C74009[93520100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b3
 27882 0001528E E9A1010000              	jmp .L_lambda_simple_end_00b3
 27883                                  .L_lambda_simple_code_00b3:	; lambda-simple body
 27884 00015293 48837C241001            	cmp qword [rsp + 8 * 2], 1
 27885 00015299 740B                    	je .L_lambda_simple_arity_check_ok_00b3
 27886 0001529B FF742410                	push qword [rsp + 8 * 2]
 27887 0001529F 6A01                    	push 1
 27888 000152A1 E9E4170000              	jmp L_error_incorrect_arity_simple
 27889                                  .L_lambda_simple_arity_check_ok_00b3:
 27890 000152A6 C8000000                	enter 0, 0
 27891                                  	; preparing a non-tail-call
 27892                                  	; preparing a non-tail-call
 27893 000152AA 488B4510                	mov rax, ENV
 27894 000152AE 488B00                  	mov rax, qword [rax + 8 * 0]
 27895 000152B1 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27896 000152B5 50                      	push rax
 27897 000152B6 488B4510                	mov rax, ENV
 27898 000152BA 488B00                  	mov rax, qword [rax + 8 * 0]
 27899 000152BD 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27900 000152C0 50                      	push rax
 27901 000152C1 6A02                    	push 2	; arg count
 27902 000152C3 488B0425[55170000]      	mov rax, qword [free_var_144]	; free var vector-ref
 27903 000152CB 803805                  	cmp byte [rax], T_undefined
 27904 000152CE 0F84D0160000            	je L_error_fvar_undefined
 27905 000152D4 803804                  	cmp byte [rax], T_closure
 27906 000152D7 0F854B170000            	jne L_error_non_closure
 27907 000152DD FF7001                  	push SOB_CLOSURE_ENV(rax)
 27908 000152E0 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27909 000152E3 50                      	push rax
 27910 000152E4 488B4510                	mov rax, ENV
 27911 000152E8 488B00                  	mov rax, qword [rax + 8 * 0]
 27912 000152EB 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27913 000152EF 50                      	push rax
 27914 000152F0 488B4510                	mov rax, ENV
 27915 000152F4 488B00                  	mov rax, qword [rax + 8 * 0]
 27916 000152F7 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27917 000152FA 50                      	push rax
 27918 000152FB 6A03                    	push 3	; arg count
 27919 000152FD 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 27920 00015305 803805                  	cmp byte [rax], T_undefined
 27921 00015308 0F8496160000            	je L_error_fvar_undefined
 27922 0001530E 803804                  	cmp byte [rax], T_closure
 27923 00015311 0F8511170000            	jne L_error_non_closure
 27924 00015317 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27925 0001531A FF5009                  	call SOB_CLOSURE_CODE(rax)
 27926                                  
 27927                                  	; preparing a non-tail-call
 27928 0001531D 488B4520                	mov rax, PARAM(0)	; param ch
 27929 00015321 50                      	push rax
 27930 00015322 488B4510                	mov rax, ENV
 27931 00015326 488B00                  	mov rax, qword [rax + 8 * 0]
 27932 00015329 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27933 0001532D 50                      	push rax
 27934 0001532E 488B4510                	mov rax, ENV
 27935 00015332 488B00                  	mov rax, qword [rax + 8 * 0]
 27936 00015335 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27937 00015338 50                      	push rax
 27938 00015339 6A03                    	push 3	; arg count
 27939 0001533B 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 27940 00015343 803805                  	cmp byte [rax], T_undefined
 27941 00015346 0F8458160000            	je L_error_fvar_undefined
 27942 0001534C 803804                  	cmp byte [rax], T_closure
 27943 0001534F 0F85D3160000            	jne L_error_non_closure
 27944 00015355 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27945 00015358 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27946                                  
 27947                                  	; preparing a tail-call
 27948                                  	; preparing a non-tail-call
 27949 0001535B 48B8-                   	mov rax, L_constants + 2270
 27949 0001535D [DE08000000000000] 
 27950 00015365 50                      	push rax
 27951 00015366 488B4510                	mov rax, ENV
 27952 0001536A 488B00                  	mov rax, qword [rax + 8 * 0]
 27953 0001536D 488B4010                	mov rax, qword [rax + 8 * 2]	; bound var j
 27954 00015371 50                      	push rax
 27955 00015372 6A02                    	push 2	; arg count
 27956 00015374 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 27957 0001537C 803805                  	cmp byte [rax], T_undefined
 27958 0001537F 0F841F160000            	je L_error_fvar_undefined
 27959 00015385 803804                  	cmp byte [rax], T_closure
 27960 00015388 0F859A160000            	jne L_error_non_closure
 27961 0001538E FF7001                  	push SOB_CLOSURE_ENV(rax)
 27962 00015391 FF5009                  	call SOB_CLOSURE_CODE(rax)
 27963 00015394 50                      	push rax
 27964                                  	; preparing a non-tail-call
 27965 00015395 48B8-                   	mov rax, L_constants + 2270
 27965 00015397 [DE08000000000000] 
 27966 0001539F 50                      	push rax
 27967 000153A0 488B4510                	mov rax, ENV
 27968 000153A4 488B00                  	mov rax, qword [rax + 8 * 0]
 27969 000153A7 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var i
 27970 000153AB 50                      	push rax
 27971 000153AC 6A02                    	push 2	; arg count
 27972 000153AE 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 27973 000153B6 803805                  	cmp byte [rax], T_undefined
 27974 000153B9 0F84E5150000            	je L_error_fvar_undefined
 27975 000153BF 803804                  	cmp byte [rax], T_closure
 27976 000153C2 0F8560160000            	jne L_error_non_closure
 27977 000153C8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27978 000153CB FF5009                  	call SOB_CLOSURE_CODE(rax)
 27979 000153CE 50                      	push rax
 27980 000153CF 488B4510                	mov rax, ENV
 27981 000153D3 488B00                  	mov rax, qword [rax + 8 * 0]
 27982 000153D6 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 27983 000153D9 50                      	push rax
 27984 000153DA 6A03                    	push 3	; arg count
 27985 000153DC 488B4510                	mov rax, ENV
 27986 000153E0 488B4008                	mov rax, qword [rax + 8 * 1]
 27987 000153E4 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 27988 000153E7 488B00                  	mov rax, qword [rax]
 27989 000153EA 803804                  	cmp byte [rax], T_closure
 27990 000153ED 0F8535160000            	jne L_error_non_closure
 27991 000153F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 27992 000153F6 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 27993 000153F9 FF7500                  	push qword[rbp]
 27994 000153FC 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 27995 00015401 48895D10                	mov qword[rbp + 8*2],rbx
 27996 00015405 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 27997 0001540D BF00000000              	mov rdi,0
 27998 00015412 EB00                    	jmp .L_tc_recycle_frame_loop_0103
 27999                                  .L_tc_recycle_frame_loop_0103:
 28000 00015414 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 28001 00015418 740F                    	je .L_tc_recycle_frame_done_0103
 28002 0001541A 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 28003 0001541F 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 28004 00015424 48FFC7                  	inc rdi
 28005 00015427 EBEB                    	jmp .L_tc_recycle_frame_loop_0103
 28006                                  .L_tc_recycle_frame_done_0103:
 28007 00015429 4889EC                  	mov rsp, rbp	; point to last argument
 28008 0001542C 5D                      	pop rbp
 28009 0001542D FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28010 00015430 C9                      	leave
 28011 00015431 C21800                  	ret AND_KILL_FRAME(1)
 28012                                  .L_lambda_simple_end_00b3:	; new closure is in rax
 28013 00015434 803804                  	cmp byte [rax], T_closure
 28014 00015437 0F85EB150000            	jne L_error_non_closure
 28015 0001543D FF7001                  	push SOB_CLOSURE_ENV(rax)
 28016 00015440 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 28017 00015443 FF7500                  	push qword[rbp]
 28018 00015446 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 28019 0001544B 48895D10                	mov qword[rbp + 8*2],rbx
 28020 0001544F 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 28021 00015457 BF00000000              	mov rdi,0
 28022 0001545C EB00                    	jmp .L_tc_recycle_frame_loop_0104
 28023                                  .L_tc_recycle_frame_loop_0104:
 28024 0001545E 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 28025 00015462 740F                    	je .L_tc_recycle_frame_done_0104
 28026 00015464 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 28027 00015469 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 28028 0001546E 48FFC7                  	inc rdi
 28029 00015471 EBEB                    	jmp .L_tc_recycle_frame_loop_0104
 28030                                  .L_tc_recycle_frame_done_0104:
 28031 00015473 4889EC                  	mov rsp, rbp	; point to last argument
 28032 00015476 5D                      	pop rbp
 28033 00015477 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28034 0001547A EB04                    	jmp .L_if_end_008f
 28035                                  .L_if_else_008f:
 28036 0001547C 488B4520                	mov rax, PARAM(0)	; param vec
 28037                                  .L_if_end_008f:
 28038 00015480 C9                      	leave
 28039 00015481 C22800                  	ret AND_KILL_FRAME(3)
 28040                                  .L_lambda_simple_end_00b2:	; new closure is in rax
 28041 00015484 50                      	push rax
 28042 00015485 488B4520                	mov rax, PARAM(0)	; param run
 28043 00015489 8F00                    	pop qword [rax]
 28044 0001548B 48B8-                   	mov rax, sob_void
 28044 0001548D [0000000000000000] 
 28045                                  
 28046 00015495 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28047 0001549A E832160000              	call malloc
 28048 0001549F 50                      	push rax
 28049 000154A0 BF08000000              	mov rdi, 8 * 1	; new rib
 28050 000154A5 E827160000              	call malloc
 28051 000154AA 50                      	push rax
 28052 000154AB BF10000000              	mov rdi, 8 * 2	; extended env
 28053 000154B0 E81C160000              	call malloc
 28054 000154B5 488B7D10                	mov rdi, ENV
 28055 000154B9 BE00000000              	mov rsi, 0
 28056 000154BE BA01000000              	mov rdx, 1
 28057                                  .L_lambda_simple_env_loop_00b4:	; ext_env[i + 1] <-- env[i]
 28058 000154C3 4883FE01                	cmp rsi, 1
 28059 000154C7 7410                    	je .L_lambda_simple_env_end_00b4
 28060 000154C9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28061 000154CD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28062 000154D1 48FFC6                  	inc rsi
 28063 000154D4 48FFC2                  	inc rdx
 28064 000154D7 EBEA                    	jmp .L_lambda_simple_env_loop_00b4
 28065                                  .L_lambda_simple_env_end_00b4:
 28066 000154D9 5B                      	pop rbx
 28067 000154DA BE00000000              	mov rsi, 0
 28068                                  .L_lambda_simple_params_loop_00b4:	; copy params
 28069 000154DF 4883FE01                	cmp rsi, 1
 28070 000154E3 740E                    	je .L_lambda_simple_params_end_00b4
 28071 000154E5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28072 000154EA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28073 000154EE 48FFC6                  	inc rsi
 28074 000154F1 EBEC                    	jmp .L_lambda_simple_params_loop_00b4
 28075                                  .L_lambda_simple_params_end_00b4:
 28076 000154F3 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28077 000154F6 4889C3                  	mov rbx, rax
 28078 000154F9 58                      	pop rax
 28079 000154FA C60004                  	mov byte [rax], T_closure
 28080 000154FD 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28081 00015501 48C74009[0E550100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b4
 28082 00015509 E9FC010000              	jmp .L_lambda_simple_end_00b4
 28083                                  .L_lambda_simple_code_00b4:	; lambda-simple body
 28084 0001550E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28085 00015514 740B                    	je .L_lambda_simple_arity_check_ok_00b4
 28086 00015516 FF742410                	push qword [rsp + 8 * 2]
 28087 0001551A 6A01                    	push 1
 28088 0001551C E969150000              	jmp L_error_incorrect_arity_simple
 28089                                  .L_lambda_simple_arity_check_ok_00b4:
 28090 00015521 C8000000                	enter 0, 0
 28091                                  	; preparing a tail-call
 28092                                  	; preparing a non-tail-call
 28093 00015525 488B4520                	mov rax, PARAM(0)	; param vec
 28094 00015529 50                      	push rax
 28095 0001552A 6A01                    	push 1	; arg count
 28096 0001552C 488B0425[44170000]      	mov rax, qword [free_var_143]	; free var vector-length
 28097 00015534 803805                  	cmp byte [rax], T_undefined
 28098 00015537 0F8467140000            	je L_error_fvar_undefined
 28099 0001553D 803804                  	cmp byte [rax], T_closure
 28100 00015540 0F85E2140000            	jne L_error_non_closure
 28101 00015546 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28102 00015549 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28103 0001554C 50                      	push rax
 28104 0001554D 6A01                    	push 1	; arg count
 28105 0001554F BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28106 00015554 E878150000              	call malloc
 28107 00015559 50                      	push rax
 28108 0001555A BF08000000              	mov rdi, 8 * 1	; new rib
 28109 0001555F E86D150000              	call malloc
 28110 00015564 50                      	push rax
 28111 00015565 BF18000000              	mov rdi, 8 * 3	; extended env
 28112 0001556A E862150000              	call malloc
 28113 0001556F 488B7D10                	mov rdi, ENV
 28114 00015573 BE00000000              	mov rsi, 0
 28115 00015578 BA01000000              	mov rdx, 1
 28116                                  .L_lambda_simple_env_loop_00b5:	; ext_env[i + 1] <-- env[i]
 28117 0001557D 4883FE02                	cmp rsi, 2
 28118 00015581 7410                    	je .L_lambda_simple_env_end_00b5
 28119 00015583 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28120 00015587 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28121 0001558B 48FFC6                  	inc rsi
 28122 0001558E 48FFC2                  	inc rdx
 28123 00015591 EBEA                    	jmp .L_lambda_simple_env_loop_00b5
 28124                                  .L_lambda_simple_env_end_00b5:
 28125 00015593 5B                      	pop rbx
 28126 00015594 BE00000000              	mov rsi, 0
 28127                                  .L_lambda_simple_params_loop_00b5:	; copy params
 28128 00015599 4883FE01                	cmp rsi, 1
 28129 0001559D 740E                    	je .L_lambda_simple_params_end_00b5
 28130 0001559F 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28131 000155A4 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28132 000155A8 48FFC6                  	inc rsi
 28133 000155AB EBEC                    	jmp .L_lambda_simple_params_loop_00b5
 28134                                  .L_lambda_simple_params_end_00b5:
 28135 000155AD 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28136 000155B0 4889C3                  	mov rbx, rax
 28137 000155B3 58                      	pop rax
 28138 000155B4 C60004                  	mov byte [rax], T_closure
 28139 000155B7 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28140 000155BB 48C74009[C8550100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b5
 28141 000155C3 E9F8000000              	jmp .L_lambda_simple_end_00b5
 28142                                  .L_lambda_simple_code_00b5:	; lambda-simple body
 28143 000155C8 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28144 000155CE 740B                    	je .L_lambda_simple_arity_check_ok_00b5
 28145 000155D0 FF742410                	push qword [rsp + 8 * 2]
 28146 000155D4 6A01                    	push 1
 28147 000155D6 E9AF140000              	jmp L_error_incorrect_arity_simple
 28148                                  .L_lambda_simple_arity_check_ok_00b5:
 28149 000155DB C8000000                	enter 0, 0
 28150                                  	; preparing a non-tail-call
 28151 000155DF 488B4520                	mov rax, PARAM(0)	; param n
 28152 000155E3 50                      	push rax
 28153 000155E4 6A01                    	push 1	; arg count
 28154 000155E6 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 28155 000155EE 803805                  	cmp byte [rax], T_undefined
 28156 000155F1 0F84AD130000            	je L_error_fvar_undefined
 28157 000155F7 803804                  	cmp byte [rax], T_closure
 28158 000155FA 0F8528140000            	jne L_error_non_closure
 28159 00015600 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28160 00015603 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28161 00015606 483D[02000000]          	cmp rax, sob_boolean_false
 28162 0001560C 740F                    	je .L_if_else_0090
 28163 0001560E 488B4510                	mov rax, ENV
 28164 00015612 488B00                  	mov rax, qword [rax + 8 * 0]
 28165 00015615 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28166 00015618 E99F000000              	jmp .L_if_end_0090
 28167                                  .L_if_else_0090:
 28168                                  	; preparing a tail-call
 28169                                  	; preparing a non-tail-call
 28170 0001561D 48B8-                   	mov rax, L_constants + 2270
 28170 0001561F [DE08000000000000] 
 28171 00015627 50                      	push rax
 28172 00015628 488B4520                	mov rax, PARAM(0)	; param n
 28173 0001562C 50                      	push rax
 28174 0001562D 6A02                    	push 2	; arg count
 28175 0001562F 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 28176 00015637 803805                  	cmp byte [rax], T_undefined
 28177 0001563A 0F8464130000            	je L_error_fvar_undefined
 28178 00015640 803804                  	cmp byte [rax], T_closure
 28179 00015643 0F85DF130000            	jne L_error_non_closure
 28180 00015649 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28181 0001564C FF5009                  	call SOB_CLOSURE_CODE(rax)
 28182 0001564F 50                      	push rax
 28183 00015650 48B8-                   	mov rax, L_constants + 2135
 28183 00015652 [5708000000000000] 
 28184 0001565A 50                      	push rax
 28185 0001565B 488B4510                	mov rax, ENV
 28186 0001565F 488B00                  	mov rax, qword [rax + 8 * 0]
 28187 00015662 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 28188 00015665 50                      	push rax
 28189 00015666 6A03                    	push 3	; arg count
 28190 00015668 488B4510                	mov rax, ENV
 28191 0001566C 488B4008                	mov rax, qword [rax + 8 * 1]
 28192 00015670 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28193 00015673 488B00                  	mov rax, qword [rax]
 28194 00015676 803804                  	cmp byte [rax], T_closure
 28195 00015679 0F85A9130000            	jne L_error_non_closure
 28196 0001567F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28197 00015682 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 28198 00015685 FF7500                  	push qword[rbp]
 28199 00015688 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 28200 0001568D 48895D10                	mov qword[rbp + 8*2],rbx
 28201 00015691 48C7451803000000        	mov qword[rbp + 8*3], 3	 ;n turns to m
 28202 00015699 BF00000000              	mov rdi,0
 28203 0001569E EB00                    	jmp .L_tc_recycle_frame_loop_0105
 28204                                  .L_tc_recycle_frame_loop_0105:
 28205 000156A0 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 28206 000156A4 740F                    	je .L_tc_recycle_frame_done_0105
 28207 000156A6 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 28208 000156AB 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 28209 000156B0 48FFC7                  	inc rdi
 28210 000156B3 EBEB                    	jmp .L_tc_recycle_frame_loop_0105
 28211                                  .L_tc_recycle_frame_done_0105:
 28212 000156B5 4889EC                  	mov rsp, rbp	; point to last argument
 28213 000156B8 5D                      	pop rbp
 28214 000156B9 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28215                                  .L_if_end_0090:
 28216 000156BC C9                      	leave
 28217 000156BD C21800                  	ret AND_KILL_FRAME(1)
 28218                                  .L_lambda_simple_end_00b5:	; new closure is in rax
 28219 000156C0 803804                  	cmp byte [rax], T_closure
 28220 000156C3 0F855F130000            	jne L_error_non_closure
 28221 000156C9 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28222 000156CC FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 28223 000156CF FF7500                  	push qword[rbp]
 28224 000156D2 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 28225 000156D7 48895D10                	mov qword[rbp + 8*2],rbx
 28226 000156DB 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 28227 000156E3 BF00000000              	mov rdi,0
 28228 000156E8 EB00                    	jmp .L_tc_recycle_frame_loop_0106
 28229                                  .L_tc_recycle_frame_loop_0106:
 28230 000156EA 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 28231 000156EE 740F                    	je .L_tc_recycle_frame_done_0106
 28232 000156F0 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 28233 000156F5 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 28234 000156FA 48FFC7                  	inc rdi
 28235 000156FD EBEB                    	jmp .L_tc_recycle_frame_loop_0106
 28236                                  .L_tc_recycle_frame_done_0106:
 28237 000156FF 4889EC                  	mov rsp, rbp	; point to last argument
 28238 00015702 5D                      	pop rbp
 28239 00015703 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28240 00015706 C9                      	leave
 28241 00015707 C21800                  	ret AND_KILL_FRAME(1)
 28242                                  .L_lambda_simple_end_00b4:	; new closure is in rax
 28243 0001570A C9                      	leave
 28244 0001570B C21800                  	ret AND_KILL_FRAME(1)
 28245                                  .L_lambda_simple_end_00b1:	; new closure is in rax
 28246 0001570E 803804                  	cmp byte [rax], T_closure
 28247 00015711 0F8511130000            	jne L_error_non_closure
 28248 00015717 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28249 0001571A FF5009                  	call SOB_CLOSURE_CODE(rax)
 28250 0001571D 48890425[77170000]      	mov qword [free_var_146], rax
 28251 00015725 48B8-                   	mov rax, sob_void
 28251 00015727 [0000000000000000] 
 28252                                  
 28253 0001572F 4889C7                  	mov rdi, rax
 28254 00015732 E8EF150000              	call print_sexpr_if_not_void
 28255 00015737 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28256 0001573C E890130000              	call malloc
 28257 00015741 50                      	push rax
 28258 00015742 BF00000000              	mov rdi, 8 * 0	; new rib
 28259 00015747 E885130000              	call malloc
 28260 0001574C 50                      	push rax
 28261 0001574D BF08000000              	mov rdi, 8 * 1	; extended env
 28262 00015752 E87A130000              	call malloc
 28263 00015757 488B7D10                	mov rdi, ENV
 28264 0001575B BE00000000              	mov rsi, 0
 28265 00015760 BA01000000              	mov rdx, 1
 28266                                  .L_lambda_simple_env_loop_00b6:	; ext_env[i + 1] <-- env[i]
 28267 00015765 4883FE00                	cmp rsi, 0
 28268 00015769 7410                    	je .L_lambda_simple_env_end_00b6
 28269 0001576B 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28270 0001576F 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28271 00015773 48FFC6                  	inc rsi
 28272 00015776 48FFC2                  	inc rdx
 28273 00015779 EBEA                    	jmp .L_lambda_simple_env_loop_00b6
 28274                                  .L_lambda_simple_env_end_00b6:
 28275 0001577B 5B                      	pop rbx
 28276 0001577C BE00000000              	mov rsi, 0
 28277                                  .L_lambda_simple_params_loop_00b6:	; copy params
 28278 00015781 4883FE00                	cmp rsi, 0
 28279 00015785 740E                    	je .L_lambda_simple_params_end_00b6
 28280 00015787 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28281 0001578C 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28282 00015790 48FFC6                  	inc rsi
 28283 00015793 EBEC                    	jmp .L_lambda_simple_params_loop_00b6
 28284                                  .L_lambda_simple_params_end_00b6:
 28285 00015795 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28286 00015798 4889C3                  	mov rbx, rax
 28287 0001579B 58                      	pop rax
 28288 0001579C C60004                  	mov byte [rax], T_closure
 28289 0001579F 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28290 000157A3 48C74009[B0570100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b6
 28291 000157AB E921030000              	jmp .L_lambda_simple_end_00b6
 28292                                  .L_lambda_simple_code_00b6:	; lambda-simple body
 28293 000157B0 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28294 000157B6 740B                    	je .L_lambda_simple_arity_check_ok_00b6
 28295 000157B8 FF742410                	push qword [rsp + 8 * 2]
 28296 000157BC 6A02                    	push 2
 28297 000157BE E9C7120000              	jmp L_error_incorrect_arity_simple
 28298                                  .L_lambda_simple_arity_check_ok_00b6:
 28299 000157C3 C8000000                	enter 0, 0
 28300                                  	; preparing a tail-call
 28301 000157C7 48B8-                   	mov rax, L_constants + 1993
 28301 000157C9 [C907000000000000] 
 28302 000157D1 50                      	push rax
 28303 000157D2 6A01                    	push 1	; arg count
 28304 000157D4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28305 000157D9 E8F3120000              	call malloc
 28306 000157DE 50                      	push rax
 28307 000157DF BF10000000              	mov rdi, 8 * 2	; new rib
 28308 000157E4 E8E8120000              	call malloc
 28309 000157E9 50                      	push rax
 28310 000157EA BF10000000              	mov rdi, 8 * 2	; extended env
 28311 000157EF E8DD120000              	call malloc
 28312 000157F4 488B7D10                	mov rdi, ENV
 28313 000157F8 BE00000000              	mov rsi, 0
 28314 000157FD BA01000000              	mov rdx, 1
 28315                                  .L_lambda_simple_env_loop_00b7:	; ext_env[i + 1] <-- env[i]
 28316 00015802 4883FE01                	cmp rsi, 1
 28317 00015806 7410                    	je .L_lambda_simple_env_end_00b7
 28318 00015808 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28319 0001580C 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28320 00015810 48FFC6                  	inc rsi
 28321 00015813 48FFC2                  	inc rdx
 28322 00015816 EBEA                    	jmp .L_lambda_simple_env_loop_00b7
 28323                                  .L_lambda_simple_env_end_00b7:
 28324 00015818 5B                      	pop rbx
 28325 00015819 BE00000000              	mov rsi, 0
 28326                                  .L_lambda_simple_params_loop_00b7:	; copy params
 28327 0001581E 4883FE02                	cmp rsi, 2
 28328 00015822 740E                    	je .L_lambda_simple_params_end_00b7
 28329 00015824 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28330 00015829 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28331 0001582D 48FFC6                  	inc rsi
 28332 00015830 EBEC                    	jmp .L_lambda_simple_params_loop_00b7
 28333                                  .L_lambda_simple_params_end_00b7:
 28334 00015832 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28335 00015835 4889C3                  	mov rbx, rax
 28336 00015838 58                      	pop rax
 28337 00015839 C60004                  	mov byte [rax], T_closure
 28338 0001583C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28339 00015840 48C74009[4D580100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b7
 28340 00015848 E93A020000              	jmp .L_lambda_simple_end_00b7
 28341                                  .L_lambda_simple_code_00b7:	; lambda-simple body
 28342 0001584D 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28343 00015853 740B                    	je .L_lambda_simple_arity_check_ok_00b7
 28344 00015855 FF742410                	push qword [rsp + 8 * 2]
 28345 00015859 6A01                    	push 1
 28346 0001585B E92A120000              	jmp L_error_incorrect_arity_simple
 28347                                  .L_lambda_simple_arity_check_ok_00b7:
 28348 00015860 C8000000                	enter 0, 0
 28349 00015864 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 28350 00015868 488903                  	mov qword [rbx], rax
 28351                                  
 28352 0001586B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28353 00015870 E85C120000              	call malloc
 28354 00015875 50                      	push rax
 28355 00015876 BF08000000              	mov rdi, 8 * 1	; new rib
 28356 0001587B E851120000              	call malloc
 28357 00015880 50                      	push rax
 28358 00015881 BF18000000              	mov rdi, 8 * 3	; extended env
 28359 00015886 E846120000              	call malloc
 28360 0001588B 488B7D10                	mov rdi, ENV
 28361 0001588F BE00000000              	mov rsi, 0
 28362 00015894 BA01000000              	mov rdx, 1
 28363                                  .L_lambda_simple_env_loop_00b8:	; ext_env[i + 1] <-- env[i]
 28364 00015899 4883FE02                	cmp rsi, 2
 28365 0001589D 7410                    	je .L_lambda_simple_env_end_00b8
 28366 0001589F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28367 000158A3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28368 000158A7 48FFC6                  	inc rsi
 28369 000158AA 48FFC2                  	inc rdx
 28370 000158AD EBEA                    	jmp .L_lambda_simple_env_loop_00b8
 28371                                  .L_lambda_simple_env_end_00b8:
 28372 000158AF 5B                      	pop rbx
 28373 000158B0 BE00000000              	mov rsi, 0
 28374                                  .L_lambda_simple_params_loop_00b8:	; copy params
 28375 000158B5 4883FE01                	cmp rsi, 1
 28376 000158B9 740E                    	je .L_lambda_simple_params_end_00b8
 28377 000158BB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28378 000158C0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28379 000158C4 48FFC6                  	inc rsi
 28380 000158C7 EBEC                    	jmp .L_lambda_simple_params_loop_00b8
 28381                                  .L_lambda_simple_params_end_00b8:
 28382 000158C9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28383 000158CC 4889C3                  	mov rbx, rax
 28384 000158CF 58                      	pop rax
 28385 000158D0 C60004                  	mov byte [rax], T_closure
 28386 000158D3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28387 000158D7 48C74009[E4580100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b8
 28388 000158DF E934010000              	jmp .L_lambda_simple_end_00b8
 28389                                  .L_lambda_simple_code_00b8:	; lambda-simple body
 28390 000158E4 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28391 000158EA 740B                    	je .L_lambda_simple_arity_check_ok_00b8
 28392 000158EC FF742410                	push qword [rsp + 8 * 2]
 28393 000158F0 6A01                    	push 1
 28394 000158F2 E993110000              	jmp L_error_incorrect_arity_simple
 28395                                  .L_lambda_simple_arity_check_ok_00b8:
 28396 000158F7 C8000000                	enter 0, 0
 28397                                  	; preparing a non-tail-call
 28398 000158FB 488B4510                	mov rax, ENV
 28399 000158FF 488B4008                	mov rax, qword [rax + 8 * 1]
 28400 00015903 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28401 00015906 50                      	push rax
 28402 00015907 488B4520                	mov rax, PARAM(0)	; param i
 28403 0001590B 50                      	push rax
 28404 0001590C 6A02                    	push 2	; arg count
 28405 0001590E 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 28406 00015916 803805                  	cmp byte [rax], T_undefined
 28407 00015919 0F8485100000            	je L_error_fvar_undefined
 28408 0001591F 803804                  	cmp byte [rax], T_closure
 28409 00015922 0F8500110000            	jne L_error_non_closure
 28410 00015928 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28411 0001592B FF5009                  	call SOB_CLOSURE_CODE(rax)
 28412 0001592E 483D[02000000]          	cmp rax, sob_boolean_false
 28413 00015934 0F84D0000000            	je .L_if_else_0091
 28414                                  	; preparing a tail-call
 28415                                  	; preparing a non-tail-call
 28416                                  	; preparing a non-tail-call
 28417 0001593A 48B8-                   	mov rax, L_constants + 2270
 28417 0001593C [DE08000000000000] 
 28418 00015944 50                      	push rax
 28419 00015945 488B4520                	mov rax, PARAM(0)	; param i
 28420 00015949 50                      	push rax
 28421 0001594A 6A02                    	push 2	; arg count
 28422 0001594C 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 28423 00015954 803805                  	cmp byte [rax], T_undefined
 28424 00015957 0F8447100000            	je L_error_fvar_undefined
 28425 0001595D 803804                  	cmp byte [rax], T_closure
 28426 00015960 0F85C2100000            	jne L_error_non_closure
 28427 00015966 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28428 00015969 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28429 0001596C 50                      	push rax
 28430 0001596D 6A01                    	push 1	; arg count
 28431 0001596F 488B4510                	mov rax, ENV
 28432 00015973 488B00                  	mov rax, qword [rax + 8 * 0]
 28433 00015976 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28434 00015979 488B00                  	mov rax, qword [rax]
 28435 0001597C 803804                  	cmp byte [rax], T_closure
 28436 0001597F 0F85A3100000            	jne L_error_non_closure
 28437 00015985 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28438 00015988 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28439 0001598B 50                      	push rax
 28440                                  	; preparing a non-tail-call
 28441 0001598C 488B4520                	mov rax, PARAM(0)	; param i
 28442 00015990 50                      	push rax
 28443 00015991 6A01                    	push 1	; arg count
 28444 00015993 488B4510                	mov rax, ENV
 28445 00015997 488B4008                	mov rax, qword [rax + 8 * 1]
 28446 0001599B 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28447 0001599F 803804                  	cmp byte [rax], T_closure
 28448 000159A2 0F8580100000            	jne L_error_non_closure
 28449 000159A8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28450 000159AB FF5009                  	call SOB_CLOSURE_CODE(rax)
 28451 000159AE 50                      	push rax
 28452 000159AF 6A02                    	push 2	; arg count
 28453 000159B1 488B0425[04130000]      	mov rax, qword [free_var_79]	; free var cons
 28454 000159B9 803805                  	cmp byte [rax], T_undefined
 28455 000159BC 0F84E20F0000            	je L_error_fvar_undefined
 28456 000159C2 803804                  	cmp byte [rax], T_closure
 28457 000159C5 0F855D100000            	jne L_error_non_closure
 28458 000159CB FF7001                  	push SOB_CLOSURE_ENV(rax)
 28459 000159CE FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 28460 000159D1 FF7500                  	push qword[rbp]
 28461 000159D4 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 28462 000159D9 48895D10                	mov qword[rbp + 8*2],rbx
 28463 000159DD 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 28464 000159E5 BF00000000              	mov rdi,0
 28465 000159EA EB00                    	jmp .L_tc_recycle_frame_loop_0107
 28466                                  .L_tc_recycle_frame_loop_0107:
 28467 000159EC 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 28468 000159F0 740F                    	je .L_tc_recycle_frame_done_0107
 28469 000159F2 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 28470 000159F7 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 28471 000159FC 48FFC7                  	inc rdi
 28472 000159FF EBEB                    	jmp .L_tc_recycle_frame_loop_0107
 28473                                  .L_tc_recycle_frame_done_0107:
 28474 00015A01 4889EC                  	mov rsp, rbp	; point to last argument
 28475 00015A04 5D                      	pop rbp
 28476 00015A05 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28477 00015A08 EB0A                    	jmp .L_if_end_0091
 28478                                  .L_if_else_0091:
 28479 00015A0A 48B8-                   	mov rax, L_constants + 1
 28479 00015A0C [0100000000000000] 
 28480                                  .L_if_end_0091:
 28481 00015A14 C9                      	leave
 28482 00015A15 C21800                  	ret AND_KILL_FRAME(1)
 28483                                  .L_lambda_simple_end_00b8:	; new closure is in rax
 28484 00015A18 50                      	push rax
 28485 00015A19 488B4520                	mov rax, PARAM(0)	; param run
 28486 00015A1D 8F00                    	pop qword [rax]
 28487 00015A1F 48B8-                   	mov rax, sob_void
 28487 00015A21 [0000000000000000] 
 28488                                  
 28489                                  	; preparing a tail-call
 28490 00015A29 48B8-                   	mov rax, L_constants + 2135
 28490 00015A2B [5708000000000000] 
 28491 00015A33 50                      	push rax
 28492 00015A34 6A01                    	push 1	; arg count
 28493 00015A36 488B4520                	mov rax, PARAM(0)	; param run
 28494 00015A3A 488B00                  	mov rax, qword [rax]
 28495 00015A3D 803804                  	cmp byte [rax], T_closure
 28496 00015A40 0F85E20F0000            	jne L_error_non_closure
 28497 00015A46 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28498 00015A49 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 28499 00015A4C FF7500                  	push qword[rbp]
 28500 00015A4F 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 28501 00015A54 48895D10                	mov qword[rbp + 8*2],rbx
 28502 00015A58 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 28503 00015A60 BF00000000              	mov rdi,0
 28504 00015A65 EB00                    	jmp .L_tc_recycle_frame_loop_0108
 28505                                  .L_tc_recycle_frame_loop_0108:
 28506 00015A67 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 28507 00015A6B 740F                    	je .L_tc_recycle_frame_done_0108
 28508 00015A6D 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 28509 00015A72 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 28510 00015A77 48FFC7                  	inc rdi
 28511 00015A7A EBEB                    	jmp .L_tc_recycle_frame_loop_0108
 28512                                  .L_tc_recycle_frame_done_0108:
 28513 00015A7C 4889EC                  	mov rsp, rbp	; point to last argument
 28514 00015A7F 5D                      	pop rbp
 28515 00015A80 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28516 00015A83 C9                      	leave
 28517 00015A84 C21800                  	ret AND_KILL_FRAME(1)
 28518                                  .L_lambda_simple_end_00b7:	; new closure is in rax
 28519 00015A87 803804                  	cmp byte [rax], T_closure
 28520 00015A8A 0F85980F0000            	jne L_error_non_closure
 28521 00015A90 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28522 00015A93 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 28523 00015A96 FF7500                  	push qword[rbp]
 28524 00015A99 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 28525 00015A9E 48895D10                	mov qword[rbp + 8*2],rbx
 28526 00015AA2 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 28527 00015AAA BF00000000              	mov rdi,0
 28528 00015AAF EB00                    	jmp .L_tc_recycle_frame_loop_0109
 28529                                  .L_tc_recycle_frame_loop_0109:
 28530 00015AB1 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 28531 00015AB5 740F                    	je .L_tc_recycle_frame_done_0109
 28532 00015AB7 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 28533 00015ABC 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 28534 00015AC1 48FFC7                  	inc rdi
 28535 00015AC4 EBEB                    	jmp .L_tc_recycle_frame_loop_0109
 28536                                  .L_tc_recycle_frame_done_0109:
 28537 00015AC6 4889EC                  	mov rsp, rbp	; point to last argument
 28538 00015AC9 5D                      	pop rbp
 28539 00015ACA FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28540 00015ACD C9                      	leave
 28541 00015ACE C22000                  	ret AND_KILL_FRAME(2)
 28542                                  .L_lambda_simple_end_00b6:	; new closure is in rax
 28543 00015AD1 48890425[47140000]      	mov qword [free_var_98], rax
 28544 00015AD9 48B8-                   	mov rax, sob_void
 28544 00015ADB [0000000000000000] 
 28545                                  
 28546 00015AE3 4889C7                  	mov rdi, rax
 28547 00015AE6 E83B120000              	call print_sexpr_if_not_void
 28548 00015AEB BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28549 00015AF0 E8DC0F0000              	call malloc
 28550 00015AF5 50                      	push rax
 28551 00015AF6 BF00000000              	mov rdi, 8 * 0	; new rib
 28552 00015AFB E8D10F0000              	call malloc
 28553 00015B00 50                      	push rax
 28554 00015B01 BF08000000              	mov rdi, 8 * 1	; extended env
 28555 00015B06 E8C60F0000              	call malloc
 28556 00015B0B 488B7D10                	mov rdi, ENV
 28557 00015B0F BE00000000              	mov rsi, 0
 28558 00015B14 BA01000000              	mov rdx, 1
 28559                                  .L_lambda_simple_env_loop_00b9:	; ext_env[i + 1] <-- env[i]
 28560 00015B19 4883FE00                	cmp rsi, 0
 28561 00015B1D 7410                    	je .L_lambda_simple_env_end_00b9
 28562 00015B1F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28563 00015B23 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28564 00015B27 48FFC6                  	inc rsi
 28565 00015B2A 48FFC2                  	inc rdx
 28566 00015B2D EBEA                    	jmp .L_lambda_simple_env_loop_00b9
 28567                                  .L_lambda_simple_env_end_00b9:
 28568 00015B2F 5B                      	pop rbx
 28569 00015B30 BE00000000              	mov rsi, 0
 28570                                  .L_lambda_simple_params_loop_00b9:	; copy params
 28571 00015B35 4883FE00                	cmp rsi, 0
 28572 00015B39 740E                    	je .L_lambda_simple_params_end_00b9
 28573 00015B3B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28574 00015B40 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28575 00015B44 48FFC6                  	inc rsi
 28576 00015B47 EBEC                    	jmp .L_lambda_simple_params_loop_00b9
 28577                                  .L_lambda_simple_params_end_00b9:
 28578 00015B49 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28579 00015B4C 4889C3                  	mov rbx, rax
 28580 00015B4F 58                      	pop rax
 28581 00015B50 C60004                  	mov byte [rax], T_closure
 28582 00015B53 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28583 00015B57 48C74009[645B0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00b9
 28584 00015B5F E936040000              	jmp .L_lambda_simple_end_00b9
 28585                                  .L_lambda_simple_code_00b9:	; lambda-simple body
 28586 00015B64 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28587 00015B6A 740B                    	je .L_lambda_simple_arity_check_ok_00b9
 28588 00015B6C FF742410                	push qword [rsp + 8 * 2]
 28589 00015B70 6A02                    	push 2
 28590 00015B72 E9130F0000              	jmp L_error_incorrect_arity_simple
 28591                                  .L_lambda_simple_arity_check_ok_00b9:
 28592 00015B77 C8000000                	enter 0, 0
 28593                                  	; preparing a tail-call
 28594                                  	; preparing a non-tail-call
 28595 00015B7B 488B4520                	mov rax, PARAM(0)	; param n
 28596 00015B7F 50                      	push rax
 28597 00015B80 6A01                    	push 1	; arg count
 28598 00015B82 488B0425[58140000]      	mov rax, qword [free_var_99]	; free var make-string
 28599 00015B8A 803805                  	cmp byte [rax], T_undefined
 28600 00015B8D 0F84110E0000            	je L_error_fvar_undefined
 28601 00015B93 803804                  	cmp byte [rax], T_closure
 28602 00015B96 0F858C0E0000            	jne L_error_non_closure
 28603 00015B9C FF7001                  	push SOB_CLOSURE_ENV(rax)
 28604 00015B9F FF5009                  	call SOB_CLOSURE_CODE(rax)
 28605 00015BA2 50                      	push rax
 28606 00015BA3 6A01                    	push 1	; arg count
 28607 00015BA5 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28608 00015BAA E8220F0000              	call malloc
 28609 00015BAF 50                      	push rax
 28610 00015BB0 BF10000000              	mov rdi, 8 * 2	; new rib
 28611 00015BB5 E8170F0000              	call malloc
 28612 00015BBA 50                      	push rax
 28613 00015BBB BF10000000              	mov rdi, 8 * 2	; extended env
 28614 00015BC0 E80C0F0000              	call malloc
 28615 00015BC5 488B7D10                	mov rdi, ENV
 28616 00015BC9 BE00000000              	mov rsi, 0
 28617 00015BCE BA01000000              	mov rdx, 1
 28618                                  .L_lambda_simple_env_loop_00ba:	; ext_env[i + 1] <-- env[i]
 28619 00015BD3 4883FE01                	cmp rsi, 1
 28620 00015BD7 7410                    	je .L_lambda_simple_env_end_00ba
 28621 00015BD9 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28622 00015BDD 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28623 00015BE1 48FFC6                  	inc rsi
 28624 00015BE4 48FFC2                  	inc rdx
 28625 00015BE7 EBEA                    	jmp .L_lambda_simple_env_loop_00ba
 28626                                  .L_lambda_simple_env_end_00ba:
 28627 00015BE9 5B                      	pop rbx
 28628 00015BEA BE00000000              	mov rsi, 0
 28629                                  .L_lambda_simple_params_loop_00ba:	; copy params
 28630 00015BEF 4883FE02                	cmp rsi, 2
 28631 00015BF3 740E                    	je .L_lambda_simple_params_end_00ba
 28632 00015BF5 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28633 00015BFA 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28634 00015BFE 48FFC6                  	inc rsi
 28635 00015C01 EBEC                    	jmp .L_lambda_simple_params_loop_00ba
 28636                                  .L_lambda_simple_params_end_00ba:
 28637 00015C03 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28638 00015C06 4889C3                  	mov rbx, rax
 28639 00015C09 58                      	pop rax
 28640 00015C0A C60004                  	mov byte [rax], T_closure
 28641 00015C0D 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28642 00015C11 48C74009[1E5C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00ba
 28643 00015C19 E932030000              	jmp .L_lambda_simple_end_00ba
 28644                                  .L_lambda_simple_code_00ba:	; lambda-simple body
 28645 00015C1E 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28646 00015C24 740B                    	je .L_lambda_simple_arity_check_ok_00ba
 28647 00015C26 FF742410                	push qword [rsp + 8 * 2]
 28648 00015C2A 6A01                    	push 1
 28649 00015C2C E9590E0000              	jmp L_error_incorrect_arity_simple
 28650                                  .L_lambda_simple_arity_check_ok_00ba:
 28651 00015C31 C8000000                	enter 0, 0
 28652                                  	; preparing a tail-call
 28653 00015C35 48B8-                   	mov rax, L_constants + 1993
 28653 00015C37 [C907000000000000] 
 28654 00015C3F 50                      	push rax
 28655 00015C40 6A01                    	push 1	; arg count
 28656 00015C42 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28657 00015C47 E8850E0000              	call malloc
 28658 00015C4C 50                      	push rax
 28659 00015C4D BF08000000              	mov rdi, 8 * 1	; new rib
 28660 00015C52 E87A0E0000              	call malloc
 28661 00015C57 50                      	push rax
 28662 00015C58 BF18000000              	mov rdi, 8 * 3	; extended env
 28663 00015C5D E86F0E0000              	call malloc
 28664 00015C62 488B7D10                	mov rdi, ENV
 28665 00015C66 BE00000000              	mov rsi, 0
 28666 00015C6B BA01000000              	mov rdx, 1
 28667                                  .L_lambda_simple_env_loop_00bb:	; ext_env[i + 1] <-- env[i]
 28668 00015C70 4883FE02                	cmp rsi, 2
 28669 00015C74 7410                    	je .L_lambda_simple_env_end_00bb
 28670 00015C76 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28671 00015C7A 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28672 00015C7E 48FFC6                  	inc rsi
 28673 00015C81 48FFC2                  	inc rdx
 28674 00015C84 EBEA                    	jmp .L_lambda_simple_env_loop_00bb
 28675                                  .L_lambda_simple_env_end_00bb:
 28676 00015C86 5B                      	pop rbx
 28677 00015C87 BE00000000              	mov rsi, 0
 28678                                  .L_lambda_simple_params_loop_00bb:	; copy params
 28679 00015C8C 4883FE01                	cmp rsi, 1
 28680 00015C90 740E                    	je .L_lambda_simple_params_end_00bb
 28681 00015C92 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28682 00015C97 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28683 00015C9B 48FFC6                  	inc rsi
 28684 00015C9E EBEC                    	jmp .L_lambda_simple_params_loop_00bb
 28685                                  .L_lambda_simple_params_end_00bb:
 28686 00015CA0 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28687 00015CA3 4889C3                  	mov rbx, rax
 28688 00015CA6 58                      	pop rax
 28689 00015CA7 C60004                  	mov byte [rax], T_closure
 28690 00015CAA 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28691 00015CAE 48C74009[BB5C0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bb
 28692 00015CB6 E94B020000              	jmp .L_lambda_simple_end_00bb
 28693                                  .L_lambda_simple_code_00bb:	; lambda-simple body
 28694 00015CBB 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28695 00015CC1 740B                    	je .L_lambda_simple_arity_check_ok_00bb
 28696 00015CC3 FF742410                	push qword [rsp + 8 * 2]
 28697 00015CC7 6A01                    	push 1
 28698 00015CC9 E9BC0D0000              	jmp L_error_incorrect_arity_simple
 28699                                  .L_lambda_simple_arity_check_ok_00bb:
 28700 00015CCE C8000000                	enter 0, 0
 28701 00015CD2 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 28702 00015CD6 488903                  	mov qword [rbx], rax
 28703                                  
 28704 00015CD9 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28705 00015CDE E8EE0D0000              	call malloc
 28706 00015CE3 50                      	push rax
 28707 00015CE4 BF08000000              	mov rdi, 8 * 1	; new rib
 28708 00015CE9 E8E30D0000              	call malloc
 28709 00015CEE 50                      	push rax
 28710 00015CEF BF20000000              	mov rdi, 8 * 4	; extended env
 28711 00015CF4 E8D80D0000              	call malloc
 28712 00015CF9 488B7D10                	mov rdi, ENV
 28713 00015CFD BE00000000              	mov rsi, 0
 28714 00015D02 BA01000000              	mov rdx, 1
 28715                                  .L_lambda_simple_env_loop_00bc:	; ext_env[i + 1] <-- env[i]
 28716 00015D07 4883FE03                	cmp rsi, 3
 28717 00015D0B 7410                    	je .L_lambda_simple_env_end_00bc
 28718 00015D0D 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28719 00015D11 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28720 00015D15 48FFC6                  	inc rsi
 28721 00015D18 48FFC2                  	inc rdx
 28722 00015D1B EBEA                    	jmp .L_lambda_simple_env_loop_00bc
 28723                                  .L_lambda_simple_env_end_00bc:
 28724 00015D1D 5B                      	pop rbx
 28725 00015D1E BE00000000              	mov rsi, 0
 28726                                  .L_lambda_simple_params_loop_00bc:	; copy params
 28727 00015D23 4883FE01                	cmp rsi, 1
 28728 00015D27 740E                    	je .L_lambda_simple_params_end_00bc
 28729 00015D29 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28730 00015D2E 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28731 00015D32 48FFC6                  	inc rsi
 28732 00015D35 EBEC                    	jmp .L_lambda_simple_params_loop_00bc
 28733                                  .L_lambda_simple_params_end_00bc:
 28734 00015D37 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28735 00015D3A 4889C3                  	mov rbx, rax
 28736 00015D3D 58                      	pop rax
 28737 00015D3E C60004                  	mov byte [rax], T_closure
 28738 00015D41 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28739 00015D45 48C74009[525D0100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bc
 28740 00015D4D E945010000              	jmp .L_lambda_simple_end_00bc
 28741                                  .L_lambda_simple_code_00bc:	; lambda-simple body
 28742 00015D52 48837C241001            	cmp qword [rsp + 8 * 2], 1
 28743 00015D58 740B                    	je .L_lambda_simple_arity_check_ok_00bc
 28744 00015D5A FF742410                	push qword [rsp + 8 * 2]
 28745 00015D5E 6A01                    	push 1
 28746 00015D60 E9250D0000              	jmp L_error_incorrect_arity_simple
 28747                                  .L_lambda_simple_arity_check_ok_00bc:
 28748 00015D65 C8000000                	enter 0, 0
 28749                                  	; preparing a non-tail-call
 28750 00015D69 488B4510                	mov rax, ENV
 28751 00015D6D 488B4010                	mov rax, qword [rax + 8 * 2]
 28752 00015D71 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 28753 00015D74 50                      	push rax
 28754 00015D75 488B4520                	mov rax, PARAM(0)	; param i
 28755 00015D79 50                      	push rax
 28756 00015D7A 6A02                    	push 2	; arg count
 28757 00015D7C 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 28758 00015D84 803805                  	cmp byte [rax], T_undefined
 28759 00015D87 0F84170C0000            	je L_error_fvar_undefined
 28760 00015D8D 803804                  	cmp byte [rax], T_closure
 28761 00015D90 0F85920C0000            	jne L_error_non_closure
 28762 00015D96 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28763 00015D99 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28764 00015D9C 483D[02000000]          	cmp rax, sob_boolean_false
 28765 00015DA2 0F84E0000000            	je .L_if_else_0092
 28766                                  	; preparing a non-tail-call
 28767                                  	; preparing a non-tail-call
 28768 00015DA8 488B4520                	mov rax, PARAM(0)	; param i
 28769 00015DAC 50                      	push rax
 28770 00015DAD 6A01                    	push 1	; arg count
 28771 00015DAF 488B4510                	mov rax, ENV
 28772 00015DB3 488B4010                	mov rax, qword [rax + 8 * 2]
 28773 00015DB7 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 28774 00015DBB 803804                  	cmp byte [rax], T_closure
 28775 00015DBE 0F85640C0000            	jne L_error_non_closure
 28776 00015DC4 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28777 00015DC7 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28778 00015DCA 50                      	push rax
 28779 00015DCB 488B4520                	mov rax, PARAM(0)	; param i
 28780 00015DCF 50                      	push rax
 28781 00015DD0 488B4510                	mov rax, ENV
 28782 00015DD4 488B4008                	mov rax, qword [rax + 8 * 1]
 28783 00015DD8 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28784 00015DDB 50                      	push rax
 28785 00015DDC 6A03                    	push 3	; arg count
 28786 00015DDE 488B0425[78160000]      	mov rax, qword [free_var_131]	; free var string-set!
 28787 00015DE6 803805                  	cmp byte [rax], T_undefined
 28788 00015DE9 0F84B50B0000            	je L_error_fvar_undefined
 28789 00015DEF 803804                  	cmp byte [rax], T_closure
 28790 00015DF2 0F85300C0000            	jne L_error_non_closure
 28791 00015DF8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28792 00015DFB FF5009                  	call SOB_CLOSURE_CODE(rax)
 28793                                  
 28794                                  	; preparing a tail-call
 28795                                  	; preparing a non-tail-call
 28796 00015DFE 48B8-                   	mov rax, L_constants + 2270
 28796 00015E00 [DE08000000000000] 
 28797 00015E08 50                      	push rax
 28798 00015E09 488B4520                	mov rax, PARAM(0)	; param i
 28799 00015E0D 50                      	push rax
 28800 00015E0E 6A02                    	push 2	; arg count
 28801 00015E10 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 28802 00015E18 803805                  	cmp byte [rax], T_undefined
 28803 00015E1B 0F84830B0000            	je L_error_fvar_undefined
 28804 00015E21 803804                  	cmp byte [rax], T_closure
 28805 00015E24 0F85FE0B0000            	jne L_error_non_closure
 28806 00015E2A FF7001                  	push SOB_CLOSURE_ENV(rax)
 28807 00015E2D FF5009                  	call SOB_CLOSURE_CODE(rax)
 28808 00015E30 50                      	push rax
 28809 00015E31 6A01                    	push 1	; arg count
 28810 00015E33 488B4510                	mov rax, ENV
 28811 00015E37 488B00                  	mov rax, qword [rax + 8 * 0]
 28812 00015E3A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 28813 00015E3D 488B00                  	mov rax, qword [rax]
 28814 00015E40 803804                  	cmp byte [rax], T_closure
 28815 00015E43 0F85DF0B0000            	jne L_error_non_closure
 28816 00015E49 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28817 00015E4C FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 28818 00015E4F FF7500                  	push qword[rbp]
 28819 00015E52 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 28820 00015E57 48895D10                	mov qword[rbp + 8*2],rbx
 28821 00015E5B 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 28822 00015E63 BF00000000              	mov rdi,0
 28823 00015E68 EB00                    	jmp .L_tc_recycle_frame_loop_010a
 28824                                  .L_tc_recycle_frame_loop_010a:
 28825 00015E6A 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 28826 00015E6E 740F                    	je .L_tc_recycle_frame_done_010a
 28827 00015E70 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 28828 00015E75 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 28829 00015E7A 48FFC7                  	inc rdi
 28830 00015E7D EBEB                    	jmp .L_tc_recycle_frame_loop_010a
 28831                                  .L_tc_recycle_frame_done_010a:
 28832 00015E7F 4889EC                  	mov rsp, rbp	; point to last argument
 28833 00015E82 5D                      	pop rbp
 28834 00015E83 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28835 00015E86 EB0B                    	jmp .L_if_end_0092
 28836                                  .L_if_else_0092:
 28837 00015E88 488B4510                	mov rax, ENV
 28838 00015E8C 488B4008                	mov rax, qword [rax + 8 * 1]
 28839 00015E90 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var str
 28840                                  .L_if_end_0092:
 28841 00015E93 C9                      	leave
 28842 00015E94 C21800                  	ret AND_KILL_FRAME(1)
 28843                                  .L_lambda_simple_end_00bc:	; new closure is in rax
 28844 00015E97 50                      	push rax
 28845 00015E98 488B4520                	mov rax, PARAM(0)	; param run
 28846 00015E9C 8F00                    	pop qword [rax]
 28847 00015E9E 48B8-                   	mov rax, sob_void
 28847 00015EA0 [0000000000000000] 
 28848                                  
 28849                                  	; preparing a tail-call
 28850 00015EA8 48B8-                   	mov rax, L_constants + 2135
 28850 00015EAA [5708000000000000] 
 28851 00015EB2 50                      	push rax
 28852 00015EB3 6A01                    	push 1	; arg count
 28853 00015EB5 488B4520                	mov rax, PARAM(0)	; param run
 28854 00015EB9 488B00                  	mov rax, qword [rax]
 28855 00015EBC 803804                  	cmp byte [rax], T_closure
 28856 00015EBF 0F85630B0000            	jne L_error_non_closure
 28857 00015EC5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28858 00015EC8 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 28859 00015ECB FF7500                  	push qword[rbp]
 28860 00015ECE 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 28861 00015ED3 48895D10                	mov qword[rbp + 8*2],rbx
 28862 00015ED7 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 28863 00015EDF BF00000000              	mov rdi,0
 28864 00015EE4 EB00                    	jmp .L_tc_recycle_frame_loop_010b
 28865                                  .L_tc_recycle_frame_loop_010b:
 28866 00015EE6 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 28867 00015EEA 740F                    	je .L_tc_recycle_frame_done_010b
 28868 00015EEC 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 28869 00015EF1 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 28870 00015EF6 48FFC7                  	inc rdi
 28871 00015EF9 EBEB                    	jmp .L_tc_recycle_frame_loop_010b
 28872                                  .L_tc_recycle_frame_done_010b:
 28873 00015EFB 4889EC                  	mov rsp, rbp	; point to last argument
 28874 00015EFE 5D                      	pop rbp
 28875 00015EFF FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28876 00015F02 C9                      	leave
 28877 00015F03 C21800                  	ret AND_KILL_FRAME(1)
 28878                                  .L_lambda_simple_end_00bb:	; new closure is in rax
 28879 00015F06 803804                  	cmp byte [rax], T_closure
 28880 00015F09 0F85190B0000            	jne L_error_non_closure
 28881 00015F0F FF7001                  	push SOB_CLOSURE_ENV(rax)
 28882 00015F12 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 28883 00015F15 FF7500                  	push qword[rbp]
 28884 00015F18 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 28885 00015F1D 48895D10                	mov qword[rbp + 8*2],rbx
 28886 00015F21 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 28887 00015F29 BF00000000              	mov rdi,0
 28888 00015F2E EB00                    	jmp .L_tc_recycle_frame_loop_010c
 28889                                  .L_tc_recycle_frame_loop_010c:
 28890 00015F30 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 28891 00015F34 740F                    	je .L_tc_recycle_frame_done_010c
 28892 00015F36 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 28893 00015F3B 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 28894 00015F40 48FFC7                  	inc rdi
 28895 00015F43 EBEB                    	jmp .L_tc_recycle_frame_loop_010c
 28896                                  .L_tc_recycle_frame_done_010c:
 28897 00015F45 4889EC                  	mov rsp, rbp	; point to last argument
 28898 00015F48 5D                      	pop rbp
 28899 00015F49 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28900 00015F4C C9                      	leave
 28901 00015F4D C21800                  	ret AND_KILL_FRAME(1)
 28902                                  .L_lambda_simple_end_00ba:	; new closure is in rax
 28903 00015F50 803804                  	cmp byte [rax], T_closure
 28904 00015F53 0F85CF0A0000            	jne L_error_non_closure
 28905 00015F59 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28906 00015F5C FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 28907 00015F5F FF7500                  	push qword[rbp]
 28908 00015F62 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 28909 00015F67 48895D10                	mov qword[rbp + 8*2],rbx
 28910 00015F6B 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 28911 00015F73 BF00000000              	mov rdi,0
 28912 00015F78 EB00                    	jmp .L_tc_recycle_frame_loop_010d
 28913                                  .L_tc_recycle_frame_loop_010d:
 28914 00015F7A 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 28915 00015F7E 740F                    	je .L_tc_recycle_frame_done_010d
 28916 00015F80 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 28917 00015F85 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 28918 00015F8A 48FFC7                  	inc rdi
 28919 00015F8D EBEB                    	jmp .L_tc_recycle_frame_loop_010d
 28920                                  .L_tc_recycle_frame_done_010d:
 28921 00015F8F 4889EC                  	mov rsp, rbp	; point to last argument
 28922 00015F92 5D                      	pop rbp
 28923 00015F93 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 28924 00015F96 C9                      	leave
 28925 00015F97 C22000                  	ret AND_KILL_FRAME(2)
 28926                                  .L_lambda_simple_end_00b9:	; new closure is in rax
 28927 00015F9A 48890425[69140000]      	mov qword [free_var_100], rax
 28928 00015FA2 48B8-                   	mov rax, sob_void
 28928 00015FA4 [0000000000000000] 
 28929                                  
 28930 00015FAC 4889C7                  	mov rdi, rax
 28931 00015FAF E8720D0000              	call print_sexpr_if_not_void
 28932 00015FB4 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28933 00015FB9 E8130B0000              	call malloc
 28934 00015FBE 50                      	push rax
 28935 00015FBF BF00000000              	mov rdi, 8 * 0	; new rib
 28936 00015FC4 E8080B0000              	call malloc
 28937 00015FC9 50                      	push rax
 28938 00015FCA BF08000000              	mov rdi, 8 * 1	; extended env
 28939 00015FCF E8FD0A0000              	call malloc
 28940 00015FD4 488B7D10                	mov rdi, ENV
 28941 00015FD8 BE00000000              	mov rsi, 0
 28942 00015FDD BA01000000              	mov rdx, 1
 28943                                  .L_lambda_simple_env_loop_00bd:	; ext_env[i + 1] <-- env[i]
 28944 00015FE2 4883FE00                	cmp rsi, 0
 28945 00015FE6 7410                    	je .L_lambda_simple_env_end_00bd
 28946 00015FE8 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 28947 00015FEC 48890CD0                	mov qword [rax + 8 * rdx], rcx
 28948 00015FF0 48FFC6                  	inc rsi
 28949 00015FF3 48FFC2                  	inc rdx
 28950 00015FF6 EBEA                    	jmp .L_lambda_simple_env_loop_00bd
 28951                                  .L_lambda_simple_env_end_00bd:
 28952 00015FF8 5B                      	pop rbx
 28953 00015FF9 BE00000000              	mov rsi, 0
 28954                                  .L_lambda_simple_params_loop_00bd:	; copy params
 28955 00015FFE 4883FE00                	cmp rsi, 0
 28956 00016002 740E                    	je .L_lambda_simple_params_end_00bd
 28957 00016004 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 28958 00016009 488914F3                	mov qword [rbx + 8 * rsi], rdx
 28959 0001600D 48FFC6                  	inc rsi
 28960 00016010 EBEC                    	jmp .L_lambda_simple_params_loop_00bd
 28961                                  .L_lambda_simple_params_end_00bd:
 28962 00016012 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 28963 00016015 4889C3                  	mov rbx, rax
 28964 00016018 58                      	pop rax
 28965 00016019 C60004                  	mov byte [rax], T_closure
 28966 0001601C 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 28967 00016020 48C74009[2D600100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bd
 28968 00016028 E936040000              	jmp .L_lambda_simple_end_00bd
 28969                                  .L_lambda_simple_code_00bd:	; lambda-simple body
 28970 0001602D 48837C241002            	cmp qword [rsp + 8 * 2], 2
 28971 00016033 740B                    	je .L_lambda_simple_arity_check_ok_00bd
 28972 00016035 FF742410                	push qword [rsp + 8 * 2]
 28973 00016039 6A02                    	push 2
 28974 0001603B E94A0A0000              	jmp L_error_incorrect_arity_simple
 28975                                  .L_lambda_simple_arity_check_ok_00bd:
 28976 00016040 C8000000                	enter 0, 0
 28977                                  	; preparing a tail-call
 28978                                  	; preparing a non-tail-call
 28979 00016044 488B4520                	mov rax, PARAM(0)	; param n
 28980 00016048 50                      	push rax
 28981 00016049 6A01                    	push 1	; arg count
 28982 0001604B 488B0425[7A140000]      	mov rax, qword [free_var_101]	; free var make-vector
 28983 00016053 803805                  	cmp byte [rax], T_undefined
 28984 00016056 0F8448090000            	je L_error_fvar_undefined
 28985 0001605C 803804                  	cmp byte [rax], T_closure
 28986 0001605F 0F85C3090000            	jne L_error_non_closure
 28987 00016065 FF7001                  	push SOB_CLOSURE_ENV(rax)
 28988 00016068 FF5009                  	call SOB_CLOSURE_CODE(rax)
 28989 0001606B 50                      	push rax
 28990 0001606C 6A01                    	push 1	; arg count
 28991 0001606E BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 28992 00016073 E8590A0000              	call malloc
 28993 00016078 50                      	push rax
 28994 00016079 BF10000000              	mov rdi, 8 * 2	; new rib
 28995 0001607E E84E0A0000              	call malloc
 28996 00016083 50                      	push rax
 28997 00016084 BF10000000              	mov rdi, 8 * 2	; extended env
 28998 00016089 E8430A0000              	call malloc
 28999 0001608E 488B7D10                	mov rdi, ENV
 29000 00016092 BE00000000              	mov rsi, 0
 29001 00016097 BA01000000              	mov rdx, 1
 29002                                  .L_lambda_simple_env_loop_00be:	; ext_env[i + 1] <-- env[i]
 29003 0001609C 4883FE01                	cmp rsi, 1
 29004 000160A0 7410                    	je .L_lambda_simple_env_end_00be
 29005 000160A2 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29006 000160A6 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29007 000160AA 48FFC6                  	inc rsi
 29008 000160AD 48FFC2                  	inc rdx
 29009 000160B0 EBEA                    	jmp .L_lambda_simple_env_loop_00be
 29010                                  .L_lambda_simple_env_end_00be:
 29011 000160B2 5B                      	pop rbx
 29012 000160B3 BE00000000              	mov rsi, 0
 29013                                  .L_lambda_simple_params_loop_00be:	; copy params
 29014 000160B8 4883FE02                	cmp rsi, 2
 29015 000160BC 740E                    	je .L_lambda_simple_params_end_00be
 29016 000160BE 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29017 000160C3 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29018 000160C7 48FFC6                  	inc rsi
 29019 000160CA EBEC                    	jmp .L_lambda_simple_params_loop_00be
 29020                                  .L_lambda_simple_params_end_00be:
 29021 000160CC 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29022 000160CF 4889C3                  	mov rbx, rax
 29023 000160D2 58                      	pop rax
 29024 000160D3 C60004                  	mov byte [rax], T_closure
 29025 000160D6 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29026 000160DA 48C74009[E7600100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00be
 29027 000160E2 E932030000              	jmp .L_lambda_simple_end_00be
 29028                                  .L_lambda_simple_code_00be:	; lambda-simple body
 29029 000160E7 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29030 000160ED 740B                    	je .L_lambda_simple_arity_check_ok_00be
 29031 000160EF FF742410                	push qword [rsp + 8 * 2]
 29032 000160F3 6A01                    	push 1
 29033 000160F5 E990090000              	jmp L_error_incorrect_arity_simple
 29034                                  .L_lambda_simple_arity_check_ok_00be:
 29035 000160FA C8000000                	enter 0, 0
 29036                                  	; preparing a tail-call
 29037 000160FE 48B8-                   	mov rax, L_constants + 1993
 29037 00016100 [C907000000000000] 
 29038 00016108 50                      	push rax
 29039 00016109 6A01                    	push 1	; arg count
 29040 0001610B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29041 00016110 E8BC090000              	call malloc
 29042 00016115 50                      	push rax
 29043 00016116 BF08000000              	mov rdi, 8 * 1	; new rib
 29044 0001611B E8B1090000              	call malloc
 29045 00016120 50                      	push rax
 29046 00016121 BF18000000              	mov rdi, 8 * 3	; extended env
 29047 00016126 E8A6090000              	call malloc
 29048 0001612B 488B7D10                	mov rdi, ENV
 29049 0001612F BE00000000              	mov rsi, 0
 29050 00016134 BA01000000              	mov rdx, 1
 29051                                  .L_lambda_simple_env_loop_00bf:	; ext_env[i + 1] <-- env[i]
 29052 00016139 4883FE02                	cmp rsi, 2
 29053 0001613D 7410                    	je .L_lambda_simple_env_end_00bf
 29054 0001613F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29055 00016143 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29056 00016147 48FFC6                  	inc rsi
 29057 0001614A 48FFC2                  	inc rdx
 29058 0001614D EBEA                    	jmp .L_lambda_simple_env_loop_00bf
 29059                                  .L_lambda_simple_env_end_00bf:
 29060 0001614F 5B                      	pop rbx
 29061 00016150 BE00000000              	mov rsi, 0
 29062                                  .L_lambda_simple_params_loop_00bf:	; copy params
 29063 00016155 4883FE01                	cmp rsi, 1
 29064 00016159 740E                    	je .L_lambda_simple_params_end_00bf
 29065 0001615B 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29066 00016160 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29067 00016164 48FFC6                  	inc rsi
 29068 00016167 EBEC                    	jmp .L_lambda_simple_params_loop_00bf
 29069                                  .L_lambda_simple_params_end_00bf:
 29070 00016169 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29071 0001616C 4889C3                  	mov rbx, rax
 29072 0001616F 58                      	pop rax
 29073 00016170 C60004                  	mov byte [rax], T_closure
 29074 00016173 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29075 00016177 48C74009[84610100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00bf
 29076 0001617F E94B020000              	jmp .L_lambda_simple_end_00bf
 29077                                  .L_lambda_simple_code_00bf:	; lambda-simple body
 29078 00016184 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29079 0001618A 740B                    	je .L_lambda_simple_arity_check_ok_00bf
 29080 0001618C FF742410                	push qword [rsp + 8 * 2]
 29081 00016190 6A01                    	push 1
 29082 00016192 E9F3080000              	jmp L_error_incorrect_arity_simple
 29083                                  .L_lambda_simple_arity_check_ok_00bf:
 29084 00016197 C8000000                	enter 0, 0
 29085 0001619B 488B5D20                	mov rbx, qword [rbp + 8 * (4 + 0)]
 29086 0001619F 488903                  	mov qword [rbx], rax
 29087                                  
 29088 000161A2 BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29089 000161A7 E825090000              	call malloc
 29090 000161AC 50                      	push rax
 29091 000161AD BF08000000              	mov rdi, 8 * 1	; new rib
 29092 000161B2 E81A090000              	call malloc
 29093 000161B7 50                      	push rax
 29094 000161B8 BF20000000              	mov rdi, 8 * 4	; extended env
 29095 000161BD E80F090000              	call malloc
 29096 000161C2 488B7D10                	mov rdi, ENV
 29097 000161C6 BE00000000              	mov rsi, 0
 29098 000161CB BA01000000              	mov rdx, 1
 29099                                  .L_lambda_simple_env_loop_00c0:	; ext_env[i + 1] <-- env[i]
 29100 000161D0 4883FE03                	cmp rsi, 3
 29101 000161D4 7410                    	je .L_lambda_simple_env_end_00c0
 29102 000161D6 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29103 000161DA 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29104 000161DE 48FFC6                  	inc rsi
 29105 000161E1 48FFC2                  	inc rdx
 29106 000161E4 EBEA                    	jmp .L_lambda_simple_env_loop_00c0
 29107                                  .L_lambda_simple_env_end_00c0:
 29108 000161E6 5B                      	pop rbx
 29109 000161E7 BE00000000              	mov rsi, 0
 29110                                  .L_lambda_simple_params_loop_00c0:	; copy params
 29111 000161EC 4883FE01                	cmp rsi, 1
 29112 000161F0 740E                    	je .L_lambda_simple_params_end_00c0
 29113 000161F2 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29114 000161F7 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29115 000161FB 48FFC6                  	inc rsi
 29116 000161FE EBEC                    	jmp .L_lambda_simple_params_loop_00c0
 29117                                  .L_lambda_simple_params_end_00c0:
 29118 00016200 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29119 00016203 4889C3                  	mov rbx, rax
 29120 00016206 58                      	pop rax
 29121 00016207 C60004                  	mov byte [rax], T_closure
 29122 0001620A 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29123 0001620E 48C74009[1B620100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c0
 29124 00016216 E945010000              	jmp .L_lambda_simple_end_00c0
 29125                                  .L_lambda_simple_code_00c0:	; lambda-simple body
 29126 0001621B 48837C241001            	cmp qword [rsp + 8 * 2], 1
 29127 00016221 740B                    	je .L_lambda_simple_arity_check_ok_00c0
 29128 00016223 FF742410                	push qword [rsp + 8 * 2]
 29129 00016227 6A01                    	push 1
 29130 00016229 E95C080000              	jmp L_error_incorrect_arity_simple
 29131                                  .L_lambda_simple_arity_check_ok_00c0:
 29132 0001622E C8000000                	enter 0, 0
 29133                                  	; preparing a non-tail-call
 29134 00016232 488B4510                	mov rax, ENV
 29135 00016236 488B4010                	mov rax, qword [rax + 8 * 2]
 29136 0001623A 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var n
 29137 0001623D 50                      	push rax
 29138 0001623E 488B4520                	mov rax, PARAM(0)	; param i
 29139 00016242 50                      	push rax
 29140 00016243 6A02                    	push 2	; arg count
 29141 00016245 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 29142 0001624D 803805                  	cmp byte [rax], T_undefined
 29143 00016250 0F844E070000            	je L_error_fvar_undefined
 29144 00016256 803804                  	cmp byte [rax], T_closure
 29145 00016259 0F85C9070000            	jne L_error_non_closure
 29146 0001625F FF7001                  	push SOB_CLOSURE_ENV(rax)
 29147 00016262 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29148 00016265 483D[02000000]          	cmp rax, sob_boolean_false
 29149 0001626B 0F84E0000000            	je .L_if_else_0093
 29150                                  	; preparing a non-tail-call
 29151                                  	; preparing a non-tail-call
 29152 00016271 488B4520                	mov rax, PARAM(0)	; param i
 29153 00016275 50                      	push rax
 29154 00016276 6A01                    	push 1	; arg count
 29155 00016278 488B4510                	mov rax, ENV
 29156 0001627C 488B4010                	mov rax, qword [rax + 8 * 2]
 29157 00016280 488B4008                	mov rax, qword [rax + 8 * 1]	; bound var thunk
 29158 00016284 803804                  	cmp byte [rax], T_closure
 29159 00016287 0F859B070000            	jne L_error_non_closure
 29160 0001628D FF7001                  	push SOB_CLOSURE_ENV(rax)
 29161 00016290 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29162 00016293 50                      	push rax
 29163 00016294 488B4520                	mov rax, PARAM(0)	; param i
 29164 00016298 50                      	push rax
 29165 00016299 488B4510                	mov rax, ENV
 29166 0001629D 488B4008                	mov rax, qword [rax + 8 * 1]
 29167 000162A1 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 29168 000162A4 50                      	push rax
 29169 000162A5 6A03                    	push 3	; arg count
 29170 000162A7 488B0425[88170000]      	mov rax, qword [free_var_147]	; free var vector-set!
 29171 000162AF 803805                  	cmp byte [rax], T_undefined
 29172 000162B2 0F84EC060000            	je L_error_fvar_undefined
 29173 000162B8 803804                  	cmp byte [rax], T_closure
 29174 000162BB 0F8567070000            	jne L_error_non_closure
 29175 000162C1 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29176 000162C4 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29177                                  
 29178                                  	; preparing a tail-call
 29179                                  	; preparing a non-tail-call
 29180 000162C7 48B8-                   	mov rax, L_constants + 2270
 29180 000162C9 [DE08000000000000] 
 29181 000162D1 50                      	push rax
 29182 000162D2 488B4520                	mov rax, PARAM(0)	; param i
 29183 000162D6 50                      	push rax
 29184 000162D7 6A02                    	push 2	; arg count
 29185 000162D9 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 29186 000162E1 803805                  	cmp byte [rax], T_undefined
 29187 000162E4 0F84BA060000            	je L_error_fvar_undefined
 29188 000162EA 803804                  	cmp byte [rax], T_closure
 29189 000162ED 0F8535070000            	jne L_error_non_closure
 29190 000162F3 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29191 000162F6 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29192 000162F9 50                      	push rax
 29193 000162FA 6A01                    	push 1	; arg count
 29194 000162FC 488B4510                	mov rax, ENV
 29195 00016300 488B00                  	mov rax, qword [rax + 8 * 0]
 29196 00016303 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var run
 29197 00016306 488B00                  	mov rax, qword [rax]
 29198 00016309 803804                  	cmp byte [rax], T_closure
 29199 0001630C 0F8516070000            	jne L_error_non_closure
 29200 00016312 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29201 00016315 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 29202 00016318 FF7500                  	push qword[rbp]
 29203 0001631B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 29204 00016320 48895D10                	mov qword[rbp + 8*2],rbx
 29205 00016324 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 29206 0001632C BF00000000              	mov rdi,0
 29207 00016331 EB00                    	jmp .L_tc_recycle_frame_loop_010e
 29208                                  .L_tc_recycle_frame_loop_010e:
 29209 00016333 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 29210 00016337 740F                    	je .L_tc_recycle_frame_done_010e
 29211 00016339 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 29212 0001633E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 29213 00016343 48FFC7                  	inc rdi
 29214 00016346 EBEB                    	jmp .L_tc_recycle_frame_loop_010e
 29215                                  .L_tc_recycle_frame_done_010e:
 29216 00016348 4889EC                  	mov rsp, rbp	; point to last argument
 29217 0001634B 5D                      	pop rbp
 29218 0001634C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29219 0001634F EB0B                    	jmp .L_if_end_0093
 29220                                  .L_if_else_0093:
 29221 00016351 488B4510                	mov rax, ENV
 29222 00016355 488B4008                	mov rax, qword [rax + 8 * 1]
 29223 00016359 488B00                  	mov rax, qword [rax + 8 * 0]	; bound var vec
 29224                                  .L_if_end_0093:
 29225 0001635C C9                      	leave
 29226 0001635D C21800                  	ret AND_KILL_FRAME(1)
 29227                                  .L_lambda_simple_end_00c0:	; new closure is in rax
 29228 00016360 50                      	push rax
 29229 00016361 488B4520                	mov rax, PARAM(0)	; param run
 29230 00016365 8F00                    	pop qword [rax]
 29231 00016367 48B8-                   	mov rax, sob_void
 29231 00016369 [0000000000000000] 
 29232                                  
 29233                                  	; preparing a tail-call
 29234 00016371 48B8-                   	mov rax, L_constants + 2135
 29234 00016373 [5708000000000000] 
 29235 0001637B 50                      	push rax
 29236 0001637C 6A01                    	push 1	; arg count
 29237 0001637E 488B4520                	mov rax, PARAM(0)	; param run
 29238 00016382 488B00                  	mov rax, qword [rax]
 29239 00016385 803804                  	cmp byte [rax], T_closure
 29240 00016388 0F859A060000            	jne L_error_non_closure
 29241 0001638E FF7001                  	push SOB_CLOSURE_ENV(rax)
 29242 00016391 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 29243 00016394 FF7500                  	push qword[rbp]
 29244 00016397 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 29245 0001639C 48895D10                	mov qword[rbp + 8*2],rbx
 29246 000163A0 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 29247 000163A8 BF00000000              	mov rdi,0
 29248 000163AD EB00                    	jmp .L_tc_recycle_frame_loop_010f
 29249                                  .L_tc_recycle_frame_loop_010f:
 29250 000163AF 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 29251 000163B3 740F                    	je .L_tc_recycle_frame_done_010f
 29252 000163B5 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 29253 000163BA 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 29254 000163BF 48FFC7                  	inc rdi
 29255 000163C2 EBEB                    	jmp .L_tc_recycle_frame_loop_010f
 29256                                  .L_tc_recycle_frame_done_010f:
 29257 000163C4 4889EC                  	mov rsp, rbp	; point to last argument
 29258 000163C7 5D                      	pop rbp
 29259 000163C8 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29260 000163CB C9                      	leave
 29261 000163CC C21800                  	ret AND_KILL_FRAME(1)
 29262                                  .L_lambda_simple_end_00bf:	; new closure is in rax
 29263 000163CF 803804                  	cmp byte [rax], T_closure
 29264 000163D2 0F8550060000            	jne L_error_non_closure
 29265 000163D8 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29266 000163DB FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 29267 000163DE FF7500                  	push qword[rbp]
 29268 000163E1 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 29269 000163E6 48895D10                	mov qword[rbp + 8*2],rbx
 29270 000163EA 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 29271 000163F2 BF00000000              	mov rdi,0
 29272 000163F7 EB00                    	jmp .L_tc_recycle_frame_loop_0110
 29273                                  .L_tc_recycle_frame_loop_0110:
 29274 000163F9 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 29275 000163FD 740F                    	je .L_tc_recycle_frame_done_0110
 29276 000163FF 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 29277 00016404 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 29278 00016409 48FFC7                  	inc rdi
 29279 0001640C EBEB                    	jmp .L_tc_recycle_frame_loop_0110
 29280                                  .L_tc_recycle_frame_done_0110:
 29281 0001640E 4889EC                  	mov rsp, rbp	; point to last argument
 29282 00016411 5D                      	pop rbp
 29283 00016412 FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29284 00016415 C9                      	leave
 29285 00016416 C21800                  	ret AND_KILL_FRAME(1)
 29286                                  .L_lambda_simple_end_00be:	; new closure is in rax
 29287 00016419 803804                  	cmp byte [rax], T_closure
 29288 0001641C 0F8506060000            	jne L_error_non_closure
 29289 00016422 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29290 00016425 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 29291 00016428 FF7500                  	push qword[rbp]
 29292 0001642B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 29293 00016430 48895D10                	mov qword[rbp + 8*2],rbx
 29294 00016434 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 29295 0001643C BF00000000              	mov rdi,0
 29296 00016441 EB00                    	jmp .L_tc_recycle_frame_loop_0111
 29297                                  .L_tc_recycle_frame_loop_0111:
 29298 00016443 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 29299 00016447 740F                    	je .L_tc_recycle_frame_done_0111
 29300 00016449 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 29301 0001644E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 29302 00016453 48FFC7                  	inc rdi
 29303 00016456 EBEB                    	jmp .L_tc_recycle_frame_loop_0111
 29304                                  .L_tc_recycle_frame_done_0111:
 29305 00016458 4889EC                  	mov rsp, rbp	; point to last argument
 29306 0001645B 5D                      	pop rbp
 29307 0001645C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29308 0001645F C9                      	leave
 29309 00016460 C22000                  	ret AND_KILL_FRAME(2)
 29310                                  .L_lambda_simple_end_00bd:	; new closure is in rax
 29311 00016463 48890425[8B140000]      	mov qword [free_var_102], rax
 29312 0001646B 48B8-                   	mov rax, sob_void
 29312 0001646D [0000000000000000] 
 29313                                  
 29314 00016475 4889C7                  	mov rdi, rax
 29315 00016478 E8A9080000              	call print_sexpr_if_not_void
 29316 0001647D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29317 00016482 E84A060000              	call malloc
 29318 00016487 50                      	push rax
 29319 00016488 BF00000000              	mov rdi, 8 * 0	; new rib
 29320 0001648D E83F060000              	call malloc
 29321 00016492 50                      	push rax
 29322 00016493 BF08000000              	mov rdi, 8 * 1	; extended env
 29323 00016498 E834060000              	call malloc
 29324 0001649D 488B7D10                	mov rdi, ENV
 29325 000164A1 BE00000000              	mov rsi, 0
 29326 000164A6 BA01000000              	mov rdx, 1
 29327                                  .L_lambda_simple_env_loop_00c1:	; ext_env[i + 1] <-- env[i]
 29328 000164AB 4883FE00                	cmp rsi, 0
 29329 000164AF 7410                    	je .L_lambda_simple_env_end_00c1
 29330 000164B1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29331 000164B5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29332 000164B9 48FFC6                  	inc rsi
 29333 000164BC 48FFC2                  	inc rdx
 29334 000164BF EBEA                    	jmp .L_lambda_simple_env_loop_00c1
 29335                                  .L_lambda_simple_env_end_00c1:
 29336 000164C1 5B                      	pop rbx
 29337 000164C2 BE00000000              	mov rsi, 0
 29338                                  .L_lambda_simple_params_loop_00c1:	; copy params
 29339 000164C7 4883FE00                	cmp rsi, 0
 29340 000164CB 740E                    	je .L_lambda_simple_params_end_00c1
 29341 000164CD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29342 000164D2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29343 000164D6 48FFC6                  	inc rsi
 29344 000164D9 EBEC                    	jmp .L_lambda_simple_params_loop_00c1
 29345                                  .L_lambda_simple_params_end_00c1:
 29346 000164DB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29347 000164DE 4889C3                  	mov rbx, rax
 29348 000164E1 58                      	pop rax
 29349 000164E2 C60004                  	mov byte [rax], T_closure
 29350 000164E5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29351 000164E9 48C74009[F6640100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c1
 29352 000164F1 E95B020000              	jmp .L_lambda_simple_end_00c1
 29353                                  .L_lambda_simple_code_00c1:	; lambda-simple body
 29354 000164F6 48837C241003            	cmp qword [rsp + 8 * 2], 3
 29355 000164FC 740B                    	je .L_lambda_simple_arity_check_ok_00c1
 29356 000164FE FF742410                	push qword [rsp + 8 * 2]
 29357 00016502 6A03                    	push 3
 29358 00016504 E981050000              	jmp L_error_incorrect_arity_simple
 29359                                  .L_lambda_simple_arity_check_ok_00c1:
 29360 00016509 C8000000                	enter 0, 0
 29361                                  	; preparing a non-tail-call
 29362 0001650D 488B4530                	mov rax, PARAM(2)	; param n
 29363 00016511 50                      	push rax
 29364 00016512 6A01                    	push 1	; arg count
 29365 00016514 488B0425[CC170000]      	mov rax, qword [free_var_151]	; free var zero?
 29366 0001651C 803805                  	cmp byte [rax], T_undefined
 29367 0001651F 0F847F040000            	je L_error_fvar_undefined
 29368 00016525 803804                  	cmp byte [rax], T_closure
 29369 00016528 0F85FA040000            	jne L_error_non_closure
 29370 0001652E FF7001                  	push SOB_CLOSURE_ENV(rax)
 29371 00016531 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29372 00016534 483D[02000000]          	cmp rax, sob_boolean_false
 29373 0001653A 740F                    	je .L_if_else_0096
 29374 0001653C 48B8-                   	mov rax, L_constants + 3485
 29374 0001653E [9D0D000000000000] 
 29375 00016546 E902020000              	jmp .L_if_end_0096
 29376                                  .L_if_else_0096:
 29377                                  	; preparing a non-tail-call
 29378 0001654B 488B4528                	mov rax, PARAM(1)	; param b
 29379 0001654F 50                      	push rax
 29380 00016550 488B4520                	mov rax, PARAM(0)	; param a
 29381 00016554 50                      	push rax
 29382 00016555 6A02                    	push 2	; arg count
 29383 00016557 488B0425[090E0000]      	mov rax, qword [free_var_4]	; free var <
 29384 0001655F 803805                  	cmp byte [rax], T_undefined
 29385 00016562 0F843C040000            	je L_error_fvar_undefined
 29386 00016568 803804                  	cmp byte [rax], T_closure
 29387 0001656B 0F85B7040000            	jne L_error_non_closure
 29388 00016571 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29389 00016574 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29390 00016577 483D[02000000]          	cmp rax, sob_boolean_false
 29391 0001657D 0F84C3000000            	je .L_if_else_0095
 29392                                  	; preparing a tail-call
 29393                                  	; preparing a non-tail-call
 29394 00016583 488B4530                	mov rax, PARAM(2)	; param n
 29395 00016587 50                      	push rax
 29396                                  	; preparing a non-tail-call
 29397 00016588 488B4520                	mov rax, PARAM(0)	; param a
 29398 0001658C 50                      	push rax
 29399 0001658D 488B4528                	mov rax, PARAM(1)	; param b
 29400 00016591 50                      	push rax
 29401 00016592 6A02                    	push 2	; arg count
 29402 00016594 488B0425[F80D0000]      	mov rax, qword [free_var_3]	; free var /
 29403 0001659C 803805                  	cmp byte [rax], T_undefined
 29404 0001659F 0F84FF030000            	je L_error_fvar_undefined
 29405 000165A5 803804                  	cmp byte [rax], T_closure
 29406 000165A8 0F857A040000            	jne L_error_non_closure
 29407 000165AE FF7001                  	push SOB_CLOSURE_ENV(rax)
 29408 000165B1 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29409 000165B4 50                      	push rax
 29410 000165B5 488B4520                	mov rax, PARAM(0)	; param a
 29411 000165B9 50                      	push rax
 29412 000165BA 6A03                    	push 3	; arg count
 29413 000165BC 488B0425[36140000]      	mov rax, qword [free_var_97]	; free var logarithm
 29414 000165C4 803805                  	cmp byte [rax], T_undefined
 29415 000165C7 0F84D7030000            	je L_error_fvar_undefined
 29416 000165CD 803804                  	cmp byte [rax], T_closure
 29417 000165D0 0F8552040000            	jne L_error_non_closure
 29418 000165D6 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29419 000165D9 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29420 000165DC 50                      	push rax
 29421 000165DD 48B8-                   	mov rax, L_constants + 3485
 29421 000165DF [9D0D000000000000] 
 29422 000165E7 50                      	push rax
 29423 000165E8 6A02                    	push 2	; arg count
 29424 000165EA 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 29425 000165F2 803805                  	cmp byte [rax], T_undefined
 29426 000165F5 0F84A9030000            	je L_error_fvar_undefined
 29427 000165FB 803804                  	cmp byte [rax], T_closure
 29428 000165FE 0F8524040000            	jne L_error_non_closure
 29429 00016604 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29430 00016607 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 29431 0001660A FF7500                  	push qword[rbp]
 29432 0001660D 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 29433 00016612 48895D10                	mov qword[rbp + 8*2],rbx
 29434 00016616 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 29435 0001661E BF00000000              	mov rdi,0
 29436 00016623 EB00                    	jmp .L_tc_recycle_frame_loop_0112
 29437                                  .L_tc_recycle_frame_loop_0112:
 29438 00016625 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 29439 00016629 740F                    	je .L_tc_recycle_frame_done_0112
 29440 0001662B 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 29441 00016630 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 29442 00016635 48FFC7                  	inc rdi
 29443 00016638 EBEB                    	jmp .L_tc_recycle_frame_loop_0112
 29444                                  .L_tc_recycle_frame_done_0112:
 29445 0001663A 4889EC                  	mov rsp, rbp	; point to last argument
 29446 0001663D 5D                      	pop rbp
 29447 0001663E FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29448 00016641 E907010000              	jmp .L_if_end_0095
 29449                                  .L_if_else_0095:
 29450                                  	; preparing a non-tail-call
 29451 00016646 488B4528                	mov rax, PARAM(1)	; param b
 29452 0001664A 50                      	push rax
 29453 0001664B 488B4520                	mov rax, PARAM(0)	; param a
 29454 0001664F 50                      	push rax
 29455 00016650 6A02                    	push 2	; arg count
 29456 00016652 488B0425[2B0E0000]      	mov rax, qword [free_var_6]	; free var =
 29457 0001665A 803805                  	cmp byte [rax], T_undefined
 29458 0001665D 0F8441030000            	je L_error_fvar_undefined
 29459 00016663 803804                  	cmp byte [rax], T_closure
 29460 00016666 0F85BC030000            	jne L_error_non_closure
 29461 0001666C FF7001                  	push SOB_CLOSURE_ENV(rax)
 29462 0001666F FF5009                  	call SOB_CLOSURE_CODE(rax)
 29463 00016672 483D[02000000]          	cmp rax, sob_boolean_false
 29464 00016678 740F                    	je .L_if_else_0094
 29465 0001667A 48B8-                   	mov rax, L_constants + 3485
 29465 0001667C [9D0D000000000000] 
 29466 00016684 E9C4000000              	jmp .L_if_end_0094
 29467                                  .L_if_else_0094:
 29468                                  	; preparing a tail-call
 29469                                  	; preparing a non-tail-call
 29470                                  	; preparing a non-tail-call
 29471 00016689 48B8-                   	mov rax, L_constants + 2270
 29471 0001668B [DE08000000000000] 
 29472 00016693 50                      	push rax
 29473 00016694 488B4530                	mov rax, PARAM(2)	; param n
 29474 00016698 50                      	push rax
 29475 00016699 6A02                    	push 2	; arg count
 29476 0001669B 488B0425[E70D0000]      	mov rax, qword [free_var_2]	; free var -
 29477 000166A3 803805                  	cmp byte [rax], T_undefined
 29478 000166A6 0F84F8020000            	je L_error_fvar_undefined
 29479 000166AC 803804                  	cmp byte [rax], T_closure
 29480 000166AF 0F8573030000            	jne L_error_non_closure
 29481 000166B5 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29482 000166B8 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29483 000166BB 50                      	push rax
 29484 000166BC 488B4520                	mov rax, PARAM(0)	; param a
 29485 000166C0 50                      	push rax
 29486 000166C1 488B4528                	mov rax, PARAM(1)	; param b
 29487 000166C5 50                      	push rax
 29488 000166C6 6A03                    	push 3	; arg count
 29489 000166C8 488B0425[36140000]      	mov rax, qword [free_var_97]	; free var logarithm
 29490 000166D0 803805                  	cmp byte [rax], T_undefined
 29491 000166D3 0F84CB020000            	je L_error_fvar_undefined
 29492 000166D9 803804                  	cmp byte [rax], T_closure
 29493 000166DC 0F8546030000            	jne L_error_non_closure
 29494 000166E2 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29495 000166E5 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29496 000166E8 50                      	push rax
 29497 000166E9 48B8-                   	mov rax, L_constants + 3485
 29497 000166EB [9D0D000000000000] 
 29498 000166F3 50                      	push rax
 29499 000166F4 6A02                    	push 2	; arg count
 29500 000166F6 488B0425[F80D0000]      	mov rax, qword [free_var_3]	; free var /
 29501 000166FE 803805                  	cmp byte [rax], T_undefined
 29502 00016701 0F849D020000            	je L_error_fvar_undefined
 29503 00016707 803804                  	cmp byte [rax], T_closure
 29504 0001670A 0F8518030000            	jne L_error_non_closure
 29505 00016710 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29506 00016713 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 29507 00016716 FF7500                  	push qword[rbp]
 29508 00016719 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 29509 0001671E 48895D10                	mov qword[rbp + 8*2],rbx
 29510 00016722 48C7451802000000        	mov qword[rbp + 8*3], 2	 ;n turns to m
 29511 0001672A BF00000000              	mov rdi,0
 29512 0001672F EB00                    	jmp .L_tc_recycle_frame_loop_0113
 29513                                  .L_tc_recycle_frame_loop_0113:
 29514 00016731 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 29515 00016735 740F                    	je .L_tc_recycle_frame_done_0113
 29516 00016737 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 29517 0001673C 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 29518 00016741 48FFC7                  	inc rdi
 29519 00016744 EBEB                    	jmp .L_tc_recycle_frame_loop_0113
 29520                                  .L_tc_recycle_frame_done_0113:
 29521 00016746 4889EC                  	mov rsp, rbp	; point to last argument
 29522 00016749 5D                      	pop rbp
 29523 0001674A FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29524                                  .L_if_end_0094:
 29525                                  .L_if_end_0095:
 29526                                  .L_if_end_0096:
 29527 0001674D C9                      	leave
 29528 0001674E C22800                  	ret AND_KILL_FRAME(3)
 29529                                  .L_lambda_simple_end_00c1:	; new closure is in rax
 29530 00016751 48890425[36140000]      	mov qword [free_var_97], rax
 29531 00016759 48B8-                   	mov rax, sob_void
 29531 0001675B [0000000000000000] 
 29532                                  
 29533 00016763 4889C7                  	mov rdi, rax
 29534 00016766 E8BB050000              	call print_sexpr_if_not_void
 29535 0001676B BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29536 00016770 E85C030000              	call malloc
 29537 00016775 50                      	push rax
 29538 00016776 BF00000000              	mov rdi, 8 * 0	; new rib
 29539 0001677B E851030000              	call malloc
 29540 00016780 50                      	push rax
 29541 00016781 BF08000000              	mov rdi, 8 * 1	; extended env
 29542 00016786 E846030000              	call malloc
 29543 0001678B 488B7D10                	mov rdi, ENV
 29544 0001678F BE00000000              	mov rsi, 0
 29545 00016794 BA01000000              	mov rdx, 1
 29546                                  .L_lambda_simple_env_loop_00c2:	; ext_env[i + 1] <-- env[i]
 29547 00016799 4883FE00                	cmp rsi, 0
 29548 0001679D 7410                    	je .L_lambda_simple_env_end_00c2
 29549 0001679F 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29550 000167A3 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29551 000167A7 48FFC6                  	inc rsi
 29552 000167AA 48FFC2                  	inc rdx
 29553 000167AD EBEA                    	jmp .L_lambda_simple_env_loop_00c2
 29554                                  .L_lambda_simple_env_end_00c2:
 29555 000167AF 5B                      	pop rbx
 29556 000167B0 BE00000000              	mov rsi, 0
 29557                                  .L_lambda_simple_params_loop_00c2:	; copy params
 29558 000167B5 4883FE00                	cmp rsi, 0
 29559 000167B9 740E                    	je .L_lambda_simple_params_end_00c2
 29560 000167BB 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29561 000167C0 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29562 000167C4 48FFC6                  	inc rsi
 29563 000167C7 EBEC                    	jmp .L_lambda_simple_params_loop_00c2
 29564                                  .L_lambda_simple_params_end_00c2:
 29565 000167C9 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29566 000167CC 4889C3                  	mov rbx, rax
 29567 000167CF 58                      	pop rax
 29568 000167D0 C60004                  	mov byte [rax], T_closure
 29569 000167D3 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29570 000167D7 48C74009[E4670100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c2
 29571 000167DF E97F000000              	jmp .L_lambda_simple_end_00c2
 29572                                  .L_lambda_simple_code_00c2:	; lambda-simple body
 29573 000167E4 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29574 000167EA 740B                    	je .L_lambda_simple_arity_check_ok_00c2
 29575 000167EC FF742410                	push qword [rsp + 8 * 2]
 29576 000167F0 6A00                    	push 0
 29577 000167F2 E993020000              	jmp L_error_incorrect_arity_simple
 29578                                  .L_lambda_simple_arity_check_ok_00c2:
 29579 000167F7 C8000000                	enter 0, 0
 29580                                  	; preparing a tail-call
 29581 000167FB 48B8-                   	mov rax, L_constants + 3510
 29581 000167FD [B60D000000000000] 
 29582 00016805 50                      	push rax
 29583 00016806 6A01                    	push 1	; arg count
 29584 00016808 488B0425[BB170000]      	mov rax, qword [free_var_150]	; free var write-char
 29585 00016810 803805                  	cmp byte [rax], T_undefined
 29586 00016813 0F848B010000            	je L_error_fvar_undefined
 29587 00016819 803804                  	cmp byte [rax], T_closure
 29588 0001681C 0F8506020000            	jne L_error_non_closure
 29589 00016822 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29590 00016825 FF7508                  	push qword[rbp+ 8 * 1]	 ;old ret address of f
 29591 00016828 FF7500                  	push qword[rbp]
 29592 0001682B 488B5C2410              	mov rbx, qword[rsp+8*2]	 ;rbx holds the lexical enviroment of h
 29593 00016830 48895D10                	mov qword[rbp + 8*2],rbx
 29594 00016834 48C7451801000000        	mov qword[rbp + 8*3], 1	 ;n turns to m
 29595 0001683C BF00000000              	mov rdi,0
 29596 00016841 EB00                    	jmp .L_tc_recycle_frame_loop_0114
 29597                                  .L_tc_recycle_frame_loop_0114:
 29598 00016843 483B7D18                	cmp rdi, qword[rbp + 8*3]	 ;if rdi is equal to the number of parans - we donec
 29599 00016847 740F                    	je .L_tc_recycle_frame_done_0114
 29600 00016849 488B5CFC20              	mov rbx, qword[rsp + 8 * (4 + rdi)]
 29601 0001684E 48895CFD20              	mov qword[rbp + 8 * (4 + rdi)],rbx
 29602 00016853 48FFC7                  	inc rdi
 29603 00016856 EBEB                    	jmp .L_tc_recycle_frame_loop_0114
 29604                                  .L_tc_recycle_frame_done_0114:
 29605 00016858 4889EC                  	mov rsp, rbp	; point to last argument
 29606 0001685B 5D                      	pop rbp
 29607 0001685C FF6009                  	jmp SOB_CLOSURE_CODE(rax)
 29608 0001685F C9                      	leave
 29609 00016860 C21000                  	ret AND_KILL_FRAME(0)
 29610                                  .L_lambda_simple_end_00c2:	; new closure is in rax
 29611 00016863 48890425[BE140000]      	mov qword [free_var_105], rax
 29612 0001686B 48B8-                   	mov rax, sob_void
 29612 0001686D [0000000000000000] 
 29613                                  
 29614 00016875 4889C7                  	mov rdi, rax
 29615 00016878 E8A9040000              	call print_sexpr_if_not_void
 29616 0001687D BF11000000              	mov rdi, (1 + 8 + 8)	; sob closure
 29617 00016882 E84A020000              	call malloc
 29618 00016887 50                      	push rax
 29619 00016888 BF00000000              	mov rdi, 8 * 0	; new rib
 29620 0001688D E83F020000              	call malloc
 29621 00016892 50                      	push rax
 29622 00016893 BF08000000              	mov rdi, 8 * 1	; extended env
 29623 00016898 E834020000              	call malloc
 29624 0001689D 488B7D10                	mov rdi, ENV
 29625 000168A1 BE00000000              	mov rsi, 0
 29626 000168A6 BA01000000              	mov rdx, 1
 29627                                  .L_lambda_simple_env_loop_00c3:	; ext_env[i + 1] <-- env[i]
 29628 000168AB 4883FE00                	cmp rsi, 0
 29629 000168AF 7410                    	je .L_lambda_simple_env_end_00c3
 29630 000168B1 488B0CF7                	mov rcx, qword [rdi + 8 * rsi]
 29631 000168B5 48890CD0                	mov qword [rax + 8 * rdx], rcx
 29632 000168B9 48FFC6                  	inc rsi
 29633 000168BC 48FFC2                  	inc rdx
 29634 000168BF EBEA                    	jmp .L_lambda_simple_env_loop_00c3
 29635                                  .L_lambda_simple_env_end_00c3:
 29636 000168C1 5B                      	pop rbx
 29637 000168C2 BE00000000              	mov rsi, 0
 29638                                  .L_lambda_simple_params_loop_00c3:	; copy params
 29639 000168C7 4883FE00                	cmp rsi, 0
 29640 000168CB 740E                    	je .L_lambda_simple_params_end_00c3
 29641 000168CD 488B54F520              	mov rdx, qword [rbp + 8 * rsi + 8 * 4]
 29642 000168D2 488914F3                	mov qword [rbx + 8 * rsi], rdx
 29643 000168D6 48FFC6                  	inc rsi
 29644 000168D9 EBEC                    	jmp .L_lambda_simple_params_loop_00c3
 29645                                  .L_lambda_simple_params_end_00c3:
 29646 000168DB 488918                  	mov qword [rax], rbx	; ext_env[0] <-- new_rib 
 29647 000168DE 4889C3                  	mov rbx, rax
 29648 000168E1 58                      	pop rax
 29649 000168E2 C60004                  	mov byte [rax], T_closure
 29650 000168E5 48895801                	mov SOB_CLOSURE_ENV(rax), rbx
 29651 000168E9 48C74009[F3680100]      	mov SOB_CLOSURE_CODE(rax), .L_lambda_simple_code_00c3
 29652 000168F1 EB25                    	jmp .L_lambda_simple_end_00c3
 29653                                  .L_lambda_simple_code_00c3:	; lambda-simple body
 29654 000168F3 48837C241000            	cmp qword [rsp + 8 * 2], 0
 29655 000168F9 740B                    	je .L_lambda_simple_arity_check_ok_00c3
 29656 000168FB FF742410                	push qword [rsp + 8 * 2]
 29657 000168FF 6A00                    	push 0
 29658 00016901 E984010000              	jmp L_error_incorrect_arity_simple
 29659                                  .L_lambda_simple_arity_check_ok_00c3:
 29660 00016906 C8000000                	enter 0, 0
 29661 0001690A 48B8-                   	mov rax, L_constants + 0
 29661 0001690C [0000000000000000] 
 29662 00016914 C9                      	leave
 29663 00016915 C21000                  	ret AND_KILL_FRAME(0)
 29664                                  .L_lambda_simple_end_00c3:	; new closure is in rax
 29665 00016918 48890425[AA170000]      	mov qword [free_var_149], rax
 29666 00016920 48B8-                   	mov rax, sob_void
 29666 00016922 [0000000000000000] 
 29667                                  
 29668 0001692A 4889C7                  	mov rdi, rax
 29669 0001692D E8F4030000              	call print_sexpr_if_not_void
 29670                                  	; preparing a non-tail-call
 29671 00016932 48B8-                   	mov rax, L_constants + 3190
 29671 00016934 [760C000000000000] 
 29672 0001693C 50                      	push rax
 29673 0001693D 48B8-                   	mov rax, L_constants + 2270
 29673 0001693F [DE08000000000000] 
 29674 00016947 50                      	push rax
 29675 00016948 6A02                    	push 2	; arg count
 29676 0001694A 488B0425[D60D0000]      	mov rax, qword [free_var_1]	; free var +
 29677 00016952 803805                  	cmp byte [rax], T_undefined
 29678 00016955 744D                    	je L_error_fvar_undefined
 29679 00016957 803804                  	cmp byte [rax], T_closure
 29680 0001695A 0F85C8000000            	jne L_error_non_closure
 29681 00016960 FF7001                  	push SOB_CLOSURE_ENV(rax)
 29682 00016963 FF5009                  	call SOB_CLOSURE_CODE(rax)
 29683                                  Lend:
 29684 00016966 4889C7                  	mov rdi, rax
 29685 00016969 E8B8030000              	call print_sexpr_if_not_void
 29686                                  
 29687 0001696E 48BF-                           mov rdi, fmt_memory_usage
 29687 00016970 [7518000000000000] 
 29688 00016978 488B3425[FB180000]              mov rsi, qword [top_of_memory]
 29689 00016980 4881EE[00000000]                sub rsi, memory
 29690 00016987 B800000000                      mov rax, 0
 29691                                          ENTER
    44 0001698C C8000000            <1>  enter 0, 0
    45 00016990 4883E4F0            <1>  and rsp, ~15
 29692 00016994 E8(00000000)                    call printf
 29693                                          LEAVE
    49 00016999 C9                  <1>  leave
 29694 0001699A B800000000                      mov rax, 0
 29695 0001699F E8(00000000)                    call exit
 29696                                  
 29697                                  L_error_fvar_undefined:
 29698 000169A4 50                              push rax
 29699 000169A5 488B3C25[00000000]              mov rdi, qword [stderr]  ; destination
 29700 000169AD 48BE-                           mov rsi, fmt_undefined_free_var_1
 29700 000169AF [DD17000000000000] 
 29701 000169B7 B800000000                      mov rax, 0
 29702                                          ENTER
    44 000169BC C8000000            <1>  enter 0, 0
    45 000169C0 4883E4F0            <1>  and rsp, ~15
 29703 000169C4 E8(00000000)                    call fprintf
 29704                                          LEAVE
    49 000169C9 C9                  <1>  leave
 29705 000169CA 58                              pop rax
 29706 000169CB 488B4001                        mov rax, qword [rax + 1] ; string
 29707 000169CF 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 29708 000169D3 BE01000000                      mov rsi, 1               ; sizeof(char)
 29709 000169D8 488B5001                        mov rdx, qword [rax + 1] ; string-length
 29710 000169DC 488B0C25[00000000]              mov rcx, qword [stderr]  ; destination
 29711 000169E4 B800000000                      mov rax, 0
 29712                                          ENTER
    44 000169E9 C8000000            <1>  enter 0, 0
    45 000169ED 4883E4F0            <1>  and rsp, ~15
 29713 000169F1 E8(00000000)                    call fwrite
 29714                                          LEAVE
    49 000169F6 C9                  <1>  leave
 29715 000169F7 488B3C25[00000000]              mov rdi, [stderr]       ; destination
 29716 000169FF 48BE-                           mov rsi, fmt_undefined_free_var_2
 29716 00016A01 [F417000000000000] 
 29717 00016A09 B800000000                      mov rax, 0
 29718                                          ENTER
    44 00016A0E C8000000            <1>  enter 0, 0
    45 00016A12 4883E4F0            <1>  and rsp, ~15
 29719 00016A16 E8(00000000)                    call fprintf
 29720                                          LEAVE
    49 00016A1B C9                  <1>  leave
 29721 00016A1C 48C7C0F6FFFFFF                  mov rax, -10
 29722 00016A23 E8(00000000)                    call exit
 29723                                  
 29724                                  L_error_non_closure:
 29725 00016A28 488B3C25[00000000]              mov rdi, qword [stderr]
 29726 00016A30 48BE-                           mov rsi, fmt_non_closure
 29726 00016A32 [AB18000000000000] 
 29727 00016A3A B800000000                      mov rax, 0
 29728                                          ENTER
    44 00016A3F C8000000            <1>  enter 0, 0
    45 00016A43 4883E4F0            <1>  and rsp, ~15
 29729 00016A47 E8(00000000)                    call fprintf
 29730                                          LEAVE
    49 00016A4C C9                  <1>  leave
 29731 00016A4D 48C7C0FEFFFFFF                  mov rax, -2
 29732 00016A54 E8(00000000)                    call exit
 29733                                  
 29734                                  L_error_improper_list:
 29735 00016A59 488B3C25[00000000]      	mov rdi, qword [stderr]
 29736 00016A61 48BE-                   	mov rsi, fmt_error_improper_list
 29736 00016A63 [D318000000000000] 
 29737 00016A6B B800000000              	mov rax, 0
 29738                                          ENTER
    44 00016A70 C8000000            <1>  enter 0, 0
    45 00016A74 4883E4F0            <1>  and rsp, ~15
 29739 00016A78 E8(00000000)            	call fprintf
 29740                                          LEAVE
    49 00016A7D C9                  <1>  leave
 29741 00016A7E 48C7C0F9FFFFFF          	mov rax, -7
 29742 00016A85 E8(00000000)            	call exit
 29743                                  
 29744                                  L_error_incorrect_arity_simple:
 29745 00016A8A 488B3C25[00000000]              mov rdi, qword [stderr]
 29746 00016A92 48BE-                           mov rsi, fmt_incorrect_arity_simple
 29746 00016A94 [1618000000000000] 
 29747 00016A9C EB12                            jmp L_error_incorrect_arity_common
 29748                                  L_error_incorrect_arity_opt:
 29749 00016A9E 488B3C25[00000000]              mov rdi, qword [stderr]
 29750 00016AA6 48BE-                           mov rsi, fmt_incorrect_arity_opt
 29750 00016AA8 [4118000000000000] 
 29751                                  L_error_incorrect_arity_common:
 29752 00016AB0 5A                              pop rdx
 29753 00016AB1 59                              pop rcx
 29754 00016AB2 B800000000                      mov rax, 0
 29755                                          ENTER
    44 00016AB7 C8000000            <1>  enter 0, 0
    45 00016ABB 4883E4F0            <1>  and rsp, ~15
 29756 00016ABF E8(00000000)                    call fprintf
 29757                                          LEAVE
    49 00016AC4 C9                  <1>  leave
 29758 00016AC5 48C7C0FAFFFFFF                  mov rax, -6
 29759 00016ACC E8(00000000)                    call exit
 29760                                  
 29761                                  section .data
 29762                                  fmt_undefined_free_var_1:
 29763 000017DD 212121205468652066-             db `!!! The free variable \0`
 29763 000017E6 726565207661726961-
 29763 000017EF 626C652000         
 29764                                  fmt_undefined_free_var_2:
 29765 000017F4 207761732075736564-             db ` was used before it was defined.\n\0`
 29765 000017FD 206265666F72652069-
 29765 00001806 742077617320646566-
 29765 0000180F 696E65642E0A00     
 29766                                  fmt_incorrect_arity_simple:
 29767 00001816 212121204578706563-             db `!!! Expected %ld arguments, but given %ld\n\0`
 29767 0000181F 74656420256C642061-
 29767 00001828 7267756D656E74732C-
 29767 00001831 206275742067697665-
 29767 0000183A 6E20256C640A00     
 29768                                  fmt_incorrect_arity_opt:
 29769 00001841 212121204578706563-             db `!!! Expected at least %ld arguments, but given %ld\n\0`
 29769 0000184A 746564206174206C65-
 29769 00001853 61737420256C642061-
 29769 0000185C 7267756D656E74732C-
 29769 00001865 206275742067697665-
 29769 0000186E 6E20256C640A00     
 29770                                  fmt_memory_usage:
 29771 00001875 0A2121212055736564-             db `\n!!! Used %ld bytes of dynamically-allocated memory\n\n\0`
 29771 0000187E 20256C642062797465-
 29771 00001887 73206F662064796E61-
 29771 00001890 6D6963616C6C792D61-
 29771 00001899 6C6C6F636174656420-
 29771 000018A2 6D656D6F72790A0A00 
 29772                                  fmt_non_closure:
 29773 000018AB 21212120417474656D-             db `!!! Attempting to apply a non-closure!\n\0`
 29773 000018B4 7074696E6720746F20-
 29773 000018BD 6170706C792061206E-
 29773 000018C6 6F6E2D636C6F737572-
 29773 000018CF 65210A00           
 29774                                  fmt_error_improper_list:
 29775 000018D3 212121205468652061-     	db `!!! The argument is not a proper list!\n\0`
 29775 000018DC 7267756D656E742069-
 29775 000018E5 73206E6F7420612070-
 29775 000018EE 726F706572206C6973-
 29775 000018F7 74210A00           
 29776                                  
 29777                                  section .bss
 29778                                  memory:
 29779 00000000 <res 40000000h>         	resb gbytes(1)
 29780                                  
 29781                                  section .data
 29782                                  top_of_memory:
 29783 000018FB [0000000000000000]              dq memory
 29784                                  
 29785                                  section .text
 29786                                  malloc:
 29787 00016AD1 488B0425[FB180000]              mov rax, qword [top_of_memory]
 29788 00016AD9 48013C25[FB180000]              add qword [top_of_memory], rdi
 29789 00016AE1 C3                              ret
 29790                                  
 29791                                  L_code_ptr_return:
 29792 00016AE2 48837C241002            	cmp qword [rsp + 8*2], 2
 29793 00016AE8 0F851F1D0000            	jne L_error_arg_count_2
 29794 00016AEE 488B4C2418              	mov rcx, qword [rsp + 8*3]
 29795                                  	assert_integer(rcx)
    53 00016AF3 803911              <1>  cmp byte [%1], %2
    54 00016AF6 0F85B01D0000        <1>  jne L_error_incorrect_type
 29796 00016AFC 488B4901                	mov rcx, qword [rcx + 1]
 29797 00016B00 4883F900                	cmp rcx, 0
 29798 00016B04 0F8C371C0000            	jl L_error_integer_range
 29799 00016B0A 488B442420              	mov rax, qword [rsp + 8*4]
 29800                                  .L0:
 29801 00016B0F 4883F900                        cmp rcx, 0
 29802 00016B13 7409                            je .L1
 29803 00016B15 488B6D00                	mov rbp, qword [rbp]
 29804 00016B19 48FFC9                  	dec rcx
 29805 00016B1C 7FF1                    	jg .L0
 29806                                  .L1:
 29807 00016B1E 4889EC                  	mov rsp, rbp
 29808 00016B21 5D                      	pop rbp
 29809 00016B22 5B                              pop rbx
 29810 00016B23 488B4C2408                      mov rcx, qword [rsp + 8*1]
 29811 00016B28 488D64CC10                      lea rsp, [rsp + 8*rcx + 8*2]
 29812 00016B2D FFE3                    	jmp rbx
 29813                                  
 29814                                  L_code_ptr_make_list:
 29815 00016B2F C8000000                	enter 0, 0
 29816 00016B33 48837D1801                      cmp COUNT, 1
 29817 00016B38 740C                            je .L0
 29818 00016B3A 48837D1802                      cmp COUNT, 2
 29819 00016B3F 7411                            je .L1
 29820 00016B41 E9FC1C0000                      jmp L_error_arg_count_12
 29821                                  .L0:
 29822 00016B46 49B9-                           mov r9, sob_void
 29822 00016B48 [0000000000000000] 
 29823 00016B50 EB04                            jmp .L2
 29824                                  .L1:
 29825 00016B52 4C8B4D28                        mov r9, PARAM(1)
 29826                                  .L2:
 29827 00016B56 488B4D20                        mov rcx, PARAM(0)
 29828                                          assert_integer(rcx)
    53 00016B5A 803911              <1>  cmp byte [%1], %2
    54 00016B5D 0F85491D0000        <1>  jne L_error_incorrect_type
 29829 00016B63 488B4901                        mov rcx, qword [rcx + 1]
 29830 00016B67 4883F900                        cmp rcx, 0
 29831 00016B6B 0F8C011C0000                    jl L_error_arg_negative
 29832 00016B71 49B8-                           mov r8, sob_nil
 29832 00016B73 [0100000000000000] 
 29833                                  .L3:
 29834 00016B7B 4883F900                        cmp rcx, 0
 29835 00016B7F 7E1D                            jle .L4
 29836 00016B81 BF11000000                      mov rdi, 1 + 8 + 8
 29837 00016B86 E846FFFFFF                      call malloc
 29838 00016B8B C60021                          mov byte [rax], T_pair
 29839 00016B8E 4C894801                        mov qword [rax + 1], r9
 29840 00016B92 4C894009                        mov qword [rax + 1 + 8], r8
 29841 00016B96 4989C0                          mov r8, rax
 29842 00016B99 48FFC9                          dec rcx
 29843 00016B9C EBDD                            jmp .L3
 29844                                  .L4:
 29845 00016B9E 4C89C0                          mov rax, r8
 29846 00016BA1 48837D1802                      cmp COUNT, 2
 29847 00016BA6 7404                            je .L5
 29848 00016BA8 C9                              leave
 29849 00016BA9 C21800                          ret AND_KILL_FRAME(1)
 29850                                  .L5:
 29851 00016BAC C9                      	leave
 29852 00016BAD C22000                  	ret AND_KILL_FRAME(2)
 29853                                  
 29854                                  L_code_ptr_is_primitive:
 29855 00016BB0 C8000000                	enter 0, 0
 29856 00016BB4 48837D1801              	cmp COUNT, 1
 29857 00016BB9 0F85191C0000            	jne L_error_arg_count_1
 29858 00016BBF 488B4520                	mov rax, PARAM(0)
 29859                                  	assert_closure(rax)
    53 00016BC3 803804              <1>  cmp byte [%1], %2
    54 00016BC6 0F85E01C0000        <1>  jne L_error_incorrect_type
 29860 00016BCC 4883780100              	cmp SOB_CLOSURE_ENV(rax), 0
 29861 00016BD1 750C                    	jne .L_false
 29862 00016BD3 48B8-                   	mov rax, sob_boolean_true
 29862 00016BD5 [0300000000000000] 
 29863 00016BDD EB0A                    	jmp .L_end
 29864                                  .L_false:
 29865 00016BDF 48B8-                   	mov rax, sob_boolean_false
 29865 00016BE1 [0200000000000000] 
 29866                                  .L_end:
 29867 00016BE9 C9                      	leave
 29868 00016BEA C21800                  	ret AND_KILL_FRAME(1)
 29869                                  
 29870                                  L_code_ptr_length:
 29871 00016BED C8000000                	enter 0, 0
 29872 00016BF1 48837D1801              	cmp COUNT, 1
 29873 00016BF6 0F85DC1B0000            	jne L_error_arg_count_1
 29874 00016BFC 488B5D20                	mov rbx, PARAM(0)
 29875 00016C00 BF00000000              	mov rdi, 0
 29876                                  .L:
 29877 00016C05 803B01                  	cmp byte [rbx], T_nil
 29878 00016C08 7412                    	je .L_end
 29879                                  	assert_pair(rbx)
    53 00016C0A 803B21              <1>  cmp byte [%1], %2
    54 00016C0D 0F85991C0000        <1>  jne L_error_incorrect_type
 29880 00016C13 488B5B09                	mov rbx, SOB_PAIR_CDR(rbx)
 29881 00016C17 48FFC7                  	inc rdi
 29882 00016C1A EBE9                    	jmp .L
 29883                                  .L_end:
 29884 00016C1C E8061B0000              	call make_integer
 29885 00016C21 C9                      	leave
 29886 00016C22 C21800                  	ret AND_KILL_FRAME(1)
 29887                                  
 29888                                  L_code_ptr_break:
 29889 00016C25 48837C241000                    cmp qword [rsp + 8 * 2], 0
 29890 00016C2B 0F85721B0000                    jne L_error_arg_count_0
 29891 00016C31 CC                              int3
 29892 00016C32 48B8-                           mov rax, sob_void
 29892 00016C34 [0000000000000000] 
 29893 00016C3C C21000                          ret AND_KILL_FRAME(0)        
 29894                                  
 29895                                  L_code_ptr_frame:
 29896 00016C3F C8000000                        enter 0, 0
 29897 00016C43 48837D1800                      cmp COUNT, 0
 29898 00016C48 0F85551B0000                    jne L_error_arg_count_0
 29899                                  
 29900 00016C4E 48BF-                           mov rdi, fmt_frame
 29900 00016C50 [0319000000000000] 
 29901 00016C58 488B7500                        mov rsi, qword [rbp]    ; old rbp
 29902 00016C5C 488B5608                        mov rdx, qword [rsi + 8*1] ; ret addr
 29903 00016C60 488B4E10                        mov rcx, qword [rsi + 8*2] ; lexical environment
 29904 00016C64 4C8B4618                        mov r8, qword [rsi + 8*3] ; count
 29905 00016C68 4C8D4E20                        lea r9, [rsi + 8*4]       ; address of argument 0
 29906 00016C6C 6A00                            push 0
 29907 00016C6E 4151                            push r9
 29908 00016C70 4150                            push r8                   ; we'll use it when printing the params
 29909 00016C72 B800000000                      mov rax, 0
 29910                                          
 29911                                          ENTER
    44 00016C77 C8000000            <1>  enter 0, 0
    45 00016C7B 4883E4F0            <1>  and rsp, ~15
 29912 00016C7F E8(00000000)                    call printf
 29913                                          LEAVE
    49 00016C84 C9                  <1>  leave
 29914                                  
 29915                                  .L:
 29916 00016C85 488B0C24                        mov rcx, qword [rsp]
 29917 00016C89 4883F900                        cmp rcx, 0
 29918 00016C8D 7467                            je .L_out
 29919 00016C8F 48BF-                           mov rdi, fmt_frame_param_prefix
 29919 00016C91 [3C19000000000000] 
 29920 00016C99 488B742410                      mov rsi, qword [rsp + 8*2]
 29921 00016C9E B800000000                      mov rax, 0
 29922                                          
 29923                                          ENTER
    44 00016CA3 C8000000            <1>  enter 0, 0
    45 00016CA7 4883E4F0            <1>  and rsp, ~15
 29924 00016CAB E8(00000000)                    call printf
 29925                                          LEAVE
    49 00016CB0 C9                  <1>  leave
 29926                                  
 29927 00016CB1 488B0C24                        mov rcx, qword [rsp]
 29928 00016CB5 48FFC9                          dec rcx
 29929 00016CB8 48890C24                        mov qword [rsp], rcx    ; dec arg count
 29930 00016CBC 48FF442410                      inc qword [rsp + 8*2]   ; increment index of current arg
 29931 00016CC1 488B7C2408                      mov rdi, qword [rsp + 8*1] ; addr of addr current arg
 29932 00016CC6 4C8D4F08                        lea r9, [rdi + 8]          ; addr of next arg
 29933 00016CCA 4C894C2408                      mov qword [rsp + 8*1], r9  ; backup addr of next arg
 29934 00016CCF 488B3F                          mov rdi, qword [rdi]       ; addr of current arg
 29935 00016CD2 E87B000000                      call print_sexpr
 29936 00016CD7 48BF-                           mov rdi, fmt_newline
 29936 00016CD9 [6819000000000000] 
 29937 00016CE1 B800000000                      mov rax, 0
 29938                                          ENTER
    44 00016CE6 C8000000            <1>  enter 0, 0
    45 00016CEA 4883E4F0            <1>  and rsp, ~15
 29939 00016CEE E8(00000000)                    call printf
 29940                                          LEAVE
    49 00016CF3 C9                  <1>  leave
 29941 00016CF4 EB8F                            jmp .L
 29942                                  .L_out:
 29943 00016CF6 48BF-                           mov rdi, fmt_frame_continue
 29943 00016CF8 [4D19000000000000] 
 29944 00016D00 B800000000                      mov rax, 0
 29945                                          ENTER
    44 00016D05 C8000000            <1>  enter 0, 0
    45 00016D09 4883E4F0            <1>  and rsp, ~15
 29946 00016D0D E8(00000000)                    call printf
 29947 00016D12 E8(00000000)                    call getchar
 29948                                          LEAVE
    49 00016D17 C9                  <1>  leave
 29949                                          
 29950 00016D18 48B8-                           mov rax, sob_void
 29950 00016D1A [0000000000000000] 
 29951 00016D22 C9                              leave
 29952 00016D23 C21000                          ret AND_KILL_FRAME(0)
 29953                                          
 29954                                  print_sexpr_if_not_void:
 29955 00016D26 4881FF[00000000]        	cmp rdi, sob_void
 29956 00016D2D 7422                    	je .done
 29957 00016D2F E81E000000              	call print_sexpr
 29958 00016D34 48BF-                   	mov rdi, fmt_newline
 29958 00016D36 [6819000000000000] 
 29959 00016D3E B800000000              	mov rax, 0
 29960                                  	ENTER
    44 00016D43 C8000000            <1>  enter 0, 0
    45 00016D47 4883E4F0            <1>  and rsp, ~15
 29961 00016D4B E8(00000000)            	call printf
 29962                                  	LEAVE
    49 00016D50 C9                  <1>  leave
 29963                                  .done:
 29964 00016D51 C3                      	ret
 29965                                  
 29966                                  section .data
 29967                                  fmt_frame:
 29968 00001903 524250203D2025703B-             db `RBP = %p; ret addr = %p; lex env = %p; param count = %d\n\0`
 29968 0000190C 207265742061646472-
 29968 00001915 203D2025703B206C65-
 29968 0000191E 7820656E76203D2025-
 29968 00001927 703B20706172616D20-
 29968 00001930 636F756E74203D2025-
 29968 00001939 640A00             
 29969                                  fmt_frame_param_prefix:
 29970 0000193C 3D3D5B706172616D20-             db `==[param %d]==> \0`
 29970 00001945 25645D3D3D3E2000   
 29971                                  fmt_frame_continue:
 29972 0000194D 486974203C456E7465-             db `Hit <Enter> to continue...\0`
 29972 00001956 723E20746F20636F6E-
 29972 0000195F 74696E75652E2E2E00 
 29973                                  fmt_newline:
 29974 00001968 0A00                    	db `\n\0`
 29975                                  fmt_void:
 29976 0000196A 233C766F69643E00        	db `#<void>\0`
 29977                                  fmt_nil:
 29978 00001972 282900                  	db `()\0`
 29979                                  fmt_boolean_false:
 29980 00001975 236600                  	db `#f\0`
 29981                                  fmt_boolean_true:
 29982 00001978 237400                  	db `#t\0`
 29983                                  fmt_char_backslash:
 29984 0000197B 235C5C00                	db `#\\\\\0`
 29985                                  fmt_char_dquote:
 29986 0000197F 235C2200                	db `#\\"\0`
 29987                                  fmt_char_simple:
 29988 00001983 235C256300              	db `#\\%c\0`
 29989                                  fmt_char_null:
 29990 00001988 235C6E756C00            	db `#\\nul\0`
 29991                                  fmt_char_bell:
 29992 0000198E 235C62656C6C00          	db `#\\bell\0`
 29993                                  fmt_char_backspace:
 29994 00001995 235C6261636B737061-     	db `#\\backspace\0`
 29994 0000199E 636500             
 29995                                  fmt_char_tab:
 29996 000019A1 235C74616200            	db `#\\tab\0`
 29997                                  fmt_char_newline:
 29998 000019A7 235C6E65776C696E65-     	db `#\\newline\0`
 29998 000019B0 00                 
 29999                                  fmt_char_formfeed:
 30000 000019B1 235C7061676500          	db `#\\page\0`
 30001                                  fmt_char_return:
 30002 000019B8 235C72657475726E00      	db `#\\return\0`
 30003                                  fmt_char_escape:
 30004 000019C1 235C65736300            	db `#\\esc\0`
 30005                                  fmt_char_space:
 30006 000019C7 235C737061636500        	db `#\\space\0`
 30007                                  fmt_char_hex:
 30008 000019CF 235C782530325800        	db `#\\x%02X\0`
 30009                                  fmt_gensym:
 30010 000019D7 47256C6400                      db `G%ld\0`
 30011                                  fmt_closure:
 30012 000019DC 233C636C6F73757265-     	db `#<closure at 0x%08X env=0x%08X code=0x%08X>\0`
 30012 000019E5 206174203078253038-
 30012 000019EE 5820656E763D307825-
 30012 000019F7 30385820636F64653D-
 30012 00001A00 3078253038583E00   
 30013                                  fmt_lparen:
 30014 00001A08 2800                    	db `(\0`
 30015                                  fmt_dotted_pair:
 30016 00001A0A 202E2000                	db ` . \0`
 30017                                  fmt_rparen:
 30018 00001A0E 2900                    	db `)\0`
 30019                                  fmt_space:
 30020 00001A10 2000                    	db ` \0`
 30021                                  fmt_empty_vector:
 30022 00001A12 23282900                	db `#()\0`
 30023                                  fmt_vector:
 30024 00001A16 232800                  	db `#(\0`
 30025                                  fmt_real:
 30026 00001A19 256600                  	db `%f\0`
 30027                                  fmt_fraction:
 30028 00001A1C 256C642F256C6400        	db `%ld/%ld\0`
 30029                                  fmt_zero:
 30030 00001A24 3000                    	db `0\0`
 30031                                  fmt_int:
 30032 00001A26 256C6400                	db `%ld\0`
 30033                                  fmt_unknown_scheme_object_error:
 30034 00001A2A 0A0A21212120457272-     	db `\n\n!!! Error: Unknown Scheme-object (RTTI 0x%02X) `
 30034 00001A33 6F723A20556E6B6E6F-
 30034 00001A3C 776E20536368656D65-
 30034 00001A45 2D6F626A6563742028-
 30034 00001A4E 525454492030782530-
 30034 00001A57 32582920           
 30035 00001A5B 617420616464726573-     	db `at address 0x%08X\n\n\0`
 30035 00001A64 73203078253038580A-
 30035 00001A6D 0A00               
 30036                                  fmt_dquote:
 30037 00001A6F 2200                    	db `\"\0`
 30038                                  fmt_string_char:
 30039 00001A71 256300                          db `%c\0`
 30040                                  fmt_string_char_7:
 30041 00001A74 5C6100                          db `\\a\0`
 30042                                  fmt_string_char_8:
 30043 00001A77 5C6200                          db `\\b\0`
 30044                                  fmt_string_char_9:
 30045 00001A7A 5C7400                          db `\\t\0`
 30046                                  fmt_string_char_10:
 30047 00001A7D 5C6E00                          db `\\n\0`
 30048                                  fmt_string_char_11:
 30049 00001A80 5C7600                          db `\\v\0`
 30050                                  fmt_string_char_12:
 30051 00001A83 5C6600                          db `\\f\0`
 30052                                  fmt_string_char_13:
 30053 00001A86 5C7200                          db `\\r\0`
 30054                                  fmt_string_char_34:
 30055 00001A89 5C2200                          db `\\"\0`
 30056                                  fmt_string_char_92:
 30057 00001A8C 5C5C00                          db `\\\\\0`
 30058                                  fmt_string_char_hex:
 30059 00001A8F 5C7825583B00                    db `\\x%X;\0`
 30060                                  
 30061                                  section .text
 30062                                  
 30063                                  print_sexpr:
 30064 00016D52 C8000000                	enter 0, 0
 30065 00016D56 8A07                    	mov al, byte [rdi]
 30066 00016D58 3C00                    	cmp al, T_void
 30067 00016D5A 7465                    	je .Lvoid
 30068 00016D5C 3C01                    	cmp al, T_nil
 30069 00016D5E 7470                    	je .Lnil
 30070 00016D60 3C09                    	cmp al, T_boolean_false
 30071 00016D62 747B                    	je .Lboolean_false
 30072 00016D64 3C0A                    	cmp al, T_boolean_true
 30073 00016D66 0F8482000000            	je .Lboolean_true
 30074 00016D6C 3C02                    	cmp al, T_char
 30075 00016D6E 0F8489000000            	je .Lchar
 30076 00016D74 3C41                    	cmp al, T_interned_symbol
 30077 00016D76 0F84CB010000            	je .Linterned_symbol
 30078 00016D7C 3C42                            cmp al, T_uninterned_symbol
 30079 00016D7E 0F84EF010000                    je .Luninterned_symbol
 30080 00016D84 3C21                    	cmp al, T_pair
 30081 00016D86 0F84FA010000            	je .Lpair
 30082 00016D8C 3C22                    	cmp al, T_vector
 30083 00016D8E 0F84C3020000            	je .Lvector
 30084 00016D94 3C04                    	cmp al, T_closure
 30085 00016D96 0F8491010000            	je .Lclosure
 30086 00016D9C 3C13                    	cmp al, T_real
 30087 00016D9E 0F8454030000            	je .Lreal
 30088 00016DA4 3C12                    	cmp al, T_fraction
 30089 00016DA6 0F847A030000            	je .Lfraction
 30090 00016DAC 3C11                    	cmp al, T_integer
 30091 00016DAE 0F84B3030000            	je .Linteger
 30092 00016DB4 3C03                    	cmp al, T_string
 30093 00016DB6 0F84BE030000            	je .Lstring
 30094                                  
 30095 00016DBC E9F6040000              	jmp .Lunknown_sexpr_type
 30096                                  
 30097                                  .Lvoid:
 30098 00016DC1 48BF-                   	mov rdi, fmt_void
 30098 00016DC3 [6A19000000000000] 
 30099 00016DCB E91A050000              	jmp .Lemit
 30100                                  
 30101                                  .Lnil:
 30102 00016DD0 48BF-                   	mov rdi, fmt_nil
 30102 00016DD2 [7219000000000000] 
 30103 00016DDA E90B050000              	jmp .Lemit
 30104                                  
 30105                                  .Lboolean_false:
 30106 00016DDF 48BF-                   	mov rdi, fmt_boolean_false
 30106 00016DE1 [7519000000000000] 
 30107 00016DE9 E9FC040000              	jmp .Lemit
 30108                                  
 30109                                  .Lboolean_true:
 30110 00016DEE 48BF-                   	mov rdi, fmt_boolean_true
 30110 00016DF0 [7819000000000000] 
 30111 00016DF8 E9ED040000              	jmp .Lemit
 30112                                  
 30113                                  .Lchar:
 30114 00016DFD 8A4701                  	mov al, byte [rdi + 1]
 30115 00016E00 3C20                    	cmp al, ' '
 30116 00016E02 7E28                    	jle .Lchar_whitespace
 30117 00016E04 3C5C                    	cmp al, 92 		; backslash
 30118 00016E06 0F847C000000            	je .Lchar_backslash
 30119 00016E0C 3C22                    	cmp al, '"'
 30120 00016E0E 0F8483000000            	je .Lchar_dquote
 30121 00016E14 4825FF000000            	and rax, 255
 30122 00016E1A 48BF-                   	mov rdi, fmt_char_simple
 30122 00016E1C [8319000000000000] 
 30123 00016E24 4889C6                  	mov rsi, rax
 30124 00016E27 E9BE040000              	jmp .Lemit
 30125                                  
 30126                                  .Lchar_whitespace:
 30127 00016E2C 3C00                    	cmp al, 0
 30128 00016E2E 7476                    	je .Lchar_null
 30129 00016E30 3C07                    	cmp al, 7
 30130 00016E32 0F847D000000            	je .Lchar_bell
 30131 00016E38 3C08                    	cmp al, 8
 30132 00016E3A 0F8484000000            	je .Lchar_backspace
 30133 00016E40 3C09                    	cmp al, 9
 30134 00016E42 0F848B000000            	je .Lchar_tab
 30135 00016E48 3C0A                    	cmp al, 10
 30136 00016E4A 0F8492000000            	je .Lchar_newline
 30137 00016E50 3C0C                    	cmp al, 12
 30138 00016E52 0F8499000000            	je .Lchar_formfeed
 30139 00016E58 3C0D                    	cmp al, 13
 30140 00016E5A 0F84A0000000            	je .Lchar_return
 30141 00016E60 3C1B                    	cmp al, 27
 30142 00016E62 0F84A7000000            	je .Lchar_escape
 30143 00016E68 4825FF000000            	and rax, 255
 30144 00016E6E 3C20                    	cmp al, ' '
 30145 00016E70 0F84A8000000            	je .Lchar_space
 30146 00016E76 48BF-                   	mov rdi, fmt_char_hex
 30146 00016E78 [CF19000000000000] 
 30147 00016E80 4889C6                  	mov rsi, rax
 30148 00016E83 E962040000              	jmp .Lemit	
 30149                                  
 30150                                  .Lchar_backslash:
 30151 00016E88 48BF-                   	mov rdi, fmt_char_backslash
 30151 00016E8A [7B19000000000000] 
 30152 00016E92 E953040000              	jmp .Lemit
 30153                                  
 30154                                  .Lchar_dquote:
 30155 00016E97 48BF-                   	mov rdi, fmt_char_dquote
 30155 00016E99 [7F19000000000000] 
 30156 00016EA1 E944040000              	jmp .Lemit
 30157                                  
 30158                                  .Lchar_null:
 30159 00016EA6 48BF-                   	mov rdi, fmt_char_null
 30159 00016EA8 [8819000000000000] 
 30160 00016EB0 E935040000              	jmp .Lemit
 30161                                  
 30162                                  .Lchar_bell:
 30163 00016EB5 48BF-                   	mov rdi, fmt_char_bell
 30163 00016EB7 [8E19000000000000] 
 30164 00016EBF E926040000              	jmp .Lemit
 30165                                  
 30166                                  .Lchar_backspace:
 30167 00016EC4 48BF-                   	mov rdi, fmt_char_backspace
 30167 00016EC6 [9519000000000000] 
 30168 00016ECE E917040000              	jmp .Lemit
 30169                                  
 30170                                  .Lchar_tab:
 30171 00016ED3 48BF-                   	mov rdi, fmt_char_tab
 30171 00016ED5 [A119000000000000] 
 30172 00016EDD E908040000              	jmp .Lemit
 30173                                  
 30174                                  .Lchar_newline:
 30175 00016EE2 48BF-                   	mov rdi, fmt_char_newline
 30175 00016EE4 [A719000000000000] 
 30176 00016EEC E9F9030000              	jmp .Lemit
 30177                                  
 30178                                  .Lchar_formfeed:
 30179 00016EF1 48BF-                   	mov rdi, fmt_char_formfeed
 30179 00016EF3 [B119000000000000] 
 30180 00016EFB E9EA030000              	jmp .Lemit
 30181                                  
 30182                                  .Lchar_return:
 30183 00016F00 48BF-                   	mov rdi, fmt_char_return
 30183 00016F02 [B819000000000000] 
 30184 00016F0A E9DB030000              	jmp .Lemit
 30185                                  
 30186                                  .Lchar_escape:
 30187 00016F0F 48BF-                   	mov rdi, fmt_char_escape
 30187 00016F11 [C119000000000000] 
 30188 00016F19 E9CC030000              	jmp .Lemit
 30189                                  
 30190                                  .Lchar_space:
 30191 00016F1E 48BF-                   	mov rdi, fmt_char_space
 30191 00016F20 [C719000000000000] 
 30192 00016F28 E9BD030000              	jmp .Lemit
 30193                                  
 30194                                  .Lclosure:
 30195 00016F2D 4889FE                  	mov rsi, qword rdi
 30196 00016F30 48BF-                   	mov rdi, fmt_closure
 30196 00016F32 [DC19000000000000] 
 30197 00016F3A 488B5601                	mov rdx, SOB_CLOSURE_ENV(rsi)
 30198 00016F3E 488B4E09                	mov rcx, SOB_CLOSURE_CODE(rsi)
 30199 00016F42 E9A3030000              	jmp .Lemit
 30200                                  
 30201                                  .Linterned_symbol:
 30202 00016F47 488B7F01                	mov rdi, qword [rdi + 1] ; sob_string
 30203 00016F4B BE01000000              	mov rsi, 1		 ; size = 1 byte
 30204 00016F50 488B5701                	mov rdx, qword [rdi + 1] ; length
 30205 00016F54 488D7F09                	lea rdi, [rdi + 1 + 8]	 ; actual characters
 30206 00016F58 488B0C25[00000000]      	mov rcx, qword [stdout]	 ; FILE *
 30207                                  	ENTER
    44 00016F60 C8000000            <1>  enter 0, 0
    45 00016F64 4883E4F0            <1>  and rsp, ~15
 30208 00016F68 E8(00000000)            	call fwrite
 30209                                  	LEAVE
    49 00016F6D C9                  <1>  leave
 30210 00016F6E E98C030000              	jmp .Lend
 30211                                  
 30212                                  .Luninterned_symbol:
 30213 00016F73 488B7701                        mov rsi, qword [rdi + 1] ; gensym counter
 30214 00016F77 48BF-                           mov rdi, fmt_gensym
 30214 00016F79 [D719000000000000] 
 30215 00016F81 E964030000                      jmp .Lemit
 30216                                  	
 30217                                  .Lpair:
 30218 00016F86 57                      	push rdi
 30219 00016F87 48BF-                   	mov rdi, fmt_lparen
 30219 00016F89 [081A000000000000] 
 30220 00016F91 B800000000              	mov rax, 0
 30221                                          ENTER
    44 00016F96 C8000000            <1>  enter 0, 0
    45 00016F9A 4883E4F0            <1>  and rsp, ~15
 30222 00016F9E E8(00000000)            	call printf
 30223                                          LEAVE
    49 00016FA3 C9                  <1>  leave
 30224 00016FA4 488B3C24                	mov rdi, qword [rsp] 	; pair
 30225 00016FA8 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 30226 00016FAC E8A1FDFFFF              	call print_sexpr
 30227 00016FB1 5F                      	pop rdi 		; pair
 30228 00016FB2 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 30229                                  .Lcdr:
 30230 00016FB6 8A07                    	mov al, byte [rdi]
 30231 00016FB8 3C01                    	cmp al, T_nil
 30232 00016FBA 7447                    	je .Lcdr_nil
 30233 00016FBC 3C21                    	cmp al, T_pair
 30234 00016FBE 7462                    	je .Lcdr_pair
 30235 00016FC0 57                      	push rdi
 30236 00016FC1 48BF-                   	mov rdi, fmt_dotted_pair
 30236 00016FC3 [0A1A000000000000] 
 30237 00016FCB B800000000              	mov rax, 0
 30238                                          ENTER
    44 00016FD0 C8000000            <1>  enter 0, 0
    45 00016FD4 4883E4F0            <1>  and rsp, ~15
 30239 00016FD8 E8(00000000)            	call printf
 30240                                          LEAVE
    49 00016FDD C9                  <1>  leave
 30241 00016FDE 5F                      	pop rdi
 30242 00016FDF E86EFDFFFF              	call print_sexpr
 30243 00016FE4 48BF-                   	mov rdi, fmt_rparen
 30243 00016FE6 [0E1A000000000000] 
 30244 00016FEE B800000000              	mov rax, 0
 30245                                          ENTER
    44 00016FF3 C8000000            <1>  enter 0, 0
    45 00016FF7 4883E4F0            <1>  and rsp, ~15
 30246 00016FFB E8(00000000)            	call printf
 30247                                          LEAVE
    49 00017000 C9                  <1>  leave
 30248 00017001 C9                      	leave
 30249 00017002 C3                      	ret
 30250                                  
 30251                                  .Lcdr_nil:
 30252 00017003 48BF-                   	mov rdi, fmt_rparen
 30252 00017005 [0E1A000000000000] 
 30253 0001700D B800000000              	mov rax, 0
 30254                                          ENTER
    44 00017012 C8000000            <1>  enter 0, 0
    45 00017016 4883E4F0            <1>  and rsp, ~15
 30255 0001701A E8(00000000)            	call printf
 30256                                          LEAVE
    49 0001701F C9                  <1>  leave
 30257 00017020 C9                      	leave
 30258 00017021 C3                      	ret
 30259                                  
 30260                                  .Lcdr_pair:
 30261 00017022 57                      	push rdi
 30262 00017023 48BF-                   	mov rdi, fmt_space
 30262 00017025 [101A000000000000] 
 30263 0001702D B800000000              	mov rax, 0
 30264                                          ENTER
    44 00017032 C8000000            <1>  enter 0, 0
    45 00017036 4883E4F0            <1>  and rsp, ~15
 30265 0001703A E8(00000000)            	call printf
 30266                                          LEAVE
    49 0001703F C9                  <1>  leave
 30267 00017040 488B3C24                	mov rdi, qword [rsp]
 30268 00017044 488B7F01                	mov rdi, SOB_PAIR_CAR(rdi)
 30269 00017048 E805FDFFFF              	call print_sexpr
 30270 0001704D 5F                      	pop rdi
 30271 0001704E 488B7F09                	mov rdi, SOB_PAIR_CDR(rdi)
 30272 00017052 E95FFFFFFF              	jmp .Lcdr
 30273                                  
 30274                                  .Lvector:
 30275 00017057 488B4701                	mov rax, qword [rdi + 1] ; length
 30276 0001705B 4883F800                	cmp rax, 0
 30277 0001705F 0F8484000000            	je .Lvector_empty
 30278 00017065 57                      	push rdi
 30279 00017066 48BF-                   	mov rdi, fmt_vector
 30279 00017068 [161A000000000000] 
 30280 00017070 B800000000              	mov rax, 0
 30281                                          ENTER
    44 00017075 C8000000            <1>  enter 0, 0
    45 00017079 4883E4F0            <1>  and rsp, ~15
 30282 0001707D E8(00000000)            	call printf
 30283                                          LEAVE
    49 00017082 C9                  <1>  leave
 30284 00017083 488B3C24                	mov rdi, qword [rsp]
 30285 00017087 FF7701                  	push qword [rdi + 1]
 30286 0001708A 6A01                    	push 1
 30287 0001708C 488B7F09                	mov rdi, qword [rdi + 1 + 8] ; v[0]
 30288 00017090 E8BDFCFFFF              	call print_sexpr
 30289                                  .Lvector_loop:
 30290                                  	; [rsp] index
 30291                                  	; [rsp + 8*1] limit
 30292                                  	; [rsp + 8*2] vector
 30293 00017095 488B0424                	mov rax, qword [rsp]
 30294 00017099 483B442408              	cmp rax, qword [rsp + 8*1]
 30295 0001709E 7436                    	je .Lvector_end
 30296 000170A0 48BF-                   	mov rdi, fmt_space
 30296 000170A2 [101A000000000000] 
 30297 000170AA B800000000              	mov rax, 0
 30298                                          ENTER
    44 000170AF C8000000            <1>  enter 0, 0
    45 000170B3 4883E4F0            <1>  and rsp, ~15
 30299 000170B7 E8(00000000)            	call printf
 30300                                          LEAVE
    49 000170BC C9                  <1>  leave
 30301 000170BD 488B0424                	mov rax, qword [rsp]
 30302 000170C1 488B5C2410              	mov rbx, qword [rsp + 8*2]
 30303 000170C6 488B7CC309              	mov rdi, qword [rbx + 1 + 8 + 8 * rax] ; v[i]
 30304 000170CB E882FCFFFF              	call print_sexpr
 30305 000170D0 48FF0424                	inc qword [rsp]
 30306 000170D4 EBBF                    	jmp .Lvector_loop
 30307                                  
 30308                                  .Lvector_end:
 30309 000170D6 4883C418                	add rsp, 8*3
 30310 000170DA 48BF-                   	mov rdi, fmt_rparen
 30310 000170DC [0E1A000000000000] 
 30311 000170E4 E901020000              	jmp .Lemit	
 30312                                  
 30313                                  .Lvector_empty:
 30314 000170E9 48BF-                   	mov rdi, fmt_empty_vector
 30314 000170EB [121A000000000000] 
 30315 000170F3 E9F2010000              	jmp .Lemit
 30316                                  
 30317                                  .Lreal:
 30318 000170F8 FF7701                  	push qword [rdi + 1]
 30319 000170FB F20F100424              	movsd xmm0, qword [rsp]
 30320 00017100 4883C408                	add rsp, 8*1
 30321 00017104 48BF-                   	mov rdi, fmt_real
 30321 00017106 [191A000000000000] 
 30322 0001710E B801000000              	mov rax, 1
 30323                                  	ENTER
    44 00017113 C8000000            <1>  enter 0, 0
    45 00017117 4883E4F0            <1>  and rsp, ~15
 30324 0001711B E8(00000000)            	call printf
 30325                                  	LEAVE
    49 00017120 C9                  <1>  leave
 30326 00017121 E9D9010000              	jmp .Lend
 30327                                  
 30328                                  .Lfraction:
 30329 00017126 488B7701                	mov rsi, qword [rdi + 1]
 30330 0001712A 488B5709                	mov rdx, qword [rdi + 1 + 8]
 30331 0001712E 4883FE00                	cmp rsi, 0
 30332 00017132 7415                    	je .Lrat_zero
 30333 00017134 4883FA01                	cmp rdx, 1
 30334 00017138 741E                    	je .Lrat_int
 30335 0001713A 48BF-                   	mov rdi, fmt_fraction
 30335 0001713C [1C1A000000000000] 
 30336 00017144 E9A1010000              	jmp .Lemit
 30337                                  
 30338                                  .Lrat_zero:
 30339 00017149 48BF-                   	mov rdi, fmt_zero
 30339 0001714B [241A000000000000] 
 30340 00017153 E992010000              	jmp .Lemit
 30341                                  
 30342                                  .Lrat_int:
 30343 00017158 48BF-                   	mov rdi, fmt_int
 30343 0001715A [261A000000000000] 
 30344 00017162 E983010000              	jmp .Lemit
 30345                                  
 30346                                  .Linteger:
 30347 00017167 488B7701                	mov rsi, qword [rdi + 1]
 30348 0001716B 48BF-                   	mov rdi, fmt_int
 30348 0001716D [261A000000000000] 
 30349 00017175 E970010000              	jmp .Lemit
 30350                                  
 30351                                  .Lstring:
 30352 0001717A 488D4709                	lea rax, [rdi + 1 + 8]
 30353 0001717E 50                      	push rax
 30354 0001717F FF7701                  	push qword [rdi + 1]
 30355 00017182 48BF-                   	mov rdi, fmt_dquote
 30355 00017184 [6F1A000000000000] 
 30356 0001718C B800000000              	mov rax, 0
 30357                                  	ENTER
    44 00017191 C8000000            <1>  enter 0, 0
    45 00017195 4883E4F0            <1>  and rsp, ~15
 30358 00017199 E8(00000000)            	call printf
 30359                                  	LEAVE
    49 0001719E C9                  <1>  leave
 30360                                  .Lstring_loop:
 30361                                  	; qword [rsp]: limit
 30362                                  	; qword [rsp + 8*1]: char *
 30363 0001719F 48833C2400              	cmp qword [rsp], 0
 30364 000171A4 0F84FD000000            	je .Lstring_end
 30365 000171AA 488B442408              	mov rax, qword [rsp + 8*1]
 30366 000171AF 8A00                    	mov al, byte [rax]
 30367 000171B1 4825FF000000            	and rax, 255
 30368 000171B7 3C07                    	cmp al, 7
 30369 000171B9 7468                            je .Lstring_char_7
 30370 000171BB 3C08                            cmp al, 8
 30371 000171BD 7470                            je .Lstring_char_8
 30372 000171BF 3C09                            cmp al, 9
 30373 000171C1 7478                            je .Lstring_char_9
 30374 000171C3 3C0A                            cmp al, 10
 30375 000171C5 0F847C000000                    je .Lstring_char_10
 30376 000171CB 3C0B                            cmp al, 11
 30377 000171CD 0F8480000000                    je .Lstring_char_11
 30378 000171D3 3C0C                            cmp al, 12
 30379 000171D5 0F8484000000                    je .Lstring_char_12
 30380 000171DB 3C0D                            cmp al, 13
 30381 000171DD 0F8488000000                    je .Lstring_char_13
 30382 000171E3 3C22                            cmp al, 34
 30383 000171E5 0F848C000000                    je .Lstring_char_34
 30384 000171EB 3C5C                            cmp al, 92              ;         je .Lstring_char_92
 30386 000171ED 3C20                            cmp al, ' '
 30387 000171EF 0F8CA0000000                    jl .Lstring_char_hex
 30388 000171F5 48BF-                           mov rdi, fmt_string_char
 30388 000171F7 [711A000000000000] 
 30389 000171FF 4889C6                          mov rsi, rax
 30390                                  .Lstring_char_emit:
 30391 00017202 B800000000                      mov rax, 0
 30392                                          ENTER
    44 00017207 C8000000            <1>  enter 0, 0
    45 0001720B 4883E4F0            <1>  and rsp, ~15
 30393 0001720F E8(00000000)                    call printf
 30394                                          LEAVE
    49 00017214 C9                  <1>  leave
 30395 00017215 48FF0C24                        dec qword [rsp]
 30396 00017219 48FF442408                      inc qword [rsp + 8*1]
 30397 0001721E E97CFFFFFF                      jmp .Lstring_loop
 30398                                  
 30399                                  .Lstring_char_7:
 30400 00017223 48BF-                           mov rdi, fmt_string_char_7
 30400 00017225 [741A000000000000] 
 30401 0001722D EBD3                            jmp .Lstring_char_emit
 30402                                  
 30403                                  .Lstring_char_8:
 30404 0001722F 48BF-                           mov rdi, fmt_string_char_8
 30404 00017231 [771A000000000000] 
 30405 00017239 EBC7                            jmp .Lstring_char_emit
 30406                                          
 30407                                  .Lstring_char_9:
 30408 0001723B 48BF-                           mov rdi, fmt_string_char_9
 30408 0001723D [7A1A000000000000] 
 30409 00017245 EBBB                            jmp .Lstring_char_emit
 30410                                  
 30411                                  .Lstring_char_10:
 30412 00017247 48BF-                           mov rdi, fmt_string_char_10
 30412 00017249 [7D1A000000000000] 
 30413 00017251 EBAF                            jmp .Lstring_char_emit
 30414                                  
 30415                                  .Lstring_char_11:
 30416 00017253 48BF-                           mov rdi, fmt_string_char_11
 30416 00017255 [801A000000000000] 
 30417 0001725D EBA3                            jmp .Lstring_char_emit
 30418                                  
 30419                                  .Lstring_char_12:
 30420 0001725F 48BF-                           mov rdi, fmt_string_char_12
 30420 00017261 [831A000000000000] 
 30421 00017269 EB97                            jmp .Lstring_char_emit
 30422                                  
 30423                                  .Lstring_char_13:
 30424 0001726B 48BF-                           mov rdi, fmt_string_char_13
 30424 0001726D [861A000000000000] 
 30425 00017275 EB8B                            jmp .Lstring_char_emit
 30426                                  
 30427                                  .Lstring_char_34:
 30428 00017277 48BF-                           mov rdi, fmt_string_char_34
 30428 00017279 [891A000000000000] 
 30429 00017281 E97CFFFFFF                      jmp .Lstring_char_emit
 30430                                  
 30431                                  .Lstring_char_92:
 30432 00017286 48BF-                           mov rdi, fmt_string_char_92
 30432 00017288 [8C1A000000000000] 
 30433 00017290 E96DFFFFFF                      jmp .Lstring_char_emit
 30434                                  
 30435                                  .Lstring_char_hex:
 30436 00017295 48BF-                           mov rdi, fmt_string_char_hex
 30436 00017297 [8F1A000000000000] 
 30437 0001729F 4889C6                          mov rsi, rax
 30438 000172A2 E95BFFFFFF                      jmp .Lstring_char_emit        
 30439                                  
 30440                                  .Lstring_end:
 30441 000172A7 4883C410                	add rsp, 8 * 2
 30442 000172AB 48BF-                   	mov rdi, fmt_dquote
 30442 000172AD [6F1A000000000000] 
 30443 000172B5 EB33                    	jmp .Lemit
 30444                                  
 30445                                  .Lunknown_sexpr_type:
 30446 000172B7 48BE-                   	mov rsi, fmt_unknown_scheme_object_error
 30446 000172B9 [2A1A000000000000] 
 30447 000172C1 4825FF000000            	and rax, 255
 30448 000172C7 4889C2                  	mov rdx, rax
 30449 000172CA 4889F9                  	mov rcx, rdi
 30450 000172CD 488B3C25[00000000]      	mov rdi, qword [stderr]
 30451 000172D5 B800000000              	mov rax, 0
 30452                                          ENTER
    44 000172DA C8000000            <1>  enter 0, 0
    45 000172DE 4883E4F0            <1>  and rsp, ~15
 30453 000172E2 E8(00000000)            	call fprintf
 30454                                          LEAVE
    49 000172E7 C9                  <1>  leave
 30455 000172E8 C9                              leave
 30456 000172E9 C3                              ret
 30457                                  
 30458                                  .Lemit:
 30459 000172EA B800000000              	mov rax, 0
 30460                                          ENTER
    44 000172EF C8000000            <1>  enter 0, 0
    45 000172F3 4883E4F0            <1>  and rsp, ~15
 30461 000172F7 E8(00000000)            	call printf
 30462                                          LEAVE
    49 000172FC C9                  <1>  leave
 30463 000172FD EB00                    	jmp .Lend
 30464                                  
 30465                                  .Lend:
 30466                                  	LEAVE
    49 000172FF C9                  <1>  leave
 30467 00017300 C3                      	ret
 30468                                  
 30469                                  ;;; rdi: address of free variable
 30470                                  ;;; rsi: address of code-pointer
 30471                                  bind_primitive:
 30472 00017301 C8000000                        enter 0, 0
 30473 00017305 57                              push rdi
 30474 00017306 BF11000000                      mov rdi, (1 + 8 + 8)
 30475 0001730B E8C1F7FFFF                      call malloc
 30476 00017310 5F                              pop rdi
 30477 00017311 C60004                          mov byte [rax], T_closure
 30478 00017314 48C7400100000000                mov SOB_CLOSURE_ENV(rax), 0 ; dummy, lexical environment
 30479 0001731C 48897009                        mov SOB_CLOSURE_CODE(rax), rsi ; code pointer
 30480 00017320 488907                          mov qword [rdi], rax
 30481 00017323 48B8-                           mov rax, sob_void
 30481 00017325 [0000000000000000] 
 30482 0001732D C9                              leave
 30483 0001732E C3                              ret
 30484                                  
 30485                                  L_code_ptr_ash:
 30486 0001732F C8000000                        enter 0, 0
 30487 00017333 48837D1802                      cmp COUNT, 2
 30488 00017338 0F85CF140000                    jne L_error_arg_count_2
 30489 0001733E 488B7D20                        mov rdi, PARAM(0)
 30490                                          assert_integer(rdi)
    53 00017342 803F11              <1>  cmp byte [%1], %2
    54 00017345 0F8561150000        <1>  jne L_error_incorrect_type
 30491 0001734B 488B4D28                        mov rcx, PARAM(1)
 30492                                          assert_integer(rcx)
    53 0001734F 803911              <1>  cmp byte [%1], %2
    54 00017352 0F8554150000        <1>  jne L_error_incorrect_type
 30493 00017358 488B7F01                        mov rdi, qword [rdi + 1]
 30494 0001735C 488B4901                        mov rcx, qword [rcx + 1]
 30495 00017360 4883F900                        cmp rcx, 0
 30496 00017364 7C0F                            jl .L_negative
 30497                                  .L_loop_positive:
 30498 00017366 4883F900                        cmp rcx, 0
 30499 0001736A 741B                            je .L_exit
 30500 0001736C 48D3E7                          sal rdi, cl
 30501 0001736F 48C1E908                        shr rcx, 8
 30502 00017373 EBF1                            jmp .L_loop_positive
 30503                                  .L_negative:
 30504 00017375 48F7D9                          neg rcx
 30505                                  .L_loop_negative:
 30506 00017378 4883F900                        cmp rcx, 0
 30507 0001737C 7409                            je .L_exit
 30508 0001737E 48D3FF                          sar rdi, cl
 30509 00017381 48C1E908                        shr rcx, 8
 30510 00017385 EBF1                            jmp .L_loop_negative
 30511                                  .L_exit:
 30512 00017387 E89B130000                      call make_integer
 30513 0001738C C9                              leave
 30514 0001738D C22000                          ret AND_KILL_FRAME(2)
 30515                                  
 30516                                  L_code_ptr_logand:
 30517 00017390 C8000000                        enter 0, 0
 30518 00017394 48837D1802                      cmp COUNT, 2
 30519 00017399 0F856E140000                    jne L_error_arg_count_2
 30520 0001739F 4C8B4520                        mov r8, PARAM(0)
 30521                                          assert_integer(r8)
    53 000173A3 41803811            <1>  cmp byte [%1], %2
    54 000173A7 0F85FF140000        <1>  jne L_error_incorrect_type
 30522 000173AD 4C8B4D28                        mov r9, PARAM(1)
 30523                                          assert_integer(r9)
    53 000173B1 41803911            <1>  cmp byte [%1], %2
    54 000173B5 0F85F1140000        <1>  jne L_error_incorrect_type
 30524 000173BB 498B7801                        mov rdi, qword [r8 + 1]
 30525 000173BF 49237901                        and rdi, qword [r9 + 1]
 30526 000173C3 E85F130000                      call make_integer
 30527 000173C8 C9                              leave
 30528 000173C9 C22000                          ret AND_KILL_FRAME(2)
 30529                                  
 30530                                  L_code_ptr_logor:
 30531 000173CC C8000000                        enter 0, 0
 30532 000173D0 48837D1802                      cmp COUNT, 2
 30533 000173D5 0F8532140000                    jne L_error_arg_count_2
 30534 000173DB 4C8B4520                        mov r8, PARAM(0)
 30535                                          assert_integer(r8)
    53 000173DF 41803811            <1>  cmp byte [%1], %2
    54 000173E3 0F85C3140000        <1>  jne L_error_incorrect_type
 30536 000173E9 4C8B4D28                        mov r9, PARAM(1)
 30537                                          assert_integer(r9)
    53 000173ED 41803911            <1>  cmp byte [%1], %2
    54 000173F1 0F85B5140000        <1>  jne L_error_incorrect_type
 30538 000173F7 498B7801                        mov rdi, qword [r8 + 1]
 30539 000173FB 490B7901                        or rdi, qword [r9 + 1]
 30540 000173FF E823130000                      call make_integer
 30541 00017404 C9                              leave
 30542 00017405 C22000                          ret AND_KILL_FRAME(2)
 30543                                  
 30544                                  L_code_ptr_logxor:
 30545 00017408 C8000000                        enter 0, 0
 30546 0001740C 48837D1802                      cmp COUNT, 2
 30547 00017411 0F85F6130000                    jne L_error_arg_count_2
 30548 00017417 4C8B4520                        mov r8, PARAM(0)
 30549                                          assert_integer(r8)
    53 0001741B 41803811            <1>  cmp byte [%1], %2
    54 0001741F 0F8587140000        <1>  jne L_error_incorrect_type
 30550 00017425 4C8B4D28                        mov r9, PARAM(1)
 30551                                          assert_integer(r9)
    53 00017429 41803911            <1>  cmp byte [%1], %2
    54 0001742D 0F8579140000        <1>  jne L_error_incorrect_type
 30552 00017433 498B7801                        mov rdi, qword [r8 + 1]
 30553 00017437 49337901                        xor rdi, qword [r9 + 1]
 30554 0001743B E8E7120000                      call make_integer
 30555                                          LEAVE
    49 00017440 C9                  <1>  leave
 30556 00017441 C22000                          ret AND_KILL_FRAME(2)
 30557                                  
 30558                                  L_code_ptr_lognot:
 30559 00017444 C8000000                        enter 0, 0
 30560 00017448 48837D1801                      cmp COUNT, 1
 30561 0001744D 0F8585130000                    jne L_error_arg_count_1
 30562 00017453 4C8B4520                        mov r8, PARAM(0)
 30563                                          assert_integer(r8)
    53 00017457 41803811            <1>  cmp byte [%1], %2
    54 0001745B 0F854B140000        <1>  jne L_error_incorrect_type
 30564 00017461 498B7801                        mov rdi, qword [r8 + 1]
 30565 00017465 48F7D7                          not rdi
 30566 00017468 E8BA120000                      call make_integer
 30567 0001746D C9                              leave
 30568 0001746E C21800                          ret AND_KILL_FRAME(1)
 30569                                  
 30570                                  
 30571                                  L_code_ptr_bin_apply:
 30572 00017471 C8000000                        enter 0, 0
 30573 00017475 48837D1802                      cmp COUNT, 2
 30574 0001747A 0F8CF7130000                    jl L_error_arg_count_3    ; Need at least 2 arguments
 30575                                          
 30576 00017480 4C8B4518                        mov r8, COUNT             ; Save original argument count
 30577 00017484 49FFC8                          dec r8                    ; Last argument is the list
 30578 00017487 4E8B4CC520                      mov r9, PARAM(r8)         ; Get the list (last argument)
 30579 0001748C 488B5D20                        mov rbx, PARAM(0)         ; Get the function (first argument)
 30580                                          ; Count elements in the list
 30581 00017490 41BA00000000                    mov r10, 0                ; List element counter
 30582 00017496 4D89CB                          mov r11, r9               ; List pointer for counting
 30583                                  
 30584                                          
 30585                                  .count_loop:
 30586 00017499 41803B01                        cmp byte [r11], T_nil
 30587 0001749D 7413                            je .prepare_stack
 30588                                          assert_pair(r11)
    53 0001749F 41803B21            <1>  cmp byte [%1], %2
    54 000174A3 0F8503140000        <1>  jne L_error_incorrect_type
 30589 000174A9 49FFC2                          inc r10                   ; Increment list element count
 30590 000174AC 4D8B5B09                        mov r11, SOB_PAIR_CDR(r11)
 30591 000174B0 EBE7                            jmp .count_loop
 30592                                  
 30593                                  .prepare_stack:
 30594                                          ; Calculate total arguments (direct args + list elements)
 30595 000174B2 41BB00000000                    mov r11, 0             ; Number of direct arguments
 30596 000174B8 4D01D3                          add r11, r10            ; Add list elements count
 30597                                          
 30598                                          ; Allocate new frame
 30599 000174BB 4C89D8                          mov rax, r11            ; Total argument count
 30600 000174BE 48C1E003                        shl rax, 3              ; Multiply by 8 for byte count
 30601 000174C2 4883C020                        add rax, 8*4            ; Add space for ret, env, old rbp, arg count
 30602 000174C6 4989C4                          mov r12, rax            ; Save frame size
 30603                                          
 30604 000174C9 4C29E4                          sub rsp, r12            ; Allocate frame
 30605                                          
 30606                                          ; Copy direct arguments (excluding the list)
 30607 000174CC 4C89C1                          mov rcx, r8              ; Number of direct arguments
 30608 000174CF 48FFC9                          dec rcx                  ; Exclude the list
 30609 000174D2 BA00000000                      mov rdx, 0              ; Destination offset
 30610                                  
 30611                                  .copy_list:
 30612                                          ; Copy list elements
 30613 000174D7 4D89CD                          mov r13, r9             ; List pointer
 30614                                  .copy_list_loop:
 30615 000174DA 41807D0001                      cmp byte [r13], T_nil
 30616 000174DF 7412                            je .finish_frame
 30617 000174E1 498B4501                        mov rax, SOB_PAIR_CAR(r13)    ; Get list element
 30618 000174E5 488944D420                      mov [rsp + 8*4 + rdx*8], rax  ; Store in frame
 30619 000174EA 48FFC2                          inc rdx
 30620 000174ED 4D8B6D09                        mov r13, SOB_PAIR_CDR(r13)
 30621 000174F1 EBE7                            jmp .copy_list_loop
 30622                                  
 30623                                  .finish_frame:
 30624                                          ; Set up frame
 30625 000174F3 4C89D8                          mov rax, r11            ; Total argument count
 30626 000174F6 4889442418                      mov [rsp + 8*3], rax    ; Store argument count
 30627 000174FB 488B4510                        mov rax, [rbp + 8*2]    ; Get current env
 30628 000174FF 4889442410                      mov [rsp + 8*2], rax    ; Store env
 30629 00017504 488B4508                        mov rax, [rbp + 8*1]    ; Get return address
 30630 00017508 4889442408                      mov [rsp + 8*1], rax    ; Store return address
 30631 0001750D 4889E8                          mov rax, rbp            ; Get old rbp
 30632 00017510 48890424                        mov [rsp], rax          ; Store old rbp
 30633                                          
 30634                                          ; Get the function
 30635 00017514 4889D8                          mov rax, rbx
 30636                                          assert_closure(rax)
    53 00017517 803804              <1>  cmp byte [%1], %2
    54 0001751A 0F858C130000        <1>  jne L_error_incorrect_type
 30637                                          
 30638                                          ; Set up for call
 30639 00017520 4889E5                          mov rbp, rsp            ; Set new frame pointer
 30640 00017523 4889EC                          mov rsp, rbp            ; Align stack pointer
 30641                                          
 30642                                          ; Call the function
 30643 00017526 FF7001                          push SOB_CLOSURE_ENV(rax)
 30644 00017529 FF5009                          call SOB_CLOSURE_CODE(rax)
 30645                                                  
 30646 0001752C C9                              leave
 30647 0001752D C22000                          ret AND_KILL_FRAME(2)
 30648                                          
 30649                                  L_code_ptr_is_null:
 30650 00017530 C8000000                        enter 0, 0
 30651 00017534 48837D1801                      cmp COUNT, 1
 30652 00017539 0F8599120000                    jne L_error_arg_count_1
 30653 0001753F 488B4520                        mov rax, PARAM(0)
 30654 00017543 803801                          cmp byte [rax], T_nil
 30655 00017546 750C                            jne .L_false
 30656 00017548 48B8-                           mov rax, sob_boolean_true
 30656 0001754A [0300000000000000] 
 30657 00017552 EB0A                            jmp .L_end
 30658                                  .L_false:
 30659 00017554 48B8-                           mov rax, sob_boolean_false
 30659 00017556 [0200000000000000] 
 30660                                  .L_end:
 30661 0001755E C9                              leave
 30662 0001755F C21800                          ret AND_KILL_FRAME(1)
 30663                                  
 30664                                  L_code_ptr_is_pair:
 30665 00017562 C8000000                        enter 0, 0
 30666 00017566 48837D1801                      cmp COUNT, 1
 30667 0001756B 0F8567120000                    jne L_error_arg_count_1
 30668 00017571 488B4520                        mov rax, PARAM(0)
 30669 00017575 803821                          cmp byte [rax], T_pair
 30670 00017578 750C                            jne .L_false
 30671 0001757A 48B8-                           mov rax, sob_boolean_true
 30671 0001757C [0300000000000000] 
 30672 00017584 EB0A                            jmp .L_end
 30673                                  .L_false:
 30674 00017586 48B8-                           mov rax, sob_boolean_false
 30674 00017588 [0200000000000000] 
 30675                                  .L_end:
 30676 00017590 C9                              leave
 30677 00017591 C21800                          ret AND_KILL_FRAME(1)
 30678                                          
 30679                                  L_code_ptr_is_void:
 30680 00017594 C8000000                        enter 0, 0
 30681 00017598 48837D1801                      cmp COUNT, 1
 30682 0001759D 0F8535120000                    jne L_error_arg_count_1
 30683 000175A3 488B4520                        mov rax, PARAM(0)
 30684 000175A7 803800                          cmp byte [rax], T_void
 30685 000175AA 750C                            jne .L_false
 30686 000175AC 48B8-                           mov rax, sob_boolean_true
 30686 000175AE [0300000000000000] 
 30687 000175B6 EB0A                            jmp .L_end
 30688                                  .L_false:
 30689 000175B8 48B8-                           mov rax, sob_boolean_false
 30689 000175BA [0200000000000000] 
 30690                                  .L_end:
 30691 000175C2 C9                              leave
 30692 000175C3 C21800                          ret AND_KILL_FRAME(1)
 30693                                  
 30694                                  L_code_ptr_is_char:
 30695 000175C6 C8000000                        enter 0, 0
 30696 000175CA 48837D1801                      cmp COUNT, 1
 30697 000175CF 0F8503120000                    jne L_error_arg_count_1
 30698 000175D5 488B4520                        mov rax, PARAM(0)
 30699 000175D9 803802                          cmp byte [rax], T_char
 30700 000175DC 750C                            jne .L_false
 30701 000175DE 48B8-                           mov rax, sob_boolean_true
 30701 000175E0 [0300000000000000] 
 30702 000175E8 EB0A                            jmp .L_end
 30703                                  .L_false:
 30704 000175EA 48B8-                           mov rax, sob_boolean_false
 30704 000175EC [0200000000000000] 
 30705                                  .L_end:
 30706 000175F4 C9                              leave
 30707 000175F5 C21800                          ret AND_KILL_FRAME(1)
 30708                                  
 30709                                  L_code_ptr_is_string:
 30710 000175F8 C8000000                        enter 0, 0
 30711 000175FC 48837D1801                      cmp COUNT, 1
 30712 00017601 0F85D1110000                    jne L_error_arg_count_1
 30713 00017607 488B4520                        mov rax, PARAM(0)
 30714 0001760B 803803                          cmp byte [rax], T_string
 30715 0001760E 750C                            jne .L_false
 30716 00017610 48B8-                           mov rax, sob_boolean_true
 30716 00017612 [0300000000000000] 
 30717 0001761A EB0A                            jmp .L_end
 30718                                  .L_false:
 30719 0001761C 48B8-                           mov rax, sob_boolean_false
 30719 0001761E [0200000000000000] 
 30720                                  .L_end:
 30721 00017626 C9                              leave
 30722 00017627 C21800                          ret AND_KILL_FRAME(1)
 30723                                  
 30724                                  L_code_ptr_is_symbol:
 30725 0001762A C8000000                        enter 0, 0
 30726 0001762E 48837D1801                      cmp COUNT, 1
 30727 00017633 0F859F110000                    jne L_error_arg_count_1
 30728 00017639 4C8B4520                        mov r8, PARAM(0)
 30729 0001763D 41802040                        and byte [r8], T_symbol
 30730 00017641 740C                            jz .L_false
 30731 00017643 48B8-                           mov rax, sob_boolean_true
 30731 00017645 [0300000000000000] 
 30732 0001764D EB0A                            jmp .L_exit
 30733                                  .L_false:
 30734 0001764F 48B8-                           mov rax, sob_boolean_false
 30734 00017651 [0200000000000000] 
 30735                                  .L_exit:
 30736 00017659 C9                              leave
 30737 0001765A C21800                          ret AND_KILL_FRAME(1)
 30738                                  
 30739                                  L_code_ptr_is_uninterned_symbol:
 30740 0001765D C8000000                        enter 0, 0
 30741 00017661 48837D1801                      cmp COUNT, 1
 30742 00017666 0F856C110000                    jne L_error_arg_count_1
 30743 0001766C 4C8B4520                        mov r8, PARAM(0)
 30744 00017670 41803842                        cmp byte [r8], T_uninterned_symbol
 30745 00017674 750C                            jne .L_false
 30746 00017676 48B8-                           mov rax, sob_boolean_true
 30746 00017678 [0300000000000000] 
 30747 00017680 EB0A                            jmp .L_exit
 30748                                  .L_false:
 30749 00017682 48B8-                           mov rax, sob_boolean_false
 30749 00017684 [0200000000000000] 
 30750                                  .L_exit:
 30751 0001768C C9                              leave
 30752 0001768D C21800                          ret AND_KILL_FRAME(1)
 30753                                  
 30754                                  L_code_ptr_is_interned_symbol:
 30755 00017690 C8000000                        enter 0, 0
 30756 00017694 48837D1801                      cmp COUNT, 1
 30757 00017699 0F8539110000                    jne L_error_arg_count_1
 30758 0001769F 488B4520                        mov rax, PARAM(0)
 30759 000176A3 803841                          cmp byte [rax], T_interned_symbol
 30760 000176A6 750C                            jne .L_false
 30761 000176A8 48B8-                           mov rax, sob_boolean_true
 30761 000176AA [0300000000000000] 
 30762 000176B2 EB0A                            jmp .L_end
 30763                                  .L_false:
 30764 000176B4 48B8-                           mov rax, sob_boolean_false
 30764 000176B6 [0200000000000000] 
 30765                                  .L_end:
 30766 000176BE C9                              leave
 30767 000176BF C21800                          ret AND_KILL_FRAME(1)
 30768                                  
 30769                                  L_code_ptr_gensym:
 30770 000176C2 C8000000                        enter 0, 0
 30771 000176C6 48837D1800                      cmp COUNT, 0
 30772 000176CB 0F85D2100000                    jne L_error_arg_count_0
 30773 000176D1 48FF0425[951A0000]              inc qword [gensym_count]
 30774 000176D9 BF09000000                      mov rdi, (1 + 8)
 30775 000176DE E8EEF3FFFF                      call malloc
 30776 000176E3 C60042                          mov byte [rax], T_uninterned_symbol
 30777 000176E6 488B0C25[951A0000]              mov rcx, qword [gensym_count]
 30778 000176EE 48894801                        mov qword [rax + 1], rcx
 30779 000176F2 C9                              leave
 30780 000176F3 C21000                          ret AND_KILL_FRAME(0)
 30781                                  
 30782                                  L_code_ptr_is_vector:
 30783 000176F6 C8000000                        enter 0, 0
 30784 000176FA 48837D1801                      cmp COUNT, 1
 30785 000176FF 0F85D3100000                    jne L_error_arg_count_1
 30786 00017705 488B4520                        mov rax, PARAM(0)
 30787 00017709 803822                          cmp byte [rax], T_vector
 30788 0001770C 750C                            jne .L_false
 30789 0001770E 48B8-                           mov rax, sob_boolean_true
 30789 00017710 [0300000000000000] 
 30790 00017718 EB0A                            jmp .L_end
 30791                                  .L_false:
 30792 0001771A 48B8-                           mov rax, sob_boolean_false
 30792 0001771C [0200000000000000] 
 30793                                  .L_end:
 30794 00017724 C9                              leave
 30795 00017725 C21800                          ret AND_KILL_FRAME(1)
 30796                                  
 30797                                  L_code_ptr_is_closure:
 30798 00017728 C8000000                        enter 0, 0
 30799 0001772C 48837D1801                      cmp COUNT, 1
 30800 00017731 0F85A1100000                    jne L_error_arg_count_1
 30801 00017737 488B4520                        mov rax, PARAM(0)
 30802 0001773B 803804                          cmp byte [rax], T_closure
 30803 0001773E 750C                            jne .L_false
 30804 00017740 48B8-                           mov rax, sob_boolean_true
 30804 00017742 [0300000000000000] 
 30805 0001774A EB0A                            jmp .L_end
 30806                                  .L_false:
 30807 0001774C 48B8-                           mov rax, sob_boolean_false
 30807 0001774E [0200000000000000] 
 30808                                  .L_end:
 30809 00017756 C9                              leave
 30810 00017757 C21800                          ret AND_KILL_FRAME(1)
 30811                                  
 30812                                  L_code_ptr_is_real:
 30813 0001775A C8000000                        enter 0, 0
 30814 0001775E 48837D1801                      cmp COUNT, 1
 30815 00017763 0F856F100000                    jne L_error_arg_count_1
 30816 00017769 488B4520                        mov rax, PARAM(0)
 30817 0001776D 803813                          cmp byte [rax], T_real
 30818 00017770 750C                            jne .L_false
 30819 00017772 48B8-                           mov rax, sob_boolean_true
 30819 00017774 [0300000000000000] 
 30820 0001777C EB0A                            jmp .L_end
 30821                                  .L_false:
 30822 0001777E 48B8-                           mov rax, sob_boolean_false
 30822 00017780 [0200000000000000] 
 30823                                  .L_end:
 30824 00017788 C9                              leave
 30825 00017789 C21800                          ret AND_KILL_FRAME(1)
 30826                                  
 30827                                  L_code_ptr_is_fraction:
 30828 0001778C C8000000                        enter 0, 0
 30829 00017790 48837D1801                      cmp COUNT, 1
 30830 00017795 0F853D100000                    jne L_error_arg_count_1
 30831 0001779B 488B4520                        mov rax, PARAM(0)
 30832 0001779F 803812                          cmp byte [rax], T_fraction
 30833 000177A2 750C                            jne .L_false
 30834 000177A4 48B8-                           mov rax, sob_boolean_true
 30834 000177A6 [0300000000000000] 
 30835 000177AE EB0A                            jmp .L_end
 30836                                  .L_false:
 30837 000177B0 48B8-                           mov rax, sob_boolean_false
 30837 000177B2 [0200000000000000] 
 30838                                  .L_end:
 30839 000177BA C9                              leave
 30840 000177BB C21800                          ret AND_KILL_FRAME(1)
 30841                                  
 30842                                  L_code_ptr_is_boolean:
 30843 000177BE C8000000                        enter 0, 0
 30844 000177C2 48837D1801                      cmp COUNT, 1
 30845 000177C7 0F850B100000                    jne L_error_arg_count_1
 30846 000177CD 488B4520                        mov rax, PARAM(0)
 30847 000177D1 8A18                            mov bl, byte [rax]
 30848 000177D3 80E308                          and bl, T_boolean
 30849 000177D6 740C                            je .L_false
 30850 000177D8 48B8-                           mov rax, sob_boolean_true
 30850 000177DA [0300000000000000] 
 30851 000177E2 EB0A                            jmp .L_end
 30852                                  .L_false:
 30853 000177E4 48B8-                           mov rax, sob_boolean_false
 30853 000177E6 [0200000000000000] 
 30854                                  .L_end:
 30855 000177EE C9                              leave
 30856 000177EF C21800                          ret AND_KILL_FRAME(1)
 30857                                          
 30858                                  L_code_ptr_is_boolean_false:
 30859 000177F2 C8000000                        enter 0, 0
 30860 000177F6 48837D1801                      cmp COUNT, 1
 30861 000177FB 0F85D70F0000                    jne L_error_arg_count_1
 30862 00017801 488B4520                        mov rax, PARAM(0)
 30863 00017805 8A18                            mov bl, byte [rax]
 30864 00017807 80FB09                          cmp bl, T_boolean_false
 30865 0001780A 750C                            jne .L_false
 30866 0001780C 48B8-                           mov rax, sob_boolean_true
 30866 0001780E [0300000000000000] 
 30867 00017816 EB0A                            jmp .L_end
 30868                                  .L_false:
 30869 00017818 48B8-                           mov rax, sob_boolean_false
 30869 0001781A [0200000000000000] 
 30870                                  .L_end:
 30871 00017822 C9                              leave
 30872 00017823 C21800                          ret AND_KILL_FRAME(1)
 30873                                  
 30874                                  L_code_ptr_is_boolean_true:
 30875 00017826 C8000000                        enter 0, 0
 30876 0001782A 48837D1801                      cmp COUNT, 1
 30877 0001782F 0F85A30F0000                    jne L_error_arg_count_1
 30878 00017835 488B4520                        mov rax, PARAM(0)
 30879 00017839 8A18                            mov bl, byte [rax]
 30880 0001783B 80FB0A                          cmp bl, T_boolean_true
 30881 0001783E 750C                            jne .L_false
 30882 00017840 48B8-                           mov rax, sob_boolean_true
 30882 00017842 [0300000000000000] 
 30883 0001784A EB0A                            jmp .L_end
 30884                                  .L_false:
 30885 0001784C 48B8-                           mov rax, sob_boolean_false
 30885 0001784E [0200000000000000] 
 30886                                  .L_end:
 30887 00017856 C9                              leave
 30888 00017857 C21800                          ret AND_KILL_FRAME(1)
 30889                                  
 30890                                  L_code_ptr_is_number:
 30891 0001785A C8000000                        enter 0, 0
 30892 0001785E 48837D1801                      cmp COUNT, 1
 30893 00017863 0F856F0F0000                    jne L_error_arg_count_1
 30894 00017869 488B4520                        mov rax, PARAM(0)
 30895 0001786D 8A18                            mov bl, byte [rax]
 30896 0001786F 80E310                          and bl, T_number
 30897 00017872 740C                            jz .L_false
 30898 00017874 48B8-                           mov rax, sob_boolean_true
 30898 00017876 [0300000000000000] 
 30899 0001787E EB0A                            jmp .L_end
 30900                                  .L_false:
 30901 00017880 48B8-                           mov rax, sob_boolean_false
 30901 00017882 [0200000000000000] 
 30902                                  .L_end:
 30903 0001788A C9                              leave
 30904 0001788B C21800                          ret AND_KILL_FRAME(1)
 30905                                          
 30906                                  L_code_ptr_is_collection:
 30907 0001788E C8000000                        enter 0, 0
 30908 00017892 48837D1801                      cmp COUNT, 1
 30909 00017897 0F853B0F0000                    jne L_error_arg_count_1
 30910 0001789D 488B4520                        mov rax, PARAM(0)
 30911 000178A1 8A18                            mov bl, byte [rax]
 30912 000178A3 80E320                          and bl, T_collection
 30913 000178A6 740C                            je .L_false
 30914 000178A8 48B8-                           mov rax, sob_boolean_true
 30914 000178AA [0300000000000000] 
 30915 000178B2 EB0A                            jmp .L_end
 30916                                  .L_false:
 30917 000178B4 48B8-                           mov rax, sob_boolean_false
 30917 000178B6 [0200000000000000] 
 30918                                  .L_end:
 30919 000178BE C9                              leave
 30920 000178BF C21800                          ret AND_KILL_FRAME(1)
 30921                                  
 30922                                  L_code_ptr_cons:
 30923 000178C2 C8000000                        enter 0, 0
 30924 000178C6 48837D1802                      cmp COUNT, 2
 30925 000178CB 0F853C0F0000                    jne L_error_arg_count_2
 30926 000178D1 BF11000000                      mov rdi, (1 + 8 + 8)
 30927 000178D6 E8F6F1FFFF                      call malloc
 30928 000178DB C60021                          mov byte [rax], T_pair
 30929 000178DE 488B5D20                        mov rbx, PARAM(0)
 30930 000178E2 48895801                        mov SOB_PAIR_CAR(rax), rbx
 30931 000178E6 488B5D28                        mov rbx, PARAM(1)
 30932 000178EA 48895809                        mov SOB_PAIR_CDR(rax), rbx
 30933 000178EE C9                              leave
 30934 000178EF C22000                          ret AND_KILL_FRAME(2)
 30935                                  
 30936                                  L_code_ptr_display_sexpr:
 30937 000178F2 C8000000                        enter 0, 0
 30938 000178F6 48837D1801                      cmp COUNT, 1
 30939 000178FB 0F85D70E0000                    jne L_error_arg_count_1
 30940 00017901 488B7D20                        mov rdi, PARAM(0)
 30941 00017905 E848F4FFFF                      call print_sexpr
 30942 0001790A 48B8-                           mov rax, sob_void
 30942 0001790C [0000000000000000] 
 30943 00017914 C9                              leave
 30944 00017915 C21800                          ret AND_KILL_FRAME(1)
 30945                                  
 30946                                  L_code_ptr_write_char:
 30947 00017918 C8000000                        enter 0, 0
 30948 0001791C 48837D1801                      cmp COUNT, 1
 30949 00017921 0F85B10E0000                    jne L_error_arg_count_1
 30950 00017927 488B4520                        mov rax, PARAM(0)
 30951                                          assert_char(rax)
    53 0001792B 803802              <1>  cmp byte [%1], %2
    54 0001792E 0F85780F0000        <1>  jne L_error_incorrect_type
 30952 00017934 8A4001                          mov al, SOB_CHAR_VALUE(rax)
 30953 00017937 4825FF000000                    and rax, 255
 30954 0001793D 48BF-                           mov rdi, fmt_char
 30954 0001793F [9D1A000000000000] 
 30955 00017947 4889C6                          mov rsi, rax
 30956 0001794A B800000000                      mov rax, 0
 30957                                          ENTER
    44 0001794F C8000000            <1>  enter 0, 0
    45 00017953 4883E4F0            <1>  and rsp, ~15
 30958 00017957 E8(00000000)                    call printf
 30959                                          LEAVE
    49 0001795C C9                  <1>  leave
 30960 0001795D 48B8-                           mov rax, sob_void
 30960 0001795F [0000000000000000] 
 30961 00017967 C9                              leave
 30962 00017968 C21800                          ret AND_KILL_FRAME(1)
 30963                                  
 30964                                  L_code_ptr_car:
 30965 0001796B C8000000                        enter 0, 0
 30966 0001796F 48837D1801                      cmp COUNT, 1
 30967 00017974 0F855E0E0000                    jne L_error_arg_count_1
 30968 0001797A 488B4520                        mov rax, PARAM(0)
 30969                                          assert_pair(rax)
    53 0001797E 803821              <1>  cmp byte [%1], %2
    54 00017981 0F85250F0000        <1>  jne L_error_incorrect_type
 30970 00017987 488B4001                        mov rax, SOB_PAIR_CAR(rax)
 30971 0001798B C9                              leave
 30972 0001798C C21800                          ret AND_KILL_FRAME(1)
 30973                                          
 30974                                  L_code_ptr_cdr:
 30975 0001798F C8000000                        enter 0, 0
 30976 00017993 48837D1801                      cmp COUNT, 1
 30977 00017998 0F853A0E0000                    jne L_error_arg_count_1
 30978 0001799E 488B4520                        mov rax, PARAM(0)
 30979                                          assert_pair(rax)
    53 000179A2 803821              <1>  cmp byte [%1], %2
    54 000179A5 0F85010F0000        <1>  jne L_error_incorrect_type
 30980 000179AB 488B4009                        mov rax, SOB_PAIR_CDR(rax)
 30981 000179AF C9                              leave
 30982 000179B0 C21800                          ret AND_KILL_FRAME(1)
 30983                                          
 30984                                  L_code_ptr_string_length:
 30985 000179B3 C8000000                        enter 0, 0
 30986 000179B7 48837D1801                      cmp COUNT, 1
 30987 000179BC 0F85160E0000                    jne L_error_arg_count_1
 30988 000179C2 488B4520                        mov rax, PARAM(0)
 30989                                          assert_string(rax)
    53 000179C6 803803              <1>  cmp byte [%1], %2
    54 000179C9 0F85DD0E0000        <1>  jne L_error_incorrect_type
 30990 000179CF 488B7801                        mov rdi, SOB_STRING_LENGTH(rax)
 30991 000179D3 E84F0D0000                      call make_integer
 30992 000179D8 C9                              leave
 30993 000179D9 C21800                          ret AND_KILL_FRAME(1)
 30994                                  
 30995                                  L_code_ptr_vector_length:
 30996 000179DC C8000000                        enter 0, 0
 30997 000179E0 48837D1801                      cmp COUNT, 1
 30998 000179E5 0F85ED0D0000                    jne L_error_arg_count_1
 30999 000179EB 488B4520                        mov rax, PARAM(0)
 31000                                          assert_vector(rax)
    53 000179EF 803822              <1>  cmp byte [%1], %2
    54 000179F2 0F85B40E0000        <1>  jne L_error_incorrect_type
 31001 000179F8 488B7801                        mov rdi, SOB_VECTOR_LENGTH(rax)
 31002 000179FC E8260D0000                      call make_integer
 31003 00017A01 C9                              leave
 31004 00017A02 C21800                          ret AND_KILL_FRAME(1)
 31005                                  
 31006                                  L_code_ptr_real_to_integer:
 31007 00017A05 C8000000                        enter 0, 0
 31008 00017A09 48837D1801                      cmp COUNT, 1
 31009 00017A0E 0F85C40D0000                    jne L_error_arg_count_1
 31010 00017A14 488B5D20                        mov rbx, PARAM(0)
 31011                                          assert_real(rbx)
    53 00017A18 803B13              <1>  cmp byte [%1], %2
    54 00017A1B 0F858B0E0000        <1>  jne L_error_incorrect_type
 31012 00017A21 F20F104301                      movsd xmm0, qword [rbx + 1]
 31013 00017A26 F2480F2CF8                      cvttsd2si rdi, xmm0
 31014 00017A2B E8F70C0000                      call make_integer
 31015 00017A30 C9                              leave
 31016 00017A31 C21800                          ret AND_KILL_FRAME(1)
 31017                                  
 31018                                  L_code_ptr_exit:
 31019 00017A34 C8000000                        enter 0, 0
 31020 00017A38 48837D1800                      cmp COUNT, 0
 31021 00017A3D 0F85600D0000                    jne L_error_arg_count_0
 31022 00017A43 B800000000                      mov rax, 0
 31023 00017A48 E8(00000000)                    call exit
 31024                                  
 31025                                  L_code_ptr_integer_to_real:
 31026 00017A4D C8000000                        enter 0, 0
 31027 00017A51 48837D1801                      cmp COUNT, 1
 31028 00017A56 0F857C0D0000                    jne L_error_arg_count_1
 31029 00017A5C 488B4520                        mov rax, PARAM(0)
 31030                                          assert_integer(rax)
    53 00017A60 803811              <1>  cmp byte [%1], %2
    54 00017A63 0F85430E0000        <1>  jne L_error_incorrect_type
 31031 00017A69 FF7001                          push qword [rax + 1]
 31032 00017A6C F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 31033 00017A72 E8980C0000                      call make_real
 31034 00017A77 C9                              leave
 31035 00017A78 C21800                          ret AND_KILL_FRAME(1)
 31036                                  
 31037                                  L_code_ptr_fraction_to_real:
 31038 00017A7B C8000000                        enter 0, 0
 31039 00017A7F 48837D1801                      cmp COUNT, 1
 31040 00017A84 0F854E0D0000                    jne L_error_arg_count_1
 31041 00017A8A 488B4520                        mov rax, PARAM(0)
 31042                                          assert_fraction(rax)
    53 00017A8E 803812              <1>  cmp byte [%1], %2
    54 00017A91 0F85150E0000        <1>  jne L_error_incorrect_type
 31043 00017A97 FF7001                          push qword [rax + 1]
 31044 00017A9A F2480F2A0424                    cvtsi2sd xmm0, qword [rsp]
 31045 00017AA0 FF7009                          push qword [rax + 1 + 8]
 31046 00017AA3 F2480F2A0C24                    cvtsi2sd xmm1, qword [rsp]
 31047 00017AA9 F20F5EC1                        divsd xmm0, xmm1
 31048 00017AAD E85D0C0000                      call make_real
 31049 00017AB2 C9                              leave
 31050 00017AB3 C21800                          ret AND_KILL_FRAME(1)
 31051                                  
 31052                                  L_code_ptr_char_to_integer:
 31053 00017AB6 C8000000                        enter 0, 0
 31054 00017ABA 48837D1801                      cmp COUNT, 1
 31055 00017ABF 0F85130D0000                    jne L_error_arg_count_1
 31056 00017AC5 488B4520                        mov rax, PARAM(0)
 31057                                          assert_char(rax)
    53 00017AC9 803802              <1>  cmp byte [%1], %2
    54 00017ACC 0F85DA0D0000        <1>  jne L_error_incorrect_type
 31058 00017AD2 8A4001                          mov al, byte [rax + 1]
 31059 00017AD5 4825FF000000                    and rax, 255
 31060 00017ADB 4889C7                          mov rdi, rax
 31061 00017ADE E8440C0000                      call make_integer
 31062 00017AE3 C9                              leave
 31063 00017AE4 C21800                          ret AND_KILL_FRAME(1)
 31064                                  
 31065                                  L_code_ptr_integer_to_fraction:
 31066 00017AE7 C8000000                        enter 0, 0
 31067 00017AEB 48837D1801                      cmp COUNT, 1
 31068 00017AF0 0F85E20C0000                    jne L_error_arg_count_1
 31069 00017AF6 4C8B4520                        mov r8, PARAM(0)
 31070                                          assert_integer(r8)
    53 00017AFA 41803811            <1>  cmp byte [%1], %2
    54 00017AFE 0F85A80D0000        <1>  jne L_error_incorrect_type
 31071 00017B04 BF11000000                      mov rdi, (1 + 8 + 8)
 31072 00017B09 E8C3EFFFFF                      call malloc
 31073 00017B0E 498B5801                        mov rbx, qword [r8 + 1]
 31074 00017B12 C60012                          mov byte [rax], T_fraction
 31075 00017B15 48895801                        mov qword [rax + 1], rbx
 31076 00017B19 48C7400901000000                mov qword [rax + 1 + 8], 1
 31077 00017B21 C9                              leave
 31078 00017B22 C21800                          ret AND_KILL_FRAME(1)
 31079                                  
 31080                                  L_code_ptr_integer_to_char:
 31081 00017B25 C8000000                        enter 0, 0
 31082 00017B29 48837D1801                      cmp COUNT, 1
 31083 00017B2E 0F85A40C0000                    jne L_error_arg_count_1
 31084 00017B34 488B4520                        mov rax, PARAM(0)
 31085                                          assert_integer(rax)
    53 00017B38 803811              <1>  cmp byte [%1], %2
    54 00017B3B 0F856B0D0000        <1>  jne L_error_incorrect_type
 31086 00017B41 488B5801                        mov rbx, qword [rax + 1]
 31087 00017B45 4883FB00                        cmp rbx, 0
 31088 00017B49 0F8EF20B0000                    jle L_error_integer_range
 31089 00017B4F 4881FB00010000                  cmp rbx, 256
 31090 00017B56 0F8DE50B0000                    jge L_error_integer_range
 31091 00017B5C BF02000000                      mov rdi, (1 + 1)
 31092 00017B61 E86BEFFFFF                      call malloc
 31093 00017B66 C60002                          mov byte [rax], T_char
 31094 00017B69 885801                          mov byte [rax + 1], bl
 31095 00017B6C C9                              leave
 31096 00017B6D C21800                          ret AND_KILL_FRAME(1)
 31097                                  
 31098                                  L_code_ptr_trng:
 31099 00017B70 C8000000                        enter 0, 0
 31100 00017B74 48837D1800                      cmp COUNT, 0
 31101 00017B79 0F85240C0000                    jne L_error_arg_count_0
 31102 00017B7F 480FC7F7                        rdrand rdi
 31103 00017B83 48D1EF                          shr rdi, 1
 31104 00017B86 E89C0B0000                      call make_integer
 31105 00017B8B C9                              leave
 31106 00017B8C C21000                          ret AND_KILL_FRAME(0)
 31107                                  
 31108                                  L_code_ptr_is_zero:
 31109 00017B8F C8000000                        enter 0, 0
 31110 00017B93 48837D1801                      cmp COUNT, 1
 31111 00017B98 0F853A0C0000                    jne L_error_arg_count_1
 31112 00017B9E 488B4520                        mov rax, PARAM(0)
 31113 00017BA2 803811                          cmp byte [rax], T_integer
 31114 00017BA5 740F                            je .L_integer
 31115 00017BA7 803812                          cmp byte [rax], T_fraction
 31116 00017BAA 7413                            je .L_fraction
 31117 00017BAC 803813                          cmp byte [rax], T_real
 31118 00017BAF 7417                            je .L_real
 31119 00017BB1 E9F60C0000                      jmp L_error_incorrect_type
 31120                                  .L_integer:
 31121 00017BB6 4883780100                      cmp qword [rax + 1], 0
 31122 00017BBB 7429                            je .L_zero
 31123 00017BBD EB1B                            jmp .L_not_zero
 31124                                  .L_fraction:
 31125 00017BBF 4883780100                      cmp qword [rax + 1], 0
 31126 00017BC4 7420                            je .L_zero
 31127 00017BC6 EB12                            jmp .L_not_zero
 31128                                  .L_real:
 31129 00017BC8 660FEFC0                        pxor xmm0, xmm0
 31130 00017BCC FF7001                          push qword [rax + 1]
 31131 00017BCF F20F100C24                      movsd xmm1, qword [rsp]
 31132 00017BD4 660F2EC1                        ucomisd xmm0, xmm1
 31133 00017BD8 740C                            je .L_zero
 31134                                  .L_not_zero:
 31135 00017BDA 48B8-                           mov rax, sob_boolean_false
 31135 00017BDC [0200000000000000] 
 31136 00017BE4 EB0A                            jmp .L_end
 31137                                  .L_zero:
 31138 00017BE6 48B8-                           mov rax, sob_boolean_true
 31138 00017BE8 [0300000000000000] 
 31139                                  .L_end:
 31140 00017BF0 C9                              leave
 31141 00017BF1 C21800                          ret AND_KILL_FRAME(1)
 31142                                  
 31143                                  L_code_ptr_is_integer:
 31144 00017BF4 C8000000                        enter 0, 0
 31145 00017BF8 48837D1801                      cmp COUNT, 1
 31146 00017BFD 0F85D50B0000                    jne L_error_arg_count_1
 31147 00017C03 488B4520                        mov rax, PARAM(0)
 31148 00017C07 803811                          cmp byte [rax], T_integer
 31149 00017C0A 750C                            jne .L_false
 31150 00017C0C 48B8-                           mov rax, sob_boolean_true
 31150 00017C0E [0300000000000000] 
 31151 00017C16 EB0A                            jmp .L_exit
 31152                                  .L_false:
 31153 00017C18 48B8-                           mov rax, sob_boolean_false
 31153 00017C1A [0200000000000000] 
 31154                                  .L_exit:
 31155 00017C22 C9                              leave
 31156 00017C23 C21800                          ret AND_KILL_FRAME(1)
 31157                                  
 31158                                  L_code_ptr_raw_bin_add_rr:
 31159 00017C26 C8000000                        enter 0, 0
 31160 00017C2A 48837D1802                      cmp COUNT, 2
 31161 00017C2F 0F85D80B0000                    jne L_error_arg_count_2
 31162 00017C35 488B5D20                        mov rbx, PARAM(0)
 31163                                          assert_real(rbx)
    53 00017C39 803B13              <1>  cmp byte [%1], %2
    54 00017C3C 0F856A0C0000        <1>  jne L_error_incorrect_type
 31164 00017C42 488B4D28                        mov rcx, PARAM(1)
 31165                                          assert_real(rcx)
    53 00017C46 803913              <1>  cmp byte [%1], %2
    54 00017C49 0F855D0C0000        <1>  jne L_error_incorrect_type
 31166 00017C4F F20F104301                      movsd xmm0, qword [rbx + 1]
 31167 00017C54 F20F104901                      movsd xmm1, qword [rcx + 1]
 31168 00017C59 F20F58C1                        addsd xmm0, xmm1
 31169 00017C5D E8AD0A0000                      call make_real
 31170 00017C62 C9                              leave
 31171 00017C63 C22000                          ret AND_KILL_FRAME(2)
 31172                                  
 31173                                  L_code_ptr_raw_bin_sub_rr:
 31174 00017C66 C8000000                        enter 0, 0
 31175 00017C6A 48837D1802                      cmp COUNT, 2
 31176 00017C6F 0F85980B0000                    jne L_error_arg_count_2
 31177 00017C75 488B5D20                        mov rbx, PARAM(0)
 31178                                          assert_real(rbx)
    53 00017C79 803B13              <1>  cmp byte [%1], %2
    54 00017C7C 0F852A0C0000        <1>  jne L_error_incorrect_type
 31179 00017C82 488B4D28                        mov rcx, PARAM(1)
 31180                                          assert_real(rcx)
    53 00017C86 803913              <1>  cmp byte [%1], %2
    54 00017C89 0F851D0C0000        <1>  jne L_error_incorrect_type
 31181 00017C8F F20F104301                      movsd xmm0, qword [rbx + 1]
 31182 00017C94 F20F104901                      movsd xmm1, qword [rcx + 1]
 31183 00017C99 F20F5CC1                        subsd xmm0, xmm1
 31184 00017C9D E86D0A0000                      call make_real
 31185 00017CA2 C9                              leave
 31186 00017CA3 C22000                          ret AND_KILL_FRAME(2)
 31187                                  
 31188                                  L_code_ptr_raw_bin_mul_rr:
 31189 00017CA6 C8000000                        enter 0, 0
 31190 00017CAA 48837D1802                      cmp COUNT, 2
 31191 00017CAF 0F85580B0000                    jne L_error_arg_count_2
 31192 00017CB5 488B5D20                        mov rbx, PARAM(0)
 31193                                          assert_real(rbx)
    53 00017CB9 803B13              <1>  cmp byte [%1], %2
    54 00017CBC 0F85EA0B0000        <1>  jne L_error_incorrect_type
 31194 00017CC2 488B4D28                        mov rcx, PARAM(1)
 31195                                          assert_real(rcx)
    53 00017CC6 803913              <1>  cmp byte [%1], %2
    54 00017CC9 0F85DD0B0000        <1>  jne L_error_incorrect_type
 31196 00017CCF F20F104301                      movsd xmm0, qword [rbx + 1]
 31197 00017CD4 F20F104901                      movsd xmm1, qword [rcx + 1]
 31198 00017CD9 F20F59C1                        mulsd xmm0, xmm1
 31199 00017CDD E82D0A0000                      call make_real
 31200 00017CE2 C9                              leave
 31201 00017CE3 C22000                          ret AND_KILL_FRAME(2)
 31202                                  
 31203                                  L_code_ptr_raw_bin_div_rr:
 31204 00017CE6 C8000000                        enter 0, 0
 31205 00017CEA 48837D1802                      cmp COUNT, 2
 31206 00017CEF 0F85180B0000                    jne L_error_arg_count_2
 31207 00017CF5 488B5D20                        mov rbx, PARAM(0)
 31208                                          assert_real(rbx)
    53 00017CF9 803B13              <1>  cmp byte [%1], %2
    54 00017CFC 0F85AA0B0000        <1>  jne L_error_incorrect_type
 31209 00017D02 488B4D28                        mov rcx, PARAM(1)
 31210                                          assert_real(rcx)
    53 00017D06 803913              <1>  cmp byte [%1], %2
    54 00017D09 0F859D0B0000        <1>  jne L_error_incorrect_type
 31211 00017D0F F20F104301                      movsd xmm0, qword [rbx + 1]
 31212 00017D14 F20F104901                      movsd xmm1, qword [rcx + 1]
 31213 00017D19 660FEFD2                        pxor xmm2, xmm2
 31214 00017D1D 660F2ECA                        ucomisd xmm1, xmm2
 31215 00017D21 0F84B60B0000                    je L_error_division_by_zero
 31216 00017D27 F20F5EC1                        divsd xmm0, xmm1
 31217 00017D2B E8DF090000                      call make_real
 31218 00017D30 C9                              leave
 31219 00017D31 C22000                          ret AND_KILL_FRAME(2)
 31220                                  
 31221                                  L_code_ptr_raw_bin_add_zz:
 31222 00017D34 C8000000                	enter 0, 0
 31223 00017D38 48837D1802              	cmp COUNT, 2
 31224 00017D3D 0F85CA0A0000            	jne L_error_arg_count_2
 31225 00017D43 4C8B4520                	mov r8, PARAM(0)
 31226                                  	assert_integer(r8)
    53 00017D47 41803811            <1>  cmp byte [%1], %2
    54 00017D4B 0F855B0B0000        <1>  jne L_error_incorrect_type
 31227 00017D51 4C8B4D28                	mov r9, PARAM(1)
 31228                                  	assert_integer(r9)
    53 00017D55 41803911            <1>  cmp byte [%1], %2
    54 00017D59 0F854D0B0000        <1>  jne L_error_incorrect_type
 31229 00017D5F 498B7801                	mov rdi, qword [r8 + 1]
 31230 00017D63 49037901                	add rdi, qword [r9 + 1]
 31231 00017D67 E8BB090000              	call make_integer
 31232 00017D6C C9                      	leave
 31233 00017D6D C22000                  	ret AND_KILL_FRAME(2)
 31234                                  
 31235                                  L_code_ptr_raw_bin_add_qq:
 31236 00017D70 C8000000                        enter 0, 0
 31237 00017D74 48837D1802                      cmp COUNT, 2
 31238 00017D79 0F858E0A0000                    jne L_error_arg_count_2
 31239 00017D7F 4C8B4520                        mov r8, PARAM(0)
 31240                                          assert_fraction(r8)
    53 00017D83 41803812            <1>  cmp byte [%1], %2
    54 00017D87 0F851F0B0000        <1>  jne L_error_incorrect_type
 31241 00017D8D 4C8B4D28                        mov r9, PARAM(1)
 31242                                          assert_fraction(r9)
    53 00017D91 41803912            <1>  cmp byte [%1], %2
    54 00017D95 0F85110B0000        <1>  jne L_error_incorrect_type
 31243 00017D9B 498B4001                        mov rax, qword [r8 + 1] ; num1
 31244 00017D9F 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 31245 00017DA3 4899                            cqo
 31246 00017DA5 48F7EB                          imul rbx
 31247 00017DA8 4889C6                          mov rsi, rax
 31248 00017DAB 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31249 00017DAF 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 31250 00017DB3 4899                            cqo
 31251 00017DB5 48F7EB                          imul rbx
 31252 00017DB8 4801C6                          add rsi, rax
 31253 00017DBB 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31254 00017DBF 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 31255 00017DC3 4899                            cqo
 31256 00017DC5 48F7EB                          imul rbx
 31257 00017DC8 4889C7                          mov rdi, rax
 31258 00017DCB E8DE010000                      call normalize_fraction
 31259 00017DD0 C9                              leave
 31260 00017DD1 C22000                          ret AND_KILL_FRAME(2)
 31261                                  
 31262                                  L_code_ptr_raw_bin_sub_zz:
 31263 00017DD4 C8000000                	enter 0, 0
 31264 00017DD8 48837D1802              	cmp COUNT, 2
 31265 00017DDD 0F852A0A0000            	jne L_error_arg_count_2
 31266 00017DE3 4C8B4520                	mov r8, PARAM(0)
 31267                                  	assert_integer(r8)
    53 00017DE7 41803811            <1>  cmp byte [%1], %2
    54 00017DEB 0F85BB0A0000        <1>  jne L_error_incorrect_type
 31268 00017DF1 4C8B4D28                	mov r9, PARAM(1)
 31269                                  	assert_integer(r9)
    53 00017DF5 41803911            <1>  cmp byte [%1], %2
    54 00017DF9 0F85AD0A0000        <1>  jne L_error_incorrect_type
 31270 00017DFF 498B7801                	mov rdi, qword [r8 + 1]
 31271 00017E03 492B7901                	sub rdi, qword [r9 + 1]
 31272 00017E07 E81B090000              	call make_integer
 31273 00017E0C C9                      	leave
 31274 00017E0D C22000                  	ret AND_KILL_FRAME(2)
 31275                                  
 31276                                  L_code_ptr_raw_bin_sub_qq:
 31277 00017E10 C8000000                        enter 0, 0
 31278 00017E14 48837D1802                      cmp COUNT, 2
 31279 00017E19 0F85EE090000                    jne L_error_arg_count_2
 31280 00017E1F 4C8B4520                        mov r8, PARAM(0)
 31281                                          assert_fraction(r8)
    53 00017E23 41803812            <1>  cmp byte [%1], %2
    54 00017E27 0F857F0A0000        <1>  jne L_error_incorrect_type
 31282 00017E2D 4C8B4D28                        mov r9, PARAM(1)
 31283                                          assert_fraction(r9)
    53 00017E31 41803912            <1>  cmp byte [%1], %2
    54 00017E35 0F85710A0000        <1>  jne L_error_incorrect_type
 31284 00017E3B 498B4001                        mov rax, qword [r8 + 1] ; num1
 31285 00017E3F 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 31286 00017E43 4899                            cqo
 31287 00017E45 48F7EB                          imul rbx
 31288 00017E48 4889C6                          mov rsi, rax
 31289 00017E4B 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31290 00017E4F 498B5901                        mov rbx, qword [r9 + 1]     ; num2
 31291 00017E53 4899                            cqo
 31292 00017E55 48F7EB                          imul rbx
 31293 00017E58 4829C6                          sub rsi, rax
 31294 00017E5B 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31295 00017E5F 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 31296 00017E63 4899                            cqo
 31297 00017E65 48F7EB                          imul rbx
 31298 00017E68 4889C7                          mov rdi, rax
 31299 00017E6B E83E010000                      call normalize_fraction
 31300 00017E70 C9                              leave
 31301 00017E71 C22000                          ret AND_KILL_FRAME(2)
 31302                                  
 31303                                  L_code_ptr_raw_bin_mul_zz:
 31304 00017E74 C8000000                	enter 0, 0
 31305 00017E78 48837D1802              	cmp COUNT, 2
 31306 00017E7D 0F858A090000            	jne L_error_arg_count_2
 31307 00017E83 4C8B4520                	mov r8, PARAM(0)
 31308                                  	assert_integer(r8)
    53 00017E87 41803811            <1>  cmp byte [%1], %2
    54 00017E8B 0F851B0A0000        <1>  jne L_error_incorrect_type
 31309 00017E91 4C8B4D28                	mov r9, PARAM(1)
 31310                                  	assert_integer(r9)
    53 00017E95 41803911            <1>  cmp byte [%1], %2
    54 00017E99 0F850D0A0000        <1>  jne L_error_incorrect_type
 31311 00017E9F 4899                    	cqo
 31312 00017EA1 498B4001                	mov rax, qword [r8 + 1]
 31313 00017EA5 49F76101                	mul qword [r9 + 1]
 31314 00017EA9 4889C7                  	mov rdi, rax
 31315 00017EAC E876080000              	call make_integer
 31316 00017EB1 C9                      	leave
 31317 00017EB2 C22000                  	ret AND_KILL_FRAME(2)
 31318                                  
 31319                                  L_code_ptr_raw_bin_mul_qq:
 31320 00017EB5 C8000000                        enter 0, 0
 31321 00017EB9 48837D1802                      cmp COUNT, 2
 31322 00017EBE 0F8549090000                    jne L_error_arg_count_2
 31323 00017EC4 4C8B4520                        mov r8, PARAM(0)
 31324                                          assert_fraction(r8)
    53 00017EC8 41803812            <1>  cmp byte [%1], %2
    54 00017ECC 0F85DA090000        <1>  jne L_error_incorrect_type
 31325 00017ED2 4C8B4D28                        mov r9, PARAM(1)
 31326                                          assert_fraction(r9)
    53 00017ED6 41803912            <1>  cmp byte [%1], %2
    54 00017EDA 0F85CC090000        <1>  jne L_error_incorrect_type
 31327 00017EE0 498B4001                        mov rax, qword [r8 + 1] ; num1
 31328 00017EE4 498B5901                        mov rbx, qword [r9 + 1] ; num2
 31329 00017EE8 4899                            cqo
 31330 00017EEA 48F7EB                          imul rbx
 31331 00017EED 4889C6                          mov rsi, rax
 31332 00017EF0 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31333 00017EF4 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den2
 31334 00017EF8 4899                            cqo
 31335 00017EFA 48F7EB                          imul rbx
 31336 00017EFD 4889C7                          mov rdi, rax
 31337 00017F00 E8A9000000                      call normalize_fraction
 31338 00017F05 C9                              leave
 31339 00017F06 C22000                          ret AND_KILL_FRAME(2)
 31340                                          
 31341                                  L_code_ptr_raw_bin_div_zz:
 31342 00017F09 C8000000                	enter 0, 0
 31343 00017F0D 48837D1802              	cmp COUNT, 2
 31344 00017F12 0F85F5080000            	jne L_error_arg_count_2
 31345 00017F18 4C8B4520                	mov r8, PARAM(0)
 31346                                  	assert_integer(r8)
    53 00017F1C 41803811            <1>  cmp byte [%1], %2
    54 00017F20 0F8586090000        <1>  jne L_error_incorrect_type
 31347 00017F26 4C8B4D28                	mov r9, PARAM(1)
 31348                                  	assert_integer(r9)
    53 00017F2A 41803911            <1>  cmp byte [%1], %2
    54 00017F2E 0F8578090000        <1>  jne L_error_incorrect_type
 31349 00017F34 498B7901                	mov rdi, qword [r9 + 1]
 31350 00017F38 4883FF00                	cmp rdi, 0
 31351 00017F3C 0F849B090000            	je L_error_division_by_zero
 31352 00017F42 498B7001                	mov rsi, qword [r8 + 1]
 31353 00017F46 E863000000              	call normalize_fraction
 31354 00017F4B C9                      	leave
 31355 00017F4C C22000                  	ret AND_KILL_FRAME(2)
 31356                                  
 31357                                  L_code_ptr_raw_bin_div_qq:
 31358 00017F4F C8000000                        enter 0, 0
 31359 00017F53 48837D1802                      cmp COUNT, 2
 31360 00017F58 0F85AF080000                    jne L_error_arg_count_2
 31361 00017F5E 4C8B4520                        mov r8, PARAM(0)
 31362                                          assert_fraction(r8)
    53 00017F62 41803812            <1>  cmp byte [%1], %2
    54 00017F66 0F8540090000        <1>  jne L_error_incorrect_type
 31363 00017F6C 4C8B4D28                        mov r9, PARAM(1)
 31364                                          assert_fraction(r9)
    53 00017F70 41803912            <1>  cmp byte [%1], %2
    54 00017F74 0F8532090000        <1>  jne L_error_incorrect_type
 31365 00017F7A 4983790100                      cmp qword [r9 + 1], 0
 31366 00017F7F 0F8458090000                    je L_error_division_by_zero
 31367 00017F85 498B4001                        mov rax, qword [r8 + 1] ; num1
 31368 00017F89 498B5909                        mov rbx, qword [r9 + 1 + 8] ; den 2
 31369 00017F8D 4899                            cqo
 31370 00017F8F 48F7EB                          imul rbx
 31371 00017F92 4889C6                          mov rsi, rax
 31372 00017F95 498B4009                        mov rax, qword [r8 + 1 + 8] ; den1
 31373 00017F99 498B5901                        mov rbx, qword [r9 + 1] ; num2
 31374 00017F9D 4899                            cqo
 31375 00017F9F 48F7EB                          imul rbx
 31376 00017FA2 4889C7                          mov rdi, rax
 31377 00017FA5 E804000000                      call normalize_fraction
 31378 00017FAA C9                              leave
 31379 00017FAB C22000                          ret AND_KILL_FRAME(2)
 31380                                          
 31381                                  normalize_fraction:
 31382 00017FAE 56                              push rsi
 31383 00017FAF 57                              push rdi
 31384 00017FB0 E859000000                      call gcd
 31385 00017FB5 4889C3                          mov rbx, rax
 31386 00017FB8 58                              pop rax
 31387 00017FB9 4899                            cqo
 31388 00017FBB 48F7FB                          idiv rbx
 31389 00017FBE 4989C0                          mov r8, rax
 31390 00017FC1 58                              pop rax
 31391 00017FC2 4899                            cqo
 31392 00017FC4 48F7FB                          idiv rbx
 31393 00017FC7 4989C1                          mov r9, rax
 31394 00017FCA 4983F900                        cmp r9, 0
 31395 00017FCE 741C                            je .L_zero
 31396 00017FD0 4983F801                        cmp r8, 1
 31397 00017FD4 7421                            je .L_int
 31398 00017FD6 BF11000000                      mov rdi, (1 + 8 + 8)
 31399 00017FDB E8F1EAFFFF                      call malloc
 31400 00017FE0 C60012                          mov byte [rax], T_fraction
 31401 00017FE3 4C894801                        mov qword [rax + 1], r9
 31402 00017FE7 4C894009                        mov qword [rax + 1 + 8], r8
 31403 00017FEB C3                              ret
 31404                                  .L_zero:
 31405 00017FEC BF00000000                      mov rdi, 0
 31406 00017FF1 E831070000                      call make_integer
 31407 00017FF6 C3                              ret
 31408                                  .L_int:
 31409 00017FF7 4C89CF                          mov rdi, r9
 31410 00017FFA E828070000                      call make_integer
 31411 00017FFF C3                              ret
 31412                                  
 31413                                  iabs:
 31414 00018000 4889F8                          mov rax, rdi
 31415 00018003 4883F800                        cmp rax, 0
 31416 00018007 7C01                            jl .Lneg
 31417 00018009 C3                              ret
 31418                                  .Lneg:
 31419 0001800A 48F7D8                          neg rax
 31420 0001800D C3                              ret
 31421                                  
 31422                                  gcd:
 31423 0001800E E8EDFFFFFF                      call iabs
 31424 00018013 4889C3                          mov rbx, rax
 31425 00018016 4889F7                          mov rdi, rsi
 31426 00018019 E8E2FFFFFF                      call iabs
 31427 0001801E 4883F800                        cmp rax, 0
 31428 00018022 7502                            jne .L0
 31429 00018024 4893                            xchg rax, rbx
 31430                                  .L0:
 31431 00018026 4883FB00                        cmp rbx, 0
 31432 0001802A 740C                            je .L1
 31433 0001802C 4899                            cqo
 31434 0001802E 48F7F3                          div rbx
 31435 00018031 4889D0                          mov rax, rdx
 31436 00018034 4893                            xchg rax, rbx
 31437 00018036 EBEE                            jmp .L0
 31438                                  .L1:
 31439 00018038 C3                              ret
 31440                                  
 31441                                  L_code_ptr_error:
 31442 00018039 C8000000                        enter 0, 0
 31443 0001803D 48837D1802                      cmp COUNT, 2
 31444 00018042 0F85C5070000                    jne L_error_arg_count_2
 31445 00018048 488B7520                        mov rsi, PARAM(0)
 31446                                          assert_interned_symbol(rsi)
    53 0001804C 803E41              <1>  cmp byte [%1], %2
    54 0001804F 0F8557080000        <1>  jne L_error_incorrect_type
 31447 00018055 488B7528                        mov rsi, PARAM(1)
 31448                                          assert_string(rsi)
    53 00018059 803E03              <1>  cmp byte [%1], %2
    54 0001805C 0F854A080000        <1>  jne L_error_incorrect_type
 31449 00018062 48BF-                           mov rdi, fmt_scheme_error_part_1
 31449 00018064 [FB1B000000000000] 
 31450 0001806C B800000000                      mov rax, 0
 31451                                          ENTER
    44 00018071 C8000000            <1>  enter 0, 0
    45 00018075 4883E4F0            <1>  and rsp, ~15
 31452 00018079 E8(00000000)                    call printf
 31453                                          LEAVE
    49 0001807E C9                  <1>  leave
 31454 0001807F 488B7D20                        mov rdi, PARAM(0)
 31455 00018083 E8CAECFFFF                      call print_sexpr
 31456 00018088 48BF-                           mov rdi, fmt_scheme_error_part_2
 31456 0001808A [0F1C000000000000] 
 31457 00018092 B800000000                      mov rax, 0
 31458                                          ENTER
    44 00018097 C8000000            <1>  enter 0, 0
    45 0001809B 4883E4F0            <1>  and rsp, ~15
 31459 0001809F E8(00000000)                    call printf
 31460                                          LEAVE
    49 000180A4 C9                  <1>  leave
 31461 000180A5 488B4528                        mov rax, PARAM(1)       ; sob_string
 31462 000180A9 BE01000000                      mov rsi, 1              ; size = 1 byte
 31463 000180AE 488B5001                        mov rdx, qword [rax + 1] ; length
 31464 000180B2 488D7809                        lea rdi, [rax + 1 + 8]   ; actual characters
 31465 000180B6 488B0C25[00000000]              mov rcx, qword [stdout]  ; FILE*
 31466                                  	ENTER
    44 000180BE C8000000            <1>  enter 0, 0
    45 000180C2 4883E4F0            <1>  and rsp, ~15
 31467 000180C6 E8(00000000)                    call fwrite
 31468                                  	LEAVE
    49 000180CB C9                  <1>  leave
 31469 000180CC 48BF-                           mov rdi, fmt_scheme_error_part_3
 31469 000180CE [511C000000000000] 
 31470 000180D6 B800000000                      mov rax, 0
 31471                                          ENTER
    44 000180DB C8000000            <1>  enter 0, 0
    45 000180DF 4883E4F0            <1>  and rsp, ~15
 31472 000180E3 E8(00000000)                    call printf
 31473                                          LEAVE
    49 000180E8 C9                  <1>  leave
 31474 000180E9 48C7C0F7FFFFFF                  mov rax, -9
 31475 000180F0 E8(00000000)                    call exit
 31476                                  
 31477                                  L_code_ptr_raw_less_than_rr:
 31478 000180F5 C8000000                        enter 0, 0
 31479 000180F9 48837D1802                      cmp COUNT, 2
 31480 000180FE 0F8509070000                    jne L_error_arg_count_2
 31481 00018104 488B7520                        mov rsi, PARAM(0)
 31482                                          assert_real(rsi)
    53 00018108 803E13              <1>  cmp byte [%1], %2
    54 0001810B 0F859B070000        <1>  jne L_error_incorrect_type
 31483 00018111 488B7D28                        mov rdi, PARAM(1)
 31484                                          assert_real(rdi)
    53 00018115 803F13              <1>  cmp byte [%1], %2
    54 00018118 0F858E070000        <1>  jne L_error_incorrect_type
 31485 0001811E F20F104601                      movsd xmm0, qword [rsi + 1]
 31486 00018123 F20F104F01                      movsd xmm1, qword [rdi + 1]
 31487 00018128 660F2FC1                        comisd xmm0, xmm1
 31488 0001812C 730C                            jae .L_false
 31489 0001812E 48B8-                           mov rax, sob_boolean_true
 31489 00018130 [0300000000000000] 
 31490 00018138 EB0A                            jmp .L_exit
 31491                                  .L_false:
 31492 0001813A 48B8-                           mov rax, sob_boolean_false
 31492 0001813C [0200000000000000] 
 31493                                  .L_exit:
 31494 00018144 C9                              leave
 31495 00018145 C22000                          ret AND_KILL_FRAME(2)
 31496                                          
 31497                                  L_code_ptr_raw_less_than_zz:
 31498 00018148 C8000000                	enter 0, 0
 31499 0001814C 48837D1802              	cmp COUNT, 2
 31500 00018151 0F85B6060000            	jne L_error_arg_count_2
 31501 00018157 4C8B4520                	mov r8, PARAM(0)
 31502                                  	assert_integer(r8)
    53 0001815B 41803811            <1>  cmp byte [%1], %2
    54 0001815F 0F8547070000        <1>  jne L_error_incorrect_type
 31503 00018165 4C8B4D28                	mov r9, PARAM(1)
 31504                                  	assert_integer(r9)
    53 00018169 41803911            <1>  cmp byte [%1], %2
    54 0001816D 0F8539070000        <1>  jne L_error_incorrect_type
 31505 00018173 498B7801                	mov rdi, qword [r8 + 1]
 31506 00018177 493B7901                	cmp rdi, qword [r9 + 1]
 31507 0001817B 7D0C                    	jge .L_false
 31508 0001817D 48B8-                   	mov rax, sob_boolean_true
 31508 0001817F [0300000000000000] 
 31509 00018187 EB0A                    	jmp .L_exit
 31510                                  .L_false:
 31511 00018189 48B8-                   	mov rax, sob_boolean_false
 31511 0001818B [0200000000000000] 
 31512                                  .L_exit:
 31513 00018193 C9                      	leave
 31514 00018194 C22000                  	ret AND_KILL_FRAME(2)
 31515                                  
 31516                                  L_code_ptr_raw_less_than_qq:
 31517 00018197 C8000000                        enter 0, 0
 31518 0001819B 48837D1802                      cmp COUNT, 2
 31519 000181A0 0F8567060000                    jne L_error_arg_count_2
 31520 000181A6 488B7520                        mov rsi, PARAM(0)
 31521                                          assert_fraction(rsi)
    53 000181AA 803E12              <1>  cmp byte [%1], %2
    54 000181AD 0F85F9060000        <1>  jne L_error_incorrect_type
 31522 000181B3 488B7D28                        mov rdi, PARAM(1)
 31523                                          assert_fraction(rdi)
    53 000181B7 803F12              <1>  cmp byte [%1], %2
    54 000181BA 0F85EC060000        <1>  jne L_error_incorrect_type
 31524 000181C0 488B4601                        mov rax, qword [rsi + 1] ; num1
 31525 000181C4 4899                            cqo
 31526 000181C6 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 31527 000181CA 4889C1                          mov rcx, rax
 31528 000181CD 488B4609                        mov rax, qword [rsi + 1 + 8] ; den1
 31529 000181D1 4899                            cqo
 31530 000181D3 48F76F01                        imul qword [rdi + 1]          ; num2
 31531 000181D7 4829C1                          sub rcx, rax
 31532 000181DA 7D0C                            jge .L_false
 31533 000181DC 48B8-                           mov rax, sob_boolean_true
 31533 000181DE [0300000000000000] 
 31534 000181E6 EB0A                            jmp .L_exit
 31535                                  .L_false:
 31536 000181E8 48B8-                           mov rax, sob_boolean_false
 31536 000181EA [0200000000000000] 
 31537                                  .L_exit:
 31538 000181F2 C9                              leave
 31539 000181F3 C22000                          ret AND_KILL_FRAME(2)
 31540                                  
 31541                                  L_code_ptr_raw_equal_rr:
 31542 000181F6 C8000000                        enter 0, 0
 31543 000181FA 48837D1802                      cmp COUNT, 2
 31544 000181FF 0F8508060000                    jne L_error_arg_count_2
 31545 00018205 488B7520                        mov rsi, PARAM(0)
 31546                                          assert_real(rsi)
    53 00018209 803E13              <1>  cmp byte [%1], %2
    54 0001820C 0F859A060000        <1>  jne L_error_incorrect_type
 31547 00018212 488B7D28                        mov rdi, PARAM(1)
 31548                                          assert_real(rdi)
    53 00018216 803F13              <1>  cmp byte [%1], %2
    54 00018219 0F858D060000        <1>  jne L_error_incorrect_type
 31549 0001821F F20F104601                      movsd xmm0, qword [rsi + 1]
 31550 00018224 F20F104F01                      movsd xmm1, qword [rdi + 1]
 31551 00018229 660F2FC1                        comisd xmm0, xmm1
 31552 0001822D 750C                            jne .L_false
 31553 0001822F 48B8-                           mov rax, sob_boolean_true
 31553 00018231 [0300000000000000] 
 31554 00018239 EB0A                            jmp .L_exit
 31555                                  .L_false:
 31556 0001823B 48B8-                           mov rax, sob_boolean_false
 31556 0001823D [0200000000000000] 
 31557                                  .L_exit:
 31558 00018245 C9                              leave
 31559 00018246 C22000                          ret AND_KILL_FRAME(2)
 31560                                          
 31561                                  L_code_ptr_raw_equal_zz:
 31562 00018249 C8000000                	enter 0, 0
 31563 0001824D 48837D1802              	cmp COUNT, 2
 31564 00018252 0F85B5050000            	jne L_error_arg_count_2
 31565 00018258 4C8B4520                	mov r8, PARAM(0)
 31566                                  	assert_integer(r8)
    53 0001825C 41803811            <1>  cmp byte [%1], %2
    54 00018260 0F8546060000        <1>  jne L_error_incorrect_type
 31567 00018266 4C8B4D28                	mov r9, PARAM(1)
 31568                                  	assert_integer(r9)
    53 0001826A 41803911            <1>  cmp byte [%1], %2
    54 0001826E 0F8538060000        <1>  jne L_error_incorrect_type
 31569 00018274 498B7801                	mov rdi, qword [r8 + 1]
 31570 00018278 493B7901                	cmp rdi, qword [r9 + 1]
 31571 0001827C 750C                    	jne .L_false
 31572 0001827E 48B8-                   	mov rax, sob_boolean_true
 31572 00018280 [0300000000000000] 
 31573 00018288 EB0A                    	jmp .L_exit
 31574                                  .L_false:
 31575 0001828A 48B8-                   	mov rax, sob_boolean_false
 31575 0001828C [0200000000000000] 
 31576                                  .L_exit:
 31577 00018294 C9                      	leave
 31578 00018295 C22000                  	ret AND_KILL_FRAME(2)
 31579                                  
 31580                                  L_code_ptr_raw_equal_qq:
 31581 00018298 C8000000                        enter 0, 0
 31582 0001829C 48837D1802                      cmp COUNT, 2
 31583 000182A1 0F8566050000                    jne L_error_arg_count_2
 31584 000182A7 488B7520                        mov rsi, PARAM(0)
 31585                                          assert_fraction(rsi)
    53 000182AB 803E12              <1>  cmp byte [%1], %2
    54 000182AE 0F85F8050000        <1>  jne L_error_incorrect_type
 31586 000182B4 488B7D28                        mov rdi, PARAM(1)
 31587                                          assert_fraction(rdi)
    53 000182B8 803F12              <1>  cmp byte [%1], %2
    54 000182BB 0F85EB050000        <1>  jne L_error_incorrect_type
 31588 000182C1 488B4601                        mov rax, qword [rsi + 1] ; num1
 31589 000182C5 4899                            cqo
 31590 000182C7 48F76F09                        imul qword [rdi + 1 + 8] ; den2
 31591 000182CB 4889C1                          mov rcx, rax
 31592 000182CE 488B4709                        mov rax, qword [rdi + 1 + 8] ; den1
 31593 000182D2 4899                            cqo
 31594 000182D4 48F76F01                        imul qword [rdi + 1]          ; num2
 31595 000182D8 4829C1                          sub rcx, rax
 31596 000182DB 750C                            jne .L_false
 31597 000182DD 48B8-                           mov rax, sob_boolean_true
 31597 000182DF [0300000000000000] 
 31598 000182E7 EB0A                            jmp .L_exit
 31599                                  .L_false:
 31600 000182E9 48B8-                           mov rax, sob_boolean_false
 31600 000182EB [0200000000000000] 
 31601                                  .L_exit:
 31602 000182F3 C9                              leave
 31603 000182F4 C22000                          ret AND_KILL_FRAME(2)
 31604                                  
 31605                                  L_code_ptr_quotient:
 31606 000182F7 C8000000                        enter 0, 0
 31607 000182FB 48837D1802                      cmp COUNT, 2
 31608 00018300 0F8507050000                    jne L_error_arg_count_2
 31609 00018306 488B7520                        mov rsi, PARAM(0)
 31610                                          assert_integer(rsi)
    53 0001830A 803E11              <1>  cmp byte [%1], %2
    54 0001830D 0F8599050000        <1>  jne L_error_incorrect_type
 31611 00018313 488B7D28                        mov rdi, PARAM(1)
 31612                                          assert_integer(rdi)
    53 00018317 803F11              <1>  cmp byte [%1], %2
    54 0001831A 0F858C050000        <1>  jne L_error_incorrect_type
 31613 00018320 488B4601                        mov rax, qword [rsi + 1]
 31614 00018324 488B5F01                        mov rbx, qword [rdi + 1]
 31615 00018328 4883FB00                        cmp rbx, 0
 31616 0001832C 0F84AB050000                    je L_error_division_by_zero
 31617 00018332 4899                            cqo
 31618 00018334 48F7FB                          idiv rbx
 31619 00018337 4889C7                          mov rdi, rax
 31620 0001833A E8E8030000                      call make_integer
 31621 0001833F C9                              leave
 31622 00018340 C22000                          ret AND_KILL_FRAME(2)
 31623                                          
 31624                                  L_code_ptr_remainder:
 31625 00018343 C8000000                        enter 0, 0
 31626 00018347 48837D1802                      cmp COUNT, 2
 31627 0001834C 0F85BB040000                    jne L_error_arg_count_2
 31628 00018352 488B7520                        mov rsi, PARAM(0)
 31629                                          assert_integer(rsi)
    53 00018356 803E11              <1>  cmp byte [%1], %2
    54 00018359 0F854D050000        <1>  jne L_error_incorrect_type
 31630 0001835F 488B7D28                        mov rdi, PARAM(1)
 31631                                          assert_integer(rdi)
    53 00018363 803F11              <1>  cmp byte [%1], %2
    54 00018366 0F8540050000        <1>  jne L_error_incorrect_type
 31632 0001836C 488B4601                        mov rax, qword [rsi + 1]
 31633 00018370 488B5F01                        mov rbx, qword [rdi + 1]
 31634 00018374 4883FB00                        cmp rbx, 0
 31635 00018378 0F845F050000                    je L_error_division_by_zero
 31636 0001837E 4899                            cqo
 31637 00018380 48F7FB                          idiv rbx
 31638 00018383 4889D7                          mov rdi, rdx
 31639 00018386 E89C030000                      call make_integer
 31640 0001838B C9                              leave
 31641 0001838C C22000                          ret AND_KILL_FRAME(2)
 31642                                  
 31643                                  L_code_ptr_set_car:
 31644 0001838F C8000000                        enter 0, 0
 31645 00018393 48837D1802                      cmp COUNT, 2
 31646 00018398 0F856F040000                    jne L_error_arg_count_2
 31647 0001839E 488B4520                        mov rax, PARAM(0)
 31648                                          assert_pair(rax)
    53 000183A2 803821              <1>  cmp byte [%1], %2
    54 000183A5 0F8501050000        <1>  jne L_error_incorrect_type
 31649 000183AB 488B5D28                        mov rbx, PARAM(1)
 31650 000183AF 48895801                        mov SOB_PAIR_CAR(rax), rbx
 31651 000183B3 48B8-                           mov rax, sob_void
 31651 000183B5 [0000000000000000] 
 31652 000183BD C9                              leave
 31653 000183BE C22000                          ret AND_KILL_FRAME(2)
 31654                                  
 31655                                  L_code_ptr_set_cdr:
 31656 000183C1 C8000000                        enter 0, 0
 31657 000183C5 48837D1802                      cmp COUNT, 2
 31658 000183CA 0F853D040000                    jne L_error_arg_count_2
 31659 000183D0 488B4520                        mov rax, PARAM(0)
 31660                                          assert_pair(rax)
    53 000183D4 803821              <1>  cmp byte [%1], %2
    54 000183D7 0F85CF040000        <1>  jne L_error_incorrect_type
 31661 000183DD 488B5D28                        mov rbx, PARAM(1)
 31662 000183E1 48895809                        mov SOB_PAIR_CDR(rax), rbx
 31663 000183E5 48B8-                           mov rax, sob_void
 31663 000183E7 [0000000000000000] 
 31664 000183EF C9                              leave
 31665 000183F0 C22000                          ret AND_KILL_FRAME(2)
 31666                                  
 31667                                  L_code_ptr_string_ref:
 31668 000183F3 C8000000                        enter 0, 0
 31669 000183F7 48837D1802                      cmp COUNT, 2
 31670 000183FC 0F850B040000                    jne L_error_arg_count_2
 31671 00018402 488B7D20                        mov rdi, PARAM(0)
 31672                                          assert_string(rdi)
    53 00018406 803F03              <1>  cmp byte [%1], %2
    54 00018409 0F859D040000        <1>  jne L_error_incorrect_type
 31673 0001840F 488B7528                        mov rsi, PARAM(1)
 31674                                          assert_integer(rsi)
    53 00018413 803E11              <1>  cmp byte [%1], %2
    54 00018416 0F8590040000        <1>  jne L_error_incorrect_type
 31675 0001841C 488B5701                        mov rdx, qword [rdi + 1]
 31676 00018420 488B4E01                        mov rcx, qword [rsi + 1]
 31677 00018424 4839D1                          cmp rcx, rdx
 31678 00018427 0F8D14030000                    jge L_error_integer_range
 31679 0001842D 4883F900                        cmp rcx, 0
 31680 00018431 0F8C0A030000                    jl L_error_integer_range
 31681 00018437 8A5C3909                        mov bl, byte [rdi + 1 + 8 + 1 * rcx]
 31682 0001843B BF02000000                      mov rdi, 2
 31683 00018440 E88CE6FFFF                      call malloc
 31684 00018445 C60002                          mov byte [rax], T_char
 31685 00018448 885801                          mov byte [rax + 1], bl
 31686 0001844B C9                              leave
 31687 0001844C C22000                          ret AND_KILL_FRAME(2)
 31688                                  
 31689                                  L_code_ptr_vector_ref:
 31690 0001844F C8000000                        enter 0, 0
 31691 00018453 48837D1802                      cmp COUNT, 2
 31692 00018458 0F85AF030000                    jne L_error_arg_count_2
 31693 0001845E 488B7D20                        mov rdi, PARAM(0)
 31694                                          assert_vector(rdi)
    53 00018462 803F22              <1>  cmp byte [%1], %2
    54 00018465 0F8541040000        <1>  jne L_error_incorrect_type
 31695 0001846B 488B7528                        mov rsi, PARAM(1)
 31696                                          assert_integer(rsi)
    53 0001846F 803E11              <1>  cmp byte [%1], %2
    54 00018472 0F8534040000        <1>  jne L_error_incorrect_type
 31697 00018478 488B5701                        mov rdx, qword [rdi + 1]
 31698 0001847C 488B4E01                        mov rcx, qword [rsi + 1]
 31699 00018480 4839D1                          cmp rcx, rdx
 31700 00018483 0F8DB8020000                    jge L_error_integer_range
 31701 00018489 4883F900                        cmp rcx, 0
 31702 0001848D 0F8CAE020000                    jl L_error_integer_range
 31703 00018493 488B44CF09                      mov rax, [rdi + 1 + 8 + 8 * rcx]
 31704 00018498 C9                              leave
 31705 00018499 C22000                          ret AND_KILL_FRAME(2)
 31706                                  
 31707                                  L_code_ptr_vector_set:
 31708 0001849C C8000000                        enter 0, 0
 31709 000184A0 48837D1803                      cmp COUNT, 3
 31710 000184A5 0F85CC030000                    jne L_error_arg_count_3
 31711 000184AB 488B7D20                        mov rdi, PARAM(0)
 31712                                          assert_vector(rdi)
    53 000184AF 803F22              <1>  cmp byte [%1], %2
    54 000184B2 0F85F4030000        <1>  jne L_error_incorrect_type
 31713 000184B8 488B7528                        mov rsi, PARAM(1)
 31714                                          assert_integer(rsi)
    53 000184BC 803E11              <1>  cmp byte [%1], %2
    54 000184BF 0F85E7030000        <1>  jne L_error_incorrect_type
 31715 000184C5 488B5701                        mov rdx, qword [rdi + 1]
 31716 000184C9 488B4E01                        mov rcx, qword [rsi + 1]
 31717 000184CD 4839D1                          cmp rcx, rdx
 31718 000184D0 0F8D6B020000                    jge L_error_integer_range
 31719 000184D6 4883F900                        cmp rcx, 0
 31720 000184DA 0F8C61020000                    jl L_error_integer_range
 31721 000184E0 488B4530                        mov rax, PARAM(2)
 31722 000184E4 488944CF09                      mov qword [rdi + 1 + 8 + 8 * rcx], rax
 31723 000184E9 48B8-                           mov rax, sob_void
 31723 000184EB [0000000000000000] 
 31724 000184F3 C9                              leave
 31725 000184F4 C22800                          ret AND_KILL_FRAME(3)
 31726                                  
 31727                                  L_code_ptr_string_set:
 31728 000184F7 C8000000                        enter 0, 0
 31729 000184FB 48837D1803                      cmp COUNT, 3
 31730 00018500 0F8571030000                    jne L_error_arg_count_3
 31731 00018506 488B7D20                        mov rdi, PARAM(0)
 31732                                          assert_string(rdi)
    53 0001850A 803F03              <1>  cmp byte [%1], %2
    54 0001850D 0F8599030000        <1>  jne L_error_incorrect_type
 31733 00018513 488B7528                        mov rsi, PARAM(1)
 31734                                          assert_integer(rsi)
    53 00018517 803E11              <1>  cmp byte [%1], %2
    54 0001851A 0F858C030000        <1>  jne L_error_incorrect_type
 31735 00018520 488B5701                        mov rdx, qword [rdi + 1]
 31736 00018524 488B4E01                        mov rcx, qword [rsi + 1]
 31737 00018528 4839D1                          cmp rcx, rdx
 31738 0001852B 0F8D10020000                    jge L_error_integer_range
 31739 00018531 4883F900                        cmp rcx, 0
 31740 00018535 0F8C06020000                    jl L_error_integer_range
 31741 0001853B 488B4530                        mov rax, PARAM(2)
 31742                                          assert_char(rax)
    53 0001853F 803802              <1>  cmp byte [%1], %2
    54 00018542 0F8564030000        <1>  jne L_error_incorrect_type
 31743 00018548 8A4001                          mov al, byte [rax + 1]
 31744 0001854B 88443909                        mov byte [rdi + 1 + 8 + 1 * rcx], al
 31745 0001854F 48B8-                           mov rax, sob_void
 31745 00018551 [0000000000000000] 
 31746 00018559 C9                              leave
 31747 0001855A C22800                          ret AND_KILL_FRAME(3)
 31748                                  
 31749                                  L_code_ptr_make_vector:
 31750 0001855D C8000000                        enter 0, 0
 31751 00018561 48837D1802                      cmp COUNT, 2
 31752 00018566 0F85A1020000                    jne L_error_arg_count_2
 31753 0001856C 488B4D20                        mov rcx, PARAM(0)
 31754                                          assert_integer(rcx)
    53 00018570 803911              <1>  cmp byte [%1], %2
    54 00018573 0F8533030000        <1>  jne L_error_incorrect_type
 31755 00018579 488B4901                        mov rcx, qword [rcx + 1]
 31756 0001857D 4883F900                        cmp rcx, 0
 31757 00018581 0F8CBA010000                    jl L_error_integer_range
 31758 00018587 488B5528                        mov rdx, PARAM(1)
 31759 0001858B 488D3CCD09000000                lea rdi, [1 + 8 + 8 * rcx]
 31760 00018593 E839E5FFFF                      call malloc
 31761 00018598 C60022                          mov byte [rax], T_vector
 31762 0001859B 48894801                        mov qword [rax + 1], rcx
 31763 0001859F 41B800000000                    mov r8, 0
 31764                                  .L0:
 31765 000185A5 4939C8                          cmp r8, rcx
 31766 000185A8 740A                            je .L1
 31767 000185AA 4A8954C009                      mov qword [rax + 1 + 8 + 8 * r8], rdx
 31768 000185AF 49FFC0                          inc r8
 31769 000185B2 EBF1                            jmp .L0
 31770                                  .L1:
 31771 000185B4 C9                              leave
 31772 000185B5 C22000                          ret AND_KILL_FRAME(2)
 31773                                          
 31774                                  L_code_ptr_make_string:
 31775 000185B8 C8000000                        enter 0, 0
 31776 000185BC 48837D1802                      cmp COUNT, 2
 31777 000185C1 0F8546020000                    jne L_error_arg_count_2
 31778 000185C7 488B4D20                        mov rcx, PARAM(0)
 31779                                          assert_integer(rcx)
    53 000185CB 803911              <1>  cmp byte [%1], %2
    54 000185CE 0F85D8020000        <1>  jne L_error_incorrect_type
 31780 000185D4 488B4901                        mov rcx, qword [rcx + 1]
 31781 000185D8 4883F900                        cmp rcx, 0
 31782 000185DC 0F8C5F010000                    jl L_error_integer_range
 31783 000185E2 488B5528                        mov rdx, PARAM(1)
 31784                                          assert_char(rdx)
    53 000185E6 803A02              <1>  cmp byte [%1], %2
    54 000185E9 0F85BD020000        <1>  jne L_error_incorrect_type
 31785 000185EF 8A5201                          mov dl, byte [rdx + 1]
 31786 000185F2 488D7909                        lea rdi, [1 + 8 + 1 * rcx]
 31787 000185F6 E8D6E4FFFF                      call malloc
 31788 000185FB C60003                          mov byte [rax], T_string
 31789 000185FE 48894801                        mov qword [rax + 1], rcx
 31790 00018602 41B800000000                    mov r8, 0
 31791                                  .L0:
 31792 00018608 4939C8                          cmp r8, rcx
 31793 0001860B 740A                            je .L1
 31794 0001860D 4188540009                      mov byte [rax + 1 + 8 + 1 * r8], dl
 31795 00018612 49FFC0                          inc r8
 31796 00018615 EBF1                            jmp .L0
 31797                                  .L1:
 31798 00018617 C9                              leave
 31799 00018618 C22000                          ret AND_KILL_FRAME(2)
 31800                                  
 31801                                  L_code_ptr_numerator:
 31802 0001861B C8000000                        enter 0, 0
 31803 0001861F 48837D1801                      cmp COUNT, 1
 31804 00018624 0F85AE010000                    jne L_error_arg_count_1
 31805 0001862A 488B4520                        mov rax, PARAM(0)
 31806                                          assert_fraction(rax)
    53 0001862E 803812              <1>  cmp byte [%1], %2
    54 00018631 0F8575020000        <1>  jne L_error_incorrect_type
 31807 00018637 488B7801                        mov rdi, qword [rax + 1]
 31808 0001863B E8E7000000                      call make_integer
 31809 00018640 C9                              leave
 31810 00018641 C21800                          ret AND_KILL_FRAME(1)
 31811                                          
 31812                                  L_code_ptr_denominator:
 31813 00018644 C8000000                        enter 0, 0
 31814 00018648 48837D1801                      cmp COUNT, 1
 31815 0001864D 0F8585010000                    jne L_error_arg_count_1
 31816 00018653 488B4520                        mov rax, PARAM(0)
 31817                                          assert_fraction(rax)
    53 00018657 803812              <1>  cmp byte [%1], %2
    54 0001865A 0F854C020000        <1>  jne L_error_incorrect_type
 31818 00018660 488B7809                        mov rdi, qword [rax + 1 + 8]
 31819 00018664 E8BE000000                      call make_integer
 31820 00018669 C9                              leave
 31821 0001866A C21800                          ret AND_KILL_FRAME(1)
 31822                                  
 31823                                  L_code_ptr_is_eq:
 31824 0001866D C8000000                	enter 0, 0
 31825 00018671 48837D1802              	cmp COUNT, 2
 31826 00018676 0F8591010000            	jne L_error_arg_count_2
 31827 0001867C 488B7D20                	mov rdi, PARAM(0)
 31828 00018680 488B7528                	mov rsi, PARAM(1)
 31829 00018684 4839F7                  	cmp rdi, rsi
 31830 00018687 746C                    	je .L_eq_true
 31831 00018689 8A17                    	mov dl, byte [rdi]
 31832 0001868B 3A16                    	cmp dl, byte [rsi]
 31833 0001868D 7572                    	jne .L_eq_false
 31834 0001868F 80FA02                  	cmp dl, T_char
 31835 00018692 7459                    	je .L_char
 31836 00018694 80FA41                  	cmp dl, T_interned_symbol
 31837 00018697 7440                    	je .L_interned_symbol
 31838 00018699 80FA42                          cmp dl, T_uninterned_symbol
 31839 0001869C 7443                            je .L_uninterned_symbol
 31840 0001869E 80FA13                  	cmp dl, T_real
 31841 000186A1 742E                    	je .L_real
 31842 000186A3 80FA12                  	cmp dl, T_fraction
 31843 000186A6 7413                    	je .L_fraction
 31844 000186A8 80FA11                          cmp dl, T_integer
 31845 000186AB 7402                            je .L_integer
 31846 000186AD EB52                    	jmp .L_eq_false
 31847                                  .L_integer:
 31848 000186AF 488B4601                        mov rax, qword [rsi + 1]
 31849 000186B3 483B4701                        cmp rax, qword [rdi + 1]
 31850 000186B7 7548                            jne .L_eq_false
 31851 000186B9 EB3A                            jmp .L_eq_true
 31852                                  .L_fraction:
 31853 000186BB 488B4601                	mov rax, qword [rsi + 1]
 31854 000186BF 483B4701                	cmp rax, qword [rdi + 1]
 31855 000186C3 753C                    	jne .L_eq_false
 31856 000186C5 488B4609                	mov rax, qword [rsi + 1 + 8]
 31857 000186C9 483B4709                	cmp rax, qword [rdi + 1 + 8]
 31858 000186CD 7532                    	jne .L_eq_false
 31859 000186CF EB24                    	jmp .L_eq_true
 31860                                  .L_real:
 31861 000186D1 488B4601                	mov rax, qword [rsi + 1]
 31862 000186D5 483B4701                	cmp rax, qword [rdi + 1]
 31863                                  .L_interned_symbol:
 31864                                  	; never reached, because interned_symbols are static!
 31865                                  	; but I'm keeping it in case, I'll ever change
 31866                                  	; the implementation
 31867 000186D9 488B4601                	mov rax, qword [rsi + 1]
 31868 000186DD 483B4701                	cmp rax, qword [rdi + 1]
 31869                                  .L_uninterned_symbol:
 31870 000186E1 4C8B4701                        mov r8, qword [rdi + 1]
 31871 000186E5 4C3B4601                        cmp r8, qword [rsi + 1]
 31872 000186E9 7516                            jne .L_eq_false
 31873 000186EB EB08                            jmp .L_eq_true
 31874                                  .L_char:
 31875 000186ED 8A5E01                  	mov bl, byte [rsi + 1]
 31876 000186F0 3A5F01                  	cmp bl, byte [rdi + 1]
 31877 000186F3 750C                    	jne .L_eq_false
 31878                                  .L_eq_true:
 31879 000186F5 48B8-                   	mov rax, sob_boolean_true
 31879 000186F7 [0300000000000000] 
 31880 000186FF EB0A                    	jmp .L_eq_exit
 31881                                  .L_eq_false:
 31882 00018701 48B8-                   	mov rax, sob_boolean_false
 31882 00018703 [0200000000000000] 
 31883                                  .L_eq_exit:
 31884 0001870B C9                      	leave
 31885 0001870C C22000                  	ret AND_KILL_FRAME(2)
 31886                                  
 31887                                  make_real:
 31888 0001870F C8000000                        enter 0, 0
 31889 00018713 BF09000000                      mov rdi, (1 + 8)
 31890 00018718 E8B4E3FFFF                      call malloc
 31891 0001871D C60013                          mov byte [rax], T_real
 31892 00018720 F20F114001                      movsd qword [rax + 1], xmm0
 31893 00018725 C9                              leave 
 31894 00018726 C3                              ret
 31895                                          
 31896                                  make_integer:
 31897 00018727 C8000000                        enter 0, 0
 31898 0001872B 4889FE                          mov rsi, rdi
 31899 0001872E BF09000000                      mov rdi, (1 + 8)
 31900 00018733 E899E3FFFF                      call malloc
 31901 00018738 C60011                          mov byte [rax], T_integer
 31902 0001873B 48897001                        mov qword [rax + 1], rsi
 31903 0001873F C9                              leave
 31904 00018740 C3                              ret
 31905                                          
 31906                                  L_error_integer_range:
 31907 00018741 488B3C25[00000000]              mov rdi, qword [stderr]
 31908 00018749 48BE-                           mov rsi, fmt_integer_range
 31908 0001874B [C81B000000000000] 
 31909 00018753 B800000000                      mov rax, 0
 31910                                          ENTER
    44 00018758 C8000000            <1>  enter 0, 0
    45 0001875C 4883E4F0            <1>  and rsp, ~15
 31911 00018760 E8(00000000)                    call fprintf
 31912                                          LEAVE
    49 00018765 C9                  <1>  leave
 31913 00018766 48C7C0FBFFFFFF                  mov rax, -5
 31914 0001876D E8(00000000)                    call exit
 31915                                  
 31916                                  L_error_arg_negative:
 31917 00018772 488B3C25[00000000]              mov rdi, qword [stderr]
 31918 0001877A 48BE-                           mov rsi, fmt_arg_negative
 31918 0001877C [A01A000000000000] 
 31919 00018784 B800000000                      mov rax, 0
 31920                                          ENTER
    44 00018789 C8000000            <1>  enter 0, 0
    45 0001878D 4883E4F0            <1>  and rsp, ~15
 31921 00018791 E8(00000000)                    call fprintf
 31922                                          LEAVE
    49 00018796 C9                  <1>  leave
 31923 00018797 48C7C0FDFFFFFF                  mov rax, -3
 31924 0001879E E8(00000000)                    call exit
 31925                                  
 31926                                  L_error_arg_count_0:
 31927 000187A3 488B3C25[00000000]              mov rdi, qword [stderr]
 31928 000187AB 48BE-                           mov rsi, fmt_arg_count_0
 31928 000187AD [C61A000000000000] 
 31929 000187B5 488B5518                        mov rdx, COUNT
 31930 000187B9 B800000000                      mov rax, 0
 31931                                          ENTER
    44 000187BE C8000000            <1>  enter 0, 0
    45 000187C2 4883E4F0            <1>  and rsp, ~15
 31932 000187C6 E8(00000000)                    call fprintf
 31933                                          LEAVE
    49 000187CB C9                  <1>  leave
 31934 000187CC 48C7C0FDFFFFFF                  mov rax, -3
 31935 000187D3 E8(00000000)                    call exit
 31936                                  
 31937                                  L_error_arg_count_1:
 31938 000187D8 488B3C25[00000000]              mov rdi, qword [stderr]
 31939 000187E0 48BE-                           mov rsi, fmt_arg_count_1
 31939 000187E2 [EE1A000000000000] 
 31940 000187EA 488B5518                        mov rdx, COUNT
 31941 000187EE B800000000                      mov rax, 0
 31942                                          ENTER
    44 000187F3 C8000000            <1>  enter 0, 0
    45 000187F7 4883E4F0            <1>  and rsp, ~15
 31943 000187FB E8(00000000)                    call fprintf
 31944                                          LEAVE
    49 00018800 C9                  <1>  leave
 31945 00018801 48C7C0FDFFFFFF                  mov rax, -3
 31946 00018808 E8(00000000)                    call exit
 31947                                  
 31948                                  L_error_arg_count_2:
 31949 0001880D 488B3C25[00000000]              mov rdi, qword [stderr]
 31950 00018815 48BE-                           mov rsi, fmt_arg_count_2
 31950 00018817 [541B000000000000] 
 31951 0001881F 488B5518                        mov rdx, COUNT
 31952 00018823 B800000000                      mov rax, 0
 31953                                          ENTER
    44 00018828 C8000000            <1>  enter 0, 0
    45 0001882C 4883E4F0            <1>  and rsp, ~15
 31954 00018830 E8(00000000)                    call fprintf
 31955                                          LEAVE
    49 00018835 C9                  <1>  leave
 31956 00018836 48C7C0FDFFFFFF                  mov rax, -3
 31957 0001883D E8(00000000)                    call exit
 31958                                  
 31959                                  L_error_arg_count_12:
 31960 00018842 488B3C25[00000000]              mov rdi, qword [stderr]
 31961 0001884A 48BE-                           mov rsi, fmt_arg_count_12
 31961 0001884C [141B000000000000] 
 31962 00018854 488B5518                        mov rdx, COUNT
 31963 00018858 B800000000                      mov rax, 0
 31964                                          ENTER
    44 0001885D C8000000            <1>  enter 0, 0
    45 00018861 4883E4F0            <1>  and rsp, ~15
 31965 00018865 E8(00000000)                    call fprintf
 31966                                          LEAVE
    49 0001886A C9                  <1>  leave
 31967 0001886B 48C7C0FDFFFFFF                  mov rax, -3
 31968 00018872 E8(00000000)                    call exit
 31969                                  
 31970                                  L_error_arg_count_3:
 31971 00018877 488B3C25[00000000]              mov rdi, qword [stderr]
 31972 0001887F 48BE-                           mov rsi, fmt_arg_count_3
 31972 00018881 [7B1B000000000000] 
 31973 00018889 488B5518                        mov rdx, COUNT
 31974 0001888D B800000000                      mov rax, 0
 31975                                          ENTER
    44 00018892 C8000000            <1>  enter 0, 0
    45 00018896 4883E4F0            <1>  and rsp, ~15
 31976 0001889A E8(00000000)                    call fprintf
 31977                                          LEAVE
    49 0001889F C9                  <1>  leave
 31978 000188A0 48C7C0FDFFFFFF                  mov rax, -3
 31979 000188A7 E8(00000000)                    call exit
 31980                                          
 31981                                  L_error_incorrect_type:
 31982 000188AC 488B3C25[00000000]              mov rdi, qword [stderr]
 31983 000188B4 48BE-                           mov rsi, fmt_type
 31983 000188B6 [A41B000000000000] 
 31984 000188BE B800000000                      mov rax, 0
 31985                                          ENTER
    44 000188C3 C8000000            <1>  enter 0, 0
    45 000188C7 4883E4F0            <1>  and rsp, ~15
 31986 000188CB E8(00000000)                    call fprintf
 31987                                          LEAVE
    49 000188D0 C9                  <1>  leave
 31988 000188D1 48C7C0FCFFFFFF                  mov rax, -4
 31989 000188D8 E8(00000000)                    call exit
 31990                                  
 31991                                  L_error_division_by_zero:
 31992 000188DD 488B3C25[00000000]              mov rdi, qword [stderr]
 31993 000188E5 48BE-                           mov rsi, fmt_division_by_zero
 31993 000188E7 [E51B000000000000] 
 31994 000188EF B800000000                      mov rax, 0
 31995                                          ENTER
    44 000188F4 C8000000            <1>  enter 0, 0
    45 000188F8 4883E4F0            <1>  and rsp, ~15
 31996 000188FC E8(00000000)                    call fprintf
 31997                                          LEAVE
    49 00018901 C9                  <1>  leave
 31998 00018902 48C7C0F8FFFFFF                  mov rax, -8
 31999 00018909 E8(00000000)                    call exit
 32000                                  
 32001                                  section .data
 32002                                  gensym_count:
 32003 00001A95 0000000000000000                dq 0
 32004                                  fmt_char:
 32005 00001A9D 256300                          db `%c\0`
 32006                                  fmt_arg_negative:
 32007 00001AA0 212121205468652061-             db `!!! The argument cannot be negative.\n\0`
 32007 00001AA9 7267756D656E742063-
 32007 00001AB2 616E6E6F7420626520-
 32007 00001ABB 6E656761746976652E-
 32007 00001AC4 0A00               
 32008                                  fmt_arg_count_0:
 32009 00001AC6 212121204578706563-             db `!!! Expecting zero arguments. Found %d\n\0`
 32009 00001ACF 74696E67207A65726F-
 32009 00001AD8 20617267756D656E74-
 32009 00001AE1 732E20466F756E6420-
 32009 00001AEA 25640A00           
 32010                                  fmt_arg_count_1:
 32011 00001AEE 212121204578706563-             db `!!! Expecting one argument. Found %d\n\0`
 32011 00001AF7 74696E67206F6E6520-
 32011 00001B00 617267756D656E742E-
 32011 00001B09 20466F756E64202564-
 32011 00001B12 0A00               
 32012                                  fmt_arg_count_12:
 32013 00001B14 212121204578706563-             db `!!! Expecting one required and one optional argument. Found %d\n\0`
 32013 00001B1D 74696E67206F6E6520-
 32013 00001B26 726571756972656420-
 32013 00001B2F 616E64206F6E65206F-
 32013 00001B38 7074696F6E616C2061-
 32013 00001B41 7267756D656E742E20-
 32013 00001B4A 466F756E642025640A-
 32013 00001B53 00                 
 32014                                  fmt_arg_count_2:
 32015 00001B54 212121204578706563-             db `!!! Expecting two arguments. Found %d\n\0`
 32015 00001B5D 74696E672074776F20-
 32015 00001B66 617267756D656E7473-
 32015 00001B6F 2E20466F756E642025-
 32015 00001B78 640A00             
 32016                                  fmt_arg_count_3:
 32017 00001B7B 212121204578706563-             db `!!! Expecting three arguments. Found %d\n\0`
 32017 00001B84 74696E672074687265-
 32017 00001B8D 6520617267756D656E-
 32017 00001B96 74732E20466F756E64-
 32017 00001B9F 2025640A00         
 32018                                  fmt_type:
 32019 00001BA4 2121212046756E6374-             db `!!! Function passed incorrect type\n\0`
 32019 00001BAD 696F6E207061737365-
 32019 00001BB6 6420696E636F727265-
 32019 00001BBF 637420747970650A00 
 32020                                  fmt_integer_range:
 32021 00001BC8 21212120496E636F72-             db `!!! Incorrect integer range\n\0`
 32021 00001BD1 7265637420696E7465-
 32021 00001BDA 6765722072616E6765-
 32021 00001BE3 0A00               
 32022                                  fmt_division_by_zero:
 32023 00001BE5 212121204469766973-             db `!!! Division by zero\n\0`
 32023 00001BEE 696F6E206279207A65-
 32023 00001BF7 726F0A00           
 32024                                  fmt_scheme_error_part_1:
 32025 00001BFB 0A2121212054686520-             db `\n!!! The procedure \0`
 32025 00001C04 70726F636564757265-
 32025 00001C0D 2000               
 32026                                  fmt_scheme_error_part_2:
 32027 00001C0F 2061736B656420746F-             db ` asked to terminate the program\n`
 32027 00001C18 207465726D696E6174-
 32027 00001C21 65207468652070726F-
 32027 00001C2A 6772616D0A         
 32028 00001C2F 202020207769746820-             db `    with the following message:\n\n\0`
 32028 00001C38 74686520666F6C6C6F-
 32028 00001C41 77696E67206D657373-
 32028 00001C4A 6167653A0A0A00     
 32029                                  fmt_scheme_error_part_3:
 32030 00001C51 0A0A476F6F64627965-             db `\n\nGoodbye!\n\n\0`
 32030 00001C5A 210A0A00           
